// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 21/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _2066adc7c_acceptRange;
struct _206713892_LittleEndian;
struct _20672d04e_u128;
struct _1d8328492_group;
struct _1d8374466_group;
struct _1d8327419_mapData;
struct _1d8373388_mapData;
struct _1d83252b3__Map;
struct _1d83713ec__Map;
struct _1d83303cd_mapIterator;
struct _1d8379416_mapIterator;
struct _20759e353_StrBuilder;
struct _208724a8d_Range16;
struct _2087250bb_Range32;
struct _20872553e_RangeTable;
struct _208772d2d_lazyBuff;
struct _238ad88a0_DirEntry;
struct _238ad8b36_Directory;
struct _238ad9d35_File;
struct _238adbe69_Status;
struct _20881dc64_cmdAttrs;
struct _20806e73a_Log;
struct _1dd6e85b5_floatInfo;
struct _1dd6e9242_decimalSlice;
struct _1dd70b485_leftCheat;
struct _1dd70be9c_decimal;
struct _1dd71e850_Const;
struct _1c661e327_Token;
struct _1c6624aad_File;
struct _1c6626c14_kindPair;
struct _1c662cbe8_lex;
struct _1c6632945_AST;
struct _1c6633902_Node;
struct _1c6633d20_Directive;
struct _1c6634903_TypeDecl;
struct _1c663500d_IdentTypeDecl;
struct _1c66352c7_SubIdentTypeDecl;
struct _1c66356a1_NamespaceTypeDecl;
struct _1c663599d_SptrTypeDecl;
struct _1c6635d33_SlcTypeDecl;
struct _1c6636130_TupleTypeDecl;
struct _1c663642c_PtrTypeDecl;
struct _1c6636bbe_ArrTypeDecl;
struct _1c663741c_MapTypeDecl;
struct _1c66377e6_RetTypeDecl;
struct _1c6638c37_Expr;
struct _1c6639001_RangeExpr;
struct _1c663960b_UseExpr;
struct _1c663982b_TupleExpr;
struct _1c6639bc2_LitExpr;
struct _1c663a09b_UnsafeExpr;
struct _1c663a552_IdentExpr;
struct _1c663ace4_UnaryExpr;
struct _1c663b1bd_VariadicExpr;
struct _1c663b597_CastExpr;
struct _1c663b971_NsSelectionExpr;
struct _1c663bd4a_SubIdentExpr;
struct _1c663c301_BinaryExpr;
struct _1c663c961_FnCallExpr;
struct _1c663d456_FieldExprPair;
struct _1c663dc81_StructLit;
struct _1c663e237_BraceLit;
struct _1c663ea62_KeyValPair;
struct _1c664028d_SliceExpr;
struct _1c6640bea_IndexingExpr;
struct _1c664135a_SlicingExpr;
struct _1c6641657_Constraint;
struct _1c6641b0d_GenericDecl;
struct _1c6641ed7_LabelSt;
struct _1c66423b1_GotoSt;
struct _1c66426ad_FallSt;
struct _1c6642d1d_AssignLeft;
struct _1c66433a1_AssignSt;
struct _1c66442b4_Stmt;
struct _1c6644924_ScopeTree;
struct _1c6645161_ParamDecl;
struct _1c66465b3_FnDecl;
struct _1c664776d_VarDecl;
struct _1c6647b47_RetSt;
struct _1c66483b7_Iter;
struct _1c6648be2_WhileKind;
struct _1c66495e9_RangeKind;
struct _1c66499c3_BreakSt;
struct _1c6649d9c_ContSt;
struct _1c664a353_If;
struct _1c664a72c_Else;
struct _1c664abd3_Conditional;
struct _1c664b420_TypeAliasDecl;
struct _1c664b8c6_Case;
struct _1c664c1e0_MatchCase;
struct _1c664ca09_UseDecl;
struct _1c664ceb0_EnumItemDecl;
struct _1c664da71_EnumDecl;
struct _1c664e39b_TypeEnumItemDecl;
struct _1c664ea0b_TypeEnumDecl;
struct _1c664ecc5_FieldDecl;
struct _1c66506bb_StructDecl;
struct _1c6650e08_TraitDecl;
struct _1c6651568_Impl;
struct _1c66528cc_Field;
struct _1c66548e0_Operators;
struct _1c6655803_Struct;
struct _1c6657aad_FieldIns;
struct _1c665865d_StructIns;
struct _1c665c51e_OperandExprModel;
struct _1c665ca19_BinaryExprModel;
struct _1c665cde3_UnaryExprModel;
struct _1c665d421_StructArgExprModel;
struct _1c665d7b7_StructLitExprModel;
struct _1c665dab4_AllocStructLitExprModel;
struct _1c665e147_CastingExprModel;
struct _1c665e9e9_FnCallExprModel;
struct _1c665edc3_SliceExprModel;
struct _1c6660379_IndexingExprModel;
struct _1c6660830_AnonFnExprModel;
struct _1c6660c09_KeyValPairExprModel;
struct _1c66610d3_MapExprModel;
struct _1c6661666_SlicingExprModel;
struct _1c6661be9_TraitSubIdentExprModel;
struct _1c666258a_StructSubIdentExprModel;
struct _1c6662931_StructStaticIdentExprModel;
struct _1c6662d0a_ArrayExprModel;
struct _1c6663107_TupleExprModel;
struct _1c66634d1_BuiltinOutCallExprModel;
struct _1c66638aa_BuiltinOutlnCallExprModel;
struct _1c6663c84_BuiltinNewCallExprModel;
struct _1c666415d_BuiltinPanicCallExprModel;
struct _1c6664614_BuiltinAssertCallExprModel;
struct _1c6664aba_BuiltinMakeCallExprModel;
struct _1c6664e94_BuiltinAppendCallExprModel;
struct _1c6665291_BuiltinLenCallExprModel;
struct _1c666558d_BuiltinCapCallExprModel;
struct _1c6665967_BuiltinDeleteCallExprModel;
struct _1c6665d41_BuiltinCopyCallExprModel;
struct _1c666621a_BuiltinErrorCallExprModel;
struct _1c66668be_SizeofExprModel;
struct _1c6666aab_AlignofExprModel;
struct _1c6666d53_RuneExprModel;
struct _1c666722c_BackendEmitExprModel;
struct _1c6667529_FreeExprModel;
struct _1c666832c_RetType;
struct _1c6668a47_Param;
struct _1c666a51b_Fn;
struct _1c666c474_ParamIns;
struct _1c666d4ec_FnIns;
struct _1c6671687_ReferenceStack;
struct _1c6672b94_Pass;
struct _1c6677649_symbolBuilder;
struct _1c667de9c_Trait;
struct _1c6680b3b_EnumItem;
struct _1c66816a8_Enum;
struct _1c66827db_TypeEnumItem;
struct _1c6682db3_TypeEnum;
struct _1c66857de_comptimeRange;
struct _1c668634a_comptimeStructField;
struct _1c6687add_comptimeStructFields;
struct _1c668956d_comptimeStatic;
struct _1c668ad22_comptimeStatics;
struct _1c668c791_comptimeEnumField;
struct _1c668daa0_comptimeEnumFields;
struct _1c66905a7_comptimeParam;
struct _1c6692411_comptimeParams;
struct _1c6693c70_comptimeTypeInfos;
struct _1c66956de_comptimeTypeInfo;
struct _1c669b7e4_comptimeValue;
struct _1c669e550_comptimeFiles;
struct _1c66a0ebe_comptimeFile;
struct _1c66a2ae7_comptimeDecls;
struct _1c66a4dd5_comptimeDecl;
struct _1c66ab98b_constraintChecker;
struct _1c66adce0_Impl;
struct _1c66b35b9_Scope;
struct _1c66b39d7_If;
struct _1c66b3cd4_Else;
struct _1c66b4202_Conditional;
struct _1c66b44ee_InfIter;
struct _1c66b49a5_WhileIter;
struct _1c66b5401_RangeIter;
struct _1c66b5786_ContSt;
struct _1c66b5b60_BreakSt;
struct _1c66b6116_Label;
struct _1c66b6776_GotoSt;
struct _1c66b6b50_Postfix;
struct _1c66b7106_Assign;
struct _1c66b75ac_MultiAssign;
struct _1c66b7ce9_Match;
struct _1c66b8822_Case;
struct _1c66b901a_FallSt;
struct _1c66b93b1_RetSt;
struct _1c66b9867_scopeLabel;
struct _1c66ba857_scopeChecker;
struct _1c66ce7e4_directiveChecker;
struct _1c66d63cd_ImportInfo;
struct _1c66d9304_Package;
struct _1c6705c27_commonSemaMeta;
struct _1c670684e_sema;
struct _1c672760b_missingRetChecker;
struct _1c672acb3_Var;
struct _1c672bd4c_FuncPattern;
struct _1c67703e0_typeCompatibilityChecker;
struct _1c677226b_assignTypeChecker;
struct _1c6773b41_dynamicTypeAnnotation;
struct _1c677899d_fnCallArgChecker;
struct _1c677b8d5_structLitChecker;
struct _1c677d6b7_rangeChecker;
struct _1c6780e28_retTypeChecker;
struct _1c678348b_SymbolTable;
struct _1c6788b56_Data;
struct _1c6789ccd_Value;
struct _1c678a87d_eval;
struct _1c67a9b77_unaryEval;
struct _1c67abb13_binaryEval;
struct _1c67b9eea_InsGeneric;
struct _1c67baade_TypeAlias;
struct _1c67bb8d1_TypeKind;
struct _1c67c40e2_TypeSymbol;
struct _1c67c49e9_Prim;
struct _1c67c8525_Sptr;
struct _1c67c8ee8_Slc;
struct _1c67c9adc_Tuple;
struct _1c67ca68c_Map;
struct _1c67cb319_Arr;
struct _1c67cbcdc_Ptr;
struct _1c67cccdd_referencer;
struct _1c67cdccd_typeChecker;
struct _1c67d6d91_identTypeLookup;
struct _1c6c9de3a_FileInfo;
struct _1c737c4a2_stmt;
struct _1c737cd43_scopeParser;
struct _1c738a7ac_exprBuilder;
struct _1c7397ec3_assignInfo;
struct _1c739b3c2_parser;
struct _1c73ad4e4_typeBuilder;
struct _1c6a8601e_CompileInfo;
struct _1c6a874e8_directiveEval;
struct _1c73b24d7_JuleImporter;
struct _1c73b8cc4_ExprInspector;
struct _1c73c02e7_OrderedDefines;
struct _1c75091de_specialCaseDefines;
struct _1c7509b07_liveTable;
struct _1c750a0ad_ObjectDeadCode;
struct _1c750e1d3_scopeDeadCode;
struct _1c751387a_exprDeadCode;
struct _1c68b7081_ExceptionalForwardingExprModel;
struct _1c68b7416_SwapExprModel;
struct _1c68b77e0_EmptyCompareExprModel;
struct _1c68b7b64_RefExprModel;
struct _1c68b80d7_StrCompExprModel;
struct _1c68b866a_MutSlicingExprModel;
struct _1c68b8967_UnsafeBinaryExprModel;
struct _1c68b8cec_UnsafeIndexingExprModel;
struct _1c68b91c6_PushToSliceExprModel;
struct _1c68b95a0_AppendToSliceExprModel;
struct _1c68b9979_StrRuneIter;
struct _1c68b9c76_UnsafeDerefExprModel;
struct _1c68ba073_UnsafeCastingExprModel;
struct _1c68bac55_nilVar;
struct _1c68bb096_nils;
struct _1c73c19be_scopeOptimizer;
struct _1c73c8421_exprOptimizer;
struct _1c73cd811_dynamicVar;
struct _1c73cdb52_dynamic;
struct _1c73d17d1_data;
struct _1c73d2d87_boundaryVar;
struct _1c73d31c8_boundary;
struct _1c751499c_Optimizer;
struct _1c753ae57_AnsiEscape;
struct _1c753c50d_Logger;
struct _1d4c97c8e_AbsTime;
struct _1d4c98465_Time;
struct _1d4bbe91e_scopeCoder;
struct _1d4bcb200_exprCoder;
struct _1d4bddc5c_TestCoder;
struct _1d4be1bd8_identCoder;
struct _1d4ca1eeb_SerializationInfo;
struct _1d4ca2419_traitCast;
struct _1d4ca27e3_anonHash;
struct _1d4ca3c9a_ObjectCoder;
struct _1d4cb2b22_customType;
struct _1d4cb375a_typeCoder;
struct _1d4cbb345_resultCoder;
struct _1d8b10b58_Flag;
struct _1d8b14475_Flag;
struct _1d8b17b82_Flag;
struct _1d8b1b3d3_Flag;
struct _1d8b1eae0_Flag;
struct _1d4d373d3_FlagSet;
struct _1d4d39d97_argParser;
struct _1c73b4d7a_IR;
struct _1c73d12d6_dataCheckpoint;
struct _208819a0c_Cmd;
struct _2066adc7c_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _2066adc7c_acceptRange_eq(_2066adc7c_acceptRange *_self_, _2066adc7c_acceptRange _other_);


struct _206713892_LittleEndian {
	

};
inline jule::Bool _206713892_LittleEndian_eq(_206713892_LittleEndian *_self_, _206713892_LittleEndian _other_);


struct _20672d04e_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
	

};
inline jule::Bool _20672d04e_u128_eq(_20672d04e_u128 *_self_, _20672d04e_u128 _other_);


struct _1d8328492_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
	

};
inline jule::Bool _1d8328492_group_eq(_1d8328492_group *_self_, _1d8328492_group _other_);

struct _1d8374466_group {
	jule::Array<jule::Ptr<_1c666d4ec_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
	

};
struct _1d8327419_mapData {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1d8328492_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};struct _1d8373388_mapData {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1d8374466_group> _field_groups;
	jule::I64 _field_resident;
	jule::I64 _field_dead;
	jule::I64 _field_limit;
	

};
struct _1d83252b3__Map {
	jule::Ptr<_1d8327419_mapData> _field_data;
	

};
inline jule::Bool _1d83252b3__Map_eq(_1d83252b3__Map *_self_, _1d83252b3__Map _other_);

struct _1d83713ec__Map {
	jule::Ptr<_1d8373388_mapData> _field_data;
	

};
inline jule::Bool _1d83713ec__Map_eq(_1d83713ec__Map *_self_, _1d83713ec__Map _other_);


struct _1d83303cd_mapIterator {
	_1d83252b3__Map _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1d8328492_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};struct _1d8379416_mapIterator {
	_1d83713ec__Map _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1d8374466_group> _field_groups;
	jule::I64 _field_n;
	jule::I64 _field_g;
	jule::I64 _field_s;
	

};
struct _20759e353_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _208724a8d_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _208724a8d_Range16_eq(_208724a8d_Range16 *_self_, _208724a8d_Range16 _other_);


struct _2087250bb_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _2087250bb_Range32_eq(_2087250bb_Range32 *_self_, _2087250bb_Range32 _other_);


struct _20872553e_RangeTable {
	jule::Slice<_208724a8d_Range16> _field_R16;
	jule::Slice<_2087250bb_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _208772d2d_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _238ad88a0_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_238adbe69_Status> _field_Stat;
	

};
inline jule::Bool _238ad88a0_DirEntry_eq(_238ad88a0_DirEntry *_self_, _238ad88a0_DirEntry _other_);


struct _238ad8b36_Directory {
	

};
inline jule::Bool _238ad8b36_Directory_eq(_238ad8b36_Directory *_self_, _238ad8b36_Directory _other_);


struct _238ad9d35_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _238ad9d35_File_eq(_238ad9d35_File *_self_, _238ad9d35_File _other_);


struct _238adbe69_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _238adbe69_Status_eq(_238adbe69_Status *_self_, _238adbe69_Status _other_);


struct _20881dc64_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
	

};
inline jule::Bool _20881dc64_cmdAttrs_eq(_20881dc64_cmdAttrs *_self_, _20881dc64_cmdAttrs _other_);


struct _20806e73a_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _20806e73a_Log_eq(_20806e73a_Log *_self_, _20806e73a_Log _other_);


struct _1dd6e85b5_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1dd6e85b5_floatInfo_eq(_1dd6e85b5_floatInfo *_self_, _1dd6e85b5_floatInfo _other_);


struct _1dd6e9242_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1dd70b485_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1dd70b485_leftCheat_eq(_1dd70b485_leftCheat *_self_, _1dd70b485_leftCheat _other_);


struct _1dd70be9c_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1dd70be9c_decimal_eq(_1dd70be9c_decimal *_self_, _1dd70be9c_decimal _other_);


inline jule::Bool _1dd725438_Eq(_1dd71e850_Const* _self_, _1dd71e850_Const _26014_x);
inline jule::Bool _1dd725779_Lt(_1dd71e850_Const* _self_, _1dd71e850_Const _28714_x);
inline jule::Bool _1dd725aba_LtEq(_1dd71e850_Const* _self_, _1dd71e850_Const _31016_x);
inline jule::Bool _1dd725e0b_Gt(_1dd71e850_Const* _self_, _1dd71e850_Const _33314_x);
inline jule::Bool _1dd72624c_GtEq(_1dd71e850_Const* _self_, _1dd71e850_Const _35616_x);
struct _1dd71e850_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1c661e327_Token {
	jule::Ptr<_1c6624aad_File> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1c661e327_Token_eq(_1c661e327_Token *_self_, _1c661e327_Token _other_);


struct _1c6624aad_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Tokens;
	

};
struct _1c6626c14_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1c6626c14_kindPair_eq(_1c6626c14_kindPair *_self_, _1c6626c14_kindPair _other_);


struct _1c662cbe8_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_tokens;
	jule::Ptr<_1c6624aad_File> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_20806e73a_Log> _field_errors;
	

};
struct _1c6632945_AST {
	jule::Ptr<_1c6624aad_File> _field_File;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c664ca09_UseDecl>> _field_UseDecls;
	jule::Slice<_1c6633902_Node> _field_Nodes;
	

};
struct _1c6633902_Node {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1c6633902_Node_eq(_1c6633902_Node *_self_, _1c6633902_Node _other_);


struct _1c6633d20_Directive {
	jule::Ptr<_1c661e327_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Args;
	

};
struct _1c6634903_TypeDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1c6634903_TypeDecl_eq(_1c6634903_TypeDecl *_self_, _1c6634903_TypeDecl _other_);


struct _1c663500d_IdentTypeDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _field_Generics;
	

};
struct _1c66352c7_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>> _field_Idents;
	

};
struct _1c66356a1_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Idents;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	

};
struct _1c663599d_SptrTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c663599d_SptrTypeDecl_eq(_1c663599d_SptrTypeDecl *_self_, _1c663599d_SptrTypeDecl _other_);


struct _1c6635d33_SlcTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c6635d33_SlcTypeDecl_eq(_1c6635d33_SlcTypeDecl *_self_, _1c6635d33_SlcTypeDecl _other_);


struct _1c6636130_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _field_Types;
	

};
struct _1c663642c_PtrTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c663642c_PtrTypeDecl_eq(_1c663642c_PtrTypeDecl *_self_, _1c663642c_PtrTypeDecl _other_);


struct _1c6636bbe_ArrTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Elem;
	jule::Ptr<_1c6638c37_Expr> _field_Size;
	

};
inline jule::Bool _1c6636bbe_ArrTypeDecl_eq(_1c6636bbe_ArrTypeDecl *_self_, _1c6636bbe_ArrTypeDecl _other_);


struct _1c663741c_MapTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Key;
	jule::Ptr<_1c6634903_TypeDecl> _field_Val;
	

};
inline jule::Bool _1c663741c_MapTypeDecl_eq(_1c663741c_MapTypeDecl *_self_, _1c663741c_MapTypeDecl _other_);


struct _1c66377e6_RetTypeDecl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Idents;
	

};
struct _1c6638c37_Expr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1c6638c37_Expr_eq(_1c6638c37_Expr *_self_, _1c6638c37_Expr _other_);


struct _1c6639001_RangeExpr {
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c6639001_RangeExpr_eq(_1c6639001_RangeExpr *_self_, _1c6639001_RangeExpr _other_);


struct _1c663960b_UseExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663960b_UseExpr_eq(_1c663960b_UseExpr *_self_, _1c663960b_UseExpr _other_);


struct _1c663982b_TupleExpr {
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Expr;
	

};
struct _1c6639bc2_LitExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1c6639bc2_LitExpr_eq(_1c6639bc2_LitExpr *_self_, _1c6639bc2_LitExpr _other_);


struct _1c663a09b_UnsafeExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663a09b_UnsafeExpr_eq(_1c663a09b_UnsafeExpr *_self_, _1c663a09b_UnsafeExpr _other_);


struct _1c663a552_IdentExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1c663a552_IdentExpr_eq(_1c663a552_IdentExpr *_self_, _1c663a552_IdentExpr _other_);


struct _1c663ace4_UnaryExpr {
	jule::Ptr<_1c661e327_Token> _field_Op;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663ace4_UnaryExpr_eq(_1c663ace4_UnaryExpr *_self_, _1c663ace4_UnaryExpr _other_);


struct _1c663b1bd_VariadicExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663b1bd_VariadicExpr_eq(_1c663b1bd_VariadicExpr *_self_, _1c663b1bd_VariadicExpr _other_);


struct _1c663b597_CastExpr {
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663b597_CastExpr_eq(_1c663b597_CastExpr *_self_, _1c663b597_CastExpr _other_);


struct _1c663b971_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Ns;
	jule::Ptr<_1c661e327_Token> _field_Ident;
	

};
struct _1c663bd4a_SubIdentExpr {
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c661e327_Token> _field_Ident;
	

};
inline jule::Bool _1c663bd4a_SubIdentExpr_eq(_1c663bd4a_SubIdentExpr *_self_, _1c663bd4a_SubIdentExpr _other_);


struct _1c663c301_BinaryExpr {
	jule::Ptr<_1c6638c37_Expr> _field_Left;
	jule::Ptr<_1c6638c37_Expr> _field_Right;
	jule::Ptr<_1c661e327_Token> _field_Op;
	

};
inline jule::Bool _1c663c301_BinaryExpr_eq(_1c663c301_BinaryExpr *_self_, _1c663c301_BinaryExpr _other_);


struct _1c663c961_FnCallExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Args;
	jule::Ptr<_1c6644924_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1c663d456_FieldExprPair {
	jule::Ptr<_1c661e327_Token> _field_Field;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c663d456_FieldExprPair_eq(_1c663d456_FieldExprPair *_self_, _1c663d456_FieldExprPair _other_);


struct _1c663dc81_StructLit {
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Exprs;
	

};
struct _1c663e237_BraceLit {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Exprs;
	

};
struct _1c663ea62_KeyValPair {
	jule::Ptr<_1c6638c37_Expr> _field_Key;
	jule::Ptr<_1c6638c37_Expr> _field_Val;
	jule::Ptr<_1c661e327_Token> _field_Colon;
	

};
inline jule::Bool _1c663ea62_KeyValPair_eq(_1c663ea62_KeyValPair *_self_, _1c663ea62_KeyValPair _other_);


struct _1c664028d_SliceExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Exprs;
	

};
struct _1c6640bea_IndexingExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c6638c37_Expr> _field_Index;
	

};
inline jule::Bool _1c6640bea_IndexingExpr_eq(_1c6640bea_IndexingExpr *_self_, _1c6640bea_IndexingExpr _other_);


struct _1c664135a_SlicingExpr {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c6638c37_Expr> _field_Start;
	jule::Ptr<_1c6638c37_Expr> _field_To;
	

};
inline jule::Bool _1c664135a_SlicingExpr_eq(_1c664135a_SlicingExpr *_self_, _1c664135a_SlicingExpr _other_);


struct _1c6641657_Constraint {
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _field_Mask;
	

};
struct _1c6641b0d_GenericDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6641657_Constraint> _field_Constraint;
	

};
inline jule::Bool _1c6641b0d_GenericDecl_eq(_1c6641b0d_GenericDecl *_self_, _1c6641b0d_GenericDecl _other_);


struct _1c6641ed7_LabelSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c6641ed7_LabelSt_eq(_1c6641ed7_LabelSt *_self_, _1c6641ed7_LabelSt _other_);


struct _1c66423b1_GotoSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_Label;
	

};
inline jule::Bool _1c66423b1_GotoSt_eq(_1c66423b1_GotoSt *_self_, _1c66423b1_GotoSt _other_);


struct _1c66426ad_FallSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	

};
inline jule::Bool _1c66426ad_FallSt_eq(_1c66426ad_FallSt *_self_, _1c66426ad_FallSt _other_);


struct _1c6642d1d_AssignLeft {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c6642d1d_AssignLeft_eq(_1c6642d1d_AssignLeft *_self_, _1c6642d1d_AssignLeft _other_);


struct _1c66433a1_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1c661e327_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> _field_Left;
	jule::Ptr<_1c6638c37_Expr> _field_Right;
	

};
struct _1c66442b4_Stmt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1c66442b4_Stmt_eq(_1c66442b4_Stmt *_self_, _1c66442b4_Stmt _other_);


struct _1c6644924_ScopeTree {
	jule::Ptr<_1c6644924_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1c66442b4_Stmt> _field_Stmts;
	jule::Ptr<_1c661e327_Token> _field_End;
	

};
struct _1c6645161_ParamDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c6645161_ParamDecl_eq(_1c6645161_ParamDecl *_self_, _1c6645161_ParamDecl _other_);


struct _1c66465b3_FnDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_Generics;
	jule::Ptr<_1c66377e6_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> _field_Params;
	

};
struct _1c664776d_VarDecl {
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
struct _1c6647b47_RetSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c6647b47_RetSt_eq(_1c6647b47_RetSt *_self_, _1c6647b47_RetSt _other_);


struct _1c66483b7_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c66483b7_Iter_eq(_1c66483b7_Iter *_self_, _1c66483b7_Iter _other_);


struct _1c6648be2_WhileKind {
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1c661e327_Token> _field_NextToken;
	

};
inline jule::Bool _1c6648be2_WhileKind_eq(_1c6648be2_WhileKind *_self_, _1c6648be2_WhileKind _other_);


struct _1c66495e9_RangeKind {
	jule::Ptr<_1c661e327_Token> _field_InToken;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c664776d_VarDecl> _field_KeyA;
	jule::Ptr<_1c664776d_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1c66495e9_RangeKind_eq(_1c66495e9_RangeKind *_self_, _1c66495e9_RangeKind _other_);


struct _1c66499c3_BreakSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_Label;
	

};
inline jule::Bool _1c66499c3_BreakSt_eq(_1c66499c3_BreakSt *_self_, _1c66499c3_BreakSt _other_);


struct _1c6649d9c_ContSt {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_Label;
	

};
inline jule::Bool _1c6649d9c_ContSt_eq(_1c6649d9c_ContSt *_self_, _1c6649d9c_ContSt _other_);


struct _1c664a353_If {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c664a353_If_eq(_1c664a353_If *_self_, _1c664a353_If _other_);


struct _1c664a72c_Else {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c664a72c_Else_eq(_1c664a72c_Else *_self_, _1c664a72c_Else _other_);


struct _1c664abd3_Conditional {
	jule::Ptr<_1c664a353_If> _field_Head;
	jule::Slice<jule::Ptr<_1c664a353_If>> _field_Tail;
	jule::Ptr<_1c664a72c_Else> _field_Default;
	

};
struct _1c664b420_TypeAliasDecl {
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1c664b420_TypeAliasDecl_eq(_1c664b420_TypeAliasDecl *_self_, _1c664b420_TypeAliasDecl _other_);


struct _1c664b8c6_Case {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_Exprs;
	

};
struct _1c664c1e0_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c664b8c6_Case>> _field_Cases;
	jule::Ptr<_1c664a72c_Else> _field_Default;
	

};
struct _1c664ca09_UseDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1c664ceb0_EnumItemDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	

};
inline jule::Bool _1c664ceb0_EnumItemDecl_eq(_1c664ceb0_EnumItemDecl *_self_, _1c664ceb0_EnumItemDecl _other_);


struct _1c664da71_EnumDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c661e327_Token> _field_End;
	

};
struct _1c664e39b_TypeEnumItemDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1c664e39b_TypeEnumItemDecl_eq(_1c664e39b_TypeEnumItemDecl *_self_, _1c664e39b_TypeEnumItemDecl _other_);


struct _1c664ea0b_TypeEnumDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c661e327_Token> _field_End;
	

};
struct _1c664ecc5_FieldDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1c6634903_TypeDecl> _field_Kind;
	jule::Ptr<_1c6638c37_Expr> _field_Default;
	

};
inline jule::Bool _1c664ecc5_FieldDecl_eq(_1c664ecc5_FieldDecl *_self_, _1c664ecc5_FieldDecl _other_);


struct _1c66506bb_StructDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_Generics;
	

};
struct _1c6650e08_TraitDecl {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c66465b3_FnDecl>> _field_Methods;
	

};
struct _1c6651568_Impl {
	jule::Ptr<_1c661e327_Token> _field_End;
	jule::Ptr<_1c6634903_TypeDecl> _field_Base;
	jule::Ptr<_1c6634903_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c66465b3_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _field_Statics;
	

};
struct _1c66528cc_Field {
	jule::Ptr<_1c6655803_Struct> _field_Owner;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Ptr<_1c6638c37_Expr> _field_Default;
	

};
inline jule::Bool _1c66528cc_Field_eq(_1c66528cc_Field *_self_, _1c66528cc_Field _other_);


struct _1c66548e0_Operators {
	jule::Ptr<_1c666d4ec_FnIns> _field_Eq;
	jule::Ptr<_1c666d4ec_FnIns> _field_Gt;
	jule::Ptr<_1c666d4ec_FnIns> _field_GtEq;
	jule::Ptr<_1c666d4ec_FnIns> _field_Lt;
	jule::Ptr<_1c666d4ec_FnIns> _field_LtEq;
	jule::Ptr<_1c666d4ec_FnIns> _field_Shl;
	jule::Ptr<_1c666d4ec_FnIns> _field_Shr;
	jule::Ptr<_1c666d4ec_FnIns> _field_Add;
	jule::Ptr<_1c666d4ec_FnIns> _field_Sub;
	jule::Ptr<_1c666d4ec_FnIns> _field_Div;
	jule::Ptr<_1c666d4ec_FnIns> _field_Mul;
	jule::Ptr<_1c666d4ec_FnIns> _field_Mod;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitAnd;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitOr;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitXor;
	jule::Ptr<_1c666d4ec_FnIns> _field_Neg;
	jule::Ptr<_1c666d4ec_FnIns> _field_Pos;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitNot;
	jule::Ptr<_1c666d4ec_FnIns> _field_AddAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_SubAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_DivAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_MulAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_ModAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_ShlAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_ShrAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c666d4ec_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1c66548e0_Operators_eq(_1c66548e0_Operators *_self_, _1c66548e0_Operators _other_);


struct _1c6655803_Struct {
	jule::Ptr<_1c670684e_sema> _field_sema;
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _field_Uses;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c66528cc_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c667de9c_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c665865d_StructIns>> _field_Instances;
	

};
struct _1c6657aad_FieldIns {
	jule::Ptr<_1c665865d_StructIns> _field_Owner;
	jule::Ptr<_1c66528cc_Field> _field_Decl;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Ptr<_1c6788b56_Data> _field_Default;
	

};
inline jule::Bool _1c6657aad_FieldIns_eq(_1c6657aad_FieldIns *_self_, _1c6657aad_FieldIns _other_);


struct _1c665865d_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1c6655803_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c6657aad_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1c6671687_ReferenceStack> _field_Refers;
	_1c66548e0_Operators _field_Operators;
	

};
struct _1c665c51e_OperandExprModel {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1c665c51e_OperandExprModel_eq(_1c665c51e_OperandExprModel *_self_, _1c665c51e_OperandExprModel _other_);


struct _1c665ca19_BinaryExprModel {
	jule::Ptr<_1c665c51e_OperandExprModel> _field_Left;
	jule::Ptr<_1c665c51e_OperandExprModel> _field_Right;
	jule::Ptr<_1c661e327_Token> _field_Op;
	

};
inline jule::Bool _1c665ca19_BinaryExprModel_eq(_1c665ca19_BinaryExprModel *_self_, _1c665ca19_BinaryExprModel _other_);


struct _1c665cde3_UnaryExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c661e327_Token> _field_Op;
	

};
inline jule::Bool _1c665cde3_UnaryExprModel_eq(_1c665cde3_UnaryExprModel *_self_, _1c665cde3_UnaryExprModel _other_);


struct _1c665d421_StructArgExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6657aad_FieldIns> _field_Field;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	

};
inline jule::Bool _1c665d421_StructArgExprModel_eq(_1c665d421_StructArgExprModel *_self_, _1c665d421_StructArgExprModel _other_);


struct _1c665d7b7_StructLitExprModel {
	jule::Ptr<_1c665865d_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c665d421_StructArgExprModel>> _field_Args;
	

};
struct _1c665dab4_AllocStructLitExprModel {
	jule::Ptr<_1c665d7b7_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1c665dab4_AllocStructLitExprModel_eq(_1c665dab4_AllocStructLitExprModel *_self_, _1c665dab4_AllocStructLitExprModel _other_);


struct _1c665e147_CastingExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1c665e147_CastingExprModel_eq(_1c665e147_CastingExprModel *_self_, _1c665e147_CastingExprModel _other_);


struct _1c665e9e9_FnCallExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c666d4ec_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c66b35b9_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1c665edc3_SliceExprModel {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1c6660379_IndexingExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c6788b56_Data> _field_Index;
	

};
inline jule::Bool _1c6660379_IndexingExprModel_eq(_1c6660379_IndexingExprModel *_self_, _1c6660379_IndexingExprModel _other_);


struct _1c6660830_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Captured;
	jule::Ptr<_1c666d4ec_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1c6660c09_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1c6660c09_KeyValPairExprModel_eq(_1c6660c09_KeyValPairExprModel *_self_, _1c6660c09_KeyValPairExprModel _other_);


struct _1c66610d3_MapExprModel {
	jule::Ptr<_1c67ca68c_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1c6660c09_KeyValPairExprModel>> _field_Entries;
	

};
struct _1c6661666_SlicingExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1c6661666_SlicingExprModel_eq(_1c6661666_SlicingExprModel *_self_, _1c6661666_SlicingExprModel _other_);


struct _1c6661be9_TraitSubIdentExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1c666a51b_Fn> _field_Method;
	jule::Ptr<_1c667de9c_Trait> _field_Trt;
	

};
inline jule::Bool _1c6661be9_TraitSubIdentExprModel_eq(_1c6661be9_TraitSubIdentExprModel *_self_, _1c6661be9_TraitSubIdentExprModel _other_);


struct _1c666258a_StructSubIdentExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c666d4ec_FnIns> _field_Method;
	jule::Ptr<_1c6657aad_FieldIns> _field_Field;
	jule::Ptr<_1c665865d_StructIns> _field_Owner;
	

};
inline jule::Bool _1c666258a_StructSubIdentExprModel_eq(_1c666258a_StructSubIdentExprModel *_self_, _1c666258a_StructSubIdentExprModel _other_);


struct _1c6662931_StructStaticIdentExprModel {
	jule::Ptr<_1c665865d_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1c666d4ec_FnIns> _field_Method;
	

};
inline jule::Bool _1c6662931_StructStaticIdentExprModel_eq(_1c6662931_StructStaticIdentExprModel *_self_, _1c6662931_StructStaticIdentExprModel _other_);


struct _1c6662d0a_ArrayExprModel {
	jule::Ptr<_1c67cb319_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1c6663107_TupleExprModel {
	jule::Slice<jule::Ptr<_1c6788b56_Data>> _field_Datas;
	

};
struct _1c66634d1_BuiltinOutCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1c66634d1_BuiltinOutCallExprModel_eq(_1c66634d1_BuiltinOutCallExprModel *_self_, _1c66634d1_BuiltinOutCallExprModel _other_);


struct _1c66638aa_BuiltinOutlnCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1c66638aa_BuiltinOutlnCallExprModel_eq(_1c66638aa_BuiltinOutlnCallExprModel *_self_, _1c66638aa_BuiltinOutlnCallExprModel _other_);


struct _1c6663c84_BuiltinNewCallExprModel {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1c6663c84_BuiltinNewCallExprModel_eq(_1c6663c84_BuiltinNewCallExprModel *_self_, _1c6663c84_BuiltinNewCallExprModel _other_);


struct _1c666415d_BuiltinPanicCallExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c666415d_BuiltinPanicCallExprModel_eq(_1c666415d_BuiltinPanicCallExprModel *_self_, _1c666415d_BuiltinPanicCallExprModel _other_);


struct _1c6664614_BuiltinAssertCallExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Str _field_Log;
	

};
inline jule::Bool _1c6664614_BuiltinAssertCallExprModel_eq(_1c6664614_BuiltinAssertCallExprModel *_self_, _1c6664614_BuiltinAssertCallExprModel _other_);


struct _1c6664aba_BuiltinMakeCallExprModel {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1c6664aba_BuiltinMakeCallExprModel_eq(_1c6664aba_BuiltinMakeCallExprModel *_self_, _1c6664aba_BuiltinMakeCallExprModel _other_);


struct _1c6664e94_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1c6664e94_BuiltinAppendCallExprModel_eq(_1c6664e94_BuiltinAppendCallExprModel *_self_, _1c6664e94_BuiltinAppendCallExprModel _other_);


struct _1c6665291_BuiltinLenCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	

};
inline jule::Bool _1c6665291_BuiltinLenCallExprModel_eq(_1c6665291_BuiltinLenCallExprModel *_self_, _1c6665291_BuiltinLenCallExprModel _other_);


struct _1c666558d_BuiltinCapCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	

};
inline jule::Bool _1c666558d_BuiltinCapCallExprModel_eq(_1c666558d_BuiltinCapCallExprModel *_self_, _1c666558d_BuiltinCapCallExprModel _other_);


struct _1c6665967_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Dest;
	jule::Ptr<_1c6788b56_Data> _field_Key;
	

};
inline jule::Bool _1c6665967_BuiltinDeleteCallExprModel_eq(_1c6665967_BuiltinDeleteCallExprModel *_self_, _1c6665967_BuiltinDeleteCallExprModel _other_);


struct _1c6665d41_BuiltinCopyCallExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Dest;
	jule::Ptr<_1c6788b56_Data> _field_Src;
	

};
inline jule::Bool _1c6665d41_BuiltinCopyCallExprModel_eq(_1c6665d41_BuiltinCopyCallExprModel *_self_, _1c6665d41_BuiltinCopyCallExprModel _other_);


struct _1c666621a_BuiltinErrorCallExprModel {
	jule::Ptr<_1c666d4ec_FnIns> _field_Func;
	jule::Ptr<_1c6788b56_Data> _field_Err;
	

};
inline jule::Bool _1c666621a_BuiltinErrorCallExprModel_eq(_1c666621a_BuiltinErrorCallExprModel *_self_, _1c666621a_BuiltinErrorCallExprModel _other_);


struct _1c66668be_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c66668be_SizeofExprModel_eq(_1c66668be_SizeofExprModel *_self_, _1c66668be_SizeofExprModel _other_);


struct _1c6666aab_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c6666aab_AlignofExprModel_eq(_1c6666aab_AlignofExprModel *_self_, _1c6666aab_AlignofExprModel _other_);


struct _1c6666d53_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1c6666d53_RuneExprModel_eq(_1c6666d53_RuneExprModel *_self_, _1c6666d53_RuneExprModel _other_);


struct _1c666722c_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1c6667529_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c6667529_FreeExprModel_eq(_1c6667529_FreeExprModel *_self_, _1c6667529_FreeExprModel _other_);


struct _1c666832c_RetType {
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Idents;
	

};
struct _1c6668a47_Param {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c6668a47_Param_eq(_1c6668a47_Param *_self_, _1c6668a47_Param _other_);


struct _1c666a51b_Fn {
	jule::Ptr<_1c670684e_sema> _field_sema;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_Generics;
	jule::Ptr<_1c666832c_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c6668a47_Param>> _field_Params;
	jule::Ptr<_1c6655803_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> _field_Instances;
	

};
struct _1c666c474_ParamIns {
	jule::Ptr<_1c6668a47_Param> _field_Decl;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	

};
inline jule::Bool _1c666c474_ParamIns_eq(_1c666c474_ParamIns *_self_, _1c666c474_ParamIns _other_);


struct _1c666d4ec_FnIns {
	jule::Ptr<_1c665865d_StructIns> _field_Owner;
	jule::Ptr<_1c666a51b_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _field_Params;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Result;
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Ptr<_1c6671687_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1c6671687_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1c6672b94_Pass {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1c6672b94_Pass_eq(_1c6672b94_Pass *_self_, _1c6672b94_Pass _other_);


struct _1c6677649_symbolBuilder {
	jule::Ptr<_1c6677649_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_20806e73a_Log> _field_errors;
	jule::Ptr<_1c6632945_AST> _field_ast;
	jule::Ptr<_1c678348b_SymbolTable> _field_table;
	

};
struct _1c667de9c_Trait {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _field_Implemented;
	

};
struct _1c6680b3b_EnumItem {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c6789ccd_Value> _field_Value;
	

};
inline jule::Bool _1c6680b3b_EnumItem_eq(_1c6680b3b_EnumItem *_self_, _1c6680b3b_EnumItem _other_);


struct _1c66816a8_Enum {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _field_Items;
	

};
struct _1c66827db_TypeEnumItem {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1c66827db_TypeEnumItem_eq(_1c66827db_TypeEnumItem *_self_, _1c66827db_TypeEnumItem _other_);


struct _1c6682db3_TypeEnum {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _field_Items;
	

};
struct _1c66857de_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1c66857de_comptimeRange_eq(_1c66857de_comptimeRange *_self_, _1c66857de_comptimeRange _other_);


struct _1c668634a_comptimeStructField {
	jule::Ptr<_1c6657aad_FieldIns> _field_field;
	

};
inline jule::Bool _1c668634a_comptimeStructField_eq(_1c668634a_comptimeStructField *_self_, _1c668634a_comptimeStructField _other_);


struct _1c6687add_comptimeStructFields {
	jule::Slice<jule::Ptr<_1c6657aad_FieldIns>> _field_fields;
	

};
struct _1c668956d_comptimeStatic {
	jule::Ptr<_1c672acb3_Var> _field_field;
	

};
inline jule::Bool _1c668956d_comptimeStatic_eq(_1c668956d_comptimeStatic *_self_, _1c668956d_comptimeStatic _other_);


struct _1c668ad22_comptimeStatics {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_fields;
	

};
struct _1c668c791_comptimeEnumField {
	jule::Ptr<_1c6680b3b_EnumItem> _field_field;
	

};
inline jule::Bool _1c668c791_comptimeEnumField_eq(_1c668c791_comptimeEnumField *_self_, _1c668c791_comptimeEnumField _other_);


struct _1c668daa0_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _field_fields;
	

};
struct _1c66905a7_comptimeParam {
	jule::Ptr<_1c666c474_ParamIns> _field_param;
	

};
inline jule::Bool _1c66905a7_comptimeParam_eq(_1c66905a7_comptimeParam *_self_, _1c66905a7_comptimeParam _other_);


struct _1c6692411_comptimeParams {
	jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _field_params;
	

};
struct _1c6693c70_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>> _field_types;
	

};
struct _1c66956de_comptimeTypeInfo {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_base;
	

};
inline jule::Bool _1c66956de_comptimeTypeInfo_eq(_1c66956de_comptimeTypeInfo *_self_, _1c66956de_comptimeTypeInfo _other_);


struct _1c669b7e4_comptimeValue {
	jule::Ptr<_1c6788b56_Data> _field_data;
	

};
inline jule::Bool _1c669b7e4_comptimeValue_eq(_1c669b7e4_comptimeValue *_self_, _1c669b7e4_comptimeValue _other_);


struct _1c669e550_comptimeFiles {
	jule::Slice<jule::Ptr<_1c678348b_SymbolTable>> _field_files;
	

};
struct _1c66a0ebe_comptimeFile {
	jule::Ptr<_1c678348b_SymbolTable> _field_file;
	

};
inline jule::Bool _1c66a0ebe_comptimeFile_eq(_1c66a0ebe_comptimeFile *_self_, _1c66a0ebe_comptimeFile _other_);


struct _1c66a2ae7_comptimeDecls {
	jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>> _field_decls;
	

};
struct _1c66a4dd5_comptimeDecl {
	jule::Any _field_decl;
	

};
inline jule::Bool _1c66a4dd5_comptimeDecl_eq(_1c66a4dd5_comptimeDecl *_self_, _1c66a4dd5_comptimeDecl _other_);


struct _1c66ab98b_constraintChecker {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c666d4ec_FnIns> _field_fi;
	jule::Ptr<_1c665865d_StructIns> _field_si;
	jule::Ptr<_1c661e327_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1c66adce0_Impl {
	jule::Ptr<_1c6634903_TypeDecl> _field_Base;
	jule::Ptr<_1c6634903_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Statics;
	

};
struct _1c66b35b9_Scope {
	jule::Ptr<_1c66b35b9_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I64 _field_ChildIndex;
	jule::I64 _field_StmtIndex;
	

};
struct _1c66b39d7_If {
	jule::Any _field_Expr;
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	

};
inline jule::Bool _1c66b39d7_If_eq(_1c66b39d7_If *_self_, _1c66b39d7_If _other_);


struct _1c66b3cd4_Else {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	

};
inline jule::Bool _1c66b3cd4_Else_eq(_1c66b3cd4_Else *_self_, _1c66b3cd4_Else _other_);


struct _1c66b4202_Conditional {
	jule::Slice<jule::Ptr<_1c66b39d7_If>> _field_Elifs;
	jule::Ptr<_1c66b3cd4_Else> _field_Default;
	

};
struct _1c66b44ee_InfIter {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	

};
inline jule::Bool _1c66b44ee_InfIter_eq(_1c66b44ee_InfIter *_self_, _1c66b44ee_InfIter _other_);


struct _1c66b49a5_WhileIter {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
	

};
inline jule::Bool _1c66b49a5_WhileIter_eq(_1c66b49a5_WhileIter *_self_, _1c66b49a5_WhileIter _other_);


struct _1c66b5401_RangeIter {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c672acb3_Var> _field_KeyA;
	jule::Ptr<_1c672acb3_Var> _field_KeyB;
	

};
inline jule::Bool _1c66b5401_RangeIter_eq(_1c66b5401_RangeIter *_self_, _1c66b5401_RangeIter _other_);


struct _1c66b5786_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1c66b5786_ContSt_eq(_1c66b5786_ContSt *_self_, _1c66b5786_ContSt _other_);


struct _1c66b5b60_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1c66b5b60_BreakSt_eq(_1c66b5b60_BreakSt *_self_, _1c66b5b60_BreakSt _other_);


struct _1c66b6116_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1c66b6116_Label_eq(_1c66b6116_Label *_self_, _1c66b6116_Label _other_);


struct _1c66b6776_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Ptr<_1c66b6116_Label> _field_Label;
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::I64 _field_Index;
	

};
inline jule::Bool _1c66b6776_GotoSt_eq(_1c66b6776_GotoSt *_self_, _1c66b6776_GotoSt _other_);


struct _1c66b6b50_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1c66b6b50_Postfix_eq(_1c66b6b50_Postfix *_self_, _1c66b6b50_Postfix _other_);


struct _1c66b7106_Assign {
	jule::Ptr<_1c665c51e_OperandExprModel> _field_Left;
	jule::Ptr<_1c665c51e_OperandExprModel> _field_Right;
	jule::Ptr<_1c661e327_Token> _field_Op;
	

};
inline jule::Bool _1c66b7106_Assign_eq(_1c66b7106_Assign *_self_, _1c66b7106_Assign _other_);


struct _1c66b75ac_MultiAssign {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1c6788b56_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1c66b7ce9_Match {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1c66b8822_Case>> _field_Cases;
	jule::Ptr<_1c66b8822_Case> _field_Default;
	

};
struct _1c66b8822_Case {
	jule::Ptr<_1c66b7ce9_Match> _field_Owner;
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c6788b56_Data>> _field_Exprs;
	jule::Ptr<_1c66b8822_Case> _field_Next;
	

};
struct _1c66b901a_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1c66b901a_FallSt_eq(_1c66b901a_FallSt *_self_, _1c66b901a_FallSt _other_);


struct _1c66b93b1_RetSt {
	jule::Ptr<_1c666d4ec_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c66b93b1_RetSt_eq(_1c66b93b1_RetSt *_self_, _1c66b93b1_RetSt _other_);


struct _1c66b9867_scopeLabel {
	jule::Ptr<_1c661e327_Token> _field_token;
	jule::Ptr<_1c66b6116_Label> _field_node;
	jule::Bool _field_used;
	

};
inline jule::Bool _1c66b9867_scopeLabel_eq(_1c66b9867_scopeLabel *_self_, _1c66b9867_scopeLabel _other_);


struct _1c66ba857_scopeChecker {
	jule::Ptr<_1c661e327_Token> _field_calledFrom;
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Ptr<_1c666d4ec_FnIns> _field_owner;
	jule::Ptr<_1c66ba857_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1c678348b_SymbolTable> _field_table;
	jule::Ptr<_1c66b35b9_Scope> _field_scope;
	jule::Ptr<_1c6644924_ScopeTree> _field_tree;
	jule::Ptr<_1c666d4ec_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1c672acb3_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1c66b9867_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1c66ba857_scopeChecker_eq(_1c66ba857_scopeChecker *_self_, _1c66ba857_scopeChecker _other_);


struct _1c66ce7e4_directiveChecker {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c6633d20_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1c66ce7e4_directiveChecker_eq(_1c66ce7e4_directiveChecker *_self_, _1c66ce7e4_directiveChecker _other_);


struct _1c66d63cd_ImportInfo {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_Selected;
	jule::Ptr<_1c66d9304_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
struct _1c66d9304_Package {
	jule::Slice<jule::Ptr<_1c678348b_SymbolTable>> _field_Files;
	

};
struct _1c6705c27_commonSemaMeta {
	jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1c66d63cd_ImportInfo> _field_runtime;
	

};
struct _1c670684e_sema {
	jule::Slice<_20806e73a_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c678348b_SymbolTable>> _field_files;
	jule::Ptr<_1c678348b_SymbolTable> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1c6705c27_commonSemaMeta> _field_meta;
	

};
struct _1c672760b_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1c672acb3_Var {
	jule::Ptr<_1c66b35b9_Scope> _field_Scope;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Ptr<_1c6789ccd_Value> _field_Value;
	jule::Ptr<_1c6671687_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Depends;
	

};
struct _1c672bd4c_FuncPattern {
	

};
struct _1c67703e0_typeCompatibilityChecker {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_dest;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_src;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	

};
inline jule::Bool _1c67703e0_typeCompatibilityChecker_eq(_1c67703e0_typeCompatibilityChecker *_self_, _1c67703e0_typeCompatibilityChecker _other_);


struct _1c677226b_assignTypeChecker {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_dest;
	jule::Ptr<_1c6788b56_Data> _field_d;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Ptr<_1c6671687_ReferenceStack> _field_refers;
	

};
inline jule::Bool _1c677226b_assignTypeChecker_eq(_1c677226b_assignTypeChecker *_self_, _1c677226b_assignTypeChecker _other_);


struct _1c6773b41_dynamicTypeAnnotation {
	jule::Ptr<_1c678a87d_eval> _field_e;
	jule::Ptr<_1c666d4ec_FnIns> _field_f;
	jule::Ptr<_1c666c474_ParamIns> _field_p;
	jule::Ptr<_1c6788b56_Data> _field_a;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Ptr<_1c67bb8d1_TypeKind>* _field_k;
	jule::Ptr<_1c6634903_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_ignored;
	

};
struct _1c677899d_fnCallArgChecker {
	jule::Ptr<_1c678a87d_eval> _field_e;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_args;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Ptr<_1c666d4ec_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_ignored;
	

};
struct _1c677b8d5_structLitChecker {
	jule::Ptr<_1c678a87d_eval> _field_e;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Ptr<_1c665865d_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c665d421_StructArgExprModel>> _field_args;
	

};
struct _1c677d6b7_rangeChecker {
	jule::Ptr<_1c66ba857_scopeChecker> _field_sc;
	jule::Ptr<_1c66495e9_RangeKind> _field_rang;
	jule::Ptr<_1c66b5401_RangeIter> _field_Kind;
	jule::Ptr<_1c6788b56_Data> _field_d;
	

};
inline jule::Bool _1c677d6b7_rangeChecker_eq(_1c677d6b7_rangeChecker *_self_, _1c677d6b7_rangeChecker _other_);


struct _1c6780e28_retTypeChecker {
	jule::Ptr<_1c66ba857_scopeChecker> _field_sc;
	jule::Ptr<_1c666d4ec_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _field_exprs;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1c678348b_SymbolTable {
	jule::Ptr<_1c6624aad_File> _field_File;
	jule::Slice<_1c6672b94_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c667de9c_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c66816a8_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c66adce0_Impl>> _field_Impls;
	

};
struct _1c6788b56_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1dd71e850_Const> _field_Constant;
	

};
inline jule::Bool _1c6788b56_Data_eq(_1c6788b56_Data *_self_, _1c6788b56_Data _other_);


struct _1c6789ccd_Value {
	jule::Ptr<_1c6638c37_Expr> _field_Expr;
	jule::Ptr<_1c6788b56_Data> _field_Data;
	

};
inline jule::Bool _1c6789ccd_Value_eq(_1c6789ccd_Value *_self_, _1c6789ccd_Value _other_);


struct _1c678a87d_eval {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1c672acb3_Var> _field_owner;
	jule::Ptr<_1c6657aad_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1c678a87d_eval_eq(_1c678a87d_eval *_self_, _1c678a87d_eval _other_);


struct _1c67a9b77_unaryEval {
	jule::Ptr<_1c678a87d_eval> _field_e;
	jule::Ptr<_1c6788b56_Data> _field_d;
	jule::Ptr<_1c663ace4_UnaryExpr> _field_u;
	

};
inline jule::Bool _1c67a9b77_unaryEval_eq(_1c67a9b77_unaryEval *_self_, _1c67a9b77_unaryEval _other_);


struct _1c67abb13_binaryEval {
	jule::Ptr<_1c678a87d_eval> _field_e;
	jule::Ptr<_1c6788b56_Data> _field_l;
	jule::Ptr<_1c6788b56_Data> _field_r;
	jule::Ptr<_1c661e327_Token> _field_op;
	

};
inline jule::Bool _1c67abb13_binaryEval_eq(_1c67abb13_binaryEval *_self_, _1c67abb13_binaryEval _other_);


struct _1c67b9eea_InsGeneric {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_Constraint;
	

};
struct _1c67baade_TypeAlias {
	jule::Ptr<_1c6644924_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c67c40e2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _field_Generics;
	

};
struct _1c67bb8d1_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1c67bb8d1_TypeKind_eq(_1c67bb8d1_TypeKind *_self_, _1c67bb8d1_TypeKind _other_);


struct _1c67c40e2_TypeSymbol {
	jule::Ptr<_1c6634903_TypeDecl> _field_Decl;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Kind;
	

};
inline jule::Bool _1c67c40e2_TypeSymbol_eq(_1c67c40e2_TypeSymbol *_self_, _1c67c40e2_TypeSymbol _other_);


struct _1c67c49e9_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1c67c49e9_Prim_eq(_1c67c49e9_Prim *_self_, _1c67c49e9_Prim _other_);


struct _1c67c8525_Sptr {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c67c8525_Sptr_eq(_1c67c8525_Sptr *_self_, _1c67c8525_Sptr _other_);


struct _1c67c8ee8_Slc {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c67c8ee8_Slc_eq(_1c67c8ee8_Slc *_self_, _1c67c8ee8_Slc _other_);


struct _1c67c9adc_Tuple {
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_Types;
	

};
struct _1c67ca68c_Map {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Key;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Val;
	

};
inline jule::Bool _1c67ca68c_Map_eq(_1c67ca68c_Map *_self_, _1c67ca68c_Map _other_);


struct _1c67cb319_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c67cb319_Arr_eq(_1c67cb319_Arr *_self_, _1c67cb319_Arr _other_);


struct _1c67cbcdc_Ptr {
	jule::Ptr<_1c67bb8d1_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c67cbcdc_Ptr_eq(_1c67cbcdc_Ptr *_self_, _1c67cbcdc_Ptr _other_);


struct _1c67cccdd_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1c67cccdd_referencer_eq(_1c67cccdd_referencer *_self_, _1c67cccdd_referencer _other_);


struct _1c67cdccd_typeChecker {
	jule::Ptr<_1c670684e_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1c67cccdd_referencer> _field_referencer;
	jule::Ptr<_1c6671687_ReferenceStack> _field_refers;
	jule::Ptr<_1c661e327_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1c67baade_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1c67d6d91_identTypeLookup {
	

};
inline jule::Bool _1c67d6d91_identTypeLookup_eq(_1c67d6d91_identTypeLookup *_self_, _1c67d6d91_identTypeLookup _other_);


struct _1c6c9de3a_FileInfo {
	jule::Ptr<_1c6632945_AST> _field_Ast;
	jule::Slice<_20806e73a_Log> _field_Errors;
	

};
struct _1c737c4a2_stmt {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1c737cd43_scopeParser {
	jule::Ptr<_1c739b3c2_parser> _field_p;
	jule::Ptr<_1c6644924_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1c738a7ac_exprBuilder {
	jule::Ptr<_1c739b3c2_parser> _field_p;
	

};
inline jule::Bool _1c738a7ac_exprBuilder_eq(_1c738a7ac_exprBuilder *_self_, _1c738a7ac_exprBuilder _other_);


struct _1c7397ec3_assignInfo {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_r;
	jule::Ptr<_1c661e327_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1c739b3c2_parser {
	jule::Ptr<_1c6632945_AST> _field_ast;
	jule::Slice<jule::Ptr<_1c6633d20_Directive>> _field_directives;
	jule::Slice<_20806e73a_Log> _field_errors;
	jule::Ptr<_1c738a7ac_exprBuilder> _field_ep;
	

};
struct _1c73ad4e4_typeBuilder {
	jule::Ptr<_1c739b3c2_parser> _field_p;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1c6a8601e_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Bool _field_AtomicRC;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1c6a8601e_CompileInfo_eq(_1c6a8601e_CompileInfo *_self_, _1c6a8601e_CompileInfo _other_);


struct _1c6a874e8_directiveEval {
	jule::Slice<_20806e73a_Log> _field_logs;
	jule::Ptr<_1c6633d20_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1c73b24d7_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1c73b8cc4_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1c73c02e7_OrderedDefines {
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_Globals;
	

};
struct _1c75091de_specialCaseDefines {
	jule::Ptr<_1c6655803_Struct> _field_runtime_Map;
	jule::Ptr<_1c6655803_Struct> _field_runtime_mapIterator;
	

};
inline jule::Bool _1c75091de_specialCaseDefines_eq(_1c75091de_specialCaseDefines *_self_, _1c75091de_specialCaseDefines _other_);


struct _1c7509b07_liveTable {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c665865d_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c667de9c_Trait>> _field_traits;
	

};
struct _1c750a0ad_ObjectDeadCode {
	_1c7509b07_liveTable _field_live;
	jule::Ptr<_1c73b4d7a_IR> _field_ir;
	_1c75091de_specialCaseDefines _field_scd;
	

};
struct _1c750e1d3_scopeDeadCode {
	jule::Ptr<_1c750e1d3_scopeDeadCode> _field_parent;
	jule::Ptr<_1c66b35b9_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1c66b6116_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1c750e1d3_scopeDeadCode_eq(_1c750e1d3_scopeDeadCode *_self_, _1c750e1d3_scopeDeadCode _other_);


struct _1c751387a_exprDeadCode {
	jule::Ptr<_1c750e1d3_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1c751387a_exprDeadCode_eq(_1c751387a_exprDeadCode *_self_, _1c751387a_exprDeadCode _other_);


struct _1c68b7081_ExceptionalForwardingExprModel {
	jule::Ptr<_1c665e9e9_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _1c68b7081_ExceptionalForwardingExprModel_eq(_1c68b7081_ExceptionalForwardingExprModel *_self_, _1c68b7081_ExceptionalForwardingExprModel _other_);


struct _1c68b7416_SwapExprModel {
	jule::Ptr<_1c6788b56_Data> _field_Left;
	jule::Ptr<_1c6788b56_Data> _field_Right;
	

};
inline jule::Bool _1c68b7416_SwapExprModel_eq(_1c68b7416_SwapExprModel *_self_, _1c68b7416_SwapExprModel _other_);


struct _1c68b77e0_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _1c68b77e0_EmptyCompareExprModel_eq(_1c68b77e0_EmptyCompareExprModel *_self_, _1c68b77e0_EmptyCompareExprModel _other_);


struct _1c68b7b64_RefExprModel {
	jule::Ptr<_1c672acb3_Var> _field_Var;
	

};
inline jule::Bool _1c68b7b64_RefExprModel_eq(_1c68b7b64_RefExprModel *_self_, _1c68b7b64_RefExprModel _other_);


struct _1c68b80d7_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1dd71e850_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _1c68b80d7_StrCompExprModel_eq(_1c68b80d7_StrCompExprModel *_self_, _1c68b80d7_StrCompExprModel _other_);


struct _1c68b866a_MutSlicingExprModel {
	jule::Ptr<_1c661e327_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1c68b866a_MutSlicingExprModel_eq(_1c68b866a_MutSlicingExprModel *_self_, _1c68b866a_MutSlicingExprModel _other_);


struct _1c68b8967_UnsafeBinaryExprModel {
	jule::Ptr<_1c665ca19_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _1c68b8967_UnsafeBinaryExprModel_eq(_1c68b8967_UnsafeBinaryExprModel *_self_, _1c68b8967_UnsafeBinaryExprModel _other_);


struct _1c68b8cec_UnsafeIndexingExprModel {
	jule::Ptr<_1c6660379_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _1c68b8cec_UnsafeIndexingExprModel_eq(_1c68b8cec_UnsafeIndexingExprModel *_self_, _1c68b8cec_UnsafeIndexingExprModel _other_);


struct _1c68b91c6_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1c665edc3_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _1c68b91c6_PushToSliceExprModel_eq(_1c68b91c6_PushToSliceExprModel *_self_, _1c68b91c6_PushToSliceExprModel _other_);


struct _1c68b95a0_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _1c68b95a0_AppendToSliceExprModel_eq(_1c68b95a0_AppendToSliceExprModel *_self_, _1c68b95a0_AppendToSliceExprModel _other_);


struct _1c68b9979_StrRuneIter {
	jule::Ptr<_1c6788b56_Data> _field_Expr;
	jule::Ptr<_1c66b5401_RangeIter> _field_Base;
	

};
inline jule::Bool _1c68b9979_StrRuneIter_eq(_1c68b9979_StrRuneIter *_self_, _1c68b9979_StrRuneIter _other_);


struct _1c68b9c76_UnsafeDerefExprModel {
	jule::Ptr<_1c665cde3_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _1c68b9c76_UnsafeDerefExprModel_eq(_1c68b9c76_UnsafeDerefExprModel *_self_, _1c68b9c76_UnsafeDerefExprModel _other_);


struct _1c68ba073_UnsafeCastingExprModel {
	jule::Ptr<_1c665e147_CastingExprModel> _field_Base;
	

};
inline jule::Bool _1c68ba073_UnsafeCastingExprModel_eq(_1c68ba073_UnsafeCastingExprModel *_self_, _1c68ba073_UnsafeCastingExprModel _other_);


struct _1c68bac55_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _1c68bac55_nilVar_eq(_1c68bac55_nilVar *_self_, _1c68bac55_nilVar _other_);


struct _1c68bb096_nils {
	jule::Slice<_1c68bac55_nilVar> _field_vars;
	

};
struct _1c73c19be_scopeOptimizer {
	jule::Ptr<_1c73c19be_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1c66b35b9_Scope> _field_scope;
	jule::Ptr<_1c73d17d1_data> _field_data;
	

};
inline jule::Bool _1c73c19be_scopeOptimizer_eq(_1c73c19be_scopeOptimizer *_self_, _1c73c19be_scopeOptimizer _other_);


struct _1c73c8421_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1c73d17d1_data> _field_data;
	jule::Ptr<_1c73b8cc4_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1c73c8421_exprOptimizer_eq(_1c73c8421_exprOptimizer *_self_, _1c73c8421_exprOptimizer _other_);


struct _1c73cd811_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1c67bb8d1_TypeKind> _field_kind;
	

};
inline jule::Bool _1c73cd811_dynamicVar_eq(_1c73cd811_dynamicVar *_self_, _1c73cd811_dynamicVar _other_);


struct _1c73cdb52_dynamic {
	jule::Slice<_1c73cd811_dynamicVar> _field_vars;
	

};
struct _1c73d17d1_data {
	jule::Ptr<_1c73d31c8_boundary> _field_boundary;
	jule::Ptr<_1c68bb096_nils> _field_nils;
	jule::Ptr<_1c73cdb52_dynamic> _field_dynamic;
	

};
inline jule::Bool _1c73d17d1_data_eq(_1c73d17d1_data *_self_, _1c73d17d1_data _other_);


struct _1c73d2d87_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1c73d31c8_boundary {
	jule::Slice<_1c73d2d87_boundaryVar> _field_vars;
	

};
struct _1c751499c_Optimizer {
	jule::Ptr<_1c73b4d7a_IR> _field_ir;
	

};
inline jule::Bool _1c751499c_Optimizer_eq(_1c751499c_Optimizer *_self_, _1c751499c_Optimizer _other_);


struct _1c753ae57_AnsiEscape {
	

};
inline jule::Bool _1c753ae57_AnsiEscape_eq(_1c753ae57_AnsiEscape *_self_, _1c753ae57_AnsiEscape _other_);


struct _1c753c50d_Logger {
	

};
inline jule::Bool _1c753c50d_Logger_eq(_1c753c50d_Logger *_self_, _1c753c50d_Logger _other_);


struct _1d4c97c8e_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1d4c97c8e_AbsTime_eq(_1d4c97c8e_AbsTime *_self_, _1d4c97c8e_AbsTime _other_);


struct _1d4c98465_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1d4c98465_Time_eq(_1d4c98465_Time *_self_, _1d4c98465_Time _other_);


struct _1d4bbe91e_scopeCoder {
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1d4bbe91e_scopeCoder_eq(_1d4bbe91e_scopeCoder *_self_, _1d4bbe91e_scopeCoder _other_);


struct _1d4bcb200_exprCoder {
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c672acb3_Var>>> _field_varPrefixes;
	

};
struct _1d4bddc5c_TestCoder {
	jule::Ptr<_1c665865d_StructIns> _field_t;
	jule::Ptr<_1c666a51b_Fn> _field_tmReset;
	jule::Ptr<_1c666a51b_Fn> _field_tmFailed;
	jule::Ptr<_1c666a51b_Fn> _field_tmSkipped;
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1d4bddc5c_TestCoder_eq(_1d4bddc5c_TestCoder *_self_, _1d4bddc5c_TestCoder _other_);


struct _1d4be1bd8_identCoder {
	

};
inline jule::Bool _1d4be1bd8_identCoder_eq(_1d4be1bd8_identCoder *_self_, _1d4be1bd8_identCoder _other_);


struct _1d4ca1eeb_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1d4ca1eeb_SerializationInfo_eq(_1d4ca1eeb_SerializationInfo *_self_, _1d4ca1eeb_SerializationInfo _other_);


struct _1d4ca2419_traitCast {
	jule::Ptr<_1c667de9c_Trait> _field_t1;
	jule::Ptr<_1c667de9c_Trait> _field_t2;
	

};
inline jule::Bool _1d4ca2419_traitCast_eq(_1d4ca2419_traitCast *_self_, _1d4ca2419_traitCast _other_);


struct _1d4ca27e3_anonHash {
	jule::Ptr<_1c6660830_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1d4ca27e3_anonHash_eq(_1d4ca27e3_anonHash *_self_, _1d4ca27e3_anonHash _other_);


struct _1d4ca3c9a_ObjectCoder {
	_20759e353_StrBuilder _field_Buf;
	_20759e353_StrBuilder _field_resultDecls;
	_20759e353_StrBuilder _field_anyObj;
	_20759e353_StrBuilder _field_anonObj;
	_20759e353_StrBuilder _field_deallocObj;
	jule::Ptr<_1c73b4d7a_IR> _field_ir;
	_1d4ca1eeb_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1d4ca27e3_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	_1d83252b3__Map _field_resultMap;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1d4ca2419_traitCast> _field_traitCastMap;
	_1d83713ec__Map _field_traitMetMap;
	jule::Ptr<_1d4bcb200_exprCoder> _field_ec;
	jule::Ptr<_1d4bbe91e_scopeCoder> _field_sc;
	jule::Ptr<_1d4cb375a_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	

};
struct _1d4cb2b22_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1d4cb2b22_customType_eq(_1d4cb2b22_customType *_self_, _1d4cb2b22_customType _other_);


struct _1d4cb375a_typeCoder {
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _field_oc;
	jule::Ptr<_1d4cbb345_resultCoder> _field_rc;
	

};
inline jule::Bool _1d4cb375a_typeCoder_eq(_1d4cb375a_typeCoder *_self_, _1d4cb375a_typeCoder _other_);


struct _1d4cbb345_resultCoder {
	jule::Ptr<_1d4cb375a_typeCoder> _field_tc;
	

};
inline jule::Bool _1d4cbb345_resultCoder_eq(_1d4cbb345_resultCoder *_self_, _1d4cbb345_resultCoder _other_);


struct _1d8b10b58_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1d8b10b58_Flag_eq(_1d8b10b58_Flag *_self_, _1d8b10b58_Flag _other_);

struct _1d8b14475_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1d8b14475_Flag_eq(_1d8b14475_Flag *_self_, _1d8b14475_Flag _other_);

struct _1d8b17b82_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1d8b17b82_Flag_eq(_1d8b17b82_Flag *_self_, _1d8b17b82_Flag _other_);

struct _1d8b1b3d3_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1d8b1b3d3_Flag_eq(_1d8b1b3d3_Flag *_self_, _1d8b1b3d3_Flag _other_);

struct _1d8b1eae0_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1d8b1eae0_Flag_eq(_1d8b1eae0_Flag *_self_, _1d8b1eae0_Flag _other_);


struct _1d4d373d3_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1d4d39d97_argParser {
	_1d4d373d3_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _1c73b4d7a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c66d9304_Package> _field_Main;
	jule::Ptr<_1c66d63cd_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _field_Used;
	_1c73c02e7_OrderedDefines _field_Ordered;
	

};
struct _1c73d12d6_dataCheckpoint {
	_1c73d31c8_boundary _field_boundary;
	_1c68bb096_nils _field_nils;
	_1c73cdb52_dynamic _field_dynamic;
	

};
struct _208819a0c_Cmd {
	_20881dc64_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1c666d4ec_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1c666d4ec_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c6788b56_Data__jule_tuple_x_1c6788b56_Data {
	jule::Ptr<_1c6788b56_Data> __jule_result_arg0;
	jule::Ptr<_1c6788b56_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c6788b56_Data__jule_tuple_bool {
	jule::Ptr<_1c6788b56_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c6638c37_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c664b8c6_Case__jule_tuple_bool {
	jule::Ptr<_1c664b8c6_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c664b8c6_Case__jule_tuple_x_1c664a72c_Else {
	jule::Slice<jule::Ptr<_1c664b8c6_Case>> __jule_result_arg0;
	jule::Ptr<_1c664a72c_Else> __jule_result_arg1;
};
struct __jule_tuple__1c6644061_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c66433a1_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c66433a1_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c6634903_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c66377e6_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log {
	jule::Slice<jule::Ptr<_1c6632945_AST>> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_20806e73a_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool {
	jule::Ptr<_1c666d4ec_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c73b4d7a_IR__jule_tuple_s_20806e73a_Log {
	jule::Ptr<_1c73b4d7a_IR> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1dd0569e5_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1dd0569e5_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1dd0569e5_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log {
	jule::Ptr<_1c678348b_SymbolTable> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log {
	jule::Ptr<_1c66d9304_Package> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c6632945_AST__jule_tuple_s_20806e73a_Log {
	jule::Ptr<_1c6632945_AST> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c661e327_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c661e327_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token {
	jule::Slice<jule::Ptr<_1c661e327_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c661e327_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c661e327_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c661e327_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> __jule_result_arg0;
	jule::Slice<_20806e73a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__206729237_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__206729ac8_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Bool _1d8325703_isNil(_1d83252b3__Map* _self_);
inline void _1d8325857_initData(_1d83252b3__Map* _self_, jule::I64 _13824_cap);
inline jule::U64 _1d83259ab_hash(_1d83252b3__Map* _self_, jule::Str _15016_k);
inline void _1d8325b10_rehash(_1d83252b3__Map* _self_, jule::I64 _15522_n);
inline jule::I64 _1d8325c64_nextSize(_1d83252b3__Map* _self_);
inline void _1d8325db8_lookup(_1d83252b3__Map* _self_, jule::Str _19533_k, jule::Bool* _19545_v, jule::Bool* _19558_ok);
inline jule::Bool _1d832601c_get(_1d83252b3__Map* _self_, jule::Str _23423_k);
inline jule::Bool* _1d8326171_set(_1d83252b3__Map* _self_, jule::Str _24323_k);
inline jule::Bool _1d83262c5_del(_1d83252b3__Map* _self_, jule::Str _27823_k);
inline void _1d8326429_clear(_1d83252b3__Map* _self_);
inline jule::I64 _1d832657d_len(_1d83252b3__Map* _self_);
inline jule::I64 _1d83266d2_cap(_1d83252b3__Map* _self_);
inline _1d83303cd_mapIterator _1d8326836_iterator(_1d83252b3__Map* _self_);
inline jule::Bool _1d8371870_isNil(_1d83713ec__Map* _self_);
inline void _1d83719b3_initData(_1d83713ec__Map* _self_, jule::I64 _13824_cap);
inline jule::U64 _1d8371b06_hash(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _15016_k);
inline void _1d8371c49_rehash(_1d83713ec__Map* _self_, jule::I64 _15522_n);
inline jule::I64 _1d8371d8c_nextSize(_1d83713ec__Map* _self_);
inline void _1d8371ed0_lookup(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _19533_k, jule::Slice<jule::Uintptr>* _19545_v, jule::Bool* _19558_ok);
inline jule::Slice<jule::Uintptr> _1d8372123_get(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _23423_k);
inline jule::Slice<jule::Uintptr>* _1d8372266_set(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _24323_k);
inline jule::Bool _1d83723a9_del(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _27823_k);
inline void _1d83724ec_clear(_1d83713ec__Map* _self_);
inline jule::I64 _1d8372640_len(_1d83713ec__Map* _self_);
inline jule::I64 _1d8372783_cap(_1d83713ec__Map* _self_);
inline _1d8379416_mapIterator _1d83728d7_iterator(_1d83713ec__Map* _self_);
inline void _1d8330961_init(_1d83303cd_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1d8330ab5_next(_1d83303cd_mapIterator* _self_);
inline void _1d8379999_init(_1d8379416_mapIterator* _self_);
inline __jule_tuple_px_1c666d4ec_FnIns__jule_tuple_psuintptr _1d8379aed_next(_1d8379416_mapIterator* _self_);
inline _20759e353_StrBuilder static__2075a7c41_New(jule::I64 _1516_cap);
inline void _2075a7d95_Write(_20759e353_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _2075a814d_WriteStr(_20759e353_StrBuilder* _self_, jule::Str _3024_s);
inline void _2075a8406_WriteByte(_20759e353_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _2075a8945_Str(_20759e353_StrBuilder* _self_);
inline void _2075a8b43_Clear(_20759e353_StrBuilder* _self_);
inline jule::I64 _2075a8dc9_Len(_20759e353_StrBuilder* _self_);
inline jule::Slice<jule::U8> _2075a93e6_Buf(_20759e353_StrBuilder* _self_);
inline void _2075a969e_SetBuf(_20759e353_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _2087732e5_index(_208772d2d_lazyBuff* _self_, jule::I64 _5521_i);
inline void _20877359d_append(_208772d2d_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _208773834_string(_208772d2d_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>> static__208775bee_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__208775e30_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__208776161_Remove(jule::Str _5319_path);
inline jule::Ptr<_238ad9d35_File> static__238ada286_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_238ad9d35_File>> static__238ada550_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__238ada819_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__238adabb0_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _238adb3ec_Close(_238ad9d35_File* _self_);
inline jule::Exceptional<jule::Ptr<_238ad9d35_File>> static__238add883_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode);
inline jule::VoidExceptional static__238addab4_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I64> _238ade048_Write(_238ad9d35_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _238ade389_Read(_238ad9d35_File* _self_, jule::Slice<jule::U8> _8024_buf);
inline jule::Bool _238adc376_IsDir(_238adbe69_Status* _self_);
inline jule::Bool _238adc60c_IsReg(_238adbe69_Status* _self_);
inline jule::U64 _238adc893_Size(_238adbe69_Status* _self_);
inline jule::Exceptional<jule::Ptr<_238adbe69_Status>> static__208776abd_Of(jule::Str _1215_path);
inline jule::Bool _1dd703911_set(_1dd70be9c_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1dd703c52_floatBits(_1dd70be9c_decimal* _self_, _1dd6e85b5_floatInfo* _33226_flt);
inline void _1dd70c387_assign(_1dd70be9c_decimal* _self_, jule::U64 _15126_v);
inline void _1dd70c640_shift(_1dd70be9c_decimal* _self_, jule::I64 _17625_k);
inline void _1dd70c8e8_roundDown(_1dd70be9c_decimal* _self_, jule::I64 _19625_nd);
inline void _1dd70cba1_roundUp(_1dd70be9c_decimal* _self_, jule::I64 _20523_nd);
inline void _1dd70ce59_round(_1dd70be9c_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1dd70d1e0_roundedInteger(_1dd70be9c_decimal* _self_);
inline jule::Ptr<_1dd71e850_Const> static__1dd71ecc3_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1dd71e850_Const> static__1dd72008c_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1dd71e850_Const> static__1dd720356_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1dd71e850_Const> static__1dd720620_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1dd71e850_Const> static__1dd7208d9_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1dd71e850_Const> static__1dd720ae8_NewNil(void);
inline jule::I64 _1dd721258_ReadI64(_1dd71e850_Const* _self_);
inline jule::U64 _1dd7214de_ReadU64(_1dd71e850_Const* _self_);
inline jule::Bool _1dd721775_ReadBool(_1dd71e850_Const* _self_);
inline jule::Str _1dd721a0b_ReadStr(_1dd71e850_Const* _self_);
inline jule::F64 _1dd721c92_ReadF64(_1dd71e850_Const* _self_);
inline jule::I64 _1dd722028_AsI64(_1dd71e850_Const* _self_);
inline jule::U64 _1dd7222ae_AsU64(_1dd71e850_Const* _self_);
inline jule::F64 _1dd722545_AsF64(_1dd71e850_Const* _self_);
inline void _1dd7227ed_SetI64(_1dd71e850_Const* _self_, jule::I64 _13822_x);
inline void _1dd722aa6_SetU64(_1dd71e850_Const* _self_, jule::U64 _14122_x);
inline void _1dd722d5e_SetBool(_1dd71e850_Const* _self_, jule::Bool _14423_x);
inline void _1dd723117_SetStr(_1dd71e850_Const* _self_, jule::Str _14722_x);
inline void _1dd7233c0_SetF64(_1dd71e850_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1dd723854_IsI64(_1dd71e850_Const* _self_);
inline jule::Bool _1dd723ada_IsU64(_1dd71e850_Const* _self_);
inline jule::Bool _1dd723d71_IsBool(_1dd71e850_Const* _self_);
inline jule::Bool _1dd724107_IsStr(_1dd71e850_Const* _self_);
inline jule::Bool _1dd72438d_IsF64(_1dd71e850_Const* _self_);
inline jule::Bool _1dd724624_IsNil(_1dd71e850_Const* _self_);
inline jule::Bool _1dd724ca6_And(_1dd71e850_Const* _self_, _1dd71e850_Const _23815_x);
inline jule::Bool _1dd7250e7_Or(_1dd71e850_Const* _self_, _1dd71e850_Const _24914_x);
inline jule::Bool _1dd72658d_Add(_1dd71e850_Const* _self_, _1dd71e850_Const _37719_x);
inline jule::Bool _1dd7268ce_Sub(_1dd71e850_Const* _self_, _1dd71e850_Const _40619_x);
inline jule::Bool _1dd726c20_Mul(_1dd71e850_Const* _self_, _1dd71e850_Const _43019_x);
inline jule::Bool _1dd727061_Div(_1dd71e850_Const* _self_, _1dd71e850_Const _45819_x);
inline jule::Bool _1dd7273a2_Mod(_1dd71e850_Const* _self_, _1dd71e850_Const _48719_x);
inline jule::Bool _1dd7276e3_BitwiseAnd(_1dd71e850_Const* _self_, _1dd71e850_Const _50926_x);
inline jule::Bool _1dd727a34_BitwiseOr(_1dd71e850_Const* _self_, _1dd71e850_Const _52325_x);
inline jule::Bool _1dd727d75_Xor(_1dd71e850_Const* _self_, _1dd71e850_Const _53719_x);
inline jule::Bool _1dd7281b6_Lshift(_1dd71e850_Const* _self_, _1dd71e850_Const _55122_x);
inline jule::Bool _1dd728507_Rshift(_1dd71e850_Const* _self_, _1dd71e850_Const _57122_x);
inline jule::U8 _1c661e6ce_Prec(_1c661e327_Token* _self_);
inline void _1c662500e_Fill(_1c6624aad_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1c6625295_Dir(_1c6624aad_File* _self_);
inline jule::Str _1c662552b_Name(_1c6624aad_File* _self_);
inline jule::Str _1c6625b03_GetRow(_1c6624aad_File* _self_, jule::I64 _3818_row);
inline void _1c662d2ae_pushErr(_1c662cbe8_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1c662d820_lex(_1c662cbe8_lex* _self_);
inline jule::Str _1c662db61_id(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1c662dde7_resume(_1c662cbe8_lex* _self_);
inline void _1c662e1a0_lexLineComment(_1c662cbe8_lex* _self_, jule::Ptr<_1c661e327_Token>* _52135_token);
inline void _1c662e458_lexRangeComment(_1c662cbe8_lex* _self_, jule::Ptr<_1c661e327_Token>* _53636_token);
inline jule::Str _1c662e799_num(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1c662eada_escapeSeq(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1c662eed6_getRune(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1c6630327_lexRune(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1c66305ad_lexStr(_1c662cbe8_lex* _self_);
inline void _1c6630a42_newLine(_1c662cbe8_lex* _self_);
inline jule::Bool _1c66310a3_isOp(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c661e327_Token>* _70763_t);
inline jule::Bool _1c663149e_lexBasicOps(_1c662cbe8_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c661e327_Token>* _71745_tok);
inline jule::Bool _1c663189a_lexId(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c661e327_Token>* _72640_t);
inline jule::Bool _1c6631c96_lexNum(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c661e327_Token>* _73641_t);
inline jule::Ptr<_1c661e327_Token> _1c663202c_token(_1c662cbe8_lex* _self_);
inline jule::Bool _1c66367c3_IsUnsafe(_1c663642c_PtrTypeDecl* _self_);
inline jule::Bool _1c6637065_AutoSized(_1c6636bbe_ArrTypeDecl* _self_);
inline jule::Bool _1c663cd18_Unhandled(_1c663c961_FnCallExpr* _self_);
inline jule::Bool _1c663d09e_Ignored(_1c663c961_FnCallExpr* _self_);
inline jule::Bool _1c6645518_IsSelf(_1c6645161_ParamDecl* _self_);
inline jule::Bool _1c6646959_IsAnon(_1c66465b3_FnDecl* _self_);
inline jule::Bool _1c664875d_IsInf(_1c66483b7_Iter* _self_);
inline jule::Bool _1c6649088_IsWhileNext(_1c6648be2_WhileKind* _self_);
inline jule::Ptr<_1c6657aad_FieldIns> _1c6652cb7_instance(jule::Ptr<_1c66528cc_Field> _self_);
inline jule::Ptr<_1c665865d_StructIns> _1c6655c98_instance(jule::Ptr<_1c6655803_Struct> _self_);
inline jule::Ptr<_1c665865d_StructIns> _1c66560a6_appendInstance(_1c6655803_Struct* _self_, jule::Ptr<_1c665865d_StructIns>* _13635_ins);
inline jule::Ptr<_1c666a51b_Fn> _1c66564a2_FindMethod(_1c6655803_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically);
inline jule::Ptr<_1c672acb3_Var> _1c66567e3_FindStatic(_1c6655803_Struct* _self_, jule::Str _16526_ident);
inline jule::Ptr<_1c66528cc_Field> _1c6656b34_FindField(_1c6655803_Struct* _self_, jule::Str _17625_ident);
inline jule::Bool _1c6656e75_IsImplements(_1c6655803_Struct* _self_, jule::Ptr<_1c667de9c_Trait> _18624_t);
inline jule::Bool _1c66572b6_IsUses(_1c6655803_Struct* _self_, jule::Ptr<_1c6655803_Struct> _19618_s);
inline jule::Str _1c6658a15_Str(_1c665865d_StructIns* _self_);
inline jule::Bool _1c6658d56_Equal(jule::Ptr<_1c665865d_StructIns> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _25818_other);
inline jule::Bool _1c665930c_Same(_1c665865d_StructIns* _self_, jule::Ptr<_1c665865d_StructIns> _28616_s);
inline jule::Ptr<_1c666a51b_Fn> _1c6659708_FindMethod(_1c665865d_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically);
inline jule::Ptr<_1c6657aad_FieldIns> _1c6659a49_FindField(_1c665865d_StructIns* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1c672acb3_Var> _1c6659d8a_FindStatic(_1c665865d_StructIns* _self_, jule::Str _32326_ident);
inline jule::Ptr<_1c666c474_ParamIns> _1c6668e10_instance(jule::Ptr<_1c6668a47_Param> _self_);
inline jule::Bool _1c6669196_IsSelf(_1c6668a47_Param* _self_);
inline jule::Bool _1c666942c_IsRef(_1c6668a47_Param* _self_);
inline jule::Bool _1c666a9c2_IsVoid(_1c666a51b_Fn* _self_);
inline jule::Bool _1c666ac58_IsMethod(_1c666a51b_Fn* _self_);
inline jule::Bool _1c666aede_IsEntryPoint(_1c666a51b_Fn* _self_);
inline jule::Bool _1c666b275_IsInit(_1c666a51b_Fn* _self_);
inline jule::Bool _1c666b50b_IsAnon(_1c666a51b_Fn* _self_);
inline jule::Bool _1c666b792_AnyVar(_1c666a51b_Fn* _self_);
inline jule::Ptr<_1c666d4ec_FnIns> _1c666ba28_instanceForce(jule::Ptr<_1c666a51b_Fn> _self_);
inline jule::Ptr<_1c666d4ec_FnIns> _1c666bcae_instance(jule::Ptr<_1c666a51b_Fn> _self_);
inline jule::Ptr<_1c666d4ec_FnIns> _1c666c0bc_appendInstance(_1c666a51b_Fn* _self_, jule::Ptr<_1c666d4ec_FnIns>* _13835_ins);
inline jule::Str _1c666c81a_Str(_1c666c474_ParamIns* _self_);
inline jule::Str _1c666d871_Str(_1c666d4ec_FnIns* _self_);
inline jule::Bool _1c666dbb2_Equal(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _22818_other);
inline jule::Bool _1c666e157_EqualFn(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c666d4ec_FnIns>* _23921_f);
inline jule::Bool _1c666e498_equalTrait(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c666d4ec_FnIns>* _29824_other);
inline jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _1c666e72e_Types(_1c666d4ec_FnIns* _self_);
inline jule::Bool _1c666e9b5_IsBuiltin(_1c666d4ec_FnIns* _self_);
inline jule::Bool _1c666ec4b_IsAnon(_1c666d4ec_FnIns* _self_);
inline jule::Bool _1c667008c_Same(_1c666d4ec_FnIns* _self_, jule::Ptr<_1c666d4ec_FnIns> _34116_f);
inline jule::Str _1c66703cd_GetKindStr(_1c666d4ec_FnIns* _self_, jule::Bool _35822_ident);
inline jule::Ptr<_1c6671687_ReferenceStack> static__1c66719a6_new(void);
inline jule::I64 _1c6671da2_Len(_1c6671687_ReferenceStack* _self_);
inline jule::Any _1c66721e3_At(_1c6671687_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1c667249b_Push(_1c6671687_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1d7303a34_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c666d4ec_FnIns> _7820_t);
inline jule::Bool _1d7319d58_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c672acb3_Var> _7820_t);
inline jule::Bool _1d740695b_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c665865d_StructIns> _7820_t);
inline jule::Bool _1d77ac509_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c667de9c_Trait> _7820_t);
inline void _1c667813e_pushErr(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c661e327_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1c66788c0_pushSuggestion(_1c6677649_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1c6678cbb_checkCppUseDeclPath(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66790c9_buildCppHeaderImport(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _36541_decl);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667941a_buildStdImport(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _39335_decl);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667975b_buildIdentImport(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _43338_decl);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6679a9c_buildImport(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _48733_decl);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6679ddd_findUseDecl(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _49828_pkg);
inline jule::Bool _1c667a22e_checkDuplicateUseDecl(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _50642_pkg);
inline void _1c667a592_implImportSelections(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _51641_imp, jule::Ptr<_1c664ca09_UseDecl>* _51664_decl);
inline jule::Str _1c667a8d3_getAsLinkPath(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Str _53134_path);
inline void _1c667ad01_pushCycleError(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c6677649_symbolBuilder>* _54532_sb, jule::Str _54552_path, _20759e353_StrBuilder* _54568_message);
inline void _1c667b21e_pushCrossCycleError(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c6677649_symbolBuilder>* _55837_target, jule::Ptr<_1c66d63cd_ImportInfo>* _55862_imp, jule::Ptr<_1c661e327_Token>* _55881_errorToken);
inline jule::Bool _1c667b61a_checkImportCycles(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c66d63cd_ImportInfo> _58134_imp, jule::Ptr<_1c664ca09_UseDecl>* _58153_decl);
inline void _1c667ba38_checkPackageAccessibility(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path);
inline jule::Bool _1c667be34_importPackage(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _61835_imp, jule::Ptr<_1c664ca09_UseDecl>* _61858_decl);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667c275_importUseDecl(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _66535_decl);
inline void _1c667c473_importUseDecls(jule::Ptr<_1c6677649_symbolBuilder> _self_);
inline void _1c667c72b_appendNode(_1c6677649_symbolBuilder* _self_, _1c6633902_Node* _69431_node);
inline void _1c667c929_appendNodes(_1c6677649_symbolBuilder* _self_);
inline void _1c667cbd2_pushDirectivePass(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c6633d20_Directive>* _73038_d);
inline void _1c667cdd0_appendTopDirectives(_1c6677649_symbolBuilder* _self_);
inline void _1c667d0cd_build(jule::Ptr<_1c6677649_symbolBuilder> _self_);
inline jule::Str _1c667e398_Str(_1c667de9c_Trait* _self_);
inline jule::Bool _1c667e6d9_Equal(jule::Ptr<_1c667de9c_Trait> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _2518_other);
inline jule::Ptr<_1c666a51b_Fn> _1c667eb7e_FindMethod(_1c667de9c_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1c666a51b_Fn> _1c6680311_findMethodInherit(_1c667de9c_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1c6681026_AutoExpr(_1c6680b3b_EnumItem* _self_);
inline jule::Str _1c6681a60_Str(_1c66816a8_Enum* _self_);
inline jule::Bool _1c6681da1_Equal(jule::Ptr<_1c66816a8_Enum> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _3818_other);
inline jule::Ptr<_1c6680b3b_EnumItem> _1c66822d0_FindItem(_1c66816a8_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1c6683237_Str(_1c6682db3_TypeEnum* _self_);
inline jule::Bool _1c6683578_Equal(jule::Ptr<_1c6682db3_TypeEnum> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _8018_other);
inline jule::Ptr<_1c66827db_TypeEnumItem> _1c66839a7_FindItem(_1c6682db3_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1c6685bda_Str(_1c66857de_comptimeRange* _self_);
inline jule::Bool _1c668602b_Equal(jule::Ptr<_1c66857de_comptimeRange> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _2718_other);
inline jule::Str _1c6686702_Str(_1c668634a_comptimeStructField* _self_);
inline jule::Bool _1c6686a43_Equal(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _3718_other);
inline jule::Ptr<_1c6788b56_Data> _1c668704e__Decl(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c678a87d_eval>* _4127_e, jule::Ptr<_1c663c961_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1c6788b56_Data> _1c668744a__Type(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c678a87d_eval>* _5327_e, jule::Ptr<_1c663c961_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1c6788b56_Data> _1c668778b_subIdent(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1c6687ea6_Str(_1c6687add_comptimeStructFields* _self_);
inline jule::Bool _1c66882e7_Equal(jule::Ptr<_1c6687add_comptimeStructFields> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _9018_other);
inline void _1c668877b_ready(_1c6687add_comptimeStructFields* _self_, jule::Ptr<_1c672acb3_Var>* _9426_keyA, jule::Ptr<_1c672acb3_Var>* _9443_keyB);
inline void _1c6688ade_index(_1c6687add_comptimeStructFields* _self_, jule::Ptr<_1c6788b56_Data>* _11526_d, jule::I64 _11536_i);
inline void _1c668900c_step(_1c6687add_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1c672acb3_Var>* _12633_keyA, jule::Ptr<_1c672acb3_Var>* _12650_keyB);
inline jule::I64 _1c6689293_len(_1c6687add_comptimeStructFields* _self_);
inline jule::Str _1c6689925_Str(_1c668956d_comptimeStatic* _self_);
inline jule::Bool _1c6689c66_Equal(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _15018_other);
inline jule::Ptr<_1c6788b56_Data> _1c668a272__Decl(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c678a87d_eval>* _15427_e, jule::Ptr<_1c663c961_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1c6788b56_Data> _1c668a66d__Type(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c678a87d_eval>* _16627_e, jule::Ptr<_1c663c961_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1c6788b56_Data> _1c668a9ae_subIdent(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1c668b1c9_Str(_1c668ad22_comptimeStatics* _self_);
inline jule::Bool _1c668b51a_Equal(jule::Ptr<_1c668ad22_comptimeStatics> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _20318_other);
inline void _1c668b99e_ready(_1c668ad22_comptimeStatics* _self_, jule::Ptr<_1c672acb3_Var>* _20726_keyA, jule::Ptr<_1c672acb3_Var>* _20743_keyB);
inline void _1c668bd12_index(_1c668ad22_comptimeStatics* _self_, jule::Ptr<_1c6788b56_Data>* _22826_d, jule::I64 _22836_i);
inline void _1c668c230_step(_1c668ad22_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1c672acb3_Var>* _23933_keyA, jule::Ptr<_1c672acb3_Var>* _23950_keyB);
inline jule::I64 _1c668c4b6_len(_1c668ad22_comptimeStatics* _self_);
inline jule::Str _1c668cb48_Str(_1c668c791_comptimeEnumField* _self_);
inline jule::Bool _1c668ce89_Equal(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _26318_other);
inline jule::Ptr<_1c6788b56_Data> _1c668d484__Decl(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Ptr<_1c678a87d_eval>* _26727_e, jule::Ptr<_1c663c961_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1c6788b56_Data> _1c668d7c5_subIdent(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1c668e067_Str(_1c668daa0_comptimeEnumFields* _self_);
inline jule::Bool _1c668e3a8_Equal(jule::Ptr<_1c668daa0_comptimeEnumFields> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _30118_other);
inline void _1c668e7b5_ready(_1c668daa0_comptimeEnumFields* _self_, jule::Ptr<_1c672acb3_Var>* _30526_keyA, jule::Ptr<_1c672acb3_Var>* _30543_keyB);
inline void _1c668eb28_index(_1c668daa0_comptimeEnumFields* _self_, jule::Ptr<_1c6788b56_Data>* _32626_d, jule::I64 _32636_i);
inline void _1c6690046_step(_1c668daa0_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1c672acb3_Var>* _33733_keyA, jule::Ptr<_1c672acb3_Var>* _33750_keyB);
inline jule::I64 _1c66902cc_len(_1c668daa0_comptimeEnumFields* _self_);
inline jule::Str _1c669095e_Str(_1c66905a7_comptimeParam* _self_);
inline jule::Bool _1c6690ca0_Equal(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _36118_other);
inline jule::Ptr<_1c6788b56_Data> _1c66912bc__Decl(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _36527_e, jule::Ptr<_1c663c961_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66916b8__Type(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _37727_e, jule::Ptr<_1c663c961_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6691ab4__Recv(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _38527_e, jule::Ptr<_1c663c961_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6691e05_subIdent(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1c66926a8_Str(_1c6692411_comptimeParams* _self_);
inline jule::Bool _1c66929e9_Equal(jule::Ptr<_1c6692411_comptimeParams> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _43418_other);
inline void _1c6692e7d_ready(_1c6692411_comptimeParams* _self_, jule::Ptr<_1c672acb3_Var>* _43826_keyA, jule::Ptr<_1c672acb3_Var>* _43843_keyB);
inline void _1c66932e1_index(_1c6692411_comptimeParams* _self_, jule::Ptr<_1c6788b56_Data>* _45926_d, jule::I64 _45936_i);
inline void _1c669370e_step(_1c6692411_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1c672acb3_Var>* _47033_keyA, jule::Ptr<_1c672acb3_Var>* _47050_keyB);
inline jule::I64 _1c6693995_len(_1c6692411_comptimeParams* _self_);
inline jule::Str _1c6694127_Str(_1c6693c70_comptimeTypeInfos* _self_);
inline jule::Bool _1c6694468_Equal(jule::Ptr<_1c6693c70_comptimeTypeInfos> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _49418_other);
inline void _1c66948ec_ready(_1c6693c70_comptimeTypeInfos* _self_, jule::Ptr<_1c672acb3_Var>* _49826_keyA, jule::Ptr<_1c672acb3_Var>* _49843_keyB);
inline void _1c6694c60_index(_1c6693c70_comptimeTypeInfos* _self_, jule::Ptr<_1c6788b56_Data>* _51926_d, jule::I64 _51936_i);
inline void _1c669517d_step(_1c6693c70_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1c672acb3_Var>* _52833_keyA, jule::Ptr<_1c672acb3_Var>* _52850_keyB);
inline jule::I64 _1c6695414_len(_1c6693c70_comptimeTypeInfos* _self_);
inline jule::Str _1c6695a96_Str(_1c66956de_comptimeTypeInfo* _self_);
inline jule::Bool _1c6695dd7_Equal(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _55218_other);
inline jule::Ptr<_1c6788b56_Data> _1c6696525__Decl(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _55627_e, jule::Ptr<_1c663c961_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6696921__Str(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _59322_e, jule::Ptr<_1c663c961_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6696d1c__Kind(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _60627_e, jule::Ptr<_1c663c961_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6697218__Bits(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _68627_e, jule::Ptr<_1c663c961_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6697614__Elem(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _71027_e, jule::Ptr<_1c663c961_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6697a10__Size(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _74327_e, jule::Ptr<_1c663c961_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6697e0b__Key(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _76226_e, jule::Ptr<_1c663c961_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6698307__Value(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _77528_e, jule::Ptr<_1c663c961_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6698703__Fields(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _78829_e, jule::Ptr<_1c663c961_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6698aee__Statics(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _81730_e, jule::Ptr<_1c663c961_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6698eea__Binded(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _83629_e, jule::Ptr<_1c663c961_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66993e6__Ordered(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _84926_e, jule::Ptr<_1c663c961_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66997e2__Comparable(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _86229_e, jule::Ptr<_1c663c961_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1c6788b56_Data> _1c6699bdd__Mutable(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _87526_e, jule::Ptr<_1c663c961_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669a0d9__Types(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _88828_e, jule::Ptr<_1c663c961_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669a4d5__CanNil(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _91129_e, jule::Ptr<_1c663c961_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669a8d1__GC(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _92425_e, jule::Ptr<_1c663c961_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669accc__Result(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _93729_e, jule::Ptr<_1c663c961_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669b1c8__Params(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _95329_e, jule::Ptr<_1c663c961_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669b519_subIdent(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1c669bb9b_Str(_1c669b7e4_comptimeValue* _self_);
inline jule::Bool _1c669bedc_Equal(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _111818_other);
inline jule::Ptr<_1c6788b56_Data> _1c669c54d__Unwrap(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _112229_e, jule::Ptr<_1c663c961_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669c949__Type(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _113027_e, jule::Ptr<_1c663c961_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669cd45__Lvalue(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _113829_e, jule::Ptr<_1c663c961_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669d241__Mutable(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _115130_e, jule::Ptr<_1c663c961_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669d63c__Const(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _116428_e, jule::Ptr<_1c663c961_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669da38__Field(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _117728_e, jule::Ptr<_1c663c961_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669de34__Method(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _121229_e, jule::Ptr<_1c663c961_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1c6788b56_Data> _1c669e275_subIdent(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1c669e907_Str(_1c669e550_comptimeFiles* _self_);
inline jule::Bool _1c669ec48_Equal(jule::Ptr<_1c669e550_comptimeFiles> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _132218_other);
inline void _1c66a01cc_ready(_1c669e550_comptimeFiles* _self_, jule::Ptr<_1c672acb3_Var>* _132626_keyA, jule::Ptr<_1c672acb3_Var>* _132643_keyB);
inline void _1c66a0540_index(_1c669e550_comptimeFiles* _self_, jule::Ptr<_1c6788b56_Data>* _134726_d, jule::I64 _134736_i);
inline void _1c66a095d_step(_1c669e550_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1c672acb3_Var>* _135833_keyA, jule::Ptr<_1c672acb3_Var>* _135850_keyB);
inline jule::I64 _1c66a0be4_len(_1c669e550_comptimeFiles* _self_);
inline jule::Str _1c66a1376_Str(_1c66a0ebe_comptimeFile* _self_);
inline jule::Bool _1c66a16b7_Equal(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _138218_other);
inline jule::Ptr<_1c6788b56_Data> _1c66a1bd4__Path(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _138627_e, jule::Ptr<_1c663c961_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a20d0__Name(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _139927_e, jule::Ptr<_1c663c961_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a24cb__Dir(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _141226_e, jule::Ptr<_1c663c961_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a281c_subIdent(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1c66a31d0_Str(_1c66a2ae7_comptimeDecls* _self_);
inline jule::Bool _1c66a3521_Equal(jule::Ptr<_1c66a2ae7_comptimeDecls> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _146118_other);
inline void _1c66a3895_ready(_1c66a2ae7_comptimeDecls* _self_, jule::Ptr<_1c672acb3_Var>* _146526_keyA, jule::Ptr<_1c672acb3_Var>* _146543_keyB);
inline void _1c66a3c08_index(_1c66a2ae7_comptimeDecls* _self_, jule::Ptr<_1c6788b56_Data>* _148626_d, jule::I64 _148636_i);
inline void _1c66a4126_step(_1c66a2ae7_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1c672acb3_Var>* _149533_keyA, jule::Ptr<_1c672acb3_Var>* _149550_keyB);
inline jule::I64 _1c66a43ac_len(_1c66a2ae7_comptimeDecls* _self_);
inline jule::Str _1c66a528c_Str(_1c66a4dd5_comptimeDecl* _self_);
inline jule::Bool _1c66a55cd_Equal(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _153418_other);
inline jule::Str _1c66a5a2e_declAsStr(_1c66a4dd5_comptimeDecl* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c66a5e2a__Name(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _156527_e, jule::Ptr<_1c663c961_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a6326__Public(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _160329_e, jule::Ptr<_1c663c961_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a6722__Binded(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _164129_e, jule::Ptr<_1c663c961_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a6b1d__Exceptional(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _167534_e, jule::Ptr<_1c663c961_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a7019__Mutable(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _169630_e, jule::Ptr<_1c663c961_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a7415__Variadic(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _172931_e, jule::Ptr<_1c663c961_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a7811__Reference(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _176032_e, jule::Ptr<_1c663c961_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a7c0c__Params(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _179229_e, jule::Ptr<_1c663c961_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a8108__Fields(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _182729_e, jule::Ptr<_1c663c961_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a8504__Statics(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _186830_e, jule::Ptr<_1c663c961_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a8900__Methods(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _190430_e, jule::Ptr<_1c663c961_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1c6788b56_Data> _1c66a8c41_subIdent(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*> _1c66abdba_readyFn(jule::Ptr<_1c66ab98b_constraintChecker> _self_);
inline jule::Bool _1c66ac151_readyFi(jule::Ptr<_1c66ab98b_constraintChecker> _self_);
inline jule::Bool _1c66ac3d7_readySi(jule::Ptr<_1c66ab98b_constraintChecker> _self_);
inline jule::Bool _1c66ac66d_ready(jule::Ptr<_1c66ab98b_constraintChecker> _self_);
inline jule::Bool _1c66ac904_check(jule::Ptr<_1c66ab98b_constraintChecker> _self_);
inline jule::Bool _1c66ae1db_IsTraitImpl(_1c66adce0_Impl* _self_);
inline jule::Bool _1c66ae472_IsStructImpl(_1c66adce0_Impl* _self_);
inline jule::Bool _1c66b4d4b_IsWhileNext(_1c66b49a5_WhileIter* _self_);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66bad30_SelectPackage(_1c66ba857_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _37429_selector);
inline jule::Ptr<_1c672acb3_Var> _1c66bb22b_FindVar(_1c66ba857_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded);
inline jule::Ptr<_1c67baade_TypeAlias> _1c66bb627_FindTypeAlias(_1c66ba857_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded);
inline jule::Ptr<_1c6655803_Struct> _1c66bba23_FindStruct(_1c66ba857_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded);
inline jule::Ptr<_1c666a51b_Fn> _1c66bbe1e_FindFn(_1c66ba857_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded);
inline jule::Ptr<_1c667de9c_Trait> _1c66bc260_FindTrait(_1c66ba857_scopeChecker* _self_, jule::Str _44525_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c66bc5a1_FindEnum(_1c66ba857_scopeChecker* _self_, jule::Str _45424_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c66bc8e2_FindTypeEnum(_1c66ba857_scopeChecker* _self_, jule::Str _46328_ident);
inline jule::Bool _1c66bcc44_isUnsafe(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline jule::Bool _1c66bceca_isRoot(_1c66ba857_scopeChecker* _self_);
inline void _1c66bd1c8_stop(_1c66ba857_scopeChecker* _self_);
inline jule::Bool _1c66bd45e_stopped(_1c66ba857_scopeChecker* _self_);
inline jule::Bool _1c66bd6e5_isDeferred(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline void _1c66bd99d_pushCaptured(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c672acb3_Var>* _52534_v);
inline jule::Ptr<_1c66ba857_scopeChecker> _1c66bdc34_getRoot(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline jule::Ptr<_1c66ba857_scopeChecker> _1c66bdeba_getHardRoot(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline jule::Ptr<_1c6671687_ReferenceStack> _1c66be251_getOwnerRefers(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline jule::Ptr<_1c672acb3_Var> _1c66be592_findVar(_1c66ba857_scopeChecker* _self_, jule::Str _57223_ident);
inline jule::Ptr<_1c66b6116_Label> _1c66be8d3_findLabel(_1c66ba857_scopeChecker* _self_, jule::Str* _59326_ident);
inline jule::Ptr<_1c66b9867_scopeLabel> _1c66bec24_findLabelScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Str* _60932_ident);
inline jule::Ptr<_1c66b9867_scopeLabel> _1c66c0065_findLabelAll(_1c66ba857_scopeChecker* _self_, jule::Str* _62029_ident);
inline jule::Bool _1c66c0461_isDuplicatedIdent(_1c66ba857_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident);
inline void _1c66c0719_checkVarDecl(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664776d_VarDecl> _65233_decl);
inline void _1c66c09c2_checkTypeAlias(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c67baade_TypeAlias>* _68336_ta);
inline void _1c66c0c7a_checkTypeAliasDecl(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664b420_TypeAliasDecl> _69939_decl);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c1011_getChild(_1c66ba857_scopeChecker* _self_);
inline void _1c66c142e_checkChildSsc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _71035_tree, jule::Ptr<_1c66b35b9_Scope>* _71058_s, jule::Ptr<_1c66ba857_scopeChecker>* _71074_ssc);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c182a_checkChildSc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _71734_tree, jule::Ptr<_1c66ba857_scopeChecker>* _71757_ssc);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c1b6b_checkChild(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _72332_tree);
inline void _1c66c1e24_checkAnonScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree> _72835_tree);
inline void _1c66c2287_processErrorCall(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c666621a_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1c661e327_Token> _73369_err);
inline void _1c66c2540_checkExpr(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6638c37_Expr> _74630_expr);
inline jule::Ptr<_1c66b39d7_If> _1c66c2881_checkIf(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664a353_If> _77728_i);
inline jule::Ptr<_1c66b3cd4_Else> _1c66c2bc2_checkElse(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664a72c_Else> _79730_e);
inline void _1c66c2e7a_checkConditional(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664abd3_Conditional> _80337_conditional);
inline void _1c66c3453_checkIterScopeSsc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _81934_it, jule::Ptr<_1c6644924_ScopeTree> _81951_tree, jule::Ptr<_1c66b35b9_Scope>* _81974_s, jule::Ptr<_1c66ba857_scopeChecker> _81989_ssc);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c3909_checkIterScopeSc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _82433_it, jule::Ptr<_1c6644924_ScopeTree> _82450_tree, jule::Ptr<_1c66ba857_scopeChecker> _82472_ssc);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c3d05_checkIterScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _83031_it, jule::Ptr<_1c6644924_ScopeTree>* _83049_tree);
inline void _1c66c40ad_checkInfIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _83534_it);
inline void _1c66c4366_checkWhileIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _84136_it);
inline void _1c66c4784_checkComptimeRangeIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _89144_it, jule::Ptr<_1c66b5401_RangeIter>* _89160_kind, jule::Ptr<_1c6788b56_Data>* _89183_d);
inline void _1c66c4a3c_checkRangeIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _94836_it);
inline void _1c66c4ce5_checkIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter> _100830_it);
inline jule::Bool _1c66c5136_checkValidContLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _103236_it);
inline jule::Bool _1c66c5477_checkValidBreakLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _104837_ptr);
inline jule::Ptr<_1c66b5786_ContSt> _1c66c57b8_checkContValidScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6649d9c_ContSt> _107136_c);
inline void _1c66c5a71_checkCont(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6649d9c_ContSt> _109526_c);
inline void _1c66c5d29_checkLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6641ed7_LabelSt> _114231_l);
inline void _1c66c60d2_pushGoto(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66423b1_GotoSt> _116129_gt);
inline void _1c66c638a_checkPostfix(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt> _117233_a);
inline jule::Bool _1c66c66cb_isNewAssignIdent(_1c66ba857_scopeChecker* _self_, jule::Str _120532_ident);
inline void _1c66c6984_removeInteriorMutRisk(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6788b56_Data>* _121843_d);
inline jule::Bool _1c66c6e3a_checkStructureAssignOp(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c665865d_StructIns>* _123244_s, jule::Ptr<_1c66433a1_AssignSt>* _123264_a, jule::Ptr<_1c6788b56_Data>* _123283_r);
inline void _1c66c71e3_checkSingleAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt>* _127139_a);
inline void _1c66c7831_processEndPartOfMultiAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _135349_st, jule::Ptr<_1c66433a1_AssignSt>* _135372_a, jule::Ptr<_1c6642d1d_AssignLeft>* _13548_lexpr, jule::Ptr<_1c6788b56_Data>* _135433_l, jule::Ptr<_1c6788b56_Data>* _135448_r, jule::Bool _135458_strict);
inline void _1c66c7ad9_checkMultiAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt>* _142938_a);
inline void _1c66c7d92_checkAssignSt(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt> _149634_a);
inline jule::Ptr<_1c66b35b9_Scope> _1c66c828d_checkCaseScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b8822_Case>* _150732_c, jule::Ptr<_1c6644924_ScopeTree>* _150747_tree);
inline jule::Ptr<_1c66b8822_Case> _1c66c87ee_checkCase(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match> _151330_m, jule::I64 _151341_i, jule::Ptr<_1c664b8c6_Case> _151353_c, jule::Ptr<_1c6788b56_Data> _151372_expr);
inline void _1c66c8c1c_checkCases(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _159032_m, jule::Ptr<_1c66b7ce9_Match> _159051_rm, jule::Ptr<_1c6788b56_Data> _159067_expr);
inline jule::Ptr<_1c66b8822_Case> _1c66c9118_checkDefault(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match> _161133_m, jule::Ptr<_1c664a72c_Else> _161148_d);
inline void _1c66c947b_checkComptimePanic(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c661e327_Token> _161939_callToken, jule::Ptr<_1c66b35b9_Scope>* _161959_s);
inline void _1c66c97de_processConstMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match>* _165139_tm, jule::Ptr<_1c664c1e0_MatchCase>* _165156_m);
inline void _1c66c9a97_checkTypeMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _168036_m);
inline void _1c66c9d50_checkCommonMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _172338_m);
inline void _1c66ca108_checkMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase> _177431_m);
inline void _1c66ca3b1_checkFall(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66426ad_FallSt> _178226_f);
inline jule::Ptr<_1c66b5b60_BreakSt> _1c66ca702_checkBreakWithLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _180536_b);
inline jule::Ptr<_1c66b5b60_BreakSt> _1c66caa43_checkPlainBreak(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _186332_b);
inline void _1c66caceb_checkBreak(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _188527_b);
inline void _1c66cb0a4_checkRet(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6647b47_RetSt> _189629_r);
inline void _1c66cb35c_checkUseExpr(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c663960b_UseExpr> _192129_ue);
inline void _1c66cb615_checkNode(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Any* _193731_node);
inline void _1c66cb813_checkResult(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline void _1c66cba11_checkTree(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline void _1c66cbd74_checkGoto(_1c66ba857_scopeChecker* _self_, jule::Ptr<_1c66b6776_GotoSt>* _203930_gt, jule::Ptr<_1c66b9867_scopeLabel>* _203948_label);
inline void _1c66cc072_checkGotos(_1c66ba857_scopeChecker* _self_);
inline void _1c66cc270_checkLabels(_1c66ba857_scopeChecker* _self_);
inline void _1c66cc46d_checkVars(_1c66ba857_scopeChecker* _self_);
inline void _1c66cc66b_checkAliases(_1c66ba857_scopeChecker* _self_);
inline void _1c66cc9ce_check(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _213427_tree, jule::Ptr<_1c66b35b9_Scope>* _213450_s);
inline jule::Ptr<_1c66ba857_scopeChecker> _1c66ccc65_newChildChecker(jule::Ptr<_1c66ba857_scopeChecker> _self_);
inline void _1c66cec45_checkCdef(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _1626_d);
inline void _1c66ceeed_checkTypedef(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _3229_d);
inline void _1c66d02a6_checkNamespace(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _4835_d);
inline void _1c66d055e_checkDeprecated(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _10036_d);
inline void _1c66d0817_checkTest(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _14126_d);
inline void _1c66d0ac0_checkExport(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _16232_d);
inline void _1c66d0d78_checkDirective(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _20035_d);
inline void _1c66d1076_check(_1c66ce7e4_directiveChecker* _self_);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66d68ea_SelectPackage(_1c66d63cd_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> );
inline jule::Ptr<_1c672acb3_Var> _1c66d6ce6_FindVar(_1c66d63cd_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool );
inline jule::Ptr<_1c67baade_TypeAlias> _1c66d71e2_FindTypeAlias(_1c66d63cd_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool );
inline jule::Ptr<_1c6655803_Struct> _1c66d75dd_FindStruct(_1c66d63cd_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool );
inline jule::Ptr<_1c666a51b_Fn> _1c66d79d9_FindFn(_1c66d63cd_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool );
inline jule::Ptr<_1c667de9c_Trait> _1c66d7d2a_FindTrait(_1c66d63cd_ImportInfo* _self_, jule::Str _24525_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c66d816b_FindEnum(_1c66d63cd_ImportInfo* _self_, jule::Str _25624_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c66d84ac_FindTypeEnum(_1c66d63cd_ImportInfo* _self_, jule::Str _26728_ident);
inline jule::Bool _1c66d8952_isLookupable(_1c66d63cd_ImportInfo* _self_, jule::Str* _27625_ident);
inline jule::Bool _1c66d8c93_existIdent(_1c66d63cd_ImportInfo* _self_, jule::Str _29622_ident);
inline jule::Bool _1c66d9029_isAccessibleViaSelection(_1c66d63cd_ImportInfo* _self_);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66d97cc_SelectPackage(_1c66d9304_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> );
inline jule::Ptr<_1c672acb3_Var> _1c66d9bc8_FindVar(_1c66d9304_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded);
inline jule::Ptr<_1c67baade_TypeAlias> _1c66da0c4_FindTypeAlias(_1c66d9304_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded);
inline jule::Ptr<_1c6655803_Struct> _1c66da4c0_FindStruct(_1c66d9304_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded);
inline jule::Ptr<_1c666a51b_Fn> _1c66da8bb_FindFn(_1c66d9304_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded);
inline jule::Ptr<_1c667de9c_Trait> _1c66dac0c_FindTrait(_1c66d9304_Package* _self_, jule::Str _34725_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c66db04d_FindEnum(_1c66d9304_Package* _self_, jule::Str _35324_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c66db38e_FindTypeEnum(_1c66d9304_Package* _self_, jule::Str _35928_ident);
inline jule::Ptr<_1c66956de_comptimeTypeInfo> _1c67061bc_pushComptimeTypeInfo(_1c6705c27_commonSemaMeta* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _22341_t);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6706d27_SelectPackage(_1c670684e_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _25229_selector);
inline jule::Ptr<_1c672acb3_Var> _1c6707223_FindVar(_1c670684e_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded);
inline jule::Ptr<_1c67baade_TypeAlias> _1c670761e_FindTypeAlias(_1c670684e_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded);
inline jule::Ptr<_1c6655803_Struct> _1c6707a1a_FindStruct(_1c670684e_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1c666a51b_Fn> _1c6707e16_FindFn(_1c670684e_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded);
inline jule::Ptr<_1c667de9c_Trait> _1c6708257_FindTrait(_1c670684e_sema* _self_, jule::Str _38925_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c6708598_FindEnum(_1c670684e_sema* _self_, jule::Str _42124_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c67088d9_FindTypeEnum(_1c670684e_sema* _self_, jule::Str _45328_ident);
inline jule::Bool _1c6708ce6_isFlag(_1c670684e_sema* _self_, jule::I64 _48218_flags);
inline jule::Ptr<_1c678348b_SymbolTable> _1c670907c_getCurrentFile(_1c670684e_sema* _self_);
inline void _1c6709335_setCurrentFile(_1c670684e_sema* _self_, jule::Ptr<_1c678348b_SymbolTable> _48534_f);
inline void _1c6709753_pushErr(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args);
inline void _1c6709ab6_pushSuggestion(_1c670684e_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args);
inline jule::Bool _1c6709eb2_isAccessibleDefine(_1c670684e_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1c661e327_Token> _49844_token);
inline jule::Bool _1c670a468_isDuplicatedIdent(_1c670684e_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded);
inline void _1c670a7cb_checkDirectives(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _53837_d, jule::Any _53863_o);
inline jule::Bool _1c670ac82_checkGenericQuantity(_1c670684e_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1c661e327_Token> _54763_token);
inline jule::Bool _1c670b17d_isDuplicatedImportSelection(_1c670684e_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident);
inline jule::Any _1c670b579_getImportDef(_1c670684e_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1c66d63cd_ImportInfo>* _57942_imp);
inline jule::Bool _1d6d49e4e_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c672acb3_Var>* _59456_s);
inline jule::Bool _1d6d4e87c_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c67baade_TypeAlias>* _59456_s);
inline jule::Bool _1d6d53ee1_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c6655803_Struct>* _59456_s);
inline jule::Bool _1d6d58699_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c667de9c_Trait>* _59456_s);
inline jule::Bool _1d6d5cd0d_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c66816a8_Enum>* _59456_s);
inline jule::Bool _1d6d6220d_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c6682db3_TypeEnum>* _59456_s);
inline jule::Bool _1d6d66872_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c666a51b_Fn>* _59456_s);
inline jule::Bool _1c670bcb6_checkImportSelectedSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _60850_imp);
inline jule::Bool _1d6d6b525_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d6c6ad_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d6e759_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d7264c_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d75331_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c667de9c_Trait>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d77a4d_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c66816a8_Enum>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1d6d7a226_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et);
inline jule::Bool _1c670c503_checkImportAllSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _66741_imp);
inline jule::Bool _1c670c844_checkImportSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _68142_imp);
inline jule::Bool _1c670cb85_isUseAliasDuplication(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _69038_imp);
inline jule::Bool _1c670cec6_checkImport(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _70632_imp);
inline void _1c670d1c4_checkImports(_1c670684e_sema* _self_);
inline void _1c670d3c2_implFileImpls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c670d5c0_implImpls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c670d7bd_checkEnums(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c670d9bb_checkFileInherits(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c670dbb9_checkInherits(jule::Ptr<_1c670684e_sema> _self_);
inline _1c67cdccd_typeChecker _1c670e170_typeChecker(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _79547_generics, jule::Ptr<_1c67cccdd_referencer> _7967_referencer);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c670e6d1_buildTypeWithRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8237_generics, jule::Ptr<_1c67cccdd_referencer> _82335_referencer);
inline jule::Bool _1c670ec42_checkTypeWithRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c40e2_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8307_generics, jule::Ptr<_1c67cccdd_referencer> _83035_referencer);
inline jule::Ptr<_1c66ab98b_constraintChecker> _1c670eec8_constraintChecker(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Bool _1c67103c4_checkType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c40e2_TypeSymbol>* _84431_t, jule::Trait _84451_l);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c671087a_checkTypeRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1c6671687_ReferenceStack> _84975_refers);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c6710d31_buildTypeWithGenerics(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8627_generics, jule::Ptr<_1c6671687_ReferenceStack> _86235_refers);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67114b3_selectType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _87932_t);
inline jule::Ptr<_1c678a87d_eval> _1c6711969_evalpd(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1c67bb8d1_TypeKind> _89142_p, jule::Ptr<_1c672acb3_Var> _89160_owner);
inline jule::Ptr<_1c678a87d_eval> _1c6711d65_evalp(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1c67bb8d1_TypeKind> _90641_p);
inline jule::Ptr<_1c678a87d_eval> _1c67121a6_eval(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _91125_l);
inline jule::Bool _1c67127c2_checkAssignType(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1c67bb8d1_TypeKind>* _91554_dest, jule::Ptr<_1c6788b56_Data>* _9168_d, jule::Ptr<_1c661e327_Token> _91622_errorToken, jule::Ptr<_1c6671687_ReferenceStack> _91646_refers);
inline jule::Bool _1c6712c78__checkTypeCompatibility(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _95845_dest, jule::Ptr<_1c67bb8d1_TypeKind>* _95867_src, jule::Ptr<_1c661e327_Token> _9597_errorToken);
inline jule::Bool _1c671322e_checkTypeCompatibility(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _97644_dest, jule::Ptr<_1c67bb8d1_TypeKind>* _9778_src, jule::Ptr<_1c661e327_Token>* _97729_errorToken);
inline void _1c671364c_pushCompatiblityError(_1c670684e_sema* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _98542_dest, jule::Ptr<_1c6788b56_Data>* _98564_src, jule::Ptr<_1c661e327_Token>* _9868_errorToken);
inline jule::Bool _1c6713b03_checkTypeCompatibility1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _100345_dest, jule::Ptr<_1c6788b56_Data>* _100367_src, jule::Ptr<_1c661e327_Token>* _10048_errorToken);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67140a9_buildNonGenericTypeKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>* _101944_ignored);
inline jule::Bool _1c67144a5_buildFnNonGenericTypeKinds(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns> _103047_f, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>* _103063_ignored);
inline jule::Ptr<_1c666d4ec_FnIns> _1c67147e6_getTraitCheckFnKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _105341_f);
inline jule::Bool _1c6714c9c_checkConstraintsFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _108240_f, jule::Ptr<_1c661e327_Token>* _108256_et, jule::Ptr<_1c666d4ec_FnIns> _108272_exist);
inline jule::Bool _1c6715253_checkConstraintsStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _109644_s, jule::Ptr<_1c661e327_Token>* _109664_et, jule::Ptr<_1c665865d_StructIns> _109680_exist);
inline jule::Bool _1c671564e_basicFnEnvironment(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*> _111351_algo);
inline jule::Bool _1c6715a4a_fnEnvironment(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*> _113346_algo);
inline void _1c6715d03_checkFnParamKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666c474_ParamIns>* _114538_p);
inline jule::Bool _1c6716144_reloadFnInsTypes(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns> _115237_f);
inline jule::Bool _1c67165ea_checkRefValidityForInitExpr(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1c6788b56_Data>* _119264_d, jule::Ptr<_1c661e327_Token>* _119279_errorToken);
inline jule::Bool _1c671693b_isMutRiskyStruct(_1c670684e_sema* _self_, jule::Ptr<_1c665865d_StructIns>* _120929_s);
inline jule::Bool _1c6717057_checkValidityForInitExpr(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1c67bb8d1_TypeKind>* _12374_leftKind, jule::Ptr<_1c6788b56_Data>* _123730_d, jule::Ptr<_1c661e327_Token>* _123745_errorToken);
inline jule::Bool _1c6717453_checkTypeAliasDeclKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _126444_ta, jule::Trait _126464_l);
inline void _1c67177b6_checkTypeAliasDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _128740_ta, jule::Trait _128760_l);
inline void _1c6717a6e_checkTypeAliasDeclDup(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _129543_ta);
inline jule::Bool _1c6717d05_checkTypeAliasDecls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1d6e36733_checkEnumItemsDup(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _131936_items);
inline void _1d6e448a6_checkEnumItemsDup(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _131936_items);
inline void _1c6718366_checkEnumItemsStr(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _133939_e);
inline void _1d6e15712_checkEnumItemInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c678a87d_eval>* _136643_eval, jule::Ptr<_1c66816a8_Enum>* _136661_e, jule::Ptr<_1c67c49e9_Prim>* _136672_prim, jule::Ptr<_1c6680b3b_EnumItem>* _136690_item, jule::U64* _1366112_n);
inline void _1d6e2626c_checkEnumItemInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c678a87d_eval>* _136643_eval, jule::Ptr<_1c66816a8_Enum>* _136661_e, jule::Ptr<_1c67c49e9_Prim>* _136672_prim, jule::Ptr<_1c6680b3b_EnumItem>* _136690_item, jule::I64* _1366112_n);
inline void _1d6e11895_checkEnumItemsInt1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c49e9_Prim>* _140241_prim, jule::Ptr<_1c66816a8_Enum>* _140259_e);
inline void _1d6e11b81_checkEnumItemsInt1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c49e9_Prim>* _140241_prim, jule::Ptr<_1c66816a8_Enum>* _140259_e);
inline void _1c6719015_checkEnumItemsInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _143739_e);
inline void _1c67192bd_checkEnumDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _144735_e);
inline void _1c6719576_checkTypeEnumDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6682db3_TypeEnum>* _148839_e);
inline jule::Bool _1c671980c_checkEnumDecls(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Bool _1c6719a93_checkTypeEnumDecls(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Bool _1c6719dd4_checkDeclGenerics(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _155134_generics);
inline jule::Bool _1c671a225_checkFnDeclParamsDup(_1c670684e_sema* _self_, jule::Ptr<_1c666a51b_Fn>* _157837_f);
inline jule::Bool _1c671a566_checkFnDeclResultDup(_1c670684e_sema* _self_, jule::Ptr<_1c666a51b_Fn>* _161537_f);
inline jule::Bool _1c671a8a7_checkFnVariadicParam(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _166042_f);
inline void _1c671ab60_checkFnDeclPrototype(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _167342_f);
inline jule::Bool _1c671b116_catchTraitInheritCycle(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait> _169539_t1, jule::Ptr<_1c667de9c_Trait> _169555_t2, _20759e353_StrBuilder* _169572_message);
inline jule::Bool _1c671b457__checkTraitDeclInherits(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _171445_t);
inline void _1c671b710_checkTraitDeclInherits(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _175544_t);
inline void _1c671b9b8_checkTraitDeclMethod(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _178042_f);
inline void _1c671bc71_checkTraitDeclMethods(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _179443_t);
inline void _1c671c029_checkTraitDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _183036_t);
inline jule::Bool _1c671c2b0_checkTraitDecls(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Bool _1c671c6ab_checkTraitImplMethods(_1c670684e_sema* _self_, jule::Ptr<_1c667de9c_Trait>* _185442_base, jule::Ptr<_1c66adce0_Impl>* _185457_ipl);
inline jule::Bool _1c671caa7_implToStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _186534_dest, jule::Ptr<_1c66adce0_Impl>* _186554_ipl);
inline void _1c671cd60_implTrait(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _190731_decl);
inline void _1c671d118_implStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _195032_decl);
inline void _1c671d3c1_implImpl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _197430_decl);
inline void _1c671d734_checkVarDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _198534_decl, jule::Trait _198550_l);
inline void _1c671d9dc_checkGlobalVarDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _203140_decl);
inline jule::Bool _1c671dc73_checkGlobalDecls(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Bool _1c671e16e_checkStructTraitImpl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _205942_strct, jule::Ptr<_1c667de9c_Trait>* _205963_trt);
inline jule::Bool _1c671e4b0_checkStructImpls(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _208538_s);
inline jule::Bool _1c671e801_checkStructFields(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _209339_st);
inline void _1c671eaa9_checkStructDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _211037_s);
inline jule::Bool _1c671ed40_checkStructDecls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c67200e8_checkAnonFuncDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _214039_f);
inline void _1c67203a1_checkFuncDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _214535_f);
inline jule::Bool _1c67206e2_checkFuncDeclsBy(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _216738_funcs);
inline jule::Bool _1c6720978_checkFuncDecls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c6720d96_pushCycleError(_1c670684e_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _20759e353_StrBuilder* _218353_message);
inline void _1c672154a_checkPackageDecls(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c67218ad_checkDataForTypeInference(_1c670684e_sema* _self_, jule::Ptr<_1c6788b56_Data>* _224342_d, jule::Ptr<_1c661e327_Token>* _224353_err_token);
inline void _1c6721b66_checkVarValue(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _225535_v);
inline void _1c6721ec9_evalVarValue(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _230834_decl, jule::Trait _230850_l);
inline void _1c672233c_checkVar(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _232530_decl, jule::Trait _232546_l);
inline void _1c672253a_checkGlobals(jule::Ptr<_1c670684e_sema> _self_);
inline jule::Ptr<_1c666d4ec_FnIns> _1c6722936_readyToCheckFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _234936_s, jule::Ptr<_1c666a51b_Fn>* _234956_f);
inline __jule_tuple_bool__jule_tuple_bool _1c6722d32_checkGenericFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _236536_f, jule::Ptr<_1c661e327_Token>* _236552_et);
inline void _1c6723195_checkTypeMethod(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _238837_s, jule::Ptr<_1c666a51b_Fn>* _238857_f);
inline jule::Ptr<_1c666d4ec_FnIns> _1c672364b_checkStructInsOp(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _240138_s, jule::Ptr<_1c666a51b_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1c666a51b_Fn>> _240166_p);
inline jule::Bool _1c6723a47_checkStructEnv(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _241136_s, jule::Ptr<_1c661e327_Token> _241155_errorToken);
inline jule::Bool _1c6723e43_precheckStructIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _250839_s, jule::Ptr<_1c661e327_Token> _250858_errorToken);
inline void _1c67241eb_checkStructIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _254536_s);
inline void _1c67244a4_checkTypeStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _255137_s);
inline void _1c67246a2_checkStructTypes(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c672495a_checkStructInsOperators(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns> _257544_s);
inline void _1c6724c13_precheckStructType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _263940_s);
inline void _1c6724e11_precheckStructTypes(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c67251b9_checkRets(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _266530_f);
inline void _1c672552c_checkFnInsSc(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _267633_f, jule::Ptr<_1c66ba857_scopeChecker>* _267649_sc);
inline void _1c6725890_checkFnInsCaller(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _268938_f, jule::Ptr<_1c661e327_Token> _268953_caller);
inline void _1c6725b48_checkFnIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _271132_f);
inline void _1c6725e01_checkFunc(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _271531_f);
inline void _1c67261a9_checkTestFn(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _273032_f);
inline void _1c6726462_precheckFunc(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _276334_f);
inline void _1c6726660_precheckFuncs(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c672685d_checkFuncs(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c6726a5b_checkPackageTypes(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c6726c59_setFileSemaFields(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c6726e57_setSemaFields(jule::Ptr<_1c670684e_sema> _self_);
inline void _1c6727210_check(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _284127_files);
inline _1c672760b_missingRetChecker static__1c6727a07_new(void);
inline jule::Bool _1c6727d15_checkConditional(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b4202_Conditional> _288932_c);
inline jule::Bool _1c6728156_checkMatch(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b7ce9_Match> _290126_m);
inline jule::Bool _1c6728552_checkInfIter(_1c672760b_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1c66b35b9_Scope>* _292742_s);
inline jule::Bool _1c6728893_checkScope(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b35b9_Scope> _294526_s);
inline jule::Bool _1c6728bd4_check(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b35b9_Scope> _300021_s);
inline jule::Bool _1c672b1c0_IsInitialized(_1c672acb3_Var* _self_);
inline jule::Bool _1c672b456_IsTypeInferred(_1c672acb3_Var* _self_);
inline jule::Bool _1c672b6dc_untypedConstant(_1c672acb3_Var* _self_);
inline jule::Bool static__1c672c3ad_Dispose(jule::Ptr<_1c666a51b_Fn> _1020_f);
inline jule::Bool static__1c672c677_Str(jule::Ptr<_1c666a51b_Fn> _2416_f);
inline jule::Bool static__1c672c9eb_logical(jule::Ptr<_1c666a51b_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1c672ccb5_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _7215_f);
inline jule::Bool static__1c672d07e_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _7715_f);
inline jule::Bool static__1c672d348_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _8217_f);
inline jule::Bool static__1c672d612_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _8715_f);
inline jule::Bool static__1c672d8cb_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _9217_f);
inline jule::Bool static__1c672dc50_result(jule::Ptr<_1c666a51b_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1c672e019_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _11816_f);
inline jule::Bool static__1c672e2d3_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _12316_f);
inline jule::Bool static__1c672e59c_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _12816_f);
inline jule::Bool static__1c672e866_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _13316_f);
inline jule::Bool static__1c672eb30_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _13816_f);
inline jule::Bool static__1c672ede9_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _14316_f);
inline jule::Bool static__1c67301b3_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _14816_f);
inline jule::Bool static__1c673047c_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _15319_f);
inline jule::Bool static__1c6730746_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _15818_f);
inline jule::Bool static__1c6730a10_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _16319_f);
inline jule::Bool static__1c6730d84_unary(jule::Ptr<_1c666a51b_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1c673114d_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _18716_f);
inline jule::Bool static__1c6731417_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _19216_f);
inline jule::Bool static__1c67316d1_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _19719_f);
inline jule::Bool static__1c6731a55_assign(jule::Ptr<_1c666a51b_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1c6731d1e_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _22122_f);
inline jule::Bool static__1c67320d8_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _22622_f);
inline jule::Bool static__1c67323a2_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _23122_f);
inline jule::Bool static__1c673266b_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _23622_f);
inline jule::Bool static__1c6732935_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _24122_f);
inline jule::Bool static__1c6732bee_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _24622_f);
inline jule::Bool static__1c6732eb8_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _25122_f);
inline jule::Bool static__1c6733282_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _25624_f);
inline jule::Bool static__1c673354b_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _26125_f);
inline jule::Bool static__1c6733815_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _26625_f);
inline void _1c677091d_pushErr(_1c67703e0_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1c6770ba4_checkTrait(_1c67703e0_typeCompatibilityChecker* _self_);
inline jule::Bool _1c6770e3a_checkPtr(_1c67703e0_typeCompatibilityChecker* _self_);
inline jule::Bool _1c67711c1_checkPrim(_1c67703e0_typeCompatibilityChecker* _self_);
inline jule::Bool _1c67715bc_typeEnum(_1c67703e0_typeCompatibilityChecker* _self_, jule::Ptr<_1c6682db3_TypeEnum>* _19925_e, jule::Ptr<_1c67bb8d1_TypeKind>* _19944_t2);
inline jule::Bool _1c6771853_checkTypeEnum(_1c67703e0_typeCompatibilityChecker* _self_);
inline jule::Bool _1c6771ad9_check(_1c67703e0_typeCompatibilityChecker* _self_);
inline void _1c6772733_pushErr(_1c677226b_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args);
inline jule::Bool _1c67729b9_checkValidity(_1c677226b_assignTypeChecker* _self_);
inline jule::Bool _1c6772c50_checkConst(_1c677226b_assignTypeChecker* _self_);
inline jule::Bool _1c6772ed6_checkCompatibility(_1c677226b_assignTypeChecker* _self_);
inline jule::Bool _1c677326c_check(_1c677226b_assignTypeChecker* _self_);
inline jule::Bool _1d713614c_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k);
inline jule::Bool _1d71363e4_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k);
inline jule::Bool _1d713d2ca_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k);
inline jule::Bool _1d7143e4b_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k);
inline jule::Bool _1c677456a_annotateConstraintMap(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _37842_k);
inline jule::Bool _1c67748ab_annotateConstraintTup(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _39342_k);
inline jule::Bool _1c6774bec_annotateConstraintFn(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _41041_k);
inline jule::Bool _1c677503d_annotateConstraintIdent(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _43144_k);
inline jule::Bool _1c677537e_annotateConstraint(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _46039_k);
inline void _1c67756e2_pushGeneric(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _48532_k, jule::I64 _48546_i);
inline jule::Bool _1c6775a33_annotatePrim(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _50040_k);
inline jule::Bool _1c6775d74_annotateArr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _50439_k);
inline jule::Bool _1c67761b5_annotateSlc(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _51439_k);
inline jule::Bool _1c67765b1_checkMapKey(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _52438_k, jule::Ptr<_1c67bb8d1_TypeKind>* _52458_ck);
inline jule::Bool _1c6776902_annotateMap(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _53239_k);
inline jule::Bool _1c6776c43_annotateFn(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _54238_k);
inline jule::Bool _1c6777084_annotatePtr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _57139_k);
inline jule::Bool _1c67773c5_annotateSptr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _58140_k);
inline jule::Bool _1c6777716_annotateStruct(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _59142_k);
inline jule::Bool _1c6777a57_annotateAny(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _61339_k);
inline jule::Bool _1c6777d98_annotateKind(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _63440_k);
inline jule::Bool _1c677812e_annotate(_1c6773b41_dynamicTypeAnnotation* _self_);
inline void _1c6779042_pushErrToken(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c661e327_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args);
inline void _1c67793a5_pushErr(_1c677899d_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args);
inline jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _1c677963b_getParams(_1c677899d_fnCallArgChecker* _self_);
inline jule::Bool _1c677997c_checkCounts(_1c677899d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>>* _69628_params);
inline jule::Bool _1c6779e33_checkArg(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _72829_p, jule::Ptr<_1c6788b56_Data>* _72848_arg, jule::Ptr<_1c661e327_Token>* _72865_errorToken);
inline jule::Bool _1c677a32e_push(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _75725_p, jule::Ptr<_1c6638c37_Expr> _75743_arg);
inline jule::Bool _1c677a72a_pushVariadic(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _78133_p, jule::I64 _78151_i);
inline jule::Bool _1c677aa6b_checkArgs(_1c677899d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>>* _86230_params);
inline jule::Bool _1c677ad02_checkDynamicTypeAnnotation(_1c677899d_fnCallArgChecker* _self_);
inline jule::Bool _1c677b088_check(_1c677899d_fnCallArgChecker* _self_);
inline void _1c677be68_pushErr(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c661e327_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args);
inline void _1c677c2cb_pushSuggestion(_1c677b8d5_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args);
inline void _1c677c6e9_pushMatch(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c6657aad_FieldIns>* _95130_f, jule::Ptr<_1c6788b56_Data>* _95149_d, jule::Ptr<_1c661e327_Token>* _95164_errorToken);
inline void _1c677ca5c_checkPair(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c663d456_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _97057_exprs);
inline jule::Bool _1c677cd9d_readyExprs(_1c677b8d5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _100931_exprs);
inline void _1c677d156_check(_1c677b8d5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _103326_exprs);
inline jule::Ptr<_1c672acb3_Var> _1c677dbd4_buildVar(_1c677d6b7_rangeChecker* _self_, jule::Ptr<_1c664776d_VarDecl>* _110925_decl);
inline void _1c677ddd2_setSizeKey(_1c677d6b7_rangeChecker* _self_);
inline void _1c677e300_checkRangeExprValidity(_1c677d6b7_rangeChecker* _self_, jule::Ptr<_1c6788b56_Data>* _112843_d, jule::Ptr<_1c672acb3_Var>* _112854_key, jule::Ptr<_1c67bb8d1_TypeKind>* _112870_k);
inline void _1c677e4ed_checkSlice(_1c677d6b7_rangeChecker* _self_);
inline void _1c677e6eb_checkArray(_1c677d6b7_rangeChecker* _self_);
inline void _1c677e8e9_checkMapKeyA(_1c677d6b7_rangeChecker* _self_);
inline void _1c677eae7_checkMapKeyB(_1c677d6b7_rangeChecker* _self_);
inline void _1c677ece5_checkMap(_1c677d6b7_rangeChecker* _self_);
inline void _1c677eee3_checkStr(_1c677d6b7_rangeChecker* _self_);
inline void _1c67801e1_checkComptime(_1c677d6b7_rangeChecker* _self_);
inline jule::Bool _1c6780477_checkComptimeRange(_1c677d6b7_rangeChecker* _self_);
inline jule::Bool _1c678070d_check(_1c677d6b7_rangeChecker* _self_);
inline void _1c678138a_prepareTypes(_1c6780e28_retTypeChecker* _self_);
inline void _1c6781643_prepareExprs(_1c6780e28_retTypeChecker* _self_, jule::Ptr<_1c6638c37_Expr>* _128733_e);
inline void _1c6781841_checkExprs(_1c6780e28_retTypeChecker* _self_);
inline jule::Bool _1c6781ac7_tryFuncMultiRetForward(_1c6780e28_retTypeChecker* _self_);
inline jule::Bool _1c6781e18_check(_1c6780e28_retTypeChecker* _self_, jule::Ptr<_1c6638c37_Expr>* _138926_e);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c67839a8_SelectPackage(_1c678348b_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _2729_selector);
inline jule::Ptr<_1c672acb3_Var> _1c6783da4_FindVar(_1c678348b_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1c67baade_TypeAlias> _1c67842a0_FindTypeAlias(_1c678348b_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1c6655803_Struct> _1c678469b_FindStruct(_1c678348b_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1c666a51b_Fn> _1c6784a97_FindFn(_1c678348b_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1c667de9c_Trait> _1c6784dd8_FindTrait(_1c678348b_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c6785229_FindEnum(_1c678348b_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c678556a_FindTypeEnum(_1c678348b_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::I64 _1c6785a32_findVar1(_1c678348b_SymbolTable* _self_, jule::Ptr<_1c672acb3_Var>* _10825_v);
inline jule::Ptr<_1c672acb3_Var> _1c6785ed8_findVar(_1c678348b_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1c67baade_TypeAlias> _1c678648e_findTypeAlias(_1c678348b_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1c678688a_defByIdent(_1c678348b_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1c6786d41_isDuplicatedIdent(_1c678348b_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Bool _1c6789074_IsNil(_1c6788b56_Data* _self_);
inline jule::Bool _1c678930a_IsVoid(_1c6788b56_Data* _self_);
inline jule::Bool _1c6789591_IsConst(_1c6788b56_Data* _self_);
inline jule::Bool _1c67898d2_GoodOperand(_1c6788b56_Data* _self_, jule::Ptr<_1c6788b56_Data>* _10628_other);
inline void _1c678ae11_pushErr(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args);
inline void _1c678b274_pushSuggestion(_1c678a87d_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args);
inline void _1c678b472_allowBuiltin(_1c678a87d_eval* _self_);
inline void _1c678b670_disallowBuiltin(_1c678a87d_eval* _self_);
inline jule::Bool _1c678b906_isUnsafe(_1c678a87d_eval* _self_);
inline jule::Bool _1c678bb8c_isGlobal(_1c678a87d_eval* _self_);
inline jule::Bool _1c678be9a_applyNumericPrefix(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _16939_d);
inline jule::Ptr<_1c6788b56_Data> _1c678c2db_litStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _20419_l);
inline jule::Ptr<_1c6788b56_Data> _1c678c62c_litRune(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _22120_l);
inline jule::Ptr<_1c6788b56_Data> _1c678c96d_litFloat(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _24021_l);
inline jule::Ptr<_1c6788b56_Data> _1c678ccae_litInt(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _25223_l);
inline jule::Ptr<_1c6788b56_Data> _1c678d100_litNum(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _30723_l);
inline jule::Ptr<_1c6788b56_Data> _1c678d441_evalLit(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr> _31623_lit);
inline jule::Any _1c678d782_findBuiltins(_1c678a87d_eval* _self_, jule::Str* _32929_ident);
inline jule::Any _1c678db7d_getDef(_1c678a87d_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded);
inline jule::Ptr<_1c6671687_ReferenceStack> _1c678de14_getOwnerRefers(_1c678a87d_eval* _self_);
inline void _1d730145a_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _41437_ref);
inline void _1d7317a15_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _41437_ref);
inline void _1d7404360_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns>* _41437_ref);
inline jule::Ptr<_1c6788b56_Data> _1c678e50d__evalEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _42125_enm);
inline jule::Ptr<_1c6788b56_Data> _1c678e909_evalEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _43028_enm, jule::Ptr<_1c661e327_Token> _43040_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c678ec4a__evalTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _43929_enm);
inline jule::Ptr<_1c6788b56_Data> _1c6790146_evalTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _44832_enm, jule::Ptr<_1c661e327_Token> _44848_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c6790487__evalStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns> _45727_s);
inline jule::Ptr<_1c6788b56_Data> _1c6790883_evalStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c6655803_Struct> _47130_s, jule::Ptr<_1c661e327_Token> _47146_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c6790bc4_evalFnIns(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns> _50025_f);
inline void _1c6791037_checkDeprecated(_1c678a87d_eval* _self_, jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _50936_directives, jule::Ptr<_1c661e327_Token> _50967_tok);
inline jule::Ptr<_1c6788b56_Data> _1c6791433_evalFn(_1c678a87d_eval* _self_, jule::Ptr<_1c666a51b_Fn> _52526_f, jule::Ptr<_1c661e327_Token> _52534_errorToken);
inline void _1c6791851_pushIllegalCycleError(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _55038_v1, jule::Ptr<_1c672acb3_Var>* _55049_v2, _20759e353_StrBuilder* _55064_message);
inline jule::Bool _1c6791c4c_checkCrossCycle(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _56032_v, _20759e353_StrBuilder* _56046_message);
inline jule::Bool _1c6792148_checkIllegalCycles(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _57739_v, jule::Ptr<_1c661e327_Token> _57748_declToken);
inline jule::Ptr<_1c6788b56_Data> _1c6792544_evalVar(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var> _60527_v, jule::Ptr<_1c661e327_Token> _60536_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c6792940_evalTypeAlias(_1c678a87d_eval* _self_, jule::Ptr<_1c67baade_TypeAlias> _72633_ta, jule::Ptr<_1c661e327_Token> _72649_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c6792d3b_evalDef(_1c678a87d_eval* _self_, jule::Any* _76528_def, jule::Ptr<_1c661e327_Token> _76542_ident);
inline jule::Ptr<_1c6788b56_Data> _1c679317c_evalIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c663a552_IdentExpr> _78929_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67934bd_evalUnary(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663ace4_UnaryExpr> _79430_u);
inline jule::Ptr<_1c6788b56_Data> _1c679380e_evalVariadic(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663b1bd_VariadicExpr> _79933_v);
inline jule::Ptr<_1c6788b56_Data> _1c6793b50_evalUnsafe(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663a09b_UnsafeExpr> _82131_u);
inline jule::Ptr<_1c6788b56_Data> _1c6793e91_evalArr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _82928_s);
inline jule::Ptr<_1c6788b56_Data> _1c6794447_evalExpSlc(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _90631_s, jule::Ptr<_1c67bb8d1_TypeKind> _90650_t, jule::Any _90668_first);
inline jule::Ptr<_1c6788b56_Data> _1c6794788_evalSliceExpr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _94434_s);
inline jule::Bool _1c6794b84_checkIntegerIndexingByData(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _98047_d, jule::Ptr<_1c661e327_Token> _98061_token);
inline void _1c67950a2_indexingPtr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _99332_d, jule::Ptr<_1c6788b56_Data>* _99347_index, jule::Ptr<_1c6640bea_IndexingExpr>* _99366_i);
inline void _1c67954c0_indexingArr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _100932_d, jule::Ptr<_1c6788b56_Data>* _100947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _100966_i);
inline void _1c67958dd_indexingSlc(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _101932_d, jule::Ptr<_1c6788b56_Data>* _101947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _101966_i);
inline void _1c6795d0b_indexingMap(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _104232_d, jule::Ptr<_1c6788b56_Data>* _104247_index, jule::Ptr<_1c6640bea_IndexingExpr>* _104266_i);
inline void _1c6796229_indexingStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _105932_d, jule::Ptr<_1c6788b56_Data>* _105947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _105966_i);
inline void _1c6796647_comptimeRange(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _108834_d, jule::Ptr<_1c6788b56_Data>* _108849_index, jule::Ptr<_1c6640bea_IndexingExpr>* _108868_i);
inline void _1c6796a65_toIndexing(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _111331_d, jule::Ptr<_1c6788b56_Data>* _111346_index, jule::Ptr<_1c6640bea_IndexingExpr>* _111365_i);
inline jule::Bool _1c679701b_pushGenericsFromExprSubIdent(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663bd4a_SubIdentExpr>* _114150_sexpr, jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _11428_generics, jule::Ptr<_1c6638c37_Expr>* _114236_expr);
inline jule::Bool _1c6797417_pushGenericsFromData(jule::Ptr<_1c678a87d_eval> _self_, jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _115242_generics, jule::Ptr<_1c6638c37_Expr>* _115270_expr);
inline void _1c679777a_evalIdentDeclFromIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6788b56_Data>* _122247_d, jule::Ptr<_1c6640bea_IndexingExpr>* _122262_i);
inline __jule_tuple_bool__jule_tuple_bool _1c6797c31_checkGenericFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c666d4ec_FnIns>* _126536_f, jule::Ptr<_1c661e327_Token>* _126552_et, jule::Any* _126569_model);
inline void _1c6798094_evalFnGenericFromIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6788b56_Data>* _128147_d, jule::Ptr<_1c6640bea_IndexingExpr>* _128162_i);
inline jule::Ptr<_1c6788b56_Data> _1c67983d5_evalIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6640bea_IndexingExpr> _132133_i);
inline __jule_tuple_x_1c6788b56_Data__jule_tuple_x_1c6788b56_Data _1c6798726_evalSlicingExprs(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664135a_SlicingExpr>* _138138_s);
inline void _1c67989ce_slicingArr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _141727_d);
inline void _1c6798dec_slicingStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _143227_d, jule::Ptr<_1c6788b56_Data>* _143238_l, jule::Ptr<_1c6788b56_Data>* _143249_r);
inline void _1c67993c5_checkSlicing(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _147033_d, jule::Ptr<_1c6788b56_Data>* _147044_l, jule::Ptr<_1c6788b56_Data>* _147055_r, jule::Ptr<_1c664135a_SlicingExpr>* _147066_s);
inline jule::Ptr<_1c6788b56_Data> _1c6799716_evalSlicing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664135a_SlicingExpr> _148932_s);
inline void _1c6799b34_castPtr(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _152627_t, jule::Ptr<_1c6788b56_Data> _152645_d, jule::Ptr<_1c661e327_Token> _152655_errorToken);
inline void _1c679a052_castStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _154830_t, jule::Ptr<_1c6788b56_Data> _154848_d, jule::Ptr<_1c661e327_Token> _154858_errorToken);
inline void _1c679a470_castRef(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _156527_t, jule::Ptr<_1c6788b56_Data> _156545_d, jule::Ptr<_1c661e327_Token> _156555_errorToken);
inline void _1c679a88d_castSlc(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _158827_t, jule::Ptr<_1c6788b56_Data> _158845_d, jule::Ptr<_1c661e327_Token> _158855_errorToken);
inline void _1c679ac01_castStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _164327_d, jule::Ptr<_1c661e327_Token> _164337_errorToken);
inline void _1c679b11e_castInt(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _169027_t, jule::Ptr<_1c6788b56_Data> _169045_d, jule::Ptr<_1c661e327_Token> _169055_errorToken);
inline void _1c679b53c_castNum(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _173627_t, jule::Ptr<_1c6788b56_Data> _173645_d, jule::Ptr<_1c661e327_Token> _173655_errorToken);
inline void _1c679b95a_castPrim(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _176728_t, jule::Ptr<_1c6788b56_Data> _176746_d, jule::Ptr<_1c661e327_Token> _176756_errorToken);
inline void _1c679bcbd_castConstant(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _178533_t, jule::Ptr<_1c6788b56_Data>* _178552_d);
inline void _1c679c1db_castTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _179433_t, jule::Ptr<_1c6788b56_Data>* _179452_d, jule::Ptr<_1c661e327_Token>* _179467_errorToken);
inline void _1c679c609_castTypeEnumT(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _180434_t, jule::Ptr<_1c6788b56_Data>* _180453_d, jule::Ptr<_1c661e327_Token>* _180468_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c679cab0_evalCastByTypeNData(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _181439_t, jule::Ptr<_1c6788b56_Data> _181457_d, jule::Ptr<_1c661e327_Token> _181471_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c679d066_evalCastT(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _188731_t, jule::Ptr<_1c6638c37_Expr>* _188750_e, jule::Ptr<_1c661e327_Token>* _188765_et);
inline jule::Ptr<_1c6788b56_Data> _1c679d3a7_evalCast(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663b597_CastExpr> _190429_c);
inline jule::Ptr<_1c6788b56_Data> _1c679d6e8_evalNsSelection(_1c678a87d_eval* _self_, jule::Ptr<_1c663b971_NsSelectionExpr> _191335_s);
inline jule::Ptr<_1c6788b56_Data> _1c679db9e_evalStructLitExplicit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c665865d_StructIns> _193942_s, jule::Slice<jule::Ptr<_1c6638c37_Expr>> _19407_exprs, jule::Ptr<_1c661e327_Token> _194027_errorToken);
inline jule::Ptr<_1c6788b56_Data> _1c679dee0_evalStructLit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663dc81_StructLit> _197734_lit);
inline _1c67cdccd_typeChecker _1c679e276_typeChecker(_1c678a87d_eval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c679e5b7_evalType(_1c678a87d_eval* _self_, jule::Ptr<_1c6634903_TypeDecl> _200928_t);
inline void _1c679e92a_callTypeFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _202232_fc, jule::Ptr<_1c6788b56_Data>* _202254_d);
inline void _1c679ec8d_callBuiltinFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _204835_fc, jule::Ptr<_1c6788b56_Data>* _204857_d);
inline void _1c67a0101_checkFnOfConcurrentCall(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _206040_f, jule::Ptr<_1c661e327_Token> _206051_errorToken);
inline void _1c67a051e_processExceptionalHandler(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _207946_f, jule::Ptr<_1c663c961_FnCallExpr>* _207962_fc, jule::Ptr<_1c6788b56_Data>* _207984_d);
inline void _1c67a0882_callFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _210628_fc, jule::Ptr<_1c6788b56_Data>* _210650_d);
inline jule::Ptr<_1c6788b56_Data> _1c67a0bc3_evalFnCall(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr> _225931_fc);
inline jule::Ptr<_1c6788b56_Data> _1c67a10be_evalEnumStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _229234_enm, jule::Ptr<_1c661e327_Token> _229250_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a14ba_evalTypeEnumStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _230038_enm, jule::Ptr<_1c661e327_Token> _230054_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a18b6_evalStructStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns> _232336_s, jule::Ptr<_1c661e327_Token> _232351_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a1d6c_evalTraitSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _235837_d, jule::Ptr<_1c667de9c_Trait> _235851_trt, jule::Ptr<_1c661e327_Token> _235868_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a23cd_evalStructSubIdentField(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _238044_d, jule::Ptr<_1c665865d_StructIns>* _238059_s, jule::Ptr<_1c661e327_Token>* _238079_tok, jule::Ptr<_1c6657aad_FieldIns>* _238097_f);
inline jule::Ptr<_1c6788b56_Data> _1c67a29e9_evalStructSubIdentMethod(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _240545_d, jule::Ptr<_1c665865d_StructIns>* _240560_s, jule::Ptr<_1c661e327_Token>* _240580_tok, jule::Ptr<_1c666a51b_Fn>* _240598_m, jule::Bool _2405106_ref);
inline jule::Ptr<_1c6788b56_Data> _1c67a305a_evalStructSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _242638_d, jule::Ptr<_1c665865d_StructIns> _242652_s, jule::Ptr<_1c663bd4a_SubIdentExpr> _242671_si, jule::Bool _242690_ref);
inline jule::Ptr<_1c6788b56_Data> _1c67a339b_evalIntTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _245033_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a36dc_evalUintTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _247734_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a3a2d_evalI8TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _249532_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a3d6e_evalI16TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _252433_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a41b0_evalI32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _255333_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a4501_evalI64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _258233_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a4842_evalU8TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _261132_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a4b83_evalU16TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _263033_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a4ec4_evalU32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _264933_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a5315_evalU64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _266833_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a5656_evalF32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _268733_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a5997_evalF64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _272633_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a5d93_evalPrimStatic(_1c678a87d_eval* _self_, jule::Str _276530_kind, jule::Ptr<_1c661e327_Token> _276541_ident);
inline jule::Ptr<_1c6788b56_Data> _1c67a628e_evalTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _279734_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _279748_si);
inline jule::Ptr<_1c6788b56_Data> _1d75413c0_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66956de_comptimeTypeInfo>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d7545b88_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668634a_comptimeStructField>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d754a40c_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668c791_comptimeEnumField>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d754ebc5_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66905a7_comptimeParam>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d75546be_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668956d_comptimeStatic>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d7558e43_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c669b7e4_comptimeValue>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d755d6b7_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66a0ebe_comptimeFile>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline jule::Ptr<_1c6788b56_Data> _1d7562ec4_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66a4dd5_comptimeDecl>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si);
inline __jule_tuple_x_1c6788b56_Data__jule_tuple_bool _1c67a6b41_tryComptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _282143_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _282157_si);
inline jule::Ptr<_1c6788b56_Data> _1c67a703c_evalObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _285235_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _285249_si);
inline jule::Ptr<_1c6788b56_Data> _1c67a737d_evalSubIdent(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663bd4a_SubIdentExpr> _289633_si);
inline jule::Ptr<_1c6788b56_Data> _1c67a76be_evalTuple(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663982b_TupleExpr> _291030_tup);
inline jule::Ptr<_1c6788b56_Data> _1c67a7aba_evalMap(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c67ca68c_Map> _293928_m, jule::Ptr<_1c663e237_BraceLit> _293941_lit);
inline jule::Ptr<_1c6788b56_Data> _1c67a7e0b_evalBraceLit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663e237_BraceLit> _298733_lit);
inline jule::Ptr<_1c6788b56_Data> _1c67a824c_evalAnonFunc(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c66465b3_FnDecl> _300233_decl);
inline jule::Ptr<_1c6788b56_Data> _1c67a858d_evalBinary(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c301_BinaryExpr> _304031_op);
inline jule::Ptr<_1c6788b56_Data> _1c67a88ce_evalExprKind(jule::Ptr<_1c678a87d_eval> _self_, jule::Any _305533_kind);
inline jule::Ptr<_1c6788b56_Data> _1c67a8c20_eval1(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _310326_expr);
inline jule::Ptr<_1c6788b56_Data> _1c67a9061_eval(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _314825_expr);
inline jule::Ptr<_1c6788b56_Data> _1c67a93a2_evalExpr1(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _316330_expr);
inline jule::Ptr<_1c6788b56_Data> _1c67a96e3_evalExpr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _317929_expr);
inline _1c67a9b77_unaryEval static__1c67aa0ea_new(jule::Ptr<_1c678a87d_eval> _320020_e);
inline void _1c67aa2e8_minus(_1c67a9b77_unaryEval* _self_);
inline void _1c67aa4e6_plus(_1c67a9b77_unaryEval* _self_);
inline void _1c67aa6e4_caret(_1c67a9b77_unaryEval* _self_);
inline void _1c67aa8e2_excl(_1c67a9b77_unaryEval* _self_);
inline void _1c67aaae0_star(_1c67a9b77_unaryEval* _self_);
inline void _1c67aacdd_amper(_1c67a9b77_unaryEval* _self_);
inline void _1c67aaedb_typeDecl(_1c67a9b77_unaryEval* _self_);
inline void _1c67ab1d9_evalData(_1c67a9b77_unaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ab52a_eval(_1c67a9b77_unaryEval* _self_, jule::Ptr<_1c663ace4_UnaryExpr> _346024_u);
inline _1c67abb13_binaryEval static__1c67ac1eb_newPlain(jule::Ptr<_1c678a87d_eval> _350825_e);
inline _1c67abb13_binaryEval static__1c67ac570_new(jule::Ptr<_1c678a87d_eval> _351420_e, jule::Ptr<_1c661e327_Token> _351434_op);
inline jule::Bool _1c67ac806_checkTypeCompatibility(_1c67abb13_binaryEval* _self_);
inline jule::Bool _1c67aca8c_checkStructCommonOperatorCompatibility(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67acd23_evalComptimeTypeInfo(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ad0a9_evalNil(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ad340_evalEnum(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ad5c6_evalTypeEnum(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ad85c_evalSptr(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67adae3_evalPtr(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67add79_evalArr(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ae110_evalStruct(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ae396_evalTrait(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ae62c_evalAny(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67ae8b3_evalBool(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67aeb49_evalStr(_1c67abb13_binaryEval* _self_);
inline void _1c67aed47_setTypeToGreater(_1c67abb13_binaryEval* _self_);
inline void _1c67b0100_checkModData(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _391333_d);
inline void _1c67b02ed_mod(_1c67abb13_binaryEval* _self_);
inline jule::Bool _1c67b06e9_numbersAreCompatibile(_1c67abb13_binaryEval* _self_, jule::Str* _393534_lk, jule::Str* _393544_rk);
inline jule::Ptr<_1c6788b56_Data> _1c67b0980_shift(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67b0c16_evalFloat(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67b0e9c_evalInt(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67b1233_evalPrim(_1c67abb13_binaryEval* _self_);
inline jule::Bool _1c67b14b9_checkSpecialCases(_1c67abb13_binaryEval* _self_);
inline jule::Ptr<_1c6788b56_Data> _1c67b1750_evalOp(_1c67abb13_binaryEval* _self_);
inline void _1c67b1a08_evalConst(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _422530_d);
inline void _1c67b1cb1_checkData(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _430330_d);
inline void _1c67b1eae_checkDatas(_1c67abb13_binaryEval* _self_);
inline void _1c67b2267_setModel(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _431529_d);
inline void _1c67b2520_postEval(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _434429_d);
inline jule::Ptr<_1c6788b56_Data> _1c67b291b_solveExplicit(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _434934_l, jule::Ptr<_1c6788b56_Data>* _434949_r);
inline jule::Ptr<_1c6788b56_Data> _1c67b2c5c_eval(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c663c301_BinaryExpr>* _436925_op);
inline jule::Str _1c67bbccc_Str(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bc11d_Equal(jule::Ptr<_1c67bb8d1_TypeKind> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _9018_other);
inline jule::Bool _1c67bc77d_Binded(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bca14_IsNil(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bcc9a_Void(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bd031_Comparable(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bd2b7_Mutable(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bd54d_Ordered(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bd7d4_NilCompatible(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bda6a_GC(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67bdd01_Variadicable(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67c49e9_Prim> _1c67be087_Prim(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67c8525_Sptr> _1c67be31d_Sptr(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67cbcdc_Ptr> _1c67be5a4_Ptr(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66816a8_Enum> _1c67be83a_Enum(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c67beac1_TypeEnum(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67cb319_Arr> _1c67bed57_Arr(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67c8ee8_Slc> _1c67c00dd_Slc(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c666d4ec_FnIns> _1c67c0374_Fn(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c665865d_StructIns> _1c67c060a_Struct(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c667de9c_Trait> _1c67c0891_Trait(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67ca68c_Map> _1c67c0b27_Map(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c67c9adc_Tuple> _1c67c0dad_Tup(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67c1144_comptime(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c6687add_comptimeStructFields> _1c67c13ca_comptimeStructFields(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c668634a_comptimeStructField> _1c67c1661_comptimeStructField(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c668daa0_comptimeEnumFields> _1c67c18e7_comptimeEnumFields(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c668c791_comptimeEnumField> _1c67c1b7d_comptimeEnumField(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c6692411_comptimeParams> _1c67c1e14_comptimeParams(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66905a7_comptimeParam> _1c67c219a_comptimeParam(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66857de_comptimeRange> _1c67c2431_comptimeRange(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c6693c70_comptimeTypeInfos> _1c67c26b7_comptimeTypeInfos(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66956de_comptimeTypeInfo> _1c67c294d_comptimeTypeInfo(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c668ad22_comptimeStatics> _1c67c2bd4_comptimeStatics(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c668956d_comptimeStatic> _1c67c2e6a_comptimeStatic(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c669b7e4_comptimeValue> _1c67c3201_comptimeValue(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66a4dd5_comptimeDecl> _1c67c3487_comptimeDecl(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66a2ae7_comptimeDecls> _1c67c371d_comptimeDecls(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c66a0ebe_comptimeFile> _1c67c39a4_comptimeFile(_1c67bb8d1_TypeKind* _self_);
inline jule::Ptr<_1c669e550_comptimeFiles> _1c67c3c3a_comptimeFiles(_1c67bb8d1_TypeKind* _self_);
inline jule::Bool _1c67c4499_checked(_1c67c40e2_TypeSymbol* _self_);
inline jule::Str _1c67c4d6d_Str(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c51ae_Equal(jule::Ptr<_1c67c49e9_Prim> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _53218_other);
inline jule::Bool _1c67c5654_IsConstraint(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c58da_IsI8(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c5b71_IsI16(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c5e07_IsI32(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c618d_IsI64(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c6424_IsU8(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c66aa_IsU16(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c6941_IsU32(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c6bc7_IsU64(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c6e5d_IsF32(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c71e4_IsF64(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c747a_IsInt(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c7711_IsUint(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c7997_IsUintptr(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c7c2d_IsBool(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c7eb4_IsStr(_1c67c49e9_Prim* _self_);
inline jule::Bool _1c67c824a_IsAny(_1c67c49e9_Prim* _self_);
inline jule::Str _1c67c88cc_Str(_1c67c8525_Sptr* _self_);
inline jule::Bool _1c67c8c1d_Equal(jule::Ptr<_1c67c8525_Sptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _60918_other);
inline jule::Str _1c67c94b0_Str(_1c67c8ee8_Slc* _self_);
inline jule::Bool _1c67c9801_Equal(jule::Ptr<_1c67c8ee8_Slc> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _62818_other);
inline jule::Str _1c67c9e94_Str(_1c67c9adc_Tuple* _self_);
inline jule::Bool _1c67ca2d5_Equal(jule::Ptr<_1c67c9adc_Tuple> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _65718_other);
inline jule::Str _1c67caa44_Str(_1c67ca68c_Map* _self_);
inline jule::Bool _1c67cad85_Equal(jule::Ptr<_1c67ca68c_Map> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _69418_other);
inline jule::Str _1c67cb6c1_Str(_1c67cb319_Arr* _self_);
inline jule::Bool _1c67cba12_Equal(jule::Ptr<_1c67cb319_Arr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _72218_other);
inline jule::Str _1c67cc194_Str(_1c67cbcdc_Ptr* _self_);
inline jule::Bool _1c67cc4d5_Equal(jule::Ptr<_1c67cbcdc_Ptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _74618_other);
inline jule::Bool _1c67cc859_IsUnsafe(_1c67cbcdc_Ptr* _self_);
inline void _1c67ce55e_pushErr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c661e327_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args);
inline void _1c67ce75c_allowBuiltin(_1c67cdccd_typeChecker* _self_);
inline void _1c67ce95a_disallowBuiltin(_1c67cdccd_typeChecker* _self_);
inline void _1d77a7d2e_pushReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _85037_t);
inline void _1d77aa804_pushReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c667de9c_Trait>* _85037_t);
inline void _1c67ceebb_pushReferenceByKind(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _86040_k);
inline void _1c67d03d9_pushCycleError(_1c67cdccd_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _20759e353_StrBuilder* _87153_message);
inline jule::Bool _1c67d07d5_checkCrossCycle(_1c67cdccd_typeChecker* _self_, jule::Any _89327_decl, _20759e353_StrBuilder* _89343_message);
inline jule::Bool _1c67d0bd1_checkIllegalCycles(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl);
inline jule::Trait _1c67d10cc_fromTypeAlias(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _97730_decl, jule::Ptr<_1c67baade_TypeAlias>* _97757_ta);
inline jule::Ptr<_1c66816a8_Enum> _1c67d14c8_fromEnum(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _105425_decl, jule::Ptr<_1c66816a8_Enum>* _105452_e);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c67d18c4_fromTypeEnum(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _106629_decl, jule::Ptr<_1c6682db3_TypeEnum>* _106656_e);
inline jule::Ptr<_1c667de9c_Trait> _1c67d1cc0_fromTrait(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _107826_decl, jule::Ptr<_1c667de9c_Trait>* _107853_t);
inline jule::Bool _1c67d21bb_checkStructIns(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _109135_ins, jule::Ptr<_1c661e327_Token>* _109157_errorToken);
inline void _1c67d2474_appendUsedStructReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6655803_Struct>* _111246_s);
inline jule::Ptr<_1c665865d_StructIns> _1c67d2870_buildStructInstance(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _112540_decl, jule::Ptr<_1c6655803_Struct>* _112567_s);
inline jule::Ptr<_1c665865d_StructIns> _1c67d2c6b_fromStructIns(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _117334_ins, jule::Ptr<_1c661e327_Token> _117355_token);
inline jule::Ptr<_1c665865d_StructIns> _1c67d3167_fromStruct(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _119131_decl, jule::Ptr<_1c6655803_Struct>* _119158_s);
inline jule::Trait _1c67d34a8_getDef(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _123527_decl);
inline jule::Trait _1c67d37e9_buildIdent(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl> _129630_decl);
inline jule::Trait _1c67d3b3a_buildSubIdent(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66352c7_SubIdentTypeDecl> _130033_decl);
inline jule::Ptr<_1c67c8525_Sptr> _1c67d3e7b_buildSptrFromType(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _133438_elem);
inline jule::Ptr<_1c67c8525_Sptr> _1c67d42bc_buildSptr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663599d_SptrTypeDecl> _135429_decl);
inline jule::Ptr<_1c67cbcdc_Ptr> _1c67d460d_buildPtrFromType(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _136337_elem);
inline jule::Ptr<_1c67cbcdc_Ptr> _1c67d494e_buildPtr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663642c_PtrTypeDecl> _137828_decl);
inline jule::Ptr<_1c67c8ee8_Slc> _1c67d4c90_buildSlc(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6635d33_SlcTypeDecl> _139528_decl);
inline jule::Ptr<_1c67cb319_Arr> _1c67d50d1_buildArr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6636bbe_ArrTypeDecl> _141628_decl);
inline jule::Ptr<_1c67ca68c_Map> _1c67d5422_buildMap(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663741c_MapTypeDecl> _146528_decl);
inline jule::Ptr<_1c67c9adc_Tuple> _1c67d5763_buildTuple(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6636130_TupleTypeDecl> _149730_decl);
inline jule::Bool _1c67d5aa4_checkFuncTypes(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c666d4ec_FnIns>* _151035_f);
inline jule::Ptr<_1c666d4ec_FnIns> _1c67d5de5_buildFunc(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66465b3_FnDecl> _152829_decl);
inline jule::Trait _1c67d6236_buildByNamespace(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66356a1_NamespaceTypeDecl> _155836_decl);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67d6577_build(_1c67cdccd_typeChecker* _self_, jule::Any* _158226_declKind);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67d68b8_checkDecl(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6634903_TypeDecl>* _167030_decl);
inline jule::Bool static__1c67d7314_prim(jule::Str* _169718_ident, jule::Ptr<_1c67c49e9_Prim> _169730_t);
inline jule::Bool static__1c67d7688_exist(jule::Str* _170119_ident, jule::Ptr<_1c67bb8d1_TypeKind>* _170136_k);
inline void _1c737d4e7_stop(_1c737cd43_scopeParser* _self_);
inline jule::Bool _1c737d77d_stopped(_1c737cd43_scopeParser* _self_);
inline jule::Bool _1c737da14_finished(_1c737cd43_scopeParser* _self_);
inline jule::Bool _1c737dc9a_isLastSt(_1c737cd43_scopeParser* _self_);
inline void _1c737e10d_pushErr(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c661e327_Token> _18823_token, jule::Str _18838_fmt);
inline void _1c737e471_pushSuggestion(_1c737cd43_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1c737e729_insertAsNext(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _19733_tokens);
inline jule::Ptr<_1c737c4a2_stmt> _1c737e9b0_next(_1c737cd43_scopeParser* _self_);
inline jule::Ptr<_1c6644924_ScopeTree> _1c737edab_buildScope(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _20731_tokens, jule::Ptr<_1c661e327_Token> _20753_end);
inline jule::Ptr<_1c664776d_VarDecl> _1c73801ec_buildVarSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _21831_tokens);
inline jule::Ptr<_1c6647b47_RetSt> _1c738053d_buildRetSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _22630_tokens);
inline jule::Ptr<_1c66483b7_Iter> _1c738087e_buildWhileNextIter(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _23739_s);
inline jule::Ptr<_1c6648be2_WhileKind> _1c7380bc0_buildWhileIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c7381011_getRangeKindKeysTokens(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28843_toks);
inline jule::Ptr<_1c664776d_VarDecl> _1c7381352_buildRangeKindKey(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _1c7381693_buildRangeKindKeys(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _32039_parts);
inline void _1c7381a06_setupRangeKindKeysPlain(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _32866_tokens);
inline void _1c7381d69_setupRangeKindKeysExplicit(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _34369_tokens);
inline void _1c73821cc_setupRangeKindKeys(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _35261_tokens);
inline jule::Ptr<_1c66495e9_RangeKind> _1c7382683_buildRangeIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1c661e327_Token>>* _3618_exprTokens, jule::Ptr<_1c661e327_Token>* _36135_inToken);
inline jule::Any _1c7382a7e_buildCommonIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37640_tokens, jule::Ptr<_1c661e327_Token>* _37659_err_tok);
inline jule::Ptr<_1c66483b7_Iter> _1c7382dc0_buildCommonIter(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _40335_tokens);
inline jule::Ptr<_1c66483b7_Iter> _1c7383211_buildIterSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _43332_st);
inline jule::Ptr<_1c66499c3_BreakSt> _1c7383552_buildBreakSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _44033_tokens);
inline jule::Ptr<_1c6649d9c_ContSt> _1c7383893_buildContSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _45832_tokens);
inline jule::Ptr<_1c664a353_If> _1c7383bd4_buildIf(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _47628_tokens);
inline jule::Ptr<_1c664a72c_Else> _1c7384025_buildElse(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _50930_tokens);
inline jule::Ptr<_1c664abd3_Conditional> _1c7384366_buildIfElseChain(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _53336_tokens);
inline jule::Ptr<_1c6638c37_Expr> _1c73846a7_buildCoCallSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _55633_tokens);
inline jule::Ptr<_1c66423b1_GotoSt> _1c73849e8_buildGotoSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _57232_tokens);
inline jule::Ptr<_1c66426ad_FallSt> _1c7384d39_buildFallSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _59232_tokens);
inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c738517a_buildTypeAliasSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _60237_tokens);
inline void _1c7385653_pushCaseExpr(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _60832_tokens, jule::Ptr<_1c661e327_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1c6638c37_Expr__jule_tuple_bool _1c7385b09_buildCaseExprs(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _63135_tokens, jule::Ptr<_1c661e327_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1c6644924_ScopeTree> _1c7385e4a_buildCaseScope(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _67335_tokens);
inline __jule_tuple_x_1c664b8c6_Case__jule_tuple_bool _1c7386346_buildCase(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1c664b8c6_Case__jule_tuple_x_1c664a72c_Else _1c7386742_buildCases(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _71930_tokens, jule::Bool _71948_typeMatch);
inline jule::Ptr<_1c664c1e0_MatchCase> _1c7386a83_buildMatchCase(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _75334_tokens);
inline jule::Ptr<_1c6644924_ScopeTree> _1c7386dc4_buildScopeSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _78632_tokens);
inline jule::Ptr<_1c6641ed7_LabelSt> _1c7387215_buildLabelSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _82933_tokens);
inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c7387556_buildIdSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _84430_tokens);
inline jule::Ptr<_1c7397ec3_assignInfo> _1c7387897_buildAssignInfo(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _85836_tokens);
inline jule::Ptr<_1c6642d1d_AssignLeft> _1c7387bd8_buildAssignL(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _90333_tokens);
inline jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> _1c7388029_buildAssignLs(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _91434_parts);
inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c738836a_buildPlainAssign(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _92337_tokens);
inline jule::Bool _1c7388766_buildDeclAssign1(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _97337_lefts, jule::Ptr<_1c66433a1_AssignSt>* _97359_assign);
inline __jule_tuple_x_1c66433a1_AssignSt__jule_tuple_bool _1c7388aa7_buildDeclAssign(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _101835_tokens);
inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c7388de8_buildAssignSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _105234_tokens);
inline jule::Ptr<_1c663960b_UseExpr> _1c7389239_buildUseExpr(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _106533_tokens);
inline jule::Any _1c738957a_buildConstSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _107833_st);
inline jule::Any _1c73898bb_buildSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _110328_st);
inline void _1c7389c2e_build(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _116726_tokens, jule::Ptr<_1c6644924_ScopeTree>* _116749_s);
inline void _1c738b082_pushErr(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1c738b3e5_pushSuggestion(_1c738a7ac_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1c663982b_TupleExpr> _1c738b736_buildTuple(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _5431_parts);
inline jule::Ptr<_1c6639bc2_LitExpr> _1c738ba77_buildLit(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _6424_token);
inline jule::Any _1c738c209_buildSingle(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _7531_token);
inline jule::Ptr<_1c663a552_IdentExpr> _1c738c54a_buildBindIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _9235_tokens);
inline jule::Ptr<_1c663ace4_UnaryExpr> _1c738c88b_buildUnary(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _11130_tokens);
inline jule::Ptr<_1c663bd4a_SubIdentExpr> _1c738cbcc_buildObjSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _13236_tokens);
inline jule::Ptr<_1c663b971_NsSelectionExpr> _1c738d01d_buildNsSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _14736_tokens);
inline jule::Ptr<_1c6634903_TypeDecl> _1c738d35e_buildType(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _17230_tokens);
inline jule::Any _1c738d6a0_buildSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _18634_tokens);
inline jule::Ptr<_1c663b1bd_VariadicExpr> _1c738d9e1_buildVariadic(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _20833_tokens);
inline jule::Ptr<_1c6639001_RangeExpr> _1c738dd32_buildBetweenParentheses(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _21743_tokens);
inline jule::Ptr<_1c663b597_CastExpr> _1c738e173_tryBuildCast(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _22933_tokens);
inline void _1c738e591_pushArg(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c661e327_Token>> _30347_tokens, jule::Ptr<_1c661e327_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1c6638c37_Expr>> _1c738e8d2_buildArgs(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _31229_tokens);
inline jule::Ptr<_1c663c961_FnCallExpr> _1c73901c9_buildFnCall(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token>* _37832_token, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37873_args);
inline jule::Any _1c739051a_buildParenthesesRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _38642_tokens);
inline jule::Ptr<_1c663a09b_UnsafeExpr> _1c739085b_buildUnsafeExpr(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _40835_tokens);
inline jule::Ptr<_1c66465b3_FnDecl> _1c7390b9c_buildAnonFn(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _42332_tokens);
inline jule::Any _1c7390edd_buildUnsafe(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _43232_tokens);
inline void _1c739140b_pushRangeLitPart(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _44236_part, jule::Ptr<_1c661e327_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c739174c_getBraceRangeLitExprParts(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _45345_tokens);
inline jule::Ptr<_1c663d456_FieldExprPair> _1c7391a8d_buildFieldExprPair(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _49538_tokens);
inline jule::Ptr<_1c6638c37_Expr> _1c7391dce_buildStructLitExpr(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1c6638c37_Expr>> _1c7392220_buildStructLitExprs(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _52340_tokens);
inline jule::Ptr<_1c663dc81_StructLit> _1c7392561_buildTypedStructLiteral(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _53643_tokens);
inline jule::Ptr<_1c6638c37_Expr> _1c73928a2_buildBraceLitPart(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _56038_tokens);
inline jule::Ptr<_1c663e237_BraceLit> _1c7392be3_buildBraceLit(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _57734_tokens);
inline jule::Any _1c7393034_buildBraceRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c7393375_getEnumerableParts(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _64838_tokens);
inline jule::Ptr<_1c664028d_SliceExpr> _1c73936b6_buildSlice(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _65530_tokens);
inline jule::Ptr<_1c6640bea_IndexingExpr> _1c7393b6c_buildIndexing(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c661e327_Token>> _6787_tokens, jule::Ptr<_1c661e327_Token> _67829_errorToken);
inline jule::Ptr<_1c664135a_SlicingExpr> _1c7394288_buildSlicing(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c661e327_Token>>* _7028_to, jule::Ptr<_1c661e327_Token>* _70227_errorToken, jule::Ptr<_1c661e327_Token> _70251_end);
inline jule::Any _1c73945c9_buildBracketRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _71737_tokens);
inline jule::Any _1c739491a_buildExclRight(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _74235_tokens);
inline jule::Any _1c7394c5b_buildData(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _76030_tokens);
inline jule::Any _1c7395157_buildBinary(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1c7395498_build(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _85426_tokens);
inline jule::Any _1c73957d9_buildKind(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _86530_tokens);
inline jule::Ptr<_1c6638c37_Expr> _1c7395b2a_buildFromTokens(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _87635_tokens);
inline void _1c739b702_stop(_1c739b3c2_parser* _self_);
inline jule::Bool _1c739b988_stopped(_1c739b3c2_parser* _self_);
inline void _1c739bda6_pushErr(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1c739c219_pushSuggestion(_1c739b3c2_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1c6638c37_Expr> _1c739c55a_buildExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _21731_tokens);
inline jule::Ptr<_1c6633d20_Directive> _1c739c89b_buildDirective(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _22134_tokens);
inline void _1c739cb54_pushDirective(_1c739b3c2_parser* _self_, jule::Ptr<_1c6633d20_Directive> _23633_d);
inline jule::Ptr<_1c6644924_ScopeTree> _1c739d050_buildScope(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _24932_tokens, jule::Ptr<_1c661e327_Token> _24954_end);
inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c739d506__buildType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c739d9ac_buildType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c739dced_buildTypeAliasDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28140_tokens);
inline void _1c739e161_buildVarTypeAndExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664776d_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c661e327_Token>>* _32159_tokens);
inline void _1c739e4c4_buildVarCommon(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664776d_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c661e327_Token>> _35453_tokens);
inline void _1c739e837_buildVarBegin(_1c739b3c2_parser* _self_, jule::Ptr<_1c664776d_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37052_tokens);
inline jule::Ptr<_1c664776d_VarDecl> _1c739eb78_buildVar(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _39829_tokens);
inline jule::Ptr<_1c6641b0d_GenericDecl> _1c739eeb9_buildGeneric(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _1c73a03b5_buildGenerics(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _45435_tokens, jule::Ptr<_1c661e327_Token>* _45454_errorToken);
inline jule::Ptr<_1c6645161_ParamDecl> _1c73a0706_buildSelfParam(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _47434_tokens);
inline void _1c73a0b24_paramTypeBegin(_1c739b3c2_parser* _self_, jule::Ptr<_1c6645161_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _51468_tokens);
inline void _1c73a0e87_buildParamType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6645161_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c661e327_Token>>* _52960_tokens);
inline void _1c73a12ea_buildParamBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6645161_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c661e327_Token>> _54259_tokens);
inline jule::Ptr<_1c6645161_ParamDecl> _1c73a163b_buildParam(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _56231_tokens);
inline void _1c73a18e4_checkParams(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c6645161_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> _1c73a1ce0_buildParams(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool _1c73a21db_buildMultiRetType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool _1c73a25d7_buildRetType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1c66465b3_FnDecl> _1c73a2a8d_buildFnPrototype(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1c66465b3_FnDecl> _1c73a3044_buildFn(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c73a3385_getUseDeclSelectors(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _87639_tokens);
inline void _1c73a36e8_buildBindUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c661e327_Token>>* _90154_tokens);
inline jule::Str _1c73a3a39_useDeclTokstoa(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _91431_tokens);
inline void _1c73a3d9c_buildStdUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _92956_tokens);
inline void _1c73a4210_buildIdentUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _98758_tokens);
inline void _1c73a4573_parseUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _103553_tokens);
inline jule::Ptr<_1c664ca09_UseDecl> _1c73a496e_buildUseDecl(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73a4d6a_buildTypeEnumItemKind(jule::Ptr<_1c739b3c2_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>> _1c73a51ab_buildTypeEnumItems(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _112040_tokens);
inline jule::Ptr<_1c664ea0b_TypeEnumDecl> _1c73a54ec_buildTypeEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _114439_tokens);
inline jule::Ptr<_1c6638c37_Expr> _1c73a58e8_buildEnumItemExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> _1c73a5c39_buildEnumItems(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _120336_tokens);
inline jule::Ptr<_1c664da71_EnumDecl> _1c73a607a_buildEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _124035_tokens);
inline jule::Any _1c73a63bb_buildNodeEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _128539_tokens);
inline jule::Ptr<_1c664ecc5_FieldDecl> _1c73a670c_buildField(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>> _1c73a6a4d_buildStructDeclFields(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _134342_tokens);
inline jule::Ptr<_1c66506bb_StructDecl> _1c73a6d8e_buildStructDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _135437_tokens);
inline void _1c73a7147_checkMethodReceiver(_1c739b3c2_parser* _self_, jule::Ptr<_1c66465b3_FnDecl>* _140236_f);
inline void _1c73a74aa_buildTraitBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6650e08_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c661e327_Token>> _142155_tokens);
inline jule::Ptr<_1c6650e08_TraitDecl> _1c73a77eb_buildTraitDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _145336_tokens);
inline jule::Ptr<_1c66465b3_FnDecl> _1c73a7b3c_buildBindFn(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _148332_tokens);
inline jule::Ptr<_1c664776d_VarDecl> _1c73a7e7d_buildBindVar(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _149333_tokens);
inline jule::Ptr<_1c66506bb_StructDecl> _1c73a82be_buildBindStruct(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _150636_tokens);
inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c73a8610_buildBindTypeAlias(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _152039_tokens);
inline jule::Ptr<_1c664ca09_UseDecl> _1c73a8951_buildBindUse(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _153033_tokens);
inline jule::Any _1c73a8c92_buildBind(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _154131_tokens);
inline jule::Ptr<_1c66465b3_FnDecl> _1c73a90d3_getMethod(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _156531_tokens);
inline void _1c73a9446_parseImplBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6651568_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c661e327_Token>>* _159452_tokens);
inline jule::Ptr<_1c6651568_Impl> _1c73a9787_buildImpl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _162730_tokens);
inline jule::Any _1c73a9ac8_buildNodeData(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _169835_tokens);
inline void _1c73a9d81_applyFnMeta(_1c739b3c2_parser* _self_, jule::Ptr<_1c66465b3_FnDecl>* _173132_f);
inline void _1c73aa139_applyMeta(_1c739b3c2_parser* _self_, _1c6633902_Node* _173630_node);
inline void _1c73aa3e2_pushUseDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664ca09_UseDecl>* _176133_decl);
inline jule::Bool _1c73aa733_pushMetaNodes(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _176935_tokens);
inline _1c6633902_Node _1c73aaa74_parseNode(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _178931_st);
inline void _1c73aad2c_appendNode(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _181332_st);
inline void _1c73ab305_removeRange(_1c739b3c2_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c661e327_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1c73ab723_pushWrongOrderCloseErr(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token>* _183539_t, jule::Slice<jule::Ptr<_1c661e327_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1c73abbeb_pushRangeClose(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c661e327_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1c73abea4_checkRanges(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _186428_tokens);
inline void _1c73ac25c_parse(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6624aad_File>* _189527_f);
inline void _1c73adabb_pushErr(_1c73ad4e4_typeBuilder* _self_, jule::Ptr<_1c661e327_Token> _4123_token, jule::Str _4138_fmt);
inline void _1c73ade2e_pushSuggestion(_1c73ad4e4_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73ae1b5_buildNamespace(_1c73ad4e4_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _1c73ae44b_buildGenerics(_1c73ad4e4_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c73ae6d2_identGenerics(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73ae968_buildIdent(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73aebee_buildCppLink(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73aee85_buildFn(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b021b_buildPtr(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b04a2_buildSptr(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0738_buildSlc(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b09be_buildArr(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0c55_buildMap(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0edb_buildEnumerable(_1c73ad4e4_typeBuilder* _self_);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73b1272_step(_1c73ad4e4_typeBuilder* _self_);
inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c73b1508_build(_1c73ad4e4_typeBuilder* _self_);
inline void _1c6a87a7b_pushErr(_1c6a874e8_directiveEval* _self_, jule::Ptr<_1c661e327_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c6a87e77_splitOperans(_1c6a874e8_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c661e327_Token>>* _3346_tokens);
inline jule::Bool _1c6a882b8_evalDirectiveIdent(_1c6a874e8_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1c6a88609_evalDirectivePart(_1c6a874e8_directiveEval* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _7837_part);
inline jule::Bool _1c6a88890_eval(_1c6a874e8_directiveEval* _self_);
inline jule::Ptr<_1c73b24d7_JuleImporter> static__1c73b2916_New(_1c6a8601e_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _1c73b2b9c_AllPackages(_1c73b24d7_JuleImporter* _self_);
inline void _1c73b30dc_SetModPath(_1c73b24d7_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1c73b3373_GetModPath(_1c73b24d7_JuleImporter* _self_);
inline jule::Str _1c73b36b4_ModById(_1c73b24d7_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c73b3a05_GetImport(_1c73b24d7_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log _1c73b3e01_ImportPackage(_1c73b24d7_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod);
inline void _1c73b41a9_Imported(_1c73b24d7_JuleImporter* _self_, jule::Ptr<_1c66d63cd_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_20806e73a_Log _1c73b45d8_isPassBuildDirectives(_1c73b24d7_JuleImporter* _self_, jule::Ptr<_1c6632945_AST>* _17942_file);
inline jule::Ptr<_1c73b8cc4_ExprInspector> static__1c73b916a_New(void);
inline void _1c73b9423_args(_1c73b8cc4_ExprInspector* _self_, jule::Slice<jule::Any> _5624_args);
inline void _1c73b96cb_inspect(_1c73b8cc4_ExprInspector* _self_, jule::Any* _6228_m);
inline void _1c73b9a3e_Inspect(_1c73b8cc4_ExprInspector* _self_, jule::Any* _18928_m, jule::Fn<void,jule::Any*> _18942_f);
inline jule::Bool _1c7509552_isAllMethodsLive(_1c75091de_specialCaseDefines* _self_, jule::Ptr<_1c6655803_Struct> _3028_s);
inline jule::Ptr<_1c750a0ad_ObjectDeadCode> static__1c750a630_new(jule::Ptr<_1c73b4d7a_IR>* _5021_ir);
inline jule::Bool _1d8028291_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns>* _5627_t);
inline jule::Bool _1d8030188_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c666d4ec_FnIns>* _5627_t);
inline jule::Bool _1d8056cb4_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c667de9c_Trait>* _5627_t);
inline jule::Bool _1d8061ede_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c672acb3_Var>* _5627_t);
inline void _1d8028b98_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns> _7632_t);
inline void _1d8030595_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c666d4ec_FnIns> _7632_t);
inline void _1d80576bb_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c667de9c_Trait> _7632_t);
inline void _1d8062396_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c672acb3_Var> _7632_t);
inline void _1c750ae9e_pushStructAsLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns>* _8938_s);
inline void _1c750b257_setReferencesAsLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c6671687_ReferenceStack>* _15241_rs);
inline void _1c750b510_inits(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _20227_pkg);
inline void _1c750b7b8_collectLivePackage(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _21640_pkg);
inline void _1c750b9b6_collectLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_);
inline void _1c750bc6e_removeDeadGlobals(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _29239_vars);
inline void _1c750c027_removeDeadFns(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _30435_funcs);
inline void _1c750c2d0_removeDeadStructs(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _32539_structs);
inline void _1c750c588_removeDeadTraits(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c667de9c_Trait>>* _34738_traits);
inline void _1c750c841_removeDeadsFile(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c678348b_SymbolTable>* _36837_file);
inline void _1c750cae9_removeDeadsPackage(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _37540_pkg);
inline void _1c750cce7_removeDeads(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_);
inline void _1c750cee5_collectSpecialCaseDefines(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_);
inline void _1c750d1e3_elimanate(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_);
inline void _1c750e700_optimizeChild(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _3935_s);
inline void _1c750e9a8_optimizeBodyChildExceptional(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _4950_s);
inline void _1c750ec61_optimizeBodyChild(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _5939_s);
inline void _1c7510019_optimizeExprModel(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1c7510217_eliminateFollowed(_1c750e1d3_scopeDeadCode* _self_);
inline void _1c75104c0_pushGoto(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b6776_GotoSt> _8929_gt);
inline void _1c7510778_pushLabel(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b6116_Label> _9930_l);
inline void _1c7510a31_optimizeRangeIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b5401_RangeIter> _11238_it);
inline void _1c7510cd9_optimizeWhileIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b49a5_WhileIter> _11738_it);
inline void _1c7511092_optimizeInfIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b44ee_InfIter> _12536_it);
inline void _1c751134a_optimizeConditional(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b4202_Conditional> _12940_c);
inline void _1c7511603_optimizeMatch(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b7ce9_Match> _14734_m);
inline void _1c75118ab_optimizeAssign(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b7106_Assign> _16535_assign);
inline void _1c7511b64_optimizeMultiAssign(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _17040_assign);
inline void _1c7511e1c_optimizeStmt(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1c751211a_optimizeStmts(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_);
inline _1c751387a_exprDeadCode static__1c7513c43_new(jule::Ptr<_1c750e1d3_scopeDeadCode>* _1821_s);
inline void _1c7513eeb_optimize(_1c751387a_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _1c68bb53b_pushVar(_1c68bb096_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _1c68bb87c_removeVar(_1c68bb096_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _1c68bbbbd_isSafe(_1c68bb096_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1c73c19be_scopeOptimizer> static__1c73c2074_new(jule::Ptr<_1c66b35b9_Scope> _5120_scope);
inline void _1c73c232c_setCurrentStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1c73c252a_removeCurrent(jule::Ptr<_1c73c19be_scopeOptimizer> _self_);
inline jule::Bool _1c73c27b1_isLastStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_);
inline jule::Bool _1c73c2a47_isIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_);
inline void _1c73c2d00_optimizeData(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c6788b56_Data> _9533_d);
inline void _1c73c30a8_optimizeVar(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c672acb3_Var> _12132_v);
inline void _1c73c3361_optimizeConditional(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b4202_Conditional> _14240_c);
inline void _1c73c377e_buildDefaultConstantTrueCase(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b8822_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1c66b7ce9_Match>* _21680_m);
inline void _1c73c3a37_optimizeMatch(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7ce9_Match> _24234_m);
inline void _1c73c3ce0_optimizeRangeIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b5401_RangeIter> _32438_it);
inline void _1c73c4098_optimizeWhileIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b49a5_WhileIter> _36938_it);
inline jule::Bool _1c73c43d9_substr(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _37527_a);
inline jule::Bool _1c73c472a_strAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _39530_a);
inline jule::Bool _1c73c4a6b_sliceAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _40632_a);
inline void _1c73c4d24_optimizePostfix(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b6b50_Postfix> _41436_postfix);
inline void _1c73c50cc_optimizeAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _42135_assign);
inline jule::Bool _1c73c541d_tryOptimizeSwap(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _53537_assign);
inline void _1c73c56c6_optimizeMultiAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _57240_assign);
inline void _1c73c597e_optimizeRet(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b93b1_RetSt> _61832_r);
inline void _1c73c5c37_optimizeStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Any _64233_stmt);
inline void _1c73c5ee0_optimizeChild(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b35b9_Scope> _67134_child);
inline void _1c73c61dd_optimize(jule::Ptr<_1c73c19be_scopeOptimizer> _self_);
inline void static__1c73c88e9_optimize(jule::Any* _3626_model);
inline void static__1c73c8bd5_optimizeData(jule::Any* _4030_model, jule::Ptr<_1c73d17d1_data>* _4053_d);
inline jule::Bool _1c73c9026_selfCmpCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _5228_m);
inline jule::Bool _1c73c9367_boolCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _7625_m);
inline jule::Bool _1c73c96a8_strCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _12923_m);
inline jule::Bool _1c73c9b5e_tryNeutralElement1(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _18635_m, jule::Ptr<_1dd71e850_Const> _18660_c, jule::Ptr<_1c665c51e_OperandExprModel>* _18672_nc);
inline jule::Bool _1c73c9ea0_tryNeutralElement(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _23034_m);
inline void _1c73ca258_checkBinaryForBoundary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _24539_m);
inline void _1c73ca511_checkBinaryForNil(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _29734_m);
inline void _1c73ca7b9_binary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _32922_m);
inline void _1c73caa72_unary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665cde3_UnaryExprModel> _42721_m);
inline void _1c73cad2a_structureLit(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665d7b7_StructLitExprModel> _47028_m);
inline void _1c73cb0d3_casting(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665e147_CastingExprModel> _48623_m);
inline void _1c73cb446_args(_1c73c8421_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args);
inline void _1c73cb6ee_scope(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c66b35b9_Scope>* _52222_s);
inline void _1c73cb9a7_funcCall(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665e9e9_FnCallExprModel> _52824_m);
inline void _1c73cbc60_indexing(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c6660379_IndexingExprModel> _53524_m);
inline void _1c73cc018_anonFunc(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _55924_m);
inline void _1c73cc216_do(_1c73c8421_exprOptimizer* _self_);
inline void _1c73ce0e7_pushVar(jule::Ptr<_1c73cdb52_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1c67bb8d1_TypeKind> _3242_kind);
inline jule::Bool _1c73ce438_removeVar(_1c73cdb52_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1c73ce834_isFits(_1c73cdb52_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1c67bb8d1_TypeKind> _6936_kind);
inline _1c73d12d6_dataCheckpoint _1c73d1b88_getCheckpoint(_1c73d17d1_data* _self_);
inline void _1c73d1e41_loadCheckpoint(_1c73d17d1_data* _self_, _1c73d12d6_dataCheckpoint* _3535_c);
inline void _1c73d366d_pushVar(_1c73d31c8_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1c73d3daa_fitsMaxSize(_1c73d31c8_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1c751499c_Optimizer> static__1c7514e53_New(jule::Ptr<_1c73b4d7a_IR>* _2621_ir);
inline void _1c751520b_optimizeGlobal(_1c751499c_Optimizer* _self_, jule::Ptr<_1c672acb3_Var>* _3235_v);
inline void _1c75154b4_optimizeFunction(_1c751499c_Optimizer* _self_, jule::Ptr<_1c666a51b_Fn>* _3837_func);
inline void _1c751576c_optimizeStruct(_1c751499c_Optimizer* _self_, jule::Ptr<_1c6655803_Struct>* _4835_s);
inline void _1c7515a25_optimizeGlobals(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _6436_p);
inline void _1c7515ccd_optimizeFunctions(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _7238_p);
inline void _1c7516086_optimizeStructs(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _8036_p);
inline void _1c751633e_optimizePackage(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _8836_p);
inline void _1c751653c_Optimize(_1c751499c_Optimizer* _self_);
inline void static__1c7516c57_Reset(void);
inline void static__1c7539cd0_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1c753c7d8_LogFlat(_20806e73a_Log* _1421_l);
inline void static__1c753ca19_LogError(_20806e73a_Log* _1922_l);
inline void static__1c753cc4a_Log(_20806e73a_Log* _6417_l);
inline void static__1c753ce7b_PrintLogs(jule::Slice<_20806e73a_Log>* _7423_logs);
inline _1d4c98465_Time static__1d4c98850_Unix(jule::U64 _9117_sec);
inline _1d4c98465_Time static__1d4c98a5e_Now(void);
inline _1d4c97c8e_AbsTime _1d4c9a247_Abs(_1d4c98465_Time* _self_);
inline jule::Ptr<_1d4bbe91e_scopeCoder> static__1d4bc0117_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _7321_oc);
inline void _1d8429906_iterHead(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1d4bc07dd_rangeIndexIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _12936_it);
inline void _1d4bc0a96_rangeHashmapIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _19638_it);
inline void _1d4bc0d4e_strRuneIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b9979_StrRuneIter> _27932_it);
inline void _1d4bc1107_ifCase(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b39d7_If> _39127_i);
inline void _1d4bc13b0_conditional(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b4202_Conditional> _40032_c);
inline void _1d4bc1668_infIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b44ee_InfIter> _42028_it);
inline void _1d4bc1921_whileIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b49a5_WhileIter> _43730_it);
inline void _1d4bc1bc9_rangeIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter> _47630_it);
inline void _1d4bc1e82_cont(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5786_ContSt> _48921_c);
inline void _1d4bc223a_label(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6116_Label> _49422_l);
inline void _1d4bc24e3_gotoSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6776_GotoSt> _49923_gt);
inline void _1d4bc279b_postfix(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6b50_Postfix> _50428_p);
inline void _1d4bc2a54_assignLeft(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Any* _51132_model);
inline void _1d4bc2d0c_shl(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _53724_a);
inline void _1d4bc30b5_shr(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _54324_a);
inline void _1d4bc336d_divByZeroAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _54936_a);
inline void _1d4bc3846_operatorOverloadingAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _55547_s, jule::Ptr<_1c665c51e_OperandExprModel>* _55573_l, jule::Ptr<_1c665c51e_OperandExprModel>* _5568_r, jule::U64 _55636_op);
inline void _1d4bc3aee_assign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _57027_a);
inline void _1d4bc3da7_mapLookupAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _60337_a);
inline void _1d4bc4160_multiAssignTup(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _63536_a);
inline void _1d4bc4418_multiAssignFn(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _68435_a);
inline void _1d4bc46c1_multiAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _74332_a);
inline jule::Fn<void> _1d4bc4a12_matchExpr(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _76930_m);
inline void _1d4bc4d75_case(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _77925_m, jule::Ptr<_1c66b8822_Case> _77940_c);
inline void _1d4bc512d_matchSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _84928_m);
inline void _1d4bc53d6_fallSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b901a_FallSt> _90423_f);
inline void _1d4bc568e_breakSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5b60_BreakSt> _90924_b);
inline void _1d4bc5947_setResult(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b93b1_RetSt> _91830_r);
inline void _1d4bc5c00_retSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b93b1_RetSt> _94626_r);
inline void _1d4bc5ea8_var(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c672acb3_Var> _98224_v);
inline void _1d4bc6261_mutSlicing(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b866a_MutSlicingExprModel> _98831_m);
inline void _1d4bc6519_swap(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b7416_SwapExprModel> _100525_m);
inline void _1d4bc67c2_exceptionalForwarding(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b7081_ExceptionalForwardingExprModel> _101342_m);
inline void _1d4bc6a7a_st(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Any _101923_st);
inline void _1d4bc6d33_scopeStmts(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b35b9_Scope>* _107532_s);
inline void _1d4bc70db_scope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b35b9_Scope> _108426_s);
inline void _1d4bc7394_commonFuncScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _109937_f);
inline void _1d4bc7707_anonFuncScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _113934_m, jule::Str _113955_ident);
inline void _1d4bc79b0_funcScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _117130_f);
inline jule::Ptr<_1d4bcb200_exprCoder> static__1d4bcb5eb_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _11321_oc);
inline void _1d4bcb8a4_string(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _11924_c);
inline void _1d4bcbb5c_boolean(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Bool _13424_b);
inline void _1d4bcbd5a_nilLit(jule::Ptr<_1d4bcb200_exprCoder> _self_);
inline jule::Bool _1d4bcc19b_ftoaSpecialCases(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::F64* _14634_x);
inline void _1d4bcc454_float32(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _16025_c);
inline void _1d4bcc70c_float64(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _17925_c);
inline void _1d4bcc9b5_constant(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const> _19729_c);
inline void _1d4bccdd3_operatorOverloadingUnary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _22146_s, jule::U64 _22161_op, jule::Any _22178_e);
inline void _1d4bcd301_divByZeroBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c661e327_Token>* _23333_op, jule::Ptr<_1c665c51e_OperandExprModel>* _23350_l, jule::Ptr<_1c665c51e_OperandExprModel>* _23377_r);
inline void _1d4bcd9e9__unsafeBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, _20759e353_StrBuilder* _27235_buf, jule::Str* _27253_l, jule::Str* _27262_r, jule::Ptr<_1c67bb8d1_TypeKind>* _2738_lk, jule::Ptr<_1c67bb8d1_TypeKind>* _27328_rk, jule::U64 _27343_op, jule::Str _27356_kind);
inline void _1d4bcdca2_unsafeBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _35633_m);
inline void _1d4bce115_shl(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665c51e_OperandExprModel>* _36825_l, jule::Ptr<_1c665c51e_OperandExprModel>* _36852_r);
inline void _1d4bce478_shr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665c51e_OperandExprModel>* _39625_l, jule::Ptr<_1c665c51e_OperandExprModel>* _39652_r);
inline void _1d4bce731_binary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _42427_m);
inline void _1d4bce9d9_var(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c672acb3_Var> _44824_m);
inline void _1d4bcec92_structureIns(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns> _46433_m);
inline void _1d4bd004a_unary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665cde3_UnaryExprModel> _46826_m);
inline void _1d4bd0303_structureLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665d7b7_StructLitExprModel> _49933_m);
inline void _1d4bd05ab_allocStructure(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665dab4_AllocStructLitExprModel> _54235_m);
inline void _1d4bd0864_possibleRefExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _55032_expr);
inline void _1d4bd0c82_castTraitFromTrait(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e147_CastingExprModel>* _56440_m, jule::Ptr<_1c667de9c_Trait> _56466_t1, jule::Ptr<_1c667de9c_Trait> _56482_t2);
inline void _1d4bd103a_casting(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e147_CastingExprModel> _57728_m);
inline void _1d4bd12e3_args(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _72926_m);
inline void _1d4bd159b_modelForCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _76033_expr);
inline void _1d4bd1854_pushCallInf(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _77529_m);
inline jule::Bool _1d4bd1b95_isWrapped(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _79831_m);
inline jule::Bool _1d4bd1ed6_writeReceiver(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _82234_m);
inline void _1d4bd228e_pureFuncCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _83534_m);
inline void _1d4bd2547_coFuncCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _92532_m);
inline void _1d4bd28aa_writeUseExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _97634_f, jule::Ptr<_1c6788b56_Data> _97649_d);
inline void _1d4bd2b63_funcCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel> _99729_m);
inline void _1d4bd2e1b_slice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665edc3_SliceExprModel> _107026_m);
inline void _1d4bd31c4_indexing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6660379_IndexingExprModel> _109929_m);
inline void _1d4bd347c_unsafeIndexing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b8cec_UnsafeIndexingExprModel> _115135_m);
inline void _1d4bd3735_anonFunc(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _116829_m);
inline void _1d4bd39dd_mapExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66610d3_MapExprModel> _119928_m);
inline void _1d4bd3c96_slicing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6661666_SlicingExprModel> _123228_m);
inline void _1d4bd404e_traitSub(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6661be9_TraitSubIdentExprModel> _124829_m);
inline void _1d4bd4307_structureSub(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666258a_StructSubIdentExprModel> _126433_m);
inline void _1d4bd45b0_array(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6662d0a_ArrayExprModel> _127326_m);
inline void _1d4bd4868_funcInsCommon(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _132334_m);
inline void _1d4bd4b21_funcIns(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _133028_m);
inline void _1d4bd4dc9_tuple(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6663107_TupleExprModel> _134126_m);
inline void _1d4bd5182_newCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> _135228_m);
inline void _1d4bd543a_outCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> _136428_m);
inline void _1d4bd56e3_outlnCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> _137730_m);
inline void _1d4bd599b_panicCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _139030_m);
inline void _1d4bd5c54_assertCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _139831_m);
inline void _1d4bd600c_errorCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _141130_m);
inline void _1d4bd62b5_copyCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665d41_BuiltinCopyCallExprModel> _144329_m);
inline void _1d4bd656d_lenCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _145128_m);
inline void _1d4bd6826_capCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666558d_BuiltinCapCallExprModel> _146828_m);
inline void _1d4bd6ace_deleteCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _147331_m);
inline void _1d4bd6d87_makeCallSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel>* _149835_m);
inline void _1d4bd7140_makeCallStr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel>* _152233_m);
inline void _1d4bd73e8_makeCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _153329_m);
inline void _1d4bd76a1_pushToSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b91c6_PushToSliceExprModel> _154132_m);
inline void _1d4bd7959_appendToSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b95a0_AppendToSliceExprModel> _160134_m);
inline void _1d4bd7c12_appendCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _160931_m);
inline void _1d4bd7eba_sizeof(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66668be_SizeofExprModel> _161727_m);
inline void _1d4bd8273_alignof(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6666aab_AlignofExprModel> _162328_m);
inline void _1d4bd852b_runeLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6666d53_RuneExprModel> _162924_m);
inline void _1d4bd87d4_structureStatic(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6662931_StructStaticIdentExprModel> _164336_m);
inline void _1d4bd8a8c_backendEmit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666722c_BackendEmitExprModel> _164732_m);
inline void _1d4bd8d45_free(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6667529_FreeExprModel> _166325_m);
inline void _1d4bd90ed_strComp(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b80d7_StrCompExprModel> _167228_m);
inline void _1d4bd93a6_emptyCompare(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b77e0_EmptyCompareExprModel> _168833_m);
inline void _1d4bd965e_unsafeDeref(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b9c76_UnsafeDerefExprModel> _169732_m);
inline void _1d4bd9917_unsafeCasting(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68ba073_UnsafeCastingExprModel> _170834_m);
inline void _1d4bd9bc0_model(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _172526_m);
inline jule::Bool _1d4bda011_handleFieldByDefault(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6657aad_FieldIns>* _182742_f);
inline void _1d4bda2b9_initStructLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _184835_s);
inline void _1d4bda572_fillCollectionByDefault(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _187045_elem);
inline void _1d4bda82a_initCollection(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _188536_elem);
inline void _1d4bdaad3_initArray(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67cb319_Arr>* _189931_arr);
inline void _1d4bdad8b_initExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _191329_t);
inline jule::Ptr<_1d4bddc5c_TestCoder> static__1d4bde213_New(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1d4bde499_findTestingPackage(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void _1d4bde752_appendTest(jule::Ptr<_1d4bddc5c_TestCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _4431_f);
inline void _1d4bdea0a_appendPackageTests(jule::Ptr<_1d4bddc5c_TestCoder> _self_, jule::Ptr<_1c66d9304_Package>* _5940_p);
inline jule::Bool _1d4bdec91_readyTestingPackage(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void _1d4bdee8e_callTmReset(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void _1d4be018c_callTmFailed(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void _1d4be038a_callTmSkipped(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void _1d4be0588_Serialize(jule::Ptr<_1d4bddc5c_TestCoder> _self_);
inline void static__1d4be2227_writeIdentTo(_20759e353_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1d4be25bd_toOut(_20759e353_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1d4be2a1e_toLocal(_20759e353_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1d4be2d0a_func(_20759e353_StrBuilder* _8622_buf, jule::Ptr<_1c666a51b_Fn>* _8644_f);
inline void static__1d4be30e6_funcIns(_20759e353_StrBuilder* _10725_buf, jule::Ptr<_1c666d4ec_FnIns>* _10747_f);
inline void static__1d4be33d2_traitDecl(_20759e353_StrBuilder* _12227_buf, jule::Ptr<_1c667de9c_Trait> _12244_t);
inline void static__1d4be36bd_param(_20759e353_StrBuilder* _12623_buf, jule::Ptr<_1c6668a47_Param>* _12641_p);
inline void static__1d4be39a9_structure(_20759e353_StrBuilder* _14127_buf, jule::Ptr<_1c6655803_Struct>* _14145_s);
inline void static__1d4be3c95_structureIns(_20759e353_StrBuilder* _15230_buf, jule::Ptr<_1c665865d_StructIns>* _15248_s);
inline void static__1d4be4081_field(_20759e353_StrBuilder* _16023_buf, jule::Ptr<_1c66528cc_Field>* _16041_f);
inline void static__1d4be436c_var(_20759e353_StrBuilder* _17021_buf, jule::Ptr<_1c672acb3_Var> _17042_v);
inline void static__1d4be4658_iterBegin(_20759e353_StrBuilder* _19727_buf, jule::Uintptr _19744_it);
inline void static__1d4be4944_iterEnd(_20759e353_StrBuilder* _20225_buf, jule::Uintptr _20242_it);
inline void static__1d4be4c30_iterNext(_20759e353_StrBuilder* _20726_buf, jule::Uintptr _20743_it);
inline void static__1d4be501b_label(_20759e353_StrBuilder* _21223_buf, jule::Uintptr _21240_u);
inline void static__1d4be5307_matchEnd(_20759e353_StrBuilder* _21726_buf, jule::Uintptr _21743_m);
inline void static__1d4be55e3_caseBegin(_20759e353_StrBuilder* _22227_buf, jule::Uintptr _22244_c);
inline jule::Ptr<_1d4ca3c9a_ObjectCoder> static__1d4ca41c9_New(jule::Ptr<_1c73b4d7a_IR>* _11721_ir, _1d4ca1eeb_SerializationInfo _11730_info);
inline void _1d4ca4482_write(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Str _12822_s);
inline void _1d4ca473a_writeBytes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b);
inline void _1d4ca4938_addIndent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca4b36_doneIndent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca4d34_indent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline jule::I64 _1d4ca5175_findAnyType(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _15133_t);
inline jule::I64 _1d4ca54b6_pushDealloc(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _16032_t);
inline jule::Str _1d4ca5807_pushAnonFn(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _17632_m);
inline jule::I64 _1d4ca5b48_pushAnyType(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _21632_t);
inline void _1d4ca5e01_pushResultIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _32735_f);
inline void _1d4ca61a9_pushResult(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _34832_f);
inline void _1d4ca651c_pushAndWriteMaskMapper(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait> _36143_t1, jule::Ptr<_1c667de9c_Trait> _36159_t2);
inline void _1d4ca67c5_locInfo(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c661e327_Token>* _41225_t);
inline void _1d4ca69c3_head(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca6c7b_links(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Bool _47922_std);
inline void _1d4ca7034_prepareStructure(_1d4ca3c9a_ObjectCoder* _self_, jule::Ptr<_1c6655803_Struct>* _50237_s);
inline void _1d4ca7232_prepareStructures(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca74da_structurePlainDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _53340_s);
inline void _1d4ca76d8_structurePlainDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca7991_fieldDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6657aad_FieldIns>* _54931_f);
inline void _1d4ca7c49_structureDestructor(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _55641_s);
inline void _1d4ca8167_structureOperatorEq(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Str _57236_ident, jule::Ptr<_1c665865d_StructIns>* _57253_s, jule::Bool _57268_decl);
inline void _1d4ca84ca_structureOperators(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _64040_s, jule::Bool _64055_decl);
inline void _1d4ca8783_structureInsDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _64938_s);
inline void _1d4ca8a3b_structureDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _67935_s);
inline void _1d4ca8c39_structureDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca8e37_structureMethodDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4ca9410_funcHead(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _71330_buf, jule::Ptr<_1c666d4ec_FnIns>* _71352_f, jule::Bool _71363_ptr, jule::Str _71374_ident);
inline void _1d4ca9773_funcDeclIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _73233_f, jule::Bool _73244_ptr);
inline void _1d4ca9ad6_funcDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _73930_f, jule::Bool _73938_ptr);
inline void _1d4ca9d8e_funcDeclTrait(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _74535_f);
inline void _1d4caa08c_funcDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4caa345_traitDataTypeMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _76742_t);
inline void _1d4caa543_traitDataTypes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4caa8a6_paramIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _80330_buf, jule::Ptr<_1c666c474_ParamIns>* _80352_p);
inline void _1d4caac19_paramsIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _80931_buf, jule::Ptr<_1c666d4ec_FnIns>* _80953_f);
inline void _1d4cab07c_varInitExpr(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c672acb3_Var>* _83033_v, jule::Fn<void> _83042_init);
inline void _1d4cab335_var(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c672acb3_Var> _84824_v);
inline void _1d4cab698_anonFuncInsDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _87937_m, jule::Str _87958_ident);
inline void _1d4caba0b_anonFuncIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _88533_m, jule::Str _88554_ident);
inline void _1d4cabd6e_funcIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _89529_f, jule::Str _89540_ident);
inline void _1d4cac127_func(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _90526_f);
inline void _1d4cac48a_funcTrait(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _91127_s, jule::Ptr<_1c666d4ec_FnIns>* _91147_f);
inline __jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool _1d4cac7cb_findTraitMetMap(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _92637_m);
inline void _1d4cacb3e_traitWrapper(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _93834_t, jule::Ptr<_1c666a51b_Fn>* _93850_m);
inline void _1d4cacd3c_traitWrappers(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cad1a0_traitDataMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _100438_t, jule::Ptr<_1c665865d_StructIns> _100449_s);
inline void _1d4cad5bd_traitData(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _102131_t, jule::I64 _102142_i, jule::Ptr<_1c665865d_StructIns>* _102155_s);
inline void _1d4cad7bb_traitDatas(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cad9b9_globalDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cadbb7_decls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cade70_structureMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _108438_s);
inline void _1d4cae228_structureIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _109134_s);
inline void _1d4cae4d1_structure(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _109731_s);
inline void _1d4cae6ce_structures(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cae8cc_funcs(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4caeb85_pushInit(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c66d9304_Package>* _112930_pkg);
inline void _1d4caed83_anonHashes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cb0081_initGlobals(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cb027e_initCaller(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cb047c_end(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cb07e0_insertBuf(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _120131_buf, jule::I64 _120148_pos);
inline void _1d4cb09dd_serializeHead(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline void _1d4cb0bdb_Serialize(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_);
inline jule::Str _1d4cb301d_Str(_1d4cb2b22_customType* _self_);
inline jule::Bool _1d4cb335e_Equal(jule::Ptr<_1d4cb2b22_customType> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _4418_k);
inline jule::Ptr<_1d4cb375a_typeCoder> static__1d4cb3caa_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _6921_oc);
inline void _1d4cb411d_toType(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1d4cb4481_prim(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _9025_buf, jule::Ptr<_1c67c49e9_Prim> _9042_p);
inline void _1d4cb47e4_tuple(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _9526_buf, jule::Ptr<_1c67c9adc_Tuple> _9547_t);
inline void _1d4cb4b57_asSptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1d4cb4eba_sptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _11425_buf, jule::Ptr<_1c67c8525_Sptr> _11446_sptr);
inline void _1d4cb532d_ptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _12124_buf, jule::Ptr<_1c67cbcdc_Ptr> _12145_p);
inline void _1d4cb5691_enumDecl(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _13229_buf, jule::Ptr<_1c66816a8_Enum> _13250_e);
inline void _1d4cb5a04_typeEnumDecl(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _13733_buf, jule::Ptr<_1c6682db3_TypeEnum> _13754_e);
inline void _1d4cb5d67_asSlice(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _14128_buf, jule::Ptr<_1c67bb8d1_TypeKind> _14149_elem);
inline void _1d4cb61ca_slice(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _14826_buf, jule::Ptr<_1c67c8ee8_Slc> _14847_s);
inline void _1d4cb653d_mapType(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _15328_buf, jule::Ptr<_1c67ca68c_Map> _15349_m);
inline void _1d4cb6c14_structureIns(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _16533_buf, jule::Ptr<_1c665865d_StructIns> _16554_s);
inline void _1d4cb7077_array(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _18926_buf, jule::Ptr<_1c67cb319_Arr> _18947_a);
inline void _1d4cb774d_paramIns(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _21229_buf, jule::Ptr<_1c666c474_ParamIns>* _21251_p);
inline void _1d4cb7e24_funcInsResult(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _24434_s, jule::Ptr<_1c666d4ec_FnIns>* _24454_f);
inline void _1d4cb8287_anonFunc(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _26229_buf, jule::Ptr<_1c666d4ec_FnIns> _26250_f);
inline void _1d4cb85ea_func(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _28325_buf, jule::Ptr<_1c666d4ec_FnIns> _28346_f);
inline void _1d4cb895d_kind(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _29025_buf, jule::Ptr<_1c67bb8d1_TypeKind> _29046_k);
inline jule::Ptr<_1d4cbb345_resultCoder> static__1d4cbb851_new(jule::Ptr<_1d4cb375a_typeCoder>* _35821_tc);
inline void _1d4cbbbb4_ptr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _36224_s, jule::Ptr<_1c67cbcdc_Ptr> _36243_p);
inline void _1d4cbc027_sptr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _36725_s, jule::Ptr<_1c67c8525_Sptr> _36744_p);
inline void _1d4cbc38a_mapType(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _37228_s, jule::Ptr<_1c67ca68c_Map> _37247_p);
inline void _1d4cbc6ed_slice(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _37826_s, jule::Ptr<_1c67c8ee8_Slc> _37845_slc);
inline void _1d4cbca61_arr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _38324_s, jule::Ptr<_1c67cb319_Arr> _38343_arr);
inline void _1d4cbcdc4_func(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _38925_s, jule::Ptr<_1c666d4ec_FnIns> _38944_f);
inline void _1d4cbd237_tup(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _40224_s, jule::Ptr<_1c67c9adc_Tuple> _40243_tup);
inline void _1d4cbd59a_codeMut(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _40928_s, jule::Ptr<_1c67bb8d1_TypeKind>* _40948_t);
inline void _1d4cbd90d_codeMut1(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _44929_s, jule::Ptr<_1c67bb8d1_TypeKind>* _44949_t);
inline jule::Slice<jule::U8> _1d4cbdc1b_code(_1d4cbb345_resultCoder* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _45825_t);
inline jule::Str _1d8b109b0_Name(_1d8b10b58_Flag* _self_);
inline jule::Str _1d8b10e44_What(_1d8b10b58_Flag* _self_);
inline void _1d8b11087_Reset(_1d8b10b58_Flag* _self_);
inline jule::I32 _1d8b111ca_Short(_1d8b10b58_Flag* _self_);
inline jule::Str _1d8b14101_Name(_1d8b14475_Flag* _self_);
inline jule::Str _1d8b14761_What(_1d8b14475_Flag* _self_);
inline void _1d8b148a4_Reset(_1d8b14475_Flag* _self_);
inline jule::I32 _1d8b149e7_Short(_1d8b14475_Flag* _self_);
inline jule::Str _1d8b1780d_Name(_1d8b17b82_Flag* _self_);
inline jule::Str _1d8b17e6d_What(_1d8b17b82_Flag* _self_);
inline void _1d8b180b1_Reset(_1d8b17b82_Flag* _self_);
inline jule::I32 _1d8b18204_Short(_1d8b17b82_Flag* _self_);
inline jule::Str _1d8b1b05e_Name(_1d8b1b3d3_Flag* _self_);
inline jule::Str _1d8b1b6be_What(_1d8b1b3d3_Flag* _self_);
inline void _1d8b1b812_Reset(_1d8b1b3d3_Flag* _self_);
inline jule::I32 _1d8b1b955_Short(_1d8b1b3d3_Flag* _self_);
inline jule::Str _1d8b1e76b_Name(_1d8b1eae0_Flag* _self_);
inline jule::Str _1d8b1edcb_What(_1d8b1eae0_Flag* _self_);
inline void _1d8b2001e_Reset(_1d8b1eae0_Flag* _self_);
inline jule::I32 _1d8b20162_Short(_1d8b1eae0_Flag* _self_);
inline jule::Ptr<_1d4d373d3_FlagSet> static__1d4d37702_New(void);
inline jule::Trait _1d4d37ba8_FindFlag(_1d4d373d3_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1d4d37ee9_FindFlagShort(_1d4d373d3_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1d4d385c1_Parse(_1d4d373d3_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1d8b1eae0_Flag> _1d8b9d7d9_addFlagCommon(_1d4d373d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1d8b1b3d3_Flag> _1d8ba78ae_addFlagCommon(_1d4d373d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1d8b9b0ab_AddVar(_1d4d373d3_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1d8ba51c5_AddVar(_1d4d373d3_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1d8b328b1_parseInteger(_1d4d39d97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1d8b3a48a_parseInteger(_1d4d39d97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1d4d3a6e4_getData(_1d4d39d97_argParser* _self_);
inline jule::VoidExceptional _1d4d3a969_processFlag(_1d4d39d97_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1d4d3ac22_singleDash(_1d4d39d97_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1d4d3aeca_doubleDash(_1d4d39d97_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1d4d3b1c8_tryArg(_1d4d39d97_argParser* _self_);
inline jule::VoidExceptional _1d4d3b3c6_parse(_1d4d39d97_argParser* _self_);
inline __jule_tuple_x_1c73b4d7a_IR__jule_tuple_s_20806e73a_Log static__1c73b5353_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1c73b583c_appendStructs(_1c73b4d7a_IR* _self_, jule::Ptr<_1c66d9304_Package>* _6730_p, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _6754_buffer);
inline jule::Slice<jule::Ptr<_1c6655803_Struct>> _1c73b5ac3_GetAllStructures(_1c73b4d7a_IR* _self_);
inline void _1c73b5e36_appendGlobals(_1c73b4d7a_IR* _self_, jule::Ptr<_1c66d9304_Package>* _9030_p, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _9054_buffer);
inline jule::Slice<jule::Ptr<_1c672acb3_Var>> _1c73b61bc_GetAllGlobals(_1c73b4d7a_IR* _self_);
inline void _1c73b63ba_Order(_1c73b4d7a_IR* _self_);
inline jule::Ptr<_208819a0c_Cmd> static__208819e4c_New(jule::Str _2616_path);
inline jule::VoidExceptional _20881a14a_Spawn(_208819a0c_Cmd* _self_);
inline jule::Exceptional<jule::I64> _20881a5ce_Wait(_208819a0c_Cmd* _self_);
inline jule::VoidExceptional _20881e11b_spawn(_208819a0c_Cmd* _self_);
inline jule::Exceptional<jule::I64> _20881e5a0_wait(_208819a0c_Cmd* _self_);
inline jule::I32 _220020e11_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _2200211ca_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _22002151b_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _2200217a2_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _220021b26_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _220021dac_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _2200221ba_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _220022484_U16PtrToStr(jule::U16* _4623_s);
inline jule::Str _2200232ba_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1d4d6b03d_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _220023e03_StrBytes(jule::Str _4013_s);
inline jule::Str _220024189_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _220024453_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I64 _220025ba2_GetLastErrno(void);
inline jule::Uintptr _2210a0ad8_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _2210a0da2_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I64 _2210a1226_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I64 _2210a1655_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode);
inline jule::U32 _2210a1864_GetLastError(void);
inline jule::U32 _2210a1bd8_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _2210a226b_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _2210a2535_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _2210a27ee_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _2210a2cd8_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname);
inline jule::Bool _2210a315c_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode);
inline jule::Bool _2210a3767_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode);
inline jule::Bool _2210a3cb7_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved);
inline jule::Bool _2210a42a1_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed);
inline jule::Uintptr _2210a4834_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I64 _2210a4ba8_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I64 _2210a4e72_FindClose(jule::Uintptr _15414_h);
inline jule::I64 _2210a7051_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _2210a742a_Close(jule::I64 _2510_handle);
inline jule::I64 _2210a77d2_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _2210a7a13_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _2066ae95e_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _2066aeca0_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _2066b0300_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _2066b05b9_RuneLen(jule::I32 _35212_r);
inline jule::I64 _2066b0a4d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _2066b0d4a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _2066b11be_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _2066b1752_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _2066b1a1b_RuneStart(jule::U8 _51714_b);
inline jule::I64 _238a14468_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _238a153ae_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _238a15c94_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _238a1605d_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _238a1ba36_Len32(jule::U32 _35214_x);
inline jule::I64 _238a1bd00_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _238a1ca8c_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _238a1e396_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::I64 _239890238_randInt(jule::U64 _716_seed, jule::I64 _727_max);
inline jule::Bool _1d50b541e_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1d612a2c9_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1d8328bce_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n);
inline void _2066b281e__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I64 _2066b2b2c_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I64 _2066b2ea1_readConsole(jule::Uintptr _2923_handle, jule::Slice<jule::U8> _2948_buf);
inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5620_buf);
inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6420_buf);
inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7218_buf);
inline jule::Slice<jule::Str> _2066b9716_args(void);
inline jule::Str _2066b9bbc_executable(void);
inline jule::U64 __jule_RCLoad(jule::U64* _1019_p);
inline void __jule_RCAdd(jule::U64* _1722_p);
inline jule::Bool __jule_RCDrop(jule::U64* _2523_p);
inline jule::U64* __jule_RCNew(void);
inline void __jule_RCFree(jule::U64* _3519_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I64 _2066c4578_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1d8b6b6b9_arrToStr(jule::Slice<jule::U8> _12316_x);
inline jule::Str _1d8b6155a_structToStr(_20759e353_StrBuilder _15619_x);
inline jule::Str _1d5083431_toStr(jule::Any _19713_x);
inline jule::Str _1d508560e_toStr(jule::Str _19713_x);
inline jule::Str _1d5085d5c_toStr(jule::I64 _19713_x);
inline jule::Str _1d508aaba_toStr(jule::I8 _19713_x);
inline jule::Str _1d50887ee_toStr(jule::I16 _19713_x);
inline jule::Str _1d5090ecc_toStr(jule::I32 _19713_x);
inline jule::Str _1d50939b3_toStr(jule::I64 _19713_x);
inline jule::Str _1d5096510_toStr(jule::U64 _19713_x);
inline jule::Str _1d5094024_toStr(jule::Uintptr _19713_x);
inline jule::Str _1d50991e4_toStr(jule::U8 _19713_x);
inline jule::Str _1d509b636_toStr(jule::U16 _19713_x);
inline jule::Str _1d509da78_toStr(jule::U32 _19713_x);
inline jule::Str _1d50a0eba_toStr(jule::U64 _19713_x);
inline jule::Str _1d50a4397_toStr(jule::F32 _19713_x);
inline jule::Str _1d50a3451_toStr(jule::F64 _19713_x);
inline jule::Str _1d50913a6_toStr(jule::Bool _19713_x);
inline jule::Str _1d50aa634_toStr(jule::I64 _19713_x);
inline jule::Str _1d5d42cc2_toStr(jule::I64 _19713_x);
inline jule::Str _1d5d6eea8_toStr(jule::I64 _19713_x);
inline jule::Str _1d61b9742_toStr(jule::I64 _19713_x);
inline jule::Str _1d6796747_toStr(jule::Ptr<_1c6651568_Impl> _19713_x);
inline jule::Str _1d6796a11_toStr(jule::Ptr<_1c664b420_TypeAliasDecl> _19713_x);
inline jule::Str _1d679934e_toStr(jule::Ptr<_1c66506bb_StructDecl> _19713_x);
inline jule::Str _1d679cb16_toStr(jule::Ptr<_1c66465b3_FnDecl> _19713_x);
inline jule::Str _1d67a5459_toStr(jule::Ptr<_1c6650e08_TraitDecl> _19713_x);
inline jule::Str _1d67a9073_toStr(jule::Ptr<_1c664776d_VarDecl> _19713_x);
inline jule::Str _1d67acb8c_toStr(jule::Ptr<_1c664da71_EnumDecl> _19713_x);
inline jule::Str _1d67b1542_toStr(jule::Ptr<_1c664ea0b_TypeEnumDecl> _19713_x);
inline jule::Str _1d67d3531_toStr(jule::Ptr<_1c66528cc_Field> _19713_x);
inline jule::Str _1d67e5642_toStr(jule::Ptr<_1dd71e850_Const> _19713_x);
inline jule::Str _1d67eb79c_toStr(jule::Ptr<_1c672acb3_Var> _19713_x);
inline jule::Str _1d6812bc0_toStr(jule::Ptr<_1c6680b3b_EnumItem> _19713_x);
inline jule::Str _1d68242db_toStr(jule::Ptr<_1c6668a47_Param> _19713_x);
inline jule::Str _1d684adc3_toStr(jule::Ptr<_1c6655803_Struct> _19713_x);
inline jule::Str _1d684d5e0_toStr(jule::Ptr<_1c667de9c_Trait> _19713_x);
inline jule::Str _1d6851d63_toStr(jule::Ptr<_1c66816a8_Enum> _19713_x);
inline jule::Str _1d68555d6_toStr(jule::Ptr<_1c6682db3_TypeEnum> _19713_x);
inline jule::Str _1d685d237_toStr(jule::Ptr<_1c666a51b_Fn> _19713_x);
inline jule::Str _1d691c9cd_toStr(jule::Str _19713_x);
inline jule::Str _1d6965a15_toStr(jule::Ptr<_1c67baade_TypeAlias> _19713_x);
inline jule::Str _1d69e8290_toStr(jule::Ptr<_1c663500d_IdentTypeDecl> _19713_x);
inline jule::Str _1d6a10609_toStr(jule::Ptr<_1c6663107_TupleExprModel> _19713_x);
inline jule::Str _1d6a12a90_toStr(jule::Ptr<_1c663982b_TupleExpr> _19713_x);
inline jule::Str _1d6a22990_toStr(jule::Ptr<_1c66433a1_AssignSt> _19713_x);
inline jule::Str _1d6a25ad6_toStr(jule::Ptr<_1c6638c37_Expr> _19713_x);
inline jule::Str _1d6a27cb4_toStr(jule::Ptr<_1c66b6b50_Postfix> _19713_x);
inline jule::Str _1d6a2a954_toStr(jule::Ptr<_1c66b7106_Assign> _19713_x);
inline jule::Str _1d6a2848a_toStr(jule::Ptr<_1c66b75ac_MultiAssign> _19713_x);
inline jule::Str _1d6a34a07_toStr(jule::Ptr<_1c6788b56_Data> _19713_x);
inline jule::Str _1d6a39611_toStr(jule::Ptr<_1c665e9e9_FnCallExprModel> _19713_x);
inline jule::Str _1d6a6b18c_toStr(jule::Ptr<_1c66b6116_Label> _19713_x);
inline jule::Str _1d6a89ab2_toStr(jule::Ptr<_1c66b35b9_Scope> _19713_x);
inline jule::Str _1d6a9402d_toStr(jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _19713_x);
inline jule::Str _1d6a986b4_toStr(jule::Ptr<_1c666722c_BackendEmitExprModel> _19713_x);
inline jule::Str _1d6a98dac_toStr(jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _19713_x);
inline jule::Str _1d6a9e346_toStr(jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> _19713_x);
inline jule::Str _1d6aa09c9_toStr(jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> _19713_x);
inline jule::Str _1d6aa359d_toStr(jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _19713_x);
inline jule::Str _1d6aa6172_toStr(jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _19713_x);
inline jule::Str _1d6aa8c46_toStr(jule::Ptr<_1c6665d41_BuiltinCopyCallExprModel> _19713_x);
inline jule::Str _1d6aab81a_toStr(jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _19713_x);
inline jule::Str _1d6aace8c_toStr(jule::Ptr<_1c6667529_FreeExprModel> _19713_x);
inline jule::Str _1d6ab9ce0_toStr(jule::Ptr<_1c66b4202_Conditional> _19713_x);
inline jule::Str _1d6ac4cc8_toStr(jule::Ptr<_1c66b44ee_InfIter> _19713_x);
inline jule::Str _1d6acab36_toStr(jule::Ptr<_1c66b49a5_WhileIter> _19713_x);
inline jule::Str _1d6b02751_toStr(jule::Ptr<_1c66b5401_RangeIter> _19713_x);
inline jule::Str _1d6b12464_toStr(jule::Ptr<_1c6648be2_WhileKind> _19713_x);
inline jule::Str _1d6b150e3_toStr(jule::Ptr<_1c66495e9_RangeKind> _19713_x);
inline jule::Str _1d6b3195b_toStr(jule::Ptr<_1c66b5786_ContSt> _19713_x);
inline jule::Str _1d6b3a7bc_toStr(jule::Ptr<_1c66b6776_GotoSt> _19713_x);
inline jule::Str _1d6b71825_toStr(jule::Ptr<_1c663a552_IdentExpr> _19713_x);
inline jule::Str _1d6b8643e_toStr(jule::Ptr<_1c6660379_IndexingExprModel> _19713_x);
inline jule::Str _1d6bd4943_toStr(jule::Ptr<_1c66b7ce9_Match> _19713_x);
inline jule::Str _1d6be8c76_toStr(jule::Ptr<_1c66b901a_FallSt> _19713_x);
inline jule::Str _1d6c14cd6_toStr(jule::Ptr<_1c66b5b60_BreakSt> _19713_x);
inline jule::Str _1d6c1b480_toStr(jule::Ptr<_1c66b93b1_RetSt> _19713_x);
inline jule::Str _1d6c25e07_toStr(jule::Ptr<_1c6644924_ScopeTree> _19713_x);
inline jule::Str _1d6c2ab54_toStr(jule::Ptr<_1c664abd3_Conditional> _19713_x);
inline jule::Str _1d6c2ada7_toStr(jule::Ptr<_1c66483b7_Iter> _19713_x);
inline jule::Str _1d6c2d0eb_toStr(jule::Ptr<_1c6649d9c_ContSt> _19713_x);
inline jule::Str _1d6c312db_toStr(jule::Ptr<_1c6641ed7_LabelSt> _19713_x);
inline jule::Str _1d6c381a0_toStr(jule::Ptr<_1c66423b1_GotoSt> _19713_x);
inline jule::Str _1d6c3a889_toStr(jule::Ptr<_1c664c1e0_MatchCase> _19713_x);
inline jule::Str _1d6c3ab20_toStr(jule::Ptr<_1c66426ad_FallSt> _19713_x);
inline jule::Str _1d6c3e0b8_toStr(jule::Ptr<_1c66499c3_BreakSt> _19713_x);
inline jule::Str _1d6c422a8_toStr(jule::Ptr<_1c6647b47_RetSt> _19713_x);
inline jule::Str _1d6c45498_toStr(jule::Ptr<_1c663960b_UseExpr> _19713_x);
inline jule::Str _1d6ccbce3_toStr(jule::Ptr<_1c666258a_StructSubIdentExprModel> _19713_x);
inline jule::Str _1d6ccc574_toStr(jule::Ptr<_1c665cde3_UnaryExprModel> _19713_x);
inline jule::Str _1d6d16c51_toStr(jule::Ptr<_1c666d4ec_FnIns> _19713_x);
inline jule::Str _1d711e025_toStr(jule::Ptr<_1c663741c_MapTypeDecl> _19713_x);
inline jule::Str _1d71248aa_toStr(jule::Ptr<_1c6636130_TupleTypeDecl> _19713_x);
inline jule::Str _1d7137c86_toStr(jule::Ptr<_1c6636bbe_ArrTypeDecl> _19713_x);
inline jule::Str _1d713e221_toStr(jule::Ptr<_1c6635d33_SlcTypeDecl> _19713_x);
inline jule::Str _1d7145777_toStr(jule::Ptr<_1c663642c_PtrTypeDecl> _19713_x);
inline jule::Str _1d714b87c_toStr(jule::Ptr<_1c663599d_SptrTypeDecl> _19713_x);
inline jule::Str _1d7196eb0_toStr(jule::Ptr<_1c663b1bd_VariadicExpr> _19713_x);
inline jule::Str _1d719cc1e_toStr(jule::Ptr<_1c665edc3_SliceExprModel> _19713_x);
inline jule::Str _1d71b7a91_toStr(jule::Ptr<_1c663d456_FieldExprPair> _19713_x);
inline jule::Str _1d71c15b1_toStr(jule::Ptr<_1c663ea62_KeyValPair> _19713_x);
inline jule::Str _1d722c991_toStr(jule::Ptr<_1c663c961_FnCallExpr> _19713_x);
inline jule::Str _1d726072c_toStr(jule::Ptr<_1c665dab4_AllocStructLitExprModel> _19713_x);
inline jule::Str _1d72750d2_toStr(jule::Ptr<_1c665e147_CastingExprModel> _19713_x);
inline jule::Str _1d728c968_toStr(jule::Ptr<_1c6662931_StructStaticIdentExprModel> _19713_x);
inline jule::Str _1d729011e_toStr(jule::Ptr<_1c663bd4a_SubIdentExpr> _19713_x);
inline jule::Str _1d729bd62_toStr(jule::Ptr<_1c665d7b7_StructLitExprModel> _19713_x);
inline jule::Str _1d72bc4c0_toStr(jule::Ptr<_1c6666d53_RuneExprModel> _19713_x);
inline jule::Str _1d72e038e_toStr(jule::Ptr<_1c665865d_StructIns> _19713_x);
inline jule::Str _1d733018c_toStr(jule::Ptr<_1c67bb8d1_TypeKind> _19713_x);
inline jule::Str _1d73525bb_toStr(jule::Ptr<_1c6662d0a_ArrayExprModel> _19713_x);
inline jule::Str _1d739184c_toStr(jule::Ptr<_1c66352c7_SubIdentTypeDecl> _19713_x);
inline jule::Str _1d7395e5b_toStr(jule::Ptr<_1c663ace4_UnaryExpr> _19713_x);
inline jule::Str _1d73a00db_toStr(jule::Ptr<_1c6634903_TypeDecl> _19713_x);
inline jule::Str _1d73a4b6d_toStr(jule::Ptr<_1c663b971_NsSelectionExpr> _19713_x);
inline jule::Str _1d73ab69c_toStr(jule::Ptr<_1c66356a1_NamespaceTypeDecl> _19713_x);
inline jule::Str _1d73e7144_toStr(jule::Ptr<_1c6661666_SlicingExprModel> _19713_x);
inline jule::Str _1d7464aeb_toStr(jule::Ptr<_1c664028d_SliceExpr> _19713_x);
inline jule::Str _1d74d86ec_toStr(jule::Ptr<_1c6661be9_TraitSubIdentExprModel> _19713_x);
inline jule::Str _1d7584017_toStr(jule::Ptr<_1c66610d3_MapExprModel> _19713_x);
inline jule::Str _1d7594500_toStr(jule::Ptr<_1c6660830_AnonFnExprModel> _19713_x);
inline jule::Str _1d759b5b2_toStr(jule::Ptr<_1c6639001_RangeExpr> _19713_x);
inline jule::Str _1d759b86a_toStr(jule::Ptr<_1c6639bc2_LitExpr> _19713_x);
inline jule::Str _1d75a46ec_toStr(jule::Ptr<_1c663a09b_UnsafeExpr> _19713_x);
inline jule::Str _1d75a6d4d_toStr(jule::Ptr<_1c6640bea_IndexingExpr> _19713_x);
inline jule::Str _1d75a2a19_toStr(jule::Ptr<_1c664135a_SlicingExpr> _19713_x);
inline jule::Str _1d75ad6d4_toStr(jule::Ptr<_1c663b597_CastExpr> _19713_x);
inline jule::Str _1d75b18a2_toStr(jule::Ptr<_1c663dc81_StructLit> _19713_x);
inline jule::Str _1d75b7523_toStr(jule::Ptr<_1c663e237_BraceLit> _19713_x);
inline jule::Str _1d75b8810_toStr(jule::Ptr<_1c663c301_BinaryExpr> _19713_x);
inline jule::Str _1d642ddb3_toStr(jule::Ptr<_1c665ca19_BinaryExprModel> _19713_x);
inline jule::Str _1d78bc9d2_toStr(jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> _19713_x);
inline jule::Str _1d78d3663_toStr(jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _19713_x);
inline jule::Str _1d791c1e6_toStr(jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _19713_x);
inline jule::Str _1d7936ebe_toStr(jule::Ptr<_1c666558d_BuiltinCapCallExprModel> _19713_x);
inline jule::Str _1d7989c47_toStr(jule::Ptr<_1c66668be_SizeofExprModel> _19713_x);
inline jule::Str _1d7993c51_toStr(jule::Ptr<_1c6666aab_AlignofExprModel> _19713_x);
inline jule::Str _1d7e7b744_toStr(jule::Str _19713_x);
inline jule::Str _1d8144ac7_toStr(jule::Ptr<_1c68b7081_ExceptionalForwardingExprModel> _19713_x);
inline jule::Str _1d817baba_toStr(jule::Ptr<_1c68b9979_StrRuneIter> _19713_x);
inline jule::Str _1d818450c_toStr(jule::Ptr<_1c68b866a_MutSlicingExprModel> _19713_x);
inline jule::Str _1d81a95cb_toStr(jule::Ptr<_1c68b95a0_AppendToSliceExprModel> _19713_x);
inline jule::Str _1d81abe08_toStr(jule::Ptr<_1c68b91c6_PushToSliceExprModel> _19713_x);
inline jule::Str _1d81b99d7_toStr(jule::Ptr<_1c68b7416_SwapExprModel> _19713_x);
inline jule::Str _1d820755d_toStr(jule::Ptr<_1c68b77e0_EmptyCompareExprModel> _19713_x);
inline jule::Str _1d820a2db_toStr(jule::Ptr<_1c68b80d7_StrCompExprModel> _19713_x);
inline jule::Str _1d82433ce_toStr(jule::Ptr<_1c68b8967_UnsafeBinaryExprModel> _19713_x);
inline jule::Str _1d82515da_toStr(jule::Ptr<_1c68b9c76_UnsafeDerefExprModel> _19713_x);
inline jule::Str _1d8257e4e_toStr(jule::Ptr<_1c68b7b64_RefExprModel> _19713_x);
inline jule::Str _1d825c4e7_toStr(jule::Ptr<_1c665d421_StructArgExprModel> _19713_x);
inline jule::Str _1d8263cb2_toStr(jule::Ptr<_1c68ba073_UnsafeCastingExprModel> _19713_x);
inline jule::Str _1d8272b28_toStr(jule::Ptr<_1c68b8cec_UnsafeIndexingExprModel> _19713_x);
inline jule::Str _1d88a9726_toStr(jule::Ptr<jule::Str> _19713_x);
inline jule::Str _1d8b5b599_toStr(_20759e353_StrBuilder _19713_x);
inline jule::Str _1d8b67de1_toStr(jule::Slice<jule::U8> _19713_x);
inline jule::Str _1d8b6321b_toStr(jule::Str _19713_x);
inline jule::Str _1d8b6a333_toStr(jule::Str _19713_x);
inline void _2066c5722_rev(jule::Slice<jule::U8> _25012_b);
inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen);
inline void _2066c7bdb_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::U64 _20672d406_hash128to64(_20672d04e_u128 _4316_sum);
inline jule::U64 _20672d714_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _20672d9cd_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _20672dd1e_shiftMix(jule::U64 _5513_z);
inline jule::U64 _20672e160_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _20672e4d4_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _20672e913_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _20672ed97_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n);
inline _20672d04e_u128 _20673024e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _20672d04e_u128 _10342_seed);
inline _20672d04e_u128 _20673089d_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _20672d04e_u128 _206730ccc_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _20672d04e_u128 _20673120b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _20672d04e_u128 _16048_seed);
inline jule::U64 _2067314c5_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _238a23950_metaMatchH2(jule::Array<jule::I8,8>* _5423_m, jule::I8 _5437_h);
inline jule::U64 _238a23c5d_metaMatchEmpty(jule::Array<jule::I8,8>* _5926_m);
inline jule::U32 _238a24027_nextMatch(jule::U64* _6319_b);
inline jule::U64 _238a24368_hasZeroByte(jule::U64 _6916_x);
inline jule::U64 _238a245ee_castU64(jule::Array<jule::I8,8>* _7319_m);
inline jule::I64 _238a248b8_numGroups(jule::I64 _7814_n);
inline jule::Array<jule::I8,8> _238a24ac7_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _238a24ea1_splitHash(jule::U64 _9314_h);
inline jule::U32 _238a2529d_probeStart(jule::U64 _9715_hi, jule::I64 _9723_groups);
inline jule::U32 _238a25622_fastModN(jule::U32 _10213_x, jule::U32 _10221_n);
inline jule::I64 _2075d4e05_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _2075d5a1b_Args(void);
inline jule::Exceptional<jule::Str> _2075d5e7d_WorkingDir(void);
inline jule::Exceptional<jule::Str> _2075d691d_getwd(void);
inline jule::Bool _2086b12dd_IsLetter(jule::I32 _7613_r);
inline jule::Bool _20872682b_is16(jule::Slice<_208724a8d_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _208726ba0_is32(jule::Slice<_2087250bb_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _2087274a8_isExcludingLatin(jule::Ptr<_20872553e_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _2087276ea_IsUpper(jule::I32 _29512_r);
inline jule::I64 _208768032_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _20876865e_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _2087689d3_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _208768cd0_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _208769198_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _20876951c_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _2087699c3_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _208769d14_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _20876a243_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _20876a5b7_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _20876bd9e_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _20876c223_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _20876cb4c_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _20876d2e0_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _20876d664_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _20876e1d1_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _20876e555_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _20876ea3e_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _2087707ba_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _208770b3e_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _208770eb3_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _2075aa1c7_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _2075aa4d5_isSlash(jule::U8 _5312_c);
inline jule::U8 _2075aa79e_toUpper(jule::U8 _5512_c);
inline jule::I64 _2075aad76_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2075ab140_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _2075ab409_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _2075ab7d3_abs(jule::Str _14612_path);
inline jule::Str _2075aba25_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _208773bb9_Clean(jule::Str _10914_path);
inline jule::Str _208774291_FromSlash(jule::Str _21214_path);
inline jule::Str _2087745d2_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _208774868_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _208774b32_Abs(jule::Str _2468_path);
inline jule::Str _208774deb_Base(jule::Str _25213_path);
inline jule::Str _2087752c5_Dir(jule::Str _2838_path);
inline jule::Str _208775517_VolumeName(jule::Str _30115_path);
inline jule::I64 _238ad82ea_getLastFsError(void);
inline jule::Bool _238ade6ca_isConsoleHandle(jule::Uintptr _10220_handle);
inline void _20881e924_appendEscapeArg(_20759e353_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _20881ebdd_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _2088200b7_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _2088210b8_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _2088212d8_getLastProcessError(void);
inline void _208821a25_Exit(jule::I64 _109_code);
inline jule::Str _208821c56_Executable(void);
inline jule::Bool _20806208a_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _208062365_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _20806262e_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _20806eb9c_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _20806eeaa_argToStr(jule::Any _32813_arg);
inline jule::I64 _208070274_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _20807063c_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _20807153e_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _20807295d_IsWindows(jule::Str _3714_os);
inline jule::Bool _208072c6b_IsDarwin(jule::Str _4013_os);
inline jule::Bool _208073035_IsLinux(jule::Str _4312_os);
inline jule::Bool _208073376_IsI386(jule::Str _4611_arch);
inline jule::Bool _20807360c_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _2080738c6_IsArm64(jule::Str _5212_arch);
inline jule::Bool _208073b90_IsUnix(jule::Str _5511_os);
inline jule::Bool _208074069_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _2080742ab_Is64Bit(jule::Str _6112_arch);
inline void _208822e99_init(void);
inline jule::U32 _1dd6ac3e2_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1dd6ac700_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1dd6ac9b9_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1dd6acd0a_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1dd6b036d_Frexp(jule::F64 _4714_f);
inline jule::F64 _1dd6b583a_NaN(void);
inline jule::Bool _1dd6b5b48_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1dd6b5e12_Inf(jule::I64 _618_sign);
inline jule::Bool _1dd6b62ca_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1dd6b6594_normalize(jule::F64 _8214_x);
inline jule::F64 _1dd6b8068_Log(jule::F64 _1118_x);
inline jule::F64 _1dd6b894d_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1dd6c0526_Modf(jule::F64 _449_f);
inline jule::F64 _1dd6c0d2e_Log2(jule::F64 _449_x);
inline jule::Str _1dd6e97c5_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1dd6e9dad_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1dd6ea5b7_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1dd6e85b5_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1dd6eac8d_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1dd6e9242_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1dd6eb1ab_roundShortest(_1dd70be9c_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1dd6e85b5_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1dd6eb750_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1dd6e9242_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1dd6ebc39_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1dd6e9242_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1dd6ec3dd_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1dd6e85b5_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1dd6eca70_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1dd6e85b5_floatInfo* _51232_flt);
inline jule::I64 _1dd6ecde4_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1dd6ed268_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1dd6ede06_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1dd0569e5_ConvError _1dd6ee379_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1dd6ee7a8_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1dd6eec5e_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1dd70091e_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1dd700d92_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1dd702b74_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dd702e82_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dd70324b_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1dd704c97_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1dd7051c6_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1dd0569e5_ConvError _1dd70576a_atofHex(_1dd6e85b5_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd705b44_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd705d86_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd70620a_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1dd70657e_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1dd706e0e_ryuFtoaFixed32(_1dd6e9242_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1dd7073a4_ryuFtoaFixed64(_1dd6e9242_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1dd707be0_formatDecimal(_1dd6e9242_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1dd7081b8_ryuFtoaShortest(_1dd6e9242_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dd6e85b5_floatInfo* _26168_flt);
inline jule::I64 _1dd70844e_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1dd708718_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dd708b47_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dd6e85b5_floatInfo* _3963_flt);
inline void _1dd709296_ryuDigits(_1dd6e9242_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1dd709917_ryuDigits32(_1dd6e9242_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dd709d46_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dd70a275_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1dd70a5e9_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1dd70a8b3_divmod1e9(jule::U64 _60214_x);
inline void _1dd70d7ea_trim(_1dd70be9c_decimal* _27414_a);
inline void _1dd70dad6_rightShift(_1dd70be9c_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1dd70e08c_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1dd70e345_leftShift(_1dd70be9c_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1dd70e6b9_shouldRoundUp(_1dd70be9c_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1dd710e4b_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1dd711314_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1dd7115cd_Itoa(jule::I64 _819_i);
inline jule::Str _1dd71191e_small(jule::I64 _8610_i);
inline jule::Bool _1dd711ba5_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1dd712249_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1dd713987_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1dd713c51_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1dd714092_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1dd714328_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1dd7145e2_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1dd7151e7_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1dd7154b1_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1dd71577a_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1dd715a44_BitsizeOfUint(jule::U64 _19718_x);
inline void _1dd715bdc_UpdateTarget(void);
inline void _1dd715d63_init(void);
inline jule::I64 _1dd7199c1_MinI(jule::Str _6113_k);
inline jule::I64 _1dd719cce_MaxI(jule::Str _7913_k);
inline jule::U64 _1dd71a098_MaxU(jule::Str _9713_k);
inline jule::F64 _1dd71a3d9_Min(jule::Str _11512_k);
inline jule::F64 _1dd71a670_Max(jule::Str _13312_k);
inline jule::Bool _1dd71d695_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1dd71d9a3_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1dd71dc6c_IsInt(jule::Str _4610_k);
inline jule::Bool _1dd71e0ad_IsFloat(jule::Str _5112_k);
inline jule::Bool _1dd71e344_IsNum(jule::Str _5610_k);
inline jule::Bool _1dd71e60d_IsSigNum(jule::Str _6113_k);
inline void _1dd72886a_lshiftUnsig(_1dd71e850_Const* _59021_c, _1dd71e850_Const* _59032_x);
inline void _1dd728b9a_rshiftUnsig(_1dd71e850_Const* _59621_c, _1dd71e850_Const* _59632_x);
inline jule::Bool _1c661ea64_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1c661ed72_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1c662047c_IsStr(jule::Str _36410_k);
inline jule::Bool _1c6620713_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1c66209cc_IsRune(jule::Str _37111_k);
inline jule::Bool _1c66213b2_IsFloat(jule::Str _38012_k);
inline jule::Bool _1c662167b_IsNum(jule::Str _38810_k);
inline jule::Bool _1c6621c0e_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1c6621ec8_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1c662255b_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1c6622a56_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1c6622ec9_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1c6623293_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1c662355c_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1c6623826_IsHex(jule::U8 _45810_b);
inline jule::Bool _1c6623ae0_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1c6623da9_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1c6624173_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1c6624aad_File> _1c6625e88_NewFileSet(jule::Str _5715_path);
inline _20806e73a_Log _1c66279b2_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c6624aad_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1c6627d7a_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1c66281ee_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1c66285b7_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1c662893b_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1c6628cb0_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1c6629134_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1c66295b8_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1c662980a_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1c6629ac4_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1c6629e48_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1c662a2bc_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1c662a641_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1c662a9b5_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1c662ad39_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1c662b334_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1c662b510_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1c662b862_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1c662bb2b_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1c662bde5_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1c662c1ae_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1c662c478_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_20806e73a_Log> _1c663246c_Lex(jule::Ptr<_1c6624aad_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1c670296b_FindModuleFile(jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>* _1320_dirents);
inline jule::Str _1c6702c24_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_20806e73a_Log> _1c6702edd_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1c670383a_IsPub(jule::Str _910_ident);
inline jule::Bool _1c674c774_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1c676c70b_ToRune(jule::Str _2015_lit);
inline jule::Str _1c676c91a_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1c676cc5b_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1c676cee2_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1c676d366_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1c676d70c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _1c689bbc0_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i);
inline jule::Slice<jule::U8> _1c689c088_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1c689c374_FmtByDefault(_20759e353_StrBuilder* _4822_buf, jule::Any* _4840_arg);
inline void _1c689c792_applyFmtByDefault(_20759e353_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args);
inline void _1c689cbb0_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _20759e353_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args);
inline jule::Slice<jule::U8> _1c689d034_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1c68a0058_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1c666a51b_Fn> _1c6224746_runtimeFindFn(jule::Ptr<_1c66d63cd_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1c6655803_Struct> _1c6224c96_runtimeFindStruct(jule::Ptr<_1c66d63cd_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1c66707c9_parameterUsesGenerics(jule::Ptr<_1c666c474_ParamIns>* _39431_p, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _39446_generics);
inline jule::Ptr<_1c67c40e2_TypeSymbol> _1c6673007_buildType(jule::Ptr<_1c6634903_TypeDecl> _9418_t);
inline jule::Ptr<_1c6789ccd_Value> _1c6673315_buildExpr(jule::Ptr<_1c6638c37_Expr> _10318_expr);
inline jule::Ptr<_1c67baade_TypeAlias> _1c66735ce_buildTypeAlias(jule::Ptr<_1c664b420_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1c66528cc_Field> _1c6673920_buildField(jule::Ptr<_1c664ecc5_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1c66528cc_Field>> _1c6673ba6_buildFields(jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1c6655803_Struct> _1c6673e70_buildStruct(jule::Ptr<_1c66506bb_StructDecl> _14220_decl);
inline jule::Ptr<_1c6668a47_Param> _1c6674239_buildParam(jule::Ptr<_1c6645161_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1c6668a47_Param>> _1c6674613_buildParams(jule::Slice<jule::Ptr<_1c6645161_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1c666832c_RetType> _1c6674855_buildRetType(jule::Ptr<_1c66377e6_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1c666a51b_Fn> _1c6674b1e_buildFunc(jule::Ptr<_1c66465b3_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1c666a51b_Fn>> _1c6674dd8_buildMethods(jule::Slice<jule::Ptr<_1c66465b3_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>> _1c66751a2_buildTraitInherits(jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1c667de9c_Trait> _1c667546b_buildTrait(jule::Ptr<_1c6650e08_TraitDecl> _21719_decl);
inline jule::Ptr<_1c6680b3b_EnumItem> _1c6675735_buildEnumItem(jule::Ptr<_1c664ceb0_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _1c66759ee_buildEnumItems(jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1c66816a8_Enum> _1c6675ee9_buildEnum(jule::Ptr<_1c664da71_EnumDecl> _24318_decl);
inline jule::Ptr<_1c66827db_TypeEnumItem> _1c66761c5_buildTypeEnumItem(jule::Ptr<_1c664e39b_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _1c667646c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c6676736_buildTypeEnum(jule::Ptr<_1c664ea0b_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1c672acb3_Var> _1c6676a00_buildVar(jule::Ptr<_1c664776d_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1c672acb3_Var>> _1c6676cb9_buildVars(jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _29518_decls);
inline jule::Ptr<_1c66adce0_Impl> _1c6677083_buildImpl(jule::Ptr<_1c6651568_Impl> _30318_decl);
inline jule::Bool _1c667d496_isImplicitImport(jule::Ptr<_1c66d63cd_ImportInfo> _78821_imp);
inline jule::Ptr<_1c6788b56_Data> _1c66a93c3_buildAsComptimeMethodData(jule::Ptr<_1c666d4ec_FnIns>* _203035_f);
inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66a95d2_findComptimePackage(jule::Ptr<_1c670684e_sema>* _203829_s);
inline jule::Ptr<_1c6788b56_Data> _1c66a9956_buildComptimeTypeInfoData(jule::Ptr<_1c670684e_sema>* _204435_s, jule::Ptr<_1c67bb8d1_TypeKind>* _204450_t);
inline jule::Ptr<_1c6788b56_Data> _1c66a9c97_buildComptimeValue(jule::Ptr<_1c6788b56_Data>* _205228_d);
inline jule::Str _1c66acc89_toStrConstraints(jule::Ptr<_1c67b9eea_InsGeneric> _14321_g);
inline jule::Bool _1c66ad152_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1c67bb8d1_TypeKind>* _15434_g);
inline jule::Bool _1c66ad41b_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1c66ba857_scopeChecker> _1c66b1023_newScopeCheckerBase(jule::Ptr<_1c670684e_sema>* _5829_s, jule::Ptr<_1c666d4ec_FnIns> _5843_owner);
inline jule::Ptr<_1c66ba857_scopeChecker> _1c66b13db_newScopeChecker(jule::Ptr<_1c670684e_sema>* _6625_s, jule::Ptr<_1c666d4ec_FnIns> _6639_owner);
inline jule::Ptr<_1c66b9867_scopeLabel> _1c66b1760_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c66ba857_scopeChecker> _7637_scope);
inline jule::Slice<jule::Ptr<_1c6788b56_Data>> _1c66b1aa1_getDatasFromTupleData(jule::Ptr<_1c6788b56_Data>* _8831_d);
inline jule::Bool _1c66b2321_checkMut(jule::Ptr<_1c670684e_sema>* _12318_s, jule::Ptr<_1c6788b56_Data>* _12329_left, jule::Ptr<_1c6788b56_Data> _12346_right, jule::Ptr<_1c661e327_Token> _12360_op);
inline jule::Bool _1c66b280a_checkAssign(jule::Ptr<_1c670684e_sema>* _14221_s, jule::Ptr<_1c6788b56_Data>* _14236_left, jule::Ptr<_1c6788b56_Data> _14253_right, jule::Ptr<_1c661e327_Token> _14267_op);
inline jule::Bool _1c66b2bd4_isValidAstStForNextSt(jule::Any* _16431_n);
inline jule::Bool _1c66b2e26_isValidStForNextSt(jule::Any* _17524_st);
inline jule::U64 _1c66cd0a6_removeEqFromOp(jule::U64 _216719_op);
inline void _1c66cd2d7_makeComptimeRange(jule::Ptr<_1c6788b56_Data>* _219627_d);
inline jule::Bool _1c66cd5a1_canComptimeMatch(jule::Ptr<_1c6788b56_Data>* _221926_d);
inline jule::Bool _1c66cd86a_stmtIsDef(jule::Any* _222715_stmt);
inline jule::I64 _1c66cdbde_countMatchType(jule::Ptr<_1c66b7ce9_Match>* _223920_m, jule::Ptr<_1c67bb8d1_TypeKind>* _223932_t);
inline jule::Ptr<_1c678348b_SymbolTable> _1c66d3485_findVarFileInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _4430_files, jule::Ptr<_1c672acb3_Var>* _4454_v);
inline jule::Ptr<_1c672acb3_Var> _1c66d3908_findVarInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded);
inline jule::Ptr<_1c67baade_TypeAlias> _1c66d3d37_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded);
inline jule::Ptr<_1c6655803_Struct> _1c66d42dd_findStructInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded);
inline jule::Ptr<_1c666a51b_Fn> _1c66d46d9_findFnInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded);
inline jule::Ptr<_1c667de9c_Trait> _1c66d4a5d_findTraitInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _10328_files, jule::Str* _10352_ident);
inline jule::Ptr<_1c66816a8_Enum> _1c66d4dd2_findEnumInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _11527_files, jule::Str* _11551_ident);
inline jule::Ptr<_1c6682db3_TypeEnum> _1c66d5366_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _12731_files, jule::Str* _12755_ident);
inline jule::Any _1c66d571d_defByIdentPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded);
inline jule::Bool _1c66db7ce_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p);
inline jule::Bool _1c6703e12_isValidModelForRef(jule::Any* _1328_m);
inline _20806e73a_Log _1c67043b8_compilerErr(jule::Ptr<_1c661e327_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args);
inline jule::Bool _1c670473c_impIsLookupable(jule::Ptr<_1c66d63cd_ImportInfo>* _6121_i, jule::Str* _6138_ident);
inline void _1c6704a6c_appendRetVars(jule::Slice<jule::Ptr<_1c672acb3_Var>>* _7323_dest, jule::Ptr<_1c666d4ec_FnIns>* _7342_f);
inline void _1c6704d58_appendParamVars(jule::Slice<jule::Ptr<_1c672acb3_Var>>* _10325_dest, jule::Ptr<_1c666d4ec_FnIns>* _10344_f);
inline void _1c6705144_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _16334_dest, jule::Ptr<_1c666d4ec_FnIns>* _16359_f);
inline jule::Ptr<_1c678348b_SymbolTable> _1c67054b8_findFile(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _20418_files, jule::Ptr<_1c6624aad_File>* _20442_handler);
inline void _1c670596e_pushSuggestion(_20806e73a_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args);
inline void _1c6729047_pushImplemented(jule::Ptr<_1c667de9c_Trait> _300524_t, jule::Ptr<_1c6655803_Struct>* _300540_d);
inline void _1c6729333_pushImplements(jule::Ptr<_1c6655803_Struct>* _302324_s, jule::Ptr<_1c667de9c_Trait> _302340_t);
inline void _1c6729784_pushRuntimeToStr(jule::Ptr<_1c670684e_sema>* _304126_s, jule::Ptr<_1c67bb8d1_TypeKind>* _304141_t, jule::Ptr<_1c661e327_Token>* _304160_token, jule::Ptr<_1c6671687_ReferenceStack> _30426_refers);
inline jule::Bool _1c676deb0_traitHasReferenceReceiver(jule::Ptr<_1c667de9c_Trait>* _2831_t);
inline jule::Bool _1c676e345_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1c6788b56_Data>* _4333_d);
inline jule::Bool _1c676e6b9_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1c6788b56_Data>* _4830_d);
inline jule::Bool _1c676ea82_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1c6788b56_Data>* _7132_d);
inline jule::Bool _1c676ee06_intAssignable(jule::Str _10018_kind, jule::Ptr<_1c6788b56_Data>* _10030_d);
inline void _1c677b3eb_checkMutRiskOfStructLit(jule::Ptr<_1c670684e_sema>* _92133_s, jule::Ptr<_1c665d7b7_StructLitExprModel>* _92144_m);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c6782237_lenKind(void);
inline jule::Bool _1c6782589_isGoodValueToInfer(jule::Ptr<_1c6788b56_Data>* _142624_d);
inline jule::Ptr<_1c6633d20_Directive> _1c67b3158_findDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _440323_directives, jule::Str _440354_d);
inline jule::Any _1c67b3521_findBuiltinsImport(jule::Str* _441224_ident, jule::Ptr<_1c66d63cd_ImportInfo> _441236_imp);
inline void _1c67b3752_fitBitsize(jule::Ptr<_1c6788b56_Data>* _442120_d);
inline void _1c67b3a82_makeStructLitAlloc(jule::Ptr<_1c6788b56_Data>* _445028_d, jule::Ptr<_1c665d7b7_StructLitExprModel>* _445043_lit);
inline jule::Ptr<_1c672acb3_Var> _1c67b3e06_buildErrorVar(jule::Ptr<_1c66b35b9_Scope>* _446123_s, jule::Ptr<_1c663c961_FnCallExpr>* _446139_fc);
inline jule::Any _1c67b427a_findBuiltinsSema(jule::Str* _447622_ident, jule::Ptr<_1c670684e_sema> _447638_s);
inline jule::Bool _1c67b4544_isOkForShifting(jule::Ptr<_1c6788b56_Data>* _450125_d);
inline jule::Bool _1c67b491d_isInstancedStruct(jule::Ptr<_1c665865d_StructIns> _451822_s);
inline jule::Bool _1c67b4c1a_isPtrArithmeticCompatible(jule::Ptr<_1c6788b56_Data>* _452235_l, jule::Ptr<_1c6788b56_Data>* _452250_r);
inline void _1c67b5226_applyRuntimeToStr(jule::Ptr<_1c670684e_sema>* _454327_s, jule::Ptr<_1c67bb8d1_TypeKind>* _454342_from, jule::Ptr<_1c67bb8d1_TypeKind>* _454364_to, jule::Ptr<_1c661e327_Token>* _45447_token, jule::Ptr<_1c6671687_ReferenceStack> _454426_refers);
inline void _1c67b5732_applyCastKindModel(jule::Ptr<_1c670684e_sema>* _455828_s, jule::Ptr<_1c6788b56_Data>* _455843_d, jule::Ptr<_1c67bb8d1_TypeKind>* _455858_t, jule::Ptr<_1c661e327_Token>* _45597_token, jule::Ptr<_1c6671687_ReferenceStack> _455926_refers);
inline void _1c67b5c3d_applyCastKind(jule::Ptr<_1c670684e_sema>* _456923_s, jule::Ptr<_1c6788b56_Data>* _456938_d, jule::Ptr<_1c67bb8d1_TypeKind>* _456953_t, jule::Ptr<_1c661e327_Token>* _45707_token, jule::Ptr<_1c6671687_ReferenceStack> _457026_refers);
inline jule::Ptr<_1c6788b56_Data> _1c67b5e4c_buildVoidData(void);
inline jule::Str _1c67b6436_checkDataForIntegerIndexing(jule::Ptr<_1c670684e_sema>* _458137_s, jule::Ptr<_1c6788b56_Data>* _458152_d, jule::Ptr<_1c661e327_Token>* _45827_token, jule::Ptr<_1c6671687_ReferenceStack> _458226_refers);
inline void _1c67b6942_applyCastModelByEnum(jule::Ptr<_1c670684e_sema>* _460730_s, jule::Ptr<_1c6788b56_Data>* _460745_d, jule::Ptr<_1c66816a8_Enum> _460759_e, jule::Ptr<_1c661e327_Token>* _46087_token, jule::Ptr<_1c6671687_ReferenceStack> _460826_refers);
inline void _1c67b6e5e_castConstByType(jule::Str* _461521_t, jule::Ptr<_1c6788b56_Data>* _461534_d);
inline void _1c67b713a_updateModelToGenericIns(jule::Any* _464933_m, jule::Ptr<_1c666d4ec_FnIns>* _464952_f);
inline jule::Bool _1c67b74ae_pushSubIdentFromExpr(jule::Any _466029_expr, jule::Ptr<_1c66352c7_SubIdentTypeDecl>* _466050_t);
inline jule::Str _1c67b7778_constoa(jule::Ptr<_1dd71e850_Const>* _468313_c);
inline jule::Ptr<_1c6788b56_Data> _1c67b7d1c_evalEnumStatic(jule::Ptr<_1c670684e_sema>* _469424_s, jule::Ptr<_1c66816a8_Enum>* _469439_enm, jule::Ptr<_1c6680b3b_EnumItem>* _469456_item, jule::Ptr<_1c661e327_Token>* _46957_token, jule::Ptr<_1c6671687_ReferenceStack> _469526_refers);
inline jule::Ptr<_1c665d7b7_StructLitExprModel> _1c67b80d6_isLitBased(jule::Any* _471220_m);
inline void _1c67b83c2_makeImplicitDeref(jule::Ptr<_1c6788b56_Data>* _472927_d, jule::Ptr<_1c661e327_Token> _472941_baseToken);
inline void _1d73b9b0b_updateRefer(jule::Ptr<_1c6671687_ReferenceStack> _474023_ref, jule::Ptr<_1c666d4ec_FnIns>* _474046_old, jule::Ptr<_1c666d4ec_FnIns>* _474059_new);
inline void _1c67b8a54_makeVariadic(jule::Ptr<_1c6788b56_Data>* _474822_d, jule::Ptr<_1c67bb8d1_TypeKind> _474836_elem);
inline jule::Bool _1c67b8e83_isVarCaptured(jule::Ptr<_1c66ba857_scopeChecker> _476218_r, jule::Ptr<_1c66ba857_scopeChecker> _476240_s, jule::Ptr<_1c672acb3_Var> _476258_v);
inline jule::Bool _1c67d7a84_kindUsesGenerics(jule::Ptr<_1c67bb8d1_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _175741_generics);
inline jule::Bool _1c67d7e4c_hasDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _176722_directives, jule::Str _176753_tag);
inline jule::Bool _1c67d8216_canGetPtr(jule::Ptr<_1c6788b56_Data>* _177619_d);
inline jule::Bool _1c67d8557_isValidForSptrType(jule::Ptr<_1c67bb8d1_TypeKind>* _178828_t);
inline jule::Bool _1c67d87dd_isValidForRef(jule::Ptr<_1c67bb8d1_TypeKind>* _179723_t);
inline jule::Bool _1c67d8aa7_isBuiltinStrConvertable(jule::Ptr<_1c67bb8d1_TypeKind>* _180033_t);
inline jule::Str _1c67d8d71_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _180427_tokens);
inline jule::Ptr<_1c67c49e9_Prim> _1c67d924a_buildPrimType(jule::Str _182318_kind);
inline void _1c67d9998_applyImplicitCast(jule::Ptr<_1c670684e_sema>* _185127_s, jule::Ptr<_1c67bb8d1_TypeKind>* _185142_dest, jule::Ptr<_1c6788b56_Data>* _185164_d, jule::Ptr<_1c661e327_Token>* _18527_token, jule::Ptr<_1c6671687_ReferenceStack> _185226_refers);
inline jule::Bool _1c67d9c62_validTypeForXof(jule::Ptr<_1c67bb8d1_TypeKind>* _188025_t);
inline __jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log _1c67dcd75_buildSymbols(jule::Ptr<_1c6632945_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1c6677649_symbolBuilder> _1662_owner);
inline void _1c67dd1a5_collectImplicitImports(jule::Ptr<_1c670684e_sema>* _3132_s, jule::Ptr<_1c678348b_SymbolTable>* _3147_file);
inline __jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log _1c67dd5d4_analyzePackage(jule::Slice<jule::Ptr<_1c6632945_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log _1c67dda8a_AnalyzePackage(jule::Slice<jule::Ptr<_1c6632945_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags);
inline jule::Ptr<_1c666d4ec_FnIns> _1c68a09e8_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1c67baade_TypeAlias> _1c68a0d06_primTypeAlias(jule::Ptr<_1c67bb8d1_TypeKind>* _6623_k);
inline jule::Ptr<_1c672acb3_Var> _1c68a46ab_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1c67baade_TypeAlias> _1c68a49ec_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1c68a4c83_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1c68a504c_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1c68a5316_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1c68a56e0_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1c68a5932_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1c68a5ca6_findPackageBuiltinDef(jule::Str* _28227_linkPath, jule::Str* _28243_ident);
inline jule::Ptr<_1c6788b56_Data> _1c68a612a_builtinCallerError(jule::Ptr<_1c678a87d_eval>* _29728_e, jule::Ptr<_1c663c961_FnCallExpr>* _29743_fc);
inline jule::Ptr<_1c6788b56_Data> _1c68a6559_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _32826_e, jule::Ptr<_1c663c961_FnCallExpr>* _32841_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68a6988_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _35528_e, jule::Ptr<_1c663c961_FnCallExpr>* _35543_fc, jule::Ptr<_1c6788b56_Data>* _35565_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a6db7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _36726_e, jule::Ptr<_1c663c961_FnCallExpr>* _36741_fc, jule::Ptr<_1c6788b56_Data>* _36763_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a72e6_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _42928_e, jule::Ptr<_1c663c961_FnCallExpr>* _42943_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68a7956_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _45527_e, jule::Ptr<_1c663c961_FnCallExpr>* _45542_fc, jule::Ptr<_1c6788b56_Data>* _45564_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a7c75_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _50629_e, jule::Ptr<_1c663c961_FnCallExpr>* _50644_fc, jule::Ptr<_1c6788b56_Data>* _50666_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a825e_callerCopySlice(jule::Ptr<_1c6788b56_Data>* _61725_dest, jule::Ptr<_1c678a87d_eval>* _61743_e, jule::Ptr<_1c663c961_FnCallExpr>* _61758_fc, jule::Ptr<_1c6788b56_Data>* _61780_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a868d_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _65127_e, jule::Ptr<_1c663c961_FnCallExpr>* _65142_fc, jule::Ptr<_1c6788b56_Data>* _65164_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a8a12_callerLenSlice(jule::Ptr<_1c6788b56_Data>* _67624_expr, jule::Ptr<_1c6788b56_Data>* _67642_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a8d86_callerLenMap(jule::Ptr<_1c6788b56_Data>* _68422_expr, jule::Ptr<_1c6788b56_Data>* _68440_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a920a_callerLenArr(jule::Ptr<_1c6788b56_Data>* _69222_expr, jule::Ptr<_1c6788b56_Data>* _69240_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a957e_callerLenStr(jule::Ptr<_1c6788b56_Data>* _69922_expr, jule::Ptr<_1c6788b56_Data>* _69940_d);
inline jule::Ptr<_1c6788b56_Data> _1c68a9903_callerLenComptime(jule::Ptr<_1c6788b56_Data>* _71227_d, jule::I64 _71237_n);
inline jule::Ptr<_1c6788b56_Data> _1c68a9d32_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _71926_e, jule::Ptr<_1c663c961_FnCallExpr>* _71941_fc, jule::Ptr<_1c6788b56_Data>* _71963_d);
inline jule::Ptr<_1c6788b56_Data> _1c68aa1a6_callerCapSlice(jule::Ptr<_1c6788b56_Data>* _75924_expr, jule::Ptr<_1c6788b56_Data>* _75942_d);
inline jule::Ptr<_1c6788b56_Data> _1c68aa5d5_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _76726_e, jule::Ptr<_1c663c961_FnCallExpr>* _76741_fc, jule::Ptr<_1c6788b56_Data>* _76763_d);
inline jule::Ptr<_1c6788b56_Data> _1c68aaabe_callerDeleteMap(jule::Ptr<_1c678a87d_eval>* _79025_e, jule::Ptr<_1c663c961_FnCallExpr>* _79040_fc, jule::Ptr<_1c6788b56_Data>* _79062_expr, jule::Ptr<_1c6788b56_Data>* _79080_d);
inline jule::Ptr<_1c6788b56_Data> _1c68aaeed_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _81929_e, jule::Ptr<_1c663c961_FnCallExpr>* _81944_fc, jule::Ptr<_1c6788b56_Data>* _81966_d);
inline jule::Ptr<_1c6788b56_Data> _1c68ab42c_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _84229_e, jule::Ptr<_1c663c961_FnCallExpr>* _84244_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ab85b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _88640_e, jule::Ptr<_1c663c961_FnCallExpr>* _88655_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68abecc_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _92241_e, jule::Ptr<_1c663c961_FnCallExpr>* _92256_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ac40b_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _94238_e, jule::Ptr<_1c663c961_FnCallExpr>* _94253_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ac83a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _95438_e, jule::Ptr<_1c663c961_FnCallExpr>* _95453_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68acc69_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _96739_e, jule::Ptr<_1c663c961_FnCallExpr>* _96754_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ad198_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98043_e, jule::Ptr<_1c663c961_FnCallExpr>* _98058_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ad5c7_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _104035_e, jule::Ptr<_1c663c961_FnCallExpr>* _104050_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ada06_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _106536_e, jule::Ptr<_1c663c961_FnCallExpr>* _106551_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ade35_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _109033_e, jule::Ptr<_1c663c961_FnCallExpr>* _109048_fc, jule::Ptr<_1c6788b56_Data>* );
inline jule::Ptr<_1c6788b56_Data> _1c68ae364_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _111344_e, jule::Ptr<_1c663c961_FnCallExpr>* _111359_fc, jule::Ptr<_1c6788b56_Data>* _111381_d);
inline jule::Ptr<_1c6788b56_Data> _1c68ae793_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _116434_e, jule::Ptr<_1c663c961_FnCallExpr>* _116449_fc, jule::Ptr<_1c6788b56_Data>* _116471_d);
inline jule::Ptr<_1c6788b56_Data> _1c68aebc2_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _117336_e, jule::Ptr<_1c663c961_FnCallExpr>* _117351_fc, jule::Ptr<_1c6788b56_Data>* _117373_d);
inline jule::Ptr<_1c6c9de3a_FileInfo> _1c6ca1c0c_ParseFile(jule::Ptr<_1c6624aad_File> _2318_f);
inline __jule_tuple_x_1c6632945_AST__jule_tuple_s_20806e73a_Log _1c737a78b_parseFileset(jule::Ptr<_1c6624aad_File> _5521_f);
inline jule::Ptr<_1c6644924_ScopeTree> _1c737b25e_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1c737b5b1_isSt(jule::Ptr<_1c661e327_Token> _499_current, jule::Ptr<_1c661e327_Token> _4926_prev);
inline jule::Bool _1c737b935_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c661e327_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1c737bced_nextStPos(jule::Slice<jule::Ptr<_1c661e327_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1c661e327_Token__jule_tuple_bool _1c737c172_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c661e327_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _1c737c859_splitStmts(jule::Slice<jule::Ptr<_1c661e327_Token>>* _15120_tokens);
inline jule::Bool _1c7395eb0_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1c73962bd_isTypeRange(jule::Slice<jule::Ptr<_1c661e327_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c7396587_getBlockExpr(jule::Slice<jule::Ptr<_1c661e327_Token>>* _93322_tokens);
inline __jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token _1c7396950_splitDelim(jule::Slice<jule::Ptr<_1c661e327_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1c7396c19_findLowestPrecOp(jule::Slice<jule::Ptr<_1c661e327_Token>>* _100422_tokens);
inline jule::Ptr<_1c663a552_IdentExpr> _1c7396ed3_buildIdentExpr(jule::Ptr<_1c661e327_Token>* _106924_token);
inline __jule_tuple_sx_1c661e327_Token__jule_tuple_int _1c739729c_getRangeExprTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _107728_tokens);
inline jule::Bool _1c7397676_isAnonFnHead(jule::Slice<jule::Ptr<_1c661e327_Token>>* _110018_tokens);
inline jule::Bool _1c739837a_checkAssignTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _1623_tokens);
inline _20806e73a_Log _1c7399546_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c6624aad_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c7399a74_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c661e327_Token>>* _6959_tokens);
inline __jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token _1c7399d3d_rangeLast(jule::Slice<jule::Ptr<_1c661e327_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log _1c739a2e4_parts(jule::Slice<jule::Ptr<_1c661e327_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1c739a57a_getCloseOfBrace(jule::U64 _16720_left);
inline _20806e73a_Log _1c739a9a9_compilerErr(jule::Ptr<_1c661e327_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1c739ad50_pushSuggestion(_20806e73a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1c6634903_TypeDecl> _1c73acc63_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1c6a6a5db_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1c6a6a72e_checkArch(jule::Str _2814_arg);
inline jule::Bool _1c6a6a8c7_isPassFileAnnotation(jule::Str _5029_p);
inline void _1c6a8633d_setOsVars(jule::Slice<jule::Str>* _3919_vars);
inline void _1c6a865b3_setArchVars(jule::Slice<jule::Str>* _4721_vars);
inline void _1c6a8689e_initVars(jule::Slice<jule::Str>* _5818_vars, _1c6a8601e_CompileInfo* _5832_info);
inline jule::Slice<jule::U8> _1c73b1be0_readBuff(jule::Str _3013_path);
inline _20806e73a_Log _1c73b1eed_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1c666a51b_Fn> _1c68bd1b9_RuntimeFindFn(jule::Ptr<_1c66d63cd_ImportInfo>* _1223_runtime, jule::Str _1245_ident);
inline jule::Ptr<_1c6655803_Struct> _1c69d21bd_RuntimeFindStruct(jule::Ptr<_1c66d63cd_ImportInfo>* _2727_runtime, jule::Str _2749_ident);
inline void _1c73b672d_pushPasses(jule::Ptr<_1c66d9304_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes);
inline jule::Slice<jule::Str> _1c73b6ae6_getAllUniquePasses(jule::Ptr<_1c66d9304_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _13953_uses);
inline _1c6a8601e_CompileInfo _1c73b6d05_buildCompileInfo(void);
inline void _1c73b70ad_pushRuntimeToAST(jule::Ptr<_1c6632945_AST>* _17926_f);
inline void _1c73b770c_IterPackages(jule::Ptr<_1c73b4d7a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1c66d9304_Package>*> _731_f);
inline void _1c73b7a3c_IterFiles(jule::Ptr<_1c66d9304_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1c678348b_SymbolTable>*> _1634_f);
inline void _1c73b7dd3_iterTraitInheritMethods(jule::Ptr<_1c667de9c_Trait>* _2233_base, jule::Ptr<_1c667de9c_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _2263_f);
inline void _1c73b8301_iterTraitInheritMethods1(jule::Ptr<_1c667de9c_Trait>* _3134_base, jule::Ptr<_1c667de9c_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _3164_f);
inline void _1c73b85a9_IterTraitMethods(jule::Ptr<_1c667de9c_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _3937_f);
inline jule::Bool _1c73ba842_IsForwarded(jule::Ptr<_1c66b35b9_Scope>* _2417_s);
inline jule::Bool _1c73bab50_IsExprComesFromBind(jule::Ptr<_1c6788b56_Data>* _4025_d);
inline jule::Bool _1c73bae19_IsAny(jule::Ptr<_1c67bb8d1_TypeKind>* _5215_t);
inline jule::Bool _1c73bb25a_IsClosure(jule::Ptr<_1c6660830_AnonFnExprModel>* _6115_m);
inline jule::Bool _1c73bb4e1_IsOpMethod(jule::Ptr<_1c666a51b_Fn>* _6416_m);
inline jule::Bool _1c73bb865_IsTraitMethod(jule::Ptr<_1c665865d_StructIns>* _8023_owner, jule::Ptr<_1c666d4ec_FnIns>* _8043_f);
inline jule::Bool _1c73bbbd9_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p);
inline jule::Ptr<_1c6633d20_Directive> _1c73bcbda_FindDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1c73bd0a3_HasDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1c73bd427_ContainsTraitMethod(jule::Ptr<_1c667de9c_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1c73bdadc_FindTraitTypeOffsetS(jule::Ptr<_1c667de9c_Trait> _3925_t, jule::Ptr<_1c665865d_StructIns> _3940_s);
inline jule::I64 _1c73bde61_FindTraitTypeOffset(jule::Ptr<_1c667de9c_Trait> _6224_t, jule::Ptr<_1c67bb8d1_TypeKind> _6239_k);
inline jule::Ptr<_1c666d4ec_FnIns> _1c73be390_FindOperator(jule::Ptr<_1c665865d_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1c666d4ec_FnIns> _1c73be714_FindFnGenericInstance(jule::Ptr<_1c666a51b_Fn>* _14731_f, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _14739_generics);
inline jule::Ptr<_1c665865d_StructIns> _1c73beb98_FindStructGenericInstance(jule::Ptr<_1c6655803_Struct>* _16335_s, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _16347_generics);
inline jule::Bool _1d7e9e9cb_isOrdered(jule::Ptr<_1c672acb3_Var>* _1418_t, jule::Slice<jule::Ptr<_1c672acb3_Var>> _1425_s);
inline jule::Bool _1d7ea574b_isOrdered(jule::Ptr<_1c6655803_Struct>* _1418_t, jule::Slice<jule::Ptr<_1c6655803_Struct>> _1425_s);
inline void _1d7e9c105_order(jule::Slice<jule::Ptr<_1c672acb3_Var>> _3717_s);
inline void _1d7e9cbd8_order(jule::Slice<jule::Ptr<_1c6655803_Struct>> _3717_s);
inline void _1c750d49b_EliminateDefines(jule::Ptr<_1c73b4d7a_IR>* _40226_ir);
inline void _1c7512417_eliminateDeadCodeOfScope(jule::Ptr<_1c66b35b9_Scope> _23833_s);
inline void _1c751268c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _25033_funcs);
inline void _1c75128bd_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1c6655803_Struct>>* _25937_structs);
inline void _1c7512b76_eliminateFunctionsScopePackage(jule::Ptr<_1c66d9304_Package>* _26740_pkg);
inline void _1c7512d74_eliminateScopePackage(jule::Ptr<_1c66d9304_Package>* _27431_pkg);
inline void _1c75130a5_EliminateScopes(jule::Ptr<_1c73b4d7a_IR>* _27925_ir);
inline jule::Uintptr _1c68aee7a_typeData(jule::Any* _1714_m);
inline jule::Bool _1c68b0343_equalConst(jule::Ptr<_1dd71e850_Const> _2115_l, jule::Ptr<_1dd71e850_Const> _2126_r);
inline jule::Bool _1c68b06b7_equalCasting(jule::Ptr<_1c665e147_CastingExprModel> _4017_l, jule::Ptr<_1c665e147_CastingExprModel> _4039_r);
inline jule::Bool _1c68b0a80_equalUnary(jule::Ptr<_1c665cde3_UnaryExprModel> _4715_l, jule::Ptr<_1c665cde3_UnaryExprModel> _4735_r);
inline jule::Bool _1c68b0e04_equalIndexing(jule::Ptr<_1c6660379_IndexingExprModel> _5418_l, jule::Ptr<_1c6660379_IndexingExprModel> _5441_r);
inline jule::Bool _1c68b1278_equalBinary(jule::Ptr<_1c665ca19_BinaryExprModel> _5916_l, jule::Ptr<_1c665ca19_BinaryExprModel> _5937_r);
inline jule::Bool _1c68b6459_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1c68bc075_possibleNilRemove(jule::Ptr<_1c68bb096_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1c68bc43d_isGuaranteedNonNilExpr(jule::Ptr<_1c68bb096_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1c68bc707_isNilValidType(jule::Ptr<_1c67bb8d1_TypeKind> _9223_t);
inline jule::Uintptr _1c68bca48_getNilVar(jule::Any _9414_m);
inline jule::Bool _1c73c6573_isConstantValidConditionalCase(jule::Ptr<_1c66b39d7_If>* _68736_i);
inline jule::Bool _1c73c6881_isUnreachableExpr(jule::Any* _69623_expr);
inline jule::Bool _1c73c6b4a_isConstantValidMatchCase(jule::Ptr<_1c66b8822_Case>* _71130_case);
inline jule::Bool _1c73c6e8b_isUnreachableConditionalCase(jule::Ptr<_1c66b39d7_If>* _72034_i);
inline jule::Bool _1c73c7222_isUnreachableMatchCase(jule::Ptr<_1c66b8822_Case>* _72428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1c73cc656_checkForBitShiftOpt(jule::Ptr<_1c665c51e_OperandExprModel>* _59625_l, jule::Ptr<_1c665c51e_OperandExprModel>* _59648_r);
inline jule::Bool _1c73cca1e_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r);
inline void _1c73cebdb_possibleDynamicRemove(jule::Ptr<_1c73cdb52_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1c73ceee9_isDynamicValidType(jule::Ptr<_1c67bb8d1_TypeKind> _8727_t);
inline jule::Ptr<_1c67bb8d1_TypeKind> _1c73d0428_isTypeGuaranteedDynamicData(jule::Ptr<_1c73cdb52_dynamic>* _8937_dy, jule::Ptr<_1c67bb8d1_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1c73d0769_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1c73d4240_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1c73d4608_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1c73d497c_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1c73d4cac_possibleBoundaryRemove(jule::Ptr<_1c73d31c8_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1c73d5076_isBoundaryRiskyType(jule::Ptr<_1c67bb8d1_TypeKind> _13628_t);
inline jule::Bool _1c73d5340_isBoundaryValidType(jule::Ptr<_1c67bb8d1_TypeKind> _14128_t);
inline jule::Uintptr _1c73d5609_getBoundaryVar(jule::Any _14319_m);
inline void _1c73d8684_PushOptLevel(jule::I64 _3217_level);
inline void _1c75167a1_detectEnabled(void);
inline void _1c753d90a_Throw(jule::Str _910_msg);
inline jule::U64 _1d4c9a555_unix(void);
inline jule::Bool _1d4bc7d45_isCopyOptimizable(jule::Ptr<_1c6788b56_Data>* _118423_expr);
inline jule::Bool _1d4bc820d_isIterCopyOptimizable(jule::Ptr<_1c6788b56_Data>* _119527_expr, jule::Ptr<_1c672acb3_Var>* _119541_v);
inline jule::Bool _1d4bc863c_captureVarHandling(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _120228_oc, jule::Ptr<_1c6660830_AnonFnExprModel>* _120251_m, jule::Ptr<_1c672acb3_Var>* _120277_v);
inline jule::Str _1d4bdb221_decomposeCommonEsq(jule::U8 _197823_b);
inline jule::Str _1d4bdb52e_sbtoa(jule::U8 _200510_b);
inline void _1d4bdb81a_cstrBytes(_20759e353_StrBuilder* _202519_s, jule::Str _202534_ctx);
inline void _1d4bdbb4a_cstrLit(_20759e353_StrBuilder* _203117_s, jule::Str _203132_ctx);
inline void _1d4bdbee1_ftoa(_20759e353_StrBuilder* _203714_s, jule::F64 _203729_f, jule::I64 _203737_bitsize);
inline void _1d4bdc2cc_itoa(_20759e353_StrBuilder* _205514_s, jule::I64 _205529_x);
inline void _1d4bdc5b8_utoa(_20759e353_StrBuilder* _207214_s, jule::U64 _207229_x);
inline void _1d4bdcc17_operatorOverloadingBinary(_20759e353_StrBuilder* _208635_buf, jule::Ptr<_1c665865d_StructIns>* _208657_s, jule::Str* _208673_l, jule::Str* _20873_r, jule::U64 _208711_op, jule::Str _208724_kind);
inline jule::Slice<jule::U8> _1d4cb1071_concatAllParts(jule::Slice<jule::Ptr<_1c661e327_Token>> _124719_parts);
inline jule::Bool _1d4cb137e_isHeadDecl(jule::Ptr<_1c666a51b_Fn>* _126320_m);
inline jule::Bool _1d4cb1648_defaultEq(jule::Ptr<_1c665865d_StructIns>* _127615_s);
inline jule::Bool _1d4cc0811_ableToInit(jule::Ptr<_1c67bb8d1_TypeKind>* _46620_t);
inline jule::Bool _1d4cc0adb_shouldInitialized(jule::Ptr<_1c67bb8d1_TypeKind>* _47327_t);
inline void _20882bc0b_printErrorMessage(jule::Str _3022_msg);
inline void _20882be81_help(jule::Slice<jule::Str>* _3510_args);
inline void _20882c1b2_version(jule::Slice<jule::Str>* _6313_args);
inline void _20882c3c1_toolDistos(void);
inline void _20882c536_toolDistarch(void);
inline void _20882c734_tool(jule::Slice<jule::Str>* _9410_args);
inline void _20882c965_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _20882cca6_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _20882cee8_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _20882d191_showInfo(void);
void entry_point(void);
inline void _20882dbb9_enableVtp(void);
inline void _20882dd84_init(void);
inline void _1d4d3caae_init(void);
inline jule::Ptr<_238ad9d35_File> _1d4d3cd78_openOutput(jule::Str* _4316_path);
inline void _1d4d3d021_clearObjects(void);
inline void _1d4d3d32e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1d4d3d5e8_isCppSourceFile(jule::Str _9920_path);
inline void _1d4d3d829_pushCompCmdClang(_20759e353_StrBuilder* _10726_cmd);
inline void _1d4d3da5a_pushCompCmdGcc(_20759e353_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1d4d3dede_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c73b4d7a_IR>* _15936_ir);
inline jule::Str _1d4d3e176_getCompilePath(void);
inline void _1d4d3e3a7_applyTargetIndependentOptimizations(jule::Ptr<_1c73b4d7a_IR>* _20545_ir);
inline void _1d4d3e550_checkCompilerFlag(void);
inline void _1d4d3e75e_checkTargetArch(jule::Str _22720_arch);
inline void _1d4d3e990_checkTargetOs(jule::Str _23518_os);
inline void _1d4d3ebc1_checkTargetFlag(jule::Str* _24321_target);
inline void _1d4d3ee02_checkOptFlag(jule::Str* _26618_opt);
inline void _1d4d402ba_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1d4d40485_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1d4d40694_setupSemaFlags(jule::I64* _33824_flags);
inline jule::Ptr<_1c73b4d7a_IR> _1d4d4095d_buildIr(jule::Slice<jule::Str>* _34413_args);
inline void _1d4d40b8e_compileCommand(jule::Slice<jule::Str>* _38424_args);


struct _1c66855be_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1c6684953_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i);
	void(*_1c6684cb6_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB);
	void(*_1c66851d4_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB);
	jule::I64(*_1c668546a_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1c66d3144_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1c66d1e23_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1c66d21a9_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1c66d24ea_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1c66d63cd_ImportInfo>(*_1c66d283b_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log(*_1c66d2c37_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1c66d2ee0_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c66d63cd_ImportInfo> _4128__0);
};

struct _1c67bb42a_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1c67bae85_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1c67bb2c6_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other);
};

struct _1c67dc083_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1c66d63cd_ImportInfo>(*_1c67da36c_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector);
	jule::Ptr<_1c672acb3_Var>(*_1c67da768_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1c67baade_TypeAlias>(*_1c67dab64_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1c6655803_Struct>(*_1c67db060_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1c666a51b_Fn>(*_1c67db45b_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1c667de9c_Trait>(*_1c67db79c_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1c66816a8_Enum>(*_1c67dbadd_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1c6682db3_TypeEnum>(*_1c67dbe2e_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1d4d35810_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1d4d046be_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1d4d04812_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1d4d04955_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1d4d356ab_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6687add_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c668ad22_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c668daa0_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6692411_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6693c70_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c669e550_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66a2ae7_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c73b24d7_JuleImporter>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665865d_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666d4ec_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c667de9c_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66816a8_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6682db3_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66857de_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c668634a_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c668956d_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c668c791_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66905a7_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66956de_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c669b7e4_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66a0ebe_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66a4dd5_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67bb8d1_TypeKind>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67c49e9_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67c8525_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67c8ee8_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67c9adc_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67ca68c_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67cb319_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67cbcdc_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d4cb2b22_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66ba857_scopeChecker>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66d63cd_ImportInfo>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66d9304_Package>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c670684e_sema>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c678348b_SymbolTable>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8b10b58_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8b14475_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8b17b82_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8b1b3d3_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d8b1eae0_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c672acb3_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6651568_Impl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664b420_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66506bb_StructDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66465b3_FnDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6650e08_TraitDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664776d_VarDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664da71_EnumDecl>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664ea0b_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66528cc_Field>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dd71e850_Const>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6680b3b_EnumItem>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6668a47_Param>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6655803_Struct>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666a51b_Fn>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c67baade_TypeAlias>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b6116_Label>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b35b9_Scope>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666621a_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6788b56_Data>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666722c_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6664e94_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66634d1_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66638aa_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666415d_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6664614_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6665d41_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6665967_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6667529_FreeExprModel>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665e9e9_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b4202_Conditional>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b44ee_InfIter>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6648be2_WhileKind>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b49a5_WhileIter>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66495e9_RangeKind>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b5401_RangeIter>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b5786_ContSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b6776_GotoSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b6b50_Postfix>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b7106_Assign>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663a552_IdentExpr>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6660379_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b75ac_MultiAssign>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b7ce9_Match>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b901a_FallSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b5b60_BreakSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66b93b1_RetSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6644924_ScopeTree>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6638c37_Expr>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664abd3_Conditional>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66483b7_Iter>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6649d9c_ContSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6641ed7_LabelSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66423b1_GotoSt>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66433a1_AssignSt>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664c1e0_MatchCase>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66426ad_FallSt>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66499c3_BreakSt>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6647b47_RetSt>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663960b_UseExpr>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6636bbe_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6635d33_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663642c_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663599d_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663741c_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6636130_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663500d_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663b1bd_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665edc3_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663d456_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663ea62_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663982b_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6663107_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663c961_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6666d53_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6662d0a_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663bd4a_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66352c7_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663ace4_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6634903_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663b971_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66356a1_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6661666_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665e147_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664028d_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665d7b7_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6662931_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6661be9_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666258a_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66610d3_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6660830_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6639001_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6639bc2_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663a09b_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6640bea_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c664135a_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663b597_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663dc81_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663e237_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c663c301_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665cde3_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665ca19_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665dab4_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6663c84_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6664aba_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6665291_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c666558d_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c66668be_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6666aab_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b7081_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b9979_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b866a_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b91c6_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b95a0_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b7416_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b77e0_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b80d7_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b8967_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b9c76_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b7b64_RefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c665d421_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68ba073_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c68b8cec_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1d66ac581_1d6655150(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c6688ade_index(_self_.as<_1c6687add_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d666dab4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c668bd12_index(_self_.as<_1c668ad22_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d665b486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c668eb28_index(_self_.as<_1c668daa0_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d6661e92(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c66932e1_index(_self_.as<_1c6692411_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d666a2db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c6694c60_index(_self_.as<_1c6693c70_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d668a95a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c66a0540_index(_self_.as<_1c669e550_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66ac581_1d6683ce9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c6788b56_Data>* _1426_d, jule::I64 _1436_i) {
	_1c66a3c08_index(_self_.as<_1c66a2ae7_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1d66aca9d_1d6655150(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c668877b_ready(_self_.as<_1c6687add_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d666dab4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c668b99e_ready(_self_.as<_1c668ad22_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d665b486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c668e7b5_ready(_self_.as<_1c668daa0_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d6661e92(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c6692e7d_ready(_self_.as<_1c6692411_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d666a2db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c66948ec_ready(_self_.as<_1c6693c70_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d668a95a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c66a01cc_ready(_self_.as<_1c669e550_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66aca9d_1d6683ce9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c672acb3_Var>* _1526_keyA, jule::Ptr<_1c672acb3_Var>* _1543_keyB) {
	_1c66a3895_ready(_self_.as<_1c66a2ae7_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1d66ad274_1d6655150(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c668900c_step(_self_.as<_1c6687add_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d666dab4(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c668c230_step(_self_.as<_1c668ad22_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d665b486(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c6690046_step(_self_.as<_1c668daa0_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d6661e92(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c669370e_step(_self_.as<_1c6692411_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d666a2db(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c669517d_step(_self_.as<_1c6693c70_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d668a95a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c66a095d_step(_self_.as<_1c669e550_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1d66ad274_1d6683ce9(jule::Ptr<jule::Uintptr> _self_, jule::I64 _1620_i, jule::Ptr<_1c672acb3_Var>* _1633_keyA, jule::Ptr<_1c672acb3_Var>* _1650_keyB) {
	_1c66a4126_step(_self_.as<_1c66a2ae7_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d6655150(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6689293_len(_self_.as<_1c6687add_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d666dab4(jule::Ptr<jule::Uintptr> _self_) {
	return _1c668c4b6_len(_self_.as<_1c668ad22_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d665b486(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66902cc_len(_self_.as<_1c668daa0_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d6661e92(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6693995_len(_self_.as<_1c6692411_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d666a2db(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6695414_len(_self_.as<_1c6693c70_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d668a95a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66a0be4_len(_self_.as<_1c669e550_comptimeFiles>().alloc);
}
inline jule::I64 __jule_trait_method_1d66ad95b_1d6683ce9(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66a43ac_len(_self_.as<_1c66a2ae7_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1d66adc9c_1d7e266de(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1c73b30dc_SetModPath(_self_.as<_1c73b24d7_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1d66ae1ed_1d7e266de(jule::Ptr<jule::Uintptr> _self_) {
	return _1c73b3373_GetModPath(_self_.as<_1c73b24d7_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1d66ae60a_1d7e266de(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1c73b36b4_ModById(_self_.as<_1c73b24d7_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66aeac2_1d7e266de(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1c73b3a05_GetImport(_self_.as<_1c73b24d7_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_trait_method_1d66b01aa_1d7e266de(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1c73b3e01_ImportPackage(_self_.as<_1c73b24d7_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1d66b0a07_1d7e266de(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c66d63cd_ImportInfo> _4128__0) {
	_1c73b41a9_Imported(_self_.as<_1c73b24d7_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6530e71(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6658a15_Str(_self_.as<_1c665865d_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6530349(jule::Ptr<jule::Uintptr> _self_) {
	return _1c666d871_Str(_self_.as<_1c666d4ec_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d65488b2(jule::Ptr<jule::Uintptr> _self_) {
	return _1c667e398_Str(_self_.as<_1c667de9c_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d65222d6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6681a60_Str(_self_.as<_1c66816a8_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6529431(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6683237_Str(_self_.as<_1c6682db3_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6668b03(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6685bda_Str(_self_.as<_1c66857de_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d665841c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6686702_Str(_self_.as<_1c668634a_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6655150(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6687ea6_Str(_self_.as<_1c6687add_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6671d81(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6689925_Str(_self_.as<_1c668956d_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d666dab4(jule::Ptr<jule::Uintptr> _self_) {
	return _1c668b1c9_Str(_self_.as<_1c668ad22_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d665e753(jule::Ptr<jule::Uintptr> _self_) {
	return _1c668cb48_Str(_self_.as<_1c668c791_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d665b486(jule::Ptr<jule::Uintptr> _self_) {
	return _1c668e067_Str(_self_.as<_1c668daa0_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d666525e(jule::Ptr<jule::Uintptr> _self_) {
	return _1c669095e_Str(_self_.as<_1c66905a7_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6661e92(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66926a8_Str(_self_.as<_1c6692411_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d666a2db(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6694127_Str(_self_.as<_1c6693c70_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d655b045(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6695a96_Str(_self_.as<_1c66956de_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6674dea(jule::Ptr<jule::Uintptr> _self_) {
	return _1c669bb9b_Str(_self_.as<_1c669b7e4_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d668a95a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c669e907_Str(_self_.as<_1c669e550_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d66870b6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66a1376_Str(_self_.as<_1c66a0ebe_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6683ce9(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66a31d0_Str(_self_.as<_1c66a2ae7_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d667aa49(jule::Ptr<jule::Uintptr> _self_) {
	return _1c66a528c_Str(_self_.as<_1c66a4dd5_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d65129d0(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67bbccc_Str(_self_.as<_1c67bb8d1_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6517485(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67c4d6d_Str(_self_.as<_1c67c49e9_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d651dc94(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67c88cc_Str(_self_.as<_1c67c8525_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d652d9c9(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67c94b0_Str(_self_.as<_1c67c8ee8_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d65969ba(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67c9e94_Str(_self_.as<_1c67c9adc_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6594e4c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67caa44_Str(_self_.as<_1c67ca68c_Map>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d652c07c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67cb6c1_Str(_self_.as<_1c67cb319_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d6520559(jule::Ptr<jule::Uintptr> _self_) {
	return _1c67cc194_Str(_self_.as<_1c67cbcdc_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1d66b1057_1d84219b9(jule::Ptr<jule::Uintptr> _self_) {
	return _1d4cb301d_Str(_self_.as<_1d4cb2b22_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6530e71(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6658d56_Equal(_self_.as<_1c665865d_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6530349(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c666dbb2_Equal(_self_.as<_1c666d4ec_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d65488b2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c667e6d9_Equal(_self_.as<_1c667de9c_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d65222d6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6681da1_Equal(_self_.as<_1c66816a8_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6529431(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6683578_Equal(_self_.as<_1c6682db3_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6668b03(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c668602b_Equal(_self_.as<_1c66857de_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d665841c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6686a43_Equal(_self_.as<_1c668634a_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6655150(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c66882e7_Equal(_self_.as<_1c6687add_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6671d81(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6689c66_Equal(_self_.as<_1c668956d_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d666dab4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c668b51a_Equal(_self_.as<_1c668ad22_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d665e753(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c668ce89_Equal(_self_.as<_1c668c791_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d665b486(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c668e3a8_Equal(_self_.as<_1c668daa0_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d666525e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6690ca0_Equal(_self_.as<_1c66905a7_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6661e92(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c66929e9_Equal(_self_.as<_1c6692411_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d666a2db(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6694468_Equal(_self_.as<_1c6693c70_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d655b045(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c6695dd7_Equal(_self_.as<_1c66956de_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6674dea(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c669bedc_Equal(_self_.as<_1c669b7e4_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d668a95a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c669ec48_Equal(_self_.as<_1c669e550_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d66870b6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c66a16b7_Equal(_self_.as<_1c66a0ebe_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6683ce9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c66a3521_Equal(_self_.as<_1c66a2ae7_comptimeDecls>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d667aa49(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c66a55cd_Equal(_self_.as<_1c66a4dd5_comptimeDecl>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d65129d0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67bc11d_Equal(_self_.as<_1c67bb8d1_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6517485(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67c51ae_Equal(_self_.as<_1c67c49e9_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d651dc94(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67c8c1d_Equal(_self_.as<_1c67c8525_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d652d9c9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67c9801_Equal(_self_.as<_1c67c8ee8_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d65969ba(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67ca2d5_Equal(_self_.as<_1c67c9adc_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6594e4c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67cad85_Equal(_self_.as<_1c67ca68c_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d652c07c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67cba12_Equal(_self_.as<_1c67cb319_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d6520559(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1c67cc4d5_Equal(_self_.as<_1c67cbcdc_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1d66b13cb_1d84219b9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _5618_other) {
	return _1d4cb335e_Equal(_self_.as<_1d4cb2b22_customType>(), _5618_other);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66b194d_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector) {
	return _1c66bad30_SelectPackage(_self_.as<_1c66ba857_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66b194d_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector) {
	return _1c66d68ea_SelectPackage(_self_.as<_1c66d63cd_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66b194d_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector) {
	return _1c66d97cc_SelectPackage(_self_.as<_1c66d9304_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66b194d_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector) {
	return _1c6706d27_SelectPackage(_self_.as<_1c670684e_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1c66d63cd_ImportInfo> __jule_trait_method_1d66b194d_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _929_selector) {
	return _1c67839a8_SelectPackage(_self_.as<_1c678348b_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1c672acb3_Var> __jule_trait_method_1d66b27c8_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c66bb22b_FindVar(_self_.as<_1c66ba857_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c672acb3_Var> __jule_trait_method_1d66b27c8_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c66d6ce6_FindVar(_self_.as<_1c66d63cd_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c672acb3_Var> __jule_trait_method_1d66b27c8_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c66d9bc8_FindVar(_self_.as<_1c66d9304_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c672acb3_Var> __jule_trait_method_1d66b27c8_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c6707223_FindVar(_self_.as<_1c670684e_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c672acb3_Var> __jule_trait_method_1d66b27c8_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c6783da4_FindVar(_self_.as<_1c678348b_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c67baade_TypeAlias> __jule_trait_method_1d66b2da0_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c66bb627_FindTypeAlias(_self_.as<_1c66ba857_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c67baade_TypeAlias> __jule_trait_method_1d66b2da0_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c66d71e2_FindTypeAlias(_self_.as<_1c66d63cd_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c67baade_TypeAlias> __jule_trait_method_1d66b2da0_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c66da0c4_FindTypeAlias(_self_.as<_1c66d9304_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c67baade_TypeAlias> __jule_trait_method_1d66b2da0_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c670761e_FindTypeAlias(_self_.as<_1c670684e_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c67baade_TypeAlias> __jule_trait_method_1d66b2da0_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c67842a0_FindTypeAlias(_self_.as<_1c678348b_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c6655803_Struct> __jule_trait_method_1d66b34aa_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c66bba23_FindStruct(_self_.as<_1c66ba857_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c6655803_Struct> __jule_trait_method_1d66b34aa_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c66d75dd_FindStruct(_self_.as<_1c66d63cd_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c6655803_Struct> __jule_trait_method_1d66b34aa_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c66da4c0_FindStruct(_self_.as<_1c66d9304_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c6655803_Struct> __jule_trait_method_1d66b34aa_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c6707a1a_FindStruct(_self_.as<_1c670684e_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c6655803_Struct> __jule_trait_method_1d66b34aa_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c678469b_FindStruct(_self_.as<_1c678348b_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c666a51b_Fn> __jule_trait_method_1d66b3ab5_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c66bbe1e_FindFn(_self_.as<_1c66ba857_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c666a51b_Fn> __jule_trait_method_1d66b3ab5_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c66d79d9_FindFn(_self_.as<_1c66d63cd_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c666a51b_Fn> __jule_trait_method_1d66b3ab5_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c66da8bb_FindFn(_self_.as<_1c66d9304_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c666a51b_Fn> __jule_trait_method_1d66b3ab5_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c6707e16_FindFn(_self_.as<_1c670684e_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c666a51b_Fn> __jule_trait_method_1d66b3ab5_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c6784a97_FindFn(_self_.as<_1c678348b_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c667de9c_Trait> __jule_trait_method_1d66b41c0_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c66bc260_FindTrait(_self_.as<_1c66ba857_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1c667de9c_Trait> __jule_trait_method_1d66b41c0_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c66d7d2a_FindTrait(_self_.as<_1c66d63cd_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1c667de9c_Trait> __jule_trait_method_1d66b41c0_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c66dac0c_FindTrait(_self_.as<_1c66d9304_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1c667de9c_Trait> __jule_trait_method_1d66b41c0_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c6708257_FindTrait(_self_.as<_1c670684e_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1c667de9c_Trait> __jule_trait_method_1d66b41c0_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c6784dd8_FindTrait(_self_.as<_1c678348b_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1c66816a8_Enum> __jule_trait_method_1d66b4720_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c66bc5a1_FindEnum(_self_.as<_1c66ba857_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1c66816a8_Enum> __jule_trait_method_1d66b4720_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c66d816b_FindEnum(_self_.as<_1c66d63cd_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1c66816a8_Enum> __jule_trait_method_1d66b4720_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c66db04d_FindEnum(_self_.as<_1c66d9304_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1c66816a8_Enum> __jule_trait_method_1d66b4720_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c6708598_FindEnum(_self_.as<_1c670684e_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1c66816a8_Enum> __jule_trait_method_1d66b4720_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c6785229_FindEnum(_self_.as<_1c678348b_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1c6682db3_TypeEnum> __jule_trait_method_1d66b4c70_1d6609a50(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c66bc8e2_FindTypeEnum(_self_.as<_1c66ba857_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1c6682db3_TypeEnum> __jule_trait_method_1d66b4c70_1d65348e2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c66d84ac_FindTypeEnum(_self_.as<_1c66d63cd_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1c6682db3_TypeEnum> __jule_trait_method_1d66b4c70_1d6535a8b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c66db38e_FindTypeEnum(_self_.as<_1c66d9304_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1c6682db3_TypeEnum> __jule_trait_method_1d66b4c70_1d653278b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c67088d9_FindTypeEnum(_self_.as<_1c670684e_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1c6682db3_TypeEnum> __jule_trait_method_1d66b4c70_1d6533281(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c678556a_FindTypeEnum(_self_.as<_1c678348b_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1d8b21b14_1d8b10b58(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b109b0_Name(_self_.as<_1d8b10b58_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b21b14_1d8b14475(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b14101_Name(_self_.as<_1d8b14475_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b21b14_1d8b17b82(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1780d_Name(_self_.as<_1d8b17b82_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b21b14_1d8b1b3d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1b05e_Name(_self_.as<_1d8b1b3d3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b21b14_1d8b1eae0(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1e76b_Name(_self_.as<_1d8b1eae0_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d8b21c02_1d8b10b58(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b111ca_Short(_self_.as<_1d8b10b58_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d8b21c02_1d8b14475(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b149e7_Short(_self_.as<_1d8b14475_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d8b21c02_1d8b17b82(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b18204_Short(_self_.as<_1d8b17b82_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d8b21c02_1d8b1b3d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1b955_Short(_self_.as<_1d8b1b3d3_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1d8b21c02_1d8b1eae0(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b20162_Short(_self_.as<_1d8b1eae0_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b235c7_1d8b10b58(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b10e44_What(_self_.as<_1d8b10b58_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b235c7_1d8b14475(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b14761_What(_self_.as<_1d8b14475_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b235c7_1d8b17b82(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b17e6d_What(_self_.as<_1d8b17b82_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b235c7_1d8b1b3d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1b6be_What(_self_.as<_1d8b1b3d3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1d8b235c7_1d8b1eae0(jule::Ptr<jule::Uintptr> _self_) {
	return _1d8b1edcb_What(_self_.as<_1d8b1eae0_Flag>().alloc);
}
inline void __jule_trait_method_1d8b239d4_1d8b10b58(jule::Ptr<jule::Uintptr> _self_) {
	_1d8b11087_Reset(_self_.as<_1d8b10b58_Flag>().alloc);
}
inline void __jule_trait_method_1d8b239d4_1d8b14475(jule::Ptr<jule::Uintptr> _self_) {
	_1d8b148a4_Reset(_self_.as<_1d8b14475_Flag>().alloc);
}
inline void __jule_trait_method_1d8b239d4_1d8b17b82(jule::Ptr<jule::Uintptr> _self_) {
	_1d8b180b1_Reset(_self_.as<_1d8b17b82_Flag>().alloc);
}
inline void __jule_trait_method_1d8b239d4_1d8b1b3d3(jule::Ptr<jule::Uintptr> _self_) {
	_1d8b1b812_Reset(_self_.as<_1d8b1b3d3_Flag>().alloc);
}
inline void __jule_trait_method_1d8b239d4_1d8b1eae0(jule::Ptr<jule::Uintptr> _self_) {
	_1d8b2001e_Reset(_self_.as<_1d8b1eae0_Flag>().alloc);
}


static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d6655150,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d6655150,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d6655150,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d6655150,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d666dab4,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d666dab4,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d666dab4,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d666dab4,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d665b486,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d665b486,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d665b486,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d665b486,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d6661e92,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d6661e92,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d6661e92,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d6661e92,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d666a2db,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d666a2db,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d666a2db,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d666a2db,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d668a95a,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d668a95a,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d668a95a,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d668a95a,
};
static _1c66855be_comptimeRangeKindMptrData _1c66855be_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1c6684953_index=__jule_trait_method_1d66ac581_1d6683ce9,
	._1c6684cb6_ready=__jule_trait_method_1d66aca9d_1d6683ce9,
	._1c66851d4_step=__jule_trait_method_1d66ad274_1d6683ce9,
	._1c668546a_len=__jule_trait_method_1d66ad95b_1d6683ce9,
};
static _1c66d3144_ImporterMptrData _1c66d3144_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1c66d1e23_SetModPath=__jule_trait_method_1d66adc9c_1d7e266de,
	._1c66d21a9_GetModPath=__jule_trait_method_1d66ae1ed_1d7e266de,
	._1c66d24ea_ModById=__jule_trait_method_1d66ae60a_1d7e266de,
	._1c66d283b_GetImport=__jule_trait_method_1d66aeac2_1d7e266de,
	._1c66d2c37_ImportPackage=__jule_trait_method_1d66b01aa_1d7e266de,
	._1c66d2ee0_Imported=__jule_trait_method_1d66b0a07_1d7e266de,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6530e71,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6530e71,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6530349,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6530349,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d65488b2,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d65488b2,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d65222d6,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d65222d6,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6529431,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6529431,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6668b03,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6668b03,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d665841c,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d665841c,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6655150,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6655150,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6671d81,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6671d81,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d666dab4,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d666dab4,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d665e753,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d665e753,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d665b486,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d665b486,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d666525e,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d666525e,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6661e92,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6661e92,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d666a2db,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d666a2db,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d655b045,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d655b045,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6674dea,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6674dea,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d668a95a,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d668a95a,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d66870b6,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d66870b6,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6683ce9,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6683ce9,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d667aa49,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d667aa49,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d65129d0,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d65129d0,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6517485,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6517485,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d651dc94,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d651dc94,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d652d9c9,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d652d9c9,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d65969ba,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d65969ba,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6594e4c,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6594e4c,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d652c07c,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d652c07c,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d6520559,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d6520559,
};
static _1c67bb42a_KindMptrData _1c67bb42a_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1c67bae85_Str=__jule_trait_method_1d66b1057_1d84219b9,
	._1c67bb2c6_Equal=__jule_trait_method_1d66b13cb_1d84219b9,
};
static _1c67dc083_LookupMptrData _1c67dc083_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1c67da36c_SelectPackage=__jule_trait_method_1d66b194d_1d6609a50,
	._1c67da768_FindVar=__jule_trait_method_1d66b27c8_1d6609a50,
	._1c67dab64_FindTypeAlias=__jule_trait_method_1d66b2da0_1d6609a50,
	._1c67db060_FindStruct=__jule_trait_method_1d66b34aa_1d6609a50,
	._1c67db45b_FindFn=__jule_trait_method_1d66b3ab5_1d6609a50,
	._1c67db79c_FindTrait=__jule_trait_method_1d66b41c0_1d6609a50,
	._1c67dbadd_FindEnum=__jule_trait_method_1d66b4720_1d6609a50,
	._1c67dbe2e_FindTypeEnum=__jule_trait_method_1d66b4c70_1d6609a50,
};
static _1c67dc083_LookupMptrData _1c67dc083_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1c67da36c_SelectPackage=__jule_trait_method_1d66b194d_1d65348e2,
	._1c67da768_FindVar=__jule_trait_method_1d66b27c8_1d65348e2,
	._1c67dab64_FindTypeAlias=__jule_trait_method_1d66b2da0_1d65348e2,
	._1c67db060_FindStruct=__jule_trait_method_1d66b34aa_1d65348e2,
	._1c67db45b_FindFn=__jule_trait_method_1d66b3ab5_1d65348e2,
	._1c67db79c_FindTrait=__jule_trait_method_1d66b41c0_1d65348e2,
	._1c67dbadd_FindEnum=__jule_trait_method_1d66b4720_1d65348e2,
	._1c67dbe2e_FindTypeEnum=__jule_trait_method_1d66b4c70_1d65348e2,
};
static _1c67dc083_LookupMptrData _1c67dc083_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1c67da36c_SelectPackage=__jule_trait_method_1d66b194d_1d6535a8b,
	._1c67da768_FindVar=__jule_trait_method_1d66b27c8_1d6535a8b,
	._1c67dab64_FindTypeAlias=__jule_trait_method_1d66b2da0_1d6535a8b,
	._1c67db060_FindStruct=__jule_trait_method_1d66b34aa_1d6535a8b,
	._1c67db45b_FindFn=__jule_trait_method_1d66b3ab5_1d6535a8b,
	._1c67db79c_FindTrait=__jule_trait_method_1d66b41c0_1d6535a8b,
	._1c67dbadd_FindEnum=__jule_trait_method_1d66b4720_1d6535a8b,
	._1c67dbe2e_FindTypeEnum=__jule_trait_method_1d66b4c70_1d6535a8b,
};
static _1c67dc083_LookupMptrData _1c67dc083_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1c67da36c_SelectPackage=__jule_trait_method_1d66b194d_1d653278b,
	._1c67da768_FindVar=__jule_trait_method_1d66b27c8_1d653278b,
	._1c67dab64_FindTypeAlias=__jule_trait_method_1d66b2da0_1d653278b,
	._1c67db060_FindStruct=__jule_trait_method_1d66b34aa_1d653278b,
	._1c67db45b_FindFn=__jule_trait_method_1d66b3ab5_1d653278b,
	._1c67db79c_FindTrait=__jule_trait_method_1d66b41c0_1d653278b,
	._1c67dbadd_FindEnum=__jule_trait_method_1d66b4720_1d653278b,
	._1c67dbe2e_FindTypeEnum=__jule_trait_method_1d66b4c70_1d653278b,
};
static _1c67dc083_LookupMptrData _1c67dc083_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1c67da36c_SelectPackage=__jule_trait_method_1d66b194d_1d6533281,
	._1c67da768_FindVar=__jule_trait_method_1d66b27c8_1d6533281,
	._1c67dab64_FindTypeAlias=__jule_trait_method_1d66b2da0_1d6533281,
	._1c67db060_FindStruct=__jule_trait_method_1d66b34aa_1d6533281,
	._1c67db45b_FindFn=__jule_trait_method_1d66b3ab5_1d6533281,
	._1c67db79c_FindTrait=__jule_trait_method_1d66b41c0_1d6533281,
	._1c67dbadd_FindEnum=__jule_trait_method_1d66b4720_1d6533281,
	._1c67dbe2e_FindTypeEnum=__jule_trait_method_1d66b4c70_1d6533281,
};
static _1d4d35810_CommonFlagMptrData _1d4d35810_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1d4d046be_Name=__jule_trait_method_1d8b21b14_1d8b10b58,
	._1d4d04812_Short=__jule_trait_method_1d8b21c02_1d8b10b58,
	._1d4d04955_What=__jule_trait_method_1d8b235c7_1d8b10b58,
	._1d4d356ab_Reset=__jule_trait_method_1d8b239d4_1d8b10b58,
};
static _1d4d35810_CommonFlagMptrData _1d4d35810_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1d4d046be_Name=__jule_trait_method_1d8b21b14_1d8b14475,
	._1d4d04812_Short=__jule_trait_method_1d8b21c02_1d8b14475,
	._1d4d04955_What=__jule_trait_method_1d8b235c7_1d8b14475,
	._1d4d356ab_Reset=__jule_trait_method_1d8b239d4_1d8b14475,
};
static _1d4d35810_CommonFlagMptrData _1d4d35810_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1d4d046be_Name=__jule_trait_method_1d8b21b14_1d8b17b82,
	._1d4d04812_Short=__jule_trait_method_1d8b21c02_1d8b17b82,
	._1d4d04955_What=__jule_trait_method_1d8b235c7_1d8b17b82,
	._1d4d356ab_Reset=__jule_trait_method_1d8b239d4_1d8b17b82,
};
static _1d4d35810_CommonFlagMptrData _1d4d35810_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1d4d046be_Name=__jule_trait_method_1d8b21b14_1d8b1b3d3,
	._1d4d04812_Short=__jule_trait_method_1d8b21c02_1d8b1b3d3,
	._1d4d04955_What=__jule_trait_method_1d8b235c7_1d8b1b3d3,
	._1d4d356ab_Reset=__jule_trait_method_1d8b239d4_1d8b1b3d3,
};
static _1d4d35810_CommonFlagMptrData _1d4d35810_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1d4d046be_Name=__jule_trait_method_1d8b21b14_1d8b1eae0,
	._1d4d04812_Short=__jule_trait_method_1d8b21c02_1d8b1eae0,
	._1d4d04955_What=__jule_trait_method_1d8b235c7_1d8b1eae0,
	._1d4d356ab_Reset=__jule_trait_method_1d8b239d4_1d8b1eae0,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1d5d42cc2_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1d50939b3_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1d50a0eba_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1d50913a6_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1d508560e_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1d50a3451_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1d5090ecc_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c666d4ec_FnIns> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c672acb3_Var> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c665865d_StructIns> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c667de9c_Trait> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c6651568_Impl> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c664b420_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c66506bb_StructDecl> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c66465b3_FnDecl> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c6650e08_TraitDecl> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c664776d_VarDecl> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c664da71_EnumDecl> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c664ea0b_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1c66528cc_Field> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1dd71e850_Const> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c6680b3b_EnumItem> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c6668a47_Param> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c6655803_Struct> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c66816a8_Enum> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c6682db3_TypeEnum> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c666a51b_Fn> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c67baade_TypeAlias> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c66b6116_Label> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c66b35b9_Scope> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c6788b56_Data> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c666722c_BackendEmitExprModel> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c6665d41_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c6667529_FreeExprModel> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c665e9e9_FnCallExprModel> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c66b4202_Conditional> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c66b44ee_InfIter> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c6648be2_WhileKind> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c66b49a5_WhileIter> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c66495e9_RangeKind> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c66b5401_RangeIter> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c66b5786_ContSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c66b6776_GotoSt> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c66b6b50_Postfix> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c66b7106_Assign> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c663a552_IdentExpr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c6660379_IndexingExprModel> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c66b75ac_MultiAssign> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c66b7ce9_Match> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c66b901a_FallSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c66b5b60_BreakSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c66b93b1_RetSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c6644924_ScopeTree> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c6638c37_Expr> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c664abd3_Conditional> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c66483b7_Iter> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c6649d9c_ContSt> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c6641ed7_LabelSt> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c66423b1_GotoSt> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c66433a1_AssignSt> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c664c1e0_MatchCase> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c66426ad_FallSt> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c66499c3_BreakSt> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c6647b47_RetSt> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c663960b_UseExpr> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c6636bbe_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c6635d33_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c663642c_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1c663599d_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c663741c_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c6636130_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c663500d_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c663b1bd_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c665edc3_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c663d456_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c663ea62_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c663982b_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c6663107_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c663c961_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c6666d53_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c67bb8d1_TypeKind> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c6662d0a_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c663bd4a_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c66352c7_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c663ace4_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c6634903_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c663b971_NsSelectionExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c66356a1_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c6661666_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c665e147_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c664028d_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c665d7b7_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1c6662931_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c6661be9_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c666258a_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c66610d3_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c6660830_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c6639001_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c6639bc2_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c663a09b_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c6640bea_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c664135a_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c663b597_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c663dc81_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c663e237_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c663c301_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c665cde3_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c665ca19_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c665dab4_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c6665291_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c666558d_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1c66668be_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1c6666aab_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1c68b7081_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1c68b9979_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1c68b866a_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1c68b91c6_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1c68b95a0_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1c68b7416_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1c68b77e0_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1c68b80d7_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1c68b8967_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1c68b9c76_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1c68b7b64_RefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1c665d421_StructArgExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1c68ba073_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1c68b8cec_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator45, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type137_to_str(void *alloc) noexcept { return _1d50991e4_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1d50a4397_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1d508aaba_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1d50887ee_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1d509b636_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1d509da78_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type142_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type142 && __jule_any_type142_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1c5407562(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666c474_ParamIns> _24921_p1, jule::Ptr<_1c666c474_ParamIns> _24936_p2);
struct __jule_anon_1d676d28a_ctx{
	jule::Ptr<_1c66d63cd_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1d676d28a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d676d28a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d676d28a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _49935_spkg);
struct __jule_anon_1d67d9d84_ctx{
	jule::Ptr<_1c668634a_comptimeStructField> _self_;
};
static void __jule_anon_1d67d9d84_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d67d9d84_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d67d9d84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _6521_e, jule::Ptr<_1c663c961_FnCallExpr>* _6536_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d67dbd0e_ctx{
	jule::Ptr<_1c668634a_comptimeStructField> _self_;
};
static void __jule_anon_1d67dbd0e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d67dbd0e_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d67dbd0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _7221_e, jule::Ptr<_1c663c961_FnCallExpr>* _7236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6803be4_ctx{
	jule::Ptr<_1c668956d_comptimeStatic> _self_;
};
static void __jule_anon_1d6803be4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6803be4_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6803be4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _17821_e, jule::Ptr<_1c663c961_FnCallExpr>* _17836_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6805b6e_ctx{
	jule::Ptr<_1c668956d_comptimeStatic> _self_;
};
static void __jule_anon_1d6805b6e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6805b6e_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6805b6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _18521_e, jule::Ptr<_1c663c961_FnCallExpr>* _18536_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6817103_ctx{
	jule::Ptr<_1c668c791_comptimeEnumField> _self_;
};
static void __jule_anon_1d6817103_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6817103_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6817103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _28321_e, jule::Ptr<_1c663c961_FnCallExpr>* _28336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d682d955_ctx{
	jule::Ptr<_1c66905a7_comptimeParam> _self_;
};
static void __jule_anon_1d682d955_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d682d955_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d682d955(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _40221_e, jule::Ptr<_1c663c961_FnCallExpr>* _40236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68308d0_ctx{
	jule::Ptr<_1c66905a7_comptimeParam> _self_;
};
static void __jule_anon_1d68308d0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68308d0_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68308d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _40921_e, jule::Ptr<_1c663c961_FnCallExpr>* _40936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d683285a_ctx{
	jule::Ptr<_1c66905a7_comptimeParam> _self_;
};
static void __jule_anon_1d683285a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d683285a_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d683285a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _41621_e, jule::Ptr<_1c663c961_FnCallExpr>* _41636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68d10ce_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68d10ce_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68d10ce_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d10ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _97421_e, jule::Ptr<_1c663c961_FnCallExpr>* _97436_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68d3059_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68d3059_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68d3059_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d3059(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98121_e, jule::Ptr<_1c663c961_FnCallExpr>* _98136_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68d4ed4_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68d4ed4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68d4ed4_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d4ed4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98821_e, jule::Ptr<_1c663c961_FnCallExpr>* _98836_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68d6e5e_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68d6e5e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68d6e5e_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d6e5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _99521_e, jule::Ptr<_1c663c961_FnCallExpr>* _99536_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68d8dd9_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68d8dd9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68d8dd9_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d8dd9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _100221_e, jule::Ptr<_1c663c961_FnCallExpr>* _100236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68dad64_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68dad64_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68dad64_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dad64(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _100921_e, jule::Ptr<_1c663c961_FnCallExpr>* _100936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68dccde_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68dccde_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68dccde_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dccde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _101621_e, jule::Ptr<_1c663c961_FnCallExpr>* _101636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68dec69_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68dec69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68dec69_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dec69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _102321_e, jule::Ptr<_1c663c961_FnCallExpr>* _102336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68e1e69_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68e1e69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68e1e69_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e1e69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _103021_e, jule::Ptr<_1c663c961_FnCallExpr>* _103036_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68e3de4_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68e3de4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68e3de4_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e3de4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _103721_e, jule::Ptr<_1c663c961_FnCallExpr>* _103736_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68e5d6e_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68e5d6e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68e5d6e_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e5d6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _104421_e, jule::Ptr<_1c663c961_FnCallExpr>* _104436_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68e7ce9_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68e7ce9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68e7ce9_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e7ce9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _105121_e, jule::Ptr<_1c663c961_FnCallExpr>* _105136_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68e9c74_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68e9c74_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68e9c74_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e9c74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _105821_e, jule::Ptr<_1c663c961_FnCallExpr>* _105836_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68ebbee_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68ebbee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68ebbee_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68ebbee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _106521_e, jule::Ptr<_1c663c961_FnCallExpr>* _106536_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d68edb79_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d68edb79_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d68edb79_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68edb79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _107221_e, jule::Ptr<_1c663c961_FnCallExpr>* _107236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6900b04_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d6900b04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6900b04_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6900b04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _107921_e, jule::Ptr<_1c663c961_FnCallExpr>* _107936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6902a7e_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d6902a7e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6902a7e_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6902a7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _108621_e, jule::Ptr<_1c663c961_FnCallExpr>* _108636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6904a09_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d6904a09_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6904a09_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6904a09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _109321_e, jule::Ptr<_1c663c961_FnCallExpr>* _109336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6906984_ctx{
	jule::Ptr<_1c66956de_comptimeTypeInfo> _self_;
};
static void __jule_anon_1d6906984_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6906984_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6906984(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _110021_e, jule::Ptr<_1c663c961_FnCallExpr>* _110036_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6932ecc_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d6932ecc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6932ecc_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6932ecc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _126221_e, jule::Ptr<_1c663c961_FnCallExpr>* _126236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6934e57_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d6934e57_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6934e57_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6934e57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _126921_e, jule::Ptr<_1c663c961_FnCallExpr>* _126936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6936dd2_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d6936dd2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6936dd2_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6936dd2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _127621_e, jule::Ptr<_1c663c961_FnCallExpr>* _127636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6938d5c_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d6938d5c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6938d5c_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6938d5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _128321_e, jule::Ptr<_1c663c961_FnCallExpr>* _128336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d693acd7_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d693acd7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d693acd7_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693acd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _129021_e, jule::Ptr<_1c663c961_FnCallExpr>* _129036_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d693cc62_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d693cc62_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d693cc62_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693cc62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _129721_e, jule::Ptr<_1c663c961_FnCallExpr>* _129736_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d693ebdc_ctx{
	jule::Ptr<_1c669b7e4_comptimeValue> _self_;
};
static void __jule_anon_1d693ebdc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d693ebdc_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693ebdc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _130421_e, jule::Ptr<_1c663c961_FnCallExpr>* _130436_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d6954927_ctx{
	jule::Ptr<_1c66a0ebe_comptimeFile> _self_;
};
static void __jule_anon_1d6954927_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6954927_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6954927(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _142921_e, jule::Ptr<_1c663c961_FnCallExpr>* _142936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69568a2_ctx{
	jule::Ptr<_1c66a0ebe_comptimeFile> _self_;
};
static void __jule_anon_1d69568a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69568a2_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69568a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _143621_e, jule::Ptr<_1c663c961_FnCallExpr>* _143636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d695882c_ctx{
	jule::Ptr<_1c66a0ebe_comptimeFile> _self_;
};
static void __jule_anon_1d695882c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d695882c_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d695882c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _144321_e, jule::Ptr<_1c663c961_FnCallExpr>* _144336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69c1103_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69c1103_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69c1103_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c1103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _194921_e, jule::Ptr<_1c663c961_FnCallExpr>* _194936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69c307d_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69c307d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69c307d_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c307d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _195621_e, jule::Ptr<_1c663c961_FnCallExpr>* _195636_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69c5008_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69c5008_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69c5008_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c5008(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _196321_e, jule::Ptr<_1c663c961_FnCallExpr>* _196336_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69c6e83_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69c6e83_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69c6e83_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c6e83(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _197021_e, jule::Ptr<_1c663c961_FnCallExpr>* _197036_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69c8e0d_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69c8e0d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69c8e0d_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c8e0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _197721_e, jule::Ptr<_1c663c961_FnCallExpr>* _197736_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69cad88_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69cad88_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69cad88_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69cad88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _198421_e, jule::Ptr<_1c663c961_FnCallExpr>* _198436_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69ccd13_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69ccd13_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69ccd13_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69ccd13(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _199121_e, jule::Ptr<_1c663c961_FnCallExpr>* _199136_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69cec8d_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69cec8d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69cec8d_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69cec8d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _199821_e, jule::Ptr<_1c663c961_FnCallExpr>* _199836_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69d1e8d_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69d1e8d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69d1e8d_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d1e8d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _200521_e, jule::Ptr<_1c663c961_FnCallExpr>* _200536_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69d3e18_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69d3e18_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69d3e18_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d3e18(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _201221_e, jule::Ptr<_1c663c961_FnCallExpr>* _201236_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69d5d93_ctx{
	jule::Ptr<_1c66a4dd5_comptimeDecl> _self_;
};
static void __jule_anon_1d69d5d93_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69d5d93_ctx>().dealloc(); }
inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d5d93(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _201921_e, jule::Ptr<_1c663c961_FnCallExpr>* _201936_fc, jule::Ptr<_1c6788b56_Data>* );
struct __jule_anon_1d69e2168_ctx{
	jule::Ptr<_1c66ab98b_constraintChecker> _self_;
};
static void __jule_anon_1d69e2168_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d69e2168_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d69e2168(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _6415_sema, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _6433_generics);
struct __jule_anon_1d6dbb61e_ctx{
	jule::Ptr<_1c666d4ec_FnIns> _103047_f;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _103111_generics;
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> *_103063_ignored;
};
static void __jule_anon_1d6dbb61e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6dbb61e_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d6dbb61e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _103742_sema);
struct __jule_anon_1d6dd45e3_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*> _113346_algo;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _11387_generics;
};
static void __jule_anon_1d6dd45e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6dd45e3_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d6dd45e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _114042_sema);
struct __jule_anon_1d6dd8dcd_ctx{
	jule::Ptr<_1c666d4ec_FnIns> _115237_f;
	jule::Ptr<_1c670684e_sema> _self_;
};
static void __jule_anon_1d6dd8dcd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d6dd8dcd_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d6dd8dcd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _115637_sema, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _115655_generics);
struct __jule_anon_1d746c719_ctx{
	jule::Ptr<_1c663b971_NsSelectionExpr> _191335_s;
	jule::Str _19143_path;
};
static void __jule_anon_1d746c719_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d746c719_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d746c719(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _191543_imp);
inline jule::Str __jule_anon1d77ae8c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def);
struct __jule_anon_1d7844690_ctx{
	jule::Ptr<_1c66356a1_NamespaceTypeDecl> _155836_decl;
	jule::Str _15593_path;
};
static void __jule_anon_1d7844690_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d7844690_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d7844690(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _156043_imp);
struct __jule_anon_1d806b34a_ctx{
	jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_;
};
static void __jule_anon_1d806b34a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d806b34a_ctx>().dealloc(); }
inline void __jule_anon_1d806b34a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _22131_file);
struct __jule_anon_1d80c43e7_ctx{
	_1c751387a_exprDeadCode *_self_;
};
static void __jule_anon_1d80c43e7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d80c43e7_ctx>().dealloc(); }
inline void __jule_anon_1d80c43e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1d827b1c5_ctx{
	_1c73c8421_exprOptimizer *_self_;
};
static void __jule_anon_1d827b1c5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d827b1c5_ctx>().dealloc(); }
inline void __jule_anon_1d827b1c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m);
struct __jule_anon_1d843a41c_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1d843a41c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d843a41c_ctx>().dealloc(); }
inline void __jule_anon_1d843a41c(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d843de26_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Ptr<_1c66b5401_RangeIter> *_12936_it;
};
static void __jule_anon_1d843de26_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d843de26_ctx>().dealloc(); }
inline void __jule_anon_1d843de26(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d845e4a7_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Str _2167_resultKey;
};
static void __jule_anon_1d845e4a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d845e4a7_ctx>().dealloc(); }
inline void __jule_anon_1d845e4a7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d8461a2b_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Str _2177_resultVal;
};
static void __jule_anon_1d8461a2b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d8461a2b_ctx>().dealloc(); }
inline void __jule_anon_1d8461a2b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d847aa78_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
};
static void __jule_anon_1d847aa78_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d847aa78_ctx>().dealloc(); }
inline void __jule_anon_1d847aa78(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d85186a4_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
};
static void __jule_anon_1d85186a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d85186a4_ctx>().dealloc(); }
inline void __jule_anon_1d85186a4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d85199d5_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Ptr<_1c66b7ce9_Match> _76930_m;
};
static void __jule_anon_1d85199d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d85199d5_ctx>().dealloc(); }
inline void __jule_anon_1d85199d5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1d858a3a2_ctx{
	jule::Ptr<_1d4bbe91e_scopeCoder> _self_;
	jule::Ptr<_1c6660830_AnonFnExprModel> _113934_m;
};
static void __jule_anon_1d858a3a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d858a3a2_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1d858a3a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c672acb3_Var> _114567_v);
struct __jule_anon_1c6438e11_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6438e11_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6438e11_ctx>().dealloc(); }
inline void __jule_anon_1c6438e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _75538_pkg);
struct __jule_anon_1c643a42e_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c643a42e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c643a42e_ctx>().dealloc(); }
inline void __jule_anon_1c643a42e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _76836_m);
struct __jule_anon_1c6440ab6_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6440ab6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6440ab6_ctx>().dealloc(); }
inline void __jule_anon_1c6440ab6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _78138_pkg);
struct __jule_anon_1c6451269_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
	jule::Ptr<_1c672acb3_Var> _84824_v;
};
static void __jule_anon_1c6451269_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6451269_ctx>().dealloc(); }
inline void __jule_anon_1c6451269(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6453359_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
	jule::Ptr<_1c672acb3_Var> _84824_v;
};
static void __jule_anon_1c6453359_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6453359_ctx>().dealloc(); }
inline void __jule_anon_1c6453359(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6455a65_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6455a65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6455a65_ctx>().dealloc(); }
inline void __jule_anon_1c6455a65(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6456c0e_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
	jule::Ptr<_1c672acb3_Var> _84824_v;
};
static void __jule_anon_1c6456c0e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6456c0e_ctx>().dealloc(); }
inline void __jule_anon_1c6456c0e(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6474b50_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6474b50_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6474b50_ctx>().dealloc(); }
inline void __jule_anon_1c6474b50(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _99038_pkg);
struct __jule_anon_1c6475ec5_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
	jule::Ptr<_1c665865d_StructIns> _100449_s;
};
static void __jule_anon_1c6475ec5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6475ec5_ctx>().dealloc(); }
inline void __jule_anon_1c6475ec5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _100536_m);
struct __jule_anon_1c6483983_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6483983_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6483983_ctx>().dealloc(); }
inline void __jule_anon_1c6483983(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _104238_pkg);
struct __jule_anon_1d8a942e5_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1d8a942e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d8a942e5_ctx>().dealloc(); }
inline void __jule_anon_1d8a942e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _111438_pkg);
struct __jule_anon_1d8a957be_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1d8a957be_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d8a957be_ctx>().dealloc(); }
inline void __jule_anon_1d8a957be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _113031_file);
struct __jule_anon_1d8aa09d8_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1d8aa09d8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d8aa09d8_ctx>().dealloc(); }
inline void __jule_anon_1d8aa09d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _116938_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1d8b363ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1d8b3e02c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1d67cd6a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _203925_pkg);
struct __jule_anon_1c6439d46_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6439d46_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6439d46_ctx>().dealloc(); }
inline void __jule_anon_1c6439d46(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _75632_file);
struct __jule_anon_1c64419c9_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c64419c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c64419c9_ctx>().dealloc(); }
inline void __jule_anon_1c64419c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _78232_file);
struct __jule_anon_1c6475a52_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6475a52_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6475a52_ctx>().dealloc(); }
inline void __jule_anon_1c6475a52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _99132_file);
struct __jule_anon_1c6484896_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1c6484896_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6484896_ctx>().dealloc(); }
inline void __jule_anon_1c6484896(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _104332_file);
struct __jule_anon_1d8a95208_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
};
static void __jule_anon_1d8a95208_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1d8a95208_ctx>().dealloc(); }
inline void __jule_anon_1d8a95208(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _111532_file);
struct __jule_anon_1c6477a43_ctx{
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_;
	jule::Ptr<_1c667de9c_Trait> _99217_t;
};
static void __jule_anon_1c6477a43_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6477a43_ctx>().dealloc(); }
inline void __jule_anon_1c6477a43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _99639_m);
jule::Array<jule::Array<jule::Str,2>,5> _20882ba30_HelpMap;
jule::Str _1d4d3c383_OutDir;
jule::Str _1d4d3c64c_OutName;
jule::Str _1d4d3c905_Out;
jule::Uintptr _2210a02d0_STDIN;
jule::Uintptr _2210a0577_STDOUT;
jule::Uintptr _2210a0874_STDERR;
jule::Array<jule::U8,256> _2066ad6c7_first;
jule::Array<_2066adc7c_acceptRange,16> _2066ae123_acceptRanges;
jule::Array<jule::U8,32> _238a14aa6__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _238a1514a__DE_BRUIJN64_TAB;
jule::I64 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_20872553e_RangeTable> _2086b33bc__L;
jule::Ptr<_20872553e_RangeTable> _2086b42d0__LU;
jule::Ptr<_20872553e_RangeTable> _2086ba2b4_Letter;
jule::Ptr<_20872553e_RangeTable> _2086c1584_Upper;
jule::Array<jule::U8,256> _20871e060__PROPERTIES;
jule::Array<jule::Str,4> _20805ece1_CppHeaderExts;
jule::Array<jule::Str,3> _208061aa1_CppExts;
jule::Array<jule::Str,1> _208061cb0_ObjectiveCppExts;
jule::Str _208821eed_PathStdlib;
jule::Str _208822240_PathExec;
jule::Str _2088224e8_PathWd;
jule::Str _2088227e5_PathApi;
jule::Str _208822a9d_Os;
jule::Str _208822d56_Arch;
jule::Str _208827b3b_Compiler;
jule::Str _2088291e2_CompilerPath;
jule::Str _208829401_CppStd;
jule::Bool _208829610_Shadowing;
jule::Bool _2088298a7_Transpilation;
jule::Bool _208829b60_Test;
jule::Bool _208829e18_RC;
jule::Bool _20882a2d1_Safety;
jule::Bool _20882a523_Production;
jule::Bool _20882a7ba_AtomicRC;
_1dd6e85b5_floatInfo _1dd6e89b1_f32info;
_1dd6e85b5_floatInfo _1dd6e8cad_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1dd701788_detailedPowsOfTen;
jule::Slice<jule::I64> _1dd70359d_powtab;
jule::Slice<jule::F64> _1dd70415e_f64pow10;
jule::Slice<jule::F32> _1dd70448e_f32pow10;
jule::Array<jule::U64,20> _1dd7076e5_u64pow10;
jule::Slice<_1dd70b485_leftCheat> _1dd70b8b4_leftCheats;
jule::I64 _1dd712ba6_BitSize;
jule::Str _1dd712ea3_SysInt;
jule::Str _1dd71325b_SysUint;
jule::Array<jule::I32,5> _1c65703ee_Spaces;
jule::Array<jule::U64,6> _1c65706da_UnaryOps;
jule::Array<jule::U64,18> _1c6618233_BinOps;
jule::Array<jule::U64,2> _1c661880a_PostfixOps;
jule::Array<jule::U64,11> _1c6618ae6_AssignOps;
jule::Array<_1c6626c14_kindPair,28> _1c6627143_keywords;
jule::Array<_1c6626c14_kindPair,46> _1c6627473_basicOps;
jule::Slice<jule::Str> _1c66ab150_builtinConstraints;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a1114_primNil;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a1411_primVoid;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a16b9_primAny;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a19b6_primStr;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a1c6e_primBool;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a2027_primUintptr;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a22d0_primUint;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a2698_primInt;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a28da_primI8;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a2b82_primI16;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a2e3a_primI32;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a31e3_primI64;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a349b_primU8;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a3754_primU16;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a3a0c_primU32;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a3ee6_primU64;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a4238_primF32;
jule::Ptr<_1c67bb8d1_TypeKind> _1c68a4447_primF64;
jule::Ptr<_1c73d17d1_data> _1c73d0dda_emptyData;
jule::Bool _1c73d5d68_Copy;
jule::Bool _1c73d6165_Deadcode;
jule::Bool _1c73d641d_Append;
jule::Bool _1c73d671a_Math;
jule::Bool _1c73d69c3_Access;
jule::Bool _1c73d6c7b_Inline;
jule::Bool _1c73d7034_Ptr;
jule::Bool _1c73d73ec_Cond;
jule::Bool _1c73d763e_Str;
jule::Bool _1c73d78d6_Slice;
jule::Bool _1c73d7b8e_Assign;
jule::Bool _1c73d7e47_Exceptional;
jule::Bool _1c73d8200_Iter;
jule::Bool _1c73d84a8_Dynamic;
jule::Bool _1c751456d_exprEnabled;
jule::Bool _1c75147b0_scopeEnabled;
jule::Array<jule::U64,12> _1d4c97200_mdays;
jule::Str _1d4bbe1b0_assignArgName;
jule::Ptr<_1c67bb8d1_TypeKind> _1d4ca1c32_generalGCPtr;


inline jule::Bool _2066adc7c_acceptRange_eq(_2066adc7c_acceptRange *_self_, _2066adc7c_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _206713892_LittleEndian_eq(_206713892_LittleEndian *_self_, _206713892_LittleEndian _other_) { return true; }

inline jule::U32 static__206729237_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__206729ac8_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _20672d04e_u128_eq(_20672d04e_u128 *_self_, _20672d04e_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1d8328492_group_eq(_1d8328492_group *_self_, _1d8328492_group _other_) {
	return 
		_1d50b541e_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1d8328bce_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}














inline jule::Bool _1d83252b3__Map_eq(_1d83252b3__Map *_self_, _1d83252b3__Map _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Bool _1d8325703_isNil(_1d83252b3__Map* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline void _1d8325857_initData(_1d83252b3__Map* _self_, jule::I64 _13824_cap) {
	(*(_self_))._field_data=jule::new_ptr<_1d8327419_mapData>(_1d8327419_mapData{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1d8328492_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});
	jule::I64 _1403_groups = _238a248b8_numGroups(_13824_cap);;
	(*(*(_self_))._field_data.alloc)._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1403_groups, _1403_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_groups=({ auto __jule_collection = jule::Slice<_1d8328492_group>::alloc(_1403_groups, _1403_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1d8328492_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_limit=({ jule::I64 __jule_x = _1403_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8341576:;
		if (it != expr_end) {
			jule::I64 _1447_i = it - expr->begin();
			{
				(*((*(_self_))._field_data))._field_ctrl[_1447_i]=_238a24ac7_newEmptyMetadata();
			}
			_iter_next_1d8341576:;
			++it;
			_1447_i++;
			goto _iter_begin_1d8341576;
		}
		_iter_end_1d8341576:;
	};
}



inline jule::U64 _1d83259ab_hash(_1d83252b3__Map* _self_, jule::Str _15016_k) {
	jule::Str _1513_bytes = _1d508560e_toStr(_15016_k);;
	return _2067314c5_hash(_220023e03_StrBytes(_1513_bytes));;
}



inline void _1d8325b10_rehash(_1d83252b3__Map* _self_, jule::I64 _15522_n) {
	if (_1d8325703_isNil(_self_)) {
		_1d8325857_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1d8328492_group> _1627_groups;
	jule::Slice<jule::Array<jule::I8,8>> _16215_ctrl;
	({
		jule::Slice<_1d8328492_group> ___jule_assign_arg = (*((*(_self_))._field_data))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(*(_self_))._field_data.alloc)._field_ctrl;
		_1627_groups = ___jule_assign_arg;
		_16215_ctrl = _1___jule_assign_arg;
	});
	(*(*(_self_))._field_data.alloc)._field_groups=({ auto __jule_collection = jule::Slice<_1d8328492_group>::alloc(_15522_n, _15522_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1d8328492_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15522_n, _15522_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8345701:;
		if (it != expr_end) {
			jule::I64 _1657_i = it - expr->begin();
			{
				(*((*(_self_))._field_data))._field_ctrl[_1657_i]=_238a24ac7_newEmptyMetadata();
			}
			_iter_next_1d8345701:;
			++it;
			_1657_i++;
			goto _iter_begin_1d8345701;
		}
		_iter_end_1d8345701:;
	};
	(*(*(_self_))._field_data.alloc)._field_limit=({ jule::I64 __jule_x = _15522_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(*(_self_))._field_data.alloc)._field_resident = ___jule_assign_arg;
		(*(*(_self_))._field_data.alloc)._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_16215_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8344eb4:;
		if (it != expr_end) {
			jule::I64 _1707_g = it - expr->begin();
			{
				{
					auto expr = &(_16215_ctrl[_1707_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d83479bc:;
					if (it != expr_end) {
						jule::I64 _1718_s = it - expr->begin();
						{
							jule::I8 _1725_c = _16215_ctrl[_1707_g][_1718_s];;
							if (((_1725_c == -128LL) || (_1725_c == -2LL))) {
								goto _iter_next_1d83479bc;
							};
							{
								(*(_1d8326171_set(_self_, _1627_groups[_1707_g]._field_keys[_1718_s])))=_1627_groups[_1707_g]._field_values[_1718_s];
							};
						}
						_iter_next_1d83479bc:;
						++it;
						_1718_s++;
						goto _iter_begin_1d83479bc;
					}
					_iter_end_1d83479bc:;
				};
			}
			_iter_next_1d8344eb4:;
			++it;
			_1707_g++;
			goto _iter_begin_1d8344eb4;
		}
		_iter_end_1d8344eb4:;
	};
}



inline jule::I64 _1d8325c64_nextSize(_1d83252b3__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (_1d8325703_isNil(_self_)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*((*(_self_))._field_data))._field_groups.len() << 2LL);
	if (((*((*(_self_))._field_data))._field_dead >= ((*((*(_self_))._field_data))._field_resident >> 1LL))) {
		__jule_func_result=(*(*(_self_))._field_data.alloc)._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1d8325db8_lookup(_1d83252b3__Map* _self_, jule::Str _19533_k, jule::Bool* _19545_v, jule::Bool* _19558_ok) {
	if (_1d8325703_isNil(_self_)) {
		if ((_19558_ok != nullptr)) {
			(*(_19558_ok))=false;
		};
		return;;
	};
	jule::U64 _2023_hi;
	jule::I8 _2027_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d83259ab_hash(_self_, _19533_k));
		_2023_hi = __jule_assign_result.__jule_result_arg0;
		_2027_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2037_g = _238a2529d_probeStart(_2023_hi, (*((*(_self_))._field_data))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2058_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2037_g)])), _2027_lo);;
			while ((_2058_matches != 0LLU)) {
				{
					jule::U32 _2075_s = _238a24027_nextMatch(&(_2058_matches));;
					if ((_19533_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2037_g)]._field_keys[static_cast<jule::I64>(_2075_s)])) {
						if ((_19545_v != nullptr)) {
							(*(_19545_v))=(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2037_g)]._field_values[static_cast<jule::I64>(_2075_s)];
						};
						if ((_19558_ok != nullptr)) {
							(*(_19558_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1d834e52e:;
			}
			_iter_end_1d834e52e:;;
			_2058_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2037_g)])));
			if ((_2058_matches != 0LLU)) {
				if ((_19558_ok != nullptr)) {
					(*(_19558_ok))=false;
				};
				return;;
			};
			_2037_g+=1LLU;
			if ((_2037_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2037_g=0LLU;
			};
		}
	_iter_next_1d834d011:;
	}
	_iter_end_1d834d011:;;
}



inline jule::Bool _1d832601c_get(_1d83252b3__Map* _self_, jule::Str _23423_k) {
	jule::Bool _23511_v = false;;
	jule::Bool _2367_ok = false;;
	{
		_1d8325db8_lookup(_self_, _23423_k, (&(_23511_v)), (&(_2367_ok)));
	};
	return _23511_v;;
}



inline jule::Bool* _1d8326171_set(_1d83252b3__Map* _self_, jule::Str _24323_k) {
	jule::Bool* __jule_func_result = nullptr;
	if ((_1d8325703_isNil(_self_) || ((*((*(_self_))._field_data))._field_resident >= (*(*(_self_))._field_data.alloc)._field_limit))) {
		_1d8325b10_rehash(_self_, _1d8325c64_nextSize(_self_));
	};
	jule::U64 _2473_hi;
	jule::I8 _2477_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d83259ab_hash(_self_, _24323_k));
		_2473_hi = __jule_assign_result.__jule_result_arg0;
		_2477_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2487_g = _238a2529d_probeStart(_2473_hi, (*(*(_self_))._field_data.alloc)._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2508_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)])), _2477_lo);;
			while ((_2508_matches != 0LLU)) {
				{
					jule::U32 _2525_s = _238a24027_nextMatch(&(_2508_matches));;
					if ((_24323_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2525_s)])) {
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2525_s)]=_24323_k;
						__jule_func_result=(&((*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_values[static_cast<jule::I64>(_2525_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1d8357c63:;
			}
			_iter_end_1d8357c63:;;
			_2508_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)])));
			if ((_2508_matches != 0LLU)) {
				jule::U32 _2635_s = _238a24027_nextMatch(&(_2508_matches));;
				(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2635_s)]=_24323_k;
				__jule_func_result=(&((*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_values[static_cast<jule::I64>(_2635_s)]));
				(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)][static_cast<jule::I64>(_2635_s)]=static_cast<jule::I8>(_2477_lo);
				((*(*(_self_))._field_data.alloc)._field_resident)++;
				return __jule_func_result;;
			};
			_2487_g+=1LLU;
			if ((_2487_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2487_g=0LLU;
			};
		}
	_iter_next_1d8356833:;
	}
	_iter_end_1d8356833:;;
}



inline jule::Bool _1d83262c5_del(_1d83252b3__Map* _self_, jule::Str _27823_k) {
	jule::Bool __jule_func_result = false;
	if (_1d8325703_isNil(_self_)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2823_hi;
	jule::I8 _2827_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d83259ab_hash(_self_, _27823_k));
		_2823_hi = __jule_assign_result.__jule_result_arg0;
		_2827_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2837_g = _238a2529d_probeStart(_2823_hi, (*((*(_self_))._field_data))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2858_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)])), _2827_lo);;
			while ((_2858_matches != 0LLU)) {
				{
					jule::U32 _2875_s = _238a24027_nextMatch(&(_2858_matches));;
					if ((_27823_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_keys[static_cast<jule::I64>(_2875_s)])) {
						__jule_func_result=true;
						if ((_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)]))) != 0LLU)) {
							(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)][static_cast<jule::I64>(_2875_s)]=-128LL;
							((*(*(_self_))._field_data.alloc)._field_resident)--;
						} else {
							(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)][static_cast<jule::I64>(_2875_s)]=-2LL;
							((*(*(_self_))._field_data.alloc)._field_dead)++;
						};
						jule::Str _30414_key;;
						jule::Bool _30514_val = false;;
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_keys[static_cast<jule::I64>(_2875_s)]=_30414_key;
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_values[static_cast<jule::I64>(_2875_s)]=_30514_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1d83617e9:;
			}
			_iter_end_1d83617e9:;;
			_2858_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)])));
			if ((_2858_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2837_g+=1LLU;
			if ((_2837_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2837_g=0LLU;
			};
		}
	_iter_next_1d83603b9:;
	}
	_iter_end_1d83603b9:;;
}



inline void _1d8326429_clear(_1d83252b3__Map* _self_) {
	if (_1d8325703_isNil(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_self_))._field_data))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d83689aa:;
		if (it != expr_end) {
			jule::I64 _3307_i = it - expr->begin();
			jule::Array<jule::I8,8> _33010_c = *it;
			{
				{
					auto expr = &(_33010_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8369428:;
					if (it != expr_end) {
						jule::I64 _3318_j = it - expr->begin();
						{
							(*((*(_self_))._field_data))._field_ctrl[_3307_i][_3318_j]=-128LL;
						}
						_iter_next_1d8369428:;
						++it;
						_3318_j++;
						goto _iter_begin_1d8369428;
					}
					_iter_end_1d8369428:;
				};
			}
			_iter_next_1d83689aa:;
			++it;
			_3307_i++;
			goto _iter_begin_1d83689aa;
		}
		_iter_end_1d83689aa:;
	};
	jule::Str _33511_k;;
	jule::Bool _33611_v = false;;
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d836a715:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			{
				_1d8328492_group* _3388_g = (&((*((*(_self_))._field_data))._field_groups[_3377_i]));;
				{
					{
						auto expr = &((*(_3388_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d836bd10:;
						if (it != expr_end) {
							jule::I64 _3409_j = it - expr->begin();
							{
								(*(_3388_g))._field_keys[_3409_j]=_33511_k;
								(*(_3388_g))._field_values[_3409_j]=_33611_v;
							}
							_iter_next_1d836bd10:;
							++it;
							_3409_j++;
							goto _iter_begin_1d836bd10;
						}
						_iter_end_1d836bd10:;
					};
				};
			}
			_iter_next_1d836a715:;
			++it;
			_3377_i++;
			goto _iter_begin_1d836a715;
		}
		_iter_end_1d836a715:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(*(_self_))._field_data.alloc)._field_resident = ___jule_assign_arg;
		(*(*(_self_))._field_data.alloc)._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1d832657d_len(_1d83252b3__Map* _self_) {
	return ((*((*(_self_))._field_data))._field_resident - (*(*(_self_))._field_data.alloc)._field_dead);;
}



inline jule::I64 _1d83266d2_cap(_1d83252b3__Map* _self_) {
	return ((*((*(_self_))._field_data))._field_limit - (*(*(_self_))._field_data.alloc)._field_resident);;
}



inline _1d83303cd_mapIterator _1d8326836_iterator(_1d83252b3__Map* _self_) {
	_1d83303cd_mapIterator _3577_iterator = _1d83303cd_mapIterator{._field_m=(*(_self_)), ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1d8328492_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1d8330961_init(&_3577_iterator);
	return _3577_iterator;;
}






inline jule::Bool _1d83713ec__Map_eq(_1d83713ec__Map *_self_, _1d83713ec__Map _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Bool _1d8371870_isNil(_1d83713ec__Map* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline void _1d83719b3_initData(_1d83713ec__Map* _self_, jule::I64 _13824_cap) {
	(*(_self_))._field_data=jule::new_ptr<_1d8373388_mapData>(_1d8373388_mapData{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1d8374466_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});
	jule::I64 _1403_groups = _238a248b8_numGroups(_13824_cap);;
	(*(*(_self_))._field_data.alloc)._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1403_groups, _1403_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_groups=({ auto __jule_collection = jule::Slice<_1d8374466_group>::alloc(_1403_groups, _1403_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1d8374466_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1c666d4ec_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c666d4ec_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_limit=({ jule::I64 __jule_x = _1403_groups; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d65a3e39:;
		if (it != expr_end) {
			jule::I64 _1447_i = it - expr->begin();
			{
				(*((*(_self_))._field_data))._field_ctrl[_1447_i]=_238a24ac7_newEmptyMetadata();
			}
			_iter_next_1d65a3e39:;
			++it;
			_1447_i++;
			goto _iter_begin_1d65a3e39;
		}
		_iter_end_1d65a3e39:;
	};
}



inline jule::U64 _1d8371b06_hash(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _15016_k) {
	jule::Str _1513_bytes = _1d6d16c51_toStr(_15016_k);;
	return _2067314c5_hash(_220023e03_StrBytes(_1513_bytes));;
}



inline void _1d8371c49_rehash(_1d83713ec__Map* _self_, jule::I64 _15522_n) {
	if (_1d8371870_isNil(_self_)) {
		_1d83719b3_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1d8374466_group> _1627_groups;
	jule::Slice<jule::Array<jule::I8,8>> _16215_ctrl;
	({
		jule::Slice<_1d8374466_group> ___jule_assign_arg = (*((*(_self_))._field_data))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(*(_self_))._field_data.alloc)._field_ctrl;
		_1627_groups = ___jule_assign_arg;
		_16215_ctrl = _1___jule_assign_arg;
	});
	(*(*(_self_))._field_data.alloc)._field_groups=({ auto __jule_collection = jule::Slice<_1d8374466_group>::alloc(_15522_n, _15522_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1d8374466_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1c666d4ec_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c666d4ec_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(*(_self_))._field_data.alloc)._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15522_n, _15522_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d672b237:;
		if (it != expr_end) {
			jule::I64 _1657_i = it - expr->begin();
			{
				(*((*(_self_))._field_data))._field_ctrl[_1657_i]=_238a24ac7_newEmptyMetadata();
			}
			_iter_next_1d672b237:;
			++it;
			_1657_i++;
			goto _iter_begin_1d672b237;
		}
		_iter_end_1d672b237:;
	};
	(*(*(_self_))._field_data.alloc)._field_limit=({ jule::I64 __jule_x = _15522_n; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(*(_self_))._field_data.alloc)._field_resident = ___jule_assign_arg;
		(*(*(_self_))._field_data.alloc)._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_16215_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d662dc83:;
		if (it != expr_end) {
			jule::I64 _1707_g = it - expr->begin();
			{
				{
					auto expr = &(_16215_ctrl[_1707_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6735eab:;
					if (it != expr_end) {
						jule::I64 _1718_s = it - expr->begin();
						{
							jule::I8 _1725_c = _16215_ctrl[_1707_g][_1718_s];;
							if (((_1725_c == -128LL) || (_1725_c == -2LL))) {
								goto _iter_next_1d6735eab;
							};
							{
								(*(_1d8372266_set(_self_, _1627_groups[_1707_g]._field_keys[_1718_s])))=_1627_groups[_1707_g]._field_values[_1718_s];
							};
						}
						_iter_next_1d6735eab:;
						++it;
						_1718_s++;
						goto _iter_begin_1d6735eab;
					}
					_iter_end_1d6735eab:;
				};
			}
			_iter_next_1d662dc83:;
			++it;
			_1707_g++;
			goto _iter_begin_1d662dc83;
		}
		_iter_end_1d662dc83:;
	};
}



inline jule::I64 _1d8371d8c_nextSize(_1d83713ec__Map* _self_) {
	jule::I64 __jule_func_result = 0;
	if (_1d8371870_isNil(_self_)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*((*(_self_))._field_data))._field_groups.len() << 2LL);
	if (((*((*(_self_))._field_data))._field_dead >= ((*((*(_self_))._field_data))._field_resident >> 1LL))) {
		__jule_func_result=(*(*(_self_))._field_data.alloc)._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1d8371ed0_lookup(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _19533_k, jule::Slice<jule::Uintptr>* _19545_v, jule::Bool* _19558_ok) {
	if (_1d8371870_isNil(_self_)) {
		if ((_19558_ok != nullptr)) {
			(*(_19558_ok))=false;
		};
		return;;
	};
	jule::U64 _2023_hi;
	jule::I8 _2027_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d8371b06_hash(_self_, _19533_k));
		_2023_hi = __jule_assign_result.__jule_result_arg0;
		_2027_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2037_g = _238a2529d_probeStart(_2023_hi, (*((*(_self_))._field_data))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2058_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2037_g)])), _2027_lo);;
			while ((_2058_matches != 0LLU)) {
				{
					jule::U32 _2075_s = _238a24027_nextMatch(&(_2058_matches));;
					if ((_19533_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2037_g)]._field_keys[static_cast<jule::I64>(_2075_s)])) {
						if ((_19545_v != nullptr)) {
							(*(_19545_v))=(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2037_g)]._field_values[static_cast<jule::I64>(_2075_s)];
						};
						if ((_19558_ok != nullptr)) {
							(*(_19558_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1d673ca2e:;
			}
			_iter_end_1d673ca2e:;;
			_2058_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2037_g)])));
			if ((_2058_matches != 0LLU)) {
				if ((_19558_ok != nullptr)) {
					(*(_19558_ok))=false;
				};
				return;;
			};
			_2037_g+=1LLU;
			if ((_2037_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2037_g=0LLU;
			};
		}
	_iter_next_1d673b511:;
	}
	_iter_end_1d673b511:;;
}



inline jule::Slice<jule::Uintptr> _1d8372123_get(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _23423_k) {
	jule::Slice<jule::Uintptr> _23511_v;;
	jule::Bool _2367_ok = false;;
	{
		_1d8371ed0_lookup(_self_, _23423_k, (&(_23511_v)), (&(_2367_ok)));
	};
	return _23511_v;;
}



inline jule::Slice<jule::Uintptr>* _1d8372266_set(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _24323_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if ((_1d8371870_isNil(_self_) || ((*((*(_self_))._field_data))._field_resident >= (*(*(_self_))._field_data.alloc)._field_limit))) {
		_1d8371c49_rehash(_self_, _1d8371d8c_nextSize(_self_));
	};
	jule::U64 _2473_hi;
	jule::I8 _2477_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d8371b06_hash(_self_, _24323_k));
		_2473_hi = __jule_assign_result.__jule_result_arg0;
		_2477_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2487_g = _238a2529d_probeStart(_2473_hi, (*(*(_self_))._field_data.alloc)._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2508_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)])), _2477_lo);;
			while ((_2508_matches != 0LLU)) {
				{
					jule::U32 _2525_s = _238a24027_nextMatch(&(_2508_matches));;
					if ((_24323_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2525_s)])) {
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2525_s)]=_24323_k;
						__jule_func_result=(&((*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_values[static_cast<jule::I64>(_2525_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1d6746263:;
			}
			_iter_end_1d6746263:;;
			_2508_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)])));
			if ((_2508_matches != 0LLU)) {
				jule::U32 _2635_s = _238a24027_nextMatch(&(_2508_matches));;
				(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_keys[static_cast<jule::I64>(_2635_s)]=_24323_k;
				__jule_func_result=(&((*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2487_g)]._field_values[static_cast<jule::I64>(_2635_s)]));
				(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2487_g)][static_cast<jule::I64>(_2635_s)]=static_cast<jule::I8>(_2477_lo);
				((*(*(_self_))._field_data.alloc)._field_resident)++;
				return __jule_func_result;;
			};
			_2487_g+=1LLU;
			if ((_2487_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2487_g=0LLU;
			};
		}
	_iter_next_1d6744d33:;
	}
	_iter_end_1d6744d33:;;
}



inline jule::Bool _1d83723a9_del(_1d83713ec__Map* _self_, jule::Ptr<_1c666d4ec_FnIns> _27823_k) {
	jule::Bool __jule_func_result = false;
	if (_1d8371870_isNil(_self_)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2823_hi;
	jule::I8 _2827_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _238a24ea1_splitHash(_1d8371b06_hash(_self_, _27823_k));
		_2823_hi = __jule_assign_result.__jule_result_arg0;
		_2827_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2837_g = _238a2529d_probeStart(_2823_hi, (*((*(_self_))._field_data))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2858_matches = _238a23950_metaMatchH2((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)])), _2827_lo);;
			while ((_2858_matches != 0LLU)) {
				{
					jule::U32 _2875_s = _238a24027_nextMatch(&(_2858_matches));;
					if ((_27823_k == (*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_keys[static_cast<jule::I64>(_2875_s)])) {
						__jule_func_result=true;
						if ((_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)]))) != 0LLU)) {
							(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)][static_cast<jule::I64>(_2875_s)]=-128LL;
							((*(*(_self_))._field_data.alloc)._field_resident)--;
						} else {
							(*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)][static_cast<jule::I64>(_2875_s)]=-2LL;
							((*(*(_self_))._field_data.alloc)._field_dead)++;
						};
						jule::Ptr<_1c666d4ec_FnIns> _30414_key;;
						jule::Slice<jule::Uintptr> _30514_val;;
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_keys[static_cast<jule::I64>(_2875_s)]=_30414_key;
						(*(*(_self_))._field_data.alloc)._field_groups[static_cast<jule::I64>(_2837_g)]._field_values[static_cast<jule::I64>(_2875_s)]=_30514_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1d674ece9:;
			}
			_iter_end_1d674ece9:;;
			_2858_matches=_238a23c5d_metaMatchEmpty((&((*(*(_self_))._field_data.alloc)._field_ctrl[static_cast<jule::I64>(_2837_g)])));
			if ((_2858_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2837_g+=1LLU;
			if ((_2837_g >= static_cast<jule::U32>((*(*(_self_))._field_data.alloc)._field_groups.len()))) {
				_2837_g=0LLU;
			};
		}
	_iter_next_1d674d8b9:;
	}
	_iter_end_1d674d8b9:;;
}



inline void _1d83724ec_clear(_1d83713ec__Map* _self_) {
	if (_1d8371870_isNil(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_self_))._field_data))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6756eaa:;
		if (it != expr_end) {
			jule::I64 _3307_i = it - expr->begin();
			jule::Array<jule::I8,8> _33010_c = *it;
			{
				{
					auto expr = &(_33010_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6757928:;
					if (it != expr_end) {
						jule::I64 _3318_j = it - expr->begin();
						{
							(*((*(_self_))._field_data))._field_ctrl[_3307_i][_3318_j]=-128LL;
						}
						_iter_next_1d6757928:;
						++it;
						_3318_j++;
						goto _iter_begin_1d6757928;
					}
					_iter_end_1d6757928:;
				};
			}
			_iter_next_1d6756eaa:;
			++it;
			_3307_i++;
			goto _iter_begin_1d6756eaa;
		}
		_iter_end_1d6756eaa:;
	};
	jule::Ptr<_1c666d4ec_FnIns> _33511_k;;
	jule::Slice<jule::Uintptr> _33611_v;;
	{
		auto expr = &((*(*(_self_))._field_data.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6758c15:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			{
				_1d8374466_group* _3388_g = (&((*((*(_self_))._field_data))._field_groups[_3377_i]));;
				{
					{
						auto expr = &((*(_3388_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d675a310:;
						if (it != expr_end) {
							jule::I64 _3409_j = it - expr->begin();
							{
								(*(_3388_g))._field_keys[_3409_j]=_33511_k;
								(*(_3388_g))._field_values[_3409_j]=_33611_v;
							}
							_iter_next_1d675a310:;
							++it;
							_3409_j++;
							goto _iter_begin_1d675a310;
						}
						_iter_end_1d675a310:;
					};
				};
			}
			_iter_next_1d6758c15:;
			++it;
			_3377_i++;
			goto _iter_begin_1d6758c15;
		}
		_iter_end_1d6758c15:;
	};
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		(*(*(_self_))._field_data.alloc)._field_resident = ___jule_assign_arg;
		(*(*(_self_))._field_data.alloc)._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I64 _1d8372640_len(_1d83713ec__Map* _self_) {
	return ((*((*(_self_))._field_data))._field_resident - (*(*(_self_))._field_data.alloc)._field_dead);;
}



inline jule::I64 _1d8372783_cap(_1d83713ec__Map* _self_) {
	return ((*((*(_self_))._field_data))._field_limit - (*(*(_self_))._field_data.alloc)._field_resident);;
}



inline _1d8379416_mapIterator _1d83728d7_iterator(_1d83713ec__Map* _self_) {
	_1d8379416_mapIterator _3577_iterator = _1d8379416_mapIterator{._field_m=(*(_self_)), ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1d8374466_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1d8379999_init(&_3577_iterator);
	return _3577_iterator;;
}







inline void _1d8330961_init(_1d83303cd_mapIterator* _self_) {
	if ((!(_1d8325703_isNil(&(*(_self_))._field_m)))) {
		({
			jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m._field_data))._field_ctrl;
			jule::Slice<_1d8328492_group> _1___jule_assign_arg = (*(*(_self_))._field_m._field_data.alloc)._field_groups;
			(*(_self_))._field_ctrl = ___jule_assign_arg;
			(*(_self_))._field_groups = _1___jule_assign_arg;
		});
		(*(_self_))._field_g=_239890238_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1d8330ab5_next(_1d83303cd_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _3944_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _3965_c = (*(_3944_ctrl))[(*(_self_))._field_s];;
					if (((_3965_c == -128LL) || (_3965_c == -2LL))) {
						goto _iter_next_1d8337d86;
					};
					jule::Str* _4009_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4019_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4009_k;
					__jule_func_result.__jule_result_arg1 = _4019_v;
					return __jule_func_result;;
				}
			_iter_next_1d8337d86:;
			}
			_iter_end_1d8337d86:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1d8334c95:;
	}
	_iter_end_1d8334c95:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1d8379999_init(_1d8379416_mapIterator* _self_) {
	if ((!(_1d8371870_isNil(&(*(_self_))._field_m)))) {
		({
			jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m._field_data))._field_ctrl;
			jule::Slice<_1d8374466_group> _1___jule_assign_arg = (*(*(_self_))._field_m._field_data.alloc)._field_groups;
			(*(_self_))._field_ctrl = ___jule_assign_arg;
			(*(_self_))._field_groups = _1___jule_assign_arg;
		});
		(*(_self_))._field_g=_239890238_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1c666d4ec_FnIns__jule_tuple_psuintptr _1d8379aed_next(_1d8379416_mapIterator* _self_) {
	__jule_tuple_px_1c666d4ec_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _3944_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _3965_c = (*(_3944_ctrl))[(*(_self_))._field_s];;
					if (((_3965_c == -128LL) || (_3965_c == -2LL))) {
						goto _iter_next_1d8381ee0;
					};
					jule::Ptr<_1c666d4ec_FnIns>* _4009_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4019_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4009_k;
					__jule_func_result.__jule_result_arg1 = _4019_v;
					return __jule_func_result;;
				}
			_iter_next_1d8381ee0:;
			}
			_iter_end_1d8381ee0:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1d837ddee:;
	}
	_iter_end_1d837ddee:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _20759e353_StrBuilder static__2075a7c41_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _20759e353_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _2075a7d95_Write(_20759e353_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _2075a814d_WriteStr(_20759e353_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _2075a8406_WriteByte(_20759e353_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _2075a8945_Str(_20759e353_StrBuilder* _self_) {
	jule::Str _507_s = _220024453_StrFromBytes((*(_self_))._field_buf);;
	_2075a8b43_Clear(_self_);
	return _507_s;;
}



inline void _2075a8b43_Clear(_20759e353_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _2075a8dc9_Len(_20759e353_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _2075a93e6_Buf(_20759e353_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _2075a969e_SetBuf(_20759e353_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}








inline jule::Bool _208724a8d_Range16_eq(_208724a8d_Range16 *_self_, _208724a8d_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _2087250bb_Range32_eq(_2087250bb_Range32 *_self_, _2087250bb_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _2087732e5_index(_208772d2d_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _20877359d_append(_208772d2d_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _208773834_string(_208772d2d_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _220024189_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _238ad88a0_DirEntry_eq(_238ad88a0_DirEntry *_self_, _238ad88a0_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}






inline jule::Bool _238ad8b36_Directory_eq(_238ad8b36_Directory *_self_, _238ad8b36_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>> static__208775bee_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_238ad88a0_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _220021dac_UTF16FromStr(_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _2210a4834_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_238ad88a0_DirEntry> _238_entry = jule::new_ptr<_238ad88a0_DirEntry>(_238ad88a0_DirEntry{._field_Name=_220022484_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), ._field_Stat=jule::Ptr<_238adbe69_Status>(nullptr)});;
			(*(_238_entry))._field_Stat=({
				auto except = static__208776abd_Of(_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = (*_238_entry.alloc)._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>>{.error=except.error};
				} jule::Ptr<_238adbe69_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_238ad88a0_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_2210a4ba8_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1d5d3e7a2;
			};
		}
	_iter_next_1d5d3e7a2:;
	}
	_iter_end_1d5d3e7a2:;;
	_2210a4e72_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__208775e30_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _220021dac_UTF16FromStr(_3919_path);;
	if ((!(_2210a2535_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__208776161_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _220021dac_UTF16FromStr(_5319_path);;
	if ((!(_2210a27ee_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _238ad9d35_File_eq(_238ad9d35_File *_self_, _238ad9d35_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_238ad9d35_File> static__238ada286_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_238ad9d35_File>(_238ad9d35_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_238ad9d35_File>> static__238ada550_Create(jule::Str _5519_path) {
	return static__238add883_Open(_5519_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__238ada819_Read(jule::Str _6717_path) {
	jule::Ptr<_238adbe69_Status> _683_s = ({
		auto except = static__208776abd_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_238adbe69_Status>(nullptr);});
	});;
	if ((!(_238adc60c_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_238adc893_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_238adc893_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_238ad9d35_File> _867_f = ({
		auto except = static__238add883_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_238ad9d35_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _238ade389_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1d5d480c4;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1d5d480c4:;
	}
	_iter_end_1d5d480c4:;;
	({
		auto except = _238adb3ec_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__238adabb0_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_238ad9d35_File> _1067_f = ({
		auto except = static__238add883_Open(_10518_path, static_cast<jule::I64>(769LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_238ad9d35_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _238ade048_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1d5d4d4d6:;
	}
	_iter_end_1d5d4d4d6:;;
	return _238adb3ec_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _238adb3ec_Close(_238ad9d35_File* _self_) {
	if ((_2210a742a_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_238ad9d35_File>> static__238add883_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _220021dac_UTF16FromStr(_2217_path);;
	jule::I64 _243_handle = _2210a1655_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_238ad9d35_File>>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_238ad9d35_File>>{.result=static__238ada286_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__238addab4_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _220021dac_UTF16FromStr(_3519_path);;
	if ((!(_2210a226b_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _238ade048_Write(_238ad9d35_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_2066c7bdb_handleRW(&(_5021_buf));
	if (_238ade6ca_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_2066b2b2c_writeConsole((*(_self_))._field_handle, _5021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_2210a77d2_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _238ade389_Read(_238ad9d35_File* _self_, jule::Slice<jule::U8> _8024_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8024_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_2066c7bdb_handleRW(&(_8024_buf));
	if (_238ade6ca_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_2066b2ea1_readConsole((*(_self_))._field_handle, _8024_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	__jule_func_result=_2210a7051_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8024_buf[0LL])), static_cast<jule::U64>(_8024_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}








inline jule::Bool _238adbe69_Status_eq(_238adbe69_Status *_self_, _238adbe69_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _238adc376_IsDir(_238adbe69_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _238adc60c_IsReg(_238adbe69_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _238adc893_Size(_238adbe69_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_238adbe69_Status>> static__208776abd_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_238adbe69_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _220021dac_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I64 _183_code = _2210a1226_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_238adbe69_Status>>{.error=jule::Any(_238ad82ea_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_238adbe69_Status> _227_stat = jule::new_ptr<_238adbe69_Status>(_238adbe69_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_238adbe69_Status>>{.result=_227_stat};;
}








inline jule::Bool _20881dc64_cmdAttrs_eq(_20881dc64_cmdAttrs *_self_, _20881dc64_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _20806e73a_Log_eq(_20806e73a_Log *_self_, _20806e73a_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1dd6e85b5_floatInfo_eq(_1dd6e85b5_floatInfo *_self_, _1dd6e85b5_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1dd70b485_leftCheat_eq(_1dd70b485_leftCheat *_self_, _1dd70b485_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1dd70be9c_decimal_eq(_1dd70be9c_decimal *_self_, _1dd70be9c_decimal _other_) {
	return 
		_1d612a2c9_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1dd703911_set(_1dd70be9c_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1d631a4b9:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1d631a651:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1d631a453:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1d631c09d:;
					{
						goto _iter_next_1d631b82d;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1d631c147:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1d631b82d;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1d631c1ad:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1d631b82d;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1d631b82d;
					}
				}
				_match_end_1d631be6b:;
			};
			goto _iter_end_1d631b82d;
		}
	_iter_next_1d631b82d:;
	}
	_iter_end_1d631b82d:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1dd6ede06_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1d6322ec7;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1d6322ec7:;
		}
		_iter_end_1d6322ec7:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dd703c52_floatBits(_1dd70be9c_decimal* _self_, _1dd6e85b5_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1d6331a1e;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1d6330a73;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1d6331a1e;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dd70359d_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1dd70359d_powtab[(*(_self_))._field_dp];
			};
			_1dd70c640_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1d6328384:;
	}
	_iter_end_1d6328384:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dd70359d_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1dd70359d_powtab[(-((*(_self_))._field_dp))];
			};
			_1dd70c640_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1d63268d2:;
	}
	_iter_end_1d63268d2:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1dd70c640_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1d6330a73;
	};
	_1dd70c640_shift(_self_, static_cast<jule::I64>((jule::U64)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1dd70d1e0_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1d6330a73;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1d6331a1e;
	_julec_label_1d6330a73:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((jule::U64)((jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1d6331a1e:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dd70c387_assign(_1dd70be9c_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1d6334291:;
	}
	_iter_end_1d6334291:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1d6334c0e:;
	}
	_iter_end_1d6334c0e:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1dd70d7ea_trim(_self_);
}



inline void _1dd70c640_shift(_1dd70be9c_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1d6336b89:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1d6336c33:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1dd70e345_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1d6337838:;
				}
				_iter_end_1d6337838:;;
				_1dd70e345_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1d6336c99:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1dd70dad6_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1d633775b:;
				}
				_iter_end_1d633775b:;;
				_1dd70dad6_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1d6336a24:;
	};
}



inline void _1dd70c8e8_roundDown(_1dd70be9c_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1dd70d7ea_trim(_self_);
}



inline void _1dd70cba1_roundUp(_1dd70be9c_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1d633abe3:;
	}
	_iter_end_1d633abe3:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1dd70ce59_round(_1dd70be9c_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1dd70e6b9_shouldRoundUp(_self_, _23221_nd)) {
		_1dd70cba1_roundUp(_self_, _23221_nd);
	} else {
		_1dd70c8e8_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1dd70d1e0_roundedInteger(_1dd70be9c_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1d633db4c:;
	}
	_iter_end_1d633db4c:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1d6340b4e:;
	}
	_iter_end_1d6340b4e:;;
	if (_1dd70e6b9_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}







inline jule::Ptr<_1dd71e850_Const> static__1dd71ecc3_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1dd71e850_Const> static__1dd72008c_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1dd71e850_Const> static__1dd720356_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1dd71e850_Const> static__1dd720620_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1dd71e850_Const> static__1dd7208d9_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1dd71e850_Const> static__1dd720ae8_NewNil(void) {
	return jule::new_ptr<_1dd71e850_Const>(_1dd71e850_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1dd721258_ReadI64(_1dd71e850_Const* _self_) {
	if ((!(_1dd723854_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1dd7214de_ReadU64(_1dd71e850_Const* _self_) {
	if ((!(_1dd723ada_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1dd721775_ReadBool(_1dd71e850_Const* _self_) {
	if ((!(_1dd723d71_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1dd721a0b_ReadStr(_1dd71e850_Const* _self_) {
	if ((!(_1dd724107_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1dd721c92_ReadF64(_1dd71e850_Const* _self_) {
	if ((!(_1dd72438d_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1dd722028_AsI64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d63b1120:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d63b1a6b:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d63b1ad2:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1d63b15c6:;
			{
				return 0LL;;
			}
		}
		_match_end_1d63b142d:;
	};
}



inline jule::U64 _1dd7222ae_AsU64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d63b26b5:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d63b33db:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d63b3452:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1d63b2b8d:;
			{
				return 0LLU;;
			}
		}
		_match_end_1d63b2b27:;
	};
}



inline jule::F64 _1dd722545_AsF64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d63b4e48:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d63b4024:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d63b4c39:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1d63b44db:;
			{
				return 0LL;;
			}
		}
		_match_end_1d63b4475:;
	};
}



inline void _1dd7227ed_SetI64(_1dd71e850_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1dd722aa6_SetU64(_1dd71e850_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1dd722d5e_SetBool(_1dd71e850_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1dd723117_SetStr(_1dd71e850_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1dd7233c0_SetF64(_1dd71e850_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1dd723854_IsI64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d63b8842:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d63b8a73:;
			{
				return false;;
			}
		}
		_match_end_1d63b8a0c:;
	};
}



inline jule::Bool _1dd723ada_IsU64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d63b93d1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d63b8ba5:;
			{
				return false;;
			}
		}
		_match_end_1d63b8b3e:;
	};
}



inline jule::Bool _1dd723d71_IsBool(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1d63b9821:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d63b9d0a:;
			{
				return false;;
			}
		}
		_match_end_1d63b9c94:;
	};
}



inline jule::Bool _1dd724107_IsStr(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d63ba2a0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d63ba789:;
			{
				return false;;
			}
		}
		_match_end_1d63ba723:;
	};
}



inline jule::Bool _1dd72438d_IsF64(_1dd71e850_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d63bac2e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d63bb218:;
			{
				return false;;
			}
		}
		_match_end_1d63bb1a2:;
	};
}



inline jule::Bool _1dd724624_IsNil(_1dd71e850_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1dd724ca6_And(_1dd71e850_Const* _self_, _1dd71e850_Const _23815_x) {
	{
		
		if ((_1dd723d71_IsBool(_self_) && _1dd723d71_IsBool(&_23815_x))) {
			_case_begin_1d63c06b2:;
			{
				return (_1dd721775_ReadBool(_self_) && _1dd721775_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1d63c064b:;
			{
				return false;;
			}
		}
		_match_end_1d63c020b:;
	};
}



inline jule::Bool _1dd7250e7_Or(_1dd71e850_Const* _self_, _1dd71e850_Const _24914_x) {
	{
		
		if ((_1dd723d71_IsBool(_self_) && _1dd723d71_IsBool(&_24914_x))) {
			_case_begin_1d63c19b0:;
			{
				return (_1dd721775_ReadBool(_self_) || _1dd721775_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1d63c1196:;
			{
				return false;;
			}
		}
		_match_end_1d63c10a8:;
	};
}



inline jule::Bool _1dd725438_Eq(_1dd71e850_Const* _self_, _1dd71e850_Const _26014_x) {
	{
		
		if (_1dd724624_IsNil(_self_)) {
			_case_begin_1d63c2d24:;
			{
				return _1dd724624_IsNil(&_26014_x);;
			}
		}
		else if (_1dd723d71_IsBool(_self_)) {
			_case_begin_1d63c2d8a:;
			{
				return (_1dd723d71_IsBool(&_26014_x) && (_1dd721775_ReadBool(_self_) == _1dd721775_ReadBool(&_26014_x)));;
			}
		}
		else if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63c2e01:;
			{
				return (_1dd724107_IsStr(&_26014_x) && (_1dd721a0b_ReadStr(_self_) == _1dd721a0b_ReadStr(&_26014_x)));;
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63c2e78:;
			{
				return (_1dd721258_ReadI64(_self_) == _1dd722028_AsI64(&_26014_x));;
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63c3000:;
			{
				return (_1dd7214de_ReadU64(_self_) == _1dd7222ae_AsU64(&_26014_x));;
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63c3198:;
			{
				return (_1dd721c92_ReadF64(_self_) == _1dd722545_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1d63c2483:;
			{
				return false;;
			}
		}
		_match_end_1d63c2395:;
	};
}



inline jule::Bool _1dd725779_Lt(_1dd71e850_Const* _self_, _1dd71e850_Const _28714_x) {
	{
		
		if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63c6a4d:;
			{
				return (_1dd724107_IsStr(&_28714_x) && (_1dd721a0b_ReadStr(_self_) < _1dd721a0b_ReadStr(&_28714_x)));;
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63c6ab4:;
			{
				return (_1dd721258_ReadI64(_self_) < _1dd722028_AsI64(&_28714_x));;
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63c6b2a:;
			{
				return (_1dd7214de_ReadU64(_self_) < _1dd7222ae_AsU64(&_28714_x));;
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63c6ba2:;
			{
				return (_1dd721c92_ReadF64(_self_) < _1dd722545_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1d63c37d6:;
			{
				return false;;
			}
		}
		_match_end_1d63c3709:;
	};
}



inline jule::Bool _1dd725aba_LtEq(_1dd71e850_Const* _self_, _1dd71e850_Const _31016_x) {
	{
		
		if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63c9754:;
			{
				return (_1dd724107_IsStr(&_31016_x) && (_1dd721a0b_ReadStr(_self_) <= _1dd721a0b_ReadStr(&_31016_x)));;
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63c97ba:;
			{
				return (_1dd721258_ReadI64(_self_) <= _1dd722028_AsI64(&_31016_x));;
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63c9831:;
			{
				return (_1dd7214de_ReadU64(_self_) <= _1dd7222ae_AsU64(&_31016_x));;
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63c98a8:;
			{
				return (_1dd721c92_ReadF64(_self_) <= _1dd722545_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1d63c7411:;
			{
				return false;;
			}
		}
		_match_end_1d63c7334:;
	};
}



inline jule::Bool _1dd725e0b_Gt(_1dd71e850_Const* _self_, _1dd71e850_Const _33314_x) {
	{
		
		if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63cc45a:;
			{
				return (_1dd724107_IsStr(&_33314_x) && (_1dd721a0b_ReadStr(_self_) > _1dd721a0b_ReadStr(&_33314_x)));;
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63cc4c1:;
			{
				return (_1dd721258_ReadI64(_self_) > _1dd722028_AsI64(&_33314_x));;
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63cc537:;
			{
				return (_1dd7214de_ReadU64(_self_) > _1dd7222ae_AsU64(&_33314_x));;
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63cc5ae:;
			{
				return (_1dd721c92_ReadF64(_self_) > _1dd722545_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1d63ca117:;
			{
				return false;;
			}
		}
		_match_end_1d63ca03a:;
	};
}



inline jule::Bool _1dd72624c_GtEq(_1dd71e850_Const* _self_, _1dd71e850_Const _35616_x) {
	{
		
		if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63d0161:;
			{
				return (_1dd724107_IsStr(&_35616_x) && (_1dd721a0b_ReadStr(_self_) >= _1dd721a0b_ReadStr(&_35616_x)));;
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63d01c7:;
			{
				return (_1dd721258_ReadI64(_self_) >= _1dd722028_AsI64(&_35616_x));;
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63d023d:;
			{
				return (_1dd7214de_ReadU64(_self_) >= _1dd7222ae_AsU64(&_35616_x));;
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63d02b5:;
			{
				return (_1dd721c92_ReadF64(_self_) >= _1dd722545_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1d63ccd1d:;
			{
				return false;;
			}
		}
		_match_end_1d63ccc41:;
	};
}



inline jule::Bool _1dd72658d_Add(_1dd71e850_Const* _self_, _1dd71e850_Const _37719_x) {
	{
		
		if (_1dd724107_IsStr(_self_)) {
			_case_begin_1d63d2d67:;
			{
				if ((!(_1dd724107_IsStr(&_37719_x)))) {
					return false;;
				};
				_1dd723117_SetStr(_self_, (_1dd721a0b_ReadStr(_self_) + _1dd721a0b_ReadStr(&_37719_x)));
			}
		}
		else if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63d2dcd:;
			{
				_1dd7233c0_SetF64(_self_, (_1dd721c92_ReadF64(_self_) + _1dd722545_AsF64(&_37719_x)));
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63d2e44:;
			{
				if (_1dd72438d_IsF64(&_37719_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) + _1dd721c92_ReadF64(&_37719_x)));
				} else {
					_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) + _1dd722028_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63d2ebb:;
			{
				if (_1dd72438d_IsF64(&_37719_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) + _1dd721c92_ReadF64(&_37719_x)));
				} else {
					_1dd722aa6_SetU64(_self_, (jule::U64)(_1dd7214de_ReadU64(_self_) + _1dd7222ae_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1d63d0a24:;
			{
				return false;;
			}
		}
		_match_end_1d63d0947:;
	};
	return true;;
}



inline jule::Bool _1dd7268ce_Sub(_1dd71e850_Const* _self_, _1dd71e850_Const _40619_x) {
	{
		
		if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63d7b91:;
			{
				_1dd7233c0_SetF64(_self_, (_1dd721c92_ReadF64(_self_) - _1dd722545_AsF64(&_40619_x)));
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63d7c07:;
			{
				if (_1dd72438d_IsF64(&_40619_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) - _1dd721c92_ReadF64(&_40619_x)));
				} else {
					_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) - _1dd722028_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63d7c6d:;
			{
				if (_1dd72438d_IsF64(&_40619_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) - _1dd721c92_ReadF64(&_40619_x)));
				} else {
					_1dd722aa6_SetU64(_self_, (jule::U64)(_1dd7214de_ReadU64(_self_) - _1dd7222ae_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1d63d73cc:;
			{
				return false;;
			}
		}
		_match_end_1d63d72cd:;
	};
	return true;;
}



inline jule::Bool _1dd726c20_Mul(_1dd71e850_Const* _self_, _1dd71e850_Const _43019_x) {
	{
		
		if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63dbaa7:;
			{
				_1dd7233c0_SetF64(_self_, (_1dd721c92_ReadF64(_self_) * _1dd722545_AsF64(&_43019_x)));
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63dbb1d:;
			{
				if (_1dd72438d_IsF64(&_43019_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) * _1dd721c92_ReadF64(&_43019_x)));
				} else {
					_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) * _1dd722028_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63dbb84:;
			{
				if (_1dd72438d_IsF64(&_43019_x)) {
					_1dd7233c0_SetF64(_self_, (_1dd722545_AsF64(_self_) * _1dd721c92_ReadF64(&_43019_x)));
				} else {
					_1dd722aa6_SetU64(_self_, (jule::U64)(_1dd7214de_ReadU64(_self_) * _1dd7222ae_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1d63db17d:;
			{
				return false;;
			}
		}
		_match_end_1d63db090:;
	};
	return true;;
}



inline jule::Bool _1dd727061_Div(_1dd71e850_Const* _self_, _1dd71e850_Const _45819_x) {
	{
		
		if (_1dd72438d_IsF64(_self_)) {
			_case_begin_1d63e09ac:;
			{
				jule::F64 _4614_l = _1dd722545_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1dd7233c0_SetF64(_self_, ({ jule::F64 __jule_x = _1dd721c92_ReadF64(_self_); jule::F64 __jule_y = _4614_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63e0a23:;
			{
				jule::F64 _4674_l = _1dd722545_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1dd7233c0_SetF64(_self_, ({ jule::F64 __jule_x = _1dd722545_AsF64(_self_); jule::F64 __jule_y = _4674_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63e0a89:;
			{
				jule::F64 _4734_l = _1dd722545_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1dd7233c0_SetF64(_self_, ({ jule::F64 __jule_x = _1dd722545_AsF64(_self_); jule::F64 __jule_y = _4734_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1d63e0083:;
			{
				return false;;
			}
		}
		_match_end_1d63dee95:;
	};
	return true;;
}



inline jule::Bool _1dd7273a2_Mod(_1dd71e850_Const* _self_, _1dd71e850_Const _48719_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63e4890:;
			{
				jule::I64 _4904_l = _1dd722028_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1dd7227ed_SetI64(_self_, ({ jule::I64 __jule_x = _1dd721258_ReadI64(_self_); jule::I64 __jule_y = _4904_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63e4c9c:;
			{
				jule::U64 _4964_l = _1dd7222ae_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1dd722aa6_SetU64(_self_, ({ jule::U64 __jule_x = _1dd7214de_ReadU64(_self_); jule::U64 __jule_y = _4964_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1d63e4818:;
			{
				return false;;
			}
		}
		_match_end_1d63e4708:;
	};
	return true;;
}



inline jule::Bool _1dd7276e3_BitwiseAnd(_1dd71e850_Const* _self_, _1dd71e850_Const _50926_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63e770b:;
			{
				_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) & _1dd722028_AsI64(&_50926_x)));
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63e7b18:;
			{
				_1dd722aa6_SetU64(_self_, (_1dd7214de_ReadU64(_self_) & _1dd7222ae_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1d63e7684:;
			{
				return false;;
			}
		}
		_match_end_1d63e7574:;
	};
	return true;;
}



inline jule::Bool _1dd727a34_BitwiseOr(_1dd71e850_Const* _self_, _1dd71e850_Const _52325_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63e94cc:;
			{
				_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) | _1dd722028_AsI64(&_52325_x)));
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63e98d9:;
			{
				_1dd722aa6_SetU64(_self_, (_1dd7214de_ReadU64(_self_) | _1dd7222ae_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1d63e9455:;
			{
				return false;;
			}
		}
		_match_end_1d63e9345:;
	};
	return true;;
}



inline jule::Bool _1dd727d75_Xor(_1dd71e850_Const* _self_, _1dd71e850_Const _53719_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63eb29d:;
			{
				_1dd7227ed_SetI64(_self_, (_1dd721258_ReadI64(_self_) ^ _1dd722028_AsI64(&_53719_x)));
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63eb6aa:;
			{
				_1dd722aa6_SetU64(_self_, (_1dd7214de_ReadU64(_self_) ^ _1dd7222ae_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1d63eb226:;
			{
				return false;;
			}
		}
		_match_end_1d63eb116:;
	};
	return true;;
}



inline jule::Bool _1dd7281b6_Lshift(_1dd71e850_Const* _self_, _1dd71e850_Const _55122_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d63ed06e:;
			{
				jule::I64 _5544_l = _1dd722028_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1dd7222ae_AsU64(&_55122_x);;
					_1dd7227ed_SetI64(_self_, ({ jule::I64 __jule_x = _5544_l; jule::U64 __jule_y = _5565_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1dd72886a_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d63ed47b:;
			{
				_1dd72886a_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1d63ecee7:;
			{
				return false;;
			}
		}
		_match_end_1d63ecdd7:;
	};
	return true;;
}



inline jule::Bool _1dd728507_Rshift(_1dd71e850_Const* _self_, _1dd71e850_Const _57122_x) {
	{
		
		if (_1dd723854_IsI64(_self_)) {
			_case_begin_1d6400604:;
			{
				jule::I64 _5744_l = _1dd722028_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1dd7222ae_AsU64(&_57122_x);;
					_1dd7227ed_SetI64(_self_, ({ jule::I64 __jule_x = _5744_l; jule::U64 __jule_y = _5765_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1dd728b9a_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1dd723ada_IsU64(_self_)) {
			_case_begin_1d6400a11:;
			{
				_1dd728b9a_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1d640057c:;
			{
				return false;;
			}
		}
		_match_end_1d640047d:;
	};
	return true;;
}








inline jule::Bool _1c661e327_Token_eq(_1c661e327_Token *_self_, _1c661e327_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1c661e6ce_Prec(_1c661e327_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1c729690a:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1c72963ee:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1c7296465:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1c7296971:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1c72969e8:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c7295e37:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c7296311:;
	};
}







inline void _1c662500e_Fill(_1c6624aad_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1c6625295_Dir(_1c6624aad_File* _self_) {
	return _2087752c5_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c662552b_Name(_1c6624aad_File* _self_) {
	return _208774deb_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c6625b03_GetRow(_1c6624aad_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1c729c1b3;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return __jule_bytesToStr((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1c729c1b3:;
	}
	_iter_end_1c729c1b3:;;
	return jule::Str();;
}








inline jule::Bool _1c6626c14_kindPair_eq(_1c6626c14_kindPair *_self_, _1c6626c14_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1c662d2ae_pushErr(_1c662cbe8_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_20806e73a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c66279b2_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1c662d820_lex(_1c662cbe8_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c6630a42_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c661e327_Token> _4628_token = _1c663202c_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c661e327_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1c72ca202:;
	}
	_iter_end_1c72ca202:;;
}



inline jule::Str _1c662db61_id(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1c6622a56_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1c6622ec9_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1c6622a56_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return __jule_bytesToStr((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1c72cd37b:;
	}
	_iter_end_1c72cd37b:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return __jule_bytesToStr((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1c662dde7_resume(_1c662cbe8_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1c662255b_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c72d26b0:;
						{
							_1c6630a42_newLine(_self_);
						}
					}
					else {
						_case_begin_1c72d1e84:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c72d225e:;
				};
				goto _iter_next_1c72cd0b2;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1c72d1a55;
					};
				}
			_iter_next_1c72d1a55:;
			}
			_iter_end_1c72d1a55:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1c72cd0b2:;
	}
	_iter_end_1c72cd0b2:;;
	return nullptr;;
}



inline void _1c662e1a0_lexLineComment(_1c662cbe8_lex* _self_, jule::Ptr<_1c661e327_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1c72d4c89;
			};
		}
	_iter_next_1c72d4c89:;
	}
	_iter_end_1c72d4c89:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1c662e458_lexRangeComment(_1c662cbe8_lex* _self_, jule::Ptr<_1c661e327_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1c72d8430;
			};
			if ((_5404_r == '\n')) {
				_1c6630a42_newLine(_self_);
				goto _iter_next_1c72d8430;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=__jule_bytesToStr((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c72d8430:;
	}
	_iter_end_1c72d8430:;;
	_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1c662e799_num(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c662b510_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c72e00e6;
	};
	__jule_func_result=_1c662b334_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c72e00e6;
	};
	__jule_func_result=_1c6629ac4_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c72e00e6;
	};
	__jule_func_result=_1c662980a_commonNum(_56420_txt);
	_julec_label_1c72e00e6:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c662eada_escapeSeq(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1c72e3dec;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c72e1b64:;
			{
				(*(_self_))._field_pos+=2LL;
				return __jule_bytesToStr((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c72e1bca:;
			{
				_5877_seq=_1c662bb2b_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c72e1845:;
			{
				_5877_seq=_1c662bde5_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c72e18ab:;
			{
				_5877_seq=_1c662c1ae_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1c72e1119:;
			{
				_5877_seq=_1c662c478_byteEscape(_58626_txt);
			}
		}
		_match_end_1c72e16be:;
	};
	_julec_label_1c72e3dec:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1c662eed6_getRune(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1c662eada_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return __jule_strFromRune(_6203_r);;
}



inline jule::Str _1c6630327_lexRune(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_20759e353_StrBuilder _6267_run = static__2075a7c41_New(8LL);;
	_2075a8406_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1c72e7c03;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c6630a42_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1c662eed6_getRune(_self_, &(_6424_part), false);;
			_2075a814d_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_2066b1752_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c72e7c03;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1c72e7c03:;
	}
	_iter_end_1c72e7c03:;;
	if ((_6297_n == 0LL)) {
		_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _2075a8945_Str(&_6267_run);;
}



inline jule::Str _1c66305ad_lexStr(_1c662cbe8_lex* _self_) {
	_20759e353_StrBuilder _6667_s = static__2075a7c41_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_2075a8406_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1c72eda50;
			};
			if ((_6744_ch == '\n')) {
				_1c6630a42_newLine(_self_);
				if ((!(_6693_raw))) {
					_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1c662eed6_getRune(_self_, &(_6868_part), _6693_raw);;
			_2075a814d_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_2066b1752_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1c72eda50;
			};
		}
	_iter_next_1c72eda50:;
	}
	_iter_end_1c72eda50:;;
	return _2075a8945_Str(&_6667_s);;
}



inline void _1c6630a42_newLine(_1c662cbe8_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c66310a3_isOp(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c661e327_Token>* _70763_t) {
	if ((!(_1c6627d7a_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1c663149e_lexBasicOps(_1c662cbe8_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c661e327_Token>* _71745_tok) {
	{
		auto expr = &(_1c6627473_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c730520a:;
		if (it != expr_end) {
			_1c6626c14_kindPair *_71810_pair = it;
			{
				if (_1c66310a3_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1c730520a:;
			++it;
			goto _iter_begin_1c730520a;
		}
		_iter_end_1c730520a:;
	};
	return false;;
}



inline jule::Bool _1c663189a_lexId(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c661e327_Token>* _72640_t) {
	jule::Str _7273_lex = _1c662db61_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1c6631c96_lexNum(_1c662cbe8_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c661e327_Token>* _73641_t) {
	jule::Str _7373_lex = _1c662e799_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c661e327_Token> _1c663202c_token(_1c662cbe8_lex* _self_) {
	jule::Ptr<_1c661e327_Token> _7487_t = jule::new_ptr<_1c661e327_Token>(_1c661e327_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1c662dde7_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c6631c96_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1c730c3bb:;
			{
				goto _match_end_1c730a276;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1c730add1:;
			{
				(*_7487_t.alloc)._field_Kind=_1c6630327_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1c730ae47:;
			{
				(*_7487_t.alloc)._field_Kind=_1c66305ad_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1c6627d7a_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1c730aead:;
			{
				_1c662e1a0_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1c6627d7a_bytesHasPrefix(&(_7533_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1c730b024:;
			{
				_1c662e458_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1c663149e_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1c730b08a:;
			{
				goto _match_end_1c730a276;
			}
		}
		else if (_1c663189a_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1c730b101:;
			{
				{
					auto expr = &(_1c6627143_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c7311414:;
					if (it != expr_end) {
						_1c6626c14_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1c7311414;
							};
						}
						_iter_next_1c7311414:;
						++it;
						goto _iter_begin_1c7311414;
					}
					_iter_end_1c7311414:;
				};
			}
		}
		else {
			_case_begin_1c730ad6a:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c662d2ae_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1c730a276:;
	};
	(*(_self_))._field_column+=_2066b1752_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}












inline jule::Bool _1c6633902_Node_eq(_1c6633902_Node *_self_, _1c6633902_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1c6634903_TypeDecl_eq(_1c6634903_TypeDecl *_self_, _1c6634903_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1c663599d_SptrTypeDecl_eq(_1c663599d_SptrTypeDecl *_self_, _1c663599d_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1c6635d33_SlcTypeDecl_eq(_1c6635d33_SlcTypeDecl *_self_, _1c6635d33_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1c663642c_PtrTypeDecl_eq(_1c663642c_PtrTypeDecl *_self_, _1c663642c_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1c66367c3_IsUnsafe(_1c663642c_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1c6636bbe_ArrTypeDecl_eq(_1c6636bbe_ArrTypeDecl *_self_, _1c6636bbe_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1c6637065_AutoSized(_1c6636bbe_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1c663741c_MapTypeDecl_eq(_1c663741c_MapTypeDecl *_self_, _1c663741c_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1c6638c37_Expr_eq(_1c6638c37_Expr *_self_, _1c6638c37_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1c6639001_RangeExpr_eq(_1c6639001_RangeExpr *_self_, _1c6639001_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c663960b_UseExpr_eq(_1c663960b_UseExpr *_self_, _1c663960b_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1c6639bc2_LitExpr_eq(_1c6639bc2_LitExpr *_self_, _1c6639bc2_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1c663a09b_UnsafeExpr_eq(_1c663a09b_UnsafeExpr *_self_, _1c663a09b_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c663a552_IdentExpr_eq(_1c663a552_IdentExpr *_self_, _1c663a552_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1c663ace4_UnaryExpr_eq(_1c663ace4_UnaryExpr *_self_, _1c663ace4_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c663b1bd_VariadicExpr_eq(_1c663b1bd_VariadicExpr *_self_, _1c663b1bd_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c663b597_CastExpr_eq(_1c663b597_CastExpr *_self_, _1c663b597_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1c663bd4a_SubIdentExpr_eq(_1c663bd4a_SubIdentExpr *_self_, _1c663bd4a_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1c663c301_BinaryExpr_eq(_1c663c301_BinaryExpr *_self_, _1c663c301_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1c663cd18_Unhandled(_1c663c961_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c663d09e_Ignored(_1c663c961_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1c663d456_FieldExprPair_eq(_1c663d456_FieldExprPair *_self_, _1c663d456_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1c663ea62_KeyValPair_eq(_1c663ea62_KeyValPair *_self_, _1c663ea62_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1c6640bea_IndexingExpr_eq(_1c6640bea_IndexingExpr *_self_, _1c6640bea_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1c664135a_SlicingExpr_eq(_1c664135a_SlicingExpr *_self_, _1c664135a_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1c6641b0d_GenericDecl_eq(_1c6641b0d_GenericDecl *_self_, _1c6641b0d_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1c6641ed7_LabelSt_eq(_1c6641ed7_LabelSt *_self_, _1c6641ed7_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1c66423b1_GotoSt_eq(_1c66423b1_GotoSt *_self_, _1c66423b1_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1c66426ad_FallSt_eq(_1c66426ad_FallSt *_self_, _1c66426ad_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1c6642d1d_AssignLeft_eq(_1c6642d1d_AssignLeft *_self_, _1c6642d1d_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1c66442b4_Stmt_eq(_1c66442b4_Stmt *_self_, _1c66442b4_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1c6645161_ParamDecl_eq(_1c6645161_ParamDecl *_self_, _1c6645161_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1c6645518_IsSelf(_1c6645161_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1c6646959_IsAnon(_1c66465b3_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1c6647b47_RetSt_eq(_1c6647b47_RetSt *_self_, _1c6647b47_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c66483b7_Iter_eq(_1c66483b7_Iter *_self_, _1c66483b7_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1c664875d_IsInf(_1c66483b7_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1c6648be2_WhileKind_eq(_1c6648be2_WhileKind *_self_, _1c6648be2_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1c6649088_IsWhileNext(_1c6648be2_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1c66495e9_RangeKind_eq(_1c66495e9_RangeKind *_self_, _1c66495e9_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1c66499c3_BreakSt_eq(_1c66499c3_BreakSt *_self_, _1c66499c3_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1c6649d9c_ContSt_eq(_1c6649d9c_ContSt *_self_, _1c6649d9c_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1c664a353_If_eq(_1c664a353_If *_self_, _1c664a353_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1c664a72c_Else_eq(_1c664a72c_Else *_self_, _1c664a72c_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1c664b420_TypeAliasDecl_eq(_1c664b420_TypeAliasDecl *_self_, _1c664b420_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}


















inline jule::Bool _1c664ceb0_EnumItemDecl_eq(_1c664ceb0_EnumItemDecl *_self_, _1c664ceb0_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1c664e39b_TypeEnumItemDecl_eq(_1c664e39b_TypeEnumItemDecl *_self_, _1c664e39b_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1c664ecc5_FieldDecl_eq(_1c664ecc5_FieldDecl *_self_, _1c664ecc5_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1c66528cc_Field_eq(_1c66528cc_Field *_self_, _1c66528cc_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1c6657aad_FieldIns> _1c6652cb7_instance(jule::Ptr<_1c66528cc_Field> _self_) {
	return jule::new_ptr<_1c6657aad_FieldIns>(_1c6657aad_FieldIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=_self_, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1c6788b56_Data>(nullptr)});;
}








inline jule::Bool _1c66548e0_Operators_eq(_1c66548e0_Operators *_self_, _1c66548e0_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1c665865d_StructIns> _1c6655c98_instance(jule::Ptr<_1c6655803_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1c665865d_StructIns> _1007_ins = jule::new_ptr<_1c665865d_StructIns>(_1c665865d_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6657aad_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6657aad_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c672acb3_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1c666a51b_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1c66719a6_new(), ._field_Operators=_1c66548e0_Operators{._field_Eq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Add=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Div=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c0abe:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c672acb3_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1c53c0abe:;
			++it;
			goto _iter_begin_1c53c0abe;
		}
		_iter_end_1c53c0abe:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c197c:;
		if (it != expr_end) {
			jule::Ptr<_1c66528cc_Field> _11115_f = *it;
			{
				jule::Ptr<_1c6657aad_FieldIns> _1128_f2 = _1c6652cb7_instance(_11115_f);;
				(*(_1128_f2))._field_Owner=_1007_ins;
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6657aad_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1128_f2; __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1c67bd2b7_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1c53c197c:;
			++it;
			goto _iter_begin_1c53c197c;
		}
		_iter_end_1c53c197c:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666a51b_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c666a51b_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c53c5d05:;
			if (it != expr_end) {
				jule::Ptr<_1c666a51b_Fn> _12416_f = *it;
				{
					jule::Ptr<_1c666a51b_Fn> _1259_fins = jule::new_ptr<_1c666a51b_Fn>((*(_12416_f)));;
					(*_1259_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666a51b_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1259_fins; __jule_collection; }));
				}
				_iter_next_1c53c5d05:;
				++it;
				goto _iter_begin_1c53c5d05;
			}
			_iter_end_1c53c5d05:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1c665865d_StructIns> _1c66560a6_appendInstance(_1c6655803_Struct* _self_, jule::Ptr<_1c665865d_StructIns>* _13635_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c61ac:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _14215_ains = *it;
			{
				if (_1c665930c_Same(_14215_ains.ptr(), (*(_13635_ins)))) {
					return _14215_ains;;
				};
			}
			_iter_next_1c53c61ac:;
			++it;
			goto _iter_begin_1c53c61ac;
		}
		_iter_end_1c53c61ac:;
	};
	{ jule::Slice<jule::Ptr<_1c665865d_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13635_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1c666a51b_Fn> _1c66564a2_FindMethod(_1c6655803_Struct* _self_, jule::Str _15426_ident, jule::Bool _15438_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53c96ee:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _15515_f = *it;
			{
				if ((((*(_15515_f))._field_Statically == _15438_statically) && ((*_15515_f.alloc)._field_Ident == _15426_ident))) {
					return _15515_f;;
				};
			}
			_iter_next_1c53c96ee:;
			++it;
			goto _iter_begin_1c53c96ee;
		}
		_iter_end_1c53c96ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c66567e3_FindStatic(_1c6655803_Struct* _self_, jule::Str _16526_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53caa30:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _16615_v = *it;
			{
				if (((*(_16615_v))._field_Ident == _16526_ident)) {
					return _16615_v;;
				};
			}
			_iter_next_1c53caa30:;
			++it;
			goto _iter_begin_1c53caa30;
		}
		_iter_end_1c53caa30:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66528cc_Field> _1c6656b34_FindField(_1c6655803_Struct* _self_, jule::Str _17625_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53cba31:;
		if (it != expr_end) {
			jule::Ptr<_1c66528cc_Field> _17715_f = *it;
			{
				if (((*(_17715_f))._field_Ident == _17625_ident)) {
					return _17715_f;;
				};
			}
			_iter_next_1c53cba31:;
			++it;
			goto _iter_begin_1c53cba31;
		}
		_iter_end_1c53cba31:;
	};
	return nullptr;;
}



inline jule::Bool _1c6656e75_IsImplements(_1c6655803_Struct* _self_, jule::Ptr<_1c667de9c_Trait> _18624_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53cca21:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> *_18710_it = it;
			{
				if ((_18624_t == (*(_18710_it)))) {
					return true;;
				};
			}
			_iter_next_1c53cca21:;
			++it;
			goto _iter_begin_1c53cca21;
		}
		_iter_end_1c53cca21:;
	};
	return false;;
}



inline jule::Bool _1c66572b6_IsUses(_1c6655803_Struct* _self_, jule::Ptr<_1c6655803_Struct> _19618_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53cd4a0:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> *_19710_u = it;
			{
				while ((_19618_s == (*(_19710_u)))) {
					{
						return true;;
					}
				_iter_next_1c53cdec8:;
				}
				_iter_end_1c53cdec8:;;
			}
			_iter_next_1c53cd4a0:;
			++it;
			goto _iter_begin_1c53cd4a0;
		}
		_iter_end_1c53cd4a0:;
	};
	return false;;
}








inline jule::Bool _1c6657aad_FieldIns_eq(_1c6657aad_FieldIns *_self_, _1c6657aad_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1c6658a15_Str(_1c665865d_StructIns* _self_) {
	_20759e353_StrBuilder _2427_kind = static__2075a7c41_New(32LL);;
	_2075a814d_WriteStr(&_2427_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_2075a8406_WriteByte(&_2427_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c53d1be0:;
			if (it != expr_end) {
				jule::I64 _2468_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> *_24611_g = it;
				{
					_2075a814d_WriteStr(&_2427_kind, _1c67bbccc_Str((*((*(_24611_g))))._field_Kind.ptr()));
					if ((_2468_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_2075a8406_WriteByte(&_2427_kind, ',');
					};
				}
				_iter_next_1c53d1be0:;
				++it;
				_2468_i++;
				goto _iter_begin_1c53d1be0;
			}
			_iter_end_1c53d1be0:;
		};
		_2075a8406_WriteByte(&_2427_kind, ']');
	};
	return _2075a8945_Str(&_2427_kind);;
}



inline jule::Bool _1c6658d56_Equal(jule::Ptr<_1c665865d_StructIns> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _25818_other) {
	jule::Ptr<_1c665865d_StructIns> _2593_s = _1c67c060a_Struct(_25818_other.ptr());;
	if ((_2593_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2593_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2593_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Generics.len()); (_2727_i)++) {
		{
			if ((!(_1c67bc11d_Equal((*((*(_self_))._field_Generics[_2727_i]))._field_Kind, (*((*(_2593_s))._field_Generics[_2727_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1c53d608a:;
	}
	_iter_end_1c53d608a:;;
	return true;;
}



inline jule::Bool _1c665930c_Same(_1c665865d_StructIns* _self_, jule::Ptr<_1c665865d_StructIns> _28616_s) {
	if ((((*(_self_))._field_Decl != (*(_28616_s))._field_Decl) || ((*_28616_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53d82ac:;
		if (it != expr_end) {
			jule::I64 _2907_i = it - expr->begin();
			jule::Ptr<_1c67b9eea_InsGeneric> *_29010_g = it;
			{
				jule::Ptr<_1c67b9eea_InsGeneric> _2914_g2 = (*(_28616_s))._field_Generics[_2907_i];;
				if ((((*((*((*(_29010_g))))._field_Kind))._field_BindIdent != (*(*(_2914_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c67bc11d_Equal((*((*(_29010_g))))._field_Kind, (*(_2914_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c53d82ac:;
			++it;
			_2907_i++;
			goto _iter_begin_1c53d82ac;
		}
		_iter_end_1c53d82ac:;
	};
	return true;;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6659708_FindMethod(_1c665865d_StructIns* _self_, jule::Str _30126_ident, jule::Bool _30138_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53db579:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _30215_f = *it;
			{
				if ((((*(_30215_f))._field_Statically == _30138_statically) && ((*_30215_f.alloc)._field_Ident == _30126_ident))) {
					return _30215_f;;
				};
			}
			_iter_next_1c53db579:;
			++it;
			goto _iter_begin_1c53db579;
		}
		_iter_end_1c53db579:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6657aad_FieldIns> _1c6659a49_FindField(_1c665865d_StructIns* _self_, jule::Str _31225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53dc8aa:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _31315_f = *it;
			{
				if (((*((*(_31315_f))._field_Decl))._field_Ident == _31225_ident)) {
					return _31315_f;;
				};
			}
			_iter_next_1c53dc8aa:;
			++it;
			goto _iter_begin_1c53dc8aa;
		}
		_iter_end_1c53dc8aa:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c6659d8a_FindStatic(_1c665865d_StructIns* _self_, jule::Str _32326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53dd16e:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _32415_v = *it;
			{
				if (((*(_32415_v))._field_Ident == _32326_ident)) {
					return _32415_v;;
				};
			}
			_iter_next_1c53dd16e:;
			++it;
			goto _iter_begin_1c53dd16e;
		}
		_iter_end_1c53dd16e:;
	};
	return nullptr;;
}








inline jule::Bool _1c665c51e_OperandExprModel_eq(_1c665c51e_OperandExprModel *_self_, _1c665c51e_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1c665ca19_BinaryExprModel_eq(_1c665ca19_BinaryExprModel *_self_, _1c665ca19_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1c665cde3_UnaryExprModel_eq(_1c665cde3_UnaryExprModel *_self_, _1c665cde3_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1c665d421_StructArgExprModel_eq(_1c665d421_StructArgExprModel *_self_, _1c665d421_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1c665dab4_AllocStructLitExprModel_eq(_1c665dab4_AllocStructLitExprModel *_self_, _1c665dab4_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1c665e147_CastingExprModel_eq(_1c665e147_CastingExprModel *_self_, _1c665e147_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}














inline jule::Bool _1c6660379_IndexingExprModel_eq(_1c6660379_IndexingExprModel *_self_, _1c6660379_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1c6660c09_KeyValPairExprModel_eq(_1c6660c09_KeyValPairExprModel *_self_, _1c6660c09_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1c6661666_SlicingExprModel_eq(_1c6661666_SlicingExprModel *_self_, _1c6661666_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1c6661be9_TraitSubIdentExprModel_eq(_1c6661be9_TraitSubIdentExprModel *_self_, _1c6661be9_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1c666258a_StructSubIdentExprModel_eq(_1c666258a_StructSubIdentExprModel *_self_, _1c666258a_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1c6662931_StructStaticIdentExprModel_eq(_1c6662931_StructStaticIdentExprModel *_self_, _1c6662931_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1c66634d1_BuiltinOutCallExprModel_eq(_1c66634d1_BuiltinOutCallExprModel *_self_, _1c66634d1_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1c66638aa_BuiltinOutlnCallExprModel_eq(_1c66638aa_BuiltinOutlnCallExprModel *_self_, _1c66638aa_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}






inline jule::Bool _1c6663c84_BuiltinNewCallExprModel_eq(_1c6663c84_BuiltinNewCallExprModel *_self_, _1c6663c84_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1c666415d_BuiltinPanicCallExprModel_eq(_1c666415d_BuiltinPanicCallExprModel *_self_, _1c666415d_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c6664614_BuiltinAssertCallExprModel_eq(_1c6664614_BuiltinAssertCallExprModel *_self_, _1c6664614_BuiltinAssertCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Log == _self_->_field_Log);
}






inline jule::Bool _1c6664aba_BuiltinMakeCallExprModel_eq(_1c6664aba_BuiltinMakeCallExprModel *_self_, _1c6664aba_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1c6664e94_BuiltinAppendCallExprModel_eq(_1c6664e94_BuiltinAppendCallExprModel *_self_, _1c6664e94_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1c6665291_BuiltinLenCallExprModel_eq(_1c6665291_BuiltinLenCallExprModel *_self_, _1c6665291_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c666558d_BuiltinCapCallExprModel_eq(_1c666558d_BuiltinCapCallExprModel *_self_, _1c666558d_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c6665967_BuiltinDeleteCallExprModel_eq(_1c6665967_BuiltinDeleteCallExprModel *_self_, _1c6665967_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1c6665d41_BuiltinCopyCallExprModel_eq(_1c6665d41_BuiltinCopyCallExprModel *_self_, _1c6665d41_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1c666621a_BuiltinErrorCallExprModel_eq(_1c666621a_BuiltinErrorCallExprModel *_self_, _1c666621a_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1c66668be_SizeofExprModel_eq(_1c66668be_SizeofExprModel *_self_, _1c66668be_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c6666aab_AlignofExprModel_eq(_1c6666aab_AlignofExprModel *_self_, _1c6666aab_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c6666d53_RuneExprModel_eq(_1c6666d53_RuneExprModel *_self_, _1c6666d53_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1c6667529_FreeExprModel_eq(_1c6667529_FreeExprModel *_self_, _1c6667529_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1c6668a47_Param_eq(_1c6668a47_Param *_self_, _1c6668a47_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1c666c474_ParamIns> _1c6668e10_instance(jule::Ptr<_1c6668a47_Param> _self_) {
	return jule::new_ptr<_1c666c474_ParamIns>(_1c666c474_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)});;
}



inline jule::Bool _1c6669196_IsSelf(_1c6668a47_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c666942c_IsRef(_1c6668a47_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1c666a9c2_IsVoid(_1c666a51b_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c666ac58_IsMethod(_1c666a51b_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1c6668a47_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1c6669196_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c666aede_IsEntryPoint(_1c666a51b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c666b275_IsInit(_1c666a51b_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c666b50b_IsAnon(_1c666a51b_Fn* _self_) {
	return _1c6621ec8_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c666b792_AnyVar(_1c666a51b_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c666ba28_instanceForce(jule::Ptr<_1c666a51b_Fn> _self_) {
	jule::Ptr<_1c666d4ec_FnIns> _1107_ins = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1c66b35b9_Scope>(_1c66b35b9_Scope{._field_Parent=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1c66719a6_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666c474_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c666c474_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53e6e58:;
		if (it != expr_end) {
			jule::Ptr<_1c6668a47_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666c474_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c6668e10_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1c53e6e58:;
			++it;
			goto _iter_begin_1c53e6e58;
		}
		_iter_end_1c53e6e58:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c666bcae_instance(jule::Ptr<_1c666a51b_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1c666ba28_instanceForce(_self_);;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c666c0bc_appendInstance(_1c666a51b_Fn* _self_, jule::Ptr<_1c666d4ec_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53ebe19:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _15415_ains = *it;
			{
				if (_1c667008c_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1c53ebe19:;
			++it;
			goto _iter_begin_1c53ebe19;
		}
		_iter_end_1c53ebe19:;
	};
	{ jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1c666c474_ParamIns_eq(_1c666c474_ParamIns *_self_, _1c666c474_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1c666c81a_Str(_1c666c474_ParamIns* _self_) {
	_20759e353_StrBuilder _1767_s = static__2075a7c41_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_2075a814d_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_2075a814d_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
	};
	if (_1c6669196_IsSelf((*(_self_))._field_Decl)) {
		if (_1c666942c_IsRef((*(_self_))._field_Decl)) {
			_2075a8406_WriteByte(&_1767_s, '&');
		};
		_2075a814d_WriteStr(&_1767_s, jule::Str::lit("self", 4));
		return _2075a8945_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_2075a814d_WriteStr(&_1767_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_2075a814d_WriteStr(&_1767_s, _1c67bbccc_Str((*(_self_))._field_Kind));
	};
	return _2075a8945_Str(&_1767_s);;
}







inline jule::Str _1c666d871_Str(_1c666d4ec_FnIns* _self_) {
	;
	return _1c66703cd_GetKindStr(_self_, false);;
}



inline jule::Bool _1c666dbb2_Equal(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _22818_other) {
	jule::Ptr<_1c666d4ec_FnIns> _2293_f = _1c67c0374_Fn(_22818_other.ptr());;
	if ((_2293_f == nullptr)) {
		return false;;
	};
	return _1c666e157_EqualFn(_self_, &(_2293_f));;
}



inline jule::Bool _1c666e157_EqualFn(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c666d4ec_FnIns>* _23921_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23921_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23921_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1c666a9c2_IsVoid((*(_self_))._field_Decl) != _1c666a9c2_IsVoid((*((*(_23921_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1c666c474_ParamIns>,jule::Ptr<_1c666c474_ParamIns>> _2493_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1c666c474_ParamIns>,jule::Ptr<_1c666c474_ParamIns>>((void*)__jule_anon1c5407562, nullptr, nullptr);;
	if (((*((*(_23921_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2817_i = 0LL;;
	for (; (_2817_i < (*_self_.alloc)._field_Params.len()); (_2817_i)++) {
		{
			if ((!(_2493_checkParams((*(_self_))._field_Params[_2817_i], (*((*(_23921_f))))._field_Params[_2817_i])))) {
				return false;;
			};
		}
	_iter_next_1c540d3c0:;
	}
	_iter_end_1c540d3c0:;;
	if ((!(_1c666a9c2_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1c67bc11d_Equal((*_self_.alloc)._field_Result, (*((*(_23921_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c666e498_equalTrait(jule::Ptr<_1c666d4ec_FnIns> _self_, jule::Ptr<_1c666d4ec_FnIns>* _29824_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1c666e157_EqualFn(_self_, _29824_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29824_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _1c666e72e_Types(_1c666d4ec_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c5414063:;
			{
				return nullptr;;
			}
		}
		else if ((_1c67c0dad_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c54140c9:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1c5413ae0:;
			{
				return (*(_1c67c0dad_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1c54139d0:;
	};
}



inline jule::Bool _1c666e9b5_IsBuiltin(_1c666d4ec_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c666ec4b_IsAnon(_1c666d4ec_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c666b50b_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1c667008c_Same(_1c666d4ec_FnIns* _self_, jule::Ptr<_1c666d4ec_FnIns> _34116_f) {
	if ((((*(_self_))._field_Decl != (*(_34116_f))._field_Decl) || ((*_34116_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5416c7a:;
		if (it != expr_end) {
			jule::I64 _3467_i = it - expr->begin();
			jule::Ptr<_1c67b9eea_InsGeneric> *_34610_g = it;
			{
				jule::Ptr<_1c67b9eea_InsGeneric> _3474_g2 = (*(_34116_f))._field_Generics[_3467_i];;
				if ((((*((*((*(_34610_g))))._field_Kind))._field_BindIdent != (*(*(_3474_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c67bc11d_Equal((*((*(_34610_g))))._field_Kind, (*(_3474_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1c5416c7a:;
			++it;
			_3467_i++;
			goto _iter_begin_1c5416c7a;
		}
		_iter_end_1c5416c7a:;
	};
	return true;;
}



inline jule::Str _1c66703cd_GetKindStr(_1c666d4ec_FnIns* _self_, jule::Bool _35822_ident) {
	_20759e353_StrBuilder _3597_s = static__2075a7c41_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		_2075a814d_WriteStr(&_3597_s, jule::Str::lit("unsafe ", 7));
	};
	_2075a814d_WriteStr(&_3597_s, jule::Str::lit("fn", 2));
	if ((_35822_ident && ((*(_self_))._field_Decl != nullptr))) {
		_2075a8406_WriteByte(&_3597_s, ' ');
		_2075a814d_WriteStr(&_3597_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_2075a8406_WriteByte(&_3597_s, '(');
	jule::I64 _3733_n = (*(_self_))._field_Params.len();;
	if ((_3733_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c541cb93:;
			if (it != expr_end) {
				jule::I64 _3758_i = it - expr->begin();
				jule::Ptr<_1c666c474_ParamIns> *_37511_p = it;
				{
					_2075a814d_WriteStr(&_3597_s, _1c666c81a_Str((*(_37511_p)).ptr()));
					if ((_3758_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_2075a8406_WriteByte(&_3597_s, ',');
					};
				}
				_iter_next_1c541cb93:;
				++it;
				_3758_i++;
				goto _iter_begin_1c541cb93;
			}
			_iter_end_1c541cb93:;
		};
	};
	_2075a8406_WriteByte(&_3597_s, ')');
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		_2075a8406_WriteByte(&_3597_s, '!');
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1c666a9c2_IsVoid((*(_self_))._field_Decl))))) {
		_2075a8406_WriteByte(&_3597_s, ':');
		_2075a814d_WriteStr(&_3597_s, _1c67bbccc_Str((*(_self_))._field_Result.ptr()));
	};
	return _2075a8945_Str(&_3597_s);;
}







inline jule::Ptr<_1c6671687_ReferenceStack> static__1c66719a6_new(void) {
	return jule::new_ptr<_1c6671687_ReferenceStack>(_1c6671687_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1c6671da2_Len(_1c6671687_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1c66721e3_At(_1c6671687_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1c667249b_Push(_1c6671687_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1d7303a34_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c666d4ec_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7304d98:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type7) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1d7304d98:;
			++it;
			goto _iter_begin_1d7304d98;
		}
		_iter_end_1d7304d98:;
	};
	return false;;
}

inline jule::Bool _1d7319d58_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c672acb3_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d731b178:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type8) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1d731b178:;
			++it;
			goto _iter_begin_1d731b178;
		}
		_iter_end_1d731b178:;
	};
	return false;;
}

inline jule::Bool _1d740695b_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c665865d_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7407cc0:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type9) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1d7407cc0:;
			++it;
			goto _iter_begin_1d7407cc0;
		}
		_iter_end_1d7407cc0:;
	};
	return false;;
}

inline jule::Bool _1d77ac509_Exist(_1c6671687_ReferenceStack* _self_, jule::Ptr<_1c667de9c_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d77ad818:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((jule::Any(_7820_t, &__jule_any_type10) == (*(_7910_ref)))) {
					return true;;
				};
			}
			_iter_next_1d77ad818:;
			++it;
			goto _iter_begin_1d77ad818;
		}
		_iter_end_1d77ad818:;
	};
	return false;;
}








inline jule::Bool _1c6672b94_Pass_eq(_1c6672b94_Pass *_self_, _1c6672b94_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1c667813e_pushErr(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c661e327_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_20806e73a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c67043b8_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1c66788c0_pushSuggestion(_1c6677649_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1c670596e_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1c6678cbb_checkCppUseDeclPath(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _208774868_Ext((*(_34553_path)));;
	if (((!(_208062365_IsValidHeaderExt(_3463_ext))) && (!(_20806262e_IsValidCppExt(_3463_ext))))) {
		_1c667813e_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_238adbe69_Status> _3533_info = ({
		auto except = static__208776abd_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1c667813e_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_238adbe69_Status>(nullptr);});
	});;
	if (_238adc376_IsDir(_3533_info.ptr())) {
		_1c667813e_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66790c9_buildCppHeaderImport(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_20806208a_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1c6625295_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1c6678cbb_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _208774b32_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1c667813e_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1c66d63cd_ImportInfo>(_1c66d63cd_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667941a_buildStdImport(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_20876ea3e_Replace(_3957_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("\\", 1), -1LL);
	_3957_path=_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _208821eed_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _208774b32_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1c667813e_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_238adbe69_Status> _4053_info = ({
		auto except = static__208776abd_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1c667813e_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_238adbe69_Status>(nullptr);});
	});;
	if ((!(_238adc376_IsDir(_4053_info.ptr())))) {
		_1c667813e_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4153_i = (_20876a5b7_FindLast((*((*(_39335_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1c66d63cd_ImportInfo>(_1c66d63cd_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Package=jule::new_ptr<_1c66d9304_Package>(_1c66d9304_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667975b_buildIdentImport(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_208769d14_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _20876951c_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1c667813e_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration paths cannot contain blank identifier", 53)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d21a9_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1c667813e_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1c66788c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_20876ea3e_Replace(_4487_path, static_cast<jule::Str>(jule::Str::lit("::", 2)), jule::Str::lit("\\", 1), -1LL);
	_4487_path=_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _208774b32_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1c667813e_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_238adbe69_Status> _4593_info = ({
		auto except = static__208776abd_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1c667813e_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_238adbe69_Status>(nullptr);});
	});;
	if ((!(_238adc376_IsDir(_4593_info.ptr())))) {
		_1c667813e_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4693_i = (_20876a5b7_FindLast((*((*(_43338_decl))))._field_LinkPath, static_cast<jule::Str>(jule::Str::lit("::", 2))) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1c66d63cd_ImportInfo>(_1c66d63cd_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Package=jule::new_ptr<_1c66d9304_Package>(_1c66d9304_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6679a9c_buildImport(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1c545eb5d:;
			{
				return _1c66790c9_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1c546006a:;
			{
				return _1c667941a_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1c545eae7:;
			{
				return _1c667975b_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1c545e9d7:;
	};
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6679ddd_findUseDecl(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _49828_pkg) {
	return _1c67839a8_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>>((void*)__jule_anon_1d676d28a, jule::Ptr<__jule_anon_1d676d28a_ctx>::make(__jule_anon_1d676d28a_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1d676d28a_ctx_handler));;
}



inline jule::Bool _1c667a22e_checkDuplicateUseDecl(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _50642_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c66d63cd_ImportInfo> _5077_lpkg = _1c6679ddd_findUseDecl(_self_, _50642_pkg);;
	if ((_5077_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1c667813e_pushErr(_self_, &((*((*(_50642_pkg))))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50642_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1c66788c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1c667a592_implImportSelections(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _51641_imp, jule::Ptr<_1c664ca09_UseDecl>* _51664_decl) {
	(*((*(_51641_imp))))._field_Selected=(*((*(_51664_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51641_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6771b95:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> _51810_item = *it;
			{
				{
					auto expr = &((*((*(_51641_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d677259c:;
					if (it != expr_end) {
						jule::Ptr<_1c661e327_Token> _51911_citem = *it;
						{
							if ((_51810_item == _51911_citem)) {
								goto _iter_end_1d677259c;
							} else if (((*(_51810_item))._field_Kind == (*(_51911_citem))._field_Kind)) {
								_1c667813e_pushErr(_self_, &(_51810_item), static_cast<jule::Str>(jule::Str::lit("duplicated selection: @ is already selected", 43)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_51810_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1c66788c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use selection, already selected, it is safe", 55)), jule::Slice<jule::Any>());
								goto _iter_end_1d677259c;
							};
						}
						_iter_next_1d677259c:;
						++it;
						goto _iter_begin_1d677259c;
					}
					_iter_end_1d677259c:;
				};
			}
			_iter_next_1d6771b95:;
			++it;
			goto _iter_begin_1d6771b95;
		}
		_iter_end_1d6771b95:;
	};
}



inline jule::Str _1c667a8d3_getAsLinkPath(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Str _53134_path) {
	if (_208769198_HasPrefix(_53134_path, _208821eed_PathStdlib)) {
		(_53134_path).mut_slice(_208821eed_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _20876ea3e_Replace(_53134_path, jule::Str::lit("\\", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL));;
	};
	jule::Str _5373_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _208774b32_Abs(((_1c66d3144_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c66d21a9_GetModPath((*(_self_))._field_importer.data));
		_5373_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53134_path).mut_slice(_5373_root.len());;
	if ((_53134_path[0LL] == 92LLU)) {
		(_53134_path).mut_slice(1LL);;
	};
	return _20876ea3e_Replace(_53134_path, jule::Str::lit("\\", 1), static_cast<jule::Str>(jule::Str::lit("::", 2)), -1LL);;
}



inline void _1c667ad01_pushCycleError(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c6677649_symbolBuilder>* _54532_sb, jule::Str _54552_path, _20759e353_StrBuilder* _54568_message) {
	;
	jule::Str _5473_refersTo = _20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c667a8d3_getAsLinkPath(_self_, _1c6625295_Dir((*((*((*(_54532_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1c667a8d3_getAsLinkPath(_self_, _54552_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5513_m = _2075a8945_Str(_54568_message);;
	_2075a814d_WriteStr(_54568_message, _208768cd0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2075a814d_WriteStr(_54568_message, _5473_refersTo);
	_2075a8406_WriteByte(_54568_message, '\n');
	_2075a814d_WriteStr(_54568_message, _5513_m);
}



inline void _1c667b21e_pushCrossCycleError(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c6677649_symbolBuilder>* _55837_target, jule::Ptr<_1c66d63cd_ImportInfo>* _55862_imp, jule::Ptr<_1c661e327_Token>* _55881_errorToken) {
	_20759e353_StrBuilder _5597_message = static__2075a7c41_New(32LL);;
	_1c667ad01_pushCycleError(_self_, &(_self_), (*((*(_55862_imp))))._field_Path, &(_5597_message));
	jule::Ptr<_1c6677649_symbolBuilder> _5637_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1c6677649_symbolBuilder> _5647_old = _self_;;
	while (((*(_5637_owner))._field_owner != nullptr)) {
		{
			_1c667ad01_pushCycleError(_self_, &((*_5647_old.alloc)._field_owner), _1c6625295_Dir((*((*_5647_old.alloc)._field_table))._field_File.ptr()), &(_5597_message));
			if (((*_5637_owner.alloc)._field_owner == (*(_55837_target)))) {
				_1c667ad01_pushCycleError(_self_, _55837_target, _1c6625295_Dir((*((*(_5637_owner))._field_table))._field_File), &(_5597_message));
				goto _iter_end_1d677a93a;
			};
			_5647_old=_5637_owner;
			_5637_owner=(*_5637_owner.alloc)._field_owner;
		}
	_iter_next_1d677a93a:;
	}
	_iter_end_1d677a93a:;;
	_1c667813e_pushErr(_self_, _55881_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2075a8945_Str(&_5597_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c667b61a_checkImportCycles(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c66d63cd_ImportInfo> _58134_imp, jule::Ptr<_1c664ca09_UseDecl>* _58153_decl) {
	if (((*(_58134_imp))._field_Path == _1c6625295_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1c667813e_pushErr(_self_, &((*((*(_58153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c667a8d3_getAsLinkPath(_self_, (*_58134_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c6677649_symbolBuilder> _5917_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1d67801d1:;
	if ((_1c6625295_Dir((*((*(_5917_owner))._field_table))._field_File) == (*_58134_imp.alloc)._field_Path)) {
		_1c667b21e_pushCrossCycleError(_self_, &(_5917_owner), &(_58134_imp), &((*((*(_58153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5917_owner))._field_owner != nullptr)) {
		_5917_owner=(*_5917_owner.alloc)._field_owner;
		goto _julec_label_1d67801d1;
	};
	return true;;
}



inline void _1c667ba38_checkPackageAccessibility(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c664ca09_UseDecl>* _61242_decl, jule::Str* _61259_mod, jule::Str* _61270_path) {
	if (((((_1c66d3144_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c66d21a9_GetModPath((*(_self_))._field_importer.data) != (*(_61259_mod))) && _20876d664_Contains((*(_61270_path)), jule::Str::lit("internal", 8)))) {
		_1c667813e_pushErr(_self_, &((*((*(_61242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c667be34_importPackage(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _61835_imp, jule::Ptr<_1c664ca09_UseDecl>* _61858_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61835_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c66d63cd_ImportInfo> _6237_port = ((_1c66d3144_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c66d283b_GetImport((*(_self_))._field_importer.data, (*((*(_61835_imp))))._field_Path);;
	if ((_6237_port != nullptr)) {
		(*((*(_61835_imp))))._field_Package=(*_6237_port.alloc)._field_Package;
		(*((*(_61835_imp))))._field_Duplicate=true;
		jule::Str _6284_oldMod = ((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d21a9_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d1e23_SetModPath((*_self_.alloc)._field_importer.data, ((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d24ea_ModById((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_ModId));
		_1c667ba38_checkPackageAccessibility(_self_, _61858_decl, &(_6284_oldMod), &((*_6237_port.alloc)._field_Path));
		((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d1e23_SetModPath((*_self_.alloc)._field_importer.data, _6284_oldMod);
	} else {
		if ((!(_1c667b61a_checkImportCycles(_self_, (*(_61835_imp)), _61858_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6374_oldMod = ((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d21a9_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d1e23_SetModPath((*_self_.alloc)._field_importer.data, _6374_oldMod);
		});;
		if ((*((*(_61835_imp))))._field_Std) {
			((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d1e23_SetModPath((*_self_.alloc)._field_importer.data, _208821eed_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c6632945_AST>> _6428_asts;
		jule::Slice<_20806e73a_Log> _64218_errors;
		({
			__jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_assign_result = ((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d2c37_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61835_imp))))._field_Path, (!((*((*(_61835_imp))))._field_Std)));
			_6428_asts = __jule_assign_result.__jule_result_arg0;
			_64218_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64218_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c667ba38_checkPackageAccessibility(_self_, _61858_decl, &(_6374_oldMod), &((*((*(_61835_imp))))._field_Path));
		{
			auto expr = &(_6428_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d678d61d:;
			if (it != expr_end) {
				jule::Ptr<_1c6632945_AST> _65016_ast = *it;
				{
					jule::Ptr<_1c678348b_SymbolTable> _65113_table = nullptr;;
					({
						__jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c67dcd75_buildSymbols(&(_65016_ast), &((*_self_.alloc)._field_importer), _self_);
						_65113_table = __jule_assign_result.__jule_result_arg0;
						_64218_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64218_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64218_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61835_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61835_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65113_table; __jule_collection; }));
				}
				_iter_next_1d678d61d:;
				++it;
				goto _iter_begin_1d678d61d;
			}
			_iter_end_1d678d61d:;
		};
	};
	_1c667a592_implImportSelections(_self_, _61835_imp, _61858_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c667c275_importUseDecl(jule::Ptr<_1c6677649_symbolBuilder> _self_, jule::Ptr<_1c664ca09_UseDecl>* _66535_decl) {
	jule::Ptr<_1c66d63cd_ImportInfo> _6667_imp = _1c6679a9c_buildImport(_self_, _66535_decl);;
	if ((_6667_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6717_ok = _1c667a22e_checkDuplicateUseDecl(_self_, &(_6667_imp));;
	if ((!(_6717_ok))) {
		return nullptr;;
	};
	_6717_ok=_1c667be34_importPackage(_self_, &(_6667_imp), _66535_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6667_imp; __jule_collection; }));
	if (_6717_ok) {
		((_1c66d3144_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c66d2ee0_Imported((*_self_.alloc)._field_importer.data, _6667_imp);
		return _6667_imp;;
	};
	return nullptr;;
}



inline void _1c667c473_importUseDecls(jule::Ptr<_1c6677649_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67942a0:;
		if (it != expr_end) {
			jule::Ptr<_1c664ca09_UseDecl> _68515_decl = *it;
			{
				_1c667c275_importUseDecl(_self_, &(_68515_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1d67942a0;
				};
			}
			_iter_next_1d67942a0:;
			++it;
			goto _iter_begin_1d67942a0;
		}
		_iter_end_1d67942a0:;
	};
}



inline void _1c667c72b_appendNode(_1c6677649_symbolBuilder* _self_, _1c6633902_Node* _69431_node) {
	{
		auto &_match_expr{ (*(_69431_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1d6795cda:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66adce0_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c6677083_buildImpl((*(_69431_node))._field_Data.cast_ptr<_1c6651568_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1d67947de:;
			{
				jule::Ptr<_1c67baade_TypeAlias> _6998_ta = _1c66735ce_buildTypeAlias((*(_69431_node))._field_Data.cast_ptr<_1c664b420_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6998_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1d6795845:;
			{
				jule::Ptr<_1c6655803_Struct> _7028_srct = _1c6673e70_buildStruct((*(_69431_node))._field_Data.cast_ptr<_1c66506bb_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6655803_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d67958ab:;
			{
				jule::Ptr<_1c666a51b_Fn> _7058_f = _1c6674b1e_buildFunc((*(_69431_node))._field_Data.cast_ptr<_1c66465b3_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666a51b_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1d6795922:;
			{
				jule::Ptr<_1c667de9c_Trait> _7088_t = _1c667546b_buildTrait((*(_69431_node))._field_Data.cast_ptr<_1c6650e08_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c667de9c_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1d6795988:;
			{
				jule::Ptr<_1c672acb3_Var> _7118_v = _1c6676a00_buildVar((*(_69431_node))._field_Data.cast_ptr<_1c664776d_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1d67959ee:;
			{
				jule::Ptr<_1c66816a8_Enum> _7148_e = _1c6675ee9_buildEnum((*(_69431_node))._field_Data.cast_ptr<_1c664da71_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66816a8_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1d67962c4:;
			{
				jule::Ptr<_1c6682db3_TypeEnum> _7178_e = _1c6676736_buildTypeEnum((*(_69431_node))._field_Data.cast_ptr<_1c664ea0b_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1d6795735:;
			{
				_1c667813e_pushErr(_self_, &((*(_69431_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d67956be:;
	};
}



inline void _1c667c929_appendNodes(_1c6677649_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67b5227:;
		if (it != expr_end) {
			_1c6633902_Node _72515_node = *it;
			{
				_1c667c72b_appendNode(_self_, &(_72515_node));
			}
			_iter_next_1d67b5227:;
			++it;
			goto _iter_begin_1d67b5227;
		}
		_iter_end_1d67b5227:;
	};
}



inline void _1c667cbd2_pushDirectivePass(_1c6677649_symbolBuilder* _self_, jule::Ptr<_1c6633d20_Directive>* _73038_d) {
	if (((*((*(_73038_d))))._field_Args.len() == 0LL)) {
		_1c667813e_pushErr(_self_, &((*((*(_73038_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73038_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c661e327_Token> _7354_arg = (*((*(_73038_d))))._field_Args[1LL];;
		_1c667813e_pushErr(_self_, &(_7354_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73038_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c661e327_Token> _7393_arg = (*((*(_73038_d))))._field_Args[0LL];;
	if (((*(_7393_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c667813e_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7393_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c667813e_pushErr(_self_, &(_7393_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1c6672b94_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c6672b94_Pass{._field_Token=(*((*(_73038_d))))._field_Tag, ._field_Text=(*_7393_arg.alloc)._field_Kind.slice(1LL, ((*_7393_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1c667cdd0_appendTopDirectives(_1c6677649_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67bc916:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _75715_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75715_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1d67bdb26:;
						{
							_1c667cbd2_pushDirectivePass(_self_, &(_75715_d));
						}
					}
					_match_end_1d67bda49:;
				};
			}
			_iter_next_1d67bc916:;
			++it;
			goto _iter_begin_1d67bc916;
		}
		_iter_end_1d67bc916:;
	};
}



inline void _1c667d0cd_build(jule::Ptr<_1c6677649_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1c678348b_SymbolTable>(_1c678348b_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1c6672b94_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1c666a51b_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1c667de9c_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1c66816a8_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1c66adce0_Impl>>(nullptr)});
	_1c667cdd0_appendTopDirectives(_self_);
	_1c667c473_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1c667c929_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}







inline jule::Str _1c667e398_Str(_1c667de9c_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c667e6d9_Equal(jule::Ptr<_1c667de9c_Trait> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _2518_other) {
	jule::Ptr<_1c667de9c_Trait> _263_trt = _1c67c0891_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1c666a51b_Fn> _1c667eb7e_FindMethod(_1c667de9c_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67c25ec:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1d67c25ec:;
			++it;
			goto _iter_begin_1d67c25ec;
		}
		_iter_end_1d67c25ec:;
	};
	return _1c6680311_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6680311_findMethodInherit(_1c667de9c_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67c57ba:;
		if (it != expr_end) {
			jule::Ptr<_1c67c40e2_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1d67c57ba;
				};
				jule::Ptr<_1c667de9c_Trait> _608_t = _1c67c0891_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1c666a51b_Fn> _629_f2 = _1c667eb7e_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1d67c57ba:;
			++it;
			goto _iter_begin_1d67c57ba;
		}
		_iter_end_1d67c57ba:;
	};
	return nullptr;;
}








inline jule::Bool _1c6680b3b_EnumItem_eq(_1c6680b3b_EnumItem *_self_, _1c6680b3b_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1c6681026_AutoExpr(_1c6680b3b_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1c6681a60_Str(_1c66816a8_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c6681da1_Equal(jule::Ptr<_1c66816a8_Enum> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _3818_other) {
	jule::Ptr<_1c66816a8_Enum> _393_enm = _1c67be83a_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1c6680b3b_EnumItem> _1c66822d0_FindItem(_1c66816a8_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67c90c6:;
		if (it != expr_end) {
			jule::Ptr<_1c6680b3b_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1d67c90c6:;
			++it;
			goto _iter_begin_1d67c90c6;
		}
		_iter_end_1d67c90c6:;
	};
	return nullptr;;
}








inline jule::Bool _1c66827db_TypeEnumItem_eq(_1c66827db_TypeEnumItem *_self_, _1c66827db_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}





inline jule::Str _1c6683237_Str(_1c6682db3_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c6683578_Equal(jule::Ptr<_1c6682db3_TypeEnum> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _8018_other) {
	jule::Ptr<_1c6682db3_TypeEnum> _813_tenm = _1c67beac1_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1c66827db_TypeEnumItem> _1c66839a7_FindItem(_1c6682db3_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d67cb370:;
		if (it != expr_end) {
			jule::Ptr<_1c66827db_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1d67cb370:;
			++it;
			goto _iter_begin_1d67cb370;
		}
		_iter_end_1d67cb370:;
	};
	return nullptr;;
}








inline jule::Bool _1c66857de_comptimeRange_eq(_1c66857de_comptimeRange *_self_, _1c66857de_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1c6685bda_Str(_1c66857de_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1c668602b_Equal(jule::Ptr<_1c66857de_comptimeRange> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _2718_other) {
	return false;;
}








inline jule::Bool _1c668634a_comptimeStructField_eq(_1c668634a_comptimeStructField *_self_, _1c668634a_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c6686702_Str(_1c668634a_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1c6686a43_Equal(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _3718_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c668704e__Decl(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c678a87d_eval>* _4127_e, jule::Ptr<_1c663c961_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type19)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c668744a__Type(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Ptr<_1c678a87d_eval>* _5327_e, jule::Ptr<_1c663c961_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1c6788b56_Data> _1c668778b_subIdent(jule::Ptr<_1c668634a_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1d67d8b0d:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _648_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d67d9d84, jule::Ptr<__jule_anon_1d67d9d84_ctx>::make(__jule_anon_1d67d9d84_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d67d9d84_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d67d8b96:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _718_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d67dbd0e, jule::Ptr<__jule_anon_1d67dbd0e_ctx>::make(__jule_anon_1d67dbd0e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d67dbd0e_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1d67d8943:;
			{
				return nullptr;;
			}
		}
		_match_end_1d67d8a53:;
	};
}







inline jule::Str _1c6687ea6_Str(_1c6687add_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1c66882e7_Equal(jule::Ptr<_1c6687add_comptimeStructFields> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _9018_other) {
	return false;;
}



inline void _1c668877b_ready(_1c6687add_comptimeStructFields* _self_, jule::Ptr<_1c672acb3_Var>* _9426_keyA, jule::Ptr<_1c672acb3_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668634a_comptimeStructField>(_1c668634a_comptimeStructField{._field_field=jule::Ptr<_1c6657aad_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data6)})});
	};
}



inline void _1c6688ade_index(_1c6687add_comptimeStructFields* _self_, jule::Ptr<_1c6788b56_Data>* _11526_d, jule::I64 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668634a_comptimeStructField>(_1c668634a_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data6)});
}



inline void _1c668900c_step(_1c6687add_comptimeStructFields* _self_, jule::I64 _12620_i, jule::Ptr<_1c672acb3_Var>* _12633_keyA, jule::Ptr<_1c672acb3_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1c67c1661_comptimeStructField((*((*((*(_12650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I64 _1c6689293_len(_1c6687add_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1c668956d_comptimeStatic_eq(_1c668956d_comptimeStatic *_self_, _1c668956d_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c6689925_Str(_1c668956d_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1c6689c66_Equal(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _15018_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c668a272__Decl(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c678a87d_eval>* _15427_e, jule::Ptr<_1c663c961_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type8)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c668a66d__Type(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Ptr<_1c678a87d_eval>* _16627_e, jule::Ptr<_1c663c961_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1c6788b56_Data> _1c668a9ae_subIdent(jule::Ptr<_1c668956d_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1d680296d:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _1778_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6803be4, jule::Ptr<__jule_anon_1d6803be4_ctx>::make(__jule_anon_1d6803be4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6803be4_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d6802a06:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _1848_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6805b6e, jule::Ptr<__jule_anon_1d6805b6e_ctx>::make(__jule_anon_1d6805b6e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6805b6e_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1d68027a3:;
			{
				return nullptr;;
			}
		}
		_match_end_1d68028b3:;
	};
}







inline jule::Str _1c668b1c9_Str(_1c668ad22_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1c668b51a_Equal(jule::Ptr<_1c668ad22_comptimeStatics> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _20318_other) {
	return false;;
}



inline void _1c668b99e_ready(_1c668ad22_comptimeStatics* _self_, jule::Ptr<_1c672acb3_Var>* _20726_keyA, jule::Ptr<_1c672acb3_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668956d_comptimeStatic>(_1c668956d_comptimeStatic{._field_field=jule::Ptr<_1c672acb3_Var>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data8)})});
	};
}



inline void _1c668bd12_index(_1c668ad22_comptimeStatics* _self_, jule::Ptr<_1c6788b56_Data>* _22826_d, jule::I64 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668956d_comptimeStatic>(_1c668956d_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data8)});
}



inline void _1c668c230_step(_1c668ad22_comptimeStatics* _self_, jule::I64 _23920_i, jule::Ptr<_1c672acb3_Var>* _23933_keyA, jule::Ptr<_1c672acb3_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1c67c2e6a_comptimeStatic((*((*((*(_23950_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I64 _1c668c4b6_len(_1c668ad22_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1c668c791_comptimeEnumField_eq(_1c668c791_comptimeEnumField *_self_, _1c668c791_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c668cb48_Str(_1c668c791_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1c668ce89_Equal(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _26318_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c668d484__Decl(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Ptr<_1c678a87d_eval>* _26727_e, jule::Ptr<_1c663c961_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type21)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c668d7c5_subIdent(jule::Ptr<_1c668c791_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1d6812e9a:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _2828_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6817103, jule::Ptr<__jule_anon_1d6817103_ctx>::make(__jule_anon_1d6817103_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6817103_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1d68124d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6812472:;
	};
}







inline jule::Str _1c668e067_Str(_1c668daa0_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1c668e3a8_Equal(jule::Ptr<_1c668daa0_comptimeEnumFields> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _30118_other) {
	return false;;
}



inline void _1c668e7b5_ready(_1c668daa0_comptimeEnumFields* _self_, jule::Ptr<_1c672acb3_Var>* _30526_keyA, jule::Ptr<_1c672acb3_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668c791_comptimeEnumField>(_1c668c791_comptimeEnumField{._field_field=jule::Ptr<_1c6680b3b_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data10)})});
	};
}



inline void _1c668eb28_index(_1c668daa0_comptimeEnumFields* _self_, jule::Ptr<_1c6788b56_Data>* _32626_d, jule::I64 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668c791_comptimeEnumField>(_1c668c791_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data10)});
}



inline void _1c6690046_step(_1c668daa0_comptimeEnumFields* _self_, jule::I64 _33720_i, jule::Ptr<_1c672acb3_Var>* _33733_keyA, jule::Ptr<_1c672acb3_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1c67c1b7d_comptimeEnumField((*((*((*(_33750_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I64 _1c66902cc_len(_1c668daa0_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1c66905a7_comptimeParam_eq(_1c66905a7_comptimeParam *_self_, _1c66905a7_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1c669095e_Str(_1c66905a7_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1c6690ca0_Equal(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _36118_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c66912bc__Decl(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _36527_e, jule::Ptr<_1c663c961_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type22)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66916b8__Type(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _37727_e, jule::Ptr<_1c663c961_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1c6788b56_Data> _1c6691ab4__Recv(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Ptr<_1c678a87d_eval>* _38527_e, jule::Ptr<_1c663c961_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _3907_constant = static__1dd720356_NewBool(_1c6669196_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6691e05_subIdent(jule::Ptr<_1c66905a7_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1d682c635:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _4018_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d682d955, jule::Ptr<__jule_anon_1d682d955_ctx>::make(__jule_anon_1d682d955_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d682d955_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1d682c6ce:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _4088_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68308d0, jule::Ptr<__jule_anon_1d68308d0_ctx>::make(__jule_anon_1d68308d0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68308d0_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d682c756:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _4158_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d683285a, jule::Ptr<__jule_anon_1d683285a_ctx>::make(__jule_anon_1d683285a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d683285a_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1d682c327:;
			{
				return nullptr;;
			}
		}
		_match_end_1d682c547:;
	};
}







inline jule::Str _1c66926a8_Str(_1c6692411_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1c66929e9_Equal(jule::Ptr<_1c6692411_comptimeParams> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _43418_other) {
	return false;;
}



inline void _1c6692e7d_ready(_1c6692411_comptimeParams* _self_, jule::Ptr<_1c672acb3_Var>* _43826_keyA, jule::Ptr<_1c672acb3_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66905a7_comptimeParam>(_1c66905a7_comptimeParam{._field_param=jule::Ptr<_1c666c474_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data12)})});
	};
}



inline void _1c66932e1_index(_1c6692411_comptimeParams* _self_, jule::Ptr<_1c6788b56_Data>* _45926_d, jule::I64 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66905a7_comptimeParam>(_1c66905a7_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data12)});
}



inline void _1c669370e_step(_1c6692411_comptimeParams* _self_, jule::I64 _47020_i, jule::Ptr<_1c672acb3_Var>* _47033_keyA, jule::Ptr<_1c672acb3_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1c67c219a_comptimeParam((*((*((*(_47050_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I64 _1c6693995_len(_1c6692411_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1c6694127_Str(_1c6693c70_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1c6694468_Equal(jule::Ptr<_1c6693c70_comptimeTypeInfos> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _49418_other) {
	return false;;
}



inline void _1c66948ec_ready(_1c6693c70_comptimeTypeInfos* _self_, jule::Ptr<_1c672acb3_Var>* _49826_keyA, jule::Ptr<_1c672acb3_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66956de_comptimeTypeInfo>(_1c66956de_comptimeTypeInfo{._field_base=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15)})});
	};
}



inline void _1c6694c60_index(_1c6693c70_comptimeTypeInfos* _self_, jule::Ptr<_1c6788b56_Data>* _51926_d, jule::I64 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15)});
}



inline void _1c669517d_step(_1c6693c70_comptimeTypeInfos* _self_, jule::I64 _52820_i, jule::Ptr<_1c672acb3_Var>* _52833_keyA, jule::Ptr<_1c672acb3_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15);
	};
}



inline jule::I64 _1c6695414_len(_1c6693c70_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1c66956de_comptimeTypeInfo_eq(_1c66956de_comptimeTypeInfo *_self_, _1c66956de_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1c6695a96_Str(_1c66956de_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1c67bbccc_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1c6695dd7_Equal(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _55218_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6696525__Decl(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _55627_e, jule::Ptr<_1c663c961_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1c67c060a_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6849883:;
			{
				_5617_decl=jule::Any((*(_1c67c060a_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type23);
			}
		}
		else if ((_1c67c0891_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68498e9:;
			{
				_5617_decl=jule::Any(_1c67c0891_Trait((*(_self_))._field_base), &__jule_any_type10);
			}
		}
		else if ((_1c67be83a_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68483ba:;
			{
				_5617_decl=jule::Any(_1c67be83a_Enum((*(_self_))._field_base), &__jule_any_type24);
			}
		}
		else if ((_1c67beac1_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6848431:;
			{
				_5617_decl=jule::Any(_1c67beac1_TypeEnum((*(_self_))._field_base), &__jule_any_type25);
			}
		}
		else if ((_1c67c0374_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6848497:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _5728_f = _1c67c0374_Fn((*(_self_))._field_base);;
				{
					
					if (_1c666e9b5_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1d6858e7a:;
						{
							_1c678ae11_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1c666ec4b_IsAnon(_5728_f.ptr())) {
						_case_begin_1d6859024:;
						{
							_1c678ae11_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type4); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1d6858de2:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type26);
			}
		}
		else {
			_case_begin_1d6848354:;
			{
				_1c678ae11_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d6848233:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6696921__Str(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _59322_e, jule::Ptr<_1c663c961_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _5987_constant = static__1dd720620_NewStr(_1c67bbccc_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6696d1c__Kind(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _60627_e, jule::Ptr<_1c663c961_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c66816a8_Enum> _6117_enm = _1c66d816b_FindEnum(_1c66a95d2_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1c6680b3b_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1c67bcc9a_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1d6866aae:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1c67c060a_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68669c1:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1c67c0891_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d686676d:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1c67be5a4_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68667d4:;
			{
				if (_1c67cc859_IsUnsafe(_1c67be5a4_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1c67be31d_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d686684a:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1c67be83a_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68668b1:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1c67beac1_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d686731d:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1c67c0b27_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6867384:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1c67c00dd_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68673ea:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1c67bed57_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6867461:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1c67c0374_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68674d8:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1c67c0dad_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d6867560:;
			{
				_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1c67be087_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1d68675d7:;
			{
				jule::Ptr<_1c67c49e9_Prim> _6434_prim = _1c67be087_Prim((*(_self_))._field_base);;
				{
					
					if (_1c67c824a_IsAny(_6434_prim.ptr())) {
						_case_begin_1d6874171:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1c67c7c2d_IsBool(_6434_prim.ptr())) {
						_case_begin_1d6874083:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1c67c7eb4_IsStr(_6434_prim.ptr())) {
						_case_begin_1d6873d63:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1c67c6e5d_IsF32(_6434_prim.ptr())) {
						_case_begin_1d6873dc9:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1c67c71e4_IsF64(_6434_prim.ptr())) {
						_case_begin_1d6873e40:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1c67c58da_IsI8(_6434_prim.ptr())) {
						_case_begin_1d6873ea6:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1c67c5b71_IsI16(_6434_prim.ptr())) {
						_case_begin_1d68748d0:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1c67c5e07_IsI32(_6434_prim.ptr())) {
						_case_begin_1d6874957:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1c67c618d_IsI64(_6434_prim.ptr())) {
						_case_begin_1d68749ce:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1c67c6424_IsU8(_6434_prim.ptr())) {
						_case_begin_1d6874a56:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1c67c66aa_IsU16(_6434_prim.ptr())) {
						_case_begin_1d6874acd:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1c67c6941_IsU32(_6434_prim.ptr())) {
						_case_begin_1d6874b55:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1c67c6bc7_IsU64(_6434_prim.ptr())) {
						_case_begin_1d6874bcc:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1c67c747a_IsInt(_6434_prim.ptr())) {
						_case_begin_1d6874c54:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1c67c7711_IsUint(_6434_prim.ptr())) {
						_case_begin_1d6874ccb:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1c67c7997_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1d6874d53:;
						{
							_61211_item=_1c66822d0_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1d6873bba:;
						{
							__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c67bbccc_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1d6873b43:;
				};
			}
		}
		else {
			_case_begin_1d6866608:;
			{
				__jule_panic_s((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c67bbccc_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1d686654d:;
	};
	return _1c67b7d1c_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1c678de14_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1c6788b56_Data> _1c6697218__Bits(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _68627_e, jule::Ptr<_1c663c961_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67c49e9_Prim> _6913_prim = _1c67be087_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1c678ae11_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6963_n = _1dd713c51_BitsizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1c678ae11_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _7017_constant = static__1dd71ecc3_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6697614__Elem(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _71027_e, jule::Ptr<_1c663c961_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67cbcdc_Ptr> _7157_ptr = _1c67be5a4_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1c67cc859_IsUnsafe(_7157_ptr)) {
			_1c678ae11_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c67c8525_Sptr> _7237_sptr = _1c67be31d_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c67c8ee8_Slc> _7277_slice = _1c67c00dd_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1c67cb319_Arr> _7317_array = _1c67bed57_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1c66816a8_Enum> _7357_enm = _1c67be83a_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1c678ae11_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6697a10__Size(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _74327_e, jule::Ptr<_1c663c961_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67cb319_Arr> _7487_arr = _1c67bed57_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1c678ae11_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _7537_constant = static__1dd71ecc3_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6697e0b__Key(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _76226_e, jule::Ptr<_1c663c961_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67ca68c_Map> _7677_m = _1c67c0b27_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1c678ae11_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1c6788b56_Data> _1c6698307__Value(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _77528_e, jule::Ptr<_1c663c961_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67ca68c_Map> _7807_m = _1c67c0b27_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1c678ae11_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1c6788b56_Data> _1c6698703__Fields(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _78829_e, jule::Ptr<_1c663c961_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c665865d_StructIns> _7937_s = _1c67c060a_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c6687add_comptimeStructFields>(_1c6687add_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	};
	jule::Ptr<_1c66816a8_Enum> _8037_enm = _1c67be83a_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668daa0_comptimeEnumFields>(_1c668daa0_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	};
	_1c678ae11_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6698aee__Statics(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _81730_e, jule::Ptr<_1c663c961_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c665865d_StructIns> _8227_s = _1c67c060a_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1c678ae11_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c668ad22_comptimeStatics>(_1c668ad22_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6698eea__Binded(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _83629_e, jule::Ptr<_1c663c961_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _8417_constant = static__1dd720356_NewBool(_1c67bc77d_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66993e6__Ordered(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _84926_e, jule::Ptr<_1c663c961_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _8547_constant = static__1dd720356_NewBool(_1c67bd54d_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66997e2__Comparable(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _86229_e, jule::Ptr<_1c663c961_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _8677_constant = static__1dd720356_NewBool(_1c67bd031_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6699bdd__Mutable(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _87526_e, jule::Ptr<_1c663c961_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _8807_constant = static__1dd720356_NewBool(_1c67bd2b7_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669a0d9__Types(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _88828_e, jule::Ptr<_1c663c961_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67c9adc_Tuple> _8937_tup = _1c67c0dad_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1c678ae11_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6693c70_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1c6693c70_comptimeTypeInfos>(_1c6693c70_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66956de_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d68b825e:;
		if (it != expr_end) {
			jule::Ptr<_1c67bb8d1_TypeKind> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c67061bc_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1d68b825e:;
			++it;
			goto _iter_begin_1d68b825e;
		}
		_iter_end_1d68b825e:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669a4d5__CanNil(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _91129_e, jule::Ptr<_1c663c961_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _9167_constant = static__1dd720356_NewBool(_1c67bd7d4_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669a8d1__GC(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _92425_e, jule::Ptr<_1c663c961_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _9297_constant = static__1dd720356_NewBool(_1c67bda6a_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669accc__Result(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _93729_e, jule::Ptr<_1c663c961_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _9427_f = _1c67c0374_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1c678ae11_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1c68a1411_primVoid));;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1c6788b56_Data> _1c669b1c8__Params(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Ptr<_1c678a87d_eval>* _95329_e, jule::Ptr<_1c663c961_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _9587_f = _1c67c0374_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1c678ae11_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c6692411_comptimeParams>(_1c6692411_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669b519_subIdent(jule::Ptr<_1c66956de_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1d68ce51c:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _9738_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68d10ce, jule::Ptr<__jule_anon_1d68d10ce_ctx>::make(__jule_anon_1d68d10ce_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68d10ce_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1d68ce583:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _9808_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68d3059, jule::Ptr<__jule_anon_1d68d3059_ctx>::make(__jule_anon_1d68d3059_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68d3059_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1d68ce5e9:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _9878_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68d4ed4, jule::Ptr<__jule_anon_1d68d4ed4_ctx>::make(__jule_anon_1d68d4ed4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68d4ed4_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1d68ce781:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _9948_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68d6e5e, jule::Ptr<__jule_anon_1d68d6e5e_ctx>::make(__jule_anon_1d68d6e5e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68d6e5e_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1d68ce808:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10018_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68d8dd9, jule::Ptr<__jule_anon_1d68d8dd9_ctx>::make(__jule_anon_1d68d8dd9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68d8dd9_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1d68ce880:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10088_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68dad64, jule::Ptr<__jule_anon_1d68dad64_ctx>::make(__jule_anon_1d68dad64_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68dad64_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1d68ce907:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10158_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68dccde, jule::Ptr<__jule_anon_1d68dccde_ctx>::make(__jule_anon_1d68dccde_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68dccde_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1d68cea17:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10228_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68dec69, jule::Ptr<__jule_anon_1d68dec69_ctx>::make(__jule_anon_1d68dec69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68dec69_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1d68cea7d:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10298_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68e1e69, jule::Ptr<__jule_anon_1d68e1e69_ctx>::make(__jule_anon_1d68e1e69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68e1e69_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1d68ceae4:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10368_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68e3de4, jule::Ptr<__jule_anon_1d68e3de4_ctx>::make(__jule_anon_1d68e3de4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68e3de4_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1d68ceb5a:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10438_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68e5d6e, jule::Ptr<__jule_anon_1d68e5d6e_ctx>::make(__jule_anon_1d68e5d6e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68e5d6e_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1d68cebd2:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10508_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68e7ce9, jule::Ptr<__jule_anon_1d68e7ce9_ctx>::make(__jule_anon_1d68e7ce9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68e7ce9_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1d68cec59:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10578_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68e9c74, jule::Ptr<__jule_anon_1d68e9c74_ctx>::make(__jule_anon_1d68e9c74_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68e9c74_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1d68cecd1:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10648_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68ebbee, jule::Ptr<__jule_anon_1d68ebbee_ctx>::make(__jule_anon_1d68ebbee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68ebbee_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1d68ced58:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10718_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d68edb79, jule::Ptr<__jule_anon_1d68edb79_ctx>::make(__jule_anon_1d68edb79_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d68edb79_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1d68cedd0:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10788_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6900b04, jule::Ptr<__jule_anon_1d6900b04_ctx>::make(__jule_anon_1d6900b04_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6900b04_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1d68cee57:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10858_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6902a7e, jule::Ptr<__jule_anon_1d6902a7e_ctx>::make(__jule_anon_1d6902a7e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6902a7e_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1d68ceece:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10928_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6904a09, jule::Ptr<__jule_anon_1d6904a09_ctx>::make(__jule_anon_1d6904a09_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6904a09_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1d68d0056:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _10998_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6906984, jule::Ptr<__jule_anon_1d6906984_ctx>::make(__jule_anon_1d6906984_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6906984_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1d68cbd77:;
			{
				return nullptr;;
			}
		}
		_match_end_1d68ce2ec:;
	};
}








inline jule::Bool _1c669b7e4_comptimeValue_eq(_1c669b7e4_comptimeValue *_self_, _1c669b7e4_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1c669bb9b_Str(_1c669b7e4_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1c669bedc_Equal(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _111818_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c669c54d__Unwrap(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _112229_e, jule::Ptr<_1c663c961_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1c6788b56_Data> _1c669c949__Type(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _113027_e, jule::Ptr<_1c663c961_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1c6788b56_Data> _1c669cd45__Lvalue(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _113829_e, jule::Ptr<_1c663c961_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _11437_constant = static__1dd720356_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669d241__Mutable(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _115130_e, jule::Ptr<_1c663c961_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _11567_constant = static__1dd720356_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669d63c__Const(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _116428_e, jule::Ptr<_1c663c961_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _11697_constant = static__1dd720356_NewBool(_1c6789591_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c669da38__Field(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _117728_e, jule::Ptr<_1c663c961_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c665865d_StructIns> _11827_s = _1c67c060a_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_11827_s == nullptr)) {
		_1c678ae11_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1c6788b56_Data> _11887_d = _1c67a96e3_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6789591_IsConst(_11887_d.ptr())))) {
		_1c678ae11_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c67c49e9_Prim> _11963_prim = _1c67be087_Prim((*(_11887_d))._field_Kind);;
	if (((_11963_prim == nullptr) || (!(_1c67c7eb4_IsStr(_11963_prim.ptr()))))) {
		_1c678ae11_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_11887_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1dd721a0b_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1c6657aad_FieldIns> _12027_f = _1c6659a49_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1c678ae11_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12013_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1c67a23cd_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1c66a9c97_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c669de34__Method(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Ptr<_1c678a87d_eval>* _121229_e, jule::Ptr<_1c663c961_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1c665865d_StructIns> _12187_s = static_cast<jule::Ptr<_1c665865d_StructIns>>(nullptr);;
	if ((_1c67be31d_Sptr((*((*(_self_))._field_data))._field_Kind.ptr()) != nullptr)) {
		_12187_s=_1c67c060a_Struct((*(_1c67be31d_Sptr((*((*(_self_))._field_data))._field_Kind)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1c67c060a_Struct((*((*(_self_))._field_data))._field_Kind.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1c678ae11_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_data))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1c6788b56_Data> _12307_d = _1c67a96e3_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6789591_IsConst(_12307_d.ptr())))) {
		_1c678ae11_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c67c49e9_Prim> _12383_prim = _1c67be087_Prim((*(_12307_d))._field_Kind);;
	if (((_12383_prim == nullptr) || (!(_1c67c7eb4_IsStr(_12383_prim.ptr()))))) {
		_1c678ae11_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_12307_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1dd721a0b_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1c666a51b_Fn> _12457_m = _1c6659708_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1c678ae11_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12433_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1c67b83c2_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1c67a29e9_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1c66a9c97_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c669e275_subIdent(jule::Ptr<_1c669b7e4_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1d6931a14:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12618_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6932ecc, jule::Ptr<__jule_anon_1d6932ecc_ctx>::make(__jule_anon_1d6932ecc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6932ecc_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1d6931a7a:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12688_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6934e57, jule::Ptr<__jule_anon_1d6934e57_ctx>::make(__jule_anon_1d6934e57_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6934e57_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1d6931ae1:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12758_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6936dd2, jule::Ptr<__jule_anon_1d6936dd2_ctx>::make(__jule_anon_1d6936dd2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6936dd2_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1d6931b68:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12828_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6938d5c, jule::Ptr<__jule_anon_1d6938d5c_ctx>::make(__jule_anon_1d6938d5c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6938d5c_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1d6931d55:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12898_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d693acd7, jule::Ptr<__jule_anon_1d693acd7_ctx>::make(__jule_anon_1d693acd7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d693acd7_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1d6931dbb:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _12968_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d693cc62, jule::Ptr<__jule_anon_1d693cc62_ctx>::make(__jule_anon_1d693cc62_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d693cc62_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1d6931e32:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _13038_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d693ebdc, jule::Ptr<__jule_anon_1d693ebdc_ctx>::make(__jule_anon_1d693ebdc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d693ebdc_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1d69314d6:;
			{
				return nullptr;;
			}
		}
		_match_end_1d69318c1:;
	};
}







inline jule::Str _1c669e907_Str(_1c669e550_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1c669ec48_Equal(jule::Ptr<_1c669e550_comptimeFiles> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _132218_other) {
	return false;;
}



inline void _1c66a01cc_ready(_1c669e550_comptimeFiles* _self_, jule::Ptr<_1c672acb3_Var>* _132626_keyA, jule::Ptr<_1c672acb3_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a0ebe_comptimeFile>(_1c66a0ebe_comptimeFile{._field_file=jule::Ptr<_1c678348b_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18)})});
	};
}



inline void _1c66a0540_index(_1c669e550_comptimeFiles* _self_, jule::Ptr<_1c6788b56_Data>* _134726_d, jule::I64 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a0ebe_comptimeFile>(_1c66a0ebe_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18)});
}



inline void _1c66a095d_step(_1c669e550_comptimeFiles* _self_, jule::I64 _135820_i, jule::Ptr<_1c672acb3_Var>* _135833_keyA, jule::Ptr<_1c672acb3_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c66a0ebe_comptimeFile>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I64 _1c66a0be4_len(_1c669e550_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1c66a0ebe_comptimeFile_eq(_1c66a0ebe_comptimeFile *_self_, _1c66a0ebe_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1c66a1376_Str(_1c66a0ebe_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1c66a16b7_Equal(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _138218_other) {
	return false;;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a1bd4__Path(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _138627_e, jule::Ptr<_1c663c961_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _13917_constant = static__1dd720620_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a20d0__Name(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _139927_e, jule::Ptr<_1c663c961_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _14047_constant = static__1dd720620_NewStr(_1c662552b_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a24cb__Dir(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Ptr<_1c678a87d_eval>* _141226_e, jule::Ptr<_1c663c961_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dd71e850_Const> _14177_constant = static__1dd720620_NewStr(_1c6625295_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a281c_subIdent(jule::Ptr<_1c66a0ebe_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1d6953607:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _14288_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d6954927, jule::Ptr<__jule_anon_1d6954927_ctx>::make(__jule_anon_1d6954927_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6954927_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d69536a1:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _14358_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69568a2, jule::Ptr<__jule_anon_1d69568a2_ctx>::make(__jule_anon_1d69568a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69568a2_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1d6953728:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _14428_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d695882c, jule::Ptr<__jule_anon_1d695882c_ctx>::make(__jule_anon_1d695882c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d695882c_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1d69532e9:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6953519:;
	};
}







inline jule::Str _1c66a31d0_Str(_1c66a2ae7_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1c66a3521_Equal(jule::Ptr<_1c66a2ae7_comptimeDecls> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _146118_other) {
	return false;;
}



inline void _1c66a3895_ready(_1c66a2ae7_comptimeDecls* _self_, jule::Ptr<_1c672acb3_Var>* _146526_keyA, jule::Ptr<_1c672acb3_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)})});
	};
}



inline void _1c66a3c08_index(_1c66a2ae7_comptimeDecls* _self_, jule::Ptr<_1c6788b56_Data>* _148626_d, jule::I64 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)});
}



inline void _1c66a4126_step(_1c66a2ae7_comptimeDecls* _self_, jule::I64 _149520_i, jule::Ptr<_1c672acb3_Var>* _149533_keyA, jule::Ptr<_1c672acb3_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c66a4dd5_comptimeDecl>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I64 _1c66a43ac_len(_1c66a2ae7_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1c66a4dd5_comptimeDecl_eq(_1c66a4dd5_comptimeDecl *_self_, _1c66a4dd5_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1c66a528c_Str(_1c66a4dd5_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1c66a55cd_Equal(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _153418_other) {
	return false;;
}



inline jule::Str _1c66a5a2e_declAsStr(_1c66a4dd5_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6963925:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d69633c5:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d69637d2:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d6963859:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1d6963ace:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d6963b56:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d6963dcb:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6963e42:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1d6963ea8:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d696401e:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1d696376b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1d6963507:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c66a5e2a__Name(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _156527_e, jule::Ptr<_1c663c961_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d696b17a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d696b532:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c666a51b_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d696b598:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c66816a8_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d696b620:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6682db3_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1d696b697:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c667de9c_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d696b71e:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c66528cc_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d696bac6:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c67baade_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d696bb3c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1d696bba3:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6680b3b_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d696bc19:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6668a47_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1d696b4bb:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1d696b455:;
	};
	jule::Ptr<_1dd71e850_Const> _15957_constant = static__1dd720620_NewStr(_15707_name);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a6326__Public(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _160329_e, jule::Ptr<_1c663c961_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1d6975690:;
			{
				_1c678ae11_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6975a36:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6975a9c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c666a51b_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d6975b13:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c66816a8_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d6975b8a:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6682db3_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1d6975c12:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c667de9c_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d6975c89:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c66528cc_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d69760db:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c67baade_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6976163:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1d69759c0:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1d6975959:;
	};
	jule::Ptr<_1dd71e850_Const> _16337_constant = static__1dd720356_NewBool(_16087_public);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a6722__Binded(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _164129_e, jule::Ptr<_1c663c961_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1d698029e:;
			{
				_1c678ae11_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d697ee80:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d697eee6:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c666a51b_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d698005c:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c67baade_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d69800c3:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1d697ee19:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1d697eda3:;
	};
	jule::Ptr<_1dd71e850_Const> _16677_constant = static__1dd720356_NewBool(_16467_binded);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a6b1d__Exceptional(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _167534_e, jule::Ptr<_1c663c961_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d698589d:;
			{
				goto _match_end_1d6986c34;
			}
		}
		else {
			_case_begin_1d6986c9a:;
			{
				_1c678ae11_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d6986c34:;
	};
	jule::Ptr<_1c666a51b_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1c666a51b_Fn>(&__jule_any_type26);;
	jule::Ptr<_1dd71e850_Const> _16887_constant = static__1dd720356_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a7019__Mutable(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _169630_e, jule::Ptr<_1c663c961_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
			_case_begin_1d698bdc1:;
			{
				_1c678ae11_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d698baa2:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6668a47_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1d698bb18:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c66528cc_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d698bb7e:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1d698ba3b:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1d698b9c5:;
	};
	jule::Ptr<_1dd71e850_Const> _17217_constant = static__1dd720356_NewBool(_17017_mutable);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a7415__Variadic(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _172931_e, jule::Ptr<_1c663c961_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8) {
			_case_begin_1d6993845:;
			{
				_1c678ae11_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d6993526:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6668a47_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1d69934b0:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1d6993449:;
	};
	jule::Ptr<_1dd71e850_Const> _17527_constant = static__1dd720356_NewBool(_17347_variadic);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a7811__Reference(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _176032_e, jule::Ptr<_1c663c961_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19) {
			_case_begin_1d69991ca:;
			{
				_1c678ae11_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6998dab:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1d6998e22:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1c6668a47_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1d6998d45:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1d6998cce:;
	};
	jule::Ptr<_1dd71e850_Const> _17847_constant = static__1dd720356_NewBool(_17657_ref);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a7c0c__Params(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _179229_e, jule::Ptr<_1c663c961_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22) {
			_case_begin_1d699d6da:;
			{
				_1c678ae11_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d699eed3:;
			{
				jule::Ptr<_1c666a51b_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1c666a51b_Fn>();;
				jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69a3646:;
					if (it != expr_end) {
						jule::I64 _18129_i = it - expr->begin();
						jule::Ptr<_1c6668a47_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type22)});
						}
						_iter_next_1d69a3646:;
						++it;
						_18129_i++;
						goto _iter_begin_1d69a3646;
					}
					_iter_end_1d69a3646:;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a2ae7_comptimeDecls>(_1c66a2ae7_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d699ead7:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1d699ea71:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c66a8108__Fields(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _182729_e, jule::Ptr<_1c663c961_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26) {
			_case_begin_1d69a7183:;
			{
				_1c678ae11_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d69a6d64:;
			{
				jule::Ptr<_1c66816a8_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1c66816a8_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69aa4b6:;
					if (it != expr_end) {
						jule::I64 _18479_i = it - expr->begin();
						jule::Ptr<_1c6680b3b_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type21)});
						}
						_iter_next_1d69aa4b6:;
						++it;
						_18479_i++;
						goto _iter_begin_1d69aa4b6;
					}
					_iter_end_1d69aa4b6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d69a6dca:;
			{
				jule::Ptr<_1c6655803_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69ac3ca:;
					if (it != expr_end) {
						jule::I64 _18539_i = it - expr->begin();
						jule::Ptr<_1c66528cc_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type19)});
						}
						_iter_next_1d69ac3ca:;
						++it;
						_18539_i++;
						goto _iter_begin_1d69ac3ca;
					}
					_iter_end_1d69ac3ca:;
				};
			}
		}
		else {
			_case_begin_1d69a6ced:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1d69a6c87:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a2ae7_comptimeDecls>(_1c66a2ae7_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a8504__Statics(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _186830_e, jule::Ptr<_1c663c961_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1d69b0e5b:;
			{
				_1c678ae11_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d69b0b3c:;
			{
				jule::Ptr<_1c6655803_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69b437c:;
					if (it != expr_end) {
						jule::I64 _18899_i = it - expr->begin();
						jule::Ptr<_1c672acb3_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type8)});
						}
						_iter_next_1d69b437c:;
						++it;
						_18899_i++;
						goto _iter_begin_1d69b437c;
					}
					_iter_end_1d69b437c:;
				};
			}
		}
		else {
			_case_begin_1d69b0ac6:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1d69b0a60:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a2ae7_comptimeDecls>(_1c66a2ae7_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a8900__Methods(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Ptr<_1c678a87d_eval>* _190430_e, jule::Ptr<_1c663c961_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type19 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type24) {
			_case_begin_1d69b7e0d:;
			{
				_1c678ae11_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c66a5a2e_declAsStr(_self_.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1d69b7ade:;
			{
				jule::Ptr<_1c667de9c_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1c667de9c_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69bb241:;
					if (it != expr_end) {
						jule::I64 _19249_i = it - expr->begin();
						jule::Ptr<_1c666a51b_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type26)});
						}
						_iter_next_1d69bb241:;
						++it;
						_19249_i++;
						goto _iter_begin_1d69bb241;
					}
					_iter_end_1d69bb241:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d69b7b55:;
			{
				jule::Ptr<_1c6655803_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1c6655803_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66a4dd5_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66a4dd5_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69bd155:;
					if (it != expr_end) {
						jule::I64 _19309_i = it - expr->begin();
						jule::Ptr<_1c666a51b_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1c66a4dd5_comptimeDecl>(_1c66a4dd5_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type26)});
						}
						_iter_next_1d69bd155:;
						++it;
						_19309_i++;
						goto _iter_begin_1d69bd155;
					}
					_iter_end_1d69bd155:;
				};
			}
		}
		else {
			_case_begin_1d69b7a78:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1d69b7a12:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a2ae7_comptimeDecls>(_1c66a2ae7_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a8c41_subIdent(jule::Ptr<_1c66a4dd5_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1d69be91a:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19488_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69c1103, jule::Ptr<__jule_anon_1d69c1103_ctx>::make(__jule_anon_1d69c1103_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69c1103_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1d69be981:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19558_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69c307d, jule::Ptr<__jule_anon_1d69c307d_ctx>::make(__jule_anon_1d69c307d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69c307d_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1d69bea08:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19628_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69c5008, jule::Ptr<__jule_anon_1d69c5008_ctx>::make(__jule_anon_1d69c5008_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69c5008_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1d69bea80:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19698_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69c6e83, jule::Ptr<__jule_anon_1d69c6e83_ctx>::make(__jule_anon_1d69c6e83_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69c6e83_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1d69bec39:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19768_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69c8e0d, jule::Ptr<__jule_anon_1d69c8e0d_ctx>::make(__jule_anon_1d69c8e0d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69c8e0d_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1d69beca0:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19838_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69cad88, jule::Ptr<__jule_anon_1d69cad88_ctx>::make(__jule_anon_1d69cad88_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69cad88_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1d69bed27:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19908_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69ccd13, jule::Ptr<__jule_anon_1d69ccd13_ctx>::make(__jule_anon_1d69ccd13_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69ccd13_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1d69bed9e:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _19978_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69cec8d, jule::Ptr<__jule_anon_1d69cec8d_ctx>::make(__jule_anon_1d69cec8d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69cec8d_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1d69beec0:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _20048_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69d1e8d, jule::Ptr<__jule_anon_1d69d1e8d_ctx>::make(__jule_anon_1d69d1e8d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69d1e8d_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1d69c0036:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _20118_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69d3e18, jule::Ptr<__jule_anon_1d69d3e18_ctx>::make(__jule_anon_1d69d3e18_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69d3e18_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1d69c009c:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _20188_method = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>((void*)__jule_anon_1d69d5d93, jule::Ptr<__jule_anon_1d69d5d93_ctx>::make(__jule_anon_1d69d5d93_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69d5d93_ctx_handler), ._field_reloaded=false});;
				return _1c66a93c3_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1d69ba1b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1d69be6c8:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*> _1c66abdba_readyFn(jule::Ptr<_1c66ab98b_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*>((void*)__jule_anon_1d69e2168, jule::Ptr<__jule_anon_1d69e2168_ctx>::make(__jule_anon_1d69e2168_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d69e2168_ctx_handler);;
}



inline jule::Bool _1c66ac151_readyFi(jule::Ptr<_1c66ab98b_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c6715a4a_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1c66abdba_readyFn(_self_)));;
}



inline jule::Bool _1c66ac3d7_readySi(jule::Ptr<_1c66ab98b_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c66abdba_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1c66ac66d_ready(jule::Ptr<_1c66ab98b_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1c66ac151_readyFi(_self_);;
	};
	return _1c66ac3d7_readySi(_self_);;
}



inline jule::Bool _1c66ac904_check(jule::Ptr<_1c66ab98b_constraintChecker> _self_) {
	if ((!(_1c66ac66d_ready(_self_)))) {
		return false;;
	};
	_julec_label_1d6a02c8e:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6a03245:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1c67b9eea_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1d6a03245;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6a04455:;
					if (it != expr_end) {
						jule::Ptr<_1c67bb8d1_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1c67c49e9_Prim> _1259_prim = _1c67be087_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1c67c5654_IsConstraint(_1259_prim))) {
								if (_1c66ad152_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1d6a03245;
								};
								goto _iter_next_1d6a04455;
							};
							if (_1c67bc11d_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1d6a03245;
							};
						}
						_iter_next_1d6a04455:;
						++it;
						goto _iter_begin_1d6a04455;
					}
					_iter_end_1d6a04455:;
				};
				_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c66acc89_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1d6a03245:;
			++it;
			_1208_i++;
			goto _iter_begin_1d6a03245;
		}
		_iter_end_1d6a03245:;
	};
	return true;;
}







inline jule::Bool _1c66ae1db_IsTraitImpl(_1c66adce0_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c66ae472_IsStructImpl(_1c66adce0_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1c66b39d7_If_eq(_1c66b39d7_If *_self_, _1c66b39d7_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1c66b3cd4_Else_eq(_1c66b3cd4_Else *_self_, _1c66b3cd4_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1c66b44ee_InfIter_eq(_1c66b44ee_InfIter *_self_, _1c66b44ee_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1c66b49a5_WhileIter_eq(_1c66b49a5_WhileIter *_self_, _1c66b49a5_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1c66b4d4b_IsWhileNext(_1c66b49a5_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1c66b5401_RangeIter_eq(_1c66b5401_RangeIter *_self_, _1c66b5401_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1c66b5786_ContSt_eq(_1c66b5786_ContSt *_self_, _1c66b5786_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1c66b5b60_BreakSt_eq(_1c66b5b60_BreakSt *_self_, _1c66b5b60_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1c66b6116_Label_eq(_1c66b6116_Label *_self_, _1c66b6116_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1c66b6776_GotoSt_eq(_1c66b6776_GotoSt *_self_, _1c66b6776_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1c66b6b50_Postfix_eq(_1c66b6b50_Postfix *_self_, _1c66b6b50_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1c66b7106_Assign_eq(_1c66b7106_Assign *_self_, _1c66b7106_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1c66b901a_FallSt_eq(_1c66b901a_FallSt *_self_, _1c66b901a_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1c66b93b1_RetSt_eq(_1c66b93b1_RetSt *_self_, _1c66b93b1_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1c66b9867_scopeLabel_eq(_1c66b9867_scopeLabel *_self_, _1c66b9867_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1c66ba857_scopeChecker_eq(_1c66ba857_scopeChecker *_self_, _1c66ba857_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66bad30_SelectPackage(_1c66ba857_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _37429_selector) {
	return _1c6706d27_SelectPackage((*(_self_))._field_s.ptr(), _37429_selector);;
}



inline jule::Ptr<_1c672acb3_Var> _1c66bb22b_FindVar(_1c66ba857_scopeChecker* _self_, jule::Str _38523_ident, jule::Bool _38535_binded) {
	if ((!(_38535_binded))) {
		jule::Ptr<_1c672acb3_Var> _3878_v = _1c66be592_findVar(_self_, _38523_ident);;
		if ((_3878_v != nullptr)) {
			return _3878_v;;
		};
	};
	return _1c6707223_FindVar((*(_self_))._field_s.ptr(), _38523_ident, _38535_binded);;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c66bb627_FindTypeAlias(_1c66ba857_scopeChecker* _self_, jule::Str _40229_ident, jule::Bool _40241_binded) {
	;
	jule::Ptr<_1c67baade_TypeAlias> _4057_ta = _1c678648e_findTypeAlias((*(_self_))._field_table.ptr(), &(_40229_ident), _40241_binded, true);;
	if ((_4057_ta != nullptr)) {
		return _4057_ta;;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _4107_parent = (*(_self_))._field_parent;;
	while ((_4107_parent != nullptr)) {
		{
			_4057_ta=_1c678648e_findTypeAlias((*(_4107_parent))._field_table, &(_40229_ident), _40241_binded, true);
			if ((_4057_ta != nullptr)) {
				return _4057_ta;;
			};
			_4107_parent=(*_4107_parent.alloc)._field_parent;
		}
	_iter_next_1d6a570ce:;
	}
	_iter_end_1d6a570ce:;;
	return _1c670761e_FindTypeAlias((*(_self_))._field_s.ptr(), _40229_ident, _40241_binded);;
}



inline jule::Ptr<_1c6655803_Struct> _1c66bba23_FindStruct(_1c66ba857_scopeChecker* _self_, jule::Str _42726_ident, jule::Bool _42738_binded) {
	return _1c6707a1a_FindStruct((*(_self_))._field_s.ptr(), _42726_ident, _42738_binded);;
}



inline jule::Ptr<_1c666a51b_Fn> _1c66bbe1e_FindFn(_1c66ba857_scopeChecker* _self_, jule::Str _43622_ident, jule::Bool _43634_binded) {
	return _1c6707e16_FindFn((*(_self_))._field_s.ptr(), _43622_ident, _43634_binded);;
}



inline jule::Ptr<_1c667de9c_Trait> _1c66bc260_FindTrait(_1c66ba857_scopeChecker* _self_, jule::Str _44525_ident) {
	return _1c6708257_FindTrait((*(_self_))._field_s.ptr(), _44525_ident);;
}



inline jule::Ptr<_1c66816a8_Enum> _1c66bc5a1_FindEnum(_1c66ba857_scopeChecker* _self_, jule::Str _45424_ident) {
	return _1c6708598_FindEnum((*(_self_))._field_s.ptr(), _45424_ident);;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c66bc8e2_FindTypeEnum(_1c66ba857_scopeChecker* _self_, jule::Str _46328_ident) {
	return _1c67088d9_FindTypeEnum((*(_self_))._field_s.ptr(), _46328_ident);;
}



inline jule::Bool _1c66bcc44_isUnsafe(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	jule::Ptr<_1c66ba857_scopeChecker> _4717_scope = _self_;;
	_julec_label_1d6a5c39d:;
	if ((*((*(_4717_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4717_scope.alloc)._field_parent != nullptr)) {
		_4717_scope=(*_4717_scope.alloc)._field_parent;
		goto _julec_label_1d6a5c39d;
	};
	return false;;
}



inline jule::Bool _1c66bceca_isRoot(_1c66ba857_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c66bd1c8_stop(_1c66ba857_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c66bd45e_stopped(_1c66ba857_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c66bd6e5_isDeferred(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	jule::Ptr<_1c66ba857_scopeChecker> _5047_scope = _self_;;
	_julec_label_1d6a5ee72:;
	if ((*((*(_5047_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5047_scope.alloc)._field_parent != nullptr)) {
		_5047_scope=(*_5047_scope.alloc)._field_parent;
		goto _julec_label_1d6a5ee72;
	};
	return false;;
}



inline void _1c66bd99d_pushCaptured(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c672acb3_Var>* _52534_v) {
	jule::Ptr<_1c66ba857_scopeChecker> _5267_sc = _self_;;
	for (;;) {
		{
			if (((*(_5267_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5267_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6a625a1:;
					if (it != expr_end) {
						jule::Ptr<_1c672acb3_Var> _52912_cv = *it;
						{
							if ((_52912_cv == (*(_52534_v)))) {
								goto _julec_label_1d6a634e7;
							};
						}
						_iter_next_1d6a625a1:;
						++it;
						goto _iter_begin_1d6a625a1;
					}
					_iter_end_1d6a625a1:;
				};
				(*(*(_5267_sc))._field_captured.alloc)=jule::append((*(*(_5267_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_52534_v)); __jule_collection; }));
				_julec_label_1d6a634e7:;
			};
			if (((*_5267_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1d6a61847;
			};
			_5267_sc=(*_5267_sc.alloc)._field_parent;
			if ((!(_1c67b8e83_isVarCaptured(_5267_sc, _5267_sc, (*(_52534_v)))))) {
				goto _iter_end_1d6a61847;
			};
		}
	_iter_next_1d6a61847:;
	}
	_iter_end_1d6a61847:;;
}



inline jule::Ptr<_1c66ba857_scopeChecker> _1c66bdc34_getRoot(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	jule::Ptr<_1c66ba857_scopeChecker> _5507_root = _self_;;
	while ((((*(_5507_root))._field_parent != nullptr) && ((*_5507_root.alloc)._field_owner == nullptr))) {
		{
			_5507_root=(*_5507_root.alloc)._field_parent;
		}
	_iter_next_1d6a645c5:;
	}
	_iter_end_1d6a645c5:;;
	return _5507_root;;
}



inline jule::Ptr<_1c66ba857_scopeChecker> _1c66bdeba_getHardRoot(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	jule::Ptr<_1c66ba857_scopeChecker> _5607_root = _self_;;
	while (((*(_5607_root))._field_parent != nullptr)) {
		{
			_5607_root=(*_5607_root.alloc)._field_parent;
		}
	_iter_next_1d6a6585c:;
	}
	_iter_end_1d6a6585c:;;
	return _5607_root;;
}



inline jule::Ptr<_1c6671687_ReferenceStack> _1c66be251_getOwnerRefers(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	return (*((*(_1c66bdeba_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1c672acb3_Var> _1c66be592_findVar(_1c66ba857_scopeChecker* _self_, jule::Str _57223_ident) {
	;
	;
	jule::Ptr<_1c672acb3_Var> _5757_v = _1c6785ed8_findVar((*(_self_))._field_table.ptr(), &(_57223_ident), false, true);;
	if ((_5757_v != nullptr)) {
		return _5757_v;;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _5797_parent = (*(_self_))._field_parent;;
	while ((_5797_parent != nullptr)) {
		{
			_5757_v=_1c6785ed8_findVar((*(_5797_parent))._field_table, &(_57223_ident), false, true);
			if ((_5757_v != nullptr)) {
				return _5757_v;;
			};
			_5797_parent=(*_5797_parent.alloc)._field_parent;
		}
	_iter_next_1d6a683dc:;
	}
	_iter_end_1d6a683dc:;;
	return nullptr;;
}



inline jule::Ptr<_1c66b6116_Label> _1c66be8d3_findLabel(_1c66ba857_scopeChecker* _self_, jule::Str* _59326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6a6a422:;
		if (it != expr_end) {
			jule::Any _59415_st = *it;
			{
				{
					auto &_match_expr{ _59415_st };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1d6a6ac19:;
						{
							jule::Ptr<_1c66b6116_Label> _5979_label = _59415_st.unsafe_cast_ptr<_1c66b6116_Label>();;
							if (((*(_5979_label))._field_Ident == (*(_59326_ident)))) {
								return _5979_label;;
							};
						}
					}
					_match_end_1d6a6aba3:;
				};
			}
			_iter_next_1d6a6a422:;
			++it;
			goto _iter_begin_1d6a6a422;
		}
		_iter_end_1d6a6a422:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66b9867_scopeLabel> _1c66bec24_findLabelScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Str* _60932_ident) {
	jule::Ptr<_1c66b9867_scopeLabel> _6107_label = _1c66c0065_findLabelAll(_self_.ptr(), _60932_ident);;
	if (((_6107_label != nullptr) && ((*((*_6107_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _6107_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66b9867_scopeLabel> _1c66c0065_findLabelAll(_1c66ba857_scopeChecker* _self_, jule::Str* _62029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6a7114d:;
		if (it != expr_end) {
			jule::Ptr<_1c66b9867_scopeLabel> _62115_lbl = *it;
			{
				if (((*((*(_62115_lbl))._field_node))._field_Ident == (*(_62029_ident)))) {
					return _62115_lbl;;
				};
			}
			_iter_next_1d6a7114d:;
			++it;
			goto _iter_begin_1d6a7114d;
		}
		_iter_end_1d6a7114d:;
	};
	return nullptr;;
}



inline jule::Bool _1c66c0461_isDuplicatedIdent(_1c66ba857_scopeChecker* _self_, jule::Uintptr _63233_itself, jule::Str* _63251_ident) {
	jule::Ptr<_1c672acb3_Var> _6333_v = _1c66bb22b_FindVar(_self_, (*(_63251_ident)), false);;
	if (((_6333_v != nullptr) && (static_cast<jule::Uintptr>(_6333_v) != _63233_itself))) {
		if (((*_6333_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6333_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1c6708ce6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1c67baade_TypeAlias> _6413_ta = _1c66bb627_FindTypeAlias(_self_, (*(_63251_ident)), false);;
	if (((_6413_ta != nullptr) && (static_cast<jule::Uintptr>(_6413_ta) != _63233_itself))) {
		if (((*_6413_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6413_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1c6708ce6_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1c66c0719_checkVarDecl(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664776d_VarDecl> _65233_decl) {
	jule::Ptr<_1c672acb3_Var> _6537_v = _1c6676a00_buildVar(_65233_decl);;
	(*(_6537_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6537_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6537_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1c66c0461_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6537_v), &((*_6537_v.alloc)._field_Ident))) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_6537_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6537_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1c66bd1c8_stop(_self_);
		return;;
	};
	_1c671d734_checkVarDecl((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
	if (((!(_1c672b456_IsTypeInferred(_6537_v))) && (((*_6537_v.alloc)._field_Kind == nullptr) || ((*((*_6537_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1c6721ec9_evalVarValue((*(_self_))._field_s, &(_6537_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
	if (((!(_1c672b1c0_IsInitialized(_6537_v))) || ((*((*_6537_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1c66c6984_removeInteriorMutRisk(_self_, &((*(*(_6537_v))._field_Value.alloc)._field_Data));
	_1c6721b66_checkVarValue((*(_self_))._field_s, &(_6537_v));
}



inline void _1c66c09c2_checkTypeAlias(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c67baade_TypeAlias>* _68336_ta) {
	if (_1c66c0461_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_68336_ta))), &((*((*(_68336_ta))))._field_Ident))) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_68336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_68336_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1c66bd1c8_stop(_self_);
		return;;
	};
	_1c67177b6_checkTypeAliasDecl((*(_self_))._field_s, _68336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_68336_ta)); __jule_collection; }));
	if (((*((*((*(_68336_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1c66bd1c8_stop(_self_);
	};
}



inline void _1c66c0c7a_checkTypeAliasDecl(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664b420_TypeAliasDecl> _69939_decl) {
	jule::Ptr<_1c67baade_TypeAlias> _7007_ta = _1c66735ce_buildTypeAlias(_69939_decl);;
	_1c66c09c2_checkTypeAlias(_self_, &(_7007_ta));
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c1011_getChild(_1c66ba857_scopeChecker* _self_) {
	return jule::new_ptr<_1c66b35b9_Scope>(_1c66b35b9_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1c66c142e_checkChildSsc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _71035_tree, jule::Ptr<_1c66b35b9_Scope>* _71058_s, jule::Ptr<_1c66ba857_scopeChecker>* _71074_ssc) {
	(*((*(_71058_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_71058_s))))._field_ChildIndex=(*((*(_71074_ssc))))._field_childIndex;
	(*((*(_71074_ssc))))._field_parent=_self_;
	_1c66cc9ce_check((*(_71074_ssc)), _71035_tree, _71058_s);
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c182a_checkChildSc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _71734_tree, jule::Ptr<_1c66ba857_scopeChecker>* _71757_ssc) {
	jule::Ptr<_1c66b35b9_Scope> _7187_s = _1c66c1011_getChild(_self_.ptr());;
	_1c66c142e_checkChildSsc(_self_, _71734_tree, &(_7187_s), _71757_ssc);
	return _7187_s;;
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c1b6b_checkChild(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _72332_tree) {
	jule::Ptr<_1c66ba857_scopeChecker> _7247_ssc = _1c66ccc65_newChildChecker(_self_);;
	return _1c66c182a_checkChildSc(_self_, _72332_tree, &(_7247_ssc));;
}



inline void _1c66c1e24_checkAnonScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree> _72835_tree) {
	jule::Ptr<_1c66b35b9_Scope> _7297_s = _1c66c1b6b_checkChild(_self_, &(_72835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_s, &__jule_any_type29); __jule_collection; }));
}



inline void _1c66c2287_processErrorCall(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c666621a_BuiltinErrorCallExprModel>* _73338_m, jule::Ptr<_1c661e327_Token> _73369_err) {
	if (_1c66bd6e5_isDeferred(_self_)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), _73369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c66ba857_scopeChecker> _7387_root = _1c66bdc34_getRoot(_self_);;
	if ((!((*((*((*(_7387_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1c6709753_pushErr((*(_self_))._field_s, _73369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_73338_m))))._field_Func=(*_7387_root.alloc)._field_owner;
}



inline void _1c66c2540_checkExpr(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6638c37_Expr> _74630_expr) {
	jule::Ptr<_1c678a87d_eval> _7477_eval = _1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
	(*(_7477_eval))._field_ignored=true;
	jule::Ptr<_1c6788b56_Data> _7497_d = _1c67a96e3_evalExpr(_7477_eval, _74630_expr);;
	if (((_7497_d == nullptr) || ((*(_7497_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7497_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d6a9289a:;
			{
				jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _7588_m = (*(_7497_d))._field_Model.unsafe_cast_ptr<_1c666621a_BuiltinErrorCallExprModel>();;
				_1c66c2287_processErrorCall(_self_, &(_7588_m), (*(_74630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type38 || _match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41) {
			_case_begin_1d6a92eb6:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7497_d, &__jule_any_type31); __jule_collection; }));
			}
		}
		else {
			_case_begin_1d6a92e50:;
			{
				_1c6709753_pushErr((*(_self_))._field_s, (*(_74630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d6a92dd9:;
	};
}



inline jule::Ptr<_1c66b39d7_If> _1c66c2881_checkIf(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664a353_If> _77728_i) {
	jule::Ptr<_1c66b35b9_Scope> _7787_s = _1c66c1b6b_checkChild(_self_, &((*(_77728_i))._field_Scope));;
	jule::Ptr<_1c6788b56_Data> _7807_d = _1c67a96e3_evalExpr(_1c67121a6_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*_77728_i.alloc)._field_Expr);;
	if ((_7807_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c67c49e9_Prim> _7857_prim = _1c67be087_Prim((*(_7807_d))._field_Kind.ptr());;
	if (((_7857_prim == nullptr) || (!(_1c67c7c2d_IsBool(_7857_prim.ptr()))))) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*_77728_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c66b39d7_If>(_1c66b39d7_If{._field_Expr=(*(_7807_d))._field_Model, ._field_Scope=_7787_s});;
}



inline jule::Ptr<_1c66b3cd4_Else> _1c66c2bc2_checkElse(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664a72c_Else> _79730_e) {
	return jule::new_ptr<_1c66b3cd4_Else>(_1c66b3cd4_Else{._field_Scope=_1c66c1b6b_checkChild(_self_, &((*(_79730_e))._field_Scope))});;
}



inline void _1c66c2e7a_checkConditional(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664abd3_Conditional> _80337_conditional) {
	jule::Ptr<_1c66b4202_Conditional> _8047_c = jule::new_ptr<_1c66b4202_Conditional>(_1c66b4202_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1c66b39d7_If>>(nullptr), ._field_Default=jule::Ptr<_1c66b3cd4_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8047_c, &__jule_any_type42); __jule_collection; }));
	(*_8047_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b39d7_If>>::alloc(0LL, ((*(_80337_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66b39d7_If>(nullptr); __jule_collection; });
	(*_8047_c.alloc)._field_Elifs=jule::append((*_8047_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b39d7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c66c2881_checkIf(_self_, (*_80337_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_80337_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6abbe13:;
		if (it != expr_end) {
			jule::Ptr<_1c664a353_If> _81015_elif = *it;
			{
				(*_8047_c.alloc)._field_Elifs=jule::append((*_8047_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b39d7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c66c2881_checkIf(_self_, _81015_elif); __jule_collection; }));
			}
			_iter_next_1d6abbe13:;
			++it;
			goto _iter_begin_1d6abbe13;
		}
		_iter_end_1d6abbe13:;
	};
	if (((*_80337_conditional.alloc)._field_Default != nullptr)) {
		(*_8047_c.alloc)._field_Default=_1c66c2bc2_checkElse(_self_, (*_80337_conditional.alloc)._field_Default);
	};
}



inline void _1c66c3453_checkIterScopeSsc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _81934_it, jule::Ptr<_1c6644924_ScopeTree> _81951_tree, jule::Ptr<_1c66b35b9_Scope>* _81974_s, jule::Ptr<_1c66ba857_scopeChecker> _81989_ssc) {
	(*(_81989_ssc))._field_it=_81934_it;
	_1c66c142e_checkChildSsc(_self_, &(_81951_tree), _81974_s, &(_81989_ssc));
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c3909_checkIterScopeSc(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _82433_it, jule::Ptr<_1c6644924_ScopeTree> _82450_tree, jule::Ptr<_1c66ba857_scopeChecker> _82472_ssc) {
	jule::Ptr<_1c66b35b9_Scope> _8257_scope = _1c66c1011_getChild(_self_.ptr());;
	_1c66c3453_checkIterScopeSsc(_self_, _82433_it, _82450_tree, &(_8257_scope), _82472_ssc);
	return _8257_scope;;
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c3d05_checkIterScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _83031_it, jule::Ptr<_1c6644924_ScopeTree>* _83049_tree) {
	jule::Ptr<_1c66ba857_scopeChecker> _8317_ssc = _1c66ccc65_newChildChecker(_self_);;
	return _1c66c3909_checkIterScopeSc(_self_, _83031_it, (*(_83049_tree)), _8317_ssc);;
}



inline void _1c66c40ad_checkInfIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _83534_it) {
	jule::Ptr<_1c66b44ee_InfIter> _8367_kind = jule::new_ptr<_1c66b44ee_InfIter>(_1c66b44ee_InfIter{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8367_kind, &__jule_any_type43); __jule_collection; }));
	(*_8367_kind.alloc)._field_Scope=_1c66c3d05_checkIterScope(_self_, static_cast<jule::Uintptr>(_8367_kind), &((*((*(_83534_it))))._field_Scope));
}



inline void _1c66c4366_checkWhileIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _84136_it) {
	jule::Ptr<_1c6648be2_WhileKind> _8427_wh = (*((*(_84136_it))))._field_Kind.cast_ptr<_1c6648be2_WhileKind>(&__jule_any_type44);;
	if ((((*(_8427_wh))._field_Expr == nullptr) && ((*_8427_wh.alloc)._field_Next == nullptr))) {
		_1c66c40ad_checkInfIter(_self_, _84136_it);
		return;;
	};
	jule::Ptr<_1c66b49a5_WhileIter> _8487_kind = jule::new_ptr<_1c66b49a5_WhileIter>(_1c66b49a5_WhileIter{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8487_kind, &__jule_any_type45); __jule_collection; }));
	(*_8487_kind.alloc)._field_Scope=_1c66c3d05_checkIterScope(_self_, static_cast<jule::Uintptr>(_8487_kind), &((*((*(_84136_it))))._field_Scope));
	if (((*_8427_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1c6788b56_Data> _8538_d = _1c67a96e3_evalExpr(_1c67121a6_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*_8427_wh.alloc)._field_Expr);;
		if ((_8538_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c67c49e9_Prim> _8584_prim = _1c67be087_Prim((*(_8538_d))._field_Kind.ptr());;
		if ((_8584_prim == nullptr)) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_84136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c67c7c2d_IsBool(_8584_prim.ptr())))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_84136_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8487_kind.alloc)._field_Expr=(*(_8538_d))._field_Model;
	};
	if (_1c6649088_IsWhileNext(_8427_wh)) {
		if ((!(_1c66b2bd4_isValidAstStForNextSt(&((*_8427_wh.alloc)._field_Next))))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_8427_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _8784_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1c66cb615_checkNode(_self_, &((*_8427_wh.alloc)._field_Next));
		if ((_8784_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8819_st = (*((*(_self_))._field_scope))._field_Stmts[_8784_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8784_n);;
			if ((!(_1c66b2e26_isValidStForNextSt(&(_8819_st))))) {
				_1c6709753_pushErr((*(_self_))._field_s, (*_8427_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8487_kind.alloc)._field_Next=_8819_st;
		};
	};
}



inline void _1c66c4784_checkComptimeRangeIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _89144_it, jule::Ptr<_1c66b5401_RangeIter>* _89160_kind, jule::Ptr<_1c6788b56_Data>* _89183_d) {
	if (((*((*(_89160_kind))))._field_KeyA != nullptr)) {
		if (((!(_1c6708ce6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c66c0461_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_89160_kind))))._field_KeyB != nullptr)) {
		if (((!(_1c6708ce6_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c66c0461_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1c66495e9_RangeKind> _9057_rang = (*((*(_89144_it))))._field_Kind.cast_ptr<_1c66495e9_RangeKind>(&__jule_any_type46);;
	_1c66cd2d7_makeComptimeRange(_89183_d);
	if ((*((*(_89183_d))))._field_Decl) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*(_9057_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_89183_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1c677d6b7_rangeChecker _9127_rc = _1c677d6b7_rangeChecker{._field_sc=_self_, ._field_rang=_9057_rang, ._field_Kind=(*(_89160_kind)), ._field_d=(*(_89183_d))};;
	jule::Bool _9183_ok = _1c678070d_check(&_9127_rc);;
	if ((!(_9183_ok))) {
		return;;
	};
	jule::Ptr<_1c66857de_comptimeRange> _9237_comptime = _1c67c2431_comptimeRange((*((*(_89183_d))))._field_Kind);;
	((_1c66855be_comptimeRangeKindMptrData*)(*(_9237_comptime))._field_kind.safe_type())->_1c6684cb6_ready((*(_9237_comptime))._field_kind.data, &((*((*(_89160_kind))))._field_KeyA), &((*((*(_89160_kind))))._field_KeyB));
	jule::I64 _9257_i = 0LL;;
	jule::I64 _9263_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9257_i < ((_1c66855be_comptimeRangeKindMptrData*)(*_9237_comptime.alloc)._field_kind.safe_type())->_1c668546a_len((*_9237_comptime.alloc)._field_kind.data)); (_9257_i)++) {
		{
			jule::Ptr<_1c66ba857_scopeChecker> _9288_ssc = _1c66ccc65_newChildChecker(_self_);;
			jule::Ptr<_1c66b35b9_Scope> _9298_scope = _1c66c1011_getChild(_self_);;
			if (((*((*(_89160_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_89160_kind))))._field_KeyA.alloc)._field_Scope=_9298_scope;
				(*((*(_9288_ssc))._field_table))._field_Vars=jule::append((*(*(_9288_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89160_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_89160_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_89160_kind))))._field_KeyB.alloc)._field_Scope=_9298_scope;
				(*(*(_9288_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9288_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_89160_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1c66855be_comptimeRangeKindMptrData*)(*_9237_comptime.alloc)._field_kind.safe_type())->_1c66851d4_step((*_9237_comptime.alloc)._field_kind.data, _9257_i, &((*((*(_89160_kind))))._field_KeyA), &((*((*(_89160_kind))))._field_KeyB));
			_1c66c142e_checkChildSsc(_self_, &((*((*(_89144_it))))._field_Scope), &(_9298_scope), &(_9288_ssc));
			if ((_9263_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1d6ae46dd;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9298_scope, &__jule_any_type29); __jule_collection; }));
		}
	_iter_next_1d6ae46dd:;
	}
	_iter_end_1d6ae46dd:;;
}



inline void _1c66c4a3c_checkRangeIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter>* _94836_it) {
	jule::Ptr<_1c66495e9_RangeKind> _9497_rang = (*((*(_94836_it))))._field_Kind.cast_ptr<_1c66495e9_RangeKind>(&__jule_any_type46);;
	jule::Ptr<_1c6788b56_Data> _9517_d = _1c67a93a2_evalExpr1(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*(_9497_rang))._field_Expr);;
	if ((_9517_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c66b5401_RangeIter> _9567_kind = jule::new_ptr<_1c66b5401_RangeIter>(_1c66b5401_RangeIter{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Expr=_9517_d, ._field_KeyA=jule::Ptr<_1c672acb3_Var>(nullptr), ._field_KeyB=jule::Ptr<_1c672acb3_Var>(nullptr)});;
	if ((*((*(_94836_it))))._field_Comptime) {
		_1c66c4784_checkComptimeRangeIter(_self_, _94836_it, &(_9567_kind), &(_9517_d));
		return;;
	};
	if (_1c67c1144_comptime((*(_9517_d))._field_Kind.ptr())) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*_9497_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1c677d6b7_rangeChecker _9707_rc = _1c677d6b7_rangeChecker{._field_sc=_self_, ._field_rang=_9497_rang, ._field_Kind=_9567_kind, ._field_d=_9517_d};;
	jule::Bool _9763_ok = _1c678070d_check(&_9707_rc);;
	if ((!(_9763_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9567_kind, &__jule_any_type47); __jule_collection; }));
	jule::Ptr<_1c66ba857_scopeChecker> _9837_ssc = _1c66ccc65_newChildChecker(_self_);;
	jule::Ptr<_1c66b35b9_Scope> _9847_scope = _1c66c1011_getChild(_self_);;
	if (((*(_9567_kind))._field_KeyA != nullptr)) {
		if (((!(_1c6708ce6_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c66c0461_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9567_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*(*(_9567_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9567_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9567_kind))._field_KeyA.alloc)._field_Scope=_9847_scope;
		(*((*(_9837_ssc))._field_table))._field_Vars=jule::append((*(*(_9837_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9567_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9567_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1c6708ce6_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c66c0461_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9567_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*(*(_9567_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9567_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9567_kind))._field_KeyB.alloc)._field_Scope=_9847_scope;
		(*(*(_9837_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9837_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9567_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1c66c3453_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9567_kind), (*((*(_94836_it))))._field_Scope, &(_9847_scope), _9837_ssc);
	(*_9567_kind.alloc)._field_Scope=_9847_scope;
}



inline void _1c66c4ce5_checkIter(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66483b7_Iter> _100830_it) {
	if (_1c664875d_IsInf(_100830_it.ptr())) {
		if ((*_100830_it.alloc)._field_Comptime) {
			_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_100830_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1c66c40ad_checkInfIter(_self_, &(_100830_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_100830_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1d6b1093a:;
			{
				if ((*_100830_it.alloc)._field_Comptime) {
					_1c6709753_pushErr((*(_self_))._field_s, (*_100830_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1c66c4366_checkWhileIter(_self_, &(_100830_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1d6b11b06:;
			{
				_1c66c4a3c_checkRangeIter(_self_, &(_100830_it));
			}
		}
		else {
			_case_begin_1d6b11a90:;
			{
				jule::outln(_1d508560e_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1d6b11a29:;
	};
}



inline jule::Bool _1c66c5136_checkValidContLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _103236_it) {
	jule::Ptr<_1c66ba857_scopeChecker> _10337_scope = _self_;;
	_julec_label_1d6b18734:;
	if (((*(_10337_scope))._field_it == _103236_it)) {
		return true;;
	};
	if (((*_10337_scope.alloc)._field_parent != nullptr)) {
		_10337_scope=(*_10337_scope.alloc)._field_parent;
		goto _julec_label_1d6b18734;
	};
	return false;;
}



inline jule::Bool _1c66c5477_checkValidBreakLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Uintptr _104837_ptr) {
	jule::Ptr<_1c66ba857_scopeChecker> _10497_scope = _self_;;
	_julec_label_1d6b1b308:;
	if (((*(_10497_scope))._field_it == _104837_ptr)) {
		return true;;
	};
	if (((*_10497_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10574_mtch = static_cast<jule::Uintptr>((*(((_1c66b8822_Case*)((*_10497_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10574_mtch == _104837_ptr)) {
			return true;;
		};
	};
	if (((*_10497_scope.alloc)._field_parent != nullptr)) {
		_10497_scope=(*_10497_scope.alloc)._field_parent;
		goto _julec_label_1d6b1b308;
	};
	return false;;
}



inline jule::Ptr<_1c66b5786_ContSt> _1c66c57b8_checkContValidScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6649d9c_ContSt> _107136_c) {
	if (_1c66bd6e5_isDeferred(_self_)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_107136_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_107136_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1c66b5786_ContSt>(_1c66b5786_ContSt{._field_It=0});;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _10817_scope = _self_;;
	_julec_label_1d6b1dabe:;
	{
		
		if (((((*_10817_scope.alloc)._field_it == 0LLU) && ((*_10817_scope.alloc)._field_parent != nullptr)) && ((*_10817_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1d6b2076e:;
			{
				_10817_scope=(*_10817_scope.alloc)._field_parent;
				goto _julec_label_1d6b1dabe;
			}
		}
		else if (((*_10817_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1d6b20807:;
			{
				return jule::new_ptr<_1c66b5786_ContSt>(_1c66b5786_ContSt{._field_It=(*_10817_scope.alloc)._field_it});;
			}
		}
		_match_end_1d6b206c5:;
	};
	_1c6709753_pushErr((*(_self_))._field_s, (*_107136_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c66c5a71_checkCont(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6649d9c_ContSt> _109526_c) {
	jule::Ptr<_1c66b5786_ContSt> _10967_cont = _1c66c57b8_checkContValidScope(_self_, _109526_c);;
	if ((_10967_cont == nullptr)) {
		return;;
	};
	if (((*(_109526_c))._field_Label != nullptr)) {
		jule::Ptr<_1c66b9867_scopeLabel> _11028_label = _1c66b1760_findLabelParent(&((*(*(_109526_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11028_label == nullptr)) {
			_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11028_label))._field_used=true;
		if ((((*((*(_11028_label))._field_node))._field_Index + 1LL) >= (*((*(*(_11028_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I64 _11154_i = ((*(*(_11028_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11154_i >= (*(*((*(_11028_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11199_st = (*(*((*(_11028_label))._field_node))._field_Scope.alloc)._field_Stmts[_11154_i];;
			{
				auto &_match_expr{ _11199_st };
				
				if (_match_expr.type == &__jule_any_type43) {
					_case_begin_1d6b2c4d4:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1c66b44ee_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1d6b2b14d:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1c66b5401_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type45) {
					_case_begin_1d6b2b33a:;
					{
						(*(_10967_cont))._field_It=static_cast<jule::Uintptr>(_11199_st.unsafe_cast_ptr<_1c66b49a5_WhileIter>());
					}
				}
				else {
					_case_begin_1d6b2b2c4:;
					{
						_1c6709753_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1d6b2b25d:;
			};
		};
	};
	if (((*(_10967_cont))._field_It != 0LLU)) {
		if ((!(_1c66c5136_checkValidContLabel(_self_, (*(_10967_cont))._field_It)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_109526_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_109526_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10967_cont, &__jule_any_type48); __jule_collection; }));
}



inline void _1c66c5d29_checkLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6641ed7_LabelSt> _114231_l) {
	if ((_1c66be8d3_findLabel(_self_.ptr(), &((*(_114231_l))._field_Ident)) != nullptr)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_114231_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_114231_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c66b6116_Label> _11487_label = jule::new_ptr<_1c66b6116_Label>(_1c66b6116_Label{._field_Ident=(*_114231_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11487_label, &__jule_any_type28); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b9867_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c66b9867_scopeLabel>(_1c66b9867_scopeLabel{._field_token=(*_114231_l.alloc)._field_Token, ._field_node=_11487_label, ._field_used=false}); __jule_collection; }));
}



inline void _1c66c60d2_pushGoto(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66423b1_GotoSt> _116129_gt) {
	jule::Ptr<_1c66b6776_GotoSt> _11627_st = jule::new_ptr<_1c66b6776_GotoSt>(_1c66b6776_GotoSt{._field_Ident=(*((*_116129_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_116129_gt))._field_Label, ._field_Label=jule::Ptr<_1c66b6116_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11627_st, &__jule_any_type49); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11627_st; __jule_collection; }));
}



inline void _1c66c638a_checkPostfix(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt> _117233_a) {
	if (((*(_117233_a))._field_Left.len() > 1LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6638c37_Expr> _11787_expr = (*((*(_117233_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1c6788b56_Data> _11797_d = _1c67a96e3_evalExpr(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), _11787_expr);;
	if ((_11797_d == nullptr)) {
		return;;
	};
	_1c66b280a_checkAssign(&((*_self_.alloc)._field_s), &(_11797_d), nullptr, (*_117233_a.alloc)._field_Setter);
	if ((_1c67be5a4_Ptr((*(_11797_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c67cbcdc_Ptr> _11878_ptr = _1c67be5a4_Ptr((*(_11797_d))._field_Kind);;
		if (_1c67cc859_IsUnsafe(_11878_ptr.ptr())) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117233_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_11797_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1c67be087_Prim((*(_11797_d))._field_Kind.ptr()) == nullptr) || (!(_1dd71e344_IsNum((*(_1c67be087_Prim((*(_11797_d))._field_Kind)))._field_Kind))))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_117233_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_117233_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_11797_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c66b6b50_Postfix>(_1c66b6b50_Postfix{._field_Expr=(*(_11797_d))._field_Model, ._field_Op=(*((*_117233_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type50); __jule_collection; }));
}



inline jule::Bool _1c66c66cb_isNewAssignIdent(_1c66ba857_scopeChecker* _self_, jule::Str _120532_ident) {
	if ((_1c6621c0e_IsIgnoreIdent(_120532_ident) || (_120532_ident).empty())) {
		return false;;
	};
	return (_1c678688a_defByIdent((*(_self_))._field_table.ptr(), &(_120532_ident), false) == nullptr);;
}



inline void _1c66c6984_removeInteriorMutRisk(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6788b56_Data>* _121843_d) {
	jule::Ptr<_1c665865d_StructIns> _12193_s = _1c67c060a_Struct((*((*(_121843_d))))._field_Kind.ptr());;
	if ((_12193_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _12233_root = _1c66bdeba_getHardRoot(_self_);;
	if (((*((*(_12233_root))._field_owner))._field_Owner != _12193_s)) {
		return;;
	};
	(*((*(_121843_d))))._field_Mutable=true;
}



inline jule::Bool _1c66c6e3a_checkStructureAssignOp(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c665865d_StructIns>* _123244_s, jule::Ptr<_1c66433a1_AssignSt>* _123264_a, jule::Ptr<_1c6788b56_Data>* _123283_r) {
	jule::Ptr<_1c666d4ec_FnIns> _123511_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_123264_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d6b4d2a2:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1d6b4ce50:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d6b4ceb6:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1d6b4d02c:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d6b4d093:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d6b4d109:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d6b4d170:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1d6b4e924:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1d6b4e98a:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1d6b4ea01:;
			{
				_123511_overload=(*((*(_123244_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1d6b4c757:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_123264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123264_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c6658a15_Str((*(_123244_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1d6b4cdc8:;
	};
	if ((_123511_overload == nullptr)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_123264_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_123264_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c6658a15_Str((*(_123244_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1c666c474_ParamIns> _12677_p = (*(_123511_overload))._field_Params[1LL];;
	return _1c67127c2_checkAssignType((*(_self_))._field_s, (*((*(_12677_p))._field_Decl))._field_Reference, &((*_12677_p.alloc)._field_Kind), _123283_r, (*((*(_123264_a))))._field_Setter, _1c66be251_getOwnerRefers(_self_));;
}



inline void _1c66c71e3_checkSingleAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt>* _127139_a) {
	jule::Ptr<_1c6788b56_Data> _127211_l = nullptr;;
	if ((!(_1c6621c0e_IsIgnoreIdent((*((*((*(_127139_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1c6638c37_Expr> _12758_expr = (*((*((*(_127139_a))))._field_Left[0LL]))._field_Expr;;
		_127211_l=_1c67a96e3_evalExpr(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), _12758_expr);
		if ((_127211_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c678a87d_eval> _12827_eval = static_cast<jule::Ptr<_1c678a87d_eval>>(nullptr);;
	if ((_127211_l != nullptr)) {
		_12827_eval=_1c6711d65_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0), (*(_127211_l))._field_Kind);
	} else {
		_12827_eval=_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
	};
	(*(_12827_eval))._field_unsafety=_1c66bcc44_isUnsafe(_self_);
	jule::Ptr<_1c6788b56_Data> _12897_r = _1c67a96e3_evalExpr(_12827_eval, (*((*(_127139_a))))._field_Right);;
	if ((_12897_r == nullptr)) {
		return;;
	};
	_1c66c6984_removeInteriorMutRisk(_self_, &(_12897_r));
	if ((_127211_l == nullptr)) {
		if (_1c67bcc9a_Void((*(_12897_r))._field_Kind.ptr())) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*((*(_127139_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_127139_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_127139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12897_r, &__jule_any_type31); __jule_collection; }));
		return;;
	};
	if ((!(_1c66b280a_checkAssign(&((*_self_.alloc)._field_s), &(_127211_l), _12897_r, (*((*(_127139_a))))._field_Setter)))) {
		return;;
	};
	if ((_1c67c0dad_Tup((*(_12897_r))._field_Kind) != nullptr)) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*(_127139_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c665c51e_OperandExprModel> _13167_lm = jule::new_ptr<_1c665c51e_OperandExprModel>(_1c665c51e_OperandExprModel{._field_Kind=(*(_127211_l))._field_Kind, ._field_Model=(*(_127211_l))._field_Model});;
	jule::Ptr<_1c665c51e_OperandExprModel> _13207_rm = jule::new_ptr<_1c665c51e_OperandExprModel>(_1c665c51e_OperandExprModel{._field_Kind=(*(_12897_r))._field_Kind, ._field_Model=(*(_12897_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c66b7106_Assign>(_1c66b7106_Assign{._field_Left=_13167_lm, ._field_Right=_13207_rm, ._field_Op=(*((*(_127139_a))))._field_Setter}), &__jule_any_type51); __jule_collection; }));
	if (((*(*((*(_127139_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c677226b_assignTypeChecker _13278_checker = _1c677226b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_127211_l))._field_Kind, ._field_d=_12897_r, ._field_errorToken=(*((*(_127139_a))))._field_Setter, ._field_refers=_1c66be251_getOwnerRefers(_self_)};;
		if (_1c677326c_check(&_13278_checker)) {
			(*(_13207_rm))._field_Model=(*(_12897_r))._field_Model;
			(*(_13167_lm))._field_Model=(*(_127211_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _13407_strct = _1c67c060a_Struct((*(_127211_l))._field_Kind);;
	if ((_13407_strct != nullptr)) {
		_1c66c6e3a_checkStructureAssignOp(_self_, &(_13407_strct), _127139_a, &(_12897_r));
		return;;
	};
	jule::U64 _13453_id = (*(*((*(_127139_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_127139_a))))._field_Setter.alloc)._field_Id=_1c66cd0a6_removeEqFromOp((*(*((*(_127139_a))))._field_Setter.alloc)._field_Id);
	_1c67abb13_binaryEval _13477_solver = static__1c67ac570_new(_12827_eval, (*((*(_127139_a))))._field_Setter);;
	({
		jule::Ptr<_1c6788b56_Data> ___jule_assign_arg = _127211_l;
		jule::Ptr<_1c6788b56_Data> _1___jule_assign_arg = _12897_r;
		_13477_solver._field_l = ___jule_assign_arg;
		_13477_solver._field_r = _1___jule_assign_arg;
	});
	_1c67b1750_evalOp(&_13477_solver);
	(*(*((*(_127139_a))))._field_Setter.alloc)._field_Id=_13453_id;
}



inline void _1c66c7831_processEndPartOfMultiAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _135349_st, jule::Ptr<_1c66433a1_AssignSt>* _135372_a, jule::Ptr<_1c6642d1d_AssignLeft>* _13548_lexpr, jule::Ptr<_1c6788b56_Data>* _135433_l, jule::Ptr<_1c6788b56_Data>* _135448_r, jule::Bool _135458_strict) {
	if (((!((*((*(_13548_lexpr))))._field_Reference)) && _1c6621c0e_IsIgnoreIdent((*((*(_13548_lexpr))))._field_Ident))) {
		if (_1c67bcc9a_Void((*((*(_135448_r))))._field_Kind.ptr())) {
			_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_135372_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1c6788b56_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_135372_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13548_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type52) {
				_case_begin_1d6b700d7:;
				{
					if ((!(_1c66c66cb_isNewAssignIdent(_self_, (*((*(_13548_lexpr))))._field_Ident)))) {
						goto _julec_label_1d6b7aab5;
					};
				}
			}
			else {
				_case_begin_1d6b70071:;
				{
					if (((*((*(_13548_lexpr))))._field_Mutable || (*((*(_13548_lexpr))))._field_Reference)) {
						_1c6709753_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1d6b7aab5;
				}
			}
			_match_end_1d6b7000a:;
		};
		if (_1c66c0461_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13548_lexpr))))._field_Ident))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13548_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1c66bd1c8_stop(_self_);
			return;;
		};
		if (_1c6621c0e_IsIgnoreIdent((*((*(_13548_lexpr))))._field_Ident)) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c672acb3_Var> _13868_v = jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13548_lexpr))))._field_Token, ._field_Ident=(*((*(_13548_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13548_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13548_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1c67c40e2_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=(*((*(_135372_a))))._field_Right, ._field_Data=(*(_135448_r))}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
		_1c6721b66_checkVarValue((*(_self_))._field_s, &(_13868_v));
		{ jule::Slice<jule::Ptr<_1c6788b56_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*((*_13868_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_13868_v.alloc)._field_Mutable, ._field_Reference=(*_13868_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13868_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13868_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*((*(_135349_st))))._field_Decls; __jule_push_dest.push(_13868_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13868_v; __jule_collection; }));
		return;;
	};
	_julec_label_1d6b7aab5:;
	if (((*((*(_13548_lexpr))))._field_Mutable || (*((*(_13548_lexpr))))._field_Reference)) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*(_13548_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13548_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1c66b280a_checkAssign(&((*_self_.alloc)._field_s), _135433_l, (*(_135448_r)), (*((*(_13548_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14217_reference = false;;
	if (_1c6717057_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_135433_l))))._field_Mutable, _14217_reference, &((*((*(_135433_l))))._field_Kind), _135448_r, &((*((*(_13548_lexpr))))._field_Token))) {
		_14217_reference=_135458_strict;
		_1c67127c2_checkAssignType((*(_self_))._field_s, _14217_reference, &((*((*(_135433_l))))._field_Kind), _135448_r, (*((*(_13548_lexpr))))._field_Token, _1c66be251_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1c6788b56_Data>> &__jule_push_dest = (*((*(_135349_st))))._field_Left; __jule_push_dest.push((*(_135433_l))); };
}



inline void _1c66c7ad9_checkMultiAssign(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt>* _142938_a) {
	if ((((*((*((*(_142938_a))))._field_Setter))._field_Id != static_cast<jule::U64>(71LLU)) && ((*(*((*(_142938_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6788b56_Data> _14347_rd = _1c67a96e3_evalExpr(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*((*(_142938_a))))._field_Right);;
	if ((_14347_rd == nullptr)) {
		return;;
	};
	jule::Bool _14387_strict = false;;
	jule::Slice<jule::Ptr<_1c6788b56_Data>> _14397_right = _1c66b1aa1_getDatasFromTupleData(&(_14347_rd));;
	if ((_14397_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14397_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type53) {
				_case_begin_1d6b85ebb:;
				{
					jule::Ptr<_1c6660379_IndexingExprModel> _14439_iem = (*(_14397_right[0LL]))._field_Model.unsafe_cast_ptr<_1c6660379_IndexingExprModel>();;
					if ((_1c67c0b27_Map((*((*(_14439_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_14387_strict=true;
						_14397_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*(_1c67c0b27_Map((*((*(_14439_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=(*(_14397_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)}); (*it++) = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1d6b85e11:;
		};
	};
	{
		
		if (((*((*(_142938_a))))._field_Left.len() > _14397_right.len())) {
			_case_begin_1d6b867e6:;
			{
				_1c6709753_pushErr((*(_self_))._field_s, (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142938_a))))._field_Left.len() < _14397_right.len())) {
			_case_begin_1d6b8685c:;
			{
				_1c6709753_pushErr((*(_self_))._field_s, (*((*(_142938_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1d6b8674c:;
	};
	jule::Ptr<_1c66b75ac_MultiAssign> _14637_st = jule::new_ptr<_1c66b75ac_MultiAssign>(_1c66b75ac_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1c6788b56_Data>>(nullptr), ._field_Right=(*(_14347_rd))._field_Model});;
	{
		auto expr = &((*((*(_142938_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6b943c5:;
		if (it != expr_end) {
			jule::I64 _14667_i = it - expr->begin();
			{
				jule::Ptr<_1c6642d1d_AssignLeft> _14678_lexpr = (*((*(_142938_a))))._field_Left[_14667_i];;
				jule::Ptr<_1c6788b56_Data> _146812_l = nullptr;;
				if ((!(_1c6621c0e_IsIgnoreIdent((*(_14678_lexpr))._field_Ident)))) {
					if ((!((*((*(_142938_a))))._field_Declarative))) {
						goto _julec_label_1d6b95b68;
					};
					if (((*_14678_lexpr.alloc)._field_Mutable && (*_14678_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1d6b9896d;
					};
					{
						auto &_match_expr{ (*((*(_14678_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type52) {
							_case_begin_1d6b96d78:;
							{
								if (_1c66c66cb_isNewAssignIdent(_self_, (*_14678_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1d6b9896d;
								};
							}
						}
						_match_end_1d6b96d01:;
					};
					_julec_label_1d6b95b68:;
					_146812_l=_1c67a96e3_evalExpr(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*_14678_lexpr.alloc)._field_Expr);
					if ((_146812_l == nullptr)) {
						goto _iter_next_1d6b943c5;
					};
					_julec_label_1d6b9896d:;
				};
				jule::Ptr<_1c6788b56_Data> _14898_r = _14397_right[_14667_i];;
				_1c66c6984_removeInteriorMutRisk(_self_, &(_14898_r));
				_1c66c7831_processEndPartOfMultiAssign(_self_, &(_14637_st), _142938_a, &(_14678_lexpr), &(_146812_l), &(_14898_r), _14387_strict);
			}
			_iter_next_1d6b943c5:;
			++it;
			_14667_i++;
			goto _iter_begin_1d6b943c5;
		}
		_iter_end_1d6b943c5:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14637_st, &__jule_any_type54); __jule_collection; }));
}



inline void _1c66c7d92_checkAssignSt(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66433a1_AssignSt> _149634_a) {
	{
		
		if (_1c6623da9_IsPostfixOp((*((*(_149634_a))._field_Setter))._field_Id)) {
			_case_begin_1d6b9a81b:;
			{
				_1c66c638a_checkPostfix(_self_, _149634_a);
			}
		}
		else if (((*(_149634_a))._field_Left.len() == 1LL)) {
			_case_begin_1d6b9a4b9:;
			{
				_1c66c71e3_checkSingleAssign(_self_, &(_149634_a));
			}
		}
		else {
			_case_begin_1d6b9a453:;
			{
				_1c66c7ad9_checkMultiAssign(_self_, &(_149634_a));
			}
		}
		_match_end_1d6b9a365:;
	};
}



inline jule::Ptr<_1c66b35b9_Scope> _1c66c828d_checkCaseScope(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b8822_Case>* _150732_c, jule::Ptr<_1c6644924_ScopeTree>* _150747_tree) {
	jule::Ptr<_1c66ba857_scopeChecker> _15087_ssc = _1c66ccc65_newChildChecker(_self_);;
	(*(_15087_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150732_c)));
	return _1c66c182a_checkChildSc(_self_, _150747_tree, &(_15087_ssc));;
}



inline jule::Ptr<_1c66b8822_Case> _1c66c87ee_checkCase(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match> _151330_m, jule::I64 _151341_i, jule::Ptr<_1c664b8c6_Case> _151353_c, jule::Ptr<_1c6788b56_Data> _151372_expr) {
	jule::Ptr<_1c66b8822_Case> _15147_case = (*(_151330_m))._field_Cases[_151341_i];;
	(*(_15147_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(0LL, (*(_151353_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6788b56_Data>(nullptr); __jule_collection; });
	jule::Bool _15167_constMatched = false;;
	jule::Ptr<_1c678a87d_eval> _15177_eval = _1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
	{
		auto expr = &((*_151353_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ba10b3:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _151815_e = *it;
			{
				jule::Ptr<_1c6788b56_Data> _15198_d = _1c67a88ce_evalExprKind(_15177_eval, (*(_151815_e))._field_Kind);;
				if ((_15198_d == nullptr)) {
					goto _iter_next_1d6ba10b3;
				};
				if ((*_151330_m.alloc)._field_TypeMatch) {
					(*_15147_case.alloc)._field_Exprs=jule::append((*_15147_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15198_d; __jule_collection; }));
					if ((_1c66cdbde_countMatchType(&(_151330_m), &((*(_15198_d))._field_Kind)) > 1LL)) {
						_1c6709753_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_15198_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_151330_m.alloc)._field_Comptime) {
						_15167_constMatched=(_15167_constMatched || _1c67bc11d_Equal((*(_151372_expr))._field_Kind, (*(_15198_d))._field_Kind));
					} else {
						if ((_1c67beac1_TypeEnum((*(_151372_expr))._field_Kind) != nullptr)) {
							_1c671322e_checkTypeCompatibility((*(_self_))._field_s, &((*(_151372_expr))._field_Kind), &((*(_15198_d))._field_Kind), &((*_151815_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1c667de9c_Trait> _15387_trt = _1c67c0891_Trait((*(_151372_expr))._field_Kind);;
							if ((_15387_trt != nullptr)) {
								_1c671322e_checkTypeCompatibility((*(_self_))._field_s, &((*(_151372_expr))._field_Kind), &((*(_15198_d))._field_Kind), &((*_151815_e.alloc)._field_Token));
							};
						};
					};
					_1c67b5226_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15198_d))._field_Kind), &((*((*_151330_m.alloc)._field_Expr))._field_Kind), &((*_151815_e.alloc)._field_Token), _1c66be251_getOwnerRefers(_self_));
					goto _iter_next_1d6ba10b3;
				};
				if ((*(_15198_d))._field_Decl) {
					_1c6709753_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1d6ba10b3;
				};
				if ((*_151330_m.alloc)._field_Comptime) {
					if (((!(_1c6789591_IsConst(_15198_d.ptr()))) && (_1c67c294d_comptimeTypeInfo((*(_15198_d))._field_Kind) == nullptr))) {
						_1c6709753_pushErr((*(_self_))._field_s, (*_151815_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1d6ba10b3;
					};
					if ((!(_15167_constMatched))) {
						if (_1c6789591_IsConst(_15198_d.ptr())) {
							_15167_constMatched=(_1c6789591_IsConst(_151372_expr.ptr()) && _1dd725438_Eq((*(_15198_d))._field_Constant.ptr(), (*((*(_151372_expr))._field_Constant))));
						} else {
							jule::Ptr<_1c66956de_comptimeTypeInfo> _15647_exprCti = _1c67c294d_comptimeTypeInfo((*(_151372_expr))._field_Kind);;
							_15167_constMatched=((_15647_exprCti != nullptr) && _1c67bc11d_Equal((*(_1c67c294d_comptimeTypeInfo((*(_15198_d))._field_Kind)))._field_base, (*_15647_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15147_case.alloc)._field_Exprs=jule::append((*_15147_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15198_d; __jule_collection; }));
				if ((((!((*_151330_m.alloc)._field_Comptime)) || (_1c67c294d_comptimeTypeInfo((*(_151372_expr))._field_Kind) == nullptr)) || (_1c67c294d_comptimeTypeInfo((*(_15198_d))._field_Kind) == nullptr))) {
					_1c677226b_assignTypeChecker _15749_checker = _1c677226b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_151372_expr))._field_Kind, ._field_d=_15198_d, ._field_errorToken=(*_151815_e.alloc)._field_Token, ._field_refers=_1c66be251_getOwnerRefers(_self_)};;
					_1c677326c_check(&_15749_checker);
				};
			}
			_iter_next_1d6ba10b3:;
			++it;
			goto _iter_begin_1d6ba10b3;
		}
		_iter_end_1d6ba10b3:;
	};
	if (((!((*_151330_m.alloc)._field_Comptime)) || _15167_constMatched)) {
		(*_15147_case.alloc)._field_Scope=_1c66c828d_checkCaseScope(_self_, &(_15147_case), &((*_151353_c.alloc)._field_Scope));
	};
	return _15147_case;;
}



inline void _1c66c8c1c_checkCases(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _159032_m, jule::Ptr<_1c66b7ce9_Match> _159051_rm, jule::Ptr<_1c6788b56_Data> _159067_expr) {
	(*(_159051_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b8822_Case>>::alloc(0LL, (*((*(_159032_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66b8822_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_159032_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6bb501c:;
		if (it != expr_end) {
			jule::I64 _15927_i = it - expr->begin();
			{
				jule::Ptr<_1c66b8822_Case> _15938_case = jule::new_ptr<_1c66b8822_Case>(_1c66b8822_Case{._field_Owner=_159051_rm, ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c6788b56_Data>>(nullptr), ._field_Next=jule::Ptr<_1c66b8822_Case>(nullptr)});;
				if ((_15927_i > 0LL)) {
					(*((*_159051_rm.alloc)._field_Cases[(_15927_i - 1LL)]))._field_Next=_15938_case;
				};
				(*_159051_rm.alloc)._field_Cases=jule::append((*_159051_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b8822_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15938_case; __jule_collection; }));
			}
			_iter_next_1d6bb501c:;
			++it;
			_15927_i++;
			goto _iter_begin_1d6bb501c;
		}
		_iter_end_1d6bb501c:;
	};
	if ((((*_159051_rm.alloc)._field_Default != nullptr) && ((*((*(_159032_m))))._field_Cases.len() > 0LL))) {
		(*((*_159051_rm.alloc)._field_Cases[((*_159051_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_159051_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_159032_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6bb855e:;
		if (it != expr_end) {
			jule::I64 _16068_i = it - expr->begin();
			jule::Ptr<_1c664b8c6_Case> _160615_c = *it;
			{
				_1c66c87ee_checkCase(_self_, _159051_rm, _16068_i, _160615_c, _159067_expr);
			}
			_iter_next_1d6bb855e:;
			++it;
			_16068_i++;
			goto _iter_begin_1d6bb855e;
		}
		_iter_end_1d6bb855e:;
	};
}



inline jule::Ptr<_1c66b8822_Case> _1c66c9118_checkDefault(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match> _161133_m, jule::Ptr<_1c664a72c_Else> _161148_d) {
	jule::Ptr<_1c66b8822_Case> _16127_def = jule::new_ptr<_1c66b8822_Case>(_1c66b8822_Case{._field_Owner=_161133_m, ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c6788b56_Data>>(nullptr), ._field_Next=jule::Ptr<_1c66b8822_Case>(nullptr)});;
	(*(_16127_def))._field_Scope=_1c66c828d_checkCaseScope(_self_, &(_16127_def), &((*(_161148_d))._field_Scope));
	return _16127_def;;
}



inline void _1c66c947b_checkComptimePanic(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c661e327_Token> _161939_callToken, jule::Ptr<_1c66b35b9_Scope>* _161959_s) {
	if (((*((*(_161959_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16233_stmt = (*((*(_161959_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16233_stmt };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d6bbbc5a:;
			{
				jule::Ptr<_1c6788b56_Data> _16264_d = _16233_stmt.unsafe_cast_ptr<_1c6788b56_Data>();;
				{
					auto &_match_expr{ (*(_16264_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1d6bbcc39:;
						{
							jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _16299_m = (*(_16264_d))._field_Model.unsafe_cast_ptr<_1c666415d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16299_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type20) {
									_case_begin_1d6bbde05:;
									{
										jule::Ptr<_1dd71e850_Const> _16326_c = (*(_16299_m))._field_Expr.unsafe_cast_ptr<_1dd71e850_Const>();;
										if ((!(_1dd724107_IsStr(_16326_c.ptr())))) {
											goto _match_end_1d6bbdd7d;
										};
										if ((_161939_callToken == nullptr)) {
											jule::Ptr<_1c66ba857_scopeChecker> _163711_root = _1c66bdeba_getHardRoot(_self_);;
											if (((*(_163711_root))._field_calledFrom == nullptr)) {
												_161939_callToken=(*(_16299_m))._field_Token;
											} else {
												_161939_callToken=(*(_163711_root))._field_calledFrom;
											};
										};
										_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), _161939_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1dd721a0b_ReadStr(_16326_c), &__jule_any_type4); __jule_collection; }));
										_1c66bd1c8_stop(_self_);
									}
								}
								_match_end_1d6bbdd7d:;
							};
						}
					}
					_match_end_1d6bbcbc3:;
				};
			}
		}
		_match_end_1d6bbb298:;
	};
}



inline void _1c66c97de_processConstMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66b7ce9_Match>* _165139_tm, jule::Ptr<_1c664c1e0_MatchCase>* _165156_m) {
	{
		auto expr = &((*((*(_165139_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6bbe378:;
		if (it != expr_end) {
			jule::I64 _16528_i = it - expr->begin();
			jule::Ptr<_1c66b8822_Case> _165215_c = *it;
			{
				if (((*(_165215_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c661e327_Token> _165413_token = nullptr;;
					if (((!((*((*(_165139_tm))))._field_TypeMatch)) && ((*(*(_165215_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165413_token=(*((*((*((*(_165156_m))))._field_Cases[_16528_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1c66c947b_checkComptimePanic(_self_, _165413_token, &((*_165215_c.alloc)._field_Scope));
					(*((*(_165139_tm))))._field_Default=_165215_c;
					(*((*(_165139_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1d6bbe378:;
			++it;
			_16528_i++;
			goto _iter_begin_1d6bbe378;
		}
		_iter_end_1d6bbe378:;
	};
	if (((*((*(_165156_m))))._field_Default != nullptr)) {
		(*((*(_165139_tm))))._field_Cases=nullptr;
		(*((*(_165139_tm))))._field_Default=_1c66c9118_checkDefault(_self_, (*(_165139_tm)), (*((*(_165156_m))))._field_Default);
		if (((*((*(_165139_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c661e327_Token> _166813_token = nullptr;;
			if ((!((*((*(_165139_tm))))._field_TypeMatch))) {
				_166813_token=(*((*((*((*(_165156_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1c66c947b_checkComptimePanic(_self_, _166813_token, &((*(*((*(_165139_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_165139_tm))))._field_Cases=nullptr;
	};
}



inline void _1c66c9a97_checkTypeMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _168036_m) {
	jule::Ptr<_1c6788b56_Data> _16817_d = _1c67a8c20_eval1(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*((*(_168036_m))))._field_Expr);;
	if ((_16817_d == nullptr)) {
		return;;
	};
	if ((*((*(_168036_m))))._field_Comptime) {
		jule::Ptr<_1c66956de_comptimeTypeInfo> _16878_cti = _1c67c294d_comptimeTypeInfo((*(_16817_d))._field_Kind.ptr());;
		if ((_16878_cti == nullptr)) {
			if ((!((*(_16817_d))._field_Decl))) {
				_1c6709753_pushErr((*(_self_))._field_s, (*((*((*(_168036_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16817_d))._field_Kind=(*(_16878_cti))._field_base;
		};
	} else if (((*(_16817_d))._field_Decl || (!(((((_1c67be087_Prim((*(_16817_d))._field_Kind.ptr()) != nullptr) && _1c67c824a_IsAny(_1c67be087_Prim((*(_16817_d))._field_Kind).ptr())) || (_1c67c0891_Trait((*(_16817_d))._field_Kind) != nullptr)) || (_1c67beac1_TypeEnum((*(_16817_d))._field_Kind) != nullptr)))))) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*((*(_168036_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c66b7ce9_Match> _17017_tm = jule::new_ptr<_1c66b7ce9_Match>(_1c66b7ce9_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16817_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_168036_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1c66b8822_Case>>(nullptr), ._field_Default=jule::Ptr<_1c66b8822_Case>(nullptr)});;
	if (((!((*(_17017_tm))._field_Comptime)) && ((*((*(_168036_m))))._field_Default != nullptr))) {
		(*_17017_tm.alloc)._field_Default=_1c66c9118_checkDefault(_self_, _17017_tm, (*((*(_168036_m))))._field_Default);
	};
	_1c66c8c1c_checkCases(_self_, _168036_m, _17017_tm, _16817_d);
	if ((*_17017_tm.alloc)._field_Comptime) {
		_1c66c97de_processConstMatch(_self_, &(_17017_tm), _168036_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17017_tm, &__jule_any_type55); __jule_collection; }));
}



inline void _1c66c9d50_checkCommonMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase>* _172338_m) {
	jule::Ptr<_1c6788b56_Data> _172411_d = nullptr;;
	if (((*((*(_172338_m))))._field_Expr == nullptr)) {
		_172411_d=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd720356_NewBool(true)});
		(*(_172411_d))._field_Model=jule::Any((*_172411_d.alloc)._field_Constant, &__jule_any_type20);
	} else {
		_172411_d=_1c67a93a2_evalExpr1(_1c67121a6_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*((*(_172338_m))))._field_Expr);
		if ((_172411_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_172338_m))))._field_Comptime) {
		if ((!(_1c66cd5a1_canComptimeMatch(&(_172411_d))))) {
			_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172338_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1c67c1144_comptime((*(_172411_d))._field_Kind.ptr())) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_172338_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c66b7ce9_Match> _17507_mc = jule::new_ptr<_1c66b7ce9_Match>(_1c66b7ce9_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172411_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_172338_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1c66b8822_Case>>(nullptr), ._field_Default=jule::Ptr<_1c66b8822_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17507_mc, &__jule_any_type55); __jule_collection; }));
	if (((!((*(_17507_mc))._field_Comptime)) && ((*((*(_172338_m))))._field_Default != nullptr))) {
		(*_17507_mc.alloc)._field_Default=_1c66c9118_checkDefault(_self_, _17507_mc, (*((*(_172338_m))))._field_Default);
	};
	_1c66c8c1c_checkCases(_self_, _172338_m, _17507_mc, _172411_d);
	if ((*_17507_mc.alloc)._field_Comptime) {
		_1c66c97de_processConstMatch(_self_, &(_17507_mc), _172338_m);
	};
}



inline void _1c66ca108_checkMatch(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c664c1e0_MatchCase> _177431_m) {
	if ((*(_177431_m))._field_TypeMatch) {
		_1c66c9a97_checkTypeMatch(_self_, &(_177431_m));
		return;;
	};
	_1c66c9d50_checkCommonMatch(_self_, &(_177431_m));
}



inline void _1c66ca3b1_checkFall(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66426ad_FallSt> _178226_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1c66bd6e5_isDeferred(_self_))) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_178226_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1c66b8822_Case* _17907_case = ((_1c66b8822_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17907_case))._field_Owner))._field_Comptime) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_178226_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17907_case))._field_Next == nullptr)) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_178226_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c66b901a_FallSt>(_1c66b901a_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17907_case))._field_Next)}), &__jule_any_type56); __jule_collection; }));
}



inline jule::Ptr<_1c66b5b60_BreakSt> _1c66ca702_checkBreakWithLabel(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _180536_b) {
	jule::Ptr<_1c66b5b60_BreakSt> _18067_brk = _1c66caa43_checkPlainBreak(_self_, _180536_b);;
	if ((_18067_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18067_brk))._field_It=0LLU;
	(*(_18067_brk))._field_Mtch=0LLU;
	jule::Ptr<_1c66b9867_scopeLabel> _18167_label = _1c66b1760_findLabelParent(&((*((*(_180536_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18167_label == nullptr)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18167_label))._field_used=true;
	if ((((*((*(_18167_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18167_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _18293_i = ((*(*(_18167_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18293_i >= (*(*((*(_18167_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _18338_st = (*(*((*(_18167_label))._field_node))._field_Scope.alloc)._field_Stmts[_18293_i];;
		{
			auto &_match_expr{ _18338_st };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1d6c06adb:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1c66b44ee_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1d6c05755:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1c66b5401_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1d6c05942:;
				{
					(*(_18067_brk))._field_It=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1c66b49a5_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type55) {
				_case_begin_1d6c059a8:;
				{
					(*(_18067_brk))._field_Mtch=static_cast<jule::Uintptr>(_18338_st.unsafe_cast_ptr<_1c66b7ce9_Match>());
				}
			}
			else {
				_case_begin_1d6c058cb:;
				{
					_1c6709753_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1d6c05865:;
		};
	};
	if (((*(_18067_brk))._field_It != 0LLU)) {
		if ((!(_1c66c5477_checkValidBreakLabel(_self_, (*(_18067_brk))._field_It)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18067_brk))._field_Mtch != 0LLU)) {
		if ((!(_1c66c5477_checkValidBreakLabel(_self_, (*(_18067_brk))._field_Mtch)))) {
			_1c6709753_pushErr((*(_self_))._field_s, (*_180536_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180536_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18067_brk;;
}



inline jule::Ptr<_1c66b5b60_BreakSt> _1c66caa43_checkPlainBreak(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _186332_b) {
	if (_1c66bd6e5_isDeferred(_self_)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_186332_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _18697_scope = _self_;;
	_julec_label_1d6c0d2da:;
	{
		
		if ((((((*_18697_scope.alloc)._field_it == 0LLU) && ((*_18697_scope.alloc)._field_cse == 0LLU)) && ((*_18697_scope.alloc)._field_parent != nullptr)) && ((*_18697_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1d6c0e4b7:;
			{
				_18697_scope=(*_18697_scope.alloc)._field_parent;
				goto _julec_label_1d6c0d2da;
			}
		}
		else if (((*_18697_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1d6c0e550:;
			{
				return jule::new_ptr<_1c66b5b60_BreakSt>(_1c66b5b60_BreakSt{._field_It=(*_18697_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18697_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1d6c0e5b6:;
			{
				return jule::new_ptr<_1c66b5b60_BreakSt>(_1c66b5b60_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1c66b8822_Case*)((*_18697_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1d6c0e3b8:;
	};
	_1c6709753_pushErr((*(_self_))._field_s, (*_186332_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c66caceb_checkBreak(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c66499c3_BreakSt> _188527_b) {
	if (((*(_188527_b))._field_Label != nullptr)) {
		jule::Ptr<_1c66b5b60_BreakSt> _18878_brk = _1c66ca702_checkBreakWithLabel(_self_, _188527_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18878_brk, &__jule_any_type57); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c66b5b60_BreakSt> _18927_brk = _1c66caa43_checkPlainBreak(_self_, _188527_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18927_brk, &__jule_any_type57); __jule_collection; }));
}



inline void _1c66cb0a4_checkRet(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6647b47_RetSt> _189629_r) {
	if (_1c66bd6e5_isDeferred(_self_)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189629_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c66b93b1_RetSt> _19017_rt = jule::new_ptr<_1c66b93b1_RetSt>(_1c66b93b1_RetSt{._field_Func=(*(_1c66bdc34_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19017_rt, &__jule_any_type58); __jule_collection; }));
	jule::Ptr<_1c6780e28_retTypeChecker> _19067_rtc = jule::new_ptr<_1c6780e28_retTypeChecker>(_1c6780e28_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19017_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1c6638c37_Expr>>(nullptr), ._field_errorToken=(*_189629_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19113_ok = _1c6781e18_check(_19067_rtc.ptr(), &((*_189629_r.alloc)._field_Expr));;
	if ((!(_19113_ok))) {
		return;;
	};
	if (((*_189629_r.alloc)._field_Expr != nullptr)) {
		(*_19017_rt.alloc)._field_Expr=(*_19067_rtc.alloc)._field_model;
	};
}



inline void _1c66cb35c_checkUseExpr(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c663960b_UseExpr> _192129_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_192129_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c66bd6e5_isDeferred(_self_)) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_192129_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1c6709753_pushErr((*(_self_))._field_s, (*_192129_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1c66cb615_checkNode(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Any* _193731_node) {
	{
		auto &_match_expr{ (*(_193731_node)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1d6c24be7:;
			{
				_1c66c1e24_checkAnonScope(_self_, (*(_193731_node)).cast_ptr<_1c6644924_ScopeTree>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1d6c2505a:;
			{
				_1c66c0719_checkVarDecl(_self_, (*(_193731_node)).cast_ptr<_1c664776d_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1d6c250c1:;
			{
				_1c66c0c7a_checkTypeAliasDecl(_self_, (*(_193731_node)).cast_ptr<_1c664b420_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1d6c25137:;
			{
				_1c66c2540_checkExpr(_self_, (*(_193731_node)).cast_ptr<_1c6638c37_Expr>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1d6c25478:;
			{
				_1c66c2e7a_checkConditional(_self_, (*(_193731_node)).cast_ptr<_1c664abd3_Conditional>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1d6c254de:;
			{
				_1c66c4ce5_checkIter(_self_, (*(_193731_node)).cast_ptr<_1c66483b7_Iter>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1d6c25555:;
			{
				_1c66c5a71_checkCont(_self_, (*(_193731_node)).cast_ptr<_1c6649d9c_ContSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1d6c255bb:;
			{
				_1c66c5d29_checkLabel(_self_, (*(_193731_node)).cast_ptr<_1c6641ed7_LabelSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1d6c25632:;
			{
				_1c66c60d2_pushGoto(_self_, (*(_193731_node)).cast_ptr<_1c66423b1_GotoSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1d6c25698:;
			{
				_1c66c7d92_checkAssignSt(_self_, (*(_193731_node)).cast_ptr<_1c66433a1_AssignSt>(&__jule_any_type66));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1d6c25720:;
			{
				_1c66ca108_checkMatch(_self_, (*(_193731_node)).cast_ptr<_1c664c1e0_MatchCase>(&__jule_any_type67));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1d6c25797:;
			{
				_1c66ca3b1_checkFall(_self_, (*(_193731_node)).cast_ptr<_1c66426ad_FallSt>(&__jule_any_type68));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1d6c2581e:;
			{
				_1c66caceb_checkBreak(_self_, (*(_193731_node)).cast_ptr<_1c66499c3_BreakSt>(&__jule_any_type69));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1d6c25896:;
			{
				_1c66cb0a4_checkRet(_self_, (*(_193731_node)).cast_ptr<_1c6647b47_RetSt>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d6c2591d:;
			{
				_1c66cb35c_checkUseExpr(_self_, (*(_193731_node)).cast_ptr<_1c663960b_UseExpr>(&__jule_any_type71));
			}
		}
		else {
			_case_begin_1d6c24dc3:;
			{
				jule::outln(_1d508560e_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1d6c24d5c:;
	};
}



inline void _1c66cb813_checkResult(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	_1c66442b4_Stmt _19757_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19757_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1d6c4c12b:;
			{
				jule::Ptr<_1c663960b_UseExpr> _19788_ue = _19757_stmt._field_Data.unsafe_cast_ptr<_1c663960b_UseExpr>();;
				jule::Ptr<_1c6788b56_Data> _19798_d = _1c67a96e3_evalExpr(_1c67121a6_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), (*(_19788_ue))._field_Expr);;
				if ((_19798_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19798_d, &__jule_any_type31); __jule_collection; }));
				jule::Ptr<_1c6780e28_retTypeChecker> _19848_rtc = jule::new_ptr<_1c6780e28_retTypeChecker>(_1c6780e28_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_types=_1c666e72e_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1c6638c37_Expr>>(nullptr), ._field_errorToken=(*((*_19788_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1c6781e18_check(_19848_rtc.ptr(), &((*_19788_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1d6c4e051:;
			{
				jule::Ptr<_1c6638c37_Expr> _19918_expr = _19757_stmt._field_Data.unsafe_cast_ptr<_1c6638c37_Expr>();;
				jule::Ptr<_1c6788b56_Data> _19928_d = _1c67a96e3_evalExpr(_1c67121a6_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)), _19918_expr);;
				if ((_19928_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19928_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1d6c54c05:;
						{
							jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _19989_m = (*(_19928_d))._field_Model.unsafe_cast_ptr<_1c666621a_BuiltinErrorCallExprModel>();;
							_1c66c2287_processErrorCall(_self_, &(_19989_m), (*(_19918_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19928_d, &__jule_any_type31); __jule_collection; }));
						}
					}
					else {
						_case_begin_1d6c54dd1:;
						{
							return;;
						}
					}
					_match_end_1d6c54d6a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65 || _match_expr.type == &__jule_any_type69 || _match_expr.type == &__jule_any_type63 || _match_expr.type == &__jule_any_type70) {
			_case_begin_1d6c4d6b0:;
			{
				_1c66cb615_checkNode(_self_, &(_19757_stmt._field_Data));
			}
		}
		else {
			_case_begin_1d6c4d649:;
			{
				_1c66cb615_checkNode(_self_, &(_19757_stmt._field_Data));
				return;;
			}
		}
		_match_end_1d6c4d5d3:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1c66cba11_checkTree(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20207_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20207_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20207_n); ((*_self_.alloc)._field_i)++) {
		{
			_1c66442b4_Stmt _20288_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1c66cb615_checkNode(_self_, &(_20288_stmt._field_Data));
			if (_1c66bd45e_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1d6c58a50:;
	}
	_iter_end_1d6c58a50:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1c66cb813_checkResult(_self_);
	};
}



inline void _1c66cbd74_checkGoto(_1c66ba857_scopeChecker* _self_, jule::Ptr<_1c66b6776_GotoSt>* _203930_gt, jule::Ptr<_1c66b9867_scopeLabel>* _203948_label) {
	jule::I64 _20407_n = 0LL;;
	if (((*((*(_203930_gt))))._field_Scope == (*((*((*(_203948_label))))._field_node))._field_Scope)) {
		if (((*((*(_203930_gt))))._field_Index > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*((*(_203930_gt))))._field_Index;
	} else if (((*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203948_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1c66b35b9_Scope> _20538_gtsc = (*((*(_203930_gt))))._field_Scope;;
		while ((((*_20538_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203948_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20538_gtsc=(*_20538_gtsc.alloc)._field_Parent;
			}
		_iter_next_1d6c5dea6:;
		}
		_iter_end_1d6c5dea6:;;
		if (((*_20538_gtsc.alloc)._field_StmtIndex > (*(*((*(_203948_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20407_n=(*_20538_gtsc.alloc)._field_StmtIndex;
	} else {
		_20407_n=0LL;
	};
	jule::Ptr<_1c66b35b9_Scope> _20757_s = (*((*((*(_203948_label))))._field_node))._field_Scope;;
	jule::I64 _20767_i = ((*(*((*(_203948_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20767_i >= _20407_n); (_20767_i)--) {
				{
					jule::Any _20799_stmt = (*(_20757_s))._field_Stmts[_20767_i];;
					if (_1c66cd86a_stmtIsDef(&(_20799_stmt))) {
						_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_203930_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203930_gt))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1d6c629b0:;
			}
			_iter_end_1d6c629b0:;;
			if (((*_20757_s.alloc)._field_ChildIndex > (*((*((*(_203930_gt))))._field_Scope))._field_ChildIndex)) {
				_20757_s=(*_20757_s.alloc)._field_Parent;
				_20767_i=((*_20757_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1d6c6263b;
			};
			goto _iter_end_1d6c6263b;
		}
	_iter_next_1d6c6263b:;
	}
	_iter_end_1d6c6263b:;;
}



inline void _1c66cc072_checkGotos(_1c66ba857_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6c65672:;
		if (it != expr_end) {
			jule::Ptr<_1c66b6776_GotoSt> _209715_gt = *it;
			{
				jule::Ptr<_1c66b9867_scopeLabel> _20988_label = _1c66c0065_findLabelAll(_self_, &((*(_209715_gt))._field_Ident));;
				if ((_20988_label == nullptr)) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_209715_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209715_gt.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1d6c65672;
				};
				(*_209715_gt.alloc)._field_Label=(*(_20988_label))._field_node;
				(*(_20988_label))._field_used=true;
				_1c66cbd74_checkGoto(_self_, &(_209715_gt), &(_20988_label));
			}
			_iter_next_1d6c65672:;
			++it;
			goto _iter_begin_1d6c65672;
		}
		_iter_end_1d6c65672:;
	};
}



inline void _1c66cc270_checkLabels(_1c66ba857_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6c68257:;
		if (it != expr_end) {
			jule::Ptr<_1c66b9867_scopeLabel> _211010_l = *it;
			{
				if ((!((*(_211010_l))._field_used))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_211010_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_211010_l.alloc)._field_node))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1d6c68257:;
			++it;
			goto _iter_begin_1d6c68257;
		}
		_iter_end_1d6c68257:;
	};
}



inline void _1c66cc46d_checkVars(_1c66ba857_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6c6a006:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _211810_v = *it;
			{
				if (((((!((*(_211810_v))._field_Used)) && (!((*_211810_v.alloc)._field_Constant))) && (!(_1c6621c0e_IsIgnoreIdent((*_211810_v.alloc)._field_Ident)))) && (!(_1c6621ec8_IsAnonIdent((*_211810_v.alloc)._field_Ident))))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_211810_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211810_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1d6c6a006:;
			++it;
			goto _iter_begin_1d6c6a006;
		}
		_iter_end_1d6c6a006:;
	};
}



inline void _1c66cc66b_checkAliases(_1c66ba857_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6c6c811:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> _212610_a = *it;
			{
				if ((((!((*(_212610_a))._field_Used)) && (!(_1c6621c0e_IsIgnoreIdent((*_212610_a.alloc)._field_Ident)))) && (!(_1c6621ec8_IsAnonIdent((*_212610_a.alloc)._field_Ident))))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_212610_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212610_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1d6c6c811:;
			++it;
			goto _iter_begin_1d6c6c811;
		}
		_iter_end_1d6c6c811:;
	};
}



inline void _1c66cc9ce_check(jule::Ptr<_1c66ba857_scopeChecker> _self_, jule::Ptr<_1c6644924_ScopeTree>* _213427_tree, jule::Ptr<_1c66b35b9_Scope>* _213450_s) {
	(*((*(_213450_s))))._field_Deferred=(*((*(_213427_tree))))._field_Deferred;
	(*((*(_213450_s))))._field_Unsafety=(*((*(_213427_tree))))._field_Unsafety;
	jule::I64 _21383_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213427_tree));
	(*_self_.alloc)._field_scope=(*(_213450_s));
	_1c66cba11_checkTree(_self_);
	if ((_21383_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1c66cc46d_checkVars(_self_);
		_1c66cc66b_checkAliases(_self_);
		if (_1c66bceca_isRoot(_self_)) {
			_1c66cc072_checkGotos(_self_);
			_1c66cc270_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1c66ba857_scopeChecker> _1c66ccc65_newChildChecker(jule::Ptr<_1c66ba857_scopeChecker> _self_) {
	jule::Ptr<_1c66ba857_scopeChecker> _21587_base = _1c66b1023_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21587_base))._field_parent=_self_;
	(*_21587_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21587_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21587_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21587_base;;
}








inline jule::Bool _1c66ce7e4_directiveChecker_eq(_1c66ce7e4_directiveChecker *_self_, _1c66ce7e4_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1c66cec45_checkCdef(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6c76a7e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c666a51b_Fn>()))._field_Binded) {
					goto _match_end_1d6c758d5;
				};
				goto _case_begin_1d6c7594b;
			}
		}
		else {
			_case_begin_1d6c7594b:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6c758d5:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1c66ceeed_checkTypedef(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6c79c80:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Binded) {
					goto _match_end_1d6c78ad6;
				};
				goto _case_begin_1d6c78b4c;
			}
		}
		else {
			_case_begin_1d6c78b4c:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6c78ad6:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1c66d02a6_checkNamespace(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6c7ce81:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Binded))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6c7baa6:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c666a51b_Fn>()))._field_Binded))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6c7bdb4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Binded))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1d6c7bd4d:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6c7bcd7:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c661e327_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c6709753_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6c8862e:;
			{
				if ((_1c67b3158_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1c6633d20_Directive> _919_typedef = jule::new_ptr<_1c6633d20_Directive>(_1c6633d20_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6633d20_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1d6c885b8:;
	};
}



inline void _1c66d055e_checkDeprecated(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d6c8bd3b:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Binded) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6c8aa0a:;
			{
				jule::Ptr<_1c666a51b_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c666a51b_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1c666aede_IsEntryPoint(_1078_f)) || _1c666b275_IsInit(_1078_f))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6c8ac6e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Binded) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1d6c8ac08:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6c8ab92:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c661e327_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c6709753_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c6709753_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1c66d0817_checkTest(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6c98b39:;
			{
				jule::Ptr<_1c666a51b_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c666a51b_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1c666b275_IsInit(_1444_f)))) && (!(_1c666aede_IsEntryPoint(_1444_f))))) {
					goto _match_end_1d6c97990;
				};
				if (_1c666ac58_IsMethod(_1444_f)) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1d6c97990;
				};
				goto _case_begin_1d6c97a06;
			}
		}
		else {
			_case_begin_1d6c97a06:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6c97990:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1c66d0ac0_checkExport(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d6c9d886:;
			{
				jule::Ptr<_1c666a51b_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c666a51b_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1c666b275_IsInit(_1654_f)) || _1c666aede_IsEntryPoint(_1654_f)) || _1c666ac58_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6c9c4ab:;
			{
				jule::Ptr<_1c672acb3_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1c672acb3_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1d6c9c753:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			}
		}
		_match_end_1d6c9c6dc:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1c6709753_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c661e327_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c6709753_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c6709753_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1c66d0d78_checkDirective(_1c66ce7e4_directiveChecker* _self_, jule::Ptr<_1c6633d20_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1d6caaac4:;
			{
				_1c66cec45_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1d6ca996e:;
			{
				_1c66ceeed_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1d6ca99d5:;
			{
				_1c66d02a6_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1d6ca9a4b:;
			{
				_1c66d055e_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1d6ca9ab2:;
			{
				_1c66d0817_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1d6ca9b28:;
			{
				_1c66d0ac0_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1d6ca9b8e:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1d6ca4e75:;
			{
				_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d6ca9892:;
	};
}



inline void _1c66d1076_check(_1c66ce7e4_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cad885:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _22315_d = *it;
			{
				_1c66d0d78_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1d6cad885:;
			++it;
			goto _iter_begin_1d6cad885;
		}
		_iter_end_1d6cad885:;
	};
}







inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66d68ea_SelectPackage(_1c66d63cd_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c66d6ce6_FindVar(_1c66d63cd_ImportInfo* _self_, jule::Str _19823_ident, jule::Bool ) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_19823_ident))))) {
		return nullptr;;
	};
	return _1c66d3908_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_19823_ident), false);;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c66d71e2_FindTypeAlias(_1c66d63cd_ImportInfo* _self_, jule::Str _21029_ident, jule::Bool ) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_21029_ident))))) {
		return nullptr;;
	};
	return _1c66d3d37_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21029_ident), false);;
}



inline jule::Ptr<_1c6655803_Struct> _1c66d75dd_FindStruct(_1c66d63cd_ImportInfo* _self_, jule::Str _22226_ident, jule::Bool ) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_22226_ident))))) {
		return nullptr;;
	};
	return _1c66d42dd_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22226_ident), false);;
}



inline jule::Ptr<_1c666a51b_Fn> _1c66d79d9_FindFn(_1c66d63cd_ImportInfo* _self_, jule::Str _23422_ident, jule::Bool ) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_23422_ident))))) {
		return nullptr;;
	};
	return _1c66d46d9_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23422_ident), false);;
}



inline jule::Ptr<_1c667de9c_Trait> _1c66d7d2a_FindTrait(_1c66d63cd_ImportInfo* _self_, jule::Str _24525_ident) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_24525_ident))))) {
		return nullptr;;
	};
	return _1c66d4a5d_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24525_ident));;
}



inline jule::Ptr<_1c66816a8_Enum> _1c66d816b_FindEnum(_1c66d63cd_ImportInfo* _self_, jule::Str _25624_ident) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_25624_ident))))) {
		return nullptr;;
	};
	return _1c66d4dd2_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25624_ident));;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c66d84ac_FindTypeEnum(_1c66d63cd_ImportInfo* _self_, jule::Str _26728_ident) {
	if ((!(_1c66d8952_isLookupable(_self_, &(_26728_ident))))) {
		return nullptr;;
	};
	return _1c66d5366_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_26728_ident));;
}



inline jule::Bool _1c66d8952_isLookupable(_1c66d63cd_ImportInfo* _self_, jule::Str* _27625_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c66d8c93_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c66d8c93_existIdent(_self_, (*(_27625_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c66d8c93_existIdent(_1c66d63cd_ImportInfo* _self_, jule::Str _29622_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cc5c65:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_29710_sident = it;
			{
				if (((*((*(_29710_sident))))._field_Kind == _29622_ident)) {
					return true;;
				};
			}
			_iter_next_1d6cc5c65:;
			++it;
			goto _iter_begin_1d6cc5c65;
		}
		_iter_end_1d6cc5c65:;
	};
	return false;;
}



inline jule::Bool _1c66d9029_isAccessibleViaSelection(_1c66d63cd_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c66d8c93_existIdent(_self_, static_cast<jule::Str>(jule::Str::lit("self", 4))));;
}







inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66d97cc_SelectPackage(_1c66d9304_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c66d9bc8_FindVar(_1c66d9304_Package* _self_, jule::Str _32323_ident, jule::Bool _32335_binded) {
	return _1c66d3908_findVarInPackage(&((*(_self_))._field_Files), &(_32323_ident), _32335_binded);;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c66da0c4_FindTypeAlias(_1c66d9304_Package* _self_, jule::Str _32929_ident, jule::Bool _32941_binded) {
	return _1c66d3d37_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32929_ident), _32941_binded);;
}



inline jule::Ptr<_1c6655803_Struct> _1c66da4c0_FindStruct(_1c66d9304_Package* _self_, jule::Str _33526_ident, jule::Bool _33538_binded) {
	return _1c66d42dd_findStructInPackage(&((*(_self_))._field_Files), &(_33526_ident), _33538_binded);;
}



inline jule::Ptr<_1c666a51b_Fn> _1c66da8bb_FindFn(_1c66d9304_Package* _self_, jule::Str _34122_ident, jule::Bool _34134_binded) {
	return _1c66d46d9_findFnInPackage(&((*(_self_))._field_Files), &(_34122_ident), _34134_binded);;
}



inline jule::Ptr<_1c667de9c_Trait> _1c66dac0c_FindTrait(_1c66d9304_Package* _self_, jule::Str _34725_ident) {
	return _1c66d4a5d_findTraitInPackage(&((*(_self_))._field_Files), &(_34725_ident));;
}



inline jule::Ptr<_1c66816a8_Enum> _1c66db04d_FindEnum(_1c66d9304_Package* _self_, jule::Str _35324_ident) {
	return _1c66d4dd2_findEnumInPackage(&((*(_self_))._field_Files), &(_35324_ident));;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c66db38e_FindTypeEnum(_1c66d9304_Package* _self_, jule::Str _35928_ident) {
	return _1c66d5366_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35928_ident));;
}







inline jule::Ptr<_1c66956de_comptimeTypeInfo> _1c67061bc_pushComptimeTypeInfo(_1c6705c27_commonSemaMeta* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _22341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d176be:;
		if (it != expr_end) {
			jule::Ptr<_1c66956de_comptimeTypeInfo> _22415_t2 = *it;
			{
				if ((((*((*(_22415_t2))._field_base))._field_BindIdent == (*((*(_22341_t))))._field_BindIdent) && _1c67bc11d_Equal((*(_22415_t2))._field_base, (*(_22341_t))))) {
					return _22415_t2;;
				};
			}
			_iter_next_1d6d176be:;
			++it;
			goto _iter_begin_1d6d176be;
		}
		_iter_end_1d6d176be:;
	};
	jule::Ptr<_1c66956de_comptimeTypeInfo> _2297_t1 = jule::new_ptr<_1c66956de_comptimeTypeInfo>(_1c66956de_comptimeTypeInfo{._field_base=(*(_22341_t))});;
	{ jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2297_t1); };
	return _2297_t1;;
}







inline jule::Ptr<_1c66d63cd_ImportInfo> _1c6706d27_SelectPackage(_1c670684e_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _25229_selector) {
	return _1c67839a8_SelectPackage((*(_self_))._field_file.ptr(), _25229_selector);;
}



inline jule::Ptr<_1c672acb3_Var> _1c6707223_FindVar(_1c670684e_sema* _self_, jule::Str _26223_ident, jule::Bool _26235_binded) {
	jule::Ptr<_1c672acb3_Var> _2647_v = _1c66d3908_findVarInPackage(&((*(_self_))._field_files), &(_26223_ident), _26235_binded);;
	if ((_2647_v != nullptr)) {
		return _2647_v;;
	};
	if ((!(_1c670383a_IsPub(_26223_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d1db8c:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _27515_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_27515_imp), &(_26223_ident))))) {
					goto _iter_next_1d6d1db8c;
				};
				_2647_v=_1c66d6ce6_FindVar(_27515_imp.ptr(), _26223_ident, _26235_binded);
				if (((_2647_v != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_2647_v.alloc)._field_Public, (*_2647_v.alloc)._field_Token))) {
					return _2647_v;;
				};
			}
			_iter_next_1d6d1db8c:;
			++it;
			goto _iter_begin_1d6d1db8c;
		}
		_iter_end_1d6d1db8c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c670761e_FindTypeAlias(_1c670684e_sema* _self_, jule::Str _29429_ident, jule::Bool _29441_binded) {
	jule::Ptr<_1c67baade_TypeAlias> _2967_ta = _1c66d3d37_findTypeAliasInPackage(&((*(_self_))._field_files), &(_29429_ident), _29441_binded);;
	if ((_2967_ta != nullptr)) {
		return _2967_ta;;
	};
	if ((!(_1c670383a_IsPub(_29429_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d21ae6:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _30715_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_30715_imp), &(_29429_ident))))) {
					goto _iter_next_1d6d21ae6;
				};
				_2967_ta=_1c66d71e2_FindTypeAlias(_30715_imp.ptr(), _29429_ident, _29441_binded);
				if (((_2967_ta != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_2967_ta.alloc)._field_Public, (*_2967_ta.alloc)._field_Token))) {
					return _2967_ta;;
				};
			}
			_iter_next_1d6d21ae6:;
			++it;
			goto _iter_begin_1d6d21ae6;
		}
		_iter_end_1d6d21ae6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6655803_Struct> _1c6707a1a_FindStruct(_1c670684e_sema* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	jule::Ptr<_1c6655803_Struct> _3287_s = _1c66d42dd_findStructInPackage(&((*(_self_))._field_files), &(_32626_ident), _32638_binded);;
	if ((_3287_s != nullptr)) {
		return _3287_s;;
	};
	if ((!(_1c670383a_IsPub(_32626_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d24a50:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _33915_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_33915_imp), &(_32626_ident))))) {
					goto _iter_next_1d6d24a50;
				};
				_3287_s=_1c66d75dd_FindStruct(_33915_imp.ptr(), _32626_ident, _32638_binded);
				if (((_3287_s != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_3287_s.alloc)._field_Public, (*_3287_s.alloc)._field_Token))) {
					return _3287_s;;
				};
			}
			_iter_next_1d6d24a50:;
			++it;
			goto _iter_begin_1d6d24a50;
		}
		_iter_end_1d6d24a50:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6707e16_FindFn(_1c670684e_sema* _self_, jule::Str _35722_ident, jule::Bool _35734_binded) {
	jule::Ptr<_1c666a51b_Fn> _3597_f = _1c66d46d9_findFnInPackage(&((*(_self_))._field_files), &(_35722_ident), _35734_binded);;
	if ((_3597_f != nullptr)) {
		return _3597_f;;
	};
	if ((!(_1c670383a_IsPub(_35722_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d279a9:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _37015_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_37015_imp), &(_35722_ident))))) {
					goto _iter_next_1d6d279a9;
				};
				_3597_f=_1c66d79d9_FindFn(_37015_imp.ptr(), _35722_ident, _35734_binded);
				if (((_3597_f != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_3597_f.alloc)._field_Public, (*_3597_f.alloc)._field_Token))) {
					return _3597_f;;
				};
			}
			_iter_next_1d6d279a9:;
			++it;
			goto _iter_begin_1d6d279a9;
		}
		_iter_end_1d6d279a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c667de9c_Trait> _1c6708257_FindTrait(_1c670684e_sema* _self_, jule::Str _38925_ident) {
	jule::Ptr<_1c667de9c_Trait> _3917_t = _1c66d4a5d_findTraitInPackage(&((*(_self_))._field_files), &(_38925_ident));;
	if ((_3917_t != nullptr)) {
		return _3917_t;;
	};
	if ((!(_1c670383a_IsPub(_38925_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d2a6c1:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _40215_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_40215_imp), &(_38925_ident))))) {
					goto _iter_next_1d6d2a6c1;
				};
				_3917_t=_1c66d7d2a_FindTrait(_40215_imp.ptr(), _38925_ident);
				if (((_3917_t != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_3917_t.alloc)._field_Public, (*_3917_t.alloc)._field_Token))) {
					return _3917_t;;
				};
			}
			_iter_next_1d6d2a6c1:;
			++it;
			goto _iter_begin_1d6d2a6c1;
		}
		_iter_end_1d6d2a6c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66816a8_Enum> _1c6708598_FindEnum(_1c670684e_sema* _self_, jule::Str _42124_ident) {
	jule::Ptr<_1c66816a8_Enum> _4237_e = _1c66d4dd2_findEnumInPackage(&((*(_self_))._field_files), &(_42124_ident));;
	if ((_4237_e != nullptr)) {
		return _4237_e;;
	};
	if ((!(_1c670383a_IsPub(_42124_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d2d3d8:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _43415_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_43415_imp), &(_42124_ident))))) {
					goto _iter_next_1d6d2d3d8;
				};
				_4237_e=_1c66d816b_FindEnum(_43415_imp.ptr(), _42124_ident);
				if (((_4237_e != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_4237_e.alloc)._field_Public, (*_4237_e.alloc)._field_Token))) {
					return _4237_e;;
				};
			}
			_iter_next_1d6d2d3d8:;
			++it;
			goto _iter_begin_1d6d2d3d8;
		}
		_iter_end_1d6d2d3d8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c67088d9_FindTypeEnum(_1c670684e_sema* _self_, jule::Str _45328_ident) {
	jule::Ptr<_1c6682db3_TypeEnum> _4557_e = _1c66d5366_findTypeEnumInPackage(&((*(_self_))._field_files), &(_45328_ident));;
	if ((_4557_e != nullptr)) {
		return _4557_e;;
	};
	if ((!(_1c670383a_IsPub(_45328_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d31100:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _46615_imp = *it;
			{
				if ((!(_1c670473c_impIsLookupable(&(_46615_imp), &(_45328_ident))))) {
					goto _iter_next_1d6d31100;
				};
				_4557_e=_1c66d84ac_FindTypeEnum(_46615_imp.ptr(), _45328_ident);
				if (((_4557_e != nullptr) && _1c6709eb2_isAccessibleDefine(_self_, (*_4557_e.alloc)._field_Public, (*_4557_e.alloc)._field_Token))) {
					return _4557_e;;
				};
			}
			_iter_next_1d6d31100:;
			++it;
			goto _iter_begin_1d6d31100;
		}
		_iter_end_1d6d31100:;
	};
	return nullptr;;
}



inline jule::Bool _1c6708ce6_isFlag(_1c670684e_sema* _self_, jule::I64 _48218_flags) {
	return (((*(_self_))._field_flags & _48218_flags) == _48218_flags);;
}



inline jule::Ptr<_1c678348b_SymbolTable> _1c670907c_getCurrentFile(_1c670684e_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1c6709335_setCurrentFile(_1c670684e_sema* _self_, jule::Ptr<_1c678348b_SymbolTable> _48534_f) {
	(*(_self_))._field_file=_48534_f;
}



inline void _1c6709753_pushErr(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token> _48723_token, jule::Str _48738_fmt, jule::Slice<jule::Any> _48751_args) {
	{ jule::Slice<_20806e73a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c67043b8_compilerErr(&(_48723_token), true, _48738_fmt, _48751_args)); };
}



inline void _1c6709ab6_pushSuggestion(_1c670684e_sema* _self_, jule::Str _49230_fmt, jule::Slice<jule::Any> _49243_args) {
	{
		_1c670596e_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _49230_fmt, _49243_args);
	};
}



inline jule::Bool _1c6709eb2_isAccessibleDefine(_1c670684e_sema* _self_, jule::Bool _49830_public, jule::Ptr<_1c661e327_Token> _49844_token) {
	if ((_49830_public || ((*(_49844_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _5033_selfDir = _1c6625295_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _5043_tokenDir = _1c6625295_Dir((*_49844_token.alloc)._field_File.ptr());;
	if ((_5033_selfDir == _5043_tokenDir)) {
		return true;;
	};
	if ((_1c66db7ce_isStdPackage(&(_5043_tokenDir), jule::Str::lit("runtime", 7)) && _1c66db7ce_isStdPackage(&(_5033_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1c670a468_isDuplicatedIdent(_1c670684e_sema* _self_, jule::Uintptr _52129_itself, jule::Str* _52147_ident, jule::Bool _52159_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d38e2c:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> *_52210_f = it;
			{
				if (_1c6786d41_isDuplicatedIdent((*(_52210_f)).ptr(), _52129_itself, _52147_ident, _52159_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_52210_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6d39e50:;
					if (it != expr_end) {
						jule::Ptr<_1c66d63cd_ImportInfo> *_52711_imp = it;
						{
							{
								auto expr = &((*((*(_52711_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d6d3a857:;
								if (it != expr_end) {
									jule::Ptr<_1c661e327_Token> *_52812_selected = it;
									{
										if (((*((*(_52812_selected))))._field_Kind == (*(_52147_ident)))) {
											return true;;
										};
									}
									_iter_next_1d6d3a857:;
									++it;
									goto _iter_begin_1d6d3a857;
								}
								_iter_end_1d6d3a857:;
							};
						}
						_iter_next_1d6d39e50:;
						++it;
						goto _iter_begin_1d6d39e50;
					}
					_iter_end_1d6d39e50:;
				};
			}
			_iter_next_1d6d38e2c:;
			++it;
			goto _iter_begin_1d6d38e2c;
		}
		_iter_end_1d6d38e2c:;
	};
	return false;;
}



inline void _1c670a7cb_checkDirectives(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _53837_d, jule::Any _53863_o) {
	_1c66ce7e4_directiveChecker _5397_dc = _1c66ce7e4_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c6633d20_Directive>>>)(_53837_d)), ._field_o=_53863_o};;
	_1c66d1076_check(&_5397_dc);
}



inline jule::Bool _1c670ac82_checkGenericQuantity(_1c670684e_sema* _self_, jule::I64 _54736_required, jule::I64 _54751_given, jule::Ptr<_1c661e327_Token> _54763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_54736_required == 0LL) && (_54751_given > 0LL))) {
			_case_begin_1d6d3cd76:;
			{
				_1c6709753_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_54736_required > 0LL) && (_54751_given == 0LL))) {
			_case_begin_1d6d3cded:;
			{
				_1c6709753_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required < _54751_given)) {
			_case_begin_1d6d3ce75:;
			{
				_1c6709753_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_54736_required > _54751_given)) {
			_case_begin_1d6d3ceec:;
			{
				_1c6709753_pushErr(_self_, _54763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d6d3ccaa:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d6d3cbcd:;
	};
}



inline jule::Bool _1c670b17d_isDuplicatedImportSelection(_1c670684e_sema* _self_, jule::Uintptr _56639_itself, jule::Str* _56657_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d41220:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> *_56710_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_56710_imp))) == _56639_itself)) {
					goto _iter_end_1d6d41220;
				};
				if (_1c66d8c93_existIdent((*(_56710_imp)).ptr(), (*(_56657_ident)))) {
					return true;;
				};
			}
			_iter_next_1d6d41220:;
			++it;
			goto _iter_begin_1d6d41220;
		}
		_iter_end_1d6d41220:;
	};
	return false;;
}



inline jule::Any _1c670b579_getImportDef(_1c670684e_sema* _self_, jule::Str* _57925_ident, jule::Ptr<_1c66d63cd_ImportInfo>* _57942_imp) {
	if ((_1c68a5ca6_findPackageBuiltinDef(&((*((*(_57942_imp))))._field_LinkPath), _57925_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_57942_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d433ba:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _58315_f = *it;
			{
				;
				jule::Any _5868_def = _1c678688a_defByIdent(_58315_f.ptr(), _57925_ident, false);;
				if ((_5868_def != nullptr)) {
					return _5868_def;;
				};
			}
			_iter_next_1d6d433ba:;
			++it;
			goto _iter_begin_1d6d433ba;
		}
		_iter_end_1d6d433ba:;
	};
	return nullptr;;
}



inline jule::Bool _1d6d49e4e_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c672acb3_Var>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d4e87c_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c67baade_TypeAlias>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d53ee1_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c6655803_Struct>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d58699_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c667de9c_Trait>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d5cd0d_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c66816a8_Enum>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d6220d_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c6682db3_TypeEnum>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1d6d66872_checkImportSelection(_1c670684e_sema* _self_, jule::Ptr<_1c661e327_Token>* _59440_ident, jule::Ptr<_1c666a51b_Fn>* _59456_s) {
	if ((!(_1c6709eb2_isAccessibleDefine(_self_, (*((*(_59456_s))))._field_Public, (*((*(_59456_s))))._field_Token)))) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59440_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c66d571d_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_59456_s))))._field_Ident), false) != nullptr)) {
		_1c6709753_pushErr(_self_, (*(_59440_ident)), static_cast<jule::Str>(jule::Str::lit("selected identifier \"@\" is already exist in this package", 56)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_59456_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c670bcb6_checkImportSelectedSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _60850_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_60850_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d45026:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> _61010_ident = *it;
			{
				if (((*(_61010_ident))._field_Kind == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
					goto _iter_next_1d6d45026;
				};
				if (_1c670b17d_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_60850_imp))), &((*_61010_ident.alloc)._field_Kind))) {
					_1c6709753_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1d6d45026;
				};
				jule::Any _6228_def = _1c670b579_getImportDef(_self_, &((*_61010_ident.alloc)._field_Kind), _60850_imp);;
				{
					auto &_match_expr{ _6228_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1d6d46214:;
						{
							goto _iter_next_1d6d45026;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1d6d47e2a:;
						{
							jule::Ptr<_1c672acb3_Var> _6289_v = _6228_def.unsafe_cast_ptr<_1c672acb3_Var>();;
							__jule_func_result=(_1d6d49e4e_checkImportSelection(_self_, &(_61010_ident), &(_6289_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1d6d47e91:;
						{
							jule::Ptr<_1c67baade_TypeAlias> _6319_ta = _6228_def.unsafe_cast_ptr<_1c67baade_TypeAlias>();;
							__jule_func_result=(_1d6d4e87c_checkImportSelection(_self_, &(_61010_ident), &(_6319_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1d6d48007:;
						{
							jule::Ptr<_1c6655803_Struct> _6349_s = _6228_def.unsafe_cast_ptr<_1c6655803_Struct>();;
							__jule_func_result=(_1d6d53ee1_checkImportSelection(_self_, &(_61010_ident), &(_6349_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1d6d4806d:;
						{
							jule::Ptr<_1c667de9c_Trait> _6379_t = _6228_def.unsafe_cast_ptr<_1c667de9c_Trait>();;
							__jule_func_result=(_1d6d58699_checkImportSelection(_self_, &(_61010_ident), &(_6379_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1d6d480d4:;
						{
							jule::Ptr<_1c66816a8_Enum> _6409_e = _6228_def.unsafe_cast_ptr<_1c66816a8_Enum>();;
							__jule_func_result=(_1d6d5cd0d_checkImportSelection(_self_, &(_61010_ident), &(_6409_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1d6d48c94:;
						{
							jule::Ptr<_1c6682db3_TypeEnum> _6439_e = _6228_def.unsafe_cast_ptr<_1c6682db3_TypeEnum>();;
							__jule_func_result=(_1d6d6220d_checkImportSelection(_self_, &(_61010_ident), &(_6439_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1d6d48d0a:;
						{
							jule::Ptr<_1c666a51b_Fn> _6469_f = _6228_def.unsafe_cast_ptr<_1c666a51b_Fn>();;
							__jule_func_result=(_1d6d66872_checkImportSelection(_self_, &(_61010_ident), &(_6469_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1d6d47d1a:;
						{
							_1c6709753_pushErr(_self_, _61010_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_61010_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1d6d45026;
						}
					}
					_match_end_1d6d4780e:;
				};
			}
			_iter_next_1d6d45026:;
			++it;
			goto _iter_begin_1d6d45026;
		}
		_iter_end_1d6d45026:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d6d6b525_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d6d11a:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d49e4e_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d6d11a:;
			++it;
			goto _iter_begin_1d6d6d11a;
		}
		_iter_end_1d6d6d11a:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d6c6ad_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d70848:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d4e87c_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d70848:;
			++it;
			goto _iter_begin_1d6d70848;
		}
		_iter_end_1d6d70848:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d6e759_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d73065:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d53ee1_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d73065:;
			++it;
			goto _iter_begin_1d6d73065;
		}
		_iter_end_1d6d73065:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d7264c_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d757a4:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d66872_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d757a4:;
			++it;
			goto _iter_begin_1d6d757a4;
		}
		_iter_end_1d6d757a4:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d75331_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c667de9c_Trait>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d77e7c:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d58699_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d77e7c:;
			++it;
			goto _iter_begin_1d6d77e7c;
		}
		_iter_end_1d6d77e7c:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d77a4d_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c66816a8_Enum>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d7a655:;
		if (it != expr_end) {
			jule::Ptr<_1c66816a8_Enum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d5cd0d_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d7a655:;
			++it;
			goto _iter_begin_1d6d7a655;
		}
		_iter_end_1d6d7a655:;
	};
	return _6587_ok;;
}

inline jule::Bool _1d6d7a226_checkImportsAllSelectionsFromCollection(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>>* _65759_s, jule::Ptr<_1c661e327_Token>* _65768_et) {
	jule::Bool _6587_ok = true;;
	{
		auto expr = _65759_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d7cdb6:;
		if (it != expr_end) {
			jule::Ptr<_1c6682db3_TypeEnum> *_65910_d = it;
			{
				if ((*((*(_65910_d))))._field_Public) {
					_6587_ok=(_1d6d6220d_checkImportSelection(_self_, _65768_et, _65910_d) && _6587_ok);
				};
			}
			_iter_next_1d6d7cdb6:;
			++it;
			goto _iter_begin_1d6d7cdb6;
		}
		_iter_end_1d6d7cdb6:;
	};
	return _6587_ok;;
}



inline jule::Bool _1c670c503_checkImportAllSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _66741_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_66741_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d453ab:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> *_66910_file = it;
			{
				__jule_func_result=(_1d6d6b525_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_66910_file))))._field_Vars), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d6c6ad_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeAliases), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d6e759_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Structs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d7264c_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Funcs), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d75331_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Traits), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d77a4d_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_Enums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1d6d7a226_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_66910_file)).alloc)._field_TypeEnums), &((*((*(_66741_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1d6d453ab:;
			++it;
			goto _iter_begin_1d6d453ab;
		}
		_iter_end_1d6d453ab:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c670c844_checkImportSelections(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _68142_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_68142_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c670bcb6_checkImportSelectedSelections(_self_, _68142_imp);
		return __jule_func_result;;
	} else if ((*((*(_68142_imp))))._field_ImportAll) {
		__jule_func_result = _1c670c503_checkImportAllSelections(_self_, _68142_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c670cb85_isUseAliasDuplication(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _69038_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d800e9:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _69115_imp2 = *it;
			{
				if ((_69115_imp2 == (*(_69038_imp)))) {
					goto _iter_end_1d6d800e9;
				};
				if (((*(_69115_imp2))._field_Alias == (*((*(_69038_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_69115_imp2.alloc)._field_Ident == (*_69115_imp2.alloc)._field_LinkPath) && ((*_69115_imp2.alloc)._field_Ident == (*((*(_69038_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1d6d800e9:;
			++it;
			goto _iter_begin_1d6d800e9;
		}
		_iter_end_1d6d800e9:;
	};
	return false;;
}



inline jule::Bool _1c670cec6_checkImport(_1c670684e_sema* _self_, jule::Ptr<_1c66d63cd_ImportInfo>* _70632_imp) {
	if (((*((*(_70632_imp))))._field_Binded || ((*((*((*(_70632_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_70632_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_70632_imp))))._field_ImportAll || !((*((*(_70632_imp))))._field_Alias).empty()) || ((*((*(_70632_imp))))._field_Selected.len() > 0LL))) {
			_1c6709753_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_70632_imp))))._field_Alias.len() != 0LL)) {
		if (_1c6621c0e_IsIgnoreIdent((*((*(_70632_imp))))._field_Alias)) {
			_1c6709753_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1c670cb85_isUseAliasDuplication(_self_, _70632_imp)) {
			_1c6709753_pushErr(_self_, (*((*(_70632_imp))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_70632_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_70632_imp))))._field_Duplicate))) {
		jule::Ptr<_1c670684e_sema> _7298_sema = jule::new_ptr<_1c670684e_sema>(_1c670684e_sema{._field_errors=jule::Slice<_20806e73a_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1c678348b_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1c6727210_check(_7298_sema, &((*(*((*(_70632_imp))))._field_Package.alloc)._field_Files));
		if (((*_7298_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7298_sema.alloc)._field_errors);;
			(*_7298_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1c670c844_checkImportSelections(_self_, _70632_imp);;
}



inline void _1c670d1c4_checkImports(_1c670684e_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d89b81:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _74415_file = *it;
			{
				_1c6709335_setCurrentFile(_self_, _74415_file);
				{
					auto expr = &((*(_74415_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6d8a874:;
					if (it != expr_end) {
						jule::Ptr<_1c66d63cd_ImportInfo> _74616_imp = *it;
						{
							jule::Bool _7475_ok = _1c670cec6_checkImport(_self_, &(_74616_imp));;
							if ((!(_7475_ok))) {
								return;;
							};
						}
						_iter_next_1d6d8a874:;
						++it;
						goto _iter_begin_1d6d8a874;
					}
					_iter_end_1d6d8a874:;
				};
			}
			_iter_next_1d6d89b81:;
			++it;
			goto _iter_begin_1d6d89b81;
		}
		_iter_end_1d6d89b81:;
	};
}



inline void _1c670d3c2_implFileImpls(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d8acb4:;
		if (it != expr_end) {
			jule::Ptr<_1c66adce0_Impl> _75715_imp = *it;
			{
				_1c671d3c1_implImpl(_self_, &(_75715_imp));
			}
			_iter_next_1d6d8acb4:;
			++it;
			goto _iter_begin_1d6d8acb4;
		}
		_iter_end_1d6d8acb4:;
	};
}



inline void _1c670d5c0_implImpls(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d8c6de:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _76315_file = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _76315_file);
				_1c670d3c2_implFileImpls(_self_);
			}
			_iter_next_1d6d8c6de:;
			++it;
			goto _iter_begin_1d6d8c6de;
		}
		_iter_end_1d6d8c6de:;
	};
}



inline void _1c670d7bd_checkEnums(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d8d79a:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _77015_file = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _77015_file);
				{
					
					if ((!(_1c671980c_checkEnumDecls(_self_)))) {
						_case_begin_1d6d8dde9:;
					}
					else if ((!(_1c6719a93_checkTypeEnumDecls(_self_)))) {
						_case_begin_1d6d8e4c1:;
					}
					_match_end_1d6d8e3e4:;
				};
			}
			_iter_next_1d6d8d79a:;
			++it;
			goto _iter_begin_1d6d8d79a;
		}
		_iter_end_1d6d8d79a:;
	};
}



inline void _1c670d9bb_checkFileInherits(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d9034b:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _78015_t = *it;
			{
				jule::Bool _7814_ok = _1c671b457__checkTraitDeclInherits(_self_, &(_78015_t));;
				if ((!(_7814_ok))) {
					return;;
				};
			}
			_iter_next_1d6d9034b:;
			++it;
			goto _iter_begin_1d6d9034b;
		}
		_iter_end_1d6d9034b:;
	};
}



inline void _1c670dbb9_checkInherits(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d908e0:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _78915_file = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _78915_file);
				_1c670d9bb_checkFileInherits(_self_);
			}
			_iter_next_1d6d908e0:;
			++it;
			goto _iter_begin_1d6d908e0;
		}
		_iter_end_1d6d908e0:;
	};
}



inline _1c67cdccd_typeChecker _1c670e170_typeChecker(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _79532_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _79547_generics, jule::Ptr<_1c67cccdd_referencer> _7967_referencer) {
	_1c67cdccd_typeChecker _7977_tc = _1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=_79532_l, ._field_lookup=_79532_l, ._field_referencer=_7967_referencer, ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_79547_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _79532_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d6d935c4:;
			{
				jule::Ptr<_1c66ba857_scopeChecker> _8068_hard = _1c66bdeba_getHardRoot(_79532_l.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
				_7977_tc._field_refers=(*((*(_8068_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1d6d9355d:;
	};
	if (((_7967_referencer != nullptr) && ((*_7967_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7967_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1d6d94e44:;
				{
					_7977_tc._field_ownerAlias=(*(_7967_referencer))._field_owner.unsafe_cast_ptr<_1c67baade_TypeAlias>();
				}
			}
			_match_end_1d6d94dcd:;
		};
	};
	return _7977_tc;;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c670e6d1_buildTypeWithRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _82241_t, jule::Trait _82264_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8237_generics, jule::Ptr<_1c67cccdd_referencer> _82335_referencer) {
	return ({ auto _wrap_copy = _1c670e170_typeChecker(_self_, _82264_l, _8237_generics, _82335_referencer); _1c67d68b8_checkDecl(&_wrap_copy, _82241_t); });;
}



inline jule::Bool _1c670ec42_checkTypeWithRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c40e2_TypeSymbol>* _82941_t, jule::Trait _82961_l, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8307_generics, jule::Ptr<_1c67cccdd_referencer> _83035_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c67c4499_checked((*(_82941_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_82941_t))))._field_Kind=_1c670e6d1_buildTypeWithRefers(_self_, &((*((*(_82941_t))))._field_Decl), _82961_l, _8307_generics, _83035_referencer);
	__jule_func_result = _1c67c4499_checked((*(_82941_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c66ab98b_constraintChecker> _1c670eec8_constraintChecker(jule::Ptr<_1c670684e_sema> _self_) {
	return jule::new_ptr<_1c66ab98b_constraintChecker>(_1c66ab98b_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_si=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_et=jule::Ptr<_1c661e327_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1c67103c4_checkType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c40e2_TypeSymbol>* _84431_t, jule::Trait _84451_l) {
	return _1c670ec42_checkTypeWithRefers(_self_, _84431_t, _84451_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c671087a_checkTypeRefers(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _84937_t, jule::Trait _84960_l, jule::Ptr<_1c6671687_ReferenceStack> _84975_refers) {
	jule::Ptr<_1c67cdccd_typeChecker> _8507_tc = jule::new_ptr<_1c67cdccd_typeChecker>(_1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=_84960_l, ._field_lookup=_84960_l, ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=_84975_refers, ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c67d68b8_checkDecl(_8507_tc.ptr(), _84937_t);;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c6710d31_buildTypeWithGenerics(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _86143_t, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _8627_generics, jule::Ptr<_1c6671687_ReferenceStack> _86235_refers) {
	jule::Ptr<_1c67cdccd_typeChecker> _8637_tc = jule::new_ptr<_1c67cdccd_typeChecker>(_1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=_86235_refers, ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8627_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c67d68b8_checkDecl(_8637_tc.ptr(), _86143_t);;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67114b3_selectType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _87932_t) {
	jule::Ptr<_1c67cdccd_typeChecker> _8807_tc = jule::new_ptr<_1c67cdccd_typeChecker>(_1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c67d68b8_checkDecl(_8807_tc.ptr(), _87932_t);;
}



inline jule::Ptr<_1c678a87d_eval> _1c6711969_evalpd(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _89127_l, jule::Ptr<_1c67bb8d1_TypeKind> _89142_p, jule::Ptr<_1c672acb3_Var> _89160_owner) {
	jule::Ptr<_1c678a87d_eval> _8927_e = jule::new_ptr<_1c678a87d_eval>(_1c678a87d_eval{._field_s=_self_, ._field_lookup=_89127_l, ._field_prefix=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_89160_owner, ._field_field=jule::Ptr<_1c6657aad_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _89127_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d6da07ce:;
			{
				(*(_8927_e))._field_unsafety=_1c66bcc44_isUnsafe(_89127_l.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
			}
		}
		_match_end_1d6da0768:;
	};
	(*_8927_e.alloc)._field_prefix=_89142_p;
	return _8927_e;;
}



inline jule::Ptr<_1c678a87d_eval> _1c6711d65_evalp(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _90626_l, jule::Ptr<_1c67bb8d1_TypeKind> _90641_p) {
	return _1c6711969_evalpd(_self_, _90626_l, _90641_p, nullptr);;
}



inline jule::Ptr<_1c678a87d_eval> _1c67121a6_eval(jule::Ptr<_1c670684e_sema> _self_, jule::Trait _91125_l) {
	return _1c6711d65_evalp(_self_, _91125_l, nullptr);;
}



inline jule::Bool _1c67127c2_checkAssignType(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _91532_destIsRef, jule::Ptr<_1c67bb8d1_TypeKind>* _91554_dest, jule::Ptr<_1c6788b56_Data>* _9168_d, jule::Ptr<_1c661e327_Token> _91622_errorToken, jule::Ptr<_1c6671687_ReferenceStack> _91646_refers) {
	if ((*((*(_9168_d))))._field_Decl) {
		_1c6709753_pushErr(_self_.ptr(), _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_91532_destIsRef) {
		if ((!(_1c67bc11d_Equal((*(_91554_dest)), (*((*(_9168_d))))._field_Kind)))) {
			_1c6709753_pushErr(_self_, _91622_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_91554_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_9168_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1c677226b_assignTypeChecker> _9278_atc = jule::new_ptr<_1c677226b_assignTypeChecker>(_1c677226b_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_91554_dest)), ._field_d=(*(_9168_d)), ._field_errorToken=_91622_errorToken, ._field_refers=_91646_refers});;
		jule::Bool _9344_ok = _1c677326c_check(_9278_atc.ptr());;
		if ((!(_9344_ok))) {
			return false;;
		};
	};
	if (((!(_1c6789591_IsConst((*(_9168_d)).ptr()))) || (_1c67be087_Prim((*(_91554_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9447_kind = (*(_1c67be087_Prim((*(_91554_dest)).ptr())))._field_Kind;;
	{
		
		if (_1dd71d695_IsSigInt(_9447_kind)) {
			_case_begin_1d6da895d:;
			{
				_1dd7227ed_SetI64((*((*(_9168_d))))._field_Constant.ptr(), _1dd722028_AsI64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1dd71d9a3_IsUnsigInt(_9447_kind)) {
			_case_begin_1d6da89e6:;
			{
				_1dd722aa6_SetU64((*((*(_9168_d))))._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_9168_d))))._field_Constant));
			}
		}
		else if (_1dd71e0ad_IsFloat(_9447_kind)) {
			_case_begin_1d6da8a5c:;
			{
				_1dd7233c0_SetF64((*((*(_9168_d))))._field_Constant.ptr(), _1dd722545_AsF64((*((*(_9168_d))))._field_Constant));
			}
		}
		_match_end_1d6da88a3:;
	};
	return true;;
}



inline jule::Bool _1c6712c78__checkTypeCompatibility(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _95845_dest, jule::Ptr<_1c67bb8d1_TypeKind>* _95867_src, jule::Ptr<_1c661e327_Token> _9597_errorToken) {
	if (((*(_95867_src)) == nullptr)) {
		return false;;
	};
	if ((_1c67c0dad_Tup((*(_95867_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1c67703e0_typeCompatibilityChecker _9677_tcc = _1c67703e0_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_95845_dest)), ._field_src=(*(_95867_src)), ._field_errorToken=_9597_errorToken};;
	return _1c6771ad9_check(&_9677_tcc);;
}



inline jule::Bool _1c671322e_checkTypeCompatibility(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _97644_dest, jule::Ptr<_1c67bb8d1_TypeKind>* _9778_src, jule::Ptr<_1c661e327_Token>* _97729_errorToken) {
	if (_1c6712c78__checkTypeCompatibility(_self_, _97644_dest, _9778_src, (*(_97729_errorToken)))) {
		return true;;
	};
	_1c6709753_pushErr(_self_, (*(_97729_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_97644_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_9778_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1c671364c_pushCompatiblityError(_1c670684e_sema* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _98542_dest, jule::Ptr<_1c6788b56_Data>* _98564_src, jule::Ptr<_1c661e327_Token>* _9868_errorToken) {
	if ((*((*(_98564_src))))._field_untyped) {
		{
			
			if (_1dd723854_IsI64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1d6db0d83:;
				{
					_1c6709753_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1dd723ada_IsU64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1d6db0e2c:;
				{
					_1c6709753_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1dd72438d_IsF64((*((*(_98564_src))))._field_Constant.ptr())) {
				_case_begin_1d6db0e93:;
				{
					_1c6709753_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1d6db0c51:;
		};
	};
	_1c6709753_pushErr(_self_, (*(_9868_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_98542_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_98564_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c6713b03_checkTypeCompatibility1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _100345_dest, jule::Ptr<_1c6788b56_Data>* _100367_src, jule::Ptr<_1c661e327_Token>* _10048_errorToken) {
	if (_1c6712c78__checkTypeCompatibility(_self_, _100345_dest, &((*((*(_100367_src))))._field_Kind), (*(_10048_errorToken)))) {
		return true;;
	};
	_1c671364c_pushCompatiblityError(_self_, _100345_dest, _100367_src, _10048_errorToken);
	return false;;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67140a9_buildNonGenericTypeKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6634903_TypeDecl>* _101845_ast, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _10198_generics, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>* _101944_ignored) {
	jule::Ptr<_1c67cdccd_typeChecker> _10207_tc = jule::new_ptr<_1c67cdccd_typeChecker>(_1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=(*(_10198_generics)), ._field_ignoredGenerics=_101944_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c67d68b8_checkDecl(_10207_tc.ptr(), _101845_ast);;
}



inline jule::Bool _1c67144a5_buildFnNonGenericTypeKinds(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns> _103047_f, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>* _103063_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _103111_generics = nullptr;;
	if (_1c666ac58_IsMethod((*(_103047_f))._field_Decl.ptr())) {
		_103111_generics=jule::append((*(*(_103047_f))._field_Decl.alloc)._field_Generics,(*((*(*(_103047_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_103111_generics=(*((*(_103047_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1c671564e_basicFnEnvironment(_self_, &(_103047_f), jule::__new_closure<jule::Bool,jule::Ptr<_1c670684e_sema>*>((void*)__jule_anon_1d6dbb61e, jule::Ptr<__jule_anon_1d6dbb61e_ctx>::make(__jule_anon_1d6dbb61e_ctx{._103047_f=_103047_f,._103111_generics=_103111_generics,._103063_ignored=_103063_ignored}).as<jule::Uintptr>(), __jule_anon_1d6dbb61e_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c67147e6_getTraitCheckFnKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _105341_f) {
	if (((*((*(_105341_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_105341_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1c666d4ec_FnIns> _10577_ins = _1c666ba28_instanceForce((*(_105341_f)));;
	jule::Ptr<_1c67cdccd_typeChecker> _10597_tc = jule::new_ptr<_1c67cdccd_typeChecker>(_1c67cdccd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10577_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6dc2a21:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _106415_p = *it;
			{
				if ((!(_1c6669196_IsSelf((*(_106415_p))._field_Decl.ptr())))) {
					(*_106415_p.alloc)._field_Kind=_1c67d68b8_checkDecl(_10597_tc.ptr(), &((*((*(*(_106415_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_106415_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1d6dc2a21:;
			++it;
			goto _iter_begin_1d6dc2a21;
		}
		_iter_end_1d6dc2a21:;
	};
	if ((!(_1c666a9c2_IsVoid((*(_105341_f)).ptr())))) {
		(*_10577_ins.alloc)._field_Result=_1c67d68b8_checkDecl(_10597_tc, &((*((*((*((*(_105341_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10577_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10577_ins;;
}



inline jule::Bool _1c6714c9c_checkConstraintsFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _108240_f, jule::Ptr<_1c661e327_Token>* _108256_et, jule::Ptr<_1c666d4ec_FnIns> _108272_exist) {
	jule::Ptr<_1c66ab98b_constraintChecker> _10837_cc = _1c670eec8_constraintChecker(_self_);;
	(*(_10837_cc))._field_et=(*(_108256_et));
	(*_10837_cc.alloc)._field_fi=(*(_108240_f));
	if ((_108272_exist != nullptr)) {
		{
			auto expr = &((*_108272_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d6dc7b8b:;
			if (it != expr_end) {
				jule::I64 _10879_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> _108716_g = *it;
				{
					(*((*((*(_108240_f))))._field_Generics[_10879_i]))._field_Constraint=(*(_108716_g))._field_Constraint;
				}
				_iter_next_1d6dc7b8b:;
				++it;
				_10879_i++;
				goto _iter_begin_1d6dc7b8b;
			}
			_iter_end_1d6dc7b8b:;
		};
	} else {
		(*_10837_cc.alloc)._field_uniq=true;
	};
	return _1c66ac904_check(_10837_cc);;
}



inline jule::Bool _1c6715253_checkConstraintsStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _109644_s, jule::Ptr<_1c661e327_Token>* _109664_et, jule::Ptr<_1c665865d_StructIns> _109680_exist) {
	jule::Ptr<_1c66ab98b_constraintChecker> _10977_cc = _1c670eec8_constraintChecker(_self_);;
	(*(_10977_cc))._field_et=(*(_109664_et));
	(*_10977_cc.alloc)._field_si=(*(_109644_s));
	if ((_109680_exist != nullptr)) {
		{
			auto expr = &((*_109680_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d6dcad59:;
			if (it != expr_end) {
				jule::I64 _11019_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> _110116_g = *it;
				{
					(*((*((*(_109644_s))))._field_Generics[_11019_i]))._field_Constraint=(*(_110116_g))._field_Constraint;
				}
				_iter_next_1d6dcad59:;
				++it;
				_11019_i++;
				goto _iter_begin_1d6dcad59;
			}
			_iter_end_1d6dcad59:;
		};
	} else {
		(*_10977_cc.alloc)._field_uniq=true;
	};
	return _1c66ac904_check(_10977_cc);;
}



inline jule::Bool _1c671564e_basicFnEnvironment(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _111340_f, jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*> _111351_algo) {
	jule::Ptr<_1c670684e_sema> _11147_sema = (*((*((*(_111340_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1c678348b_SymbolTable> _11157_old = _1c670907c_getCurrentFile(_11147_sema.ptr());;
	jule::Ptr<_1c678348b_SymbolTable> _11167_file = _1c67054b8_findFile(&((*_11147_sema.alloc)._field_files), &((*((*(*((*(_111340_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_11167_file != nullptr)) {
		_1c6709335_setCurrentFile(_11147_sema, _11167_file);
	};
	jule::Bool _11213_ok = _111351_algo(&(_11147_sema));;
	if ((_11147_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_11147_sema.alloc)._field_errors);
		(*_11147_sema.alloc)._field_errors=nullptr;
	};
	_1c6709335_setCurrentFile(_11147_sema, _11157_old);
	return _11213_ok;;
}



inline jule::Bool _1c6715a4a_fnEnvironment(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _113335_f, jule::Fn<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*> _113346_algo) {
	jule::I64 _11347_size = (*((*(_113335_f))))._field_Generics.len();;
	if ((((*((*(_113335_f))))._field_Decl != nullptr) && ((*(*((*(_113335_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_11347_size+=(*(*((*((*(_113335_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _11387_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>::alloc(0LL, _11347_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67baade_TypeAlias>(nullptr); __jule_collection; });;
	_1c6705144_appendGenericTypeAliases(&(_11387_generics), _113335_f);
	return _1c671564e_basicFnEnvironment(_self_, _113335_f, jule::__new_closure<jule::Bool,jule::Ptr<_1c670684e_sema>*>((void*)__jule_anon_1d6dd45e3, jule::Ptr<__jule_anon_1d6dd45e3_ctx>::make(__jule_anon_1d6dd45e3_ctx{._113346_algo=_113346_algo,._11387_generics=_11387_generics}).as<jule::Uintptr>(), __jule_anon_1d6dd45e3_ctx_handler));;
}



inline void _1c6715d03_checkFnParamKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666c474_ParamIns>* _114538_p) {
	(*((*((*(_114538_p))))._field_Kind))._field_Variadic=(*((*((*(_114538_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_114538_p))))._field_Decl.alloc)._field_Reference && (!(_1c67d87dd_isValidForRef(&((*((*(_114538_p))))._field_Kind)))))) {
		_1c6709753_pushErr(_self_.ptr(), (*(*((*(_114538_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_114538_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1c6716144_reloadFnInsTypes(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns> _115237_f) {
	if ((_1c666e9b5_IsBuiltin(_115237_f.ptr()) || _1c666ec4b_IsAnon(_115237_f))) {
		return true;;
	};
	return _1c6715a4a_fnEnvironment(_self_, &(_115237_f), jule::__new_closure<jule::Bool,jule::Ptr<_1c670684e_sema>*,jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>*>((void*)__jule_anon_1d6dd8dcd, jule::Ptr<__jule_anon_1d6dd8dcd_ctx>::make(__jule_anon_1d6dd8dcd_ctx{._115237_f=_115237_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d6dd8dcd_ctx_handler));;
}



inline jule::Bool _1c67165ea_checkRefValidityForInitExpr(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _119244_leftMut, jule::Ptr<_1c6788b56_Data>* _119264_d, jule::Ptr<_1c661e327_Token>* _119279_errorToken) {
	if ((!(_1c6703e12_isValidModelForRef(&((*((*(_119264_d))))._field_Model))))) {
		_1c6709753_pushErr(_self_.ptr(), (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_119244_leftMut && (!((*((*(_119264_d))))._field_Mutable)))) {
		_1c6709753_pushErr(_self_, (*(_119279_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c671693b_isMutRiskyStruct(_1c670684e_sema* _self_, jule::Ptr<_1c665865d_StructIns>* _120929_s) {
	{
		auto expr = &((*((*(_120929_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6de40e7:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> *_121010_f = it;
			{
				if ((((*((*((*(_121010_f))))._field_Decl))._field_Mutable && _1c67bd2b7_Mutable((*(*(_121010_f)).alloc)._field_Kind.ptr())) && _1c6709eb2_isAccessibleDefine(_self_, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Public, (*(*((*(_121010_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1d6de40e7:;
			++it;
			goto _iter_begin_1d6de40e7;
		}
		_iter_end_1d6de40e7:;
	};
	return false;;
}



inline jule::Bool _1c6717057_checkValidityForInitExpr(jule::Ptr<_1c670684e_sema> _self_, jule::Bool _123641_leftMut, jule::Bool _123656_leftRef, jule::Ptr<_1c67bb8d1_TypeKind>* _12374_leftKind, jule::Ptr<_1c6788b56_Data>* _123730_d, jule::Ptr<_1c661e327_Token>* _123745_errorToken) {
	if ((_123641_leftMut && (!((*((*(_123730_d))))._field_Mutable)))) {
		if (_1c67bd2b7_Mutable((*((*(_123730_d))))._field_Kind.ptr())) {
			_1c6709753_pushErr(_self_.ptr(), (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1c665865d_StructIns> _12454_s = _1c67c060a_Struct((*((*(_123730_d))))._field_Kind);;
		if (((_12454_s != nullptr) && _1c671693b_isMutRiskyStruct(_self_, &(_12454_s)))) {
			_1c6709753_pushErr(_self_, (*(_123745_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_123730_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_123656_leftRef) {
		if ((!(_1c67165ea_checkRefValidityForInitExpr(_self_, _123641_leftMut, _123730_d, _123745_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c677226b_assignTypeChecker> _12567_atc = jule::new_ptr<_1c677226b_assignTypeChecker>(_1c677226b_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_d=(*(_123730_d)), ._field_errorToken=(*(_123745_errorToken)), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr)});;
	return _1c67729b9_checkValidity(_12567_atc.ptr());;
}



inline jule::Bool _1c6717453_checkTypeAliasDeclKind(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _126444_ta, jule::Trait _126464_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c678348b_SymbolTable> _12657_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c6709335_setCurrentFile(_self_, _12657_old);
	});;
	if (((*((*(_126444_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1c678348b_SymbolTable> _12708_file = _1c67054b8_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_126444_ta))))._field_Token.alloc)._field_File));;
		if ((_12708_file != nullptr)) {
			_1c6709335_setCurrentFile(_self_, _12708_file);
		};
	};
	__jule_func_result=_1c670ec42_checkTypeWithRefers(_self_, &((*((*(_126444_ta))))._field_Kind), _126464_l, nullptr, jule::new_ptr<_1c67cccdd_referencer>(_1c67cccdd_referencer{._field_ident=(*((*(_126444_ta))))._field_Ident, ._field_owner=jule::Any((*(_126444_ta)), &__jule_any_type27), ._field_refs=(&((*((*(_126444_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1c67bed57_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1c67bed57_Arr((*((*((*(_126444_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1c6709753_pushErr(_self_, (*((*(*((*(_126444_ta))))._field_Kind.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c67177b6_checkTypeAliasDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _128740_ta, jule::Trait _128760_l) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_128740_ta))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_128740_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1c6717453_checkTypeAliasDeclKind(_self_, _128740_ta, _128760_l);
}



inline void _1c6717a6e_checkTypeAliasDeclDup(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67baade_TypeAlias>* _129543_ta) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_129543_ta))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1c670a468_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_129543_ta))), &((*((*(_129543_ta))))._field_Ident), (*((*(_129543_ta))))._field_Binded)) {
		_1c6709753_pushErr(_self_, (*((*(_129543_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_129543_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1c6717453_checkTypeAliasDeclKind(_self_, _129543_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
}



inline jule::Bool _1c6717d05_checkTypeAliasDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e07726:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> _130815_ta = *it;
			{
				_1c6717a6e_checkTypeAliasDeclDup(_self_, &(_130815_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6e07726:;
			++it;
			goto _iter_begin_1d6e07726;
		}
		_iter_end_1d6e07726:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d6e36733_checkEnumItemsDup(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e37b41:;
		if (it != expr_end) {
			jule::Ptr<_1c6680b3b_EnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1d6e37b41;
				} else if (_1c6621c0e_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1c6709753_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d6e38d62:;
						if (it != expr_end) {
							jule::Ptr<_1c6680b3b_EnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1d6e38d62;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1c6709753_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1d6e38d62;
								};
							}
							_iter_next_1d6e38d62:;
							++it;
							goto _iter_begin_1d6e38d62;
						}
						_iter_end_1d6e38d62:;
					};
				};
			}
			_iter_next_1d6e37b41:;
			++it;
			goto _iter_begin_1d6e37b41;
		}
		_iter_end_1d6e37b41:;
	};
}

inline void _1d6e448a6_checkEnumItemsDup(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _131936_items) {
	{
		auto expr = &(_131936_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e45c70:;
		if (it != expr_end) {
			jule::Ptr<_1c66827db_TypeEnumItem> *_132010_item = it;
			{
				if (((*((*(_132010_item))))._field_Ident).empty()) {
					goto _iter_next_1d6e45c70;
				} else if (_1c6621c0e_IsIgnoreIdent((*((*(_132010_item))))._field_Ident)) {
					_1c6709753_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_131936_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d6e46e91:;
						if (it != expr_end) {
							jule::Ptr<_1c66827db_TypeEnumItem> *_132612_citem = it;
							{
								if (((*(_132010_item)) == (*(_132612_citem)))) {
									goto _iter_end_1d6e46e91;
								} else if (((*((*(_132010_item))))._field_Ident == (*((*(_132612_citem))))._field_Ident)) {
									_1c6709753_pushErr(_self_, (*(*(_132010_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_132010_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1d6e46e91;
								};
							}
							_iter_next_1d6e46e91:;
							++it;
							goto _iter_begin_1d6e46e91;
						}
						_iter_end_1d6e46e91:;
					};
				};
			}
			_iter_next_1d6e45c70:;
			++it;
			goto _iter_begin_1d6e45c70;
		}
		_iter_end_1d6e45c70:;
	};
}



inline void _1c6718366_checkEnumItemsStr(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _133939_e) {
	jule::Ptr<_1c678a87d_eval> _13407_eval = _1c67121a6_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_133939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e094b4:;
		if (it != expr_end) {
			jule::Ptr<_1c6680b3b_EnumItem> _134115_item = *it;
			{
				if (_1c6681026_AutoExpr(_134115_item.ptr())) {
					(*_134115_item.alloc)._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd720620_NewStr((*_134115_item.alloc)._field_Ident)})});
					(*((*((*_134115_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_134115_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
				} else {
					jule::Ptr<_1c6788b56_Data> _13509_d = _1c67a96e3_evalExpr(_13407_eval, (*((*(_134115_item))._field_Value))._field_Expr);;
					if ((_13509_d == nullptr)) {
						goto _iter_next_1d6e094b4;
					};
					if ((!(_1c6789591_IsConst(_13509_d.ptr())))) {
						_1c6709753_pushErr(_self_, (*((*(*(_134115_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1c6671687_ReferenceStack> _13599_refers = static_cast<jule::Ptr<_1c6671687_ReferenceStack>>(nullptr);;
					_1c67127c2_checkAssignType(_self_, false, &((*((*((*(_133939_e))))._field_Kind))._field_Kind), &(_13509_d), (*_134115_item.alloc)._field_Token, _13599_refers);
					(*(*(_134115_item))._field_Value.alloc)._field_Data=_13509_d;
				};
			}
			_iter_next_1d6e094b4:;
			++it;
			goto _iter_begin_1d6e094b4;
		}
		_iter_end_1d6e094b4:;
	};
}



inline void _1d6e15712_checkEnumItemInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c678a87d_eval>* _136643_eval, jule::Ptr<_1c66816a8_Enum>* _136661_e, jule::Ptr<_1c67c49e9_Prim>* _136672_prim, jule::Ptr<_1c6680b3b_EnumItem>* _136690_item, jule::U64* _1366112_n) {
	if (_1c6681026_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		{
			
{
				_case_begin_1d6e17aee:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1dd72008c_NewU64((*(_1366112_n)));
				}
			}
			_match_end_1d6e184b2:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1c6788b56_Data> _13818_d = _1c67a96e3_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1c6789591_IsConst(_13818_d.ptr())))) {
			_1c6709753_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c6671687_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1c6671687_ReferenceStack>>(nullptr);;
		_1c67127c2_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1d6e1c670:;
				{
					(*(_1366112_n))=_1dd7214de_ReadU64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1d6e1d990:;
		};
	};
}

inline void _1d6e2626c_checkEnumItemInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c678a87d_eval>* _136643_eval, jule::Ptr<_1c66816a8_Enum>* _136661_e, jule::Ptr<_1c67c49e9_Prim>* _136672_prim, jule::Ptr<_1c6680b3b_EnumItem>* _136690_item, jule::I64* _1366112_n) {
	if (_1c6681026_AutoExpr((*(_136690_item)).ptr())) {
		(*((*(_136690_item))))._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})});
		{
			
{
				_case_begin_1d6e2903e:;
				{
					(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Constant=static__1dd71ecc3_NewI64((*(_1366112_n)));
				}
			}
			_match_end_1d6e28ec8:;
		};
		(*((*((*((*(_136690_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_136690_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type20);
	} else {
		jule::Ptr<_1c6788b56_Data> _13818_d = _1c67a96e3_evalExpr((*(_136643_eval)), (*((*((*(_136690_item))))._field_Value))._field_Expr);;
		if ((_13818_d == nullptr)) {
			return;;
		};
		if ((!(_1c6789591_IsConst(_13818_d.ptr())))) {
			_1c6709753_pushErr(_self_.ptr(), (*((*(*((*(_136690_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c6671687_ReferenceStack> _13888_refers = static_cast<jule::Ptr<_1c6671687_ReferenceStack>>(nullptr);;
		_1c67127c2_checkAssignType(_self_, false, &((*((*((*(_136661_e))))._field_Kind))._field_Kind), &(_13818_d), (*((*(_136690_item))))._field_Token, _13888_refers);
		(*(*((*(_136690_item))))._field_Value.alloc)._field_Data=_13818_d;
		{
			
{
				_case_begin_1d6e2e6b5:;
				{
					(*(_1366112_n))=_1dd721258_ReadI64((*((*(*((*(_136690_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1d6e2e63d:;
		};
	};
}



inline void _1d6e11895_checkEnumItemsInt1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c49e9_Prim>* _140241_prim, jule::Ptr<_1c66816a8_Enum>* _140259_e) {
	jule::U64 _14037_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1d6e13578:;
			{
				_14037_max=_1dd71a098_MaxU(_1c67c4d6d_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1d6e136dd:;
	};
	jule::Ptr<_1c678a87d_eval> _14137_eval = _1c67121a6_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
	jule::U64 _14147_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c6680b3b_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1d6e15712_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1d6e12da2:;
				{
					_14147_n=_1dd7222ae_AsU64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1d6e1e265:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d6e1a1ea:;
		if (it != expr_end) {
			jule::Ptr<_1c6680b3b_EnumItem> _142715_item = *it;
			{
				if (((_1c6681026_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LLU)) && ((jule::U64)(_14037_max - _14147_n) <= 0LLU))) {
					_1c6709753_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1d6e1a1ea;
				};
				(_14147_n)++;
				_1d6e15712_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1d6e1a1ea:;
			++it;
			goto _iter_begin_1d6e1a1ea;
		}
		_iter_end_1d6e1a1ea:;
	};
}

inline void _1d6e11b81_checkEnumItemsInt1(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c67c49e9_Prim>* _140241_prim, jule::Ptr<_1c66816a8_Enum>* _140259_e) {
	jule::I64 _14037_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1d6e24127:;
			{
				_14037_max=_1dd719cce_MaxI(_1c67c4d6d_Str((*(_140241_prim)).ptr()));
			}
		}
		_match_end_1d6e240b1:;
	};
	jule::Ptr<_1c678a87d_eval> _14137_eval = _1c67121a6_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
	jule::I64 _14147_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c6680b3b_EnumItem> _14157_first = (*((*(_140259_e))))._field_Items[0LL];;
	_1d6e2626c_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_14157_first), &(_14147_n));
	if (((*((*(_14157_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1d6e26b30:;
				{
					_14147_n=_1dd722028_AsI64((*(*((*(_14157_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1d6e2bb68:;
		};
	};
	{
		auto expr = (*((*(_140259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d6e313a9:;
		if (it != expr_end) {
			jule::Ptr<_1c6680b3b_EnumItem> _142715_item = *it;
			{
				if (((_1c6681026_AutoExpr(_142715_item.ptr()) && (_14147_n > 0LL)) && ((_14037_max - _14147_n) <= 0LL))) {
					_1c6709753_pushErr(_self_, (*_142715_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1d6e313a9;
				};
				(_14147_n)++;
				_1d6e2626c_checkEnumItemInt(_self_, &(_14137_eval), _140259_e, _140241_prim, &(_142715_item), &(_14147_n));
			}
			_iter_next_1d6e313a9:;
			++it;
			goto _iter_begin_1d6e313a9;
		}
		_iter_end_1d6e313a9:;
	};
}



inline void _1c6719015_checkEnumItemsInt(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _143739_e) {
	jule::Ptr<_1c67c49e9_Prim> _14383_prim = _1c67be087_Prim((*((*((*(_143739_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1dd71d695_IsSigInt((*(_14383_prim))._field_Kind)) {
			_case_begin_1d6e21069:;
			{
				_1d6e11b81_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		else {
			_case_begin_1d6e110e2:;
			{
				_1d6e11895_checkEnumItemsInt1(_self_, &(_14383_prim), _143739_e);
			}
		}
		_match_end_1d6e1106a:;
	};
}



inline void _1c67192bd_checkEnumDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66816a8_Enum>* _144735_e) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_144735_e))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c670a468_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_144735_e))), &((*((*(_144735_e))))._field_Ident), false)) {
		_1c6709753_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_144735_e))))._field_Items.len() == 0LL)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_144735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1d6e36733_checkEnumItemsDup(_self_, (*((*(_144735_e))))._field_Items);
	if (((*((*(_144735_e))))._field_Kind != nullptr)) {
		if ((!(_1c67103c4_checkType(_self_, &((*((*(_144735_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_144735_e))))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
	};
	jule::Ptr<_1c67c49e9_Prim> _14717_t = _1c67be087_Prim((*((*((*(_144735_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14717_t == nullptr)) {
		_1c6709753_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c67c7eb4_IsStr(_14717_t.ptr())) {
			_case_begin_1d6e3e065:;
			{
				_1c6718366_checkEnumItemsStr(_self_, _144735_e);
			}
		}
		else if (_1dd71dc6c_IsInt(_1c67c4d6d_Str(_14717_t.ptr()))) {
			_case_begin_1d6e3dc46:;
			{
				_1c6719015_checkEnumItemsInt(_self_, _144735_e);
			}
		}
		else {
			_case_begin_1d6e3dbd0:;
			{
				_1c6709753_pushErr(_self_, (*((*(_144735_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d6e3d1a7:;
	};
}



inline void _1c6719576_checkTypeEnumDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6682db3_TypeEnum>* _148839_e) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_148839_e))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c670a468_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_148839_e))), &((*((*(_148839_e))))._field_Ident), false)) {
		_1c6709753_pushErr(_self_, (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_148839_e))))._field_Items.len() == 0LL)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_148839_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_148839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1d6e448a6_checkEnumItemsDup(_self_, (*((*(_148839_e))))._field_Items);
	{
		auto expr = &((*((*(_148839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e45302:;
		if (it != expr_end) {
			jule::Ptr<_1c66827db_TypeEnumItem> _150215_item = *it;
			{
				if (((*(_150215_item))._field_Kind == nullptr)) {
					_1c6709753_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1d6e45302;
				};
				jule::Bool _15074_ok = _1c67103c4_checkType(_self_, &((*_150215_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
				if ((!(_15074_ok))) {
					goto _iter_next_1d6e45302;
				};
				jule::Ptr<_1c67c49e9_Prim> _15114_p = _1c67be087_Prim((*((*_150215_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_15114_p != nullptr) && _1c67c824a_IsAny(_15114_p))) {
					_1c6709753_pushErr(_self_, (*_150215_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1d6e45302:;
			++it;
			goto _iter_begin_1d6e45302;
		}
		_iter_end_1d6e45302:;
	};
	if (((*((*(_148839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1c66827db_TypeEnumItem> _15178_item = (*((*(_148839_e))))._field_Items[0LL];;
		_1c67bb8d1_TypeKind _15184_tk = _1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_148839_e)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)};;
		if ((((*((*(_15178_item))._field_Kind))._field_Kind != nullptr) && _1c67bc11d_Equal((*((*(_15178_item))._field_Kind))._field_Kind, ((jule::Ptr<_1c67bb8d1_TypeKind>)((&(_15184_tk))))))) {
			_1c6709753_pushErr(_self_, (*_15178_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c6683237_Str((*(_148839_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1c671980c_checkEnumDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e51451:;
		if (it != expr_end) {
			jule::Ptr<_1c66816a8_Enum> _152915_e = *it;
			{
				_1c67192bd_checkEnumDecl(_self_, &(_152915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6e51451:;
			++it;
			goto _iter_begin_1d6e51451;
		}
		_iter_end_1d6e51451:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c6719a93_checkTypeEnumDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e57985:;
		if (it != expr_end) {
			jule::Ptr<_1c6682db3_TypeEnum> _154115_e = *it;
			{
				_1c6719576_checkTypeEnumDecl(_self_, &(_154115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6e57985:;
			++it;
			goto _iter_begin_1d6e57985;
		}
		_iter_end_1d6e57985:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c6719dd4_checkDeclGenerics(_1c670684e_sema* _self_, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _155134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _155134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e5803a:;
		if (it != expr_end) {
			jule::I64 _15537_i = it - expr->begin();
			jule::Ptr<_1c6641b0d_GenericDecl> *_155310_g = it;
			{
				if (_1c6621c0e_IsIgnoreIdent((*((*(_155310_g))))._field_Ident)) {
					_1c6709753_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1d6e5803a;
				};
				_julec_label_1d6e59ea4:;
				{
					auto expr = _155134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e5a999:;
					if (it != expr_end) {
						jule::I64 _15628_j = it - expr->begin();
						jule::Ptr<_1c6641b0d_GenericDecl> *_156211_ct = it;
						{
							{
								
								if ((_15628_j >= _15537_i)) {
									_case_begin_1d6e5b56b:;
									{
										goto _iter_end_1d6e5a999;
									}
								}
								else if (((*(*(_155310_g)).alloc)._field_Ident == (*((*(_156211_ct))))._field_Ident)) {
									_case_begin_1d6e5b604:;
									{
										_1c6709753_pushErr(_self_, (*(*(_155310_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_155310_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1d6e5a999;
									}
								}
								_match_end_1d6e5b46c:;
							};
						}
						_iter_next_1d6e5a999:;
						++it;
						_15628_j++;
						goto _iter_begin_1d6e5a999;
					}
					_iter_end_1d6e5a999:;
				};
			}
			_iter_next_1d6e5803a:;
			++it;
			_15537_i++;
			goto _iter_begin_1d6e5803a;
		}
		_iter_end_1d6e5803a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671a225_checkFnDeclParamsDup(_1c670684e_sema* _self_, jule::Ptr<_1c666a51b_Fn>* _157837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1d6e5b37e:;
	{
		auto expr = &((*((*(_157837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e5c36e:;
		if (it != expr_end) {
			jule::I64 _15817_i = it - expr->begin();
			jule::Ptr<_1c6668a47_Param> *_158110_p = it;
			{
				{
					auto expr = &((*((*(_157837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e5e31b:;
					if (it != expr_end) {
						jule::Ptr<_1c6641b0d_GenericDecl> *_158311_g = it;
						{
							if (((*((*(_158110_p))))._field_Ident == (*((*(_158311_g))))._field_Ident)) {
								__jule_func_result=false;
								_1c6709753_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1d6e5c36e;
							};
						}
						_iter_next_1d6e5e31b:;
						++it;
						goto _iter_begin_1d6e5e31b;
					}
					_iter_end_1d6e5e31b:;
				};
				_julec_label_1d6e6132e:;
				{
					auto expr = &((*((*(_157837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e5e7e4:;
					if (it != expr_end) {
						jule::I64 _15938_j = it - expr->begin();
						jule::Ptr<_1c6668a47_Param> *_159311_jp = it;
						{
							{
								
								if ((_15938_j >= _15817_i)) {
									_case_begin_1d6e61de0:;
									{
										goto _iter_end_1d6e5e7e4;
									}
								}
								else if (_1c6621c0e_IsIgnoreIdent((*(*(_158110_p)).alloc)._field_Ident) || _1c6621c0e_IsIgnoreIdent((*((*(_159311_jp))))._field_Ident) || _1c6621ec8_IsAnonIdent((*(*(_158110_p)).alloc)._field_Ident) || _1c6621ec8_IsAnonIdent((*(*(_159311_jp)).alloc)._field_Ident)) {
									_case_begin_1d6e61e78:;
									{
										goto _iter_end_1d6e5e7e4;
									}
								}
								else if (((*(*(_158110_p)).alloc)._field_Ident == (*((*(_159311_jp))))._field_Ident)) {
									_case_begin_1d6e61ede:;
									{
										__jule_func_result=false;
										_1c6709753_pushErr(_self_, (*(*(_158110_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_158110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1d6e5c36e;
									}
								}
								_match_end_1d6e61c9c:;
							};
						}
						_iter_next_1d6e5e7e4:;
						++it;
						_15938_j++;
						goto _iter_begin_1d6e5e7e4;
					}
					_iter_end_1d6e5e7e4:;
				};
			}
			_iter_next_1d6e5c36e:;
			++it;
			_15817_i++;
			goto _iter_begin_1d6e5c36e;
		}
		_iter_end_1d6e5c36e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671a566_checkFnDeclResultDup(_1c670684e_sema* _self_, jule::Ptr<_1c666a51b_Fn>* _161537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c666a9c2_IsVoid((*(_161537_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_161537_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e65465:;
		if (it != expr_end) {
			jule::I64 _16227_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> *_162210_v = it;
			{
				if ((_1c6621c0e_IsIgnoreIdent((*((*(_162210_v))))._field_Kind) || _1c6621ec8_IsAnonIdent((*(*(_162210_v)).alloc)._field_Kind))) {
					goto _iter_next_1d6e65465;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e66a4e:;
					if (it != expr_end) {
						jule::Ptr<_1c6641b0d_GenericDecl> *_162711_g = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_162711_g))))._field_Ident)) {
								goto _julec_label_1d6e680e4;
							};
						}
						_iter_next_1d6e66a4e:;
						++it;
						goto _iter_begin_1d6e66a4e;
					}
					_iter_end_1d6e66a4e:;
				};
				{
					auto expr = &((*((*(_161537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e66e4a:;
					if (it != expr_end) {
						jule::Ptr<_1c6668a47_Param> *_163311_p = it;
						{
							if (((*(*(_162210_v)).alloc)._field_Kind == (*((*(_163311_p))))._field_Ident)) {
								goto _julec_label_1d6e680e4;
							};
						}
						_iter_next_1d6e66e4a:;
						++it;
						goto _iter_begin_1d6e66e4a;
					}
					_iter_end_1d6e66e4a:;
				};
				_julec_label_1d6e685bc:;
				{
					auto expr = &((*((*((*(_161537_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e689b8:;
					if (it != expr_end) {
						jule::I64 _16418_j = it - expr->begin();
						jule::Ptr<_1c661e327_Token> *_164111_jv = it;
						{
							{
								
								if ((_16418_j >= _16227_i)) {
									_case_begin_1d6e69557:;
									{
										goto _iter_end_1d6e689b8;
									}
								}
								else if (((*((*(_164111_jv))))._field_Kind == (*(*(_162210_v)).alloc)._field_Kind)) {
									_case_begin_1d6e695e0:;
									{
										goto _julec_label_1d6e680e4;
									}
								}
								_match_end_1d6e69447:;
							};
						}
						_iter_next_1d6e689b8:;
						++it;
						_16418_j++;
						goto _iter_begin_1d6e689b8;
					}
					_iter_end_1d6e689b8:;
				};
				goto _iter_next_1d6e65465;
				_julec_label_1d6e680e4:;
				_1c6709753_pushErr(_self_, (*(_162210_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_162210_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1d6e65465:;
			++it;
			_16227_i++;
			goto _iter_begin_1d6e65465;
		}
		_iter_end_1d6e65465:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671a8a7_checkFnVariadicParam(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _166042_f) {
	if (((*((*(_166042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1c6668a47_Param> _16647_param = (*((*(_166042_f))))._field_Params[((*((*(_166042_f))))._field_Params.len() - 1LL)];;
	if (((*(_16647_param))._field_Variadic && (*_16647_param.alloc)._field_Reference)) {
		_1c6709753_pushErr(_self_.ptr(), (*_16647_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1c671ab60_checkFnDeclPrototype(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _167342_f) {
	if (((*((*(_167342_f))))._field_Exceptional && (*((*(_167342_f))))._field_Binded)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_167342_f))))._field_Exceptional) {
		if (_1c666aede_IsEntryPoint((*(_167342_f)).ptr())) {
			_1c6709753_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1c666b275_IsInit((*(_167342_f)).ptr())) {
			_1c6709753_pushErr(_self_, (*((*(_167342_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c6719dd4_checkDeclGenerics(_self_, &((*((*(_167342_f))))._field_Generics))))) {
			_case_begin_1d6e71394:;
		}
		else if ((!(_1c671a225_checkFnDeclParamsDup(_self_, _167342_f)))) {
			_case_begin_1d6e7140a:;
		}
		else if ((!(_1c671a566_checkFnDeclResultDup(_self_, _167342_f)))) {
			_case_begin_1d6e71471:;
		}
		else if ((!(_1c671a8a7_checkFnVariadicParam(_self_, _167342_f)))) {
			_case_begin_1d6e714d7:;
		}
		_match_end_1d6e6e639:;
	};
}



inline jule::Bool _1c671b116_catchTraitInheritCycle(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait> _169539_t1, jule::Ptr<_1c667de9c_Trait> _169555_t2, _20759e353_StrBuilder* _169572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_169555_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e73a7d:;
		if (it != expr_end) {
			jule::Ptr<_1c67c40e2_TypeSymbol> _169715_i = *it;
			{
				if (((*(_169715_i))._field_Kind == nullptr)) {
					goto _iter_next_1d6e73a7d;
				};
				jule::Ptr<_1c667de9c_Trait> _17018_t3 = _1c67c0891_Trait((*_169715_i.alloc)._field_Kind.ptr());;
				if ((_169539_t1 == _17018_t3)) {
					_1c6720d96_pushCycleError(_self_.ptr(), &((*(_169555_t2))._field_Ident), &((*(_17018_t3))._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c671b116_catchTraitInheritCycle(_self_, _169539_t1, _17018_t3, _169572_message)))) {
					_1c6720d96_pushCycleError(_self_, &((*_169555_t2.alloc)._field_Ident), &((*_17018_t3.alloc)._field_Ident), _169572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6e73a7d:;
			++it;
			goto _iter_begin_1d6e73a7d;
		}
		_iter_end_1d6e73a7d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671b457__checkTraitDeclInherits(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _171445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_171445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e77345:;
		if (it != expr_end) {
			jule::I64 _17168_i = it - expr->begin();
			jule::Ptr<_1c67c40e2_TypeSymbol> _171615_it = *it;
			{
				if ((!(_1c67103c4_checkType(_self_, &(_171615_it), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1d6e77345;
				};
				jule::Ptr<_1c667de9c_Trait> _17218_t2 = _1c67c0891_Trait((*(_171615_it))._field_Kind.ptr());;
				if ((_17218_t2 == nullptr)) {
					_1c6709753_pushErr(_self_, (*((*_171615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_171615_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1d6e77345;
				};
				{
					auto expr = &((*((*(_171445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e791c1:;
					if (it != expr_end) {
						jule::I64 _17278_j = it - expr->begin();
						jule::Ptr<_1c67c40e2_TypeSymbol> _172711_it2 = *it;
						{
							if ((_17278_j >= _17168_i)) {
								goto _iter_end_1d6e791c1;
							};
							if ((((*(_172711_it2))._field_Kind != nullptr) && _1c67bc11d_Equal((*(_171615_it))._field_Kind, (*_172711_it2.alloc)._field_Kind))) {
								_1c6709753_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_17218_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1d6e791c1;
							};
						}
						_iter_next_1d6e791c1:;
						++it;
						_17278_j++;
						goto _iter_begin_1d6e791c1;
					}
					_iter_end_1d6e791c1:;
				};
				if (((*(_171445_t)) == _17218_t2)) {
					_1c6709753_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_171445_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_20759e353_StrBuilder _17419_message = static__2075a7c41_New(64LL);;
					__jule_func_result=(__jule_func_result && _1c671b116_catchTraitInheritCycle(_self_, (*(_171445_t)), _17218_t2, &(_17419_message)));
					if ((_2075a8dc9_Len(&_17419_message) > 0LL)) {
						jule::Str _174410_errMsg = _2075a8945_Str(&_17419_message);;
						_2075a8b43_Clear(&_17419_message);
						_1c6720d96_pushCycleError(_self_, &((*((*(_171445_t))))._field_Ident), &((*(_17218_t2))._field_Ident), &(_17419_message));
						_174410_errMsg+=_2075a8945_Str(&_17419_message);
						_1c6709753_pushErr(_self_, (*(*(_171615_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_174410_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1d6e77345:;
			++it;
			_17168_i++;
			goto _iter_begin_1d6e77345;
		}
		_iter_end_1d6e77345:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c671b710_checkTraitDeclInherits(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _175544_t) {
	{
		auto expr = &((*((*(_175544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e77b4d:;
		if (it != expr_end) {
			jule::I64 _17568_i = it - expr->begin();
			jule::Ptr<_1c67c40e2_TypeSymbol> _175615_it = *it;
			{
				jule::Ptr<_1c667de9c_Trait> _17578_t1 = _1c67c0891_Trait((*(_175615_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_175544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e83d46:;
					if (it != expr_end) {
						jule::I64 _17589_j = it - expr->begin();
						jule::Ptr<_1c67c40e2_TypeSymbol> _175816_it2 = *it;
						{
							if ((_17589_j == _17568_i)) {
								goto _iter_next_1d6e83d46;
							};
							jule::Ptr<_1c667de9c_Trait> _17629_t2 = _1c67c0891_Trait((*(_175816_it2))._field_Kind);;
							{
								auto expr = &((*(_17578_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d6e855d9:;
								if (it != expr_end) {
									jule::Ptr<_1c666a51b_Fn> _176317_t1m = *it;
									{
										jule::Ptr<_1c666a51b_Fn> _176410_t2m = _1c667eb7e_FindMethod(_17629_t2.ptr(), (*(_176317_t1m))._field_Ident);;
										if ((_176410_t2m == nullptr)) {
											goto _iter_next_1d6e855d9;
										};
										jule::Ptr<_1c666d4ec_FnIns> _17686_t1f = _1c67147e6_getTraitCheckFnKind(_self_, &(_176317_t1m));;
										jule::Ptr<_1c666d4ec_FnIns> _17696_t2f = _1c67147e6_getTraitCheckFnKind(_self_, &(_176410_t2m));;
										if ((!(_1c666e498_equalTrait(_17686_t1f, &(_17696_t2f))))) {
											_1c6709753_pushErr(_self_, (*((*_175615_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_175544_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17629_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c66703cd_GetKindStr(_17686_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1c66703cd_GetKindStr(_17696_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1d6e855d9:;
									++it;
									goto _iter_begin_1d6e855d9;
								}
								_iter_end_1d6e855d9:;
							};
						}
						_iter_next_1d6e83d46:;
						++it;
						_17589_j++;
						goto _iter_begin_1d6e83d46;
					}
					_iter_end_1d6e83d46:;
				};
			}
			_iter_next_1d6e77b4d:;
			++it;
			_17568_i++;
			goto _iter_begin_1d6e77b4d;
		}
		_iter_end_1d6e77b4d:;
	};
}



inline void _1c671b9b8_checkTraitDeclMethod(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _178042_f) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_178042_f))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c6621ec8_IsAnonIdent((*((*(_178042_f))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_178042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_178042_f))))._field_sema=_self_;
	_1c671ab60_checkFnDeclPrototype(_self_, _178042_f);
	jule::Ptr<_1c666d4ec_FnIns> _17887_ins = _1c666bcae_instance((*(_178042_f)));;
	_1c6716144_reloadFnInsTypes(_self_, _17887_ins);
	(*(_17887_ins))._field_reloaded=true;
	_1c666c0bc_appendInstance((*(_178042_f)).ptr(), &(_17887_ins));
}



inline void _1c671bc71_checkTraitDeclMethods(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _179443_t) {
	{
		auto expr = &((*((*(_179443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e8cd83:;
		if (it != expr_end) {
			jule::I64 _17958_i = it - expr->begin();
			jule::Ptr<_1c666a51b_Fn> _179515_f = *it;
			{
				_1c671b9b8_checkTraitDeclMethod(_self_, &(_179515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c6680311_findMethodInherit((*(_179443_t)).ptr(), &((*(_179515_f))._field_Ident)) != nullptr)) {
					_1c6709753_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1d6e8cd83;
				};
				_julec_label_1d6e90c10:;
				{
					auto expr = &((*((*(_179443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6e9113e:;
					if (it != expr_end) {
						jule::I64 _18118_j = it - expr->begin();
						jule::Ptr<_1c666a51b_Fn> _181111_jf = *it;
						{
							{
								
								if ((_18118_j >= _17958_i)) {
									_case_begin_1d6e91bcd:;
									{
										goto _iter_end_1d6e9113e;
									}
								}
								else if (((*_179515_f.alloc)._field_Ident == (*(_181111_jf))._field_Ident)) {
									_case_begin_1d6e91c66:;
									{
										_1c6709753_pushErr(_self_, (*_179515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_179515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1d6e9113e;
									}
								}
								_match_end_1d6e91abd:;
							};
						}
						_iter_next_1d6e9113e:;
						++it;
						_18118_j++;
						goto _iter_begin_1d6e9113e;
					}
					_iter_end_1d6e9113e:;
				};
			}
			_iter_next_1d6e8cd83:;
			++it;
			_17958_i++;
			goto _iter_begin_1d6e8cd83;
		}
		_iter_end_1d6e8cd83:;
	};
}



inline void _1c671c029_checkTraitDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c667de9c_Trait>* _183036_t) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_183036_t))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c670a468_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_183036_t))), &((*((*(_183036_t))))._field_Ident), false)) {
		_1c6709753_pushErr(_self_, (*((*(_183036_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_183036_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1c671b710_checkTraitDeclInherits(_self_, _183036_t);
	_1c671bc71_checkTraitDeclMethods(_self_, _183036_t);
}



inline jule::Bool _1c671c2b0_checkTraitDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e96e8b:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _184415_t = *it;
			{
				_1c671c029_checkTraitDecl(_self_, &(_184415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6e96e8b:;
			++it;
			goto _iter_begin_1d6e96e8b;
		}
		_iter_end_1d6e96e8b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c671c6ab_checkTraitImplMethods(_1c670684e_sema* _self_, jule::Ptr<_1c667de9c_Trait>* _185442_base, jule::Ptr<_1c66adce0_Impl>* _185457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_185457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e98971:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> *_185610_f = it;
			{
				if ((_1c667eb7e_FindMethod((*(_185442_base)).ptr(), (*((*(_185610_f))))._field_Ident) == nullptr)) {
					_1c6709753_pushErr(_self_, (*(*(_185610_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185442_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_185610_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1d6e98971:;
			++it;
			goto _iter_begin_1d6e98971;
		}
		_iter_end_1d6e98971:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671caa7_implToStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _186534_dest, jule::Ptr<_1c66adce0_Impl>* _186554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_186554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e9b2e2:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _186915_f = *it;
			{
				if (((_1c66564a2_FindMethod((*(_186534_dest)).ptr(), (*(_186915_f))._field_Ident, (*_186915_f.alloc)._field_Statically) != nullptr) || (_1c6656b34_FindField((*(_186534_dest)).ptr(), (*_186915_f.alloc)._field_Ident) != nullptr))) {
					_1c6709753_pushErr(_self_.ptr(), (*_186915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_186915_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1d6e9b2e2;
				};
				if ((((*((*(_186534_dest))))._field_Generics.len() > 0LL) && ((*_186915_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_186915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d6e9e37d:;
						if (it != expr_end) {
							jule::Ptr<_1c6641b0d_GenericDecl> _187712_fg = *it;
							{
								{
									auto expr = &((*((*(_186534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1d6e9ecda:;
									if (it != expr_end) {
										jule::Ptr<_1c6641b0d_GenericDecl> _187813_dg = *it;
										{
											if (((*(_187712_fg))._field_Ident == (*(_187813_dg))._field_Ident)) {
												_1c6709753_pushErr(_self_, (*_187712_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1d6e9ecda:;
										++it;
										goto _iter_begin_1d6e9ecda;
									}
									_iter_end_1d6e9ecda:;
								};
							}
							_iter_next_1d6e9e37d:;
							++it;
							goto _iter_begin_1d6e9e37d;
						}
						_iter_end_1d6e9e37d:;
					};
				};
				_1c670a7cb_checkDirectives(_self_, &((*_186915_f.alloc)._field_Directives), jule::Any(_186915_f, &__jule_any_type26));
				(*_186915_f.alloc)._field_sema=_self_;
				(*_186915_f.alloc)._field_Owner=(*(_186534_dest));
				{ jule::Slice<jule::Ptr<_1c666a51b_Fn>> &__jule_push_dest = (*((*(_186534_dest))))._field_Methods; __jule_push_dest.push(_186915_f); };
			}
			_iter_next_1d6e9b2e2:;
			++it;
			goto _iter_begin_1d6e9b2e2;
		}
		_iter_end_1d6e9b2e2:;
	};
	{
		auto expr = &((*((*(_186554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6e9b6cc:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _189415_v = *it;
			{
				;
				if (((_1c66564a2_FindMethod((*(_186534_dest)).ptr(), (*(_189415_v))._field_Ident, true) != nullptr) || (_1c66567e3_FindStatic((*(_186534_dest)).ptr(), (*_189415_v.alloc)._field_Ident) != nullptr))) {
					_1c6709753_pushErr(_self_, (*_189415_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_189415_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1d6e9b6cc;
				};
				{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*((*(_186534_dest))))._field_Statics; __jule_push_dest.push(_189415_v); };
			}
			_iter_next_1d6e9b6cc:;
			++it;
			goto _iter_begin_1d6e9b6cc;
		}
		_iter_end_1d6e9b6cc:;
	};
	return __jule_func_result;;
}



inline void _1c671cd60_implTrait(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _190731_decl) {
	jule::Ptr<_1c67bb8d1_TypeKind> _19087_base_t = _1c67114b3_selectType(_self_, &((*((*(_190731_decl))))._field_Base));;
	if ((_19087_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c667de9c_Trait> _19127_base = _1c67c0891_Trait(_19087_base_t.ptr());;
	if ((_19127_base == nullptr)) {
		_1c6709753_pushErr(_self_, (*((*((*(_190731_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str(_19087_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _19197_destT = _1c67114b3_selectType(_self_, &((*((*(_190731_decl))))._field_Dest));;
	if ((_19197_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _19237_destS = _1c67c060a_Struct(_19197_destT.ptr());;
	if ((_19237_destS == nullptr)) {
		_1c6709753_pushErr(_self_, (*((*((*(_190731_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str(_19197_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6655803_Struct> _19307_dest = (*(_19237_destS))._field_Decl;;
	if ((_1c6625295_Dir((*((*(_19307_dest))._field_Token))._field_File.ptr()) != _1c6625295_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c6709753_pushErr(_self_, (*(*((*(_190731_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1c6729047_pushImplemented(_19127_base, &(_19307_dest));
	_1c6729333_pushImplements(&(_19307_dest), _19127_base);
	if (((*((*(_190731_decl))))._field_Statics.len() > 0LL)) {
		_1c6709753_pushErr(_self_, (*((*((*(_190731_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c671c6ab_checkTraitImplMethods(_self_, &(_19127_base), _190731_decl)))) {
			_case_begin_1d6eaeed7:;
		}
		else if ((!(_1c671caa7_implToStruct(_self_, &(_19307_dest), _190731_decl)))) {
			_case_begin_1d6eb004d:;
		}
		_match_end_1d6eae03b:;
	};
}



inline void _1c671d118_implStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _195032_decl) {
	jule::Ptr<_1c67bb8d1_TypeKind> _19517_destT = _1c67114b3_selectType(_self_, &((*((*(_195032_decl))))._field_Dest));;
	if ((_19517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _19557_destS = _1c67c060a_Struct(_19517_destT.ptr());;
	if ((_19557_destS == nullptr)) {
		_1c6709753_pushErr(_self_, (*((*((*(_195032_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str(_19517_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6655803_Struct> _19627_dest = (*(_19557_destS))._field_Decl;;
	if ((_1c6625295_Dir((*((*(_19627_dest))._field_Token))._field_File.ptr()) != _1c6625295_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c6709753_pushErr(_self_, (*(*((*(_195032_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c671caa7_implToStruct(_self_, &(_19627_dest), _195032_decl)))) {
			_case_begin_1d6eb5d56:;
		}
		_match_end_1d6eb441a:;
	};
}



inline void _1c671d3c1_implImpl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c66adce0_Impl>* _197430_decl) {
	{
		
		if (_1c66ae1db_IsTraitImpl((*(_197430_decl)).ptr())) {
			_case_begin_1d6eb68e5:;
			{
				_1c671cd60_implTrait(_self_, _197430_decl);
			}
		}
		else if (_1c66ae472_IsStructImpl((*(_197430_decl)).ptr())) {
			_case_begin_1d6eb698e:;
			{
				_1c671d118_implStruct(_self_, _197430_decl);
			}
		}
		_match_end_1d6eb67c4:;
	};
}



inline void _1c671d734_checkVarDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _198534_decl, jule::Trait _198550_l) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_198534_decl))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1c672b456_IsTypeInferred((*(_198534_decl)).ptr())) {
		if ((!(_1c672b1c0_IsInitialized((*(_198534_decl)).ptr())))) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1c6671687_ReferenceStack> _19958_refers = static_cast<jule::Ptr<_1c6671687_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _198550_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3)) {
				_case_begin_1d6ebaab4:;
				{
					_19958_refers=(*((*(_198534_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
				_case_begin_1d6ebb08c:;
				{
					_19958_refers=_1c66be251_getOwnerRefers(_198550_l.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));
				}
			}
			else {
				_case_begin_1d6ebaba2:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:2002:5"));;
				}
			}
			_match_end_1d6ebab3b:;
		};
		(*((*((*(_198534_decl))))._field_Kind))._field_Kind=_1c671087a_checkTypeRefers(_self_, &((*(*((*(_198534_decl))))._field_Kind.alloc)._field_Decl), _198550_l, _19958_refers);
	};
	if ((*((*(_198534_decl))))._field_Reference) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1c672b1c0_IsInitialized((*(_198534_decl)).ptr())))) {
		if ((*((*(_198534_decl))))._field_Constant) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Statically) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_198534_decl))))._field_Reference) {
			_1c6709753_pushErr(_self_, (*((*(_198534_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c671d9dc_checkGlobalVarDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _203140_decl) {
	if (_1c670a468_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_203140_decl))), &((*((*(_203140_decl))))._field_Ident), (*((*(_203140_decl))))._field_Binded)) {
		_1c6709753_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203140_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_203140_decl))))._field_Binded && (*((*(_203140_decl))))._field_Constant)) {
		_1c6709753_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_203140_decl))))._field_Binded)) && (!((*((*(_203140_decl))))._field_Constant))) && (!((*((*(_203140_decl))))._field_Statically)))) {
		_1c6709753_pushErr(_self_, (*((*(_203140_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1c670a7cb_checkDirectives(_self_, &((*((*(_203140_decl))))._field_Directives), jule::Any((*(_203140_decl)), &__jule_any_type8));
	_1c671d734_checkVarDecl(_self_, _203140_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
}



inline jule::Bool _1c671dc73_checkGlobalDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ec7d9b:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _204915_decl = *it;
			{
				_1c671d9dc_checkGlobalVarDecl(_self_, &(_204915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6ec7d9b:;
			++it;
			goto _iter_begin_1d6ec7d9b;
		}
		_iter_end_1d6ec7d9b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c671e16e_checkStructTraitImpl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _205942_strct, jule::Ptr<_1c667de9c_Trait>* _205963_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_205963_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ec9782:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _206015_tf = *it;
			{
				jule::Bool _20618_exist = false;;
				jule::Ptr<_1c666a51b_Fn> _20628_sf = _1c66564a2_FindMethod((*(_205942_strct)).ptr(), (*(_206015_tf))._field_Ident, (*_206015_tf.alloc)._field_Statically);;
				jule::Ptr<_1c666d4ec_FnIns> _20634_tfK = _1c67147e6_getTraitCheckFnKind(_self_, &(_206015_tf));;
				if ((_20628_sf != nullptr)) {
					jule::Ptr<_1c666d4ec_FnIns> _20659_sfK = _1c67147e6_getTraitCheckFnKind(_self_, &(_20628_sf));;
					if ((_20659_sfK != nullptr)) {
						_20618_exist=_1c666e498_equalTrait(_20634_tfK, &(_20659_sfK));
					};
				};
				if (_20618_exist) {
					jule::Ptr<_1c6633d20_Directive> _20715_d = _1c67b3158_findDirective(&((*_20628_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_20715_d != nullptr)) {
						_1c6709753_pushErr(_self_, (*_20715_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c6709753_pushErr(_self_, (*((*(_205942_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_205963_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c66703cd_GetKindStr(_20634_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1d6ec9782:;
			++it;
			goto _iter_begin_1d6ec9782;
		}
		_iter_end_1d6ec9782:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c671e4b0_checkStructImpls(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _208538_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_208538_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ed0b95:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _208715_trt = *it;
			{
				__jule_func_result=(_1c671e16e_checkStructTraitImpl(_self_, _208538_s, &(_208715_trt)) && __jule_func_result);
			}
			_iter_next_1d6ed0b95:;
			++it;
			goto _iter_begin_1d6ed0b95;
		}
		_iter_end_1d6ed0b95:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c671e801_checkStructFields(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _209339_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_209339_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ed213b:;
		if (it != expr_end) {
			jule::Ptr<_1c66528cc_Field> _209515_f = *it;
			{
				(*(_209515_f))._field_Owner=(*(_209339_st));
				{
					auto expr = &((*((*(_209339_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6ed2d62:;
					if (it != expr_end) {
						jule::Ptr<_1c66528cc_Field> _209711_cf = *it;
						{
							if ((_209515_f == _209711_cf)) {
								goto _iter_end_1d6ed2d62;
							} else if (((*_209515_f.alloc)._field_Ident == (*(_209711_cf))._field_Ident)) {
								_1c6709753_pushErr(_self_.ptr(), (*_209515_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1d6ed2d62:;
						++it;
						goto _iter_begin_1d6ed2d62;
					}
					_iter_end_1d6ed2d62:;
				};
			}
			_iter_next_1d6ed213b:;
			++it;
			goto _iter_begin_1d6ed213b;
		}
		_iter_end_1d6ed213b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c671eaa9_checkStructDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _211037_s) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_211037_s))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c670a468_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_211037_s))), &((*((*(_211037_s))))._field_Ident), (*((*(_211037_s))))._field_Binded)) {
		_1c6709753_pushErr(_self_, (*((*(_211037_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_211037_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1c670a7cb_checkDirectives(_self_, &((*((*(_211037_s))))._field_Directives), jule::Any((*(_211037_s)), &__jule_any_type23));
	{
		
		if ((!(_1c6719dd4_checkDeclGenerics(_self_, &((*((*(_211037_s))))._field_Generics))))) {
			_case_begin_1d6ed8241:;
		}
		else if ((!(_1c671e801_checkStructFields(_self_, _211037_s)))) {
			_case_begin_1d6ed82a7:;
		}
		else if ((!(_1c671e4b0_checkStructImpls(_self_, _211037_s)))) {
			_case_begin_1d6ed831d:;
		}
		else if ((!(_1c67206e2_checkFuncDeclsBy(_self_, &((*((*(_211037_s))))._field_Methods))))) {
			_case_begin_1d6ed8384:;
		}
		_match_end_1d6ed810e:;
	};
}



inline jule::Bool _1c671ed40_checkStructDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6eda81a:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _213015_s = *it;
			{
				_1c671eaa9_checkStructDecl(_self_, &(_213015_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d6eda81a:;
			++it;
			goto _iter_begin_1d6eda81a;
		}
		_iter_end_1d6eda81a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c67200e8_checkAnonFuncDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _214039_f) {
	(*((*(_214039_f))))._field_sema=_self_;
	_1c671ab60_checkFnDeclPrototype(_self_, _214039_f);
}



inline void _1c67203a1_checkFuncDecl(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _214535_f) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_214535_f))))._field_Ident)) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1c666b50b_IsAnon((*(_214535_f)).ptr())) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1c670a7cb_checkDirectives(_self_, &((*((*(_214535_f))))._field_Directives), jule::Any((*(_214535_f)), &__jule_any_type26));
	_1c67200e8_checkAnonFuncDecl(_self_, _214535_f);
	if ((((*((*(_214535_f))))._field_Owner == nullptr) && _1c670a468_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_214535_f))), &((*((*(_214535_f))))._field_Ident), (*((*(_214535_f))))._field_Binded))) {
		if ((*((*(_214535_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c666a51b_Fn> _21575_init = _1c6707e16_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_21575_init != nullptr)) {
				return;;
			};
		};
		_1c6709753_pushErr(_self_, (*((*(_214535_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_214535_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c67206e2_checkFuncDeclsBy(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _216738_funcs) {
	{
		auto expr = _216738_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ee335b:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _216815_f = *it;
			{
				_1c67203a1_checkFuncDecl(_self_, &(_216815_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1d6ee335b:;
			++it;
			goto _iter_begin_1d6ee335b;
		}
		_iter_end_1d6ee335b:;
	};
	return true;;
}



inline jule::Bool _1c6720978_checkFuncDecls(jule::Ptr<_1c670684e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c67206e2_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1c6720d96_pushCycleError(_1c670684e_sema* _self_, jule::Str* _218327_st1, jule::Str* _218338_st2, _20759e353_StrBuilder* _218353_message) {
	;
	jule::Str _21853_refersTo = _20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_218327_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_218338_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21863_m = _2075a8945_Str(_218353_message);;
	_2075a814d_WriteStr(_218353_message, _208768cd0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2075a814d_WriteStr(_218353_message, _21853_refersTo);
	_2075a8406_WriteByte(_218353_message, '\n');
	_2075a814d_WriteStr(_218353_message, _21863_m);
}



inline void _1c672154a_checkPackageDecls(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6eea143:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _221015_f = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _221015_f);
				if ((!(_1c6717d05_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d6eea143:;
			++it;
			goto _iter_begin_1d6eea143;
		}
		_iter_end_1d6eea143:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6eea5c7:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _221715_f = *it;
			{
				_1c6709335_setCurrentFile(_self_, _221715_f);
				if ((!(_1c671c2b0_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d6eea5c7:;
			++it;
			goto _iter_begin_1d6eea5c7;
		}
		_iter_end_1d6eea5c7:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6eeb5d9:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _222415_f = *it;
			{
				_1c6709335_setCurrentFile(_self_, _222415_f);
				if ((!(_1c671dc73_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1d6eeb5d9:;
			++it;
			goto _iter_begin_1d6eeb5d9;
		}
		_iter_end_1d6eeb5d9:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6eec640:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _223115_f = *it;
			{
				_1c6709335_setCurrentFile(_self_, _223115_f);
				{
					
					if ((!(_1c6720978_checkFuncDecls(_self_)))) {
						_case_begin_1d6eedc90:;
					}
					else if ((!(_1c671ed40_checkStructDecls(_self_)))) {
						_case_begin_1d6eedd39:;
					}
					else {
						_case_begin_1d6eed6da:;
						{
							goto _iter_next_1d6eec640;
						}
					}
					_match_end_1d6eedbe6:;
				};
				return;;
			}
			_iter_next_1d6eec640:;
			++it;
			goto _iter_begin_1d6eec640;
		}
		_iter_end_1d6eec640:;
	};
}



inline void _1c67218ad_checkDataForTypeInference(_1c670684e_sema* _self_, jule::Ptr<_1c6788b56_Data>* _224342_d, jule::Ptr<_1c661e327_Token>* _224353_err_token) {
	{
		
		if (_1c6789074_IsNil((*(_224342_d)).ptr())) {
			_case_begin_1d6eeee39:;
			{
				_1c6709753_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1c678930a_IsVoid((*(_224342_d)).ptr())) {
			_case_begin_1d6eeeed3:;
			{
				_1c6709753_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_224342_d))))._field_Kind))._field_Variadic) {
			_case_begin_1d7000049:;
			{
				_1c6709753_pushErr(_self_, (*(_224353_err_token)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d6eeed07:;
	};
}



inline void _1c6721b66_checkVarValue(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _225535_v) {
	if (_1c672b456_IsTypeInferred((*(_225535_v)).ptr())) {
		(*((*(_225535_v))))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind});
		_1c67218ad_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1c6717057_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*((*((*(_225535_v))))._field_Kind))._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1c67cb319_Arr> _22688_arr = _1c67bed57_Arr((*((*((*(_225535_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22688_arr != nullptr)) {
			if ((*_22688_arr.alloc)._field_Auto) {
				jule::Ptr<_1c67cb319_Arr> _22716_dataArr = _1c67bed57_Arr((*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22716_dataArr != nullptr)) {
					(*_22688_arr.alloc)._field_N=(*_22716_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1c67127c2_checkAssignType(_self_, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_225535_v))))._field_Refers)) {
			_1c6717057_checkValidityForInitExpr(_self_, (*((*(_225535_v))))._field_Mutable, (*((*(_225535_v))))._field_Reference, &((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_225535_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_225535_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_225535_v))))._field_Reference && (!(_1c67d87dd_isValidForRef(&((*((*((*(_225535_v))))._field_Kind))._field_Kind)))))) {
		_1c6709753_pushErr(_self_.ptr(), (*((*(_225535_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_225535_v))))._field_Constant) {
		if (((!(_1c6789591_IsConst((*((*((*(_225535_v))))._field_Value))._field_Data.ptr()))) && (!(_1c67c1144_comptime((*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1c6709753_pushErr(_self_, (*((*(*((*(_225535_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_225535_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_225535_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1c67c0dad_Tup((*((*((*(_225535_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_225535_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1c6721ec9_evalVarValue(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _230834_decl, jule::Trait _230850_l) {
	if ((!(_1c672b1c0_IsInitialized((*(_230834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1c678a87d_eval> _23137_eval = static_cast<jule::Ptr<_1c678a87d_eval>>(nullptr);;
	if (((*((*(_230834_decl))))._field_Kind != nullptr)) {
		_23137_eval=_1c6711969_evalpd(_self_, _230850_l, (*(*((*(_230834_decl))))._field_Kind.alloc)._field_Kind, (*(_230834_decl)));
	} else {
		_23137_eval=_1c6711969_evalpd(_self_, _230850_l, nullptr, (*(_230834_decl)));
	};
	(*(_23137_eval))._field_immutable=(!((*((*(_230834_decl))))._field_Mutable));
	(*((*((*(_230834_decl))))._field_Value))._field_Data=_1c67a96e3_evalExpr(_23137_eval, (*(*((*(_230834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1c672233c_checkVar(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c672acb3_Var>* _232530_decl, jule::Trait _232546_l) {
	_1c6721ec9_evalVarValue(_self_, _232530_decl, _232546_l);
	if (((*((*((*(_232530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1c6721b66_checkVarValue(_self_, _232530_decl);
}



inline void _1c672253a_checkGlobals(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d70174c3:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _233515_decl = *it;
			{
				if ((*(_233515_decl))._field_Binded) {
					goto _iter_next_1d70174c3;
				};
				if (((_1c672b1c0_IsInitialized(_233515_decl) && ((*((*_233515_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1c672b456_IsTypeInferred(_233515_decl) && ((*((*_233515_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1c672233c_checkVar(_self_, &(_233515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
				};
			}
			_iter_next_1d70174c3:;
			++it;
			goto _iter_begin_1d70174c3;
		}
		_iter_end_1d70174c3:;
	};
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c6722936_readyToCheckFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _234936_s, jule::Ptr<_1c666a51b_Fn>* _234956_f) {
	jule::Ptr<_1c666d4ec_FnIns> _23507_ins = _1c666bcae_instance((*(_234956_f)));;
	if (((*((*(_234956_f))))._field_Instances.len() != 0LL)) {
		return _23507_ins;;
	};
	(*(_23507_ins))._field_Owner=(*(_234936_s));
	_1c666c0bc_appendInstance((*(_234956_f)).ptr(), &(_23507_ins));
	(*_23507_ins.alloc)._field_reloaded=true;
	if (_1c6716144_reloadFnInsTypes(_self_, _23507_ins)) {
		return _23507_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c6722d32_checkGenericFn(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _236536_f, jule::Ptr<_1c661e327_Token>* _236552_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1c6716144_reloadFnInsTypes(_self_, (*(_236536_f)));
	(*((*(_236536_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _23717_existInstance = _1c666c0bc_appendInstance((*((*(_236536_f))))._field_Decl.ptr(), _236536_f);;
	if ((!(_1c6714c9c_checkConstraintsFn(_self_, _236536_f, _236552_et, _23717_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23717_existInstance != nullptr)) {
		(*(_236536_f))=_23717_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1c6725890_checkFnInsCaller(_self_, _236536_f, (*(_236552_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1c6723195_checkTypeMethod(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _238837_s, jule::Ptr<_1c666a51b_Fn>* _238857_f) {
	if (((*((*(_238857_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _23937_ins = (*((*(_238857_f))))._field_Instances[0LL];;
	if (((*((*(_23937_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c6725b48_checkFnIns(_self_, &(_23937_ins));
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c672364b_checkStructInsOp(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _240138_s, jule::Ptr<_1c666a51b_Fn>* _240158_f, jule::Fn<jule::Bool,jule::Ptr<_1c666a51b_Fn>> _240166_p) {
	if (((((*(_240158_f)) == nullptr) || ((*((*(_240158_f))))._field_Generics.len() > 0LL)) || (!(_240166_p((*(_240158_f))))))) {
		return nullptr;;
	};
	return (*((*(_240158_f))))._field_Instances[0LL];;
}



inline jule::Bool _1c6723a47_checkStructEnv(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _241136_s, jule::Ptr<_1c661e327_Token> _241155_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c67cdccd_typeChecker _24127_tc = _1c67cdccd_typeChecker{._field_s=(*((*((*(_241136_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1c67cccdd_referencer>(_1c67cccdd_referencer{._field_ident=(*(*((*(_241136_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_241136_s))))._field_Decl, &__jule_any_type23), ._field_refs=nullptr}), ._field_refers=(*((*(_241136_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		_24127_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>::alloc(0LL, (*((*(_241136_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67baade_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_241136_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7027170:;
			if (it != expr_end) {
				jule::I64 _24259_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> _242516_g = *it;
				{
					jule::Ptr<_1c6641b0d_GenericDecl> _24269_decl = (*(*((*(_241136_s))))._field_Decl.alloc)._field_Generics[_24259_i];;
					{ jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> &__jule_push_dest = _24127_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_24269_decl.alloc)._field_Token, ._field_Ident=(*(_24269_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_242516_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1d7027170:;
				++it;
				_24259_i++;
				goto _iter_begin_1d7027170;
			}
			_iter_end_1d7027170:;
		};
	};
	jule::Ptr<_1c678348b_SymbolTable> _24357_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c6709335_setCurrentFile(_self_, _24357_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_241136_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1c678348b_SymbolTable> _24398_file = _1c67054b8_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_241136_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_24398_file != nullptr)) {
			_1c6709335_setCurrentFile(_self_, _24398_file);
		};
	};
	if (((*((*(_241136_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c66ab98b_constraintChecker> _24468_cc = _1c670eec8_constraintChecker(_self_);;
		(*(_24468_cc))._field_et=_241155_errorToken;
		(*_24468_cc.alloc)._field_si=(*(_241136_s));
		(*_24468_cc.alloc)._field_genericsA=_24127_tc._field_useGenerics;
		(*_24468_cc.alloc)._field_uniq=true;
		if ((!(_1c66ac904_check(_24468_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_241136_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _24598_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_24127_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_241136_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7030c7d:;
			if (it != expr_end) {
				jule::Ptr<_1c672acb3_Var> _246116_v = *it;
				{
					_1c671d734_checkVarDecl(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
					_1c672233c_checkVar(_self_, &(_246116_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24598_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1d7030c7d:;
				++it;
				goto _iter_begin_1d7030c7d;
			}
			_iter_end_1d7030c7d:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_24127_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c678a87d_eval> _24727_eval = _1c67121a6_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
	(*((*(_241136_s))))._field_Comparable=(!((*(*((*(_241136_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_241136_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7034743:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _247415_f = *it;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _24758_kind = _1c67d68b8_checkDecl(&_24127_tc, &((*((*((*(_247415_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24758_kind != nullptr) && __jule_func_result);
				if ((_24758_kind == nullptr)) {
					if (((_self_ != (*(*((*(_241136_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_241136_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_241136_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1d7034743;
				};
				(*_247415_f.alloc)._field_Kind=_24758_kind;
				(*((*(_241136_s))))._field_Mutable=((*((*(_241136_s))))._field_Mutable || ((!((*(*(_247415_f))._field_Decl.alloc)._field_Mutable)) && _1c67bd2b7_Mutable((*(_247415_f))._field_Kind)));
				(*((*(_241136_s))))._field_Comparable=((*((*(_241136_s))))._field_Comparable && _1c67bd031_Comparable((*(_247415_f))._field_Kind));
				if (((*(*(_247415_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1d7034743;
				};
				(*(_24727_eval))._field_prefix=(*_247415_f.alloc)._field_Kind;
				(*_24727_eval.alloc)._field_field=_247415_f;
				(*_247415_f.alloc)._field_Default=_1c67a96e3_evalExpr(_24727_eval, (*(*(_247415_f))._field_Decl.alloc)._field_Default);
				if (((*_247415_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1d7034743;
				};
				;
				_1c67127c2_checkAssignType(_self_, false, &((*_247415_f.alloc)._field_Kind), &((*_247415_f.alloc)._field_Default), (*((*(*(_247415_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_241136_s))))._field_Refers);
			}
			_iter_next_1d7034743:;
			++it;
			goto _iter_begin_1d7034743;
		}
		_iter_end_1d7034743:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6723e43_precheckStructIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _250839_s, jule::Ptr<_1c661e327_Token> _250858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c6723a47_checkStructEnv(_self_, _250839_s, _250858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_250839_s))))._field_Comparable && ((*((*(_250839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1c666a51b_Fn> _25198_decl = _1c6224746_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_250839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d70405d9:;
			if (it != expr_end) {
				jule::Ptr<_1c6657aad_FieldIns> _252016_field = *it;
				{
					jule::Ptr<_1c67cb319_Arr> _25219_arr = _1c67bed57_Arr((*(_252016_field))._field_Kind.ptr());;
					if ((_25219_arr == nullptr)) {
						goto _iter_next_1d70405d9;
					};
					jule::Ptr<_1c666d4ec_FnIns> _25259_f = _1c666ba28_instanceForce(_25198_decl);;
					(*(_25259_f))._field_Generics=jule::append((*_25259_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=(*(_25219_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6722d32_checkGenericFn(_self_, &(_25259_f), &((*((*_252016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2529:6"));;
					};
					_1c667249b_Push((*((*(_250839_s))))._field_Refers.ptr(), jule::Any(_25259_f, &__jule_any_type7));
				}
				_iter_next_1d70405d9:;
				++it;
				goto _iter_begin_1d70405d9;
			}
			_iter_end_1d70405d9:;
		};
	};
	{
		auto expr = &((*((*(_250839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7044643:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _253515_f = *it;
			{
				if (((*(_253515_f))._field_Generics.len() == 0LL)) {
					if ((_1c6722936_readyToCheckFn(_self_, _250839_s, &(_253515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1d7044643:;
			++it;
			goto _iter_begin_1d7044643;
		}
		_iter_end_1d7044643:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c67241eb_checkStructIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns>* _254536_s) {
	{
		auto expr = &((*((*(_254536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7046249:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _254615_f = *it;
			{
				_1c6723195_checkTypeMethod(_self_, _254536_s, &(_254615_f));
			}
			_iter_next_1d7046249:;
			++it;
			goto _iter_begin_1d7046249;
		}
		_iter_end_1d7046249:;
	};
}



inline void _1c67244a4_checkTypeStruct(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _255137_s) {
	if ((*((*(_255137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_255137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_255137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7047c51:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _256415_ins = *it;
			{
				_1c67241eb_checkStructIns(_self_, &(_256415_ins));
			}
			_iter_next_1d7047c51:;
			++it;
			goto _iter_begin_1d7047c51;
		}
		_iter_end_1d7047c51:;
	};
}



inline void _1c67246a2_checkStructTypes(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7048bec:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _257015_s = *it;
			{
				_1c67244a4_checkTypeStruct(_self_, &(_257015_s));
			}
			_iter_next_1d7048bec:;
			++it;
			goto _iter_begin_1d7048bec;
		}
		_iter_end_1d7048bec:;
	};
}



inline void _1c672495a_checkStructInsOperators(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c665865d_StructIns> _257544_s) {
	{
		auto expr = &((*(_257544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7049b87:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _257615_m = *it;
			{
				{
					auto &_match_expr{ (*(_257615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1d704a319:;
						{
							(*(_257544_s))._field_Operators._field_Eq=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672ccb5_Eq);
							(*_257544_s.alloc)._field_Comparable=((*_257544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1d704a913:;
						{
							(*(_257544_s))._field_Operators._field_Gt=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672d07e_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1d704a979:;
						{
							(*(_257544_s))._field_Operators._field_GtEq=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672d348_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1d704a9e0:;
						{
							(*(_257544_s))._field_Operators._field_Lt=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672d612_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1d704aa56:;
						{
							(*(_257544_s))._field_Operators._field_LtEq=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672d8cb_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1d704aacd:;
						{
							(*(_257544_s))._field_Operators._field_Shl=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672e019_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1d704ab55:;
						{
							(*(_257544_s))._field_Operators._field_Shr=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672e2d3_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1d704abcc:;
						{
							(*(_257544_s))._field_Operators._field_Add=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672e59c_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1d704ac54:;
						{
							(*(_257544_s))._field_Operators._field_Sub=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672e866_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1d704accb:;
						{
							(*(_257544_s))._field_Operators._field_Div=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672eb30_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1d704ad53:;
						{
							(*(_257544_s))._field_Operators._field_Mul=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c672ede9_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1d704adca:;
						{
							(*(_257544_s))._field_Operators._field_Mod=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c67301b3_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1d704ae52:;
						{
							(*(_257544_s))._field_Operators._field_BitAnd=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c673047c_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1d704aec9:;
						{
							(*(_257544_s))._field_Operators._field_BitOr=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6730746_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1d704b051:;
						{
							(*(_257544_s))._field_Operators._field_BitXor=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6730a10_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1d704b0c8:;
						{
							(*(_257544_s))._field_Operators._field_Neg=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c673114d_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1d704b150:;
						{
							(*(_257544_s))._field_Operators._field_Pos=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6731417_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1d704b1c7:;
						{
							(*(_257544_s))._field_Operators._field_BitNot=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c67316d1_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1d704b24e:;
						{
							(*(_257544_s))._field_Operators._field_AddAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6731d1e_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1d704b2c6:;
						{
							(*(_257544_s))._field_Operators._field_SubAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c67320d8_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1d704b34d:;
						{
							(*(_257544_s))._field_Operators._field_DivAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c67323a2_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1d704b3c5:;
						{
							(*(_257544_s))._field_Operators._field_MulAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c673266b_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1d704b44c:;
						{
							(*(_257544_s))._field_Operators._field_ModAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6732935_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1d704b4c4:;
						{
							(*(_257544_s))._field_Operators._field_ShlAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6732bee_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1d704b54b:;
						{
							(*(_257544_s))._field_Operators._field_ShrAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6732eb8_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1d704b5c3:;
						{
							(*(_257544_s))._field_Operators._field_BitOrAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6733282_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1d704b64a:;
						{
							(*(_257544_s))._field_Operators._field_BitAndAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c673354b_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1d704b6c2:;
						{
							(*(_257544_s))._field_Operators._field_BitXorAssign=_1c672364b_checkStructInsOp(_self_, &(_257544_s), &(_257615_m), static__1c6733815_BitXorAssign);
						}
					}
					_match_end_1d704a5e4:;
				};
			}
			_iter_next_1d7049b87:;
			++it;
			goto _iter_begin_1d7049b87;
		}
		_iter_end_1d7049b87:;
	};
}



inline void _1c6724c13_precheckStructType(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c6655803_Struct>* _263940_s) {
	if ((*((*(_263940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_263940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c665865d_StructIns> _26508_ins = _1c6655c98_instance((*(_263940_s)));;
		(*(_26508_ins))._field_Checked=true;
		_1c66560a6_appendInstance((*(_263940_s)).ptr(), &(_26508_ins));
		_1c6723e43_precheckStructIns(_self_, &(_26508_ins), nullptr);
	};
	_1c672495a_checkStructInsOperators(_self_, (*((*(_263940_s))))._field_Instances[0LL]);
}



inline void _1c6724e11_precheckStructTypes(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d706293b:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _266015_s = *it;
			{
				_1c6724c13_precheckStructType(_self_, &(_266015_s));
			}
			_iter_next_1d706293b:;
			++it;
			goto _iter_begin_1d706293b;
		}
		_iter_end_1d706293b:;
	};
}



inline void _1c67251b9_checkRets(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _266530_f) {
	if (_1c666a9c2_IsVoid((*((*(_266530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1c672760b_missingRetChecker _26693_mrc = static__1c6727a07_new();;
	jule::Bool _26703_ok = _1c6728bd4_check(&_26693_mrc, (*((*(_266530_f))))._field_Scope);;
	if ((!(_26703_ok))) {
		_1c6709753_pushErr(_self_, (*(*((*(_266530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1c672552c_checkFnInsSc(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _267633_f, jule::Ptr<_1c66ba857_scopeChecker>* _267649_sc) {
	_1c6704a6c_appendRetVars(&((*((*((*(_267649_sc))))._field_table))._field_Vars), _267633_f);
	_1c6704d58_appendParamVars(&((*(*((*(_267649_sc))))._field_table.alloc)._field_Vars), _267633_f);
	_1c6705144_appendGenericTypeAliases(&((*(*((*(_267649_sc))))._field_table.alloc)._field_TypeAliases), _267633_f);
	_1c66cc9ce_check((*(_267649_sc)), &((*((*((*(_267633_f))))._field_Decl))._field_Scope), &((*((*(_267633_f))))._field_Scope));
	if ((!(_1c66bd45e_stopped((*(_267649_sc)).ptr())))) {
		_1c67251b9_checkRets(_self_, _267633_f);
	};
}



inline void _1c6725890_checkFnInsCaller(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _268938_f, jule::Ptr<_1c661e327_Token> _268953_caller) {
	if ((*((*((*(_268938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1c678348b_SymbolTable> _26947_old = (*((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1c6709335_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26947_old);
	});;
	jule::Ptr<_1c678348b_SymbolTable> _26967_file = _1c67054b8_findFile(&((*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_268938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26967_file != nullptr)) {
		_1c6709335_setCurrentFile((*((*((*(_268938_f))))._field_Decl))._field_sema, _26967_file);
	};
	jule::Ptr<_1c66ba857_scopeChecker> _27017_sc = _1c66b13db_newScopeChecker(&((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema), (*(_268938_f)));;
	(*(_27017_sc))._field_calledFrom=_268953_caller;
	_1c672552c_checkFnInsSc(_self_.ptr(), _268938_f, &(_27017_sc));
	if (((*(*((*(_268938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_268938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1c6725b48_checkFnIns(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666d4ec_FnIns>* _271132_f) {
	_1c6725890_checkFnInsCaller(_self_, _271132_f, nullptr);
}



inline void _1c6725e01_checkFunc(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _271531_f) {
	if ((*((*(_271531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_271531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_271531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7071076:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _272515_ins = *it;
			{
				_1c6725b48_checkFnIns(_self_, &(_272515_ins));
			}
			_iter_next_1d7071076:;
			++it;
			goto _iter_begin_1d7071076;
		}
		_iter_end_1d7071076:;
	};
}



inline void _1c67261a9_checkTestFn(_1c670684e_sema* _self_, jule::Ptr<_1c666d4ec_FnIns>* _273032_f) {
	if ((*((*((*(_273032_f))))._field_Decl))._field_Public) {
		_1c6709753_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_273032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1c666a9c2_IsVoid((*((*(_273032_f))))._field_Decl)))) || ((*(*((*(_273032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_273032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_273032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_273032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1c6709753_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c67c8525_Sptr> _27487_sptr = _1c67be31d_Sptr((*((*((*(_273032_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_27487_sptr == nullptr)) {
		_1c6709753_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _27553_s = _1c67c060a_Struct((*(_27487_sptr))._field_Elem.ptr());;
	if (((_27553_s == nullptr) || (!(_1c66db7ce_isStdPackage(&((*((*((*((*(_27553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1c6709753_pushErr(_self_, (*(*((*(_273032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1c6709ab6_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c6726462_precheckFunc(jule::Ptr<_1c670684e_sema> _self_, jule::Ptr<_1c666a51b_Fn>* _276334_f) {
	if ((*((*(_276334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_276334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c666d4ec_FnIns> _27748_ins = _1c666ba28_instanceForce((*(_276334_f)));;
		{ jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> &__jule_push_dest = (*((*(_276334_f))))._field_Instances; __jule_push_dest.push(_27748_ins); };
		jule::Bool _27764_ok = _1c6716144_reloadFnInsTypes(_self_, _27748_ins);;
		(*(_27748_ins))._field_reloaded=true;
		if ((_27764_ok && _1c67d7e4c_hasDirective(&((*((*(_276334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1c67261a9_checkTestFn(_self_, &(_27748_ins));
		};
	};
}



inline void _1c6726660_precheckFuncs(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d707ecbb:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _278715_decl = *it;
			{
				{
					auto expr = &((*(_278715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7080728:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _278816_m = *it;
						{
							_1c6726462_precheckFunc(_self_, &(_278816_m));
						}
						_iter_next_1d7080728:;
						++it;
						goto _iter_begin_1d7080728;
					}
					_iter_end_1d7080728:;
				};
			}
			_iter_next_1d707ecbb:;
			++it;
			goto _iter_begin_1d707ecbb;
		}
		_iter_end_1d707ecbb:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7080abe:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _279215_decl = *it;
			{
				_1c6726462_precheckFunc(_self_, &(_279215_decl));
			}
			_iter_next_1d7080abe:;
			++it;
			goto _iter_begin_1d7080abe;
		}
		_iter_end_1d7080abe:;
	};
}



inline void _1c672685d_checkFuncs(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7082010:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _279915_decl = *it;
			{
				_1c6725e01_checkFunc(_self_, &(_279915_decl));
			}
			_iter_next_1d7082010:;
			++it;
			goto _iter_begin_1d7082010;
		}
		_iter_end_1d7082010:;
	};
}



inline void _1c6726a5b_checkPackageTypes(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7082d02:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _280715_f = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _280715_f);
				_1c672253a_checkGlobals(_self_);
				_1c6726660_precheckFuncs(_self_);
				_1c6724e11_precheckStructTypes(_self_);
			}
			_iter_next_1d7082d02:;
			++it;
			goto _iter_begin_1d7082d02;
		}
		_iter_end_1d7082d02:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7084881:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _281815_f = *it;
			{
				_1c6709335_setCurrentFile(_self_, _281815_f);
				_1c672685d_checkFuncs(_self_);
				_1c67246a2_checkStructTypes(_self_);
			}
			_iter_next_1d7084881:;
			++it;
			goto _iter_begin_1d7084881;
		}
		_iter_end_1d7084881:;
	};
}



inline void _1c6726c59_setFileSemaFields(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7085e59:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _282615_f = *it;
			{
				(*(_282615_f))._field_sema=_self_;
			}
			_iter_next_1d7085e59:;
			++it;
			goto _iter_begin_1d7085e59;
		}
		_iter_end_1d7085e59:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7086ac5:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _282915_st = *it;
			{
				(*(_282915_st))._field_sema=_self_;
			}
			_iter_next_1d7086ac5:;
			++it;
			goto _iter_begin_1d7086ac5;
		}
		_iter_end_1d7086ac5:;
	};
}



inline void _1c6726e57_setSemaFields(jule::Ptr<_1c670684e_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7087796:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _283515_file = *it;
			{
				_1c6709335_setCurrentFile(_self_.ptr(), _283515_file);
				_1c6726c59_setFileSemaFields(_self_);
			}
			_iter_next_1d7087796:;
			++it;
			goto _iter_begin_1d7087796;
		}
		_iter_end_1d7087796:;
	};
}



inline void _1c6727210_check(jule::Ptr<_1c670684e_sema> _self_, jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _284127_files) {
	(*(_self_))._field_files=(*(_284127_files));
	_1c6726e57_setSemaFields(_self_);
	_1c670d1c4_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c670dbb9_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c670d5c0_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c670d7bd_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c672154a_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c6726a5b_checkPackageTypes(_self_);
}







inline _1c672760b_missingRetChecker static__1c6727a07_new(void) {
	return _1c672760b_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1c6727d15_checkConditional(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b4202_Conditional> _288932_c) {
	{
		auto expr = &((*(_288932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d708ce50:;
		if (it != expr_end) {
			jule::Ptr<_1c66b39d7_If> _289015_elif = *it;
			{
				if ((_289015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c6728893_checkScope(_self_, (*(_289015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1d708ce50:;
			++it;
			goto _iter_begin_1d708ce50;
		}
		_iter_end_1d708ce50:;
	};
	return (((*_288932_c.alloc)._field_Default != nullptr) && _1c6728893_checkScope(_self_, (*(*(_288932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c6728156_checkMatch(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b7ce9_Match> _290126_m) {
	{
		auto expr = &((*(_290126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d709001d:;
		if (it != expr_end) {
			jule::Ptr<_1c66b8822_Case> _290215_c = *it;
			{
				if ((_290215_c == nullptr)) {
					return false;;
				};
				jule::I64 _29064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _29074_ok = _1c6728893_checkScope(_self_, (*(_290215_c))._field_Scope);;
				{
					
					if ((_29064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1d70919e2:;
						{
							return false;;
						}
					}
					else if ((!(_29074_ok))) {
						_case_begin_1d7091a7a:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1d7091ae1;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1d7091ae1:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_290215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1d709001d;
						}
					}
					_match_end_1d709197b:;
				};
			}
			_iter_next_1d709001d:;
			++it;
			goto _iter_begin_1d709001d;
		}
		_iter_end_1d709001d:;
	};
	return (((*_290126_m.alloc)._field_Default != nullptr) && _1c6728893_checkScope(_self_, (*(*(_290126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c6728552_checkInfIter(_1c672760b_missingRetChecker* _self_, jule::Uintptr _292724_it, jule::Ptr<_1c66b35b9_Scope>* _292742_s) {
	jule::I64 _29283_n = (*(_self_))._field_breaked.len();;
	if (_1c6728893_checkScope(_self_, (*(_292742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
		return true;;
	};
	if ((_29283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_29283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1d7095430:;
			if (it != expr_end) {
				jule::Uintptr _293411_addr = *it;
				{
					if ((_292724_it == _293411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
						return false;;
					};
				}
				_iter_next_1d7095430:;
				++it;
				goto _iter_begin_1d7095430;
			}
			_iter_end_1d7095430:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _29283_n);;
	};
	return true;;
}



inline jule::Bool _1c6728893_checkScope(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b35b9_Scope> _294526_s) {
	if ((_294526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_294526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7096a5d:;
		if (it != expr_end) {
			jule::Any _294915_st = *it;
			{
				{
					auto &_match_expr{ _294915_st };
					
					if (_match_expr.type == &__jule_any_type56) {
						_case_begin_1d709772e:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type57) {
						_case_begin_1d709750e:;
						{
							jule::Uintptr _29555_addr = (*(_294915_st.unsafe_cast_ptr<_1c66b5b60_BreakSt>()))._field_It;;
							if ((_29555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_29555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1d70977b7:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type43) {
						_case_begin_1d709783e:;
						{
							jule::Ptr<_1c66b44ee_InfIter> _29639_ii = _294915_st.unsafe_cast_ptr<_1c66b44ee_InfIter>();;
							if (_1c6728552_checkInfIter(_self_, static_cast<jule::Uintptr>(_29639_ii), &((*(_29639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1d70978b6:;
						{
							jule::Ptr<_1c66b49a5_WhileIter> _29689_wn = _294915_st.unsafe_cast_ptr<_1c66b49a5_WhileIter>();;
							if ((_1c66b4d4b_IsWhileNext(_29689_wn.ptr()) && ((*_29689_wn.alloc)._field_Expr == nullptr))) {
								if (_1c6728552_checkInfIter(_self_, static_cast<jule::Uintptr>(_29689_wn), &((*_29689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type58) {
						_case_begin_1d709793d:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1d70979b5:;
						{
							if (_1c6728893_checkScope(_self_, _294915_st.cast_ptr<_1c66b35b9_Scope>(&__jule_any_type29))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1d7097a3c:;
						{
							{
								auto &_match_expr{ (*(_294915_st.cast_ptr<_1c6788b56_Data>(&__jule_any_type31)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type30) {
									_case_begin_1d709d9aa:;
									{
										return true;;
									}
								}
								_match_end_1d709d911:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1d7097ab4:;
						{
							if (_1c6727d15_checkConditional(_self_, _294915_st.cast_ptr<_1c66b4202_Conditional>(&__jule_any_type42))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type55) {
						_case_begin_1d7097b3b:;
						{
							if (_1c6728156_checkMatch(_self_, _294915_st.cast_ptr<_1c66b7ce9_Match>(&__jule_any_type55))) {
								return true;;
							};
						}
					}
					_match_end_1d7097586:;
				};
			}
			_iter_next_1d7096a5d:;
			++it;
			goto _iter_begin_1d7096a5d;
		}
		_iter_end_1d7096a5d:;
	};
	return false;;
}



inline jule::Bool _1c6728bd4_check(_1c672760b_missingRetChecker* _self_, jule::Ptr<_1c66b35b9_Scope> _300021_s) {
	return _1c6728893_checkScope(_self_, _300021_s);;
}







inline jule::Bool _1c672b1c0_IsInitialized(_1c672acb3_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c672b456_IsTypeInferred(_1c672acb3_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1c672b6dc_untypedConstant(_1c672acb3_Var* _self_) {
	return (_1c672b456_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1c672c3ad_Dispose(jule::Ptr<_1c666a51b_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1c666a9c2_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1c666942c_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c672c677_Str(jule::Ptr<_1c666a51b_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1c666a9c2_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1c666942c_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1c67c49e9_Prim> _393_prim = _1c67be087_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1c67c7eb4_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1c672c9eb_logical(jule::Ptr<_1c666a51b_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1c666a9c2_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1c666942c_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1c67c49e9_Prim> _643_prim = _1c67be087_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1c67c7c2d_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1c67c060a_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1c672ccb5_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _7215_f) {
	return static__1c672c9eb_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1c672d07e_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _7715_f) {
	return static__1c672c9eb_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1c672d348_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _8217_f) {
	return static__1c672c9eb_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1c672d612_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _8715_f) {
	return static__1c672c9eb_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1c672d8cb_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _9217_f) {
	return static__1c672c9eb_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1c672dc50_result(jule::Ptr<_1c666a51b_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1c666a9c2_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1c666942c_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1c67c060a_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c672e019_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _11816_f) {
	return static__1c672dc50_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1c672e2d3_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _12316_f) {
	return static__1c672dc50_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1c672e59c_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _12816_f) {
	return static__1c672dc50_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1c672e866_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _13316_f) {
	return static__1c672dc50_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1c672eb30_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _13816_f) {
	return static__1c672dc50_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1c672ede9_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _14316_f) {
	return static__1c672dc50_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1c67301b3_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _14816_f) {
	return static__1c672dc50_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1c673047c_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _15319_f) {
	return static__1c672dc50_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1c6730746_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _15818_f) {
	return static__1c672dc50_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1c6730a10_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _16319_f) {
	return static__1c672dc50_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1c6730d84_unary(jule::Ptr<_1c666a51b_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1c666a9c2_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1c666942c_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1c67c060a_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c673114d_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _18716_f) {
	return static__1c6730d84_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1c6731417_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _19216_f) {
	return static__1c6730d84_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1c67316d1_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _19719_f) {
	return static__1c6730d84_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1c6731a55_assign(jule::Ptr<_1c666a51b_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1c666a9c2_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1c666942c_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c6731d1e_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _22122_f) {
	return static__1c6731a55_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1c67320d8_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _22622_f) {
	return static__1c6731a55_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1c67323a2_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _23122_f) {
	return static__1c6731a55_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1c673266b_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _23622_f) {
	return static__1c6731a55_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1c6732935_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _24122_f) {
	return static__1c6731a55_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1c6732bee_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _24622_f) {
	return static__1c6731a55_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1c6732eb8_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _25122_f) {
	return static__1c6731a55_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1c6733282_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _25624_f) {
	return static__1c6731a55_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1c673354b_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _26125_f) {
	return static__1c6731a55_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1c6733815_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn> _26625_f) {
	return static__1c6731a55_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1c67703e0_typeCompatibilityChecker_eq(_1c67703e0_typeCompatibilityChecker *_self_, _1c67703e0_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1c677091d_pushErr(_1c67703e0_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1c6770ba4_checkTrait(_1c67703e0_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c67bca14_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c667de9c_Trait> _1277_trt = _1c67c0891_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1c67be31d_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1d70e50c8:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1c67be31d_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1c67c060a_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1d70e5172;
			}
		}
		else if ((_1c67c060a_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1d70e5172:;
			{
				jule::Ptr<_1c665865d_StructIns> _1384_s = _1c67c060a_Struct((*(_self_))._field_src);;
				if ((!(_1c6656e75_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1c676deb0_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1c677091d_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c0891_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1d70e51e9:;
			{
				jule::Ptr<_1c667de9c_Trait> _1488_base = _1c67c0891_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1d70ea2a9:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d70ea540:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d70eae47:;
								if (it != expr_end) {
									jule::Ptr<_1c6655803_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1d70ea540;
										};
									}
									_iter_next_1d70eae47:;
									++it;
									goto _iter_begin_1d70eae47;
								}
								_iter_end_1d70eae47:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1d70ea540:;
						++it;
						goto _iter_begin_1d70ea540;
					}
					_iter_end_1d70ea540:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d70eb332:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1c666a51b_Fn> _1629_m2 = _1c667eb7e_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c666d4ec_FnIns> _1665_m1k = _1c67147e6_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1c666d4ec_FnIns> _1675_m2k = _1c67147e6_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1c666e498_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1d70eb332:;
						++it;
						goto _iter_begin_1d70eb332;
					}
					_iter_end_1d70eb332:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d70e5040:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d70e4eb8:;
	};
}



inline jule::Bool _1c6770e3a_checkPtr(_1c67703e0_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c67bca14_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67cbcdc_Ptr> _1827_dest = _1c67be5a4_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c67cc859_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c67bc11d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c67711c1_checkPrim(_1c67703e0_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1c67c49e9_Prim> _1914_prim = _1c67be087_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1c67c824a_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c67bc11d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c67715bc_typeEnum(_1c67703e0_typeCompatibilityChecker* _self_, jule::Ptr<_1c6682db3_TypeEnum>* _19925_e, jule::Ptr<_1c67bb8d1_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7102800:;
		if (it != expr_end) {
			jule::Ptr<_1c66827db_TypeEnumItem> _20015_item = *it;
			{
				if (_1c67bc11d_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c6682db3_TypeEnum> _2048_ke = _1c67beac1_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1d7102800;
				};
				if (_1c67715bc_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1d7102800:;
			++it;
			goto _iter_begin_1d7102800;
		}
		_iter_end_1d7102800:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c6771853_checkTypeEnum(_1c67703e0_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c67bc11d_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6682db3_TypeEnum> _2197_e = _1c67beac1_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1c67715bc_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c6771ad9_check(_1c67703e0_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c67be5a4_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c6770e3a_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c67bd7d4_NilCompatible((*(_self_))._field_dest)) {
		if (_1c67bca14_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c67be087_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1d710810d:;
			{
				__jule_func_result = _1c67711c1_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c67beac1_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1d7108196:;
			{
				__jule_func_result = _1c6771853_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c67c0891_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1d7107a8b:;
			{
				__jule_func_result = _1c6770ba4_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d71076c3:;
			{
				__jule_func_result = _1c67bc11d_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1d7106c44:;
	};
}








inline jule::Bool _1c677226b_assignTypeChecker_eq(_1c677226b_assignTypeChecker *_self_, _1c677226b_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1c6772733_pushErr(_1c677226b_assignTypeChecker* _self_, jule::Str _25623_fmt, jule::Slice<jule::Any> _25636_args) {
	_1c6709753_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25623_fmt, _25636_args);
}



inline jule::Bool _1c67729b9_checkValidity(_1c677226b_assignTypeChecker* _self_) {
	jule::Bool _2617_valid = true;;
	{
		
		if ((_1c67c0374_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d710ae13:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _2644_f = _1c67c0374_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1c666e9b5_IsBuiltin(_2644_f.ptr())) {
						_case_begin_1d710c783:;
						{
							_1c6772733_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((*((*(_2644_f))._field_Decl))._field_Binded) {
						_case_begin_1d710c82c:;
						{
							_1c6772733_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if (((!((*((*(_2644_f))._field_Decl))._field_Statically)) && _1c666ac58_IsMethod((*(_2644_f))._field_Decl))) {
						_case_begin_1d710c893:;
						{
							_1c6772733_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					else if ((((*((*(_2644_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2644_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1d710c909:;
						{
							_1c6772733_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1c6709ab6_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2617_valid=false;
						}
					}
					_match_end_1d710c695:;
				};
			}
		}
		else if ((_1c67c0dad_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d710aeac:;
			{
				_1c6772733_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2617_valid=false;
			}
		}
		_match_end_1d710ad7a:;
	};
	return _2617_valid;;
}



inline jule::Bool _1c6772c50_checkConst(_1c677226b_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1c67be087_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2933_kind = (*(_1c67be087_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1dd71e0ad_IsFloat(_2933_kind)) {
			_case_begin_1d711414c:;
			{
				if ((!(_1c676e345_floatAssignable(&(_2933_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else if (_1dd71dc6c_IsInt(_2933_kind)) {
			_case_begin_1d71141d5:;
			{
				if ((!(_1c676ee06_intAssignable(_2933_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2933_kind;
			}
		}
		else {
			_case_begin_1d71140d6:;
			{
				return false;;
			}
		}
		_match_end_1d7113ea4:;
	};
	return true;;
}



inline jule::Bool _1c6772ed6_checkCompatibility(_1c677226b_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1d711646d:;
			{
				return false;;
			}
		}
		else if ((!(_1c67729b9_checkValidity(_self_)))) {
			_case_begin_1d71164e5:;
			{
				return false;;
			}
		}
		else if (_1c6772c50_checkConst(_self_)) {
			_case_begin_1d711655b:;
			{
				return true;;
			}
		}
		else if ((_1c67be83a_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d71165c2:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _3228_dkind = (*(_self_))._field_dest;;
				if ((_1c67be83a_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3228_dkind=(*((*(_1c67be83a_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1c67c49e9_Prim> _3264_prim = _1c67be087_Prim((*(_self_))._field_dest);;
				if (((_3264_prim == nullptr) || _1c67c824a_IsAny(_3264_prim.ptr()))) {
					goto _match_end_1d7115769;
				};
				jule::Ptr<_1c67bb8d1_TypeKind> _3318_dest = (*(*(_1c67be83a_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1c671322e_checkTypeCompatibility((*(_self_))._field_s, &(_3318_dest), &(_3228_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1d7115769:;
	};
	return _1c6713b03_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c677326c_check(_1c677226b_assignTypeChecker* _self_) {
	jule::Bool _3383_ok = _1c6772ed6_checkCompatibility(_self_);;
	if ((_3383_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1c67d9998_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3383_ok;;
}







inline jule::Bool _1d713614c_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d7137846:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1d713ae98:;
						{
							_36112_elem=(*(_1c67bed57_Arr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d713ae32:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c6636bbe_ArrTypeDecl>()))._field_Elem;
				return _1c677537e_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1d71377be:;
	};
	return false;;
}

inline jule::Bool _1d71363e4_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1d713dcd1:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1d714219c:;
						{
							_36112_elem=(*(_1c67c00dd_Slc((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d71423bc:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c6635d33_SlcTypeDecl>()))._field_Elem;
				return _1c677537e_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1d713dc59:;
	};
	return false;;
}

inline jule::Bool _1d713d2ca_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d7145337:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1d7148a11:;
						{
							_36112_elem=(*(_1c67be5a4_Ptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d7148923:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c663642c_PtrTypeDecl>()))._field_Elem;
				return _1c677537e_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1d71452b0:;
	};
	return false;;
}

inline jule::Bool _1d7143e4b_annotateConstraintElem(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _35846_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1d714b43c:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _36112_elem = nullptr;;
				{
					
{
						_case_begin_1d714da27:;
						{
							_36112_elem=(*(_1c67be31d_Sptr((*(_35846_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1d714ea28:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c663599d_SptrTypeDecl>()))._field_Elem;
				return _1c677537e_annotateConstraint(_self_, &(_36112_elem));;
			}
		}
		_match_end_1d714b3b5:;
	};
	return false;;
}



inline jule::Bool _1c677456a_annotateConstraintMap(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _37842_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1d711dab3:;
			{
				jule::Ptr<_1c67ca68c_Map> _3818_m = _1c67c0b27_Map((*(_37842_k)).ptr());;
				jule::Ptr<_1c663741c_MapTypeDecl> _3828_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c663741c_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3828_m2))._field_Key;
				if ((!(_1c677537e_annotateConstraint(_self_, &((*(_3818_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3828_m2.alloc)._field_Val;
				__jule_func_result = _1c677537e_annotateConstraint(_self_, &((*_3818_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1d711da3b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c67748ab_annotateConstraintTup(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _39342_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1d7124448:;
			{
				jule::Ptr<_1c6636130_TupleTypeDecl> _3968_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c6636130_TupleTypeDecl>();;
				jule::Ptr<_1c67c9adc_Tuple> _3978_tup2 = _1c67c0dad_Tup((*(_39342_k)).ptr());;
				{
					auto expr = &((*(_3978_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d71273d5:;
					if (it != expr_end) {
						jule::Ptr<_1c67bb8d1_TypeKind> _39816_t2 = *it;
						{
							{
								auto expr = &((*(_3968_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d712912e:;
								if (it != expr_end) {
									jule::Ptr<_1c6634903_TypeDecl> _39917_t = *it;
									{
										(*(_self_))._field_c=_39917_t;
										if (_1c677537e_annotateConstraint(_self_, &(_39816_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1d712912e:;
									++it;
									goto _iter_begin_1d712912e;
								}
								_iter_end_1d712912e:;
							};
						}
						_iter_next_1d71273d5:;
						++it;
						goto _iter_begin_1d71273d5;
					}
					_iter_end_1d71273d5:;
				};
			}
		}
		_match_end_1d71243c1:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c6774bec_annotateConstraintFn(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _41041_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d7128bde:;
			{
				jule::Ptr<_1c66465b3_FnDecl> _4138_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c66465b3_FnDecl>();;
				jule::Ptr<_1c666d4ec_FnIns> _4148_f = _1c67c0374_Fn((*(_41041_k)).ptr());;
				{
					auto expr = &((*(_4148_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d712b61a:;
					if (it != expr_end) {
						jule::I64 _4159_i = it - expr->begin();
						jule::Ptr<_1c666c474_ParamIns> _41516_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4138_pf))._field_Params[_4159_i]))._field_Kind;
							if (_1c677537e_annotateConstraint(_self_, &((*(_41516_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1d712b61a:;
						++it;
						_4159_i++;
						goto _iter_begin_1d712b61a;
					}
					_iter_end_1d712b61a:;
				};
				if (((*_4138_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4138_pf))._field_Result.alloc)._field_Kind;
					if (_1c677537e_annotateConstraint(_self_, &((*_4148_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1d7128b78:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c677503d_annotateConstraintIdent(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _43144_k) {
	jule::Ptr<_1c663500d_IdentTypeDecl> _4327_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c663500d_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1c665865d_StructIns> _4337_s = _1c67c060a_Struct((*(_43144_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71300ad:;
		if (it != expr_end) {
			jule::I64 _4347_i = it - expr->begin();
			jule::Ptr<_1c6641b0d_GenericDecl> _43410_g = *it;
			{
				if (((*(_43410_g))._field_Ident == (*(_4327_ident))._field_Ident)) {
					jule::Ptr<_1c67b9eea_InsGeneric> _4369_fg = (*((*(_self_))._field_f))._field_Generics[_4347_i];;
					if ((_4369_fg != nullptr)) {
						return false;;
					};
					_1c67756e2_pushGeneric(_self_, _43144_k, _4347_i);
					return true;;
				};
				if ((_4337_s == nullptr)) {
					goto _iter_next_1d71300ad;
				};
				jule::Ptr<_1c6634903_TypeDecl> _4468_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4327_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7132b4e:;
					if (it != expr_end) {
						jule::Ptr<_1c6634903_TypeDecl> _44716_ig = *it;
						{
							(*(_self_))._field_c=_44716_ig;
							{
								auto expr = &((*(_4337_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d7133765:;
								if (it != expr_end) {
									jule::Ptr<_1c67b9eea_InsGeneric> _44917_sg = *it;
									{
										if (_1c677537e_annotateConstraint(_self_, &((*(_44917_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1d7133765:;
									++it;
									goto _iter_begin_1d7133765;
								}
								_iter_end_1d7133765:;
							};
						}
						_iter_next_1d7132b4e:;
						++it;
						goto _iter_begin_1d7132b4e;
					}
					_iter_end_1d7132b4e:;
				};
				(*(_self_))._field_c=_4468_c;
			}
			_iter_next_1d71300ad:;
			++it;
			_4347_i++;
			goto _iter_begin_1d71300ad;
		}
		_iter_end_1d71300ad:;
	};
	return false;;
}



inline jule::Bool _1c677537e_annotateConstraint(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _46039_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1d7133bb6:;
			{
				return _1c677503d_annotateConstraintIdent(_self_, _46039_k);;
			}
		}
		_match_end_1d7133b50:;
	};
	{
		
		if ((_1c67bed57_Arr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7134a85:;
			{
				return _1d713614c_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1c67c00dd_Slc((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7134aeb:;
			{
				return _1d71363e4_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1c67be5a4_Ptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7134b62:;
			{
				return _1d713d2ca_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1c67be31d_Sptr((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7134bc8:;
			{
				return _1d7143e4b_annotateConstraintElem(_self_, _46039_k);;
			}
		}
		else if ((_1c67c0b27_Map((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7134c50:;
			{
				return _1c677456a_annotateConstraintMap(_self_, _46039_k);;
			}
		}
		else if ((_1c67c0374_Fn((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d71351a1:;
			{
				return _1c6774bec_annotateConstraintFn(_self_, _46039_k);;
			}
		}
		else if ((_1c67c0dad_Tup((*(_46039_k)).ptr()) != nullptr)) {
			_case_begin_1d7135228:;
			{
				return _1c67748ab_annotateConstraintTup(_self_, _46039_k);;
			}
		}
		else {
			_case_begin_1d7134986:;
			{
				return false;;
			}
		}
		_match_end_1d7134920:;
	};
}



inline void _1c67756e2_pushGeneric(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _48532_k, jule::I64 _48546_i) {
	(*((*(_self_))._field_f))._field_Generics[_48546_i]=jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=(*(_48532_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)});
	jule::Ptr<_1c6641b0d_GenericDecl> _4877_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48546_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7151ca0:;
		if (it != expr_end) {
			jule::Ptr<_1c67bb8d1_TypeKind> _48815_ignored = *it;
			{
				if (((*(_4877_gd))._field_Ident == _1c67bbccc_Str(_48815_ignored.ptr()))) {
					(*_48815_ignored.alloc)._field_Kind=(*((*(_48532_k))))._field_Kind;
				};
			}
			_iter_next_1d7151ca0:;
			++it;
			goto _iter_begin_1d7151ca0;
		}
		_iter_end_1d7151ca0:;
	};
	if ((((*_4877_gd.alloc)._field_Constraint == nullptr) || ((*((*_4877_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4877_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1c677537e_annotateConstraint(_self_, _48532_k);
}



inline jule::Bool _1c6775a33_annotatePrim(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _50040_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c6777a57_annotateAny(_self_, _50040_k);
	return __jule_func_result;;
}



inline jule::Bool _1c6775d74_annotateArr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _50439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67cb319_Arr> _5057_parr = _1c67bed57_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5057_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67cb319_Arr> _5097_arr = _1c67bed57_Arr((*(_50439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5057_parr))._field_Elem));
	__jule_func_result = _1c6777d98_annotateKind(_self_, &((*(_5097_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c67761b5_annotateSlc(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _51439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67c8ee8_Slc> _5157_pslc = _1c67c00dd_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5157_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67c8ee8_Slc> _5197_slc = _1c67c00dd_Slc((*(_51439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5157_pslc))._field_Elem));
	__jule_func_result = _1c6777d98_annotateKind(_self_, &((*(_5197_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c67765b1_checkMapKey(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _52438_k, jule::Ptr<_1c67bb8d1_TypeKind>* _52458_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67bb8d1_TypeKind>* _5257_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52438_k;
	__jule_func_result=_1c6777d98_annotateKind(_self_, _52458_ck);
	(*(_self_))._field_k=_5257_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c6776902_annotateMap(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _53239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67ca68c_Map> _5337_pmap = _1c67c0b27_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5337_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67ca68c_Map> _5377_m = _1c67c0b27_Map((*(_53239_k)).ptr());;
	__jule_func_result = (_1c67765b1_checkMapKey(_self_, (&((*(_5337_pmap))._field_Key)), &((*(_5377_m))._field_Key)) && _1c67765b1_checkMapKey(_self_, (&((*(_5337_pmap))._field_Val)), &((*_5377_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c6776c43_annotateFn(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _54238_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c666d4ec_FnIns> _5437_pf = _1c67c0374_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5437_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _5477_f = _1c67c0374_Fn((*(_54238_k)).ptr());;
	{
		
		if (((*(_5437_pf))._field_Params.len() != (*(_5477_f))._field_Params.len())) {
			_case_begin_1d7160660:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c666a9c2_IsVoid((*(_5437_pf))._field_Decl.ptr()) != _1c666a9c2_IsVoid((*(_5477_f))._field_Decl))) {
			_case_begin_1d71606e8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d71605b6:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c67bb8d1_TypeKind>* _5567_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5477_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7162585:;
		if (it != expr_end) {
			jule::I64 _5578_i = it - expr->begin();
			jule::Ptr<_1c666c474_ParamIns> _55715_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5437_pf))._field_Params[_5578_i]))._field_Kind));
				__jule_func_result=(_1c6777d98_annotateKind(_self_, &((*(_55715_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1d7162585:;
			++it;
			_5578_i++;
			goto _iter_begin_1d7162585;
		}
		_iter_end_1d7162585:;
	};
	if ((!(_1c666a9c2_IsVoid((*(_5437_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5437_pf))._field_Result));
		__jule_func_result=(_1c6777d98_annotateKind(_self_, &((*_5477_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5567_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c6777084_annotatePtr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _57139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67cbcdc_Ptr> _5727_pptr = _1c67be5a4_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5727_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67cbcdc_Ptr> _5767_ptr = _1c67be5a4_Ptr((*(_57139_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5727_pptr))._field_Elem));
	__jule_func_result = _1c6777d98_annotateKind(_self_, &((*(_5767_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c67773c5_annotateSptr(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _58140_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67c8525_Sptr> _5827_ssptr = _1c67be31d_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5827_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c67c8525_Sptr> _5867_sptr = _1c67be31d_Sptr((*(_58140_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5827_ssptr))._field_Elem));
	__jule_func_result = _1c6777d98_annotateKind(_self_, &((*(_5867_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c6777716_annotateStruct(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _59142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c665865d_StructIns> _5927_s = _1c67c060a_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5927_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c665865d_StructIns> _5967_s2 = _1c67c060a_Struct((*(_59142_k)).ptr());;
	if (((*(_5927_s))._field_Generics.len() != (*(_5967_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5927_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d716b55b:;
		if (it != expr_end) {
			jule::I64 _6008_i = it - expr->begin();
			jule::Ptr<_1c67b9eea_InsGeneric> _60015_g = *it;
			{
				jule::Ptr<_1c67b9eea_InsGeneric> _6018_g2 = (*(_5967_s2))._field_Generics[_6008_i];;
				if (_1c67bc11d_Equal((*(_60015_g))._field_Kind, (*(_6018_g2))._field_Kind)) {
					goto _iter_next_1d716b55b;
				};
				(*(_self_))._field_k=(&((*_60015_g.alloc)._field_Kind));
				if ((!(_1c6777d98_annotateKind(_self_, &((*_6018_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d716b55b:;
			++it;
			_6008_i++;
			goto _iter_begin_1d716b55b;
		}
		_iter_end_1d716b55b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c6777a57_annotateAny(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _61339_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6143_kind = _1c67bbccc_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d716eb25:;
		if (it != expr_end) {
			jule::I64 _6157_i = it - expr->begin();
			jule::Ptr<_1c6641b0d_GenericDecl> _61510_g = *it;
			{
				if ((_6143_kind != (*(_61510_g))._field_Ident)) {
					goto _iter_next_1d716eb25;
				};
				jule::Ptr<_1c67b9eea_InsGeneric> _6194_t = (*((*(_self_))._field_f))._field_Generics[_6157_i];;
				{
					
					if ((_6194_t == nullptr) || ((*(_6194_t))._field_Kind == nullptr)) {
						_case_begin_1d7171473:;
						{
							_1c67756e2_pushGeneric(_self_, _61339_k, _6157_i);
						}
					}
					else if ((!(_1c67bc11d_Equal((*(_6194_t))._field_Kind, (*(_61339_k)))))) {
						_case_begin_1d717151c:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1d7171330:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61339_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1d716eb25:;
			++it;
			_6157_i++;
			goto _iter_begin_1d716eb25;
		}
		_iter_end_1d716eb25:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c6777d98_annotateKind(_1c6773b41_dynamicTypeAnnotation* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _63440_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c6777a57_annotateAny(_self_, _63440_k)) {
			_case_begin_1d7173ab3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67be087_Prim((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173b29:;
			{
				__jule_func_result = _1c6775a33_annotatePrim(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67bed57_Arr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173b90:;
			{
				__jule_func_result = _1c6775d74_annotateArr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67c00dd_Slc((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173c17:;
			{
				__jule_func_result = _1c67761b5_annotateSlc(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67c0b27_Map((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173dc1:;
			{
				__jule_func_result = _1c6776902_annotateMap(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67c0374_Fn((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173e37:;
			{
				__jule_func_result = _1c6776c43_annotateFn(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67be5a4_Ptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7173e9d:;
			{
				__jule_func_result = _1c6777084_annotatePtr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67be31d_Sptr((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d7174014:;
			{
				__jule_func_result = _1c67773c5_annotateSptr(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c67c060a_Struct((*(_63440_k)).ptr()) != nullptr)) {
			_case_begin_1d717408b:;
			{
				__jule_func_result = _1c6777716_annotateStruct(_self_, _63440_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d7173992:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d717351e:;
	};
}



inline jule::Bool _1c677812e_annotate(_1c6773b41_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1c6777d98_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}







inline void _1c6779042_pushErrToken(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c661e327_Token> _67928_token, jule::Str _67943_fmt, jule::Slice<jule::Any> _67956_args) {
	_1c6709753_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67928_token, _67943_fmt, _67956_args);
}



inline void _1c67793a5_pushErr(_1c677899d_fnCallArgChecker* _self_, jule::Str _68323_fmt, jule::Slice<jule::Any> _68336_args) {
	_1c6779042_pushErrToken(_self_, (*(_self_))._field_errorToken, _68323_fmt, _68336_args);
}



inline jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _1c677963b_getParams(_1c677899d_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1c6669196_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1c677997c_checkCounts(_1c677899d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>>* _69628_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6977_n = (*(_69628_params)).len();;
	if (((_6977_n > 0LL) && _1c6669196_IsSelf((*((*(_69628_params))[0LL]))._field_Decl.ptr()))) {
		(_6977_n)--;
	};
	jule::I64 _7027_diff = (_6977_n - (*(_self_))._field_args.len());;
	jule::Str _7037_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7027_diff == 0LL)) {
			_case_begin_1d7180b36:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6977_n > 0LL) && (*(*((*(_69628_params))[(_6977_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1d71807d4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7027_diff < 0LL) || (_7027_diff > (*(_69628_params)).len()))) {
			_case_begin_1d718084a:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1d718076d:;
			{
				_7037_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1d71806e6:;
	};
	_20759e353_StrBuilder _7147_err = static__2075a7c41_New(32LL);;
	_2075a814d_WriteStr(&_7147_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_2075a814d_WriteStr(&_7147_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69628_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71801da:;
		if (it != expr_end) {
			jule::I64 _7177_i = it - expr->begin();
			jule::Ptr<_1c666c474_ParamIns> *_71710_p = it;
			{
				_2075a814d_WriteStr(&_7147_err, _1c67bbccc_Str((*((*(_71710_p))))._field_Kind.ptr()));
				if ((((*(_69628_params)).len() - _7177_i) > 1LL)) {
					_2075a814d_WriteStr(&_7147_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d71801da:;
			++it;
			_7177_i++;
			goto _iter_begin_1d71801da;
		}
		_iter_end_1d71801da:;
	};
	_2075a8406_WriteByte(&_7147_err, ')');
	_1c67793a5_pushErr(_self_, _7037_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2075a8945_Str(&_7147_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c6779e33_checkArg(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _72829_p, jule::Ptr<_1c6788b56_Data>* _72848_arg, jule::Ptr<_1c661e327_Token>* _72865_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c66707c9_parameterUsesGenerics(_72829_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72829_p))))._field_Decl))._field_Variadic)) && _1c6782589_isGoodValueToInfer(_72848_arg));
		if (__jule_func_result) {
			_1c6773b41_dynamicTypeAnnotation _7339_dta = _1c6773b41_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72829_p)), ._field_a=(*(_72848_arg)), ._field_errorToken=(*(_72865_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c677812e_annotate(&_7339_dta);
		};
		if ((!(__jule_func_result))) {
			_1c6779042_pushErrToken(_self_, (*(_72865_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c6717057_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, _72865_errorToken)) {
		__jule_func_result = _1c67127c2_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72829_p))))._field_Kind), _72848_arg, (*(_72865_errorToken)), _1c678de14_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c677a32e_push(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _75725_p, jule::Ptr<_1c6638c37_Expr> _75743_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c67bb8d1_TypeKind> _7587_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7593_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75725_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75725_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75725_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1c6788b56_Data> _7677_d = _1c67a96e3_evalExpr((*(_self_))._field_e, _75743_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7587_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7593_oldImmut;
	if ((_7677_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c6779e33_checkArg(_self_, _75725_p, &(_7677_d), &((*(_75743_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7677_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1c677a72a_pushVariadic(_1c677899d_fnCallArgChecker* _self_, jule::Ptr<_1c666c474_ParamIns>* _78133_p, jule::I64 _78151_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7837_variadiced = false;;
	jule::Bool _7843_more = ((_78151_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c665edc3_SliceExprModel> _7857_model = jule::new_ptr<_1c665edc3_SliceExprModel>(_1c665edc3_SliceExprModel{._field_ElemKind=(*((*(_78133_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1c67bb8d1_TypeKind> _7897_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1c67bb8d1_TypeKind> _7967_oldKind = (*((*(_78133_p))))._field_Kind;;
	(*((*(_78133_p))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>((*(*((*(_78133_p))))._field_Kind.alloc));
	(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78133_p))))._field_Kind=_7967_oldKind;
	});;
	for (; (_78151_i < (*(_self_))._field_args.len()); (_78151_i)++) {
		{
			jule::Ptr<_1c6638c37_Expr> _8058_arg = (*(_self_))._field_args[_78151_i];;
			{
				auto &_match_expr{ (*(_8058_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1d7195ed1:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8ee8_Slc>(_1c67c8ee8_Slc{._field_Elem=(*((*(_78133_p))))._field_Kind}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1d71962cd:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78133_p))))._field_Kind;
					}
				}
				_match_end_1d7196267:;
			};
			jule::Ptr<_1c6788b56_Data> _8188_d = _1c67a9061_eval((*(_self_))._field_e, _8058_arg);;
			if ((_8188_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1d7195464;
			};
			if ((*((*(_8188_d))._field_Kind))._field_Variadic) {
				_7837_variadiced=true;
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c6779e33_checkArg(_self_, _78133_p, &(_8188_d), &((*(_8058_arg))._field_Token)));
				(*(*((*(_78133_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8188_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1d7199c1b:;
						{
							_7857_model=(*(_8188_d))._field_Model.unsafe_cast_ptr<_1c665edc3_SliceExprModel>();
							(*(_7857_model))._field_ElemKind=(*((*(_78133_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1d719ca32:;
						{
							_7857_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8188_d))._field_Model); };
						}
					}
					_match_end_1d719c9bb:;
				};
				(_78151_i)++;
				goto _iter_end_1d7195464;
			};
			__jule_func_result=(__jule_func_result && _1c6779e33_checkArg(_self_, _78133_p, &(_8188_d), &((*_8058_arg.alloc)._field_Token)));
			(*(_7857_model))._field_Elems=jule::append((*_7857_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8188_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1d7195464:;
	}
	_iter_end_1d7195464:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7897_old;
	if ((_7837_variadiced && _7843_more)) {
		_1c6779042_pushErrToken(_self_, (*((*(_self_))._field_args[_78151_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7857_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7857_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c677aa6b_checkArgs(_1c677899d_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>>* _86230_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8633_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8677_i = 0LL;;
	if ((((*(_86230_params)).len() > 0LL) && _1c6669196_IsSelf((*((*(_86230_params))[0LL]))._field_Decl.ptr()))) {
		(_8677_i)++;
	};
	_julec_label_1d71a5d9d:;
	while ((_8677_i < (*(_86230_params)).len())) {
		{
			jule::Ptr<_1c666c474_ParamIns> _8748_p = (*(_86230_params))[_8677_i];;
			{
				
				if ((*(*(_8748_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1d71a7850:;
					{
						__jule_func_result=(_1c677a72a_pushVariadic(_self_, &(_8748_p), _8677_i) && __jule_func_result);
						goto _iter_end_1d71a6145;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8677_i)) {
					_case_begin_1d71a793d:;
					{
						__jule_func_result=false;
						goto _iter_end_1d71a6145;
					}
				}
				else {
					_case_begin_1d71a7487:;
					{
						__jule_func_result=(_1c677a32e_push(_self_, &(_8748_p), (*(_self_))._field_args[_8677_i]) && __jule_func_result);
					}
				}
				_match_end_1d71a7410:;
			};
			(_8677_i)++;
		}
	_iter_next_1d71a6145:;
	}
	_iter_end_1d71a6145:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8633_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c677ad02_checkDynamicTypeAnnotation(_1c677899d_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71a9687:;
		if (it != expr_end) {
			jule::Ptr<_1c67b9eea_InsGeneric> _89410_g = *it;
			{
				if ((_89410_g == nullptr)) {
					_1c67793a5_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1d71a9687:;
			++it;
			goto _iter_begin_1d71a9687;
		}
		_iter_end_1d71a9687:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c677b088_check(_1c677899d_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _9047_params = _1c677963b_getParams(_self_);;
	__jule_func_result=_1c677997c_checkCounts(_self_, &(_9047_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c677aa6b_checkArgs(_self_, &(_9047_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c677ad02_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1c677be68_pushErr(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c661e327_Token> _94223_token, jule::Str _94238_fmt, jule::Slice<jule::Any> _94251_args) {
	_1c678ae11_pushErr((*(_self_))._field_e.ptr(), _94223_token, _94238_fmt, _94251_args);
}



inline void _1c677c2cb_pushSuggestion(_1c677b8d5_structLitChecker* _self_, jule::Str _94730_fmt, jule::Slice<jule::Any> _94743_args) {
	_1c678b274_pushSuggestion((*(_self_))._field_e.ptr(), _94730_fmt, _94743_args);
}



inline void _1c677c6e9_pushMatch(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c6657aad_FieldIns>* _95130_f, jule::Ptr<_1c6788b56_Data>* _95149_d, jule::Ptr<_1c661e327_Token>* _95164_errorToken) {
	;
	jule::Bool _9573_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95130_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1c6717057_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9573_mutable, false, &((*((*(_95130_f))))._field_Kind), _95149_d, _95164_errorToken)) {
		_1c67127c2_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95130_f))))._field_Kind), _95149_d, (*(_95164_errorToken)), _1c678de14_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1c665d421_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1c665d421_StructArgExprModel>(_1c665d421_StructArgExprModel{._field_Token=(*(_95164_errorToken)), ._field_Field=(*(_95130_f)), ._field_Expr=(*(_95149_d))})); };
}



inline void _1c677ca5c_checkPair(_1c677b8d5_structLitChecker* _self_, jule::Ptr<_1c663d456_FieldExprPair>* _97030_pair, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _97057_exprs) {
	jule::Ptr<_1c6657aad_FieldIns> _9727_f = _1c6659a49_FindField((*(_self_))._field_s.ptr(), (*((*((*(_97030_pair))))._field_Field))._field_Kind);;
	if ((_9727_f == nullptr)) {
		_1c677be68_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1c6709eb2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9727_f))._field_Decl))._field_Public, (*(*(_9727_f))._field_Decl.alloc)._field_Token)))) {
		_1c677be68_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c677c2cb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1d71b5b5a:;
	{
		auto expr = _97057_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71b6b28:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _98415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1d71b761d:;
						{
							jule::Ptr<_1c663d456_FieldExprPair> _9879_dpair = (*(_98415_expr))._field_Kind.unsafe_cast_ptr<_1c663d456_FieldExprPair>();;
							{
								
								if (((*(_97030_pair)) == _9879_dpair)) {
									_case_begin_1d71b9c91:;
									{
										goto _iter_end_1d71b6b28;
									}
								}
								else if (((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind == (*(*(_9879_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1d71b9d3a:;
									{
										_1c677be68_pushErr(_self_, (*((*(_97030_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97030_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1d71b6b28;
									}
								}
								_match_end_1d71b9c2a:;
							};
						}
					}
					_match_end_1d71b7596:;
				};
			}
			_iter_next_1d71b6b28:;
			++it;
			goto _iter_begin_1d71b6b28;
		}
		_iter_end_1d71b6b28:;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _9987_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9987_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9727_f))._field_Kind;
	jule::Ptr<_1c6788b56_Data> _10027_d = _1c67a96e3_evalExpr((*(_self_))._field_e, (*((*(_97030_pair))))._field_Expr);;
	if ((_10027_d == nullptr)) {
		return;;
	};
	_1c677c6e9_pushMatch(_self_, &(_9727_f), &(_10027_d), &((*((*(_97030_pair))))._field_Field));
}



inline jule::Bool _1c677cd9d_readyExprs(_1c677b8d5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _100931_exprs) {
	jule::Bool _10107_ok = true;;
	{
		auto expr = _100931_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71c044a:;
		if (it != expr_end) {
			jule::I64 _10118_i = it - expr->begin();
			jule::Ptr<_1c6638c37_Expr> _101115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1d71c113d:;
						{
							jule::Ptr<_1c663ea62_KeyValPair> _10149_pair = (*(_101115_expr))._field_Kind.unsafe_cast_ptr<_1c663ea62_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10149_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type52) {
									_case_begin_1d71c4806:;
									{
										goto _match_end_1d71c3b02;
									}
								}
								else {
									_case_begin_1d71c3b68:;
									{
										_1c677be68_pushErr(_self_, (*(_10149_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10107_ok=false;
										goto _iter_next_1d71c044a;
									}
								}
								_match_end_1d71c3b02:;
							};
							(*((*(_100931_exprs))[_10118_i]))._field_Kind=jule::Any(jule::new_ptr<_1c663d456_FieldExprPair>(_1c663d456_FieldExprPair{._field_Field=(*((*(_10149_pair))._field_Key))._field_Token, ._field_Expr=(*_10149_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1d71c10b6:;
				};
			}
			_iter_next_1d71c044a:;
			++it;
			_10118_i++;
			goto _iter_begin_1d71c044a;
		}
		_iter_end_1d71c044a:;
	};
	return _10107_ok;;
}



inline void _1c677d156_check(_1c677b8d5_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _103326_exprs) {
	if (((*(_103326_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c677cd9d_readyExprs(_self_, _103326_exprs)))) {
		return;;
	};
	jule::Bool _10407_paired = false;;
	{
		auto expr = _103326_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d71c7353:;
		if (it != expr_end) {
			jule::I64 _10418_i = it - expr->begin();
			jule::Ptr<_1c6638c37_Expr> _104115_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104115_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1d71cd216:;
						{
							jule::Ptr<_1c663d456_FieldExprPair> _10449_pair = (*(_104115_expr))._field_Kind.unsafe_cast_ptr<_1c663d456_FieldExprPair>();;
							if (((_10418_i > 0LL) && (!(_10407_paired)))) {
								_1c677be68_pushErr(_self_, (*(_10449_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10407_paired=true;
							_1c677ca5c_checkPair(_self_, &(_10449_pair), _103326_exprs);
						}
					}
					else {
						_case_begin_1d71c850d:;
						{
							if (_10407_paired) {
								_1c677be68_pushErr(_self_, (*(_104115_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10418_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1c677be68_pushErr(_self_, (*_104115_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1d71c7353;
							};
							jule::Ptr<_1c6657aad_FieldIns> _10599_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10418_i];;
							if ((!(_1c6709eb2_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10599_field))._field_Decl))._field_Public, (*(*(_10599_field))._field_Decl.alloc)._field_Token)))) {
								_1c677be68_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1c677c2cb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c67bb8d1_TypeKind> _10679_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10679_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10599_field.alloc)._field_Kind;
							jule::Ptr<_1c6788b56_Data> _10719_d = _1c67a96e3_evalExpr((*(_self_))._field_e, _104115_expr);;
							if ((_10719_d == nullptr)) {
								goto _iter_next_1d71c7353;
							};
							_1c677c6e9_pushMatch(_self_, &(_10599_field), &(_10719_d), &((*_104115_expr.alloc)._field_Token));
						}
					}
					_match_end_1d71c8497:;
				};
			}
			_iter_next_1d71c7353:;
			++it;
			_10418_i++;
			goto _iter_begin_1d71c7353;
		}
		_iter_end_1d71c7353:;
	};
	if ((!(_10407_paired))) {
		jule::I64 _10824_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10838_diff = (_10824_n - (*(_103326_exprs)).len());;
		{
			
			if ((_10838_diff <= 0LL)) {
				_case_begin_1d71d1d30:;
				{
					return;;
				}
			}
			_match_end_1d71d1c0e:;
		};
		_20759e353_StrBuilder _10898_idents = static__2075a7c41_New(32LL);;
		for (; (_10838_diff > 0LL); (_10838_diff)--) {
			{
				_2075a814d_WriteStr(&_10898_idents, jule::Str::lit(", ", 2));
				_2075a814d_WriteStr(&_10898_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10824_n - _10838_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1d71d2913:;
		}
		_iter_end_1d71d2913:;;
		_1c677be68_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_2075a93e6_Buf(&_10898_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}








inline jule::Bool _1c677d6b7_rangeChecker_eq(_1c677d6b7_rangeChecker *_self_, _1c677d6b7_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1c672acb3_Var> _1c677dbd4_buildVar(_1c677d6b7_rangeChecker* _self_, jule::Ptr<_1c664776d_VarDecl>* _110925_decl) {
	jule::Ptr<_1c672acb3_Var> _11107_v = _1c6676a00_buildVar((*(_110925_decl)));;
	return _11107_v;;
}



inline void _1c677ddd2_setSizeKey(_1c677d6b7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_Kind;
}



inline void _1c677e300_checkRangeExprValidity(_1c677d6b7_rangeChecker* _self_, jule::Ptr<_1c6788b56_Data>* _112843_d, jule::Ptr<_1c672acb3_Var>* _112854_key, jule::Ptr<_1c67bb8d1_TypeKind>* _112870_k) {
	jule::Bool _11297__mut = (*((*(_112854_key))))._field_Mutable;;
	if ((_11297__mut && (!(_1c67bd2b7_Mutable((*(_112870_k)).ptr()))))) {
		_11297__mut=false;
	};
	_1c6717057_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11297__mut, (*((*(_112854_key))))._field_Reference, &((*((*((*(_112854_key))))._field_Kind))._field_Kind), _112843_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1c677e4ed_checkSlice(_1c677d6b7_rangeChecker* _self_) {
	_1c677ddd2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c67c8ee8_Slc> _11477_slc = _1c67c00dd_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_11477_slc))._field_Elem});
	_1c677e300_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11477_slc.alloc)._field_Elem));
}



inline void _1c677e6eb_checkArray(_1c677d6b7_rangeChecker* _self_) {
	_1c677ddd2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c67cb319_Arr> _11607_arr = _1c67bed57_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_11607_arr))._field_Elem});
	_1c677e300_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11607_arr.alloc)._field_Elem));
}



inline void _1c677e8e9_checkMapKeyA(_1c677d6b7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c67ca68c_Map> _11727_m = _1c67c0b27_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_11727_m))._field_Key});
	jule::Ptr<_1c6788b56_Data> _11767_d = jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc));;
	(*_11767_d.alloc)._field_Kind=(*_11727_m.alloc)._field_Key;
	_1c677e300_checkRangeExprValidity(_self_, &(_11767_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11727_m.alloc)._field_Key));
}



inline void _1c677eae7_checkMapKeyB(_1c677d6b7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c67ca68c_Map> _11877_m = _1c67c0b27_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_11877_m))._field_Val});
	jule::Ptr<_1c6788b56_Data> _11917_d = jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc));;
	(*_11917_d.alloc)._field_Kind=(*_11877_m.alloc)._field_Val;
	_1c677e300_checkRangeExprValidity(_self_, &(_11917_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11877_m.alloc)._field_Val));
}



inline void _1c677ece5_checkMap(_1c677d6b7_rangeChecker* _self_) {
	_1c677e8e9_checkMapKeyA(_self_);
	_1c677eae7_checkMapKeyB(_self_);
}



inline void _1c677eee3_checkStr(_1c677d6b7_rangeChecker* _self_) {
	_1c677ddd2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c6621c0e_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_Kind;
}



inline void _1c67801e1_checkComptime(_1c677d6b7_rangeChecker* _self_) {
	_1c677ddd2_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1c6621c0e_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c677dbd4_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1c6780477_checkComptimeRange(_1c677d6b7_rangeChecker* _self_) {
	jule::Ptr<_1c66857de_comptimeRange> _12267_range = _1c67c2431_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12267_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data6)) {
			_case_begin_1d7203ea6:;
			{
				_1c67801e1_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1d72042b4:;
			{
				_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1d720424d:;
	};
}



inline jule::Bool _1c678070d_check(_1c677d6b7_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1d720765d:;
		}
		else if ((_1c67c00dd_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d720600d:;
			{
				_1c677e4ed_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c67bed57_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7206074:;
			{
				_1c677e6eb_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c67c0b27_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d72065c4:;
			{
				_1c677ece5_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1c67c2431_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d720663a:;
			{
				return _1c6780477_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1d7205e75:;
			{
				jule::Ptr<_1c67c49e9_Prim> _12594_prim = _1c67be087_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12594_prim != nullptr) && _1c67c7eb4_IsStr(_12594_prim))) {
					_1c677eee3_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1d7205d65:;
	};
	_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1c678138a_prepareTypes(_1c6780e28_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c666e72e_Types((*(_self_))._field_f);
	};
}



inline void _1c6781643_prepareExprs(_1c6780e28_retTypeChecker* _self_, jule::Ptr<_1c6638c37_Expr>* _128733_e) {
	if (((*(_128733_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128733_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1d720db5e:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128733_e))))._field_Kind.unsafe_cast_ptr<_1c663982b_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1d720d4dd:;
			{
				{ jule::Slice<jule::Ptr<_1c6638c37_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128733_e))); };
			}
		}
		_match_end_1d720d059:;
	};
}



inline void _1c6781841_checkExprs(_1c6780e28_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c6788b56_Data>> _13037_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6788b56_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1c678a87d_eval> _13047_eval = _1c67121a6_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7211315:;
		if (it != expr_end) {
			jule::I64 _13058_i = it - expr->begin();
			jule::Ptr<_1c6638c37_Expr> _130515_expr = *it;
			{
				if ((_13058_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1d7211315;
				};
				jule::Ptr<_1c67bb8d1_TypeKind> _13108_t = (*(_self_))._field_types[_13058_i];;
				(*(_13047_eval))._field_prefix=_13108_t;
				jule::Ptr<_1c6788b56_Data> _13138_d = _1c67a96e3_evalExpr(_13047_eval, _130515_expr);;
				if ((_13138_d == nullptr)) {
					goto _iter_next_1d7211315;
				};
				{ jule::Slice<jule::Ptr<_1c6788b56_Data>> &__jule_push_dest = _13037_datas; __jule_push_dest.push(_13138_d); };
				if (((!((*(_13138_d))._field_Mutable)) && _1c67bd2b7_Mutable((*(_13138_d))._field_Kind.ptr()))) {
					_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1c677226b_assignTypeChecker _13258_ac = _1c677226b_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13108_t, ._field_d=_13138_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1c66bdeba_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1c677326c_check(&_13258_ac);
			}
			_iter_next_1d7211315:;
			++it;
			_13058_i++;
			goto _iter_begin_1d7211315;
		}
		_iter_end_1d7211315:;
	};
	if ((_13037_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c6663107_TupleExprModel>(_1c6663107_TupleExprModel{._field_Datas=_13037_datas}), &__jule_any_type84);
	} else if ((_13037_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13037_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1c6781ac7_tryFuncMultiRetForward(_1c6780e28_retTypeChecker* _self_) {
	jule::Ptr<_1c678a87d_eval> _13477_eval = _1c67121a6_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
	jule::Ptr<_1c6788b56_Data> _13487_d = _1c67a96e3_evalExpr(_13477_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13487_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c67c9adc_Tuple> _13547_tup = _1c67c0dad_Tup((*(_13487_d))._field_Kind.ptr());;
	if ((_13547_tup == nullptr)) {
		return false;;
	};
	if (((*(_13547_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1d7222238;
	};
	(*(_self_))._field_model=(*(_13487_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7220368:;
		if (it != expr_end) {
			jule::I64 _13627_i = it - expr->begin();
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _13638_t1 = (*(_self_))._field_types[_13627_i];;
				jule::Ptr<_1c67bb8d1_TypeKind> _13648_t2 = (*(_13547_tup))._field_Types[_13627_i];;
				if ((!(_1c6712c78__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13638_t1), &(_13648_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1d7222238;
				};
			}
			_iter_next_1d7220368:;
			++it;
			_13627_i++;
			goto _iter_begin_1d7220368;
		}
		_iter_end_1d7220368:;
	};
	return true;;
	_julec_label_1d7222238:;
	_20759e353_StrBuilder _13717_wanted = static__2075a7c41_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7222568:;
		if (it != expr_end) {
			jule::I64 _13727_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _137210_t = *it;
			{
				_2075a814d_WriteStr(&_13717_wanted, _1c67bbccc_Str(_137210_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13727_i) > 1LL)) {
					_2075a814d_WriteStr(&_13717_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d7222568:;
			++it;
			_13727_i++;
			goto _iter_begin_1d7222568;
		}
		_iter_end_1d7222568:;
	};
	_20759e353_StrBuilder _13787_given = static__2075a7c41_New(32LL);;
	{
		auto expr = &((*(_13547_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7224603:;
		if (it != expr_end) {
			jule::I64 _13797_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _137910_t = *it;
			{
				_2075a814d_WriteStr(&_13787_given, _1c67bbccc_Str(_137910_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13797_i) > 1LL)) {
					_2075a814d_WriteStr(&_13787_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d7224603:;
			++it;
			_13797_i++;
			goto _iter_begin_1d7224603;
		}
		_iter_end_1d7224603:;
	};
	_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_2075a8945_Str(&_13717_wanted), &__jule_any_type4); (*it++) = jule::Any(_2075a8945_Str(&_13787_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1c6781e18_check(_1c6780e28_retTypeChecker* _self_, jule::Ptr<_1c6638c37_Expr>* _138926_e) {
	_1c678138a_prepareTypes(_self_);
	_1c6781643_prepareExprs(_self_, _138926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1d72279e1:;
			{
				if ((!(_1c666b792_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c666a9c2_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1d7227a57:;
			{
				_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1d7227abd:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1d722c540:;
						{
							if (_1c6781ac7_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1d722c485:;
				};
				_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1d7227b34:;
			{
				_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1d7227b9a:;
			{
				_1c6709753_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d722787b:;
	};
	_1c6781841_checkExprs(_self_);
	return true;;
}







inline jule::Ptr<_1c66d63cd_ImportInfo> _1c67839a8_SelectPackage(_1c678348b_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7233964:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1d7233964:;
			++it;
			goto _iter_begin_1d7233964;
		}
		_iter_end_1d7233964:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c6783da4_FindVar(_1c678348b_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1c6785ed8_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c67842a0_FindTypeAlias(_1c678348b_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1c678648e_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1c6655803_Struct> _1c678469b_FindStruct(_1c678348b_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72356e1:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1d72356e1:;
			++it;
			goto _iter_begin_1d72356e1;
		}
		_iter_end_1d72356e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6784a97_FindFn(_1c678348b_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7237407:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1d7237407:;
			++it;
			goto _iter_begin_1d7237407;
		}
		_iter_end_1d7237407:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c667de9c_Trait> _1c6784dd8_FindTrait(_1c678348b_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7238727:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1d7238727:;
			++it;
			goto _iter_begin_1d7238727;
		}
		_iter_end_1d7238727:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66816a8_Enum> _1c6785229_FindEnum(_1c678348b_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7239739:;
		if (it != expr_end) {
			jule::Ptr<_1c66816a8_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1d7239739:;
			++it;
			goto _iter_begin_1d7239739;
		}
		_iter_end_1d7239739:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c678556a_FindTypeEnum(_1c678348b_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d723a729:;
		if (it != expr_end) {
			jule::Ptr<_1c6682db3_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1d723a729:;
			++it;
			goto _iter_begin_1d723a729;
		}
		_iter_end_1d723a729:;
	};
	return nullptr;;
}



inline jule::I64 _1c6785a32_findVar1(_1c678348b_SymbolTable* _self_, jule::Ptr<_1c672acb3_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d723b719:;
		if (it != expr_end) {
			jule::I64 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1d723b719:;
			++it;
			_1097_i++;
			goto _iter_begin_1d723b719;
		}
		_iter_end_1d723b719:;
	};
	return -1LL;;
}



inline jule::Ptr<_1c672acb3_Var> _1c6785ed8_findVar(_1c678348b_SymbolTable* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I64 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1c672acb3_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1d723d584:;
		}
		_iter_end_1d723d584:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d723ea19:;
			if (it != expr_end) {
				jule::Ptr<_1c672acb3_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1d723ea19:;
				++it;
				goto _iter_begin_1d723ea19;
			}
			_iter_end_1d723ea19:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c678648e_findTypeAlias(_1c678348b_SymbolTable* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I64 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1c67baade_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1d72418c8:;
		}
		_iter_end_1d72418c8:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7242d5d:;
			if (it != expr_end) {
				jule::Ptr<_1c67baade_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1d7242d5d:;
				++it;
				goto _iter_begin_1d7242d5d;
			}
			_iter_end_1d7242d5d:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c678688a_defByIdent(_1c678348b_SymbolTable* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72440c3:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type8);;
				};
			}
			_iter_next_1d72440c3:;
			++it;
			goto _iter_begin_1d72440c3;
		}
		_iter_end_1d72440c3:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7244436:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type27);;
				};
			}
			_iter_next_1d7244436:;
			++it;
			goto _iter_begin_1d7244436;
		}
		_iter_end_1d7244436:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7244c3e:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type23);;
				};
			}
			_iter_next_1d7244c3e:;
			++it;
			goto _iter_begin_1d7244c3e;
		}
		_iter_end_1d7244c3e:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72463a0:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type26);;
				};
			}
			_iter_next_1d72463a0:;
			++it;
			goto _iter_begin_1d72463a0;
		}
		_iter_end_1d72463a0:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7248160:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type10);;
				};
			}
			_iter_next_1d7248160:;
			++it;
			goto _iter_begin_1d7248160;
		}
		_iter_end_1d7248160:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72489ce:;
		if (it != expr_end) {
			jule::Ptr<_1c66816a8_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type24);;
				};
			}
			_iter_next_1d72489ce:;
			++it;
			goto _iter_begin_1d72489ce;
		}
		_iter_end_1d72489ce:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72496a0:;
		if (it != expr_end) {
			jule::Ptr<_1c6682db3_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type25);;
				};
			}
			_iter_next_1d72496a0:;
			++it;
			goto _iter_begin_1d72496a0;
		}
		_iter_end_1d72496a0:;
	};
	return nullptr;;
}



inline jule::Bool _1c6786d41_isDuplicatedIdent(_1c678348b_SymbolTable* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d724ab9b:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1d724ab9b:;
			++it;
			goto _iter_begin_1d724ab9b;
		}
		_iter_end_1d724ab9b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d724b042:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1d724b042:;
			++it;
			goto _iter_begin_1d724b042;
		}
		_iter_end_1d724b042:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d724b40a:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1d724b40a:;
			++it;
			goto _iter_begin_1d724b40a;
		}
		_iter_end_1d724b40a:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d724d4a6:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1d724d4a6:;
			++it;
			goto _iter_begin_1d724d4a6;
		}
		_iter_end_1d724d4a6:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d725092b:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1d725092b:;
			++it;
			goto _iter_begin_1d725092b;
		}
		_iter_end_1d725092b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72509c5:;
		if (it != expr_end) {
			jule::Ptr<_1c66816a8_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1d72509c5:;
			++it;
			goto _iter_begin_1d72509c5;
		}
		_iter_end_1d72509c5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d72519c6:;
		if (it != expr_end) {
			jule::Ptr<_1c6682db3_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1d72519c6:;
			++it;
			goto _iter_begin_1d72519c6;
		}
		_iter_end_1d72519c6:;
	};
	return false;;
}








inline jule::Bool _1c6788b56_Data_eq(_1c6788b56_Data *_self_, _1c6788b56_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1c6789074_IsNil(_1c6788b56_Data* _self_) {
	return _1c67bca14_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c678930a_IsVoid(_1c6788b56_Data* _self_) {
	return _1c67bcc9a_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c6789591_IsConst(_1c6788b56_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c67898d2_GoodOperand(_1c6788b56_Data* _self_, jule::Ptr<_1c6788b56_Data>* _10628_other) {
	if ((_1c67beac1_TypeEnum((*((*(_10628_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c67be087_Prim((*((*(_10628_other))))._field_Kind) == nullptr) || (!(_1c67c824a_IsAny(_1c67be087_Prim((*((*(_10628_other))))._field_Kind).ptr())))) && (_1c67c0891_Trait((*((*(_10628_other))))._field_Kind) == nullptr)) && (!(_1c67bca14_IsNil((*(_self_))._field_Kind))));;
}








inline jule::Bool _1c6789ccd_Value_eq(_1c6789ccd_Value *_self_, _1c6789ccd_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1c678a87d_eval_eq(_1c678a87d_eval *_self_, _1c678a87d_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1c678ae11_pushErr(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _13723_token, jule::Str _13738_fmt, jule::Slice<jule::Any> _13751_args) {
	_1c6709753_pushErr((*(_self_))._field_s.ptr(), _13723_token, _13738_fmt, _13751_args);
}



inline void _1c678b274_pushSuggestion(_1c678a87d_eval* _self_, jule::Str _14230_fmt, jule::Slice<jule::Any> _14243_args) {
	_1c6709ab6_pushSuggestion((*(_self_))._field_s.ptr(), _14230_fmt, _14243_args);
}



inline void _1c678b472_allowBuiltin(_1c678a87d_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c678b670_disallowBuiltin(_1c678a87d_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c678b906_isUnsafe(_1c678a87d_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c678bb8c_isGlobal(_1c678a87d_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3)) {
			_case_begin_1d72ad417:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d72ad824:;
			{
				return false;;
			}
		}
		_match_end_1d72ad7ad:;
	};
}



inline jule::Bool _1c678be9a_applyNumericPrefix(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _16939_d) {
	if ((((((*(_16939_d)) == nullptr) || (!(_1c6789591_IsConst((*(_16939_d)).ptr())))) || (_1c67be087_Prim((*((*(_16939_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c67c49e9_Prim> _1763_prim = _1c67be087_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1763_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1dd71e0ad_IsFloat(_1c67c4d6d_Str(_1763_prim.ptr()))) {
			_case_begin_1d72b0e86:;
			{
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>((*((*(_self_))._field_prefix)));
				_1dd7233c0_SetF64((*((*(_16939_d))))._field_Constant.ptr(), _1dd722545_AsF64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1dd71d695_IsSigInt(_1c67c4d6d_Str(_1763_prim.ptr()))) {
			_case_begin_1d72b0eec:;
			{
				if ((!(_1c676e6b9_sigAssignable(_1c67c4d6d_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>((*((*(_self_))._field_prefix)));
				_1dd7227ed_SetI64((*((*(_16939_d))))._field_Constant.ptr(), _1dd722028_AsI64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		else if (_1dd71d9a3_IsUnsigInt(_1c67c4d6d_Str(_1763_prim.ptr()))) {
			_case_begin_1d72b1063:;
			{
				if ((!(_1c676ea82_unsigAssignable(_1c67c4d6d_Str(_1763_prim.ptr()), _16939_d)))) {
					return false;;
				};
				(*((*(_16939_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>((*((*(_self_))._field_prefix)));
				_1dd722aa6_SetU64((*((*(_16939_d))))._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_16939_d))))._field_Constant));
				(*(*((*(_16939_d))))._field_Constant.alloc)._field_Kind=(*(_1763_prim))._field_Kind;
			}
		}
		_match_end_1d72b0d98:;
	};
	return true;;
}



inline jule::Ptr<_1c6788b56_Data> _1c678c2db_litStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _20419_l) {
	jule::Str _2057_s = jule::Str();;
	if (_1c6620713_IsRawStr((*((*(_20419_l))))._field_Value)) {
		_2057_s=_1c676c91a_ToRawStr((*((*(_20419_l))))._field_Value);
	} else {
		_2057_s=_1c676cc5b_ToStr((*((*(_20419_l))))._field_Value);
	};
	jule::Ptr<_1dd71e850_Const> _2117_constant = static__1dd720620_NewStr(_2057_s);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a19b6_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2117_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2117_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c678c62c_litRune(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _22120_l) {
	jule::I32 _2223_r = _1c676c70b_ToRune((*((*(_22120_l))))._field_Value);;
	jule::Ptr<_1c6788b56_Data> _2237_data = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_2223_r))});;
	if ((_2223_r <= 255LL)) {
		(*(_2237_data))._field_Kind=_1c68a349b_primU8;
	} else {
		(*(_2237_data))._field_Kind=_1c68a2e3a_primI32;
	};
	(*(_2237_data))._field_Model=jule::Any(jule::new_ptr<_1c6666d53_RuneExprModel>(_1c6666d53_RuneExprModel{._field_Code=_2223_r}), &__jule_any_type86);
	(*_2237_data.alloc)._field_Mutable=true;
	(*_2237_data.alloc)._field_IsRune=true;
	(*_2237_data.alloc)._field_untyped=true;
	return _2237_data;;
}



inline jule::Ptr<_1c6788b56_Data> _1c678c96d_litFloat(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _24021_l) {
	jule::F64 _2413_f = ({
		auto except = _1dd70657e_ParseFloat((*((*(_24021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1dd71e850_Const> _2427_constant = static__1dd7208d9_NewF64(_2413_f);;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4447_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2427_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_2427_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c678ccae_litInt(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _25223_l) {
	;
	jule::Str _2557_lit = (*((*(_25223_l))))._field_Value;;
	jule::I64 _2567_base = 0LL;;
	{
		
		if (_208769198_HasPrefix(_2557_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1d72c352b:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=16LLU;
			}
		}
		else if (_208769198_HasPrefix(_2557_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1d72c3619:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=2LLU;
			}
		}
		else if (_208769198_HasPrefix(_2557_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1d72c31c9:;
			{
				(_2557_lit).mut_slice(2LL);;
				_2567_base=8LLU;
			}
		}
		else if (((_2557_lit[0LL] == '0') && (_2557_lit.len() > 1LL))) {
			_case_begin_1d72c3240:;
			{
				(_2557_lit).mut_slice(1LL);;
				_2567_base=8LLU;
			}
		}
		else {
			_case_begin_1d72c3163:;
			{
				_2567_base=10LLU;
			}
		}
		_match_end_1d72c30db:;
	};
	jule::Ptr<_1c6788b56_Data> _2767_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	jule::Bool _2787_ok = true;;
	jule::I64 _2793_sig = ({
		auto except = _1dd6eec5e_ParseInt(_2557_lit, _2567_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2787_ok=false;

			0LL;
		});
	});;
	if (_2787_ok) {
		(*_2767_d.alloc)._field_Constant=static__1dd71ecc3_NewI64(_2793_sig);
		(*_2767_d.alloc)._field_Kind=_1c68a2698_primInt;
	} else {
		jule::U64 _2874_unsig = ({
			auto except = _1dd6ee7a8_ParseUint(_2557_lit, _2567_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c678ae11_pushErr(_self_, (*((*(_25223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2767_d.alloc)._field_Constant=static__1dd72008c_NewU64(_2874_unsig);
		(*_2767_d.alloc)._field_Kind=_1c68a22d0_primUint;
	};
	(*_2767_d.alloc)._field_Model=jule::Any((*_2767_d.alloc)._field_Constant, &__jule_any_type20);
	(*_2767_d.alloc)._field_untyped=true;
	if ((!(_1c678be9a_applyNumericPrefix(_self_, &(_2767_d))))) {
		_1c67b3752_fitBitsize(&(_2767_d));
	};
	return _2767_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c678d100_litNum(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr>* _30723_l) {
	{
		
		if (_1c66213b2_IsFloat((*((*(_30723_l))))._field_Value)) {
			_case_begin_1d72ca7ca:;
			{
				return _1c678c96d_litFloat(_self_, _30723_l);;
			}
		}
		else {
			_case_begin_1d72ca764:;
			{
				return _1c678ccae_litInt(_self_, _30723_l);;
			}
		}
		_match_end_1d72ca654:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c678d441_evalLit(_1c678a87d_eval* _self_, jule::Ptr<_1c6639bc2_LitExpr> _31623_lit) {
	{
		
		if (_1c662047c_IsStr((*(_31623_lit))._field_Value)) {
			_case_begin_1d72cb9eb:;
			{
				return _1c678c2db_litStr(_self_, &(_31623_lit));;
			}
		}
		else if (_1c66209cc_IsRune((*(_31623_lit))._field_Value)) {
			_case_begin_1d72cba62:;
			{
				return _1c678c62c_litRune(_self_, &(_31623_lit));;
			}
		}
		else if (_1c662167b_IsNum((*(_31623_lit))._field_Value)) {
			_case_begin_1d72cbac8:;
			{
				return _1c678d100_litNum(_self_, &(_31623_lit));;
			}
		}
		else {
			_case_begin_1d72cb3e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1d72cb2d1:;
	};
}



inline jule::Any _1c678d782_findBuiltins(_1c678a87d_eval* _self_, jule::Str* _32929_ident) {
	if (_1c670383a_IsPub((*(_32929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data1)) {
				_case_begin_1d72cdd61:;
				{
					jule::Any _3339_def = _1c67b3521_findBuiltinsImport(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1c66d63cd_ImportInfo>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data1));;
					if ((_3339_def != nullptr)) {
						return _3339_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3)) {
				_case_begin_1d72cdaa8:;
				{
					jule::Any _3389_def = _1c67b427a_findBuiltinsSema(_32929_ident, (*(_self_))._field_lookup.cast_ptr<_1c670684e_sema>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));;
					if ((_3389_def != nullptr)) {
						return _3389_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
				_case_begin_1d72cddc7:;
				{
					jule::Any _3439_def = _1c67b427a_findBuiltinsSema(_32929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)))._field_s);;
					if ((_3439_def != nullptr)) {
						return _3439_def;;
					};
				}
			}
			_match_end_1d72cdca6:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1c68a4c83_findBuiltinDef(_32929_ident);;
}



inline jule::Any _1c678db7d_getDef(_1c678a87d_eval* _self_, jule::Str* _35623_ident, jule::Bool _35635_binded) {
	jule::Ptr<_1c672acb3_Var> _3617_v = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67da768_FindVar((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3617_v != nullptr)) {
		return jule::Any(_3617_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c67baade_TypeAlias> _3667_ta = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dab64_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3667_ta != nullptr)) {
		return jule::Any(_3667_ta, &__jule_any_type27);;
	};
	if ((!(_35635_binded))) {
		jule::Ptr<_1c66816a8_Enum> _3728_enm = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dbadd_FindEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3728_enm != nullptr)) {
			return jule::Any(_3728_enm, &__jule_any_type24);;
		};
		jule::Ptr<_1c6682db3_TypeEnum> _3778_tenm = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dbe2e_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35623_ident)));;
		if ((_3778_tenm != nullptr)) {
			return jule::Any(_3778_tenm, &__jule_any_type25);;
		};
	};
	jule::Ptr<_1c666a51b_Fn> _3837_f = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67db45b_FindFn((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3837_f != nullptr)) {
		return jule::Any(_3837_f, &__jule_any_type26);;
	};
	jule::Ptr<_1c6655803_Struct> _3887_s = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67db060_FindStruct((*(_self_))._field_lookup.data, (*(_35623_ident)), _35635_binded);;
	if ((_3887_s != nullptr)) {
		return jule::Any(_3887_s, &__jule_any_type23);;
	};
	return _1c678d782_findBuiltins(_self_, _35623_ident);;
}



inline jule::Ptr<_1c6671687_ReferenceStack> _1c678de14_getOwnerRefers(_1c678a87d_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d72d8387:;
			{
				return _1c66be251_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
			}
		}
		else {
			_case_begin_1d72d6c26:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1d72d6bb0:;
	};
	return nullptr;;
}



inline void _1d730145a_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _41437_ref) {
	jule::Ptr<_1c6671687_ReferenceStack> _4157_refers = _1c678de14_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1d7303a34_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1c667249b_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type7));
	};
}

inline void _1d7317a15_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _41437_ref) {
	jule::Ptr<_1c6671687_ReferenceStack> _4157_refers = _1c678de14_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1d7319d58_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1c667249b_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type8));
	};
}

inline void _1d7404360_pushReference(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns>* _41437_ref) {
	jule::Ptr<_1c6671687_ReferenceStack> _4157_refers = _1c678de14_getOwnerRefers(_self_);;
	if (((_4157_refers != nullptr) && (!(_1d740695b_Exist(_4157_refers, (*(_41437_ref))))))) {
		_1c667249b_Push(_4157_refers, jule::Any((*(_41437_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c678e50d__evalEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _42125_enm) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42125_enm, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c678e909_evalEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _43028_enm, jule::Ptr<_1c661e327_Token> _43040_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43028_enm))._field_Public, (*_43028_enm.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _43040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43028_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c678e50d__evalEnum(_self_, _43028_enm);;
}



inline jule::Ptr<_1c6788b56_Data> _1c678ec4a__evalTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _43929_enm) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_43929_enm, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6790146_evalTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _44832_enm, jule::Ptr<_1c661e327_Token> _44848_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44832_enm))._field_Public, (*_44832_enm.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _44848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44832_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c678ec4a__evalTypeEnum(_self_, _44832_enm);;
}



inline jule::Ptr<_1c6788b56_Data> _1c6790487__evalStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns> _45727_s) {
	jule::Ptr<_1c6788b56_Data> _4587_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45727_s, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45727_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if ((((*(_45727_s))._field_Decl != nullptr) && (*(*(_45727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4587_d))._field_Kind))._field_BindIdent=(*(*(_45727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4587_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6790883_evalStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c6655803_Struct> _47130_s, jule::Ptr<_1c661e327_Token> _47146_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_47130_s))._field_Public, (*_47130_s.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _47146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_47130_s.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c6791037_checkDeprecated(_self_, &((*_47130_s.alloc)._field_Directives), _47146_errorToken);
	jule::Ptr<_1c665865d_StructIns> _4807_ins = _1c6655c98_instance(_47130_s);;
	if (((*_47130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1c665865d_StructIns> _4878_exist = _1c66560a6_appendInstance(_47130_s, &(_4807_ins));;
		if ((_4878_exist != nullptr)) {
			_4807_ins=_4878_exist;
		} else {
			if ((!(_1c6723e43_precheckStructIns((*(_self_))._field_s, &(_4807_ins), _47146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1c6790487__evalStruct(_self_, _4807_ins);;
}



inline jule::Ptr<_1c6788b56_Data> _1c6790bc4_evalFnIns(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns> _50025_f) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_50025_f, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_50025_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline void _1c6791037_checkDeprecated(_1c678a87d_eval* _self_, jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _50936_directives, jule::Ptr<_1c661e327_Token> _50967_tok) {
	if (_1c678b906_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c6633d20_Directive> _5143_d = _1c67b3158_findDirective(_50936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_5143_d != nullptr)) {
		if (((*_5143_d.alloc)._field_Args.len() == 0LL)) {
			_1c678ae11_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1c678ae11_pushErr(_self_, _50967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_5143_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c6791433_evalFn(_1c678a87d_eval* _self_, jule::Ptr<_1c666a51b_Fn> _52526_f, jule::Ptr<_1c661e327_Token> _52534_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_52526_f))._field_Public, (*_52526_f.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _52534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52526_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c6791037_checkDeprecated(_self_, &((*_52526_f.alloc)._field_Directives), _52534_errorToken);
	jule::Ptr<_1c666d4ec_FnIns> _5347_ins = _1c666bcae_instance(_52526_f);;
	if (((*_52526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1c666d4ec_FnIns> _5418_exist = _1c666c0bc_appendInstance(_52526_f, &(_5347_ins));;
		if ((_5418_exist != nullptr)) {
			_5347_ins=_5418_exist;
		};
	};
	_1d730145a_pushReference(_self_, &(_5347_ins));
	return _1c6790bc4_evalFnIns(_self_, _5347_ins);;
}



inline void _1c6791851_pushIllegalCycleError(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _55038_v1, jule::Ptr<_1c672acb3_Var>* _55049_v2, _20759e353_StrBuilder* _55064_message) {
	;
	jule::Str _5523_refers_to = _20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_55038_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_55049_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5533_buf = _2075a93e6_Buf(_55064_message);;
	_2075a814d_WriteStr(_55064_message, _208768cd0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2075a814d_WriteStr(_55064_message, _5523_refers_to);
	_2075a8406_WriteByte(_55064_message, '\n');
	_2075a7d95_Write(_55064_message, _5533_buf);
}



inline jule::Bool _1c6791c4c_checkCrossCycle(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _56032_v, _20759e353_StrBuilder* _56046_message) {
	{
		auto expr = &((*((*(_56032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7307e01:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> *_56110_d = it;
			{
				if (((*(_56110_d)) == (*(_self_))._field_owner)) {
					_1c6791851_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
				if ((!(_1c6791c4c_checkCrossCycle(_self_, _56110_d, _56046_message)))) {
					_1c6791851_pushIllegalCycleError(_self_, _56032_v, _56110_d, _56046_message);
					return false;;
				};
			}
			_iter_next_1d7307e01:;
			++it;
			goto _iter_begin_1d7307e01;
		}
		_iter_end_1d7307e01:;
	};
	return true;;
}



inline jule::Bool _1c6792148_checkIllegalCycles(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var>* _57739_v, jule::Ptr<_1c661e327_Token> _57748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57739_v)))) {
		_1c678ae11_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_20759e353_StrBuilder _5907_message = static__2075a7c41_New(32LL);;
	if ((!(_1c6791c4c_checkCrossCycle(_self_, _57739_v, &(_5907_message))))) {
		jule::Str _5938_errMsg = _2075a8945_Str(&_5907_message);;
		_2075a8b43_Clear(&_5907_message);
		_1c6791851_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57739_v, &(_5907_message));
		_5938_errMsg+=_2075a8945_Str(&_5907_message);
		_1c678ae11_pushErr(_self_, _57748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5938_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_57739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6792544_evalVar(_1c678a87d_eval* _self_, jule::Ptr<_1c672acb3_Var> _60527_v, jule::Ptr<_1c661e327_Token> _60536_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_60527_v))._field_Public, (*_60527_v.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c6791037_checkDeprecated(_self_, &((*_60527_v.alloc)._field_Directives), _60536_errorToken);
	if (((*_60527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1d732019e;
	};
	(*_60527_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3)) {
			_case_begin_1d7311b85:;
			{
				jule::Bool _6244_ok = _1c6792148_checkIllegalCycles(_self_, &(_60527_v), _60536_errorToken);;
				if ((!(_6244_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d7311239:;
			{
				jule::Ptr<_1c66ba857_scopeChecker> _6298_s = (*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0);;
				jule::Ptr<_1c66ba857_scopeChecker> _6308_root = _1c66bdc34_getRoot(_6298_s);;
				if ((((*(_6308_root))._field_captured != nullptr) && _1c67b8e83_isVarCaptured(_6308_root, _6298_s, _60527_v))) {
					_1c66bd99d_pushCaptured(_6308_root, &(_60527_v));
				};
				if (((!((*_60527_v.alloc)._field_Reference)) || _1c678b906_isUnsafe(_self_))) {
					goto _match_end_1d7311aec;
				};
				while ((((*_6298_s.alloc)._field_owner == nullptr) && ((*_6298_s.alloc)._field_parent != nullptr))) {
					{
						_6298_s=(*_6298_s.alloc)._field_parent;
					}
				_iter_next_1d73150c8:;
				}
				_iter_end_1d73150c8:;;
				if (((((*_6298_s.alloc)._field_owner != nullptr) && (*((*_6298_s.alloc)._field_owner))._field_Anon) && ((*_60527_v.alloc)._field_Scope != (*((*_6298_s.alloc)._field_owner))._field_Scope))) {
					_1c678ae11_pushErr(_self_, _60536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_60527_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1d7311aec:;
	};
	if (((*_60527_v.alloc)._field_Scope == nullptr)) {
		_1d7317a15_pushReference(_self_, &(_60527_v));
	};
	if (((((!((*_60527_v.alloc)._field_Binded)) && (*_60527_v.alloc)._field_Constant) && ((*_60527_v.alloc)._field_Scope == nullptr)) && (((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1c678348b_SymbolTable> _6568_varfile = _1c66d3485_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1c678348b_SymbolTable> _6578_file = _1c670907c_getCurrentFile((*(_self_))._field_s);;
		_1c6709335_setCurrentFile((*(_self_))._field_s, _6568_varfile);
		_1c672233c_checkVar((*(_self_))._field_s, &(_60527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3));
		_1c6709335_setCurrentFile((*(_self_))._field_s, _6578_file);
		if ((((*_60527_v.alloc)._field_Value == nullptr) || ((*((*_60527_v.alloc)._field_Value))._field_Data == nullptr))) {
			return nullptr;;
		};
	};
	if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_60527_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		jule::Ptr<_1c678348b_SymbolTable> _6868_varfile = _1c66d3485_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_60527_v));;
		jule::Ptr<_1c678348b_SymbolTable> _6878_file = _1c670907c_getCurrentFile((*(_self_))._field_s);;
		_1c6709335_setCurrentFile((*(_self_))._field_s, _6868_varfile);
		_1c672233c_checkVar((*(_self_))._field_s, &(_60527_v), (*(_self_))._field_lookup);
		_1c6709335_setCurrentFile((*(_self_))._field_s, _6878_file);
		if ((((*_60527_v.alloc)._field_Kind == nullptr) || ((*((*_60527_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1d732019e:;
	jule::Ptr<_1c6788b56_Data> _7027_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*((*_60527_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_60527_v.alloc)._field_Mutable, ._field_Reference=(*_60527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_60527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_60527_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if ((((!((*_60527_v.alloc)._field_Binded)) && _1c672b1c0_IsInitialized(_60527_v)) && ((*((*_60527_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_7027_d))._field_IsRune=(*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_60527_v.alloc)._field_Constant && ((*((*((*_60527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_7027_d.alloc)._field_Constant=jule::new_ptr<_1dd71e850_Const>((*(*((*((*(_60527_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_7027_d.alloc)._field_Model=jule::Any((*_7027_d.alloc)._field_Constant, &__jule_any_type20);
		if (_1c672b6dc_untypedConstant(_60527_v)) {
			_1c678be9a_applyNumericPrefix(_self_, &(_7027_d));
			(*_7027_d.alloc)._field_untyped=true;
		};
	};
	return _7027_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6792940_evalTypeAlias(_1c678a87d_eval* _self_, jule::Ptr<_1c67baade_TypeAlias> _72633_ta, jule::Ptr<_1c661e327_Token> _72649_errorToken) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_72633_ta))._field_Public, (*_72633_ta.alloc)._field_Token)))) {
		_1c678ae11_pushErr(_self_, _72649_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_72633_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_72633_ta.alloc)._field_Used=true;
	jule::Trait _7357_kind = (*((*((*_72633_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1c6788b56_Data> _73611_d = nullptr;;
	{
		auto &_match_expr{ _7357_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)) {
			_case_begin_1d732d5db:;
			{
				_73611_d=_1c6790487__evalStruct(_self_, _7357_kind.cast_ptr<_1c665865d_StructIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3)) {
			_case_begin_1d73313ad:;
			{
				_73611_d=_1c678e50d__evalEnum(_self_, _7357_kind.cast_ptr<_1c66816a8_Enum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)) {
			_case_begin_1d7331842:;
			{
				_73611_d=_1c678ec4a__evalTypeEnum(_self_, _7357_kind.cast_ptr<_1c6682db3_TypeEnum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1d732bee1:;
			{
				_73611_d=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_72633_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});
				if ((*_72633_ta.alloc)._field_Binded) {
					(*((*(_73611_d))._field_Kind))._field_BindIdent=(*_72633_ta.alloc)._field_Ident;
				} else {
					(*((*(_73611_d))._field_Kind))._field_BindIdent=(*(*((*(_72633_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_73611_d))._field_Model=jule::Any((*_73611_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		_match_end_1d732bd6a:;
	};
	(*((*(_73611_d))._field_Kind))._field_Generic=(*_72633_ta.alloc)._field_Generic;
	return _73611_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6792d3b_evalDef(_1c678a87d_eval* _self_, jule::Any* _76528_def, jule::Ptr<_1c661e327_Token> _76542_ident) {
	{
		auto &_match_expr{ (*(_76528_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d733512b:;
			{
				return _1c6792544_evalVar(_self_, (*(_76528_def)).cast_ptr<_1c672acb3_Var>(&__jule_any_type8), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1d7334dea:;
			{
				return _1c678e909_evalEnum(_self_, (*(_76528_def)).cast_ptr<_1c66816a8_Enum>(&__jule_any_type24), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1d7335192:;
			{
				return _1c6790146_evalTypeEnum(_self_, (*(_76528_def)).cast_ptr<_1c6682db3_TypeEnum>(&__jule_any_type25), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d7335208:;
			{
				return _1c6790883_evalStruct(_self_, (*(_76528_def)).cast_ptr<_1c6655803_Struct>(&__jule_any_type23), _76542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1d733526e:;
			{
				jule::Ptr<_1c666a51b_Fn> _7768_f = (*(_76528_def)).cast_ptr<_1c666a51b_Fn>(&__jule_any_type26);;
				if ((!(*(_7768_f))._field_Ident.equal("init", 4))) {
					return _1c6791433_evalFn(_self_, _7768_f, _76542_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d73352e6:;
			{
				return _1c6790bc4_evalFnIns(_self_, (*(_76528_def)).cast_ptr<_1c666d4ec_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d733536d:;
			{
				return _1c6792940_evalTypeAlias(_self_, (*(_76528_def)).cast_ptr<_1c67baade_TypeAlias>(&__jule_any_type27), _76542_ident);;
			}
		}
		_match_end_1d733502c:;
	};
	_1c678ae11_pushErr(_self_, _76542_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_76542_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c6788b56_Data> _1c679317c_evalIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c663a552_IdentExpr> _78929_ident) {
	jule::Any _7907_def = _1c678db7d_getDef(_self_, &((*(_78929_ident))._field_Ident), (*_78929_ident.alloc)._field_Binded);;
	return _1c6792d3b_evalDef(_self_, &(_7907_def), (*_78929_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1c6788b56_Data> _1c67934bd_evalUnary(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663ace4_UnaryExpr> _79430_u) {
	_1c67a9b77_unaryEval _7957_unary = static__1c67aa0ea_new(_self_);;
	return _1c67ab52a_eval(&_7957_unary, _79430_u);;
}



inline jule::Ptr<_1c6788b56_Data> _1c679380e_evalVariadic(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663b1bd_VariadicExpr> _79933_v) {
	if (((*(_79933_v))._field_Expr == nullptr)) {
		_1c678ae11_pushErr(_self_.ptr(), (*_79933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _8057_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_8057_prefix;
	});;
	jule::Ptr<_1c6788b56_Data> _8097_d = _1c67a96e3_evalExpr(_self_, (*_79933_v.alloc)._field_Expr);;
	if ((_8097_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c67bdd01_Variadicable((*(_8097_d))._field_Kind.ptr())))) {
		_1c678ae11_pushErr(_self_, (*_79933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_8097_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1c67b8a54_makeVariadic(&(_8097_d), (*(_1c67c00dd_Slc((*(_8097_d))._field_Kind)))._field_Elem);
	return _8097_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6793b50_evalUnsafe(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663a09b_UnsafeExpr> _82131_u) {
	jule::Bool _8223_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1c6788b56_Data> _8247_d = _1c67a96e3_evalExpr(_self_, (*(_82131_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_8223_unsafety;
	return _8247_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c6793e91_evalArr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _82928_s) {
	jule::Ptr<_1c67cb319_Arr> _8317_pt = _1c67bed57_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1c67cb319_Arr> _8337_arr = jule::new_ptr<_1c67cb319_Arr>(_1c67cb319_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_8317_pt))._field_Elem});;
	jule::Bool _8397_filled = false;;
	if (((*(_82928_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_82928_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1d734568b:;
				{
					if (((*((*((*(_82928_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1c663b1bd_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1d73455d1;
					};
					if ((*_8317_pt.alloc)._field_Auto) {
						_1c678ae11_pushErr(_self_, (*_82928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8397_filled=true;
					((*(_82928_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1d73455d1:;
		};
	};
	(*(_8337_arr))._field_N=(*_82928_s.alloc)._field_Exprs.len();
	if ((!((*_8317_pt.alloc)._field_Auto))) {
		if (((*_8337_arr.alloc)._field_N > (*_8317_pt.alloc)._field_N)) {
			_1c678ae11_pushErr(_self_, (*_82928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_8337_arr.alloc)._field_N < (*_8317_pt.alloc)._field_N)) {
			(*_8337_arr.alloc)._field_N=(*_8317_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1c6662d0a_ArrayExprModel> _8687_model = jule::new_ptr<_1c6662d0a_ArrayExprModel>(_1c6662d0a_ArrayExprModel{._field_Kind=_8337_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8397_filled) {
		(*(_8687_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8687_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_82928_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _8777_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8337_arr.alloc)._field_Elem;
	{
		auto expr = &((*_82928_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d734c6a4:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _87915_elem = *it;
			{
				jule::Ptr<_1c6788b56_Data> _8808_d = _1c67a96e3_evalExpr(_self_, _87915_elem);;
				if ((_8808_d == nullptr)) {
					goto _iter_next_1d734c6a4;
				};
				;
				if (_1c6717057_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8337_arr.alloc)._field_Elem), &(_8808_d), &((*(_87915_elem))._field_Token))) {
					_1c67127c2_checkAssignType((*(_self_))._field_s, false, &((*_8337_arr.alloc)._field_Elem), &(_8808_d), (*_87915_elem.alloc)._field_Token, _1c678de14_getOwnerRefers(_self_));
				};
				(*(_8687_model))._field_Elems=jule::append((*_8687_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8808_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1d734c6a4:;
			++it;
			goto _iter_begin_1d734c6a4;
		}
		_iter_end_1d734c6a4:;
	};
	(*_self_.alloc)._field_prefix=_8777_prefix;
	if (_8397_filled) {
		(*_8687_model.alloc)._field_Elems=jule::append((*_8687_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8337_arr, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8687_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6794447_evalExpSlc(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _90631_s, jule::Ptr<_1c67bb8d1_TypeKind> _90650_t, jule::Any _90668_first) {
	jule::Ptr<_1c67c8ee8_Slc> _9077_slc = jule::new_ptr<_1c67c8ee8_Slc>(_1c67c8ee8_Slc{._field_Elem=_90650_t});;
	jule::I64 _9117_i = 0LL;;
	jule::Ptr<_1c665edc3_SliceExprModel> _9127_model = jule::new_ptr<_1c665edc3_SliceExprModel>(_1c665edc3_SliceExprModel{._field_ElemKind=_90650_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_90631_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_90668_first != nullptr)) {
		(*(_9127_model))._field_Elems=jule::append((*_9127_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90668_first; __jule_collection; }));
		_9117_i=1LL;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _9217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_9077_slc))._field_Elem;
	{
		auto expr = (*_90631_s.alloc)._field_Exprs.slice(_9117_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d73584e5:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _92315_elem = *it;
			{
				jule::Ptr<_1c6788b56_Data> _9248_d = _1c67a96e3_evalExpr(_self_, _92315_elem);;
				if ((_9248_d != nullptr)) {
					;
					if (_1c6717057_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_9077_slc.alloc)._field_Elem), &(_9248_d), &((*(_92315_elem))._field_Token))) {
						_1c67127c2_checkAssignType((*(_self_))._field_s, false, &((*_9077_slc.alloc)._field_Elem), &(_9248_d), (*_92315_elem.alloc)._field_Token, _1c678de14_getOwnerRefers(_self_));
					};
					(*_9127_model.alloc)._field_Elems=jule::append((*_9127_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9248_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1d73584e5:;
			++it;
			goto _iter_begin_1d73584e5;
		}
		_iter_end_1d73584e5:;
	};
	(*_self_.alloc)._field_prefix=_9217_prefix;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9077_slc, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9127_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c6794788_evalSliceExpr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664028d_SliceExpr> _94434_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1c67bed57_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1d735d231:;
				{
					return _1c6793e91_evalArr(_self_, _94434_s);;
				}
			}
			else if ((_1c67c00dd_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1d735d2ca:;
				{
					jule::Ptr<_1c67c8ee8_Slc> _9509_pt = _1c67c00dd_Slc((*(_self_))._field_prefix);;
					return _1c6794447_evalExpSlc(_self_, _94434_s, (*(_9509_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1d735d176:;
		};
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _9557_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_94434_s))._field_Exprs.len() == 0LL)) {
		_1c678ae11_pushErr(_self_, (*_94434_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _9637_firstExpr = (*_94434_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1c6788b56_Data> _9647_firstElem = _1c67a96e3_evalExpr(_self_, _9637_firstExpr);;
	if ((_9647_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1c6717057_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9647_firstElem))._field_Kind), &(_9647_firstElem), &((*(_9637_firstExpr))._field_Token));
	jule::Ptr<_1c6788b56_Data> _9747_d = _1c6794447_evalExpSlc(_self_, _94434_s, (*(_9647_firstElem))._field_Kind, (*(_9647_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_9557_prefix;
	return _9747_d;;
}



inline jule::Bool _1c6794b84_checkIntegerIndexingByData(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _98047_d, jule::Ptr<_1c661e327_Token> _98061_token) {
	jule::Str _9813_errKey = _1c67b6436_checkDataForIntegerIndexing(&((*(_self_))._field_s), _98047_d, &(_98061_token), _1c678de14_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9813_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1d736638d:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1d736606e:;
			{
				_1c678ae11_pushErr(_self_, _98061_token, _9813_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_98047_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1d73658ba:;
			{
				_1c678ae11_pushErr(_self_, _98061_token, _9813_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1d7366008:;
	};
	return false;;
}



inline void _1c67950a2_indexingPtr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _99332_d, jule::Ptr<_1c6788b56_Data>* _99347_index, jule::Ptr<_1c6640bea_IndexingExpr>* _99366_i) {
	_1c6794b84_checkIntegerIndexingByData(_self_, _99347_index, (*((*(_99366_i))))._field_Token);
	(*((*(_99332_d))))._field_Lvalue=true;
	jule::Ptr<_1c67cbcdc_Ptr> _9977_ptr = _1c67be5a4_Ptr((*((*(_99332_d))))._field_Kind.ptr());;
	{
		
		if (_1c67cc859_IsUnsafe(_9977_ptr.ptr())) {
			_case_begin_1d736925e:;
			{
				_1c678ae11_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c678b906_isUnsafe(_self_)))) {
			_case_begin_1d73692e7:;
			{
				_1c678ae11_pushErr(_self_, (*((*(_99366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d73691b5:;
	};
	(*((*(_99332_d))))._field_Kind=(*(_9977_ptr))._field_Elem;
}



inline void _1c67954c0_indexingArr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _100932_d, jule::Ptr<_1c6788b56_Data>* _100947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _100966_i) {
	jule::Ptr<_1c67cb319_Arr> _10107_arr = _1c67bed57_Arr((*((*(_100932_d))))._field_Kind.ptr());;
	(*((*(_100932_d))))._field_Kind=(*(_10107_arr))._field_Elem;
	_1c6794b84_checkIntegerIndexingByData(_self_, _100947_index, (*((*(_100966_i))))._field_Token);
	(*((*(_100932_d))))._field_Lvalue=true;
	if ((_1c6789591_IsConst((*(_100947_index)).ptr()) && (_1dd722545_AsF64((*((*(_100947_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_10107_arr.alloc)._field_N)))) {
		_1c678ae11_pushErr(_self_, (*((*(_100966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1c67958dd_indexingSlc(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _101932_d, jule::Ptr<_1c6788b56_Data>* _101947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _101966_i) {
	jule::Ptr<_1c67c8ee8_Slc> _10207_slc = _1c67c00dd_Slc((*((*(_101932_d))))._field_Kind.ptr());;
	(*((*(_101932_d))))._field_Kind=(*(_10207_slc))._field_Elem;
	_1c6794b84_checkIntegerIndexingByData(_self_, _101947_index, (*((*(_101966_i))))._field_Token);
	(*((*(_101932_d))))._field_Lvalue=true;
	if ((!(_1c6789591_IsConst((*(_101947_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_101932_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1d7371981:;
			{
				jule::Ptr<_1c665edc3_SliceExprModel> _10318_m = (*((*(_101932_d))))._field_Model.unsafe_cast_ptr<_1c665edc3_SliceExprModel>();;
				jule::F64 _10324_indx = _1dd722545_AsF64((*((*(_101947_index))))._field_Constant.ptr());;
				if ((_10324_indx >= static_cast<jule::F64>((*(_10318_m))._field_Elems.len()))) {
					_1c678ae11_pushErr(_self_, (*((*(_101966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_101932_d))))._field_Model=(*(_10318_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_10324_indx))];
					(*((*(_101932_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1d737191a:;
	};
}



inline void _1c6795d0b_indexingMap(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _104232_d, jule::Ptr<_1c6788b56_Data>* _104247_index, jule::Ptr<_1c6640bea_IndexingExpr>* _104266_i) {
	(*((*(_104232_d))))._field_Lvalue=true;
	if (((*(_104247_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c67ca68c_Map> _10477_m = _1c67c0b27_Map((*((*(_104232_d))))._field_Kind.ptr());;
	_1c677226b_assignTypeChecker _10487_atc = _1c677226b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10477_m))._field_Key, ._field_d=(*(_104247_index)), ._field_errorToken=(*((*(_104266_i))))._field_Token, ._field_refers=_1c678de14_getOwnerRefers(_self_)};;
	_1c677326c_check(&_10487_atc);
	(*((*(_104232_d))))._field_Kind=(*_10477_m.alloc)._field_Val;
}



inline void _1c6796229_indexingStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _105932_d, jule::Ptr<_1c6788b56_Data>* _105947_index, jule::Ptr<_1c6640bea_IndexingExpr>* _105966_i) {
	(*((*(_105932_d))))._field_Kind=_1c68a349b_primU8;
	(*((*(_105932_d))))._field_Mutable=false;
	(*((*(_105932_d))))._field_Lvalue=true;
	if (((*(_105947_index)) == nullptr)) {
		return;;
	};
	_1c6794b84_checkIntegerIndexingByData(_self_, _105947_index, (*((*(_105966_i))))._field_Token);
	if ((!(_1c6789591_IsConst((*(_105947_index)).ptr())))) {
		(*((*(_105932_d))))._field_Constant=nullptr;
		(*((*(_105932_d))))._field_untyped=false;
		return;;
	};
	if (_1c6789591_IsConst((*(_105932_d)).ptr())) {
		jule::Ptr<_1c661e327_Token> _10774_errorToken = (*((*(_105966_i))))._field_Token;;
		jule::I64 _10784_j = _1dd722028_AsI64((*((*(_105947_index))))._field_Constant.ptr());;
		jule::Str _10794_s = _1dd721a0b_ReadStr((*((*(_105932_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10784_j) >= _10794_s.len())) {
			_1c678ae11_pushErr(_self_, _10774_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1dd722aa6_SetU64((*((*(_105932_d))))._field_Constant, static_cast<jule::U64>(_10794_s[_10784_j]));
		};
	};
}



inline void _1c6796647_comptimeRange(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _108834_d, jule::Ptr<_1c6788b56_Data>* _108849_index, jule::Ptr<_1c6640bea_IndexingExpr>* _108868_i) {
	if (((*(_108849_index)) == nullptr)) {
		(*(_108834_d))=nullptr;
		return;;
	};
	if ((!(_1c6794b84_checkIntegerIndexingByData(_self_, _108849_index, (*((*((*(_108868_i))))._field_Index))._field_Token)))) {
		(*(_108834_d))=nullptr;
		return;;
	};
	if ((!(_1c6789591_IsConst((*(_108849_index)).ptr())))) {
		(*(_108834_d))=nullptr;
		_1c678ae11_pushErr(_self_, (*(*((*(_108868_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I64 _11033_j = static_cast<jule::I64>(_1dd722028_AsI64((*((*(_108849_index))))._field_Constant.ptr()));;
	jule::Ptr<_1c66857de_comptimeRange> _11047_ci = _1c67c2431_comptimeRange((*((*(_108834_d))))._field_Kind.ptr());;
	if ((_11033_j >= ((_1c66855be_comptimeRangeKindMptrData*)(*(_11047_ci))._field_kind.safe_type())->_1c668546a_len((*(_11047_ci))._field_kind.data))) {
		(*(_108834_d))=nullptr;
		_1c678ae11_pushErr(_self_, (*(*((*(_108868_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1c66855be_comptimeRangeKindMptrData*)(*_11047_ci.alloc)._field_kind.safe_type())->_1c6684953_index((*_11047_ci.alloc)._field_kind.data, _108834_d, _11033_j);
}



inline void _1c6796a65_toIndexing(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _111331_d, jule::Ptr<_1c6788b56_Data>* _111346_index, jule::Ptr<_1c6640bea_IndexingExpr>* _111365_i) {
	{
		
		if ((_1c67be5a4_Ptr((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73884d1:;
			{
				_1c67950a2_indexingPtr(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1c67bed57_Arr((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d738857a:;
			{
				_1c67954c0_indexingArr(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1c67c00dd_Slc((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73885e1:;
			{
				_1c67958dd_indexingSlc(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1c67c0b27_Map((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7388657:;
			{
				_1c6795d0b_indexingMap(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		else if ((_1c67be087_Prim((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73886bd:;
			{
				jule::Ptr<_1c67c49e9_Prim> _11284_prim = _1c67be087_Prim((*((*(_111331_d))))._field_Kind);;
				{
					
					if (_1c67c7eb4_IsStr(_11284_prim.ptr())) {
						_case_begin_1d738cb12:;
						{
							_1c6796229_indexingStr(_self_, _111331_d, _111346_index, _111365_i);
							return;;
						}
					}
					_match_end_1d738ca57:;
				};
			}
		}
		else if ((_1c67c2431_comptimeRange((*((*(_111331_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7388745:;
			{
				_1c6796647_comptimeRange(_self_, _111331_d, _111346_index, _111365_i);
				return;;
			}
		}
		_match_end_1d738836b:;
	};
	_1c678ae11_pushErr(_self_, (*((*(_111365_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_111331_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c679701b_pushGenericsFromExprSubIdent(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663bd4a_SubIdentExpr>* _114150_sexpr, jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _11428_generics, jule::Ptr<_1c6638c37_Expr>* _114236_expr) {
	jule::Ptr<_1c66352c7_SubIdentTypeDecl> _11437_t = jule::new_ptr<_1c66352c7_SubIdentTypeDecl>(_1c66352c7_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>>(nullptr)});;
	if ((!(_1c67b74ae_pushSubIdentFromExpr(jule::Any((*(_114150_sexpr)), &__jule_any_type89), &(_11437_t))))) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*(_114236_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_11428_generics)); __jule_push_dest.push(jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Kind=jule::Any(_11437_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1c6797417_pushGenericsFromData(jule::Ptr<_1c678a87d_eval> _self_, jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _115242_generics, jule::Ptr<_1c6638c37_Expr>* _115270_expr) {
	{
		auto &_match_expr{ (*((*(_115270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1d73946da:;
			{
				jule::Ptr<_1c663ace4_UnaryExpr> _11558_u = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1c663ace4_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11558_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1d7398854:;
						{
							jule::Ptr<_1c663642c_PtrTypeDecl> _11589_kind = jule::new_ptr<_1c663642c_PtrTypeDecl>(_1c663642c_PtrTypeDecl{._field_Elem=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _11599__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; });;
							_1c6797417_pushGenericsFromData(_self_, &(_11599__generics), &((*(_11558_u))._field_Expr));
							(*_11589_kind.alloc)._field_Elem=_11599__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*((*(_115270_expr))))._field_Token, ._field_Kind=jule::Any(_11589_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1d739a537:;
						{
							jule::Ptr<_1c663599d_SptrTypeDecl> _11679_kind = jule::new_ptr<_1c663599d_SptrTypeDecl>(_1c663599d_SptrTypeDecl{._field_Elem=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _11689__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; });;
							_1c6797417_pushGenericsFromData(_self_, &(_11689__generics), &((*(_11558_u))._field_Expr));
							(*_11679_kind.alloc)._field_Elem=_11689__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*((*(_115270_expr))))._field_Token, ._field_Kind=jule::Any(_11679_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1d7399190:;
						{
							_1c678ae11_pushErr(_self_.ptr(), (*(_11558_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1d739847a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d7395a2c:;
			{
				{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push((*((*(_115270_expr))))._field_Kind.cast_ptr<_1c6634903_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d7395a93:;
			{
				jule::Ptr<_1c663bd4a_SubIdentExpr> _11828_sexpr = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1c663bd4a_SubIdentExpr>();;
				return _1c679701b_pushGenericsFromExprSubIdent(_self_, &(_11828_sexpr), _115242_generics, _115270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d7393a19:;
			{
				jule::Ptr<_1c663a552_IdentExpr> _11858_ident = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1c663a552_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*_11858_ident.alloc)._field_Token, ._field_Ident=(*_11858_ident.alloc)._field_Ident, ._field_Binded=(*(_11858_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1d7393a80:;
			{
				{
					auto expr = &((*((*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1c663982b_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d73a47e9:;
					if (it != expr_end) {
						jule::Ptr<_1c6638c37_Expr> _119416_texpr = *it;
						{
							if ((!(_1c6797417_pushGenericsFromData(_self_, _115242_generics, &(_119416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1d73a47e9:;
						++it;
						goto _iter_begin_1d73a47e9;
					}
					_iter_end_1d73a47e9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1d7393ae6:;
			{
				jule::Ptr<_1c663b971_NsSelectionExpr> _12008_ns = (*((*(_115270_expr))))._field_Kind.unsafe_cast_ptr<_1c663b971_NsSelectionExpr>();;
				jule::Ptr<_1c663500d_IdentTypeDecl> _12018_decl = jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*(_12008_ns))._field_Ident, ._field_Ident=(*((*_12008_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*(_115242_generics)); __jule_push_dest.push(jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*(_12018_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c66356a1_NamespaceTypeDecl>(_1c66356a1_NamespaceTypeDecl{._field_Idents=(*_12008_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*_12018_decl.alloc)._field_Token, ._field_Kind=jule::Any(_12018_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1d7391d03:;
			{
				_1c678ae11_pushErr(_self_.ptr(), (*((*(_115270_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1d7391c8c:;
	};
	return true;;
}



inline void _1c679777a_evalIdentDeclFromIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6788b56_Data>* _122247_d, jule::Ptr<_1c6640bea_IndexingExpr>* _122262_i) {
	jule::Ptr<_1c665865d_StructIns> _12237_s = _1c67c060a_Struct((*((*(_122247_d))))._field_Kind.ptr());;
	if ((_12237_s == nullptr)) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*((*(_122262_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_122247_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_122247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c663500d_IdentTypeDecl> _123011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d73b1927:;
			{
				jule::Ptr<_1c663a552_IdentExpr> _12338_expr = (*((*((*(_122262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c663a552_IdentExpr>();;
				_123011_decl=jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*_12338_expr.alloc)._field_Token, ._field_Ident=(*_12338_expr.alloc)._field_Ident, ._field_Binded=(*(_12338_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1d73b2d57:;
			{
				jule::Ptr<_1c663b971_NsSelectionExpr> _12408_expr = (*((*((*(_122262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c663b971_NsSelectionExpr>();;
				_123011_decl=jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*(_12408_expr))._field_Ident, ._field_Ident=(*((*_12408_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1d73b1d9a:;
			{
				_1c678ae11_pushErr(_self_, (*((*(_122262_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_122247_d))=nullptr;
				return;;
			}
		}
		_match_end_1d73b1d34:;
	};
	if ((!(_1c6797417_pushGenericsFromData(_self_, &((*(_123011_decl))._field_Generics), &((*((*(_122262_i))))._field_Index))))) {
		(*(_122247_d))=nullptr;
		return;;
	};
	_12237_s=({ auto _wrap_copy = _1c679e276_typeChecker(_self_); _1c67d3167_fromStruct(&_wrap_copy, &(_123011_decl), &((*(_12237_s))._field_Decl)); });
	if ((_12237_s == nullptr)) {
		(*(_122247_d))=nullptr;
		return;;
	};
	(*(*((*(_122247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12237_s, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1c6797c31_checkGenericFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c666d4ec_FnIns>* _126536_f, jule::Ptr<_1c661e327_Token>* _126552_et, jule::Any* _126569_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c666d4ec_FnIns> _12667_old = (*(_126536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6722d32_checkGenericFn((*(_self_))._field_s, _126536_f, _126552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1c67b713a_updateModelToGenericIns(_126569_model, _126536_f);
		_1d73b9b0b_updateRefer(_1c678de14_getOwnerRefers(_self_), &(_12667_old), _126536_f);
	};
	return __jule_func_result;;
}



inline void _1c6798094_evalFnGenericFromIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6788b56_Data>* _128147_d, jule::Ptr<_1c6640bea_IndexingExpr>* _128162_i) {
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _12827_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1c6797417_pushGenericsFromData(_self_, &(_12827_generics), &((*((*(_128162_i))))._field_Index))))) {
		(*(_128147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _12887_f = _1c67c0374_Fn((*((*(_128147_d))))._field_Kind.ptr());;
	jule::I64 _12897_genericsLen = 0LL;;
	if (((*(_12887_f))._field_Decl != nullptr)) {
		_12897_genericsLen=(*(*(_12887_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1c670ac82_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12897_genericsLen, _12827_generics.len(), (*((*((*(_128162_i))))._field_Expr))._field_Token)))) {
		(*(_128147_d))=nullptr;
		return;;
	};
	(*_12887_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(0LL, (*(*(_12887_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67b9eea_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12827_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d73c076b:;
		if (it != expr_end) {
			jule::Ptr<_1c6634903_TypeDecl> _130015_g = *it;
			{
				jule::Ptr<_1c6788b56_Data> _13018_k = _1c679e5b7_evalType(_self_, _130015_g);;
				if ((_13018_k == nullptr)) {
					(*(_128147_d))=nullptr;
					return;;
				};
				(*_12887_f.alloc)._field_Generics=jule::append((*_12887_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=(*(_13018_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1d73c076b:;
			++it;
			goto _iter_begin_1d73c076b;
		}
		_iter_end_1d73c076b:;
	};
	if (_1c666e9b5_IsBuiltin(_12887_f)) {
		return;;
	};
	jule::Bool _13133_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6797c31_checkGenericFn(_self_, &(_12887_f), &((*(*((*(_128162_i))))._field_Expr.alloc)._field_Token), &((*((*(_128147_d))))._field_Model));
		_13133_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_13133_ok) {
		(*(*((*(_128147_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_12887_f, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1);
	} else {
		(*(_128147_d))=nullptr;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67983d5_evalIndexing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6640bea_IndexingExpr> _132133_i) {
	jule::Ptr<_1c67bb8d1_TypeKind> _13227_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13227_prefix;
	});;
	jule::Ptr<_1c6788b56_Data> _13267_d = _1c67a88ce_evalExprKind(_self_, (*((*(_132133_i))._field_Expr))._field_Kind);;
	if ((_13267_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13267_d))._field_Decl) {
		_1c679777a_evalIdentDeclFromIndexing(_self_, &(_13267_d), &(_132133_i));
		return _13267_d;;
	};
	if ((_1c67c0374_Fn((*(_13267_d))._field_Kind.ptr()) != nullptr)) {
		_1c6798094_evalFnGenericFromIndexing(_self_, &(_13267_d), &(_132133_i));
		return _13267_d;;
	};
	_1c6788b56_Data _13427_oldData = (*(_13267_d));;
	jule::Ptr<_1c6788b56_Data> _13447_index = _1c67a96e3_evalExpr(_self_, (*_132133_i.alloc)._field_Index);;
	if ((_13447_index == nullptr)) {
		return nullptr;;
	};
	_1c66cd2d7_makeComptimeRange(&(_13267_d));
	(*(_13267_d))._field_Decl=false;
	_1c6796a65_toIndexing(_self_, &(_13267_d), &(_13447_index), &(_132133_i));
	if ((_13267_d == nullptr)) {
		return nullptr;;
	};
	if (_1c6789591_IsConst(_13267_d.ptr())) {
		(*(_13267_d))._field_Decl=false;
		(*(_13267_d))._field_Model=jule::Any((*(_13267_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_13267_d))._field_Decl) {
		(*(_13267_d))._field_Decl=false;
	} else {
		(*(_13267_d))._field_Model=jule::Any(jule::new_ptr<_1c6660379_IndexingExprModel>(_1c6660379_IndexingExprModel{._field_Token=(*_132133_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1c6788b56_Data>(_13427_oldData), ._field_Index=_13447_index}), &__jule_any_type53);
	};
	return _13267_d;;
}



inline __jule_tuple_x_1c6788b56_Data__jule_tuple_x_1c6788b56_Data _1c6798726_evalSlicingExprs(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664135a_SlicingExpr>* _138138_s) {
	__jule_tuple_x_1c6788b56_Data__jule_tuple_x_1c6788b56_Data __jule_func_result;
	jule::Ptr<_1c67bb8d1_TypeKind> _13827_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13827_prefix;
	});;
	jule::Ptr<_1c6788b56_Data> _138611_l = nullptr;;
	jule::Ptr<_1c6788b56_Data> _138711_r = nullptr;;
	if (((*((*(_138138_s))))._field_Start != nullptr)) {
		_138611_l=_1c67a96e3_evalExpr(_self_, (*((*(_138138_s))))._field_Start);
		if ((_138611_l != nullptr)) {
			_1c6794b84_checkIntegerIndexingByData(_self_, &(_138611_l), (*((*(_138138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_138611_l=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd71ecc3_NewI64(0LL)});
		(*((*(_138611_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_138611_l.alloc)._field_Model=jule::Any((*_138611_l.alloc)._field_Constant, &__jule_any_type20);
	};
	if (((*((*(_138138_s))))._field_To != nullptr)) {
		_138711_r=_1c67a96e3_evalExpr(_self_, (*((*(_138138_s))))._field_To);
		if ((_138711_r != nullptr)) {
			_1c6794b84_checkIntegerIndexingByData(_self_, &(_138711_r), (*((*(_138138_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _138611_l;
	__jule_func_result.__jule_result_arg1 = _138711_r;
	return __jule_func_result;;
}



inline void _1c67989ce_slicingArr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _141727_d) {
	jule::Ptr<_1c67bb8d1_TypeKind> _14187_elemType = (*(_1c67bed57_Arr((*((*(_141727_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_141727_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8ee8_Slc>(_1c67c8ee8_Slc{._field_Elem=_14187_elemType}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)});
	(*((*(_141727_d))))._field_Lvalue=false;
	(*((*(_141727_d))))._field_Mutable=((*((*(_141727_d))))._field_Mutable || (!(_1c67bd2b7_Mutable(_14187_elemType.ptr()))));
}



inline void _1c6798dec_slicingStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _143227_d, jule::Ptr<_1c6788b56_Data>* _143238_l, jule::Ptr<_1c6788b56_Data>* _143249_r) {
	(*((*(_143227_d))))._field_Lvalue=false;
	(*((*(_143227_d))))._field_Mutable=true;
	if ((!(_1c6789591_IsConst((*(_143227_d)).ptr())))) {
		return;;
	};
	if ((((*(_143238_l)) == nullptr) || ((*(_143249_r)) == nullptr))) {
		(*((*(_143227_d))))._field_Constant=nullptr;
		(*((*(_143227_d))))._field_untyped=false;
		return;;
	};
	if ((_1c6789591_IsConst((*(_143238_l)).ptr()) && _1c6789591_IsConst((*(_143249_r)).ptr()))) {
		jule::I64 _14464_left = _1dd722028_AsI64((*((*(_143238_l))))._field_Constant.ptr());;
		if ((_14464_left < 0LL)) {
			return;;
		};
		jule::Str _14514_s = _1dd721a0b_ReadStr((*((*(_143227_d))))._field_Constant);;
		jule::I64 _14528_right = static_cast<jule::I64>(0LL);;
		if (((*(_143249_r)) == nullptr)) {
			_14528_right=static_cast<jule::I64>(_14514_s.len());
		} else {
			_14528_right=_1dd722028_AsI64((*((*(_143249_r))))._field_Constant);
		};
		if ((_14464_left > _14528_right)) {
			return;;
		};
		_1dd723117_SetStr((*((*(_143227_d))))._field_Constant, _14514_s.slice(_14464_left, _14528_right));
		(*((*(_143227_d))))._field_Decl=true;
	} else {
		(*((*(_143227_d))))._field_Constant=nullptr;
		(*((*(_143227_d))))._field_untyped=false;
	};
}



inline void _1c67993c5_checkSlicing(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _147033_d, jule::Ptr<_1c6788b56_Data>* _147044_l, jule::Ptr<_1c6788b56_Data>* _147055_r, jule::Ptr<_1c664135a_SlicingExpr>* _147066_s) {
	{
		
		if ((_1c67bed57_Arr((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73dc656:;
			{
				_1c67989ce_slicingArr(_self_, _147033_d);
				return;;
			}
		}
		else if ((_1c67c00dd_Slc((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73dc700:;
			{
				return;;
			}
		}
		else if ((_1c67be087_Prim((*((*(_147033_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d73dc766:;
			{
				jule::Ptr<_1c67c49e9_Prim> _14784_prim = _1c67be087_Prim((*((*(_147033_d))))._field_Kind);;
				{
					
					if (_1c67c7eb4_IsStr(_14784_prim.ptr())) {
						_case_begin_1d73e003d:;
						{
							_1c6798dec_slicingStr(_self_, _147033_d, _147044_l, _147055_r);
							return;;
						}
					}
					_match_end_1d73dee83:;
				};
			}
		}
		_match_end_1d73dc524:;
	};
	_1c678ae11_pushErr(_self_, (*((*(_147066_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_147033_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1c6788b56_Data> _1c6799716_evalSlicing(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c664135a_SlicingExpr> _148932_s) {
	jule::Ptr<_1c6788b56_Data> _14907_d = _1c67a96e3_evalExpr(_self_, (*(_148932_s))._field_Expr);;
	if ((_14907_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c6788b56_Data> _14957_l;
	jule::Ptr<_1c6788b56_Data> _149514_r;
	({
		__jule_tuple_x_1c6788b56_Data__jule_tuple_x_1c6788b56_Data __jule_assign_result = _1c6798726_evalSlicingExprs(_self_, &(_148932_s));
		_14957_l = __jule_assign_result.__jule_result_arg0;
		_149514_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14957_l == nullptr)) {
		return _14907_d;;
	};
	(*(_14907_d))._field_Decl=false;
	_1c67993c5_checkSlicing(_self_, &(_14907_d), &(_14957_l), &(_149514_r), &(_148932_s));
	if (_1c6789591_IsConst(_14907_d.ptr())) {
		(*(_14907_d))._field_Decl=false;
		(*(_14907_d))._field_Model=jule::Any((*(_14907_d))._field_Constant, &__jule_any_type20);
	} else if ((*(_14907_d))._field_Decl) {
		(*(_14907_d))._field_Decl=false;
	} else {
		jule::Ptr<_1c6661666_SlicingExprModel> _15138_model = jule::new_ptr<_1c6661666_SlicingExprModel>(_1c6661666_SlicingExprModel{._field_Token=(*_148932_s.alloc)._field_Token, ._field_Expr=(*(_14907_d))._field_Model, ._field_Left=(*(_14957_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_149514_r != nullptr)) {
			(*(_15138_model))._field_Right=(*_149514_r.alloc)._field_Model;
		};
		(*(_14907_d))._field_Model=jule::Any(_15138_model, &__jule_any_type95);
	};
	return _14907_d;;
}



inline void _1c6799b34_castPtr(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _152627_t, jule::Ptr<_1c6788b56_Data> _152645_d, jule::Ptr<_1c661e327_Token> _152655_errorToken) {
	(*(_152645_d))._field_Constant=nullptr;
	(*_152645_d.alloc)._field_untyped=false;
	jule::Ptr<_1c67c8525_Sptr> _15293_sptr = _1c67be31d_Sptr((*_152645_d.alloc)._field_Kind.ptr());;
	if ((_15293_sptr != nullptr)) {
		if ((!(_1c67bc11d_Equal((*(_1c67be5a4_Ptr(_152627_t.ptr())))._field_Elem, (*_15293_sptr.alloc)._field_Elem)))) {
			_1c678ae11_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_152645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_152627_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1c678b906_isUnsafe(_self_)))) {
		_1c678ae11_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _15423_prim = _1c67be087_Prim((*(_152645_d))._field_Kind);;
	if (((_1c67be5a4_Ptr((*(_152645_d))._field_Kind) == nullptr) && ((_15423_prim == nullptr) || (!(_1dd71dc6c_IsInt(_1c67c4d6d_Str(_15423_prim.ptr()))))))) {
		_1c678ae11_pushErr(_self_, _152655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_152645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_152627_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1c679a052_castStruct(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _154830_t, jule::Ptr<_1c6788b56_Data> _154848_d, jule::Ptr<_1c661e327_Token> _154858_errorToken) {
	(*(_154848_d))._field_Constant=nullptr;
	(*_154848_d.alloc)._field_untyped=false;
	jule::Ptr<_1c667de9c_Trait> _15517_tr = _1c67c0891_Trait((*_154848_d.alloc)._field_Kind.ptr());;
	if ((_15517_tr == nullptr)) {
		_1c678ae11_pushErr(_self_, _154858_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_154848_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_154830_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _15577_s = _1c67c060a_Struct(_154830_t);;
	_1d7404360_pushReference(_self_, &(_15577_s));
	if ((!(_1c6656e75_IsImplements((*(_15577_s))._field_Decl.ptr(), _15517_tr)))) {
		_1c678ae11_pushErr(_self_, _154858_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_154848_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_154830_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1c679a470_castRef(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _156527_t, jule::Ptr<_1c6788b56_Data> _156545_d, jule::Ptr<_1c661e327_Token> _156555_errorToken) {
	(*(_156545_d))._field_Constant=nullptr;
	(*_156545_d.alloc)._field_untyped=false;
	jule::Ptr<_1c67c8525_Sptr> _15687_sptr = _1c67be31d_Sptr(_156527_t.ptr());;
	jule::Ptr<_1c67cbcdc_Ptr> _15707_ptr = _1c67be5a4_Ptr((*_156545_d.alloc)._field_Kind.ptr());;
	if (((_15707_ptr != nullptr) && _1c67bc11d_Equal((*(_15687_sptr))._field_Elem, (*_15707_ptr.alloc)._field_Elem))) {
		if ((!(_1c678b906_isUnsafe(_self_)))) {
			_1c678ae11_pushErr(_self_, _156555_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c67c060a_Struct((*(_15687_sptr))._field_Elem) != nullptr)) {
		_1c679a052_castStruct(_self_, (*_15687_sptr.alloc)._field_Elem, _156545_d, _156555_errorToken);
		return;;
	};
	_1c678ae11_pushErr(_self_, _156555_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_156545_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_156527_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1c679a88d_castSlc(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _158827_t, jule::Ptr<_1c6788b56_Data> _158845_d, jule::Ptr<_1c661e327_Token> _158855_errorToken) {
	jule::Ptr<_1dd71e850_Const> _15893_c = (*(_158845_d))._field_Constant;;
	(*_158845_d.alloc)._field_Constant=nullptr;
	(*_158845_d.alloc)._field_untyped=false;
	if ((_1c67be83a_Enum((*_158845_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1c67be087_Prim((*((*(_1c67be83a_Enum((*(_158845_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1c67c7eb4_IsStr(_1c67be087_Prim((*((*(_1c67be83a_Enum((*(_158845_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1c678ae11_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_158845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_158827_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1c67be087_Prim((*_158845_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1c67c7eb4_IsStr(_1c67be087_Prim((*(_158845_d))._field_Kind).ptr()))))) {
		_1c678ae11_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_158845_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_158827_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_158827_t=(*(_1c67c00dd_Slc(_158827_t.ptr())))._field_Elem;
	jule::Ptr<_1c67c49e9_Prim> _16043_prim = _1c67be087_Prim(_158827_t);;
	if (((_16043_prim == nullptr) || ((!(_1c67c6424_IsU8(_16043_prim.ptr()))) && (!(_1c67c5e07_IsI32(_16043_prim.ptr())))))) {
		_1c678ae11_pushErr(_self_, _158855_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*_158845_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_158827_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_15893_c != nullptr)) {
		{
			
			if (_1c67c6424_IsU8(_16043_prim.ptr())) {
				_case_begin_1d7418cae:;
				{
					jule::Str _16145_s = _1dd721a0b_ReadStr(_15893_c);;
					jule::Ptr<_1c665edc3_SliceExprModel> _16159_model = jule::new_ptr<_1c665edc3_SliceExprModel>(_1c665edc3_SliceExprModel{._field_ElemKind=_158827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16145_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16145_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d741a651:;
						if (it != expr_end) {
							jule::U8 *_161912_b = it;
							{
								jule::Ptr<_1dd71e850_Const> _162010_bc = static__1dd72008c_NewU64(static_cast<jule::U64>((*(_161912_b))));;
								(*(_162010_bc))._field_Kind=(*(_16043_prim))._field_Kind;
								(*(_16159_model))._field_Elems=jule::append((*_16159_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_162010_bc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1d741a651:;
							++it;
							goto _iter_begin_1d741a651;
						}
						_iter_end_1d741a651:;
					};
					(*_158845_d.alloc)._field_Model=jule::Any(_16159_model, &__jule_any_type80);
					(*_158845_d.alloc)._field_Decl=true;
				}
			}
			else if (_1c67c5e07_IsI32(_16043_prim.ptr())) {
				_case_begin_1d7418d58:;
				{
					jule::Slice<jule::I32> _16275_runes = __jule_strToRunes(_1dd721a0b_ReadStr(_15893_c));;
					jule::Ptr<_1c665edc3_SliceExprModel> _16289_model = jule::new_ptr<_1c665edc3_SliceExprModel>(_1c665edc3_SliceExprModel{._field_ElemKind=_158827_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16275_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16275_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d741da83:;
						if (it != expr_end) {
							jule::I32 *_163212_r = it;
							{
								jule::Ptr<_1dd71e850_Const> _163310_rc = static__1dd71ecc3_NewI64(static_cast<jule::I64>((*(_163212_r))));;
								(*(_163310_rc))._field_Kind=(*(_16043_prim))._field_Kind;
								(*(_16289_model))._field_Elems=jule::append((*_16289_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_163310_rc, &__jule_any_type20); __jule_collection; }));
							}
							_iter_next_1d741da83:;
							++it;
							goto _iter_begin_1d741da83;
						}
						_iter_end_1d741da83:;
					};
					(*_158845_d.alloc)._field_Model=jule::Any(_16289_model, &__jule_any_type80);
					(*_158845_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1d7418bc1:;
		};
	};
}



inline void _1c679ac01_castStr(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _164327_d, jule::Ptr<_1c661e327_Token> _164337_errorToken) {
	if ((_1c67be83a_Enum((*(_164327_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c66816a8_Enum> _16458_e = _1c67be83a_Enum((*(_164327_d))._field_Kind);;
		if (((_1c67be087_Prim((*((*(_16458_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1c67c7eb4_IsStr(_1c67be087_Prim((*((*(_16458_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1dd71e850_Const> _16513_c = (*_164327_d.alloc)._field_Constant;;
	(*_164327_d.alloc)._field_Constant=nullptr;
	(*_164327_d.alloc)._field_untyped=false;
	if ((_1c67be087_Prim((*(_164327_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c67c49e9_Prim> _16554_prim = _1c67be087_Prim((*(_164327_d))._field_Kind);;
		if (((!(_1c67c6424_IsU8(_16554_prim.ptr()))) && (!(_1c67c5e07_IsI32(_16554_prim))))) {
			_1c678ae11_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_16513_c != nullptr)) {
			{
				
				if (_1c67c6424_IsU8(_16554_prim)) {
					_case_begin_1d7426827:;
					{
						(*_164327_d.alloc)._field_Constant=static__1dd720620_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1dd7222ae_AsU64(_16513_c))));
						(*_164327_d.alloc)._field_Model=jule::Any((*_164327_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164327_d.alloc)._field_Decl=true;
					}
				}
				else if (_1c67c5e07_IsI32(_16554_prim)) {
					_case_begin_1d74268c1:;
					{
						(*_164327_d.alloc)._field_Constant=static__1dd720620_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1dd722028_AsI64(_16513_c))));
						(*_164327_d.alloc)._field_Model=jule::Any((*_164327_d.alloc)._field_Constant, &__jule_any_type20);
						(*_164327_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1d7426706:;
			};
		};
		return;;
	};
	jule::Ptr<_1c67c8ee8_Slc> _16767_s = _1c67c00dd_Slc((*(_164327_d))._field_Kind);;
	if ((_16767_s == nullptr)) {
		_1c678ae11_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _16827_t = (*(_16767_s))._field_Elem;;
	jule::Ptr<_1c67c49e9_Prim> _16833_prim = _1c67be087_Prim(_16827_t.ptr());;
	if (((_16833_prim == nullptr) || ((!(_1c67c6424_IsU8(_16833_prim.ptr()))) && (!(_1c67c5e07_IsI32(_16833_prim.ptr())))))) {
		_1c678ae11_pushErr(_self_, _164337_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_164327_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1c679b11e_castInt(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _169027_t, jule::Ptr<_1c6788b56_Data> _169045_d, jule::Ptr<_1c661e327_Token> _169055_errorToken) {
	if (_1c6789591_IsConst(_169045_d.ptr())) {
		jule::Ptr<_1c67c49e9_Prim> _16924_prim = _1c67be087_Prim(_169027_t.ptr());;
		{
			
			if (_1dd71d695_IsSigInt((*(_16924_prim))._field_Kind)) {
				_case_begin_1d743005b:;
				{
					_1dd7227ed_SetI64((*_169045_d.alloc)._field_Constant.ptr(), _1dd722028_AsI64((*(_169045_d))._field_Constant));
				}
			}
			else if (_1dd71d9a3_IsUnsigInt((*(_16924_prim))._field_Kind)) {
				_case_begin_1d7430105:;
				{
					_1dd722aa6_SetU64((*_169045_d.alloc)._field_Constant.ptr(), _1dd7222ae_AsU64((*(_169045_d))._field_Constant));
				}
			}
			_match_end_1d742eec3:;
		};
	} else {
		(*(_169045_d))._field_Constant=nullptr;
		(*_169045_d.alloc)._field_untyped=false;
	};
	if ((_1c67be83a_Enum((*(_169045_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c66816a8_Enum> _17054_e = _1c67be83a_Enum((*(_169045_d))._field_Kind);;
		if (_1dd71e344_IsNum(_1c67bbccc_Str((*((*(_17054_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c67be31d_Sptr((*(_169045_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c67c49e9_Prim> _17124_prim = _1c67be087_Prim(_169027_t.ptr());;
		if ((!(_1c67c7997_IsUintptr(_17124_prim.ptr())))) {
			_1c678ae11_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_169045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_169027_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1c67be5a4_Ptr((*(_169045_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c67c49e9_Prim> _17194_prim = _1c67be087_Prim(_169027_t);;
		if (_1c67c7997_IsUintptr(_17194_prim.ptr())) {
		} else if ((!(_1c678b906_isUnsafe(_self_)))) {
			_1c678ae11_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _17283_prim = _1c67be087_Prim((*(_169045_d))._field_Kind);;
	if (((_17283_prim != nullptr) && _1dd71e344_IsNum(_1c67c4d6d_Str(_17283_prim)))) {
		return;;
	};
	_1c678ae11_pushErr(_self_, _169055_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_169045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_169027_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1c679b53c_castNum(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _173627_t, jule::Ptr<_1c6788b56_Data> _173645_d, jule::Ptr<_1c661e327_Token> _173655_errorToken) {
	if (_1c6789591_IsConst(_173645_d.ptr())) {
		jule::Ptr<_1c67c49e9_Prim> _17384_prim = _1c67be087_Prim(_173627_t.ptr());;
		{
			
			if (_1dd71e0ad_IsFloat((*(_17384_prim))._field_Kind)) {
				_case_begin_1d743b595:;
				{
					_1dd7233c0_SetF64((*_173645_d.alloc)._field_Constant.ptr(), _1dd722545_AsF64((*(_173645_d))._field_Constant));
				}
			}
			else if (_1dd71d695_IsSigInt((*(_17384_prim))._field_Kind)) {
				_case_begin_1d743b63e:;
				{
					_1dd7227ed_SetI64((*_173645_d.alloc)._field_Constant.ptr(), _1dd722028_AsI64((*(_173645_d))._field_Constant));
				}
			}
			else if (_1dd71d9a3_IsUnsigInt((*(_17384_prim))._field_Kind)) {
				_case_begin_1d743b6a5:;
				{
					_1dd722aa6_SetU64((*_173645_d.alloc)._field_Constant.ptr(), _1dd7222ae_AsU64((*(_173645_d))._field_Constant));
				}
			}
			_match_end_1d743b4b8:;
		};
	} else {
		(*(_173645_d))._field_Constant=nullptr;
		(*_173645_d.alloc)._field_untyped=false;
	};
	if ((_1c67be83a_Enum((*(_173645_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c66816a8_Enum> _17534_e = _1c67be83a_Enum((*(_173645_d))._field_Kind);;
		if (_1dd71e344_IsNum(_1c67bbccc_Str((*((*(_17534_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c67c49e9_Prim> _17593_prim = _1c67be087_Prim((*(_173645_d))._field_Kind);;
	if (((_17593_prim != nullptr) && _1dd71e344_IsNum(_1c67c4d6d_Str(_17593_prim)))) {
		return;;
	};
	_1c678ae11_pushErr(_self_, _173655_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_173645_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_173627_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1c679b95a_castPrim(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _176728_t, jule::Ptr<_1c6788b56_Data> _176746_d, jule::Ptr<_1c661e327_Token> _176756_errorToken) {
	jule::Ptr<_1c67c49e9_Prim> _17683_prim = _1c67be087_Prim(_176728_t.ptr());;
	{
		
		if (_1c67c824a_IsAny(_17683_prim.ptr())) {
			_case_begin_1d7444bec:;
			{
				(*(_176746_d))._field_Constant=nullptr;
				(*_176746_d.alloc)._field_untyped=false;
			}
		}
		else if (_1c67c7eb4_IsStr(_17683_prim.ptr())) {
			_case_begin_1d744489a:;
			{
				_1c679ac01_castStr(_self_, _176746_d, _176756_errorToken);
			}
		}
		else if (_1dd71dc6c_IsInt(_1c67c4d6d_Str(_17683_prim.ptr()))) {
			_case_begin_1d7444911:;
			{
				_1c679b11e_castInt(_self_, _176728_t, _176746_d, _176756_errorToken);
			}
		}
		else if (_1dd71e344_IsNum(_1c67c4d6d_Str(_17683_prim.ptr()))) {
			_case_begin_1d7444977:;
			{
				_1c679b53c_castNum(_self_, _176728_t, _176746_d, _176756_errorToken);
			}
		}
		else {
			_case_begin_1d7444834:;
			{
				_1c678ae11_pushErr(_self_, _176756_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str(_176728_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1d74447ac:;
	};
}



inline void _1c679bcbd_castConstant(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _178533_t, jule::Ptr<_1c6788b56_Data>* _178552_d) {
	if ((((*(_178552_d)) == nullptr) || (!(_1c6789591_IsConst((*(_178552_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _17893_prim = _1c67be087_Prim((*(_178533_t)).ptr());;
	_1c67b6e5e_castConstByType(&((*(_17893_prim))._field_Kind), _178552_d);
	(*((*(_178552_d))))._field_Model=jule::Any((*((*(_178552_d))))._field_Constant, &__jule_any_type20);
}



inline void _1c679c1db_castTypeEnum(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _179433_t, jule::Ptr<_1c6788b56_Data>* _179452_d, jule::Ptr<_1c661e327_Token>* _179467_errorToken) {
	jule::I64 _17953_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c671322e_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_179452_d))))._field_Kind), _179433_t, _179467_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17953_n);;
		_1c678ae11_pushErr(_self_, (*(_179467_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_179452_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_179433_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_179452_d))))._field_Constant=nullptr;
	(*((*(_179452_d))))._field_untyped=false;
}



inline void _1c679c609_castTypeEnumT(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _180434_t, jule::Ptr<_1c6788b56_Data>* _180453_d, jule::Ptr<_1c661e327_Token>* _180468_errorToken) {
	jule::I64 _18053_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c671322e_checkTypeCompatibility((*(_self_))._field_s, _180434_t, &((*((*(_180453_d))))._field_Kind), _180468_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _18053_n);;
		_1c678ae11_pushErr(_self_, (*(_180468_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_180453_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_180434_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_180453_d))))._field_Constant=nullptr;
	(*((*(_180453_d))))._field_untyped=false;
}



inline jule::Ptr<_1c6788b56_Data> _1c679cab0_evalCastByTypeNData(_1c678a87d_eval* _self_, jule::Ptr<_1c67bb8d1_TypeKind> _181439_t, jule::Ptr<_1c6788b56_Data> _181457_d, jule::Ptr<_1c661e327_Token> _181471_errorToken) {
	if (((_181457_d != nullptr) && (*_181457_d.alloc)._field_Decl)) {
		_1c678ae11_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c6789074_IsNil(_181457_d)) {
			_case_begin_1d7452d4d:;
			{
				if ((!(_1c67bd7d4_NilCompatible(_181439_t.ptr())))) {
					_1c678ae11_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_181439_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_181457_d.alloc)._field_Constant=nullptr;
				(*_181457_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1c67be087_Prim((*_181457_d.alloc)._field_Kind.ptr()) != nullptr) && _1c67c824a_IsAny(_1c67be087_Prim((*(_181457_d))._field_Kind).ptr()))) {
			_case_begin_1d7452ac8:;
			{
				if ((_1c67be83a_Enum(_181439_t.ptr()) != nullptr)) {
					_1c678ae11_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
					_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("try cast to type of enum fields instead of enum", 47)), jule::Slice<jule::Any>());
				} else if ((_1c67beac1_TypeEnum(_181439_t.ptr()) != nullptr)) {
					_1c678ae11_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("enum cannot casted from any type", 32)), jule::Slice<jule::Any>());
				};
				(*_181457_d.alloc)._field_Constant=nullptr;
				(*_181457_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1c67beac1_TypeEnum((*_181457_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7452b3e:;
			{
				_1c679c1db_castTypeEnum(_self_, &(_181439_t), &(_181457_d), &(_181471_errorToken));
			}
		}
		else if ((_1c67beac1_TypeEnum(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7452ba5:;
			{
				_1c679c609_castTypeEnumT(_self_, &(_181439_t), &(_181457_d), &(_181471_errorToken));
			}
		}
		else if ((_1c67be5a4_Ptr(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7452c1b:;
			{
				_1c6799b34_castPtr(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1c67be31d_Sptr(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7453a1e:;
			{
				_1c679a470_castRef(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1c67c00dd_Slc(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7453a85:;
			{
				_1c679a88d_castSlc(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1c67c060a_Struct(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7453aeb:;
			{
				_1c679a052_castStruct(_self_, _181439_t, _181457_d, _181471_errorToken);
			}
		}
		else if ((_1c67be087_Prim(_181439_t.ptr()) != nullptr)) {
			_case_begin_1d7453b62:;
			{
				_1c679b95a_castPrim(_self_, _181439_t, _181457_d, _181471_errorToken);
				_1c679bcbd_castConstant(_self_, &(_181439_t), &(_181457_d));
			}
		}
		else {
			_case_begin_1d74529a7:;
			{
				_1c678ae11_pushErr(_self_, _181471_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str(_181439_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_181457_d=nullptr;
			}
		}
		_match_end_1d7452798:;
	};
	if ((_181457_d == nullptr)) {
		return nullptr;;
	};
	(*_181457_d.alloc)._field_Mutable=((*_181457_d.alloc)._field_Mutable || (!(_1c67bd2b7_Mutable((*_181457_d.alloc)._field_Kind.ptr()))));
	if (((!((*_181457_d.alloc)._field_Decl)) && ((_1c67be83a_Enum((*(_181457_d))._field_Kind) == nullptr) || (!(_1c67bc11d_Equal((*((*(_1c67be83a_Enum((*(_181457_d))._field_Kind)))._field_Kind))._field_Kind, _181439_t)))))) {
		_1c67b5c3d_applyCastKind(&((*(_self_))._field_s), &(_181457_d), &(_181439_t), &(_181471_errorToken), _1c678de14_getOwnerRefers(_self_));
		(*((*_181457_d.alloc)._field_Model.cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96)))._field_Token=_181471_errorToken;
	} else {
		(*_181457_d.alloc)._field_Kind=_181439_t;
	};
	(*_181457_d.alloc)._field_Decl=false;
	(*_181457_d.alloc)._field_Lvalue=false;
	(*_181457_d.alloc)._field_untyped=false;
	if (_1c6789591_IsConst(_181457_d)) {
		(*((*_181457_d.alloc)._field_Constant))._field_Kind=(*(_1c67be087_Prim(_181439_t.ptr())))._field_Kind;
	};
	return _181457_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c679d066_evalCastT(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _188731_t, jule::Ptr<_1c6638c37_Expr>* _188750_e, jule::Ptr<_1c661e327_Token>* _188765_et) {
	jule::Ptr<_1c67bb8d1_TypeKind> _18887_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18887_prefix;
	});;
	if ((_1c67c00dd_Slc((*(_188731_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_188750_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1d7464678:;
				{
					(*_self_.alloc)._field_prefix=(*(_188731_t));
				}
			}
			_match_end_1d7464601:;
		};
	};
	jule::Ptr<_1c6788b56_Data> _18977_d = _1c67a96e3_evalExpr(_self_, (*(_188750_e)));;
	if (((_18977_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18977_d;;
	};
	return _1c679cab0_evalCastByTypeNData(_self_, (*(_188731_t)), _18977_d, (*(_188765_et)));;
}



inline jule::Ptr<_1c6788b56_Data> _1c679d3a7_evalCast(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663b597_CastExpr> _190429_c) {
	jule::Ptr<_1c67c40e2_TypeSymbol> _19057_t = _1c6673007_buildType((*(_190429_c))._field_Kind);;
	jule::Bool _19063_ok = _1c67103c4_checkType((*(_self_))._field_s, &(_19057_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19063_ok))) {
		return nullptr;;
	};
	return _1c679d066_evalCastT(_self_, &((*(_19057_t))._field_Kind), &((*_190429_c.alloc)._field_Expr), &((*((*_190429_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1c6788b56_Data> _1c679d6e8_evalNsSelection(_1c678a87d_eval* _self_, jule::Ptr<_1c663b971_NsSelectionExpr> _191335_s) {
	jule::Str _19143_path = _1c67d8d71_buildLinkPathByTokens(&((*(_191335_s))._field_Ns));;
	jule::Ptr<_1c66d63cd_ImportInfo> _19157_imp = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67da36c_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>>((void*)__jule_anon_1d746c719, jule::Ptr<__jule_anon_1d746c719_ctx>::make(__jule_anon_1d746c719_ctx{._191335_s=_191335_s,._19143_path=_19143_path}).as<jule::Uintptr>(), __jule_anon_1d746c719_ctx_handler));;
	if ((_19157_imp == nullptr)) {
		_1c678ae11_pushErr(_self_, (*(_191335_s))._field_Ns[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19143_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19277_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19157_imp, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data1);
	;
	_1c678b670_disallowBuiltin(_self_);
	jule::Any _19327_def = _1c678db7d_getDef(_self_, &((*((*_191335_s.alloc)._field_Ident))._field_Kind), false);;
	_1c678b472_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19277_lookup;
	jule::Ptr<_1c6788b56_Data> _19357_d = _1c6792d3b_evalDef(_self_, &(_19327_def), (*_191335_s.alloc)._field_Ident);;
	return _19357_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c679db9e_evalStructLitExplicit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c665865d_StructIns> _193942_s, jule::Slice<jule::Ptr<_1c6638c37_Expr>> _19407_exprs, jule::Ptr<_1c661e327_Token> _194027_errorToken) {
	jule::Bool _19413_ok = _1c670ac82_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_193942_s))._field_Decl))._field_Generics.len(), (*_193942_s.alloc)._field_Generics.len(), _194027_errorToken);;
	if ((!(_19413_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_193942_s.alloc)._field_Decl))) {
		_1c678ae11_pushErr(_self_, _194027_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_193942_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1d7404360_pushReference(_self_, &(_193942_s));
	_1c6791037_checkDeprecated(_self_, &((*(*(_193942_s))._field_Decl.alloc)._field_Directives), _194027_errorToken);
	_1c677b8d5_structLitChecker _19547_slc = _1c677b8d5_structLitChecker{._field_e=_self_, ._field_errorToken=_194027_errorToken, ._field_s=_193942_s, ._field_args=jule::Slice<jule::Ptr<_1c665d421_StructArgExprModel>>(nullptr)};;
	_1c677d156_check(&_19547_slc, &(_19407_exprs));
	jule::Ptr<_1c6788b56_Data> _19617_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_193942_s, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c665d7b7_StructLitExprModel>(_1c665d7b7_StructLitExprModel{._field_Strct=_193942_s, ._field_Args=_19547_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if ((*(*(_193942_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19617_d))._field_Kind))._field_BindIdent=(*(*(_193942_s))._field_Decl.alloc)._field_Ident;
	};
	return _19617_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c679dee0_evalStructLit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663dc81_StructLit> _197734_lit) {
	jule::Ptr<_1c67c40e2_TypeSymbol> _19787_t = _1c6673007_buildType((*(_197734_lit))._field_Kind);;
	jule::Bool _19793_ok = _1c67103c4_checkType((*(_self_))._field_s, &(_19787_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19793_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c665865d_StructIns> _19847_s = _1c67c060a_Struct((*(_19787_t))._field_Kind.ptr());;
	if ((_19847_s == nullptr)) {
		if ((_1c67be31d_Sptr((*(_19787_t))._field_Kind) != nullptr)) {
			_19847_s=_1c67c060a_Struct((*(_1c67be31d_Sptr((*(_19787_t))._field_Kind)))._field_Elem.ptr());
			if ((_19847_s != nullptr)) {
				goto _julec_label_1d747e0aa;
			};
		};
		_1c678ae11_pushErr(_self_, (*((*_197734_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1d747e0aa:;
	jule::Ptr<_1c6788b56_Data> _19977_d = _1c679db9e_evalStructLitExplicit(_self_, _19847_s, (*_197734_lit.alloc)._field_Exprs, (*(*(_197734_lit))._field_Kind.alloc)._field_Token);;
	if ((_1c67be31d_Sptr((*(_19787_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1c665d7b7_StructLitExprModel> _19998_model = (*(_19977_d))._field_Model.cast_ptr<_1c665d7b7_StructLitExprModel>(&__jule_any_type98);;
		_1c67b3a82_makeStructLitAlloc(&(_19977_d), &(_19998_model));
	};
	return _19977_d;;
}



inline _1c67cdccd_typeChecker _1c679e276_typeChecker(_1c678a87d_eval* _self_) {
	return _1c670e170_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c6788b56_Data> _1c679e5b7_evalType(_1c678a87d_eval* _self_, jule::Ptr<_1c6634903_TypeDecl> _200928_t) {
	jule::Ptr<_1c67c40e2_TypeSymbol> _20107_tk = _1c6673007_buildType(_200928_t);;
	jule::Bool _20113_ok = _1c67103c4_checkType((*(_self_))._field_s, &(_20107_tk), (*(_self_))._field_lookup);;
	if ((!(_20113_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*(_20107_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_20107_tk.alloc)._field_Kind, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline void _1c679e92a_callTypeFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _202232_fc, jule::Ptr<_1c6788b56_Data>* _202254_d) {
	if (((*((*(_202232_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_202232_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*((*(_202232_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_202254_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_202232_fc))))._field_IsCo) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_202254_d))=nullptr;
		return;;
	} else if (((*((*(_202232_fc))))._field_Exception != nullptr)) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*(_202232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_202254_d))=nullptr;
		return;;
	};
	if (((*((*(_202232_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1c6638c37_Expr> _20388_arg = (*((*(_202232_fc))))._field_Args[0LL];;
		(*(_202254_d))=_1c679d066_evalCastT(_self_, &((*((*(_202254_d))))._field_Kind), &(_20388_arg), &((*(_20388_arg))._field_Token));
		return;;
	};
	if (((*(_202254_d)) != nullptr)) {
		(*((*(_202254_d))))._field_Decl=false;
	};
}



inline void _1c679ec8d_callBuiltinFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _204835_fc, jule::Ptr<_1c6788b56_Data>* _204857_d) {
	if ((!(_1c663cd18_Unhandled((*(_204835_fc)).ptr())))) {
		_1c678ae11_pushErr(_self_.ptr(), (*((*(_204835_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_204857_d))=(*(_1c67c0374_Fn((*((*(_204857_d))))._field_Kind.ptr())))._field_caller(&(_self_), _204835_fc, _204857_d);
	if (((*(_204857_d)) == nullptr)) {
		return;;
	};
	(*((*(_204857_d))))._field_Mutable=true;
}



inline void _1c67a0101_checkFnOfConcurrentCall(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _206040_f, jule::Ptr<_1c661e327_Token> _206051_errorToken) {
	if (_1c678b906_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_206040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d748d10d:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> *_206410_p = it;
			{
				if (_1c6669196_IsSelf((*((*(_206410_p))))._field_Decl.ptr())) {
					if ((!(_1c666942c_IsRef((*((*(_206410_p))))._field_Decl)))) {
						_1c678ae11_pushErr(_self_, _206051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_206410_p))))._field_Decl.alloc)._field_Reference) {
					_1c678ae11_pushErr(_self_, _206051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1d748d10d:;
			++it;
			goto _iter_begin_1d748d10d;
		}
		_iter_end_1d748d10d:;
	};
}



inline void _1c67a051e_processExceptionalHandler(_1c678a87d_eval* _self_, jule::Ptr<_1c666d4ec_FnIns>* _207946_f, jule::Ptr<_1c663c961_FnCallExpr>* _207962_fc, jule::Ptr<_1c6788b56_Data>* _207984_d) {
	jule::Bool _20803_resultNeeded = ((!(_1c666a9c2_IsVoid((*((*(_207946_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c66ba857_scopeChecker> _208111_csc = nullptr;;
	jule::Ptr<_1c66b35b9_Scope> _208211_ch = nullptr;;
	jule::Ptr<_1c665e9e9_FnCallExprModel> _20847_model = (*((*(_207984_d))))._field_Model.cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41);;
	jule::Ptr<_1c66ba857_scopeChecker> _20887_sc = (*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0);;
	_208111_csc=_1c66ccc65_newChildChecker(_20887_sc);
	if (_20803_resultNeeded) {
		(*(_208111_csc))._field_result=(*(_207946_f));
	};
	_208211_ch=_1c66c1011_getChild(_20887_sc);
	(*((*((*(_207962_fc))))._field_Exception))._field_Parent=(*_20887_sc.alloc)._field_tree;
	(*((*_208111_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_208111_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c67b3e06_buildErrorVar(&(_208211_ch), _207962_fc); __jule_collection; }));
	_1c66c142e_checkChildSsc(_20887_sc, &((*((*(_207962_fc))))._field_Exception), &(_208211_ch), &(_208111_csc));
	(*(_20847_model))._field_Assigned=_20803_resultNeeded;
	(*_20847_model.alloc)._field_Except=_208211_ch;
	if ((_20803_resultNeeded && ((*_208111_csc.alloc)._field_result != nullptr))) {
		_1c678ae11_pushErr(_self_, (*((*(_207962_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1c67a0882_callFn(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr>* _210628_fc, jule::Ptr<_1c6788b56_Data>* _210650_d) {
	jule::Ptr<_1c666d4ec_FnIns> _21077_f = _1c67c0374_Fn((*((*(_210650_d))))._field_Kind.ptr());;
	if (_1c666e9b5_IsBuiltin(_21077_f.ptr())) {
		_1c679ec8d_callBuiltinFn(_self_, _210628_fc, _210650_d);
		return;;
	};
	if ((_1c678bb8c_isGlobal(_self_) && (*((*_21077_f.alloc)._field_Decl))._field_Exceptional)) {
		_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not allowed in global scope", 44)), jule::Slice<jule::Any>());
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("wrap exceptional with a non-exceptional function", 48)), jule::Slice<jule::Any>());
		(*(_210650_d))=nullptr;
		return;;
	};
	if (((!(_1c666ac58_IsMethod((*(_21077_f))._field_Decl))) && _1c67d7e4c_hasDirective(&((*(*(_21077_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_210650_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_210650_d))))._field_Mutable)) && _1c666ac58_IsMethod((*(_21077_f))._field_Decl)) && (!((*(*(_21077_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_21077_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1c665d7b7_StructLitExprModel> _21335_lit = _1c67b80d6_isLitBased(&((*((*(_210650_d))))._field_Model));;
			if ((_21335_lit == nullptr)) {
				_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1c677b3eb_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_21335_lit));
			};
		};
	} else if (((!(_1c678b906_isUnsafe(_self_))) && (*(*(_21077_f))._field_Decl.alloc)._field_Unsafety)) {
		_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21457_dynamicAnnotation = ((((*(*(_21077_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_21077_f.alloc)._field_Generics.len() == 0LL)) && ((*_21077_f.alloc)._field_Params.len() > 0LL));;
	if (_21457_dynamicAnnotation) {
		(*_21077_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc((*(*(_21077_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67b9eea_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_21077_f.alloc)._field_Generics.len() != (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len())) {
		_1c670ac82_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_21077_f))._field_Decl.alloc)._field_Generics.len(), (*_21077_f.alloc)._field_Generics.len(), (*((*(_210628_fc))))._field_Token);
		(*(_210650_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c670684e_sema> _21547_old = (*_self_.alloc)._field_s;;
	if (((*(*(_21077_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_21077_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21547_old != (*_self_.alloc)._field_s)) {
			(*(_21547_old))._field_errors=jule::append((*_21547_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21547_old;
	});;
	_1c677899d_fnCallArgChecker _21677_fcac = _1c677899d_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_210628_fc))))._field_Args, ._field_errorToken=(*((*(_210628_fc))))._field_Token, ._field_f=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_dynamicAnnotation=_21457_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)};;
	if ((!(_21457_dynamicAnnotation))) {
		if ((!((*_21077_f.alloc)._field_reloaded))) {
			jule::Bool _21765_ok = _1c6716144_reloadFnInsTypes((*(_self_))._field_s, _21077_f);;
			(*_21077_f.alloc)._field_reloaded=true;
			if ((!(_21765_ok))) {
				(*(_210650_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c666d4ec_FnIns> _21838_existInstance = _1c666c0bc_appendInstance((*(_21077_f))._field_Decl, &(_21077_f));;
		if ((_21838_existInstance != nullptr)) {
			_21077_f=_21838_existInstance;
		};
	} else if ((!(_1c67144a5_buildFnNonGenericTypeKinds((*(_self_))._field_s, _21077_f, &(_21677_fcac._field_ignored))))) {
		(*(_210650_d))=nullptr;
		return;;
	};
	_21677_fcac._field_f=_21077_f;
	jule::Bool _21947_ok = false;;
	if (((*(*(_21077_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21547_old, (*_self_.alloc)._field_s);
		_21947_ok=_1c677b088_check(&_21677_fcac);
		std::swap(_21547_old, (*_self_.alloc)._field_s);
	} else {
		_21947_ok=_1c677b088_check(&_21677_fcac);
	};
	if (_21457_dynamicAnnotation) {
		if ((!(_21947_ok))) {
			(*(_210650_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6797c31_checkGenericFn(_self_, &(_21077_f), &((*((*(_210628_fc))))._field_Token), &((*((*(_210650_d))))._field_Model));
			_21947_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21947_ok))) {
			(*(_210650_d))=nullptr;
			return;;
		};
	};
	jule::Any _22157_callModel = (*((*(_210650_d))))._field_Model;;
	if (_1c666a9c2_IsVoid((*(_21077_f))._field_Decl)) {
		(*(_210650_d))=_1c67b5e4c_buildVoidData();
	} else {
		(*((*(_210650_d))))._field_Kind=(*_21077_f.alloc)._field_Result;
		(*((*(_210650_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1c665e9e9_FnCallExprModel> _22247_model = jule::new_ptr<_1c665e9e9_FnCallExprModel>(_1c665e9e9_FnCallExprModel{._field_Token=(*((*(_210628_fc))))._field_Token, ._field_Func=_21077_f, ._field_IsCo=(*((*(_210628_fc))))._field_IsCo, ._field_Expr=_22157_callModel, ._field_Args=_21677_fcac._field_argModels, ._field_Except=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_210650_d))))._field_Model=jule::Any(_22247_model, &__jule_any_type41);
	(*((*(_210650_d))))._field_Mutable=true;
	if ((*(*(_21077_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_210628_fc))))._field_IsCo) {
			_1c6709753_pushErr((*(_self_))._field_s, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1c6709ab6_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c663cd18_Unhandled((*(_210628_fc)).ptr())) {
				_case_begin_1d74b56b8:;
				{
					_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1c663d09e_Ignored((*(_210628_fc)).ptr())) {
				_case_begin_1d74b5399:;
				{
					goto _match_end_1d74b3d7b;
				}
			}
			else {
				_case_begin_1d74b3de2:;
				{
					_1c67a051e_processExceptionalHandler(_self_, &(_21077_f), _210628_fc, _210650_d);
				}
			}
			_match_end_1d74b3d7b:;
		};
	} else if ((!(_1c663cd18_Unhandled((*(_210628_fc)).ptr())))) {
		_1c678ae11_pushErr(_self_, (*((*(_210628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_210628_fc))))._field_IsCo) {
		_1c67a0101_checkFnOfConcurrentCall(_self_, &((*(_22247_model))._field_Func), (*((*(_210628_fc))))._field_Token);
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a0bc3_evalFnCall(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c961_FnCallExpr> _225931_fc) {
	jule::Ptr<_1c67bb8d1_TypeKind> _22607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22607_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_225931_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d74ba0b3:;
			{
				if (((*((*((*(_225931_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1c68a612a_builtinCallerError(&(_self_), &(_225931_fc));;
				};
			}
		}
		_match_end_1d74ba03b:;
	};
	jule::Ptr<_1c6788b56_Data> _22737_d = _1c67a88ce_evalExprKind(_self_, (*(*(_225931_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22737_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22737_d))._field_Decl) {
		_1c679e92a_callTypeFn(_self_, &(_225931_fc), &(_22737_d));
		return _22737_d;;
	};
	if ((_1c67c0374_Fn((*(_22737_d))._field_Kind.ptr()) == nullptr)) {
		_1c678ae11_pushErr(_self_, (*_225931_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c67a0882_callFn(_self_, &(_225931_fc), &(_22737_d));
	return _22737_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a10be_evalEnumStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c66816a8_Enum> _229234_enm, jule::Ptr<_1c661e327_Token> _229250_ident) {
	jule::Ptr<_1c6680b3b_EnumItem> _22937_item = _1c66822d0_FindItem(_229234_enm.ptr(), (*(_229250_ident))._field_Kind);;
	if ((_22937_item == nullptr)) {
		_1c678ae11_pushErr(_self_, _229250_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229234_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_229250_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1c67b7d1c_evalEnumStatic(&((*(_self_))._field_s), &(_229234_enm), &(_22937_item), &(_229250_ident), _1c678de14_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a14ba_evalTypeEnumStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c6682db3_TypeEnum> _230038_enm, jule::Ptr<_1c661e327_Token> _230054_ident) {
	jule::Ptr<_1c66827db_TypeEnumItem> _23017_item = _1c66839a7_FindItem(_230038_enm.ptr(), (*(_230054_ident))._field_Kind);;
	if ((_23017_item == nullptr)) {
		_1c678ae11_pushErr(_self_, _230054_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230038_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_230054_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1c67be83a_Enum((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d74c3dbe:;
			{
				return _1c678e50d__evalEnum(_self_, _1c67be83a_Enum((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1c67beac1_TypeEnum((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d74c2043:;
			{
				return _1c678ec4a__evalTypeEnum(_self_, _1c67beac1_TypeEnum((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1c67c060a_Struct((*((*(_23017_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d74c20a9:;
			{
				return _1c6790487__evalStruct(_self_, _1c67c060a_Struct((*((*(_23017_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1d74c1ecc:;
			{
				jule::Ptr<_1c6788b56_Data> _23148_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*((*(_23017_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
				(*(_23148_d))._field_Model=jule::Any((*_23148_d.alloc)._field_Kind, &__jule_any_type87);
				return _23148_d;;
			}
		}
		_match_end_1d74c2197:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a18b6_evalStructStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c665865d_StructIns> _232336_s, jule::Ptr<_1c661e327_Token> _232351_ident) {
	jule::Ptr<_1c6788b56_Data> _23247_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	;
	jule::Ptr<_1c666a51b_Fn> _23287_method = _1c6659708_FindMethod(_232336_s.ptr(), (*(_232351_ident))._field_Kind, true);;
	if ((_23287_method != nullptr)) {
		if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23287_method.alloc)._field_Public, (*_23287_method.alloc)._field_Token)))) {
			_1c678ae11_pushErr(_self_, _232351_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232351_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c666d4ec_FnIns> _23358_ins = _1c666bcae_instance(_23287_method);;
		(*(_23358_ins))._field_Owner=_232336_s;
		_1d730145a_pushReference(_self_, &(_23358_ins));
		(*_23247_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c6662931_StructStaticIdentExprModel>(_1c6662931_StructStaticIdentExprModel{._field_Structure=_232336_s, ._field_Expr=(*_23247_d.alloc)._field_Model, ._field_Method=_23358_ins}), &__jule_any_type99);
		(*_23247_d.alloc)._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23358_ins, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)});
		return _23247_d;;
	};
	jule::Ptr<_1c672acb3_Var> _23497_sttc = _1c6659d8a_FindStatic(_232336_s, (*_232351_ident.alloc)._field_Kind);;
	if ((_23497_sttc != nullptr)) {
		return _1c6792544_evalVar(_self_, _23497_sttc, _232351_ident);;
	};
	_1c678ae11_pushErr(_self_, _232351_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_232336_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_232351_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a1d6c_evalTraitSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _235837_d, jule::Ptr<_1c667de9c_Trait> _235851_trt, jule::Ptr<_1c661e327_Token> _235868_ident) {
	jule::Ptr<_1c666a51b_Fn> _23597_f = _1c667eb7e_FindMethod(_235851_trt.ptr(), (*(_235868_ident))._field_Kind);;
	if ((_23597_f == nullptr)) {
		_1c678ae11_pushErr(_self_, _235868_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_235851_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_235868_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c666bcae_instance(_23597_f), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)}), ._field_Mutable=(*(_235837_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c6661be9_TraitSubIdentExprModel>(_1c6661be9_TraitSubIdentExprModel{._field_Token=_235868_ident, ._field_Expr=(*_235837_d.alloc)._field_Model, ._field_Method=_23597_f, ._field_Trt=_235851_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a23cd_evalStructSubIdentField(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _238044_d, jule::Ptr<_1c665865d_StructIns>* _238059_s, jule::Ptr<_1c661e327_Token>* _238079_tok, jule::Ptr<_1c6657aad_FieldIns>* _238097_f) {
	jule::Ptr<_1c666258a_StructSubIdentExprModel> _23817_model = jule::new_ptr<_1c666258a_StructSubIdentExprModel>(_1c666258a_StructSubIdentExprModel{._field_Token=(*(_238079_tok)), ._field_Expr=jule::new_ptr<_1c6788b56_Data>((*((*(_238044_d))))), ._field_Method=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Field=(*(_238097_f)), ._field_Owner=(*(_238059_s))});;
	(*((*(_238044_d))))._field_Model=jule::Any(_23817_model, &__jule_any_type101);
	(*((*(_238044_d))))._field_Kind=(*((*(_238097_f))))._field_Kind;
	(*((*(_238044_d))))._field_Lvalue=true;
	if (((*((*((*(_238097_f))))._field_Decl))._field_Mutable && (!((*((*(_238044_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
				_case_begin_1d74dd944:;
				{
					jule::Ptr<_1c66ba857_scopeChecker> _23965_scope = _1c66bdeba_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0));;
					(*((*(_238044_d))))._field_Mutable=(((*(_23965_scope))._field_owner != nullptr) && ((*(*(_23965_scope))._field_owner.alloc)._field_Owner == (*(_238059_s))));
				}
			}
			_match_end_1d74dd8cd:;
		};
	};
	return (*(_238044_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a29e9_evalStructSubIdentMethod(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _240545_d, jule::Ptr<_1c665865d_StructIns>* _240560_s, jule::Ptr<_1c661e327_Token>* _240580_tok, jule::Ptr<_1c666a51b_Fn>* _240598_m, jule::Bool _2405106_ref) {
	if ((_1c666942c_IsRef((*((*(_240598_m))))._field_Params[0LL].ptr()) && (!(_2405106_ref)))) {
		_1c678ae11_pushErr(_self_, (*(_240580_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1c6791037_checkDeprecated(_self_, &((*((*(_240598_m))))._field_Directives), (*(_240580_tok)));
	jule::Ptr<_1c666d4ec_FnIns> _24127_ins = _1c666bcae_instance((*(_240598_m)));;
	(*(_24127_ins))._field_Owner=(*(_240560_s));
	_1d730145a_pushReference(_self_, &(_24127_ins));
	jule::Ptr<_1c6788b56_Data> _24157_model = jule::new_ptr<_1c6788b56_Data>((*((*(_240545_d)))));;
	(*((*(_240545_d))))._field_Model=jule::Any(jule::new_ptr<_1c666258a_StructSubIdentExprModel>(_1c666258a_StructSubIdentExprModel{._field_Token=(*(_240580_tok)), ._field_Expr=_24157_model, ._field_Method=_24127_ins, ._field_Field=jule::Ptr<_1c6657aad_FieldIns>(nullptr), ._field_Owner=(*(_240560_s))}), &__jule_any_type101);
	(*((*(_240545_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24127_ins, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)});
	return (*(_240545_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a305a_evalStructSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _242638_d, jule::Ptr<_1c665865d_StructIns> _242652_s, jule::Ptr<_1c663bd4a_SubIdentExpr> _242671_si, jule::Bool _242690_ref) {
	jule::Ptr<_1c6657aad_FieldIns> _24277_f = _1c6659a49_FindField(_242652_s.ptr(), (*((*(_242671_si))._field_Ident))._field_Kind);;
	if ((_24277_f != nullptr)) {
		if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_24277_f.alloc)._field_Decl))._field_Public, (*(*(_24277_f))._field_Decl.alloc)._field_Token)))) {
			_1c678ae11_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_24277_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1c67a23cd_evalStructSubIdentField(_self_, &(_242638_d), &(_242652_s), &((*_242671_si.alloc)._field_Ident), &(_24277_f));;
	};
	;
	jule::Ptr<_1c666a51b_Fn> _24377_m = _1c6659708_FindMethod(_242652_s, (*(*(_242671_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_24377_m == nullptr)) {
		_1c678ae11_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_242652_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_242671_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s, (*(_24377_m))._field_Public, (*(_24377_m))._field_Token)))) {
		_1c678ae11_pushErr(_self_, (*_242671_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_24377_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c678b274_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1c67a29e9_evalStructSubIdentMethod(_self_, &(_242638_d), &(_242652_s), &((*_242671_si.alloc)._field_Ident), &(_24377_m), _242690_ref);;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a339b_evalIntTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _245033_ident) {
	;
	{
		auto &_match_expr{ (*(_245033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d74ee1d5:;
			{
				jule::Ptr<_1dd71e850_Const> _24548_c = static__1dd71ecc3_NewI64(_1dd719cce_MaxI(jule::Str::lit("int", 3)));;
				(*(_24548_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24548_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24548_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d74eeceb:;
			{
				jule::Ptr<_1dd71e850_Const> _24638_c = static__1dd71ecc3_NewI64(static_cast<jule::I64>(_1dd71a3d9_Min(jule::Str::lit("int", 3))));;
				(*(_24638_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24638_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24638_c});;
			}
		}
		else {
			_case_begin_1d74edaa8:;
			{
				_1c678ae11_pushErr(_self_, _245033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_245033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d74edd0b:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a36dc_evalUintTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _247734_ident) {
	;
	{
		auto &_match_expr{ (*(_247734_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d7503481:;
			{
				jule::Ptr<_1dd71e850_Const> _24818_c = static__1dd72008c_NewU64(_1dd71a098_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24818_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a22d0_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24818_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_24818_c});;
			}
		}
		else {
			_case_begin_1d7502d87:;
			{
				_1c678ae11_pushErr(_self_, _247734_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_247734_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d75030a7:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a3a2d_evalI8TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _249532_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249532_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d75068c4:;
			{
				jule::Ptr<_1dd71e850_Const> _25018_c = static__1dd71ecc3_NewI64(127LL);;
				(*(_25018_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a28da_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25018_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25018_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d75074da:;
			{
				jule::Ptr<_1dd71e850_Const> _25108_c = static__1dd71ecc3_NewI64(-128LL);;
				(*(_25108_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a28da_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25108_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25108_c});;
			}
		}
		else {
			_case_begin_1d75060dd:;
			{
				_1c678ae11_pushErr(_self_, _249532_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_249532_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d750650b:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a3d6e_evalI16TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _252433_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d750b159:;
			{
				jule::Ptr<_1dd71e850_Const> _25308_c = static__1dd71ecc3_NewI64(32767LL);;
				(*(_25308_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2b82_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25308_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25308_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d750bc70:;
			{
				jule::Ptr<_1dd71e850_Const> _25398_c = static__1dd71ecc3_NewI64(-32768LL);;
				(*(_25398_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2b82_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25398_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25398_c});;
			}
		}
		else {
			_case_begin_1d750a862:;
			{
				_1c678ae11_pushErr(_self_, _252433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_252433_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d750ac91:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a41b0_evalI32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _255333_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_255333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d75108de:;
			{
				jule::Ptr<_1dd71e850_Const> _25598_c = static__1dd71ecc3_NewI64(2147483647LL);;
				(*(_25598_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2e3a_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25598_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25598_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d7511505:;
			{
				jule::Ptr<_1dd71e850_Const> _25688_c = static__1dd71ecc3_NewI64(-2147483648LL);;
				(*(_25688_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a2e3a_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25688_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25688_c});;
			}
		}
		else {
			_case_begin_1d75100e7:;
			{
				_1c678ae11_pushErr(_self_, _255333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_255333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7510526:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a4501_evalI64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _258233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_258233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d7515174:;
			{
				jule::Ptr<_1dd71e850_Const> _25888_c = static__1dd71ecc3_NewI64(jule::MAX_I64);;
				(*(_25888_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a31e3_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25888_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25888_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d7515c8a:;
			{
				jule::Ptr<_1dd71e850_Const> _25978_c = static__1dd71ecc3_NewI64(jule::MIN_I64);;
				(*(_25978_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a31e3_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25978_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_25978_c});;
			}
		}
		else {
			_case_begin_1d751487c:;
			{
				_1c678ae11_pushErr(_self_, _258233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_258233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7514cab:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a4842_evalU8TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _261132_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_261132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d7519574:;
			{
				jule::Ptr<_1dd71e850_Const> _26168_c = static__1dd72008c_NewU64(255LLU);;
				(*(_26168_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a349b_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26168_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26168_c});;
			}
		}
		else {
			_case_begin_1d7518c49:;
			{
				_1c678ae11_pushErr(_self_, _261132_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_261132_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7519112:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a4b83_evalU16TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _263033_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_263033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d751c533:;
			{
				jule::Ptr<_1dd71e850_Const> _26358_c = static__1dd72008c_NewU64(65535LLU);;
				(*(_26358_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a3754_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26358_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26358_c});;
			}
		}
		else {
			_case_begin_1d751b9b6:;
			{
				_1c678ae11_pushErr(_self_, _263033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_263033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d751c0c1:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a4ec4_evalU32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _264933_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_264933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d75204e2:;
			{
				jule::Ptr<_1dd71e850_Const> _26548_c = static__1dd72008c_NewU64(4294967295LLU);;
				(*(_26548_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a3a0c_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26548_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26548_c});;
			}
		}
		else {
			_case_begin_1d751e975:;
			{
				_1c678ae11_pushErr(_self_, _264933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_264933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7520080:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a5315_evalU64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _266833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_266833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d75234a1:;
			{
				jule::Ptr<_1dd71e850_Const> _26738_c = static__1dd72008c_NewU64(jule::MAX_U64);;
				(*(_26738_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a3ee6_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26738_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26738_c});;
			}
		}
		else {
			_case_begin_1d7522934:;
			{
				_1c678ae11_pushErr(_self_, _266833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_266833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d752303e:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a5656_evalF32TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _268733_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_268733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d7526b36:;
			{
				jule::Ptr<_1dd71e850_Const> _26948_c = static__1dd7208d9_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26948_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4238_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26948_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_26948_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d752774c:;
			{
				jule::Ptr<_1dd71e850_Const> _27038_c = static__1dd7208d9_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27038_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4238_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27038_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27038_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1d75277b3:;
			{
				jule::Ptr<_1dd71e850_Const> _27128_c = static__1dd7208d9_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27128_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4238_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27128_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27128_c});;
			}
		}
		else {
			_case_begin_1d752640a:;
			{
				_1c678ae11_pushErr(_self_, _268733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_268733_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d752675c:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a5997_evalF64TypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c661e327_Token> _272633_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_272633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1d752c8a6:;
			{
				jule::Ptr<_1dd71e850_Const> _27338_c = static__1dd7208d9_NewF64(jule::MAX_F64);;
				(*(_27338_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4447_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27338_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27338_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1d752d4bc:;
			{
				jule::Ptr<_1dd71e850_Const> _27428_c = static__1dd7208d9_NewF64(jule::MIN_F64);;
				(*(_27428_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4447_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27428_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27428_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1d752d533:;
			{
				jule::Ptr<_1dd71e850_Const> _27518_c = static__1dd7208d9_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27518_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=true, ._field_Kind=_1c68a4447_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27518_c, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_27518_c});;
			}
		}
		else {
			_case_begin_1d752c17a:;
			{
				_1c678ae11_pushErr(_self_, _272633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_272633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d752c4cc:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a5d93_evalPrimStatic(_1c678a87d_eval* _self_, jule::Str _276530_kind, jule::Ptr<_1c661e327_Token> _276541_ident) {
	{
		auto &_match_expr{ _276530_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1d753249e:;
			{
				return _1c67a339b_evalIntTypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1d7533060:;
			{
				return _1c67a36dc_evalUintTypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1d75330c6:;
			{
				return _1c67a3a2d_evalI8TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1d753215d:;
			{
				return _1c67a3d6e_evalI16TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1d75321c4:;
			{
				return _1c67a41b0_evalI32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1d753223a:;
			{
				return _1c67a4501_evalI64TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1d75322a1:;
			{
				return _1c67a4842_evalU8TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1d75331b4:;
			{
				return _1c67a4b83_evalU16TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1d753322a:;
			{
				return _1c67a4ec4_evalU32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1d7533291:;
			{
				return _1c67a5315_evalU64TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1d7533307:;
			{
				return _1c67a5656_evalF32TypeStatic(_self_, _276541_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1d753336d:;
			{
				return _1c67a5997_evalF64TypeStatic(_self_, _276541_ident);;
			}
		}
		else {
			_case_begin_1d752d70e:;
			{
				_1c678ae11_pushErr(_self_, _276541_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_276530_kind, &__jule_any_type4); (*it++) = jule::Any((*(_276541_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d752d786:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a628e_evalTypeStatic(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _279734_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _279748_si) {
	{
		
		if ((_1c67be087_Prim((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753841c:;
			{
				return _1c67a5d93_evalPrimStatic(_self_, _1c67c4d6d_Str(_1c67be087_Prim((*(_279734_d))._field_Kind).ptr()), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1c67be83a_Enum((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75393a7:;
			{
				return _1c67a10be_evalEnumStatic(_self_, _1c67be83a_Enum((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1c67beac1_TypeEnum((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753941d:;
			{
				return _1c67a14ba_evalTypeEnumStatic(_self_, _1c67beac1_TypeEnum((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else if ((_1c67c060a_Struct((*(_279734_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75380a9:;
			{
				return _1c67a18b6_evalStructStatic(_self_, _1c67c060a_Struct((*(_279734_d))._field_Kind), (*(_279748_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1d7538043:;
			{
				_1c678ae11_pushErr(_self_, (*(_279748_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_279734_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7537e88:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1d75413c0_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66956de_comptimeTypeInfo>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c669b519_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d7545b88_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668634a_comptimeStructField>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c668778b_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d754a40c_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668c791_comptimeEnumField>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c668d7c5_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d754ebc5_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66905a7_comptimeParam>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c6691e05_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d75546be_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c668956d_comptimeStatic>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c668a9ae_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d7558e43_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c669b7e4_comptimeValue>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c669e275_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d755d6b7_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66a0ebe_comptimeFile>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c66a281c_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}

inline jule::Ptr<_1c6788b56_Data> _1d7562ec4_comptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c66a4dd5_comptimeDecl>* _281354_ct, jule::Ptr<_1c6788b56_Data>* _281374_d, jule::Ptr<_1c663bd4a_SubIdentExpr>* _281385_si) {
	jule::Ptr<_1c6788b56_Data> _28147_cd = _1c66a8c41_subIdent((*(_281354_ct)), &((*((*((*(_281385_si))))._field_Ident))._field_Kind));;
	if ((_28147_cd == nullptr)) {
		_1c678ae11_pushErr(_self_, (*((*(_281385_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_281374_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_281385_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _28147_cd;;
}



inline __jule_tuple_x_1c6788b56_Data__jule_tuple_bool _1c67a6b41_tryComptimeObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data>* _282143_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _282157_si) {
	__jule_tuple_x_1c6788b56_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1c67c294d_comptimeTypeInfo((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e7ca:;
			{
				jule::Ptr<_1c66956de_comptimeTypeInfo> _28248_ct = _1c67c294d_comptimeTypeInfo((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d75413c0_comptimeObjSubIdent(_self_, &(_28248_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c1661_comptimeStructField((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e313:;
			{
				jule::Ptr<_1c668634a_comptimeStructField> _28278_ct = _1c67c1661_comptimeStructField((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d7545b88_comptimeObjSubIdent(_self_, &(_28278_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c1b7d_comptimeEnumField((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e38a:;
			{
				jule::Ptr<_1c668c791_comptimeEnumField> _28308_ct = _1c67c1b7d_comptimeEnumField((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d754a40c_comptimeObjSubIdent(_self_, &(_28308_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c219a_comptimeParam((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e412:;
			{
				jule::Ptr<_1c66905a7_comptimeParam> _28338_ct = _1c67c219a_comptimeParam((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d754ebc5_comptimeObjSubIdent(_self_, &(_28338_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c2e6a_comptimeStatic((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e489:;
			{
				jule::Ptr<_1c668956d_comptimeStatic> _28368_ct = _1c67c2e6a_comptimeStatic((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d75546be_comptimeObjSubIdent(_self_, &(_28368_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c3201_comptimeValue((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753e511:;
			{
				jule::Ptr<_1c669b7e4_comptimeValue> _28398_ct = _1c67c3201_comptimeValue((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d7558e43_comptimeObjSubIdent(_self_, &(_28398_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c39a4_comptimeFile((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753ea3e:;
			{
				jule::Ptr<_1c66a0ebe_comptimeFile> _28428_ct = _1c67c39a4_comptimeFile((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d755d6b7_comptimeObjSubIdent(_self_, &(_28428_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c67c3487_comptimeDecl((*((*(_282143_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d753eaa5:;
			{
				jule::Ptr<_1c66a4dd5_comptimeDecl> _28458_ct = _1c67c3487_comptimeDecl((*((*(_282143_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1d7562ec4_comptimeObjSubIdent(_self_, &(_28458_ct), _282143_d, &(_282157_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d753e29c:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1d753e1e2:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a703c_evalObjSubIdent(_1c678a87d_eval* _self_, jule::Ptr<_1c6788b56_Data> _285235_d, jule::Ptr<_1c663bd4a_SubIdentExpr> _285249_si) {
	if (_1c6621c0e_IsIgnoreIdent((*((*(_285249_si))._field_Ident))._field_Kind)) {
		_1c678ae11_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1c6788b56_Data> _28598_compData;
		jule::Bool _285918_ok;
		({
			__jule_tuple_x_1c6788b56_Data__jule_tuple_bool __jule_assign_result = _1c67a6b41_tryComptimeObjSubIdent(_self_, &(_285235_d), _285249_si);
			_28598_compData = __jule_assign_result.__jule_result_arg0;
			_285918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_285918_ok) {
			return _28598_compData;;
		};
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _28657_kind = (*(_285235_d))._field_Kind;;
	{
		
		if ((_1c67be5a4_Ptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7568309:;
			{
				jule::Ptr<_1c67cbcdc_Ptr> _28684_ptr = _1c67be5a4_Ptr((*(_285235_d))._field_Kind);;
				if (_1c67cc859_IsUnsafe(_28684_ptr.ptr())) {
					goto _match_end_1d7568282;
				};
				if ((!(_1c678b906_isUnsafe(_self_)))) {
					_1c678ae11_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28657_kind=(*(_1c67be5a4_Ptr((*(_285235_d))._field_Kind)))._field_Elem;
				_1c67b83c2_makeImplicitDeref(&(_285235_d), (*_285249_si.alloc)._field_Ident);
			}
		}
		else if ((_1c67be31d_Sptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75683a3:;
			{
				_28657_kind=(*(_1c67be31d_Sptr((*(_285235_d))._field_Kind)))._field_Elem;
				_1c67b83c2_makeImplicitDeref(&(_285235_d), (*_285249_si.alloc)._field_Ident);
			}
		}
		_match_end_1d7568282:;
	};
	{
		
		if ((_1c67c0891_Trait((*_285235_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d756886a:;
			{
				return _1c67a1d6c_evalTraitSubIdent(_self_, _285235_d, _1c67c0891_Trait((*(_285235_d))._field_Kind), (*_285249_si.alloc)._field_Ident);;
			}
		}
		else if ((_1c67c060a_Struct(_28657_kind.ptr()) != nullptr)) {
			_case_begin_1d756bb8c:;
			{
				jule::Ptr<_1c665865d_StructIns> _28864_s = _1c67c060a_Struct(_28657_kind);;
				if (_1c67b491d_isInstancedStruct(_28864_s)) {
					jule::Bool _28889_usedReferenceElem = (_1c67be31d_Sptr((*_285235_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1c67a305a_evalStructSubIdent(_self_, _285235_d, _1c67c060a_Struct(_28657_kind), _285249_si, _28889_usedReferenceElem);;
				};
			}
		}
		_match_end_1d756bb26:;
	};
	_1c678ae11_pushErr(_self_, (*_285249_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*_285235_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a737d_evalSubIdent(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663bd4a_SubIdentExpr> _289633_si) {
	jule::Ptr<_1c67bb8d1_TypeKind> _28977_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28977_prefix;
	});;
	jule::Ptr<_1c6788b56_Data> _29007_d = _1c67a88ce_evalExprKind(_self_, (*((*(_289633_si))._field_Expr))._field_Kind);;
	if ((_29007_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_29007_d))._field_Decl) {
		return _1c67a628e_evalTypeStatic(_self_, _29007_d, _289633_si);;
	};
	return _1c67a703c_evalObjSubIdent(_self_, _29007_d, _289633_si);;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a76be_evalTuple(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663982b_TupleExpr> _291030_tup) {
	jule::Ptr<_1c67c9adc_Tuple> _29117_tupT = jule::new_ptr<_1c67c9adc_Tuple>(_1c67c9adc_Tuple{._field_Types=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)});;
	(*_29117_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(0LL, (*(_291030_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67bb8d1_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1c6663107_TupleExprModel> _29147_model = jule::new_ptr<_1c6663107_TupleExprModel>(_1c6663107_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(0LL, (*_291030_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6788b56_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29187_ok = true;;
	{
		auto expr = &((*_291030_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7576b75:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _291915_expr = *it;
			{
				jule::Ptr<_1c6788b56_Data> _29208_d = _1c67a96e3_evalExpr(_self_, _291915_expr);;
				if ((_29208_d == nullptr)) {
					_29187_ok=false;
					goto _iter_next_1d7576b75;
				};
				(*_29117_tupT.alloc)._field_Types=jule::append((*_29117_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29208_d))._field_Kind; __jule_collection; }));
				(*(_29147_model))._field_Datas=jule::append((*_29147_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29208_d; __jule_collection; }));
			}
			_iter_next_1d7576b75:;
			++it;
			goto _iter_begin_1d7576b75;
		}
		_iter_end_1d7576b75:;
	};
	if ((!(_29187_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29117_tupT, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29147_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a7aba_evalMap(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c67ca68c_Map> _293928_m, jule::Ptr<_1c663e237_BraceLit> _293941_lit) {
	jule::Ptr<_1c66610d3_MapExprModel> _29407_model = jule::new_ptr<_1c66610d3_MapExprModel>(_1c66610d3_MapExprModel{._field_Kind=_293928_m, ._field_Entries=jule::Slice<jule::Ptr<_1c6660c09_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_293941_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d757a4d6:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _294415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_294415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1d757ab02:;
						{
							goto _match_end_1d757addd;
						}
					}
					else {
						_case_begin_1d757ae54:;
						{
							_1c678ae11_pushErr(_self_.ptr(), (*(_293941_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1d757addd:;
				};
				jule::Ptr<_1c663ea62_KeyValPair> _29548_pair = (*(_294415_expr))._field_Kind.cast_ptr<_1c663ea62_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1c6788b56_Data> _29568_key = _1c67a96e3_evalExpr(_self_, (*(_29548_pair))._field_Key);;
				if ((_29568_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c6788b56_Data> _29618_val = _1c67a96e3_evalExpr(_self_, (*_29548_pair.alloc)._field_Val);;
				if ((_29618_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1c6717057_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_293928_m))._field_Key), &(_29568_key), &((*((*_29548_pair.alloc)._field_Key))._field_Token))) {
					_1c67127c2_checkAssignType((*(_self_))._field_s, false, &((*_293928_m.alloc)._field_Key), &(_29568_key), (*(*(_29548_pair))._field_Key.alloc)._field_Token, _1c678de14_getOwnerRefers(_self_));
				};
				if (_1c6717057_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_293928_m.alloc)._field_Val), &(_29618_val), &((*((*_29548_pair.alloc)._field_Val))._field_Token))) {
					_1c67127c2_checkAssignType((*(_self_))._field_s, false, &((*_293928_m.alloc)._field_Val), &(_29618_val), (*(*(_29548_pair))._field_Val.alloc)._field_Token, _1c678de14_getOwnerRefers(_self_));
				};
				(*(_29407_model))._field_Entries=jule::append((*_29407_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6660c09_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c6660c09_KeyValPairExprModel>(_1c6660c09_KeyValPairExprModel{._field_Key=(*(_29568_key))._field_Model, ._field_Val=(*(_29618_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1d757a4d6:;
			++it;
			goto _iter_begin_1d757a4d6;
		}
		_iter_end_1d757a4d6:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_293928_m, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29407_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a7e0b_evalBraceLit(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663e237_BraceLit> _298733_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1d7587944:;
			{
				_1c678ae11_pushErr(_self_, (*(_298733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c67c0b27_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1d75879aa:;
			{
				return _1c67a7aba_evalMap(_self_, _1c67c0b27_Map((*(_self_))._field_prefix), _298733_lit);;
			}
		}
		else if ((_1c67c060a_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1d758536a:;
			{
				return _1c679db9e_evalStructLitExplicit(_self_, _1c67c060a_Struct((*(_self_))._field_prefix), (*(_298733_lit))._field_Exprs, (*_298733_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1d7585304:;
			{
				_1c678ae11_pushErr(_self_.ptr(), (*(_298733_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7586558:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a824c_evalAnonFunc(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c66465b3_FnDecl> _300233_decl) {
	_1c67cdccd_typeChecker _30037_tc = _1c67cdccd_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1c666d4ec_FnIns> _30087_ins = _1c67d5de5_buildFunc(&_30037_tc, _300233_decl);;
	if ((_30087_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30087_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _30137_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c672acb3_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d758d3a6:;
			{
				jule::Ptr<_1c66ba857_scopeChecker> _30168_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0);;
				jule::Ptr<_1c66ba857_scopeChecker> _30178_scc = _1c66ccc65_newChildChecker(_30168_sc);;
				(*(_30178_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c66b9867_scopeLabel>>>(nullptr);
				(*_30178_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>>(nullptr);
				(*_30178_scc.alloc)._field_owner=_30087_ins;
				(*_30178_scc.alloc)._field_childIndex=0LL;
				(*_30178_scc.alloc)._field_it=0LLU;
				(*_30178_scc.alloc)._field_cse=0LLU;
				(*_30178_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1c672acb3_Var>>>)((&(_30137_captured))));
				_1c672552c_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30087_ins), &(_30178_scc));
			}
		}
		else {
			_case_begin_1d758de89:;
			{
				_1c6725b48_checkFnIns((*_self_.alloc)._field_s, &(_30087_ins));
			}
		}
		_match_end_1d758de23:;
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30087_ins, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c6660830_AnonFnExprModel>(_1c6660830_AnonFnExprModel{._field_Captured=_30137_captured, ._field_Func=_30087_ins, ._field_Global=_1c678bb8c_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a858d_evalBinary(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c663c301_BinaryExpr> _304031_op) {
	_1c67abb13_binaryEval _30417_bs = static__1c67ac1eb_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1c67c49e9_Prim> _30444_prim = _1c67be087_Prim((*(_self_))._field_prefix);;
		if (((_30444_prim == nullptr) || (!(_1dd71e344_IsNum(_1c67c4d6d_Str(_30444_prim.ptr())))))) {
			jule::Ptr<_1c67bb8d1_TypeKind> _30469_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30469_prefix;
			});;
			return _1c67b2c5c_eval(&_30417_bs, &(_304031_op));;
		};
	};
	return _1c67b2c5c_eval(&_30417_bs, &(_304031_op));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a88ce_evalExprKind(jule::Ptr<_1c678a87d_eval> _self_, jule::Any _305533_kind) {
	{
		auto &_match_expr{ _305533_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1d759a14e:;
			{
				jule::Ptr<_1c6639001_RangeExpr> _30588_e = _305533_kind.unsafe_cast_ptr<_1c6639001_RangeExpr>();;
				return _1c67a88ce_evalExprKind(_self_, (*((*(_30588_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1d759a47e:;
			{
				return _1c678d441_evalLit(_self_.ptr(), _305533_kind.cast_ptr<_1c6639bc2_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d759a4e5:;
			{
				return _1c679317c_evalIdent(_self_.ptr(), _305533_kind.cast_ptr<_1c663a552_IdentExpr>(&__jule_any_type52));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1d759a55b:;
			{
				return _1c67934bd_evalUnary(_self_, _305533_kind.cast_ptr<_1c663ace4_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1d759a5c2:;
			{
				return _1c679380e_evalVariadic(_self_, _305533_kind.cast_ptr<_1c663b1bd_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1d759a638:;
			{
				return _1c6793b50_evalUnsafe(_self_, _305533_kind.cast_ptr<_1c663a09b_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1d759a69e:;
			{
				return _1c6794788_evalSliceExpr(_self_, _305533_kind.cast_ptr<_1c664028d_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1d759aa9a:;
			{
				return _1c67983d5_evalIndexing(_self_, _305533_kind.cast_ptr<_1c6640bea_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1d759ab11:;
			{
				return _1c6799716_evalSlicing(_self_, _305533_kind.cast_ptr<_1c664135a_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1d759ab77:;
			{
				return _1c679d3a7_evalCast(_self_, _305533_kind.cast_ptr<_1c663b597_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1d759abdd:;
			{
				return _1c679d6e8_evalNsSelection(_self_.ptr(), _305533_kind.cast_ptr<_1c663b971_NsSelectionExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1d759ac65:;
			{
				return _1c679dee0_evalStructLit(_self_, _305533_kind.cast_ptr<_1c663dc81_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1d759acdc:;
			{
				return _1c679e5b7_evalType(_self_.ptr(), _305533_kind.cast_ptr<_1c6634903_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1d759ad64:;
			{
				return _1c67a0bc3_evalFnCall(_self_, _305533_kind.cast_ptr<_1c663c961_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d759addb:;
			{
				return _1c67a737d_evalSubIdent(_self_, _305533_kind.cast_ptr<_1c663bd4a_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1d759ae63:;
			{
				return _1c67a76be_evalTuple(_self_, _305533_kind.cast_ptr<_1c663982b_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1d759aeda:;
			{
				return _1c67a7e0b_evalBraceLit(_self_, _305533_kind.cast_ptr<_1c663e237_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d759b062:;
			{
				return _1c67a824c_evalAnonFunc(_self_, _305533_kind.cast_ptr<_1c66465b3_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1d759b0d9:;
			{
				return _1c67a858d_evalBinary(_self_, _305533_kind.cast_ptr<_1c663c301_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1d759a418:;
			{
				return nullptr;;
			}
		}
		_match_end_1d759a3a2:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a8c20_eval1(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _310326_expr) {
	jule::Ptr<_1c6788b56_Data> _31047_d = _1c67a88ce_evalExprKind(_self_, (*(_310326_expr))._field_Kind);;
	if (((_31047_d == nullptr) || ((*(_31047_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c67c0374_Fn((*(_31047_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75c1263:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _31128_f = _1c67c0374_Fn((*(_31047_d))._field_Kind.ptr());;
				if (_1c666e9b5_IsBuiltin(_31128_f.ptr())) {
					_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1d75be96a;
				};
				jule::I64 _31174_required = (*((*_31128_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I64 _31184_given = (*_31128_f.alloc)._field_Generics.len();;
				if ((!(_1c670ac82_checkGenericQuantity((*(_self_))._field_s, _31174_required, _31184_given, (*_310326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31128_f))._field_Decl.alloc)._field_Statically)) && _1c666ac58_IsMethod((*(_31128_f))._field_Decl))) {
					_1c6709753_pushErr((*(_self_))._field_s, (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1c67b3158_findDirective(&((*(*(_31128_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1c6709753_pushErr((*(_self_))._field_s, (*_310326_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31128_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				} else {
					(*_31128_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31047_d))._field_Decl) {
			_case_begin_1d75c12c9:;
			{
				jule::Ptr<_1c665865d_StructIns> _31318_s = _1c67c060a_Struct((*(_31047_d))._field_Kind.ptr());;
				if ((_31318_s == nullptr)) {
					goto _match_end_1d75be96a;
				};
				jule::I64 _31354_required = (*((*(_31318_s))._field_Decl))._field_Generics.len();;
				jule::I64 _31364_given = (*(_31318_s))._field_Generics.len();;
				if ((!(_1c670ac82_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31354_required, _31364_given, (*_310326_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1d75be96a:;
	};
	return _31047_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a9061_eval(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _314825_expr) {
	jule::Ptr<_1c6788b56_Data> _31497_d = _1c67a8c20_eval1(_self_, _314825_expr);;
	if ((_31497_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1c67c1144_comptime((*(_31497_d))._field_Kind.ptr()))) {
		_1c6709753_pushErr((*_self_.alloc)._field_s.ptr(), (*(_314825_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _31497_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67a93a2_evalExpr1(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _316330_expr) {
	jule::Ptr<_1c6788b56_Data> _31647_d = _1c67a8c20_eval1(_self_, _316330_expr);;
	{
		
		if ((_31647_d == nullptr)) {
			_case_begin_1d75ce518:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31647_d))._field_Decl) {
			_case_begin_1d75ce5b2:;
			{
				_1c678ae11_pushErr(_self_, (*(_316330_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1d75ce491:;
			{
				return _31647_d;;
			}
		}
		_match_end_1d75ce419:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67a96e3_evalExpr(jule::Ptr<_1c678a87d_eval> _self_, jule::Ptr<_1c6638c37_Expr> _317929_expr) {
	jule::Ptr<_1c6788b56_Data> _31807_d = _1c67a9061_eval(_self_, _317929_expr);;
	{
		
		if ((_31807_d == nullptr)) {
			_case_begin_1d75d1581:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31807_d))._field_Decl) {
			_case_begin_1d75d162a:;
			{
				_1c678ae11_pushErr(_self_, (*(_317929_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1d75d1509:;
			{
				return _31807_d;;
			}
		}
		_match_end_1d75d1482:;
	};
}








inline jule::Bool _1c67a9b77_unaryEval_eq(_1c67a9b77_unaryEval *_self_, _1c67a9b77_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1c67a9b77_unaryEval static__1c67aa0ea_new(jule::Ptr<_1c678a87d_eval> _320020_e) {
	return _1c67a9b77_unaryEval{._field_e=_320020_e, ._field_d=jule::Ptr<_1c6788b56_Data>(nullptr), ._field_u=jule::Ptr<_1c663ace4_UnaryExpr>(nullptr)};;
}



inline void _1c67aa2e8_minus(_1c67a9b77_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1d75d3440:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c67be087_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75d382a:;
			{
				if ((!(_1dd71e344_IsNum(_1c67bbccc_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75d30dd:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d75d3077:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d75d2eab:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c6789591_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dd72438d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75d7c08:;
				{
					_1dd7233c0_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1dd721c92_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dd723854_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75d7ce6:;
				{
					_1dd7227ed_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1dd721258_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dd723ada_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75d78a6:;
				{
					_1dd7227ed_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1dd722028_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1d75d782e:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3238:5"));;
				}
			}
			_match_end_1d75d7752:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1c67aa4e6_plus(_1c67a9b77_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1d75dd36d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c67be087_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75dd758:;
			{
				if ((!(_1dd71e344_IsNum(_1c67bbccc_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75dd01b:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d75dcea5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d75dcd95:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c6789591_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dd72438d_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75e2b36:;
				{
					_1dd7233c0_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1dd721c92_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dd723854_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75e2c24:;
				{
					_1dd7227ed_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1dd721258_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dd723ada_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75e27d4:;
				{
					_1dd7227ed_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1dd722028_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1d75e275c:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3283:5"));;
				}
			}
			_match_end_1d75e2680:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1c67aa6e4_caret(_1c67a9b77_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1d75e829b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c67be087_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75e8686:;
			{
				if ((!(_1dd71dc6c_IsInt(_1c67bbccc_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d75e7e49:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1d75e7dd3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d75e7cc3:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c6789591_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dd723854_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75eca53:;
				{
					_1dd7227ed_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1dd721258_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dd723ada_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d75ecb41:;
				{
					_1dd722aa6_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1dd7214de_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1d75ec68a:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3326:5"));;
				}
			}
			_match_end_1d75ec5ad:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1c67aa8e2_excl(_1c67a9b77_unaryEval* _self_) {
	jule::Ptr<_1c67c49e9_Prim> _33403_t = _1c67be087_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_33403_t == nullptr) || (!(_1c67c7c2d_IsBool(_33403_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c6789591_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dd723d71_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1d7603d34:;
				{
					_1dd722d5e_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1dd721775_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1d760396b:;
				{
					__jule_panic_s(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3354:5"));;
				}
			}
			_match_end_1d760388e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1c67aaae0_star(_1c67a9b77_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1c67be5a4_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7607684:;
			{
				if ((!(_1c678b906_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c678ae11_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c67cbcdc_Ptr> _33798_t = _1c67be5a4_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1c67cc859_IsUnsafe(_33798_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_33798_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1c67be31d_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d760770b:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1c67be31d_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1d76072cc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d76062ba:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1c67aacdd_amper(_1c67a9b77_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d7610e2e:;
			{
				jule::Ptr<_1c665d7b7_StructLitExprModel> _34018_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1c665d7b7_StructLitExprModel>();;
				_1c67b3a82_makeStructLitAlloc(&((*(_self_))._field_d), &(_34018_lit));
			}
		}
		else {
			_case_begin_1d760d36b:;
			{
				{
					
					if (_1c67d8216_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1d760dc62:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67cbcdc_Ptr>(_1c67cbcdc_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1d760ce5e:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1d760d811:;
				};
			}
		}
		_match_end_1d760d305:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1c67aaedb_typeDecl(_1c67a9b77_unaryEval* _self_) {
	_1c67cdccd_typeChecker _34267_tc = _1c67cdccd_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1c67cccdd_referencer>(nullptr), ._field_refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c67baade_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d761496b:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d460d_buildPtrFromType(&_34267_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d761462a:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d3e7b_buildSptrFromType(&_34267_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1d7614064:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1d76145a3:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1c67ab1d9_evalData(_1c67a9b77_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d761a279:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _34518_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1c67a9061_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34518_prefix;
			}
		}
		else {
			_case_begin_1d7614691:;
			{
				(*(_self_))._field_d=_1c67a9061_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1d7619d5b:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ab52a_eval(_1c67a9b77_unaryEval* _self_, jule::Ptr<_1c663ace4_UnaryExpr> _346024_u) {
	(*(_self_))._field_u=_346024_u;
	_1c67ab1d9_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1c67aaedb_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _34713_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d761e943:;
			{
				_1c67aa2e8_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1d761e9a9:;
			{
				_1c67aa4e6_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d761ea20:;
			{
				_1c67aa6e4_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1d761ea86:;
			{
				_1c67aa8e2_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d761eaec:;
			{
				_1c67aaae0_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d761eb63:;
			{
				_1c67aacdd_amper(_self_);
			}
		}
		else {
			_case_begin_1d761e404:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1d761e8bb:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1d762016e:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str(_34713_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1c6789591_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1d761d0c3:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type20);
			}
		}
		_match_end_1d7621b54:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1c67abb13_binaryEval_eq(_1c67abb13_binaryEval *_self_, _1c67abb13_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1c67abb13_binaryEval static__1c67ac1eb_newPlain(jule::Ptr<_1c678a87d_eval> _350825_e) {
	return _1c67abb13_binaryEval{._field_e=_350825_e, ._field_l=jule::Ptr<_1c6788b56_Data>(nullptr), ._field_r=jule::Ptr<_1c6788b56_Data>(nullptr), ._field_op=jule::Ptr<_1c661e327_Token>(nullptr)};;
}



inline _1c67abb13_binaryEval static__1c67ac570_new(jule::Ptr<_1c678a87d_eval> _351420_e, jule::Ptr<_1c661e327_Token> _351434_op) {
	return _1c67abb13_binaryEval{._field_e=_351420_e, ._field_l=jule::Ptr<_1c6788b56_Data>(nullptr), ._field_r=jule::Ptr<_1c6788b56_Data>(nullptr), ._field_op=_351434_op};;
}



inline jule::Bool _1c67ac806_checkTypeCompatibility(_1c67abb13_binaryEval* _self_) {
	return _1c6713b03_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1c67aca8c_checkStructCommonOperatorCompatibility(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c666d4ec_FnIns> _352811_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1d76275a5:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d7627253:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1d76272b9:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d7627330:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d7627396:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d762740c:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d7627473:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d7628bb1:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1d7628c27:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d7628c8d:;
			{
				_352811_overload=(*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1d7626ce1:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1d76271cb:;
	};
	if ((_352811_overload == nullptr)) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1c666c474_ParamIns> _35607_p = (*(_352811_overload))._field_Params[1LL];;
	return _1c67127c2_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35607_p))._field_Decl))._field_Reference, &((*_35607_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op, _1c678de14_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67acd23_evalComptimeTypeInfo(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c66956de_comptimeTypeInfo> _35657_r = _1c67c294d_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_35657_r == nullptr)) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c66956de_comptimeTypeInfo> _35707_l = _1c67c294d_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1d7638033:;
			{
				jule::Ptr<_1dd71e850_Const> _35738_constant = static__1dd720356_NewBool(_1c67bc11d_Equal((*(_35707_l))._field_base, (*(_35657_r))._field_base));;
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35738_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35738_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d76394c9:;
			{
				jule::Ptr<_1dd71e850_Const> _35808_constant = static__1dd720356_NewBool((!(_1c67bc11d_Equal((*(_35707_l))._field_base, (*(_35657_r))._field_base))));;
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35808_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_35808_constant});;
			}
		}
		else {
			_case_begin_1d7635d44:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7637b59:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ad0a9_evalNil(_1c67abb13_binaryEval* _self_) {
	if ((!(_1c67bd7d4_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d7643dda:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d76421c4:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7643a11:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ad340_evalEnum(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c66816a8_Enum> _36117_enm = _1c67be83a_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d764631b:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _36158_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1c67be83a_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_36158_rkind=(*((*(_1c67be83a_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1c671322e_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_36117_enm))._field_Kind.alloc)._field_Kind), &(_36158_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		_match_end_1d7646294:;
	};
	if (((_1c67be83a_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_36117_enm != _1c67be83a_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_36117_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d764be6a:;
			{
				if ((!(_1dd71e344_IsNum(_1c67bbccc_Str((*(*(_36117_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d764d0ae:;
			{
				jule::Ptr<_1c6680b3b_EnumItem> _36454_first = (*_36117_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1dd723854_IsI64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1d7651997:;
						{
							if ((_1dd721258_ReadI64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1d7656381;
							};
							goto _julec_label_1d7654d85;
						}
					}
					else if (_1dd723ada_IsU64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1d7651a85:;
						{
							if ((_1dd7214de_ReadU64((*((*((*(_36454_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1d7656381;
							};
							goto _julec_label_1d7654d85;
						}
					}
					else {
						_case_begin_1d76515ce:;
						{
							__jule_panic_s(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3658:5"));;
						}
					}
					_match_end_1d7651557:;
				};
				_julec_label_1d7654d85:;
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1c678b274_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1d7656381:;
				goto _case_begin_1d764d125;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d764d125:;
			{
				if (((_1c67be087_Prim((*(*(_36117_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1dd71dc6c_IsInt(_1c67c4d6d_Str(_1c67be087_Prim((*((*(_36117_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1d7646382:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_36117_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d764bab3:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ad5c6_evalTypeEnum(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c6682db3_TypeEnum> _36787_enm = _1c67beac1_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d765a143:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d7659472:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c6683237_Str(_36787_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7659bd1:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ad85c_evalSptr(_1c67abb13_binaryEval* _self_) {
	if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d765c662:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d765b584:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d765c288:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67adae3_evalPtr(_1c67abb13_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d765ea3d:;
			{
				if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d7660ea1:;
			{
				if ((_1c67be5a4_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1c67cc859_IsUnsafe(_1c67be5a4_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1c67b4c1a_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1d765e136:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d765e059:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67add79_evalArr(_1c67abb13_binaryEval* _self_) {
	if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d7667b34:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1c666d4ec_FnIns> _37559_f = _1c666ba28_instanceForce(_1c6224746_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37559_f))._field_Generics=jule::append((*_37559_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=(*(_1c67bed57_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _37575_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6722d32_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37559_f), &((*(_self_))._field_op));
						_37575_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37575_ok))) {
						__jule_panic_s(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3759:6"));;
					};
					_1d730145a_pushReference((*(_self_))._field_e, &(_37559_f));
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d76628ed:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d766775a:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ae110_evalStruct(_1c67abb13_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1d7669509:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d7669592:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1d766dae6:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d766db5c:;
			{
				if (((*(_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d766dbc3:;
			{
				if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		_match_end_1d766942c:;
	};
	if ((!(_1c67aca8c_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67ae396_evalTrait(_1c67abb13_binaryEval* _self_) {
	if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d767a22e:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d76795d5:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d7679d55:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ae62c_evalAny(_1c67abb13_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d767c60a:;
			{
				_1c67d9998_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op), _1c678de14_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d767bc03:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d767bb26:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67ae8b3_evalBool(_1c67abb13_binaryEval* _self_) {
	if ((!(_1c67ac806_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1d7680795:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1d767d93b:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d76803bb:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67aeb49_evalStr(_1c67abb13_binaryEval* _self_) {
	jule::Str _38717_rk = _1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_38717_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_38717_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1d7684a30:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d7684942:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1d7683501:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d768458a:;
	};
}



inline void _1c67aed47_setTypeToGreater(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c67c49e9_Prim> _38963_lp = _1c67be087_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1c67c49e9_Prim> _38973_rp = _1c67be087_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38973_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38963_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Kind=(*(*(_self_))._field_l.alloc)._field_Kind;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38963_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1c67b0100_checkModData(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _391333_d) {
	if ((!(_1c6789591_IsConst((*(_391333_d)).ptr())))) {
		if (((_1c67be087_Prim((*((*(_391333_d))))._field_Kind.ptr()) == nullptr) || (!(_1dd71dc6c_IsInt((*(_1c67be087_Prim((*((*(_391333_d))))._field_Kind)))._field_Kind))))) {
			_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c676e6b9_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _391333_d)) {
			_case_begin_1d769107a:;
			{
				_1dd7227ed_SetI64((*((*(_391333_d))))._field_Constant.ptr(), _1dd722028_AsI64((*((*(_391333_d))))._field_Constant));
			}
		}
		else if (_1c676ea82_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _391333_d)) {
			_case_begin_1d7690c5b:;
			{
				_1dd722aa6_SetU64((*((*(_391333_d))))._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_391333_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1d7690be5:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d7690b7e:;
	};
}



inline void _1c67b02ed_mod(_1c67abb13_binaryEval* _self_) {
	_1c67b0100_checkModData(_self_, &((*(_self_))._field_l));
	_1c67b0100_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c67b06e9_numbersAreCompatibile(_1c67abb13_binaryEval* _self_, jule::Str* _393534_lk, jule::Str* _393544_rk) {
	if ((!(_1dd71e344_IsNum((*(_393544_rk)))))) {
		return false;;
	};
	if ((_1c6789591_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_393534_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1c6789591_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c676e345_floatAssignable(_393534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393544_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_393534_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1c6789591_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c676e345_floatAssignable(_393534_lk, &((*(_self_))._field_r));;
		};
		return ((*(_393544_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1c6789591_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1c676ee06_intAssignable((*(_393534_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_393534_lk)) == (*(_393544_rk)));;
}



inline jule::Ptr<_1c6788b56_Data> _1c67b0980_shift(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c67c49e9_Prim> _39633_lk = _1c67be087_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((_39633_lk == nullptr)) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c67c49e9_Prim> _39683_rk = _1c67be087_Prim((*((*(_self_))._field_r))._field_Kind);;
	if ((_39683_rk == nullptr)) {
		_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1dd71e344_IsNum((*(_39633_lk))._field_Kind))) || (!(_1dd71e344_IsNum((*(_39683_rk))._field_Kind))))) {
		_1c671364c_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1dd71dc6c_IsInt((*(_39633_lk))._field_Kind)))) {
		if (((!(_1c6789591_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39633_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39683_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1dd7227ed_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1dd722028_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1c68a31e3_primI64;
		} else if (_1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1dd722aa6_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Kind=_1c68a3ee6_primU64;
		};
	};
	if ((!(_1dd71dc6c_IsInt((*(_39683_rk))._field_Kind)))) {
		if (((!(_1c6789591_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39633_lk))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*(_39683_rk))._field_Kind, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} else if (_1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1dd7227ed_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1dd722028_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1c68a31e3_primI64;
		} else if (_1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1dd722aa6_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Kind=_1c68a3ee6_primU64;
		};
	};
	if ((!(_1c67b4544_isOkForShifting(&((*(_self_))._field_r))))) {
		_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67b0c16_evalFloat(_1c67abb13_binaryEval* _self_) {
	jule::Str _40183_lk = (*(_1c67be087_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40193_rk = (*(_1c67be087_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1c67b06e9_numbersAreCompatibile(_self_, &(_40183_lk), &(_40193_rk))))) {
		_1c671364c_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d76ac074:;
			{
				_1c67aed47_setTypeToGreater(_self_);
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		_match_end_1d76abeec:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d76ada48:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4043:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d76ae8e5:;
			{
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d76ae95b:;
			{
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d76acedc:;
			{
				if ((!(_1dd71dc6c_IsInt(_40193_rk)))) {
					_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_40183_lk, &__jule_any_type4); (*it++) = jule::Any(_40193_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1c67b02ed_mod(_self_);
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1d76ac162:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d76ace76:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67b0e9c_evalInt(_1c67abb13_binaryEval* _self_) {
	jule::Str _40673_lk = (*(_1c67be087_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _40683_rk = (*(_1c67be087_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1c67b06e9_numbersAreCompatibile(_self_, &(_40673_lk), &(_40683_rk))))) {
		_1c671364c_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d76b5786:;
			{
				return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1c6e_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
			}
		}
		_match_end_1d76b570e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d76b706d:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4092:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d76b7e1a:;
			{
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d76b7e81:;
			{
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d76b6688:;
			{
				_1c67b02ed_mod(_self_);
				_1c67aed47_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1d76b5874:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d76b6b61:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67b1233_evalPrim(_1c67abb13_binaryEval* _self_) {
	jule::Ptr<_1c67c49e9_Prim> _41153_prim = _1c67be087_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1c67c7c2d_IsBool(_41153_prim.ptr())) {
			_case_begin_1d76bb23c:;
			{
				return _1c67ae8b3_evalBool(_self_);;
			}
		}
		else if (_1c67c7eb4_IsStr(_41153_prim.ptr())) {
			_case_begin_1d76bb2d6:;
			{
				return _1c67aeb49_evalStr(_self_);;
			}
		}
		_match_end_1d76bb1a4:;
	};
	if ((_1c67be087_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67c4d6d_Str(_41153_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1dd71e0ad_IsFloat((*_41153_prim.alloc)._field_Kind)) {
			_case_begin_1d76be064:;
			{
				return _1c67b0c16_evalFloat(_self_);;
			}
		}
		else if (_1dd71dc6c_IsInt((*_41153_prim.alloc)._field_Kind)) {
			_case_begin_1d76be0ec:;
			{
				return _1c67b0e9c_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1d76bdeed:;
			{
				return nullptr;;
			}
		}
		_match_end_1d76bc42a:;
	};
}



inline jule::Bool _1c67b14b9_checkSpecialCases(_1c67abb13_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41403_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));;
	if ((!(_41403_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1c67bd031_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1c67bca14_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1c67bd031_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1c67bca14_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67b1750_evalOp(_1c67abb13_binaryEval* _self_) {
	jule::Bool _41553_ok = _1c67b14b9_checkSpecialCases(_self_);;
	if ((!(_41553_ok))) {
		return nullptr;;
	};
	if ((_1c67c060a_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
		return _1c67ae110_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U64>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U64>(57LLU)))) {
		return _1c67b0980_shift(_self_);;
	};
	{
		
		if (_1c67bcc9a_Void((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1d76c81d3:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1c67c294d_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c838c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c8249;
			}
		}
		else if ((_1c67c294d_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c8249:;
			{
				return _1c67acd23_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1c67be087_Prim((*((*(_self_))._field_r))._field_Kind) != nullptr) && _1c67c824a_IsAny(_1c67be087_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1d76c82b0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9833;
			}
		}
		else if (_1c67bca14_IsNil((*((*(_self_))._field_r))._field_Kind)) {
			_case_begin_1d76c9833:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9899;
			}
		}
		else if (_1c67bca14_IsNil((*((*(_self_))._field_l))._field_Kind)) {
			_case_begin_1d76c9899:;
			{
				return _1c67ad0a9_evalNil(_self_);;
			}
		}
		else if (((_1c67be087_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr) && _1c67c824a_IsAny(_1c67be087_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1d76c9998:;
			{
				return _1c67ae62c_evalAny(_self_);;
			}
		}
		else if ((_1c67beac1_TypeEnum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c9a0e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9a75;
			}
		}
		else if ((_1c67beac1_TypeEnum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9a75:;
			{
				return _1c67ad5c6_evalTypeEnum(_self_);;
			}
		}
		else if ((_1c67be83a_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c9adb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9b52;
			}
		}
		else if ((_1c67be83a_Enum((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9b52:;
			{
				return _1c67ad340_evalEnum(_self_);;
			}
		}
		else if ((_1c67be31d_Sptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c9bb8:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9c2e;
			}
		}
		else if ((_1c67be31d_Sptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9c2e:;
			{
				return _1c67ad85c_evalSptr(_self_);;
			}
		}
		else if ((_1c67be5a4_Ptr((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c9c95:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9d0b;
			}
		}
		else if ((_1c67be5a4_Ptr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9d0b:;
			{
				return _1c67adae3_evalPtr(_self_);;
			}
		}
		else if ((_1c67bed57_Arr((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9d72:;
			{
				return _1c67add79_evalArr(_self_);;
			}
		}
		else if ((_1c67c0891_Trait((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
			_case_begin_1d76c9e3d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1d76c9ea4;
			}
		}
		else if ((_1c67c0891_Trait((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76c9ea4:;
			{
				return _1c67ae396_evalTrait(_self_);;
			}
		}
		else if ((_1c67be087_Prim((*((*(_self_))._field_l))._field_Kind) != nullptr)) {
			_case_begin_1d76ca01a:;
			{
				return _1c67b1233_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1d76c8007:;
			{
				_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d76c759a:;
	};
}



inline void _1c67b1a08_evalConst(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _422530_d) {
	{
		
		if (((*(_422530_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1d76dba65:;
			{
				return;;
			}
		}
		else if ((!(_1c6789591_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c6789591_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1d76dc11a:;
			{
				(*((*(_422530_d))))._field_Constant=nullptr;
				(*((*(_422530_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1d76db955:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1d76dc1e7:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd725438_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d76de64a:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool((!(_1dd725438_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1d76de6b1:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd7250e7_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1d76de727:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd724ca6_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1d76de78d:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd725e0b_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1d76de815:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd725779_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d76de88c:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd72624c_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d76de914:;
			{
				(*((*(_422530_d))))._field_Constant=static__1dd720356_NewBool(_1dd725aba_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1d76de98b:;
			{
				_1dd72658d_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d76dea13:;
			{
				_1dd7268ce_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d76dea8a:;
			{
				_1dd726c20_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d76deb12:;
			{
				jule::Bool _42654_ok = _1dd727061_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42654_ok)) && (_1dd722545_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1c67c49e9_Prim> _42708_prim = _1c67be087_Prim((*((*(_422530_d))))._field_Kind.ptr());;
				{
					
					if (_1dd71d695_IsSigInt((*(_42708_prim))._field_Kind)) {
						_case_begin_1d7700c22:;
						{
							_1dd7227ed_SetI64((*((*(_422530_d))))._field_Constant, _1dd722028_AsI64((*((*(_422530_d))))._field_Constant));
						}
					}
					else if (_1dd71d9a3_IsUnsigInt((*(_42708_prim))._field_Kind)) {
						_case_begin_1d7700cbb:;
						{
							_1dd722aa6_SetU64((*((*(_422530_d))))._field_Constant, _1dd7222ae_AsU64((*((*(_422530_d))))._field_Constant));
						}
					}
					_match_end_1d7700b9a:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d76deb89:;
			{
				jule::Bool _42784_ok = _1dd7273a2_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42784_ok)) && (_1dd722545_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1d76dec11:;
			{
				_1dd727a34_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d76dec88:;
			{
				_1dd7276e3_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d76ded10:;
			{
				_1dd727d75_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1d76ded87:;
			{
				_1dd7281b6_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d76dee0e:;
			{
				_1dd728507_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_422530_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1d76dd935:;
	};
	(*((*(_422530_d))))._field_Model=jule::Any((*((*(_422530_d))))._field_Constant, &__jule_any_type20);
	_1c67b6942_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _422530_d, _1c67be83a_Enum((*((*(_422530_d))))._field_Kind.ptr()), &((*(_self_))._field_op), _1c678de14_getOwnerRefers((*(_self_))._field_e));
}



inline void _1c67b1cb1_checkData(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _430330_d) {
	jule::Ptr<_1c666d4ec_FnIns> _43043_f = _1c67c0374_Fn((*((*(_430330_d))))._field_Kind.ptr());;
	if ((((_43043_f != nullptr) && ((*_43043_f.alloc)._field_Decl != nullptr)) && _1c666ac58_IsMethod((*(_43043_f))._field_Decl))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1c67b1eae_checkDatas(_1c67abb13_binaryEval* _self_) {
	_1c67b1cb1_checkData(_self_, &((*(_self_))._field_l));
	_1c67b1cb1_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c67b2267_setModel(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _431529_d) {
	if (_1c6789591_IsConst((*(_431529_d)).ptr())) {
		if (((_1c6789591_IsConst((*(_self_))._field_l.ptr()) && _1c6789591_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1c6788b56_Data> _43267_l;
	jule::Ptr<_1c6788b56_Data> _432614_r;
	({
		jule::Ptr<_1c6788b56_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c6788b56_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43267_l = ___jule_assign_arg;
		_432614_r = _1___jule_assign_arg;
	});
	if ((!(_1c67898d2_GoodOperand(_43267_l, &(_432614_r))))) {
		std::swap(_43267_l, _432614_r);
	};
	(*((*(_431529_d))))._field_Model=jule::Any(jule::new_ptr<_1c665ca19_BinaryExprModel>(_1c665ca19_BinaryExprModel{._field_Left=jule::new_ptr<_1c665c51e_OperandExprModel>(_1c665c51e_OperandExprModel{._field_Kind=(*_43267_l.alloc)._field_Kind, ._field_Model=(*_43267_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1c665c51e_OperandExprModel>(_1c665c51e_OperandExprModel{._field_Kind=(*_432614_r.alloc)._field_Kind, ._field_Model=(*_432614_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1c67b2520_postEval(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _434429_d) {
	(*((*(_434429_d))))._field_Lvalue=false;
	_1c67b2267_setModel(_self_, _434429_d);
}



inline jule::Ptr<_1c6788b56_Data> _1c67b291b_solveExplicit(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c6788b56_Data>* _434934_l, jule::Ptr<_1c6788b56_Data>* _434949_r) {
	({
		jule::Ptr<_1c6788b56_Data> ___jule_assign_arg = (*(_434934_l));
		jule::Ptr<_1c6788b56_Data> _1___jule_assign_arg = (*(_434949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c67b1eae_checkDatas(_self_);
	jule::Ptr<_1c6788b56_Data> _43547_d = _1c67b1750_evalOp(_self_);;
	({
		jule::Ptr<_1c6788b56_Data> ___jule_assign_arg = (*(_434934_l));
		jule::Ptr<_1c6788b56_Data> _1___jule_assign_arg = (*(_434949_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c67b1a08_evalConst(_self_, &(_43547_d));
	if ((_43547_d != nullptr)) {
		(*_43547_d.alloc)._field_Mutable=true;
		_1c67b2520_postEval(_self_, &(_43547_d));
	};
	return _43547_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c67b2c5c_eval(_1c67abb13_binaryEval* _self_, jule::Ptr<_1c663c301_BinaryExpr>* _436925_op) {
	if (((*((*((*(_436925_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c678ae11_pushErr((*(_self_))._field_e.ptr(), (*((*(_436925_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1c678b274_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6788b56_Data> _43767_l = _1c67a93a2_evalExpr1((*(_self_))._field_e, (*((*(_436925_op))))._field_Left);;
	if (((_43767_l == nullptr) || ((*(_43767_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _43817_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43767_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43817_prefix;
	});;
	jule::Ptr<_1c6788b56_Data> _43847_r = _1c67a93a2_evalExpr1((*(_self_))._field_e, (*((*(_436925_op))))._field_Right);;
	if (((_43847_r == nullptr) || ((*(_43847_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_436925_op))))._field_Op;
	jule::Ptr<_1c6788b56_Data> _43917_d = _1c67b291b_solveExplicit(_self_, &(_43767_l), &(_43847_r));;
	if ((((_43917_d != nullptr) && (*(_43767_l))._field_IsRune) && (*(_43847_r))._field_IsRune)) {
		(*_43917_d.alloc)._field_IsRune=true;
	};
	return _43917_d;;
}
















inline jule::Bool _1c67bb8d1_TypeKind_eq(_1c67bb8d1_TypeKind *_self_, _1c67bb8d1_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1c67bbccc_Str(_1c67bb8d1_TypeKind* _self_) {
	if (_1c67bca14_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_20759e353_StrBuilder _747_kind = static__2075a7c41_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_2075a814d_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1c67bc77d_Binded(_self_)) {
		_2075a814d_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_2075a814d_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_2075a814d_WriteStr(&_747_kind, ((_1c67bb42a_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1c67bae85_Str((*(_self_))._field_Kind.data));
	};
	return _2075a8945_Str(&_747_kind);;
}



inline jule::Bool _1c67bc11d_Equal(jule::Ptr<_1c67bb8d1_TypeKind> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _9018_other) {
	if (_1c67bca14_IsNil(_self_.ptr())) {
		return _1c67bca14_IsNil(_9018_other.ptr());;
	};
	if (_1c67bc77d_Binded(_self_)) {
		return (_1c67bc77d_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1c67bb42a_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1c67bb2c6_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1c67bc77d_Binded(_1c67bb8d1_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1c67bca14_IsNil(_1c67bb8d1_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c67bcc9a_Void(_1c67bb8d1_TypeKind* _self_) {
	jule::Ptr<_1c67c49e9_Prim> _1103_prim = _1c67be087_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c67bd031_Comparable(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _1178__self = _self_;;
		if ((_1c67c060a_Struct(_1178__self) != nullptr)) {
			return (*(_1c67c060a_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1c67bed57_Arr(_1178__self) != nullptr)) {
			return _1c67bd031_Comparable((*(_1c67bed57_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1c67c0b27_Map(_1178__self) == nullptr) && (_1c67c00dd_Slc(_1178__self) == nullptr)) && (_1c67c0374_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1c67bd2b7_Mutable(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _1318__self = _self_;;
		if ((_1c67c060a_Struct(_1318__self) != nullptr)) {
			return (*(_1c67c060a_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1c67c0891_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1c67be087_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1c67c49e9_Prim> _1395_p = _1c67be087_Prim(_1318__self);;
			return _1c67c824a_IsAny(_1395_p.ptr());;
		};
		if ((_1c67bed57_Arr(_1318__self) != nullptr)) {
			return _1c67bd2b7_Mutable((*(_1c67bed57_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1c67c00dd_Slc(_1318__self) != nullptr) || (_1c67be5a4_Ptr(_1318__self) != nullptr)) || (_1c67be31d_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1c67bd54d_Ordered(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1c67c49e9_Prim> _1554_prim = _1c67be087_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1dd71e344_IsNum((*_1554_prim.alloc)._field_Kind) || _1c67c7eb4_IsStr(_1554_prim));;
		};
		if ((_1c67be5a4_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1c665865d_StructIns> _1624_s = _1c67c060a_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1c66816a8_Enum> _1694_enm = _1c67be83a_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1dd71e344_IsNum(_1c67bbccc_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1c67bd7d4_NilCompatible(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1c67c49e9_Prim> _1824_prim = _1c67be087_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1c67c824a_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1c67bca14_IsNil(_1808__self) || (_1c67c0374_Fn(_1808__self) != nullptr)) || (_1c67be31d_Sptr(_1808__self) != nullptr)) || (_1c67be5a4_Ptr(_1808__self) != nullptr)) || (_1c67c0891_Trait(_1808__self) != nullptr)) || (_1c67c00dd_Slc(_1808__self) != nullptr)) || (_1c67c0b27_Map(_1808__self) != nullptr)) || (_1c67beac1_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1c67bda6a_GC(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1c67c49e9_Prim> _2024_prim = _1c67be087_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1c67c824a_IsAny(_2024_prim) || _1c67c7eb4_IsStr(_2024_prim));;
		};
		return ((((_1c67be31d_Sptr(_2018__self) != nullptr) || (_1c67c00dd_Slc(_2018__self) != nullptr)) || (_1c67c0891_Trait(_2018__self) != nullptr)) || (_1c67beac1_TypeEnum(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1c67bdd01_Variadicable(_1c67bb8d1_TypeKind* _self_) {
	{
		_1c67bb8d1_TypeKind* _2148__self = _self_;;
		return (_1c67c00dd_Slc(_2148__self) != nullptr);;
	};
}



inline jule::Ptr<_1c67c49e9_Prim> _1c67be087_Prim(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)) {
			_case_begin_1d64585a2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67c49e9_Prim>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1d646ca7d:;
			{
				return nullptr;;
			}
		}
		_match_end_1d646ca17:;
	};
}



inline jule::Ptr<_1c67c8525_Sptr> _1c67be31d_Sptr(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)) {
			_case_begin_1d646d71b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67c8525_Sptr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1d646d96e:;
			{
				return nullptr;;
			}
		}
		_match_end_1d646d908:;
	};
}



inline jule::Ptr<_1c67cbcdc_Ptr> _1c67be5a4_Ptr(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28)) {
			_case_begin_1d646e695:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67cbcdc_Ptr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1d646e4db:;
			{
				return nullptr;;
			}
		}
		_match_end_1d646e475:;
	};
}



inline jule::Ptr<_1c66816a8_Enum> _1c67be83a_Enum(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3)) {
			_case_begin_1d6470421:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66816a8_Enum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1d6470267:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6470201:;
	};
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c67beac1_TypeEnum(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)) {
			_case_begin_1d647119c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6682db3_TypeEnum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1d6470ee3:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6470e7c:;
	};
}



inline jule::Ptr<_1c67cb319_Arr> _1c67bed57_Arr(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27)) {
			_case_begin_1d6471e28:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67cb319_Arr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1d6471c6e:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6471c08:;
	};
}



inline jule::Ptr<_1c67c8ee8_Slc> _1c67c00dd_Slc(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)) {
			_case_begin_1d6472ba4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67c8ee8_Slc>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1d64729ea:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6472984:;
	};
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c67c0374_Fn(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)) {
			_case_begin_1d6473930:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c666d4ec_FnIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1d6473776:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6473710:;
	};
}



inline jule::Ptr<_1c665865d_StructIns> _1c67c060a_Struct(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)) {
			_case_begin_1d64746ab:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c665865d_StructIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1d6474502:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647448b:;
	};
}



inline jule::Ptr<_1c667de9c_Trait> _1c67c0891_Trait(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data2)) {
			_case_begin_1d6475437:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c667de9c_Trait>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1d647527d:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6475217:;
	};
}



inline jule::Ptr<_1c67ca68c_Map> _1c67c0b27_Map(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26)) {
			_case_begin_1d64761b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67ca68c_Map>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1d6476009:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6475e93:;
	};
}



inline jule::Ptr<_1c67c9adc_Tuple> _1c67c0dad_Tup(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25)) {
			_case_begin_1d6476e3e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c67c9adc_Tuple>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1d6476c85:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6476c1e:;
	};
}



inline jule::Bool _1c67c1144_comptime(_1c67bb8d1_TypeKind* _self_) {
	return (((((((((((((((_1c67c26b7_comptimeTypeInfos(_self_) != nullptr) || (_1c67c294d_comptimeTypeInfo(_self_) != nullptr)) || (_1c67c13ca_comptimeStructFields(_self_) != nullptr)) || (_1c67c1661_comptimeStructField(_self_) != nullptr)) || (_1c67c18e7_comptimeEnumFields(_self_) != nullptr)) || (_1c67c1b7d_comptimeEnumField(_self_) != nullptr)) || (_1c67c2bd4_comptimeStatics(_self_) != nullptr)) || (_1c67c2e6a_comptimeStatic(_self_) != nullptr)) || (_1c67c1e14_comptimeParams(_self_) != nullptr)) || (_1c67c219a_comptimeParam(_self_) != nullptr)) || (_1c67c3201_comptimeValue(_self_) != nullptr)) || (_1c67c3c3a_comptimeFiles(_self_) != nullptr)) || (_1c67c39a4_comptimeFile(_self_) != nullptr)) || (_1c67c3487_comptimeDecl(_self_) != nullptr)) || (_1c67c371d_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1c6687add_comptimeStructFields> _1c67c13ca_comptimeStructFields(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data7)) {
			_case_begin_1d647799a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6687add_comptimeStructFields>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1d647bdab:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647bd45:;
	};
}



inline jule::Ptr<_1c668634a_comptimeStructField> _1c67c1661_comptimeStructField(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data6)) {
			_case_begin_1d647c72a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c668634a_comptimeStructField>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1d647c571:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647c50a:;
	};
}



inline jule::Ptr<_1c668daa0_comptimeEnumFields> _1c67c18e7_comptimeEnumFields(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data11)) {
			_case_begin_1d647d4a6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c668daa0_comptimeEnumFields>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1d647d2ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647d286:;
	};
}



inline jule::Ptr<_1c668c791_comptimeEnumField> _1c67c1b7d_comptimeEnumField(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data10)) {
			_case_begin_1d647e232:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c668c791_comptimeEnumField>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1d647e078:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647e012:;
	};
}



inline jule::Ptr<_1c6692411_comptimeParams> _1c67c1e14_comptimeParams(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data13)) {
			_case_begin_1d647eead:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6692411_comptimeParams>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1d647ed04:;
			{
				return nullptr;;
			}
		}
		_match_end_1d647ec8d:;
	};
}



inline jule::Ptr<_1c66905a7_comptimeParam> _1c67c219a_comptimeParam(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data12)) {
			_case_begin_1d6480c39:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66905a7_comptimeParam>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1d6480a80:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6480a19:;
	};
}



inline jule::Ptr<_1c66857de_comptimeRange> _1c67c2431_comptimeRange(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)) {
			_case_begin_1d64819b5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66857de_comptimeRange>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1d648180b:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6481795:;
	};
}



inline jule::Ptr<_1c6693c70_comptimeTypeInfos> _1c67c26b7_comptimeTypeInfos(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data14)) {
			_case_begin_1d6482741:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c6693c70_comptimeTypeInfos>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1d6482587:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6482521:;
	};
}



inline jule::Ptr<_1c66956de_comptimeTypeInfo> _1c67c294d_comptimeTypeInfo(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15)) {
			_case_begin_1d64834bc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66956de_comptimeTypeInfo>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1d6483313:;
			{
				return nullptr;;
			}
		}
		_match_end_1d648329c:;
	};
}



inline jule::Ptr<_1c668ad22_comptimeStatics> _1c67c2bd4_comptimeStatics(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data9)) {
			_case_begin_1d6484248:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c668ad22_comptimeStatics>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1d648408e:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6484028:;
	};
}



inline jule::Ptr<_1c668956d_comptimeStatic> _1c67c2e6a_comptimeStatic(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data8)) {
			_case_begin_1d6484ec4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c668956d_comptimeStatic>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1d6484d1a:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6484ca4:;
	};
}



inline jule::Ptr<_1c669b7e4_comptimeValue> _1c67c3201_comptimeValue(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data16)) {
			_case_begin_1d6485c50:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c669b7e4_comptimeValue>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1d6485a96:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6485a30:;
	};
}



inline jule::Ptr<_1c66a4dd5_comptimeDecl> _1c67c3487_comptimeDecl(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20)) {
			_case_begin_1d64869cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66a4dd5_comptimeDecl>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1d6486822:;
			{
				return nullptr;;
			}
		}
		_match_end_1d64867ab:;
	};
}



inline jule::Ptr<_1c66a2ae7_comptimeDecls> _1c67c371d_comptimeDecls(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19)) {
			_case_begin_1d6487757:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66a2ae7_comptimeDecls>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1d648759d:;
			{
				return nullptr;;
			}
		}
		_match_end_1d6487537:;
	};
}



inline jule::Ptr<_1c66a0ebe_comptimeFile> _1c67c39a4_comptimeFile(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18)) {
			_case_begin_1d64884d3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c66a0ebe_comptimeFile>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1d6488329:;
			{
				return nullptr;;
			}
		}
		_match_end_1d64882b3:;
	};
}



inline jule::Ptr<_1c669e550_comptimeFiles> _1c67c3c3a_comptimeFiles(_1c67bb8d1_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data17)) {
			_case_begin_1d648925e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c669e550_comptimeFiles>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1d64890a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1d648903e:;
	};
}








inline jule::Bool _1c67c40e2_TypeSymbol_eq(_1c67c40e2_TypeSymbol *_self_, _1c67c40e2_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1c67c4499_checked(_1c67c40e2_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}








inline jule::Bool _1c67c49e9_Prim_eq(_1c67c49e9_Prim *_self_, _1c67c49e9_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1c67c4d6d_Str(_1c67c49e9_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c67c51ae_Equal(jule::Ptr<_1c67c49e9_Prim> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _53218_other) {
	jule::Ptr<_1c67c49e9_Prim> _5333_prim = _1c67be087_Prim(_53218_other.ptr());;
	if ((_5333_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5333_prim))._field_Kind);;
}



inline jule::Bool _1c67c5654_IsConstraint(_1c67c49e9_Prim* _self_) {
	return ((((!(_1c67c7eb4_IsStr(_self_))) && (!(_1c67c824a_IsAny(_self_)))) && (!(_1c67c7c2d_IsBool(_self_)))) && (!(_1dd71e344_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c67c58da_IsI8(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1c67c5b71_IsI16(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1c67c5e07_IsI32(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1c67c618d_IsI64(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1c67c6424_IsU8(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1c67c66aa_IsU16(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1c67c6941_IsU32(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1c67c6bc7_IsU64(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1c67c6e5d_IsF32(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1c67c71e4_IsF64(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1c67c747a_IsInt(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1c67c7711_IsUint(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1c67c7997_IsUintptr(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1c67c7c2d_IsBool(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1c67c7eb4_IsStr(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1c67c824a_IsAny(_1c67c49e9_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1c67c8525_Sptr_eq(_1c67c8525_Sptr *_self_, _1c67c8525_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c67c88cc_Str(_1c67c8525_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1c67bbccc_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c67c8c1d_Equal(jule::Ptr<_1c67c8525_Sptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _60918_other) {
	jule::Ptr<_1c67c8525_Sptr> _6103_sptr = _1c67be31d_Sptr(_60918_other.ptr());;
	if ((_6103_sptr == nullptr)) {
		return false;;
	};
	return _1c67bc11d_Equal((*(_self_))._field_Elem, (*(_6103_sptr))._field_Elem);;
}








inline jule::Bool _1c67c8ee8_Slc_eq(_1c67c8ee8_Slc *_self_, _1c67c8ee8_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c67c94b0_Str(_1c67c8ee8_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1c67bbccc_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c67c9801_Equal(jule::Ptr<_1c67c8ee8_Slc> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _62818_other) {
	jule::Ptr<_1c67c8ee8_Slc> _6293_slc = _1c67c00dd_Slc(_62818_other.ptr());;
	if ((_6293_slc == nullptr)) {
		return false;;
	};
	return _1c67bc11d_Equal((*(_self_))._field_Elem, (*(_6293_slc))._field_Elem);;
}







inline jule::Str _1c67c9e94_Str(_1c67c9adc_Tuple* _self_) {
	_20759e353_StrBuilder _6457_s = static__2075a7c41_New(16LL);;
	_2075a8406_WriteByte(&_6457_s, '(');
	_2075a814d_WriteStr(&_6457_s, _1c67bbccc_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d649a5b1:;
		if (it != expr_end) {
			jule::Ptr<_1c67bb8d1_TypeKind> *_64810_t = it;
			{
				_2075a8406_WriteByte(&_6457_s, ',');
				_2075a814d_WriteStr(&_6457_s, _1c67bbccc_Str((*(_64810_t)).ptr()));
			}
			_iter_next_1d649a5b1:;
			++it;
			goto _iter_begin_1d649a5b1;
		}
		_iter_end_1d649a5b1:;
	};
	_2075a8406_WriteByte(&_6457_s, ')');
	return _2075a8945_Str(&_6457_s);;
}



inline jule::Bool _1c67ca2d5_Equal(jule::Ptr<_1c67c9adc_Tuple> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _65718_other) {
	jule::Ptr<_1c67c9adc_Tuple> _6583_tup = _1c67c0dad_Tup(_65718_other.ptr());;
	if ((_6583_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6583_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6657_i = 0LL;;
	for (; (_6657_i < (*_self_.alloc)._field_Types.len()); (_6657_i)++) {
		{
			if ((!(_1c67bc11d_Equal((*(_self_))._field_Types[_6657_i], (*(_6583_tup))._field_Types[_6657_i])))) {
				return false;;
			};
		}
	_iter_next_1d649d55e:;
	}
	_iter_end_1d649d55e:;;
	return true;;
}








inline jule::Bool _1c67ca68c_Map_eq(_1c67ca68c_Map *_self_, _1c67ca68c_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1c67caa44_Str(_1c67ca68c_Map* _self_) {
	_20759e353_StrBuilder _6857_s = static__2075a7c41_New(16LL);;
	_2075a814d_WriteStr(&_6857_s, jule::Str::lit("map[", 4));
	_2075a814d_WriteStr(&_6857_s, _1c67bbccc_Str((*(_self_))._field_Key.ptr()));
	_2075a8406_WriteByte(&_6857_s, ']');
	_2075a814d_WriteStr(&_6857_s, _1c67bbccc_Str((*(_self_))._field_Val.ptr()));
	return _2075a8945_Str(&_6857_s);;
}



inline jule::Bool _1c67cad85_Equal(jule::Ptr<_1c67ca68c_Map> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _69418_other) {
	jule::Ptr<_1c67ca68c_Map> _6953_m = _1c67c0b27_Map(_69418_other.ptr());;
	if ((_6953_m == nullptr)) {
		return false;;
	};
	return (_1c67bc11d_Equal((*(_self_))._field_Key, (*(_6953_m))._field_Key) && _1c67bc11d_Equal((*_self_.alloc)._field_Val, (*(_6953_m))._field_Val));;
}








inline jule::Bool _1c67cb319_Arr_eq(_1c67cb319_Arr *_self_, _1c67cb319_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1c67cb6c1_Str(_1c67cb319_Arr* _self_) {
	_20759e353_StrBuilder _7137_s = static__2075a7c41_New(16LL);;
	_2075a8406_WriteByte(&_7137_s, '[');
	_2075a814d_WriteStr(&_7137_s, _1dd7115cd_Itoa((*(_self_))._field_N));
	_2075a8406_WriteByte(&_7137_s, ']');
	_2075a814d_WriteStr(&_7137_s, _1c67bbccc_Str((*(_self_))._field_Elem.ptr()));
	return _2075a8945_Str(&_7137_s);;
}



inline jule::Bool _1c67cba12_Equal(jule::Ptr<_1c67cb319_Arr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _72218_other) {
	jule::Ptr<_1c67cb319_Arr> _7233_arr = _1c67bed57_Arr(_72218_other.ptr());;
	if ((_7233_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7233_arr))._field_N) && _1c67bc11d_Equal((*_self_.alloc)._field_Elem, (*(_7233_arr))._field_Elem));;
}








inline jule::Bool _1c67cbcdc_Ptr_eq(_1c67cbcdc_Ptr *_self_, _1c67cbcdc_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c67cc194_Str(_1c67cbcdc_Ptr* _self_) {
	if (_1c67cc859_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1c67bbccc_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c67cc4d5_Equal(jule::Ptr<_1c67cbcdc_Ptr> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _74618_other) {
	jule::Ptr<_1c67cbcdc_Ptr> _7473_ptr = _1c67be5a4_Ptr(_74618_other.ptr());;
	{
		
		if ((_7473_ptr == nullptr)) {
			_case_begin_1d77a3423:;
			{
				return false;;
			}
		}
		else if (_1c67cc859_IsUnsafe(_self_.ptr())) {
			_case_begin_1d77a2cc4:;
			{
				return _1c67cc859_IsUnsafe(_7473_ptr.ptr());;
			}
		}
		else if (_1c67cc859_IsUnsafe(_7473_ptr.ptr())) {
			_case_begin_1d77a2d3a:;
			{
				return _1c67cc859_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1d77a2851:;
			{
				return _1c67bc11d_Equal((*(_self_))._field_Elem, (*(_7473_ptr))._field_Elem);;
			}
		}
		_match_end_1d77a27c9:;
	};
}



inline jule::Bool _1c67cc859_IsUnsafe(_1c67cbcdc_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1c67cccdd_referencer_eq(_1c67cccdd_referencer *_self_, _1c67cccdd_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1c67ce55e_pushErr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c661e327_Token> _83823_token, jule::Str _83838_fmt, jule::Slice<jule::Any> _83851_args) {
	_1c6709753_pushErr((*(_self_))._field_s.ptr(), _83823_token, _83838_fmt, _83851_args);
}



inline void _1c67ce75c_allowBuiltin(_1c67cdccd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c67ce95a_disallowBuiltin(_1c67cdccd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1d77a7d2e_pushReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1d740695b_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1c667249b_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type9));
}

inline void _1d77aa804_pushReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c667de9c_Trait>* _85037_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1d77ac509_Exist((*(_self_))._field_refers.ptr(), (*(_85037_t)))) {
		return;;
	};
	_1c667249b_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85037_t)), &__jule_any_type10));
}



inline void _1c67ceebb_pushReferenceByKind(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _86040_k) {
	{
		
		if ((_1c67c060a_Struct((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1d77a6943:;
			{
				jule::Ptr<_1c665865d_StructIns> _8638_t = _1c67c060a_Struct((*(_86040_k)).ptr());;
				_1d77a7d2e_pushReference(_self_, &(_8638_t));
			}
		}
		else if ((_1c67c0891_Trait((*(_86040_k)).ptr()) != nullptr)) {
			_case_begin_1d77a69dc:;
			{
				jule::Ptr<_1c667de9c_Trait> _8668_t = _1c67c0891_Trait((*(_86040_k)).ptr());;
				_1d77aa804_pushReference(_self_, &(_8668_t));
			}
		}
		_match_end_1d77a6822:;
	};
}



inline void _1c67d03d9_pushCycleError(_1c67cdccd_typeChecker* _self_, jule::Any _87126_def1, jule::Any _87137_def2, _20759e353_StrBuilder* _87153_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8733_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1d77ae8c4, nullptr, nullptr);;
	jule::Str _8833_m = _2075a8945_Str(_87153_message);;
	jule::Str _8843_def1Ident = _8733_getIdent(&(_87126_def1));;
	jule::Str _8853_def2Ident = _8733_getIdent(&(_87137_def2));;
	jule::Str _8863_refersTo = _20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8843_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8853_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_2075a814d_WriteStr(_87153_message, _208768cd0_Repeat(jule::Str::lit(" ", 1), 7LL));
	_2075a814d_WriteStr(_87153_message, _8863_refersTo);
	_2075a8406_WriteByte(_87153_message, '\n');
	_2075a814d_WriteStr(_87153_message, _8833_m);
}



inline jule::Bool _1c67d07d5_checkCrossCycle(_1c67cdccd_typeChecker* _self_, jule::Any _89327_decl, _20759e353_StrBuilder* _89343_message) {
	{
		auto &_match_expr{ _89327_decl };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d77b3eb1:;
			{
				jule::Ptr<_1c67baade_TypeAlias> _8964_ta = _89327_decl.unsafe_cast_ptr<_1c67baade_TypeAlias>();;
				{
					auto expr = &((*(_8964_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d77b4e7e:;
					if (it != expr_end) {
						jule::Any *_89711_d = it;
						{
							{
								
								if (((*(_89711_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1d77b5787:;
									{
										_1c67d03d9_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								else if ((!(_1c67d07d5_checkCrossCycle(_self_, (*(_89711_d)), _89343_message)))) {
									_case_begin_1d77b5820:;
									{
										_1c67d03d9_pushCycleError(_self_, jule::Any(_8964_ta, &__jule_any_type27), (*(_89711_d)), _89343_message);
										return false;;
									}
								}
								_match_end_1d77b5677:;
							};
						}
						_iter_next_1d77b4e7e:;
						++it;
						goto _iter_begin_1d77b4e7e;
					}
					_iter_end_1d77b4e7e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d77b3d18:;
			{
				jule::Ptr<_1c6655803_Struct> _9084_s = _89327_decl.unsafe_cast_ptr<_1c6655803_Struct>();;
				{
					auto expr = &((*(_9084_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d77b7316:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> *_90911_d = it;
						{
							{
								
								if ((jule::Any((*(_90911_d)), &__jule_any_type23) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1d77b7b30:;
									{
										_1c67d03d9_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								else if ((!(_1c67d07d5_checkCrossCycle(_self_, jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message)))) {
									_case_begin_1d77b7bb8:;
									{
										_1c67d03d9_pushCycleError(_self_, jule::Any(_9084_s, &__jule_any_type23), jule::Any((*(_90911_d)), &__jule_any_type23), _89343_message);
										return false;;
									}
								}
								_match_end_1d77b7a20:;
							};
						}
						_iter_next_1d77b7316:;
						++it;
						goto _iter_begin_1d77b7316;
					}
					_iter_end_1d77b7316:;
				};
			}
		}
		_match_end_1d77b3e4a:;
	};
	return true;;
}



inline jule::Bool _1c67d0bd1_checkIllegalCycles(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _92735_ident, jule::Any _92762_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92762_decl };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d77ba094:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1c6655803_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d77b9ea6:;
			{
				if ((*(_92762_decl.unsafe_cast_ptr<_1c67baade_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1d77b9d96:;
	};
	if ((_92762_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1c67ce55e_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_20759e353_StrBuilder _9507_message = static__2075a7c41_New(32LL);;
	if ((!(_1c67d07d5_checkCrossCycle(_self_, _92762_decl, &(_9507_message))))) {
		jule::Str _9538_errMsg = _2075a8945_Str(&_9507_message);;
		_2075a8b43_Clear(&_9507_message);
		_1c67d03d9_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _92762_decl, &(_9507_message));
		_9538_errMsg+=_2075a8945_Str(&_9507_message);
		_1c67ce55e_pushErr(_self_, (*((*(_92735_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9538_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d77c0011:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_92762_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d77bd54d:;
			{
				{
					auto &_match_expr{ _92762_decl };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1d77c07c5:;
						{
							jule::Ptr<_1c6655803_Struct> _9699_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c6655803_Struct>();;
							(*(_9699_s))._field_Depends=jule::append((*_9699_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6655803_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _92762_decl.cast_ptr<_1c6655803_Struct>(&__jule_any_type23); __jule_collection; }));
						}
					}
					_match_end_1d77c062c:;
				};
			}
		}
		_match_end_1d77bee78:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1c67d10cc_fromTypeAlias(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _97730_decl, jule::Ptr<_1c67baade_TypeAlias>* _97757_ta) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_97757_ta))))._field_Public, (*((*(_97757_ta))))._field_Token)))) {
		_1c67ce55e_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_97757_ta))))._field_Used=true;
	if (((*((*(_97730_decl))))._field_Generics.len() > 0LL)) {
		_1c67ce55e_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d77c5e4b:;
			if (it != expr_end) {
				jule::Ptr<_1c67baade_TypeAlias> _99411_bg = *it;
				{
					if (((_99411_bg == (*(_97757_ta))) || (((*((*((*(_97757_ta))))._field_Kind))._field_Kind != nullptr) && _1c67bc11d_Equal((*((*((*(_97757_ta))))._field_Kind))._field_Kind, (*(*(_99411_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1d77c5e4b;
					};
				}
				_iter_next_1d77c5e4b:;
				++it;
				goto _iter_begin_1d77c5e4b;
			}
			_iter_end_1d77c5e4b:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d77c825b:;
			if (it != expr_end) {
				jule::Ptr<_1c67baade_TypeAlias> _100511_bg = *it;
				{
					if ((_100511_bg == (*(_97757_ta)))) {
						_1c67ce55e_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_97757_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d77c8b63:;
						if (it != expr_end) {
							jule::Ptr<_1c67baade_TypeAlias> _101012_dg = *it;
							{
								if ((_100511_bg == _101012_dg)) {
									_1c67ce55e_pushErr(_self_, (*((*(_97730_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_97730_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1d77c8b63:;
							++it;
							goto _iter_begin_1d77c8b63;
						}
						_iter_end_1d77c8b63:;
					};
				}
				_iter_next_1d77c825b:;
				++it;
				goto _iter_begin_1d77c825b;
			}
			_iter_end_1d77c825b:;
		};
	};
	if (((*(*((*(_97757_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _10214_ok = _1c6717453_checkTypeAliasDeclKind((*(_self_))._field_s, _97757_ta, (*(_self_))._field_lookup);;
		if ((!(_10214_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_97757_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)) {
			_case_begin_1d77cc392:;
			{
				jule::Bool _10294_ok = _1c67d0bd1_checkIllegalCycles(_self_, _97730_decl, jule::Any((*((*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1c665865d_StructIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)))._field_Decl, &__jule_any_type23));;
				if ((!(_10294_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1d77cc31a:;
	};
	if (((*((*(_97757_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_97757_ta)); __jule_collection; }));
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _10417_tk = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_97757_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1c67ceebb_pushReferenceByKind(_self_, &(_10417_tk));
	if ((*((*(_97757_ta))))._field_Binded) {
		(*(_10417_tk))._field_BindIdent=(*((*(_97757_ta))))._field_Ident;
	} else {
		(*(_10417_tk))._field_BindIdent=(*(*((*((*(_97757_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10417_tk, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data21);;
}



inline jule::Ptr<_1c66816a8_Enum> _1c67d14c8_fromEnum(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _105425_decl, jule::Ptr<_1c66816a8_Enum>* _105452_e) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105452_e))))._field_Public, (*((*(_105452_e))))._field_Token)))) {
		_1c67ce55e_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105425_decl))))._field_Generics.len() > 0LL)) {
		_1c67ce55e_pushErr(_self_, (*((*(_105425_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105425_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_105452_e));;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c67d18c4_fromTypeEnum(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _106629_decl, jule::Ptr<_1c6682db3_TypeEnum>* _106656_e) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106656_e))))._field_Public, (*((*(_106656_e))))._field_Token)))) {
		_1c67ce55e_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106629_decl))))._field_Generics.len() > 0LL)) {
		_1c67ce55e_pushErr(_self_, (*((*(_106629_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106629_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_106656_e));;
}



inline jule::Ptr<_1c667de9c_Trait> _1c67d1cc0_fromTrait(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _107826_decl, jule::Ptr<_1c667de9c_Trait>* _107853_t) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_107853_t))))._field_Public, (*((*(_107853_t))))._field_Token)))) {
		_1c67ce55e_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107826_decl))))._field_Generics.len() > 0LL)) {
		_1c67ce55e_pushErr(_self_, (*((*(_107826_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_107826_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1d77aa804_pushReference(_self_, _107853_t);
	return (*(_107853_t));;
}



inline jule::Bool _1c67d21bb_checkStructIns(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _109135_ins, jule::Ptr<_1c661e327_Token>* _109157_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_109135_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_109135_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_109135_ins))))._field_Decl, &__jule_any_type23) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c6723e43_precheckStructIns((*(_self_))._field_s, _109135_ins, (*(_109157_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_109135_ins))))._field_Generics.len() > 0LL)) {
		_1c672495a_checkStructInsOperators((*(_self_))._field_s, (*(_109135_ins)));
		_1c67241eb_checkStructIns((*(_self_))._field_s, _109135_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c67d2474_appendUsedStructReference(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6655803_Struct>* _111246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d77dee21:;
			{
				jule::Ptr<_1c6655803_Struct> _11188_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c6655803_Struct>();;
				if ((!(_1c66572b6_IsUses(_11188_refS.ptr(), (*(_111246_s)))))) {
					(*_11188_refS.alloc)._field_Uses=jule::append((*_11188_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6655803_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_111246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1d77dedaa:;
	};
}



inline jule::Ptr<_1c665865d_StructIns> _1c67d2870_buildStructInstance(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _112540_decl, jule::Ptr<_1c6655803_Struct>* _112567_s) {
	jule::Ptr<_1c67cccdd_referencer> _11277_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> _11297_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
				_case_begin_1d77e2e57:;
				{
					jule::Ptr<_1c66ba857_scopeChecker> _11369_sc = (*(_self_))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0);;
					jule::Ptr<_1c66ba857_scopeChecker> _11379_hard = _1c66bdeba_getHardRoot(_11369_sc);;
					if ((((*((*(_11379_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_112567_s))))) {
						goto _match_end_1d77e2de1;
					};
					jule::I64 _11415_n = ((*(*(_11379_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11379_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11379_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11415_n);
				}
			}
			_match_end_1d77e2de1:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11517_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c665865d_StructIns> _11557_ins = _1c6655c98_instance((*(_112567_s)));;
	(*(_11557_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(0LL, (*((*(_112540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67b9eea_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_112540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d77e827b:;
		if (it != expr_end) {
			jule::Ptr<_1c6634903_TypeDecl> _115715_g = *it;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _11588_kind = _1c67d6577_build(_self_, &((*(_115715_g))._field_Kind));;
				if ((_11588_kind == nullptr)) {
					return nullptr;;
				};
				(*_11557_ins.alloc)._field_Generics=jule::append((*_11557_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=_11588_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1d77e827b:;
			++it;
			goto _iter_begin_1d77e827b;
		}
		_iter_end_1d77e827b:;
	};
	(*(_self_))._field_lookup=_11517_lookup;
	(*(_self_))._field_bannedGenerics=_11297_bannedGenerics;
	(*(_self_))._field_referencer=_11277_referencer;
	return _11557_ins;;
}



inline jule::Ptr<_1c665865d_StructIns> _1c67d2c6b_fromStructIns(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c665865d_StructIns>* _117334_ins, jule::Ptr<_1c661e327_Token> _117355_token) {
	jule::Ptr<_1c665865d_StructIns> _11747_existInstance = _1c66560a6_appendInstance((*((*(_117334_ins))))._field_Decl.ptr(), _117334_ins);;
	if ((_11747_existInstance != nullptr)) {
		if ((!(_1c6715253_checkConstraintsStruct((*(_self_))._field_s, _117334_ins, &(_117355_token), _11747_existInstance)))) {
			return nullptr;;
		};
		_1d77a7d2e_pushReference(_self_, &(_11747_existInstance));
		return _11747_existInstance;;
	};
	if ((!(_1c67d21bb_checkStructIns(_self_, _117334_ins, &(_117355_token))))) {
		return nullptr;;
	};
	_1d77a7d2e_pushReference(_self_, _117334_ins);
	return (*(_117334_ins));;
}



inline jule::Ptr<_1c665865d_StructIns> _1c67d3167_fromStruct(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _119131_decl, jule::Ptr<_1c6655803_Struct>* _119158_s) {
	if ((!(_1c6709eb2_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_119158_s))))._field_Public, (*((*(_119158_s))))._field_Token)))) {
		_1c67ce55e_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_119131_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_119131_decl))))._field_Generics.len() > 0LL)) {
			_1c67ce55e_pushErr(_self_, (*((*(_119131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c665865d_StructIns>(_1c665865d_StructIns{._field_Checked=false, ._field_Decl=(*(_119158_s)), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1c6657aad_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c666a51b_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Operators=_1c66548e0_Operators{._field_Eq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Add=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Div=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1c666d4ec_FnIns>(nullptr)}});;
	};
	jule::Bool _12097_ok = _1c67d0bd1_checkIllegalCycles(_self_, _119131_decl, jule::Any((*(_119158_s)), &__jule_any_type23));;
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	_1c67d2474_appendUsedStructReference(_self_, _119158_s);
	jule::Ptr<_1c665865d_StructIns> _12157_ins = _1c67d2870_buildStructInstance(_self_, _119131_decl, _119158_s);;
	if ((_12157_ins == nullptr)) {
		return nullptr;;
	};
	_12097_ok=_1c670ac82_checkGenericQuantity((*(_self_))._field_s, (*((*(_12157_ins))._field_Decl))._field_Generics.len(), (*(_12157_ins))._field_Generics.len(), (*((*(_119131_decl))))._field_Token);
	if ((!(_12097_ok))) {
		return nullptr;;
	};
	return _1c67d2c6b_fromStructIns(_self_, &(_12157_ins), (*((*(_119131_decl))))._field_Token);;
}



inline jule::Trait _1c67d34a8_getDef(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl>* _123527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d780385d:;
		if (it != expr_end) {
			jule::Ptr<_1c6641b0d_GenericDecl> _123610_g = *it;
			{
				if (((*(_123610_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					return jule::Trait(_1c67d924a_buildPrimType((*_123610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22);;
				};
			}
			_iter_next_1d780385d:;
			++it;
			goto _iter_begin_1d780385d;
		}
		_iter_end_1d780385d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7803bc1:;
		if (it != expr_end) {
			jule::Ptr<_1c67baade_TypeAlias> _124215_g = *it;
			{
				if (((*(_124215_g))._field_Ident == (*((*(_123527_decl))))._field_Ident)) {
					if (((*((*(_123527_decl))))._field_Generics.len() > 0LL)) {
						_1c67ce55e_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1c665865d_StructIns> _12489_st = _1c67c060a_Struct((*((*_124215_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12489_st != nullptr)) {
						jule::Bool _12506_ok = _1c67d0bd1_checkIllegalCycles(_self_, _123527_decl, jule::Any((*_12489_st.alloc)._field_Decl, &__jule_any_type23));;
						if ((!(_12506_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_124215_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1d7803bc1:;
			++it;
			goto _iter_begin_1d7803bc1;
		}
		_iter_end_1d7803bc1:;
	};
	if ((!((*((*(_123527_decl))))._field_Binded))) {
		jule::Ptr<_1c66816a8_Enum> _12608_e = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dbadd_FindEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12608_e != nullptr)) {
			return jule::Trait(_1c67d14c8_fromEnum(_self_, _123527_decl, &(_12608_e)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3);;
		};
		jule::Ptr<_1c6682db3_TypeEnum> _12658_te = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dbe2e_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12658_te != nullptr)) {
			return jule::Trait(_1c67d18c4_fromTypeEnum(_self_, _123527_decl, &(_12658_te)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4);;
		};
		jule::Ptr<_1c667de9c_Trait> _12708_t = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67db79c_FindTrait((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident);;
		if ((_12708_t != nullptr)) {
			return jule::Trait(_1c67d1cc0_fromTrait(_self_, _123527_decl, &(_12708_t)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c67ce55e_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6655803_Struct> _12797_s = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67db060_FindStruct((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if ((_12797_s != nullptr)) {
		return jule::Trait(_1c67d3167_fromStruct(_self_, _123527_decl, &(_12797_s)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0);;
	};
	jule::Ptr<_1c67baade_TypeAlias> _12847_ta = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67dab64_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_123527_decl))))._field_Ident, (*((*(_123527_decl))))._field_Binded);;
	if (((_12847_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12847_ta=_1c68a49ec_findBuiltinTypeAlias((*((*(_123527_decl))))._field_Ident);
	};
	if ((_12847_ta != nullptr)) {
		return _1c67d10cc_fromTypeAlias(_self_, _123527_decl, &(_12847_ta));;
	};
	_1c67ce55e_pushErr(_self_, (*((*(_123527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_123527_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1c67d37e9_buildIdent(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663500d_IdentTypeDecl> _129630_decl) {
	return _1c67d34a8_getDef(_self_, &(_129630_decl));;
}



inline jule::Trait _1c67d3b3a_buildSubIdent(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66352c7_SubIdentTypeDecl> _130033_decl) {
	jule::Trait _13017_ident = _1c67d37e9_buildIdent(_self_, (*(_130033_decl))._field_Idents[0LL]);;
	if ((_13017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13017_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)) {
			_case_begin_1d7811c78:;
			{
				goto _match_end_1d78122d9;
			}
		}
		else {
			_case_begin_1d7811d55:;
			{
				_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d78122d9:;
	};
	jule::Ptr<_1c6682db3_TypeEnum> _13127_t = _13017_ident.cast_ptr<_1c6682db3_TypeEnum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>> _13137_idents = (*_130033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13137_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7811dcc:;
		if (it != expr_end) {
			jule::I64 _13147_i = it - expr->begin();
			jule::Ptr<_1c663500d_IdentTypeDecl> _131410_id = *it;
			{
				jule::Ptr<_1c66827db_TypeEnumItem> _13158_item = _1c66839a7_FindItem(_13127_t.ptr(), (*(_131410_id))._field_Ident);;
				if ((_13158_item == nullptr)) {
					_1c67ce55e_pushErr(_self_, (*_131410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13127_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_131410_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_13137_idents.len() - _13147_i) == 1LL)) {
					_1c67ceebb_pushReferenceByKind(_self_, &((*((*(_13158_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_13158_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data21);;
				};
				_13127_t=_1c67beac1_TypeEnum((*(*(_13158_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_13127_t == nullptr)) {
					_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1d7811dcc:;
			++it;
			_13147_i++;
			goto _iter_begin_1d7811dcc;
		}
		_iter_end_1d7811dcc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c67c8525_Sptr> _1c67d3e7b_buildSptrFromType(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _133438_elem) {
	{
		
		if (((*(_133438_elem)) == nullptr)) {
			_case_begin_1d7818510:;
			{
				return nullptr;;
			}
		}
		else if ((_1c67c060a_Struct((*(_133438_elem)).ptr()) != nullptr)) {
			_case_begin_1d7818587:;
			{
				jule::Ptr<_1c665865d_StructIns> _13404_s = _1c67c060a_Struct((*(_133438_elem)).ptr());;
				if ((((*(_13404_s))._field_Decl != nullptr) && (*(*(_13404_s))._field_Decl.alloc)._field_Binded)) {
					_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c67bed57_Arr((*(_133438_elem)).ptr()) != nullptr) && (*(_1c67bed57_Arr((*(_133438_elem)).ptr())))._field_Auto)) {
			_case_begin_1d78185ed:;
			{
				_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7817ad6:;
	};
	return jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=(*(_133438_elem))});;
}



inline jule::Ptr<_1c67c8525_Sptr> _1c67d42bc_buildSptr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663599d_SptrTypeDecl> _135429_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_1c67bb8d1_TypeKind> _13597_elem = _1c67d68b8_checkDecl(_self_, &((*(_135429_decl))._field_Elem));;
	return _1c67d3e7b_buildSptrFromType(_self_, &(_13597_elem));;
}



inline jule::Ptr<_1c67cbcdc_Ptr> _1c67d460d_buildPtrFromType(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _136337_elem) {
	{
		
		if (((*(_136337_elem)) == nullptr)) {
			_case_begin_1d781d89a:;
			{
				return nullptr;;
			}
		}
		else if (((_1c67bed57_Arr((*(_136337_elem)).ptr()) != nullptr) && (*(_1c67bed57_Arr((*(_136337_elem)).ptr())))._field_Auto)) {
			_case_begin_1d781d944:;
			{
				_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c67cbcdc_Ptr>(_1c67cbcdc_Ptr{._field_Elem=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)});;
			}
		}
		_match_end_1d781d779:;
	};
	return jule::new_ptr<_1c67cbcdc_Ptr>(_1c67cbcdc_Ptr{._field_Elem=(*(_136337_elem))});;
}



inline jule::Ptr<_1c67cbcdc_Ptr> _1c67d494e_buildPtr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663642c_PtrTypeDecl> _137828_decl) {
	jule::Bool _13793_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13793_cycleRisk;
	});;
	jule::Ptr<_1c67bb8d1_TypeKind> _138311_elem = nullptr;;
	if ((!(_1c66367c3_IsUnsafe(_137828_decl.ptr())))) {
		_138311_elem=_1c67d68b8_checkDecl(_self_, &((*_137828_decl.alloc)._field_Elem));
		return _1c67d460d_buildPtrFromType(_self_, &(_138311_elem));;
	};
	return jule::new_ptr<_1c67cbcdc_Ptr>(_1c67cbcdc_Ptr{._field_Elem=_138311_elem});;
}



inline jule::Ptr<_1c67c8ee8_Slc> _1c67d4c90_buildSlc(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6635d33_SlcTypeDecl> _139528_decl) {
	jule::Bool _13963_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13963_cycleRisk;
	});;
	jule::Ptr<_1c67bb8d1_TypeKind> _14007_elem = _1c67d68b8_checkDecl(_self_, &((*(_139528_decl))._field_Elem));;
	{
		
		if ((_14007_elem == nullptr)) {
			_case_begin_1d7823b7a:;
			{
				return nullptr;;
			}
		}
		else if (((_1c67bed57_Arr(_14007_elem.ptr()) != nullptr) && (*(_1c67bed57_Arr(_14007_elem)))._field_Auto)) {
			_case_begin_1d7823be1:;
			{
				_1c67ce55e_pushErr(_self_, (*((*_139528_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7823b14:;
	};
	return jule::new_ptr<_1c67c8ee8_Slc>(_1c67c8ee8_Slc{._field_Elem=_14007_elem});;
}



inline jule::Ptr<_1c67cb319_Arr> _1c67d50d1_buildArr(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6636bbe_ArrTypeDecl> _141628_decl) {
	jule::I64 _14177_n = 0LL;;
	if ((!(_1c6637065_AutoSized(_141628_decl.ptr())))) {
		jule::Ptr<_1c6788b56_Data> _14208_size = _1c67a96e3_evalExpr(_1c67121a6_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_141628_decl.alloc)._field_Size);;
		if ((_14208_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c6789591_IsConst(_14208_size.ptr())))) {
			_1c67ce55e_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c67be087_Prim((*(_14208_size))._field_Kind.ptr()) == nullptr) || (!(_1dd71dc6c_IsInt((*(_1c67be087_Prim((*(_14208_size))._field_Kind)))._field_Kind))))) {
			_1c67ce55e_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14177_n=static_cast<jule::I64>(_1dd722028_AsI64((*(_14208_size))._field_Constant.ptr()));
		if ((_14177_n < 0LL)) {
			_1c67ce55e_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14385_max = _1dd719cce_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1dd712ba6_BitSize != 64LL) && (static_cast<jule::I64>(_14177_n) > _14385_max))) {
				_1c67ce55e_pushErr(_self_, (*((*_141628_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67b7778_constoa(&((*(_14208_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1dd711314_FmtInt(_14385_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _14477_elem = _1c67d68b8_checkDecl(_self_, &((*_141628_decl.alloc)._field_Elem));;
	{
		
		if ((_14477_elem == nullptr)) {
			_case_begin_1d782e03c:;
			{
				return nullptr;;
			}
		}
		else if (((_1c67bed57_Arr(_14477_elem.ptr()) != nullptr) && (*(_1c67bed57_Arr(_14477_elem)))._field_Auto)) {
			_case_begin_1d782e0d6:;
			{
				_1c67ce55e_pushErr(_self_, (*((*_141628_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d782deb5:;
	};
	return jule::new_ptr<_1c67cb319_Arr>(_1c67cb319_Arr{._field_Auto=_1c6637065_AutoSized(_141628_decl), ._field_N=_14177_n, ._field_Elem=_14477_elem});;
}



inline jule::Ptr<_1c67ca68c_Map> _1c67d5422_buildMap(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c663741c_MapTypeDecl> _146528_decl) {
	jule::Bool _14663_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14663_cycleRisk;
	});;
	jule::Ptr<_1c67bb8d1_TypeKind> _14707_key = _1c67d68b8_checkDecl(_self_, &((*(_146528_decl))._field_Key));;
	if ((_14707_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _14757_val = _1c67d68b8_checkDecl(_self_, &((*_146528_decl.alloc)._field_Val));;
	if ((_14757_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c67be83a_Enum(_14757_val.ptr()) != nullptr)) {
		_1c67ce55e_pushErr(_self_, (*((*_146528_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1c6655803_Struct> _14848_s = _1c6224c96_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1c67d2474_appendUsedStructReference(_self_, &(_14848_s));
		jule::Ptr<_1c665865d_StructIns> _14868_ins = _1c6655c98_instance(_14848_s);;
		(*(_14868_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=_14707_key, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=_14757_val, ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; });
		_1c67d2c6b_fromStructIns(_self_, &(_14868_ins), (*((*_146528_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1c67ca68c_Map>(_1c67ca68c_Map{._field_Key=_14707_key, ._field_Val=_14757_val});;
}



inline jule::Ptr<_1c67c9adc_Tuple> _1c67d5763_buildTuple(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6636130_TupleTypeDecl> _149730_decl) {
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _14987_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(0LL, (*(_149730_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67bb8d1_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_149730_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d78382dd:;
		if (it != expr_end) {
			jule::Ptr<_1c6634903_TypeDecl> _149915_t = *it;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _15008_kind = _1c67d68b8_checkDecl(_self_, &(_149915_t));;
				if ((_15008_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> &__jule_push_dest = _14987_types; __jule_push_dest.push(_15008_kind); };
			}
			_iter_next_1d78382dd:;
			++it;
			goto _iter_begin_1d78382dd;
		}
		_iter_end_1d78382dd:;
	};
	return jule::new_ptr<_1c67c9adc_Tuple>(_1c67c9adc_Tuple{._field_Types=_14987_types});;
}



inline jule::Bool _1c67d5aa4_checkFuncTypes(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c666d4ec_FnIns>* _151035_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_151035_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7839d28:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _151115_p = *it;
			{
				(*(_151115_p))._field_Kind=_1c67d6577_build(_self_, &((*((*((*((*_151115_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_151115_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c6715d03_checkFnParamKind((*(_self_))._field_s, &(_151115_p));
			}
			_iter_next_1d7839d28:;
			++it;
			goto _iter_begin_1d7839d28;
		}
		_iter_end_1d7839d28:;
	};
	if ((!(_1c666a9c2_IsVoid((*((*(_151035_f))))._field_Decl.ptr())))) {
		(*((*(_151035_f))))._field_Result=_1c67d6577_build(_self_, &((*(*((*((*((*((*(_151035_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_151035_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c67d5de5_buildFunc(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66465b3_FnDecl> _152829_decl) {
	jule::Bool _15293_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15293_cycleRisk;
	});;
	if (((*(_152829_decl))._field_Generics.len() > 0LL)) {
		_1c67ce55e_pushErr(_self_, (*_152829_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c666a51b_Fn> _15387_f = _1c6674b1e_buildFunc(_152829_decl);;
	jule::I64 _15403_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1c67200e8_checkAnonFuncDecl((*(_self_))._field_s, &(_15387_f));
	if ((_15403_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _15467_ins = _1c666ba28_instanceForce(_15387_f);;
	(*(_15467_ins))._field_Anon=true;
	(*_15467_ins.alloc)._field_AsAnon=true;
	jule::Bool _15503_ok = _1c67d5aa4_checkFuncTypes(_self_, &(_15467_ins));;
	if ((!(_15503_ok))) {
		return nullptr;;
	};
	return _15467_ins;;
}



inline jule::Trait _1c67d6236_buildByNamespace(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c66356a1_NamespaceTypeDecl> _155836_decl) {
	jule::Str _15593_path = _1c67d8d71_buildLinkPathByTokens(&((*(_155836_decl))._field_Idents));;
	jule::Ptr<_1c66d63cd_ImportInfo> _15607_imp = ((_1c67dc083_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c67da36c_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>>((void*)__jule_anon_1d7844690, jule::Ptr<__jule_anon_1d7844690_ctx>::make(__jule_anon_1d7844690_ctx{._155836_decl=_155836_decl,._15593_path=_15593_path}).as<jule::Uintptr>(), __jule_anon_1d7844690_ctx_handler));;
	jule::Str _15673_selfIdent = jule::Str::lit("self", 4);;
	if (((_15607_imp == nullptr) || (!(_1c66d8952_isLookupable(_15607_imp.ptr(), &(_15673_selfIdent)))))) {
		_1c67ce55e_pushErr(_self_, (*(_155836_decl))._field_Idents[0LL], static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15593_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1c67ce95a_disallowBuiltin(_self_);
	jule::Trait _15747_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15607_imp, (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data1);
	jule::Ptr<_1c67bb8d1_TypeKind> _15767_kind = _1c67d68b8_checkDecl(_self_, &((*_155836_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15747_lookup;
	_1c67ce75c_allowBuiltin(_self_);
	return jule::Trait(_15767_kind, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data21);;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67d6577_build(_1c67cdccd_typeChecker* _self_, jule::Any* _158226_declKind) {
	jule::Trait _158311_kind = nullptr;;
	{
		auto &_match_expr{ (*(_158226_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1d784970b:;
			{
				jule::Trait _15868_t = _1c67d37e9_buildIdent(_self_, (*(_158226_declKind)).cast_ptr<_1c663500d_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15868_t != nullptr)) {
					_158311_kind=_15868_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1d7849860:;
			{
				jule::Trait _15918_t = _1c67d3b3a_buildSubIdent(_self_, (*(_158226_declKind)).cast_ptr<_1c66352c7_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15918_t != nullptr)) {
					_158311_kind=_15918_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1d78498c6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67c8525_Sptr> _15978_t = _1c67d42bc_buildSptr(_self_, (*(_158226_declKind)).cast_ptr<_1c663599d_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15978_t != nullptr)) {
					_158311_kind=jule::Trait(_15978_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1d784993c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67cbcdc_Ptr> _16038_t = _1c67d494e_buildPtr(_self_, (*(_158226_declKind)).cast_ptr<_1c663642c_PtrTypeDecl>(&__jule_any_type74));;
				if ((_16038_t != nullptr)) {
					_158311_kind=jule::Trait(_16038_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1d78499a3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67c8ee8_Slc> _16098_t = _1c67d4c90_buildSlc(_self_, (*(_158226_declKind)).cast_ptr<_1c6635d33_SlcTypeDecl>(&__jule_any_type73));;
				if ((_16098_t != nullptr)) {
					_158311_kind=jule::Trait(_16098_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1d7849a19:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67cb319_Arr> _16158_t = _1c67d50d1_buildArr(_self_, (*(_158226_declKind)).cast_ptr<_1c6636bbe_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16158_t != nullptr)) {
					_158311_kind=jule::Trait(_16158_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1d7849a80:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67ca68c_Map> _16218_t = _1c67d5422_buildMap(_self_, (*(_158226_declKind)).cast_ptr<_1c663741c_MapTypeDecl>(&__jule_any_type76));;
				if ((_16218_t != nullptr)) {
					_158311_kind=jule::Trait(_16218_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1d784a4ed:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c67c9adc_Tuple> _16278_t = _1c67d5763_buildTuple(_self_, (*(_158226_declKind)).cast_ptr<_1c6636130_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16278_t != nullptr)) {
					_158311_kind=jule::Trait(_16278_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d784a564:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c666d4ec_FnIns> _16338_t = _1c67d5de5_buildFunc(_self_, (*(_158226_declKind)).cast_ptr<_1c66465b3_FnDecl>(&__jule_any_type14));;
				if ((_16338_t != nullptr)) {
					_158311_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1d784a5ca:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16398_t = _1c67d6236_buildByNamespace(_self_, (*(_158226_declKind)).cast_ptr<_1c66356a1_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16398_t != nullptr)) {
					_158311_kind=_16398_t;
				};
			}
		}
		else {
			_case_begin_1d78497e9:;
			{
				_1c67ce55e_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7849783:;
	};
	if ((_158311_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _158311_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data21)) {
			_case_begin_1d7858b9e:;
			{
				return _158311_kind.cast_ptr<_1c67bb8d1_TypeKind>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1d7855470:;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _16548_tk = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_158311_kind});;
				{
					auto &_match_expr{ _158311_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)) {
						_case_begin_1d7857054:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16548_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)) {
						_case_begin_1d7856dcd:;
						{
							jule::Ptr<_1c665865d_StructIns> _16615_s = _158311_kind.cast_ptr<_1c665865d_StructIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0);;
							if ((((*(_16615_s))._field_Decl != nullptr) && (*(*(_16615_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16548_tk))._field_BindIdent=(*(*(_16615_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1d7856edd:;
				};
				return _16548_tk;;
			}
		}
		_match_end_1d7856295:;
	};
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c67d68b8_checkDecl(_1c67cdccd_typeChecker* _self_, jule::Ptr<_1c6634903_TypeDecl>* _167030_decl) {
	jule::Ptr<_1c661e327_Token> _16727_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_167030_decl))))._field_Token;
	jule::Ptr<_1c67bb8d1_TypeKind> _16757_kind = _1c67d6577_build(_self_, &((*((*(_167030_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16727_errorToken;
	return _16757_kind;;
}








inline jule::Bool _1c67d6d91_identTypeLookup_eq(_1c67d6d91_identTypeLookup *_self_, _1c67d6d91_identTypeLookup _other_) { return true; }

inline jule::Bool static__1c67d7314_prim(jule::Str* _169718_ident, jule::Ptr<_1c67c49e9_Prim> _169730_t) {
	return ((*(_169730_t))._field_Kind == (*(_169718_ident)));;
}



inline jule::Bool static__1c67d7688_exist(jule::Str* _170119_ident, jule::Ptr<_1c67bb8d1_TypeKind>* _170136_k) {
	{
		
		if ((_1c67be087_Prim((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785d9ea:;
			{
				return static__1c67d7314_prim(_170119_ident, _1c67be087_Prim((*(_170136_k)).ptr()));;
			}
		}
		else if ((_1c67be31d_Sptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785da72:;
			{
				jule::Ptr<_1c67c8525_Sptr> _17068_sptr = _1c67be31d_Sptr((*(_170136_k)).ptr());;
				return static__1c67d7688_exist(_170119_ident, &((*(_17068_sptr))._field_Elem));;
			}
		}
		else if ((_1c67be5a4_Ptr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785dae9:;
			{
				jule::Ptr<_1c67cbcdc_Ptr> _17098_ptr = _1c67be5a4_Ptr((*(_170136_k)).ptr());;
				return static__1c67d7688_exist(_170119_ident, &((*(_17098_ptr))._field_Elem));;
			}
		}
		else if ((_1c67c00dd_Slc((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785db71:;
			{
				jule::Ptr<_1c67c8ee8_Slc> _17128_slc = _1c67c00dd_Slc((*(_170136_k)).ptr());;
				return static__1c67d7688_exist(_170119_ident, &((*(_17128_slc))._field_Elem));;
			}
		}
		else if ((_1c67bed57_Arr((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785dd4c:;
			{
				jule::Ptr<_1c67cb319_Arr> _17158_arr = _1c67bed57_Arr((*(_170136_k)).ptr());;
				return static__1c67d7688_exist(_170119_ident, &((*(_17158_arr))._field_Elem));;
			}
		}
		else if ((_1c67c0b27_Map((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785ddb3:;
			{
				jule::Ptr<_1c67ca68c_Map> _17188_m = _1c67c0b27_Map((*(_170136_k)).ptr());;
				return (static__1c67d7688_exist(_170119_ident, &((*(_17188_m))._field_Key)) || static__1c67d7688_exist(_170119_ident, &((*_17188_m.alloc)._field_Val)));;
			}
		}
		else if ((_1c67c060a_Struct((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785de29:;
			{
				jule::Ptr<_1c665865d_StructIns> _17228_s = _1c67c060a_Struct((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17228_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7866074:;
					if (it != expr_end) {
						jule::Ptr<_1c67b9eea_InsGeneric> _172316_g = *it;
						{
							if (static__1c67d7688_exist(_170119_ident, &((*(_172316_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1d7866074:;
						++it;
						goto _iter_begin_1d7866074;
					}
					_iter_end_1d7866074:;
				};
				return false;;
			}
		}
		else if ((_1c67c0374_Fn((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785de90:;
			{
				jule::Ptr<_1c666d4ec_FnIns> _17308_f = _1c67c0374_Fn((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17308_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7867bd0:;
					if (it != expr_end) {
						jule::Ptr<_1c666c474_ParamIns> _173116_p = *it;
						{
							if (_1c6669196_IsSelf((*(_173116_p))._field_Decl.ptr())) {
								goto _iter_next_1d7867bd0;
							};
							if (static__1c67d7688_exist(_170119_ident, &((*_173116_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1d7867bd0:;
						++it;
						goto _iter_begin_1d7867bd0;
					}
					_iter_end_1d7867bd0:;
				};
				if (((*_17308_f.alloc)._field_Result != nullptr)) {
					return static__1c67d7688_exist(_170119_ident, &((*_17308_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c67c0dad_Tup((*(_170136_k)).ptr()) != nullptr)) {
			_case_begin_1d785e017:;
			{
				jule::Ptr<_1c67c9adc_Tuple> _17448_tup = _1c67c0dad_Tup((*(_170136_k)).ptr());;
				{
					auto expr = &((*(_17448_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d786a551:;
					if (it != expr_end) {
						jule::Ptr<_1c67bb8d1_TypeKind> _174516_t = *it;
						{
							if (static__1c67d7688_exist(_170119_ident, &(_174516_t))) {
								return true;;
							};
						}
						_iter_next_1d786a551:;
						++it;
						goto _iter_begin_1d786a551;
					}
					_iter_end_1d786a551:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1d785d8c9:;
			{
				return false;;
			}
		}
		_match_end_1d785d7b9:;
	};
}















inline void _1c737d4e7_stop(_1c737cd43_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1c737d77d_stopped(_1c737cd43_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1c737da14_finished(_1c737cd43_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1c737dc9a_isLastSt(_1c737cd43_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1c737e10d_pushErr(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c661e327_Token> _18823_token, jule::Str _18838_fmt) {
	_1c739bda6_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1c737e471_pushSuggestion(_1c737cd43_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1c739c219_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1c737e729_insertAsNext(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1c737c4a2_stmt>(_1c737c4a2_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1c737c4a2_stmt> _1c737e9b0_next(_1c737cd43_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c6644924_ScopeTree> _1c737edab_buildScope(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _20731_tokens, jule::Ptr<_1c661e327_Token> _20753_end) {
	jule::Ptr<_1c6644924_ScopeTree> _2087_s = _1c737b25e_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1c737cd43_scopeParser _2117_ssp = _1c737cd43_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1c737c4a2_stmt>>(nullptr), ._field_pos=0};;
	_1c7389c2e_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1c664776d_VarDecl> _1c73801ec_buildVarSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _21831_tokens) {
	jule::Ptr<_1c664776d_VarDecl> _2197_v = _1c739eb78_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1c6647b47_RetSt> _1c738053d_buildRetSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _22630_tokens) {
	jule::Ptr<_1c6647b47_RetSt> _2277_st = jule::new_ptr<_1c6647b47_RetSt>(_1c6647b47_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1c66483b7_Iter> _1c738087e_buildWhileNextIter(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _23739_s) {
	jule::Ptr<_1c66483b7_Iter> _2387_it = jule::new_ptr<_1c66483b7_Iter>(_1c66483b7_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1c6648be2_WhileKind> _2427_kind = jule::new_ptr<_1c6648be2_WhileKind>(_1c6648be2_WhileKind{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1c737dc9a_isLastSt(_self_)) {
		_1c737e10d_pushErr(_self_, (*(_2387_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2417_tokens=(*(_1c737e9b0_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _2547_stTokens = _1c7396587_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1c737c4a2_stmt> _2568_stmt = jule::new_ptr<_1c737c4a2_stmt>(_1c737c4a2_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1c73898bb_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _2657_blockTokens = _1c7399a74_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1c737d4e7_stop(_self_);
		_1c737e10d_pushErr(_self_, (*_2387_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1c737e10d_pushErr(_self_, _2417_tokens[_2647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2387_it.alloc)._field_Scope=_1c737edab_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type44);
	return _2387_it;;
}



inline jule::Ptr<_1c6648be2_WhileKind> _1c7380bc0_buildWhileIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28239_tokens) {
	return jule::new_ptr<_1c6648be2_WhileKind>(_1c6648be2_WhileKind{._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1c661e327_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c7381011_getRangeKindKeysTokens(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _2897_vars;
	jule::Slice<_20806e73a_Log> _28913_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1c664776d_VarDecl> _1c7381352_buildRangeKindKey(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c664776d_VarDecl> _2987_key = jule::new_ptr<_1c664776d_VarDecl>(_1c664776d_VarDecl{._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1c737e10d_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1c737e10d_pushErr(_self_, (*(_29438_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c737e10d_pushErr(_self_, (*_2987_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _1c7381693_buildRangeKindKeys(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7a5acd5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1c664776d_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1c7381352_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1d7a5acd5:;
			++it;
			goto _iter_begin_1d7a5acd5;
		}
		_iter_end_1d7a5acd5:;
	};
	return _32111_keys;;
}



inline void _1c7381a06_setupRangeKindKeysPlain(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _3297_keyTokens = _1c7381011_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1c737e10d_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _3367_keys = _1c7381693_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1c7381d69_setupRangeKindKeysExplicit(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _3457_rang = _1c7399a74_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1c737e10d_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1c7381a06_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1c73821cc_setupRangeKindKeys(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c66495e9_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1c661e327_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1c7381d69_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1c7381a06_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1c66495e9_RangeKind> _1c7382683_buildRangeIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1c661e327_Token>>* _3618_exprTokens, jule::Ptr<_1c661e327_Token>* _36135_inToken) {
	jule::Ptr<_1c66495e9_RangeKind> _3627_rng = jule::new_ptr<_1c66495e9_RangeKind>(_1c66495e9_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1c664776d_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1c664776d_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1c737e10d_pushErr(_self_, (*(_3627_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1c73821cc_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1c7382a7e_buildCommonIterKind(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37640_tokens, jule::Ptr<_1c661e327_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7a6b93e:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7a6c313:;
						{
							(_3777_braceN)++;
							goto _iter_next_1d7a6b93e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7a6c6ed:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1d7a6c5ee:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1d7a6b93e;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1d7a6d7ba:;
						{
							jule::Slice<jule::Ptr<_1c661e327_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1c661e327_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1c7382683_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type46);;
						}
					}
					_match_end_1d7a6de2a:;
				};
			}
			_iter_next_1d7a6b93e:;
			++it;
			_3788_i++;
			goto _iter_begin_1d7a6b93e;
		}
		_iter_end_1d7a6b93e:;
	};
	return jule::Any(_1c7380bc0_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type44);;
}



inline jule::Ptr<_1c66483b7_Iter> _1c7382dc0_buildCommonIter(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _40335_tokens) {
	jule::Ptr<_1c66483b7_Iter> _4047_it = jule::new_ptr<_1c66483b7_Iter>(_1c66483b7_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1c737d4e7_stop(_self_);
		_1c737e10d_pushErr(_self_, (*(_4047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _4147_exprTokens = _1c7396587_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1c7382a7e_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _4197_scopeTokens = _1c7399a74_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1c737d4e7_stop(_self_);
		_1c737e10d_pushErr(_self_, (*_4047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1c737e10d_pushErr(_self_, _40335_tokens[_4187_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_4047_it.alloc)._field_Scope=_1c737edab_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1c66483b7_Iter> _1c7383211_buildIterSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1c738087e_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1c7382dc0_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1c66499c3_BreakSt> _1c7383552_buildBreakSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _44033_tokens) {
	jule::Ptr<_1c66499c3_BreakSt> _4417_brk = jule::new_ptr<_1c66499c3_BreakSt>(_1c66499c3_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c737e10d_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1c737e10d_pushErr(_self_, (*(_44033_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1c6649d9c_ContSt> _1c7383893_buildContSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _45832_tokens) {
	jule::Ptr<_1c6649d9c_ContSt> _4597_cont = jule::new_ptr<_1c6649d9c_ContSt>(_1c6649d9c_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c737e10d_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1c737e10d_pushErr(_self_, (*(_45832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1c664a353_If> _1c7383bd4_buildIf(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _47628_tokens) {
	jule::Ptr<_1c664a353_If> _4777_model = jule::new_ptr<_1c664a353_If>(_1c664a353_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _4817_exprTokens = _1c7396587_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1c737e10d_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _4887_scopeTokens = _1c7399a74_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1c737d4e7_stop(_self_);
		_1c737e10d_pushErr(_self_, (*(_4777_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1c737e10d_pushErr(_self_, (*(_47628_tokens))[_4827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1c737edab_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1c664a72c_Else> _1c7384025_buildElse(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _50930_tokens) {
	jule::Ptr<_1c664a72c_Else> _5107_els = jule::new_ptr<_1c664a72c_Else>(_1c664a72c_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _5157_scopeTokens = _1c7399a74_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1c737e10d_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1c737d4e7_stop(_self_);
			_1c737e10d_pushErr(_self_, (*(_5107_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1c737e10d_pushErr(_self_, (*(_50930_tokens))[_5147_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_5107_els))._field_Scope=_1c737edab_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1c664abd3_Conditional> _1c7384366_buildIfElseChain(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _53336_tokens) {
	jule::Ptr<_1c664abd3_Conditional> _5347_chain = jule::new_ptr<_1c664abd3_Conditional>(_1c664abd3_Conditional{._field_Head=_1c7383bd4_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1c664a353_If>>(nullptr), ._field_Default=jule::Ptr<_1c664a72c_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1d7a8a661;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1c664a353_If> _5469_elif = _1c7383bd4_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c664a353_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1d7a8a661;
			};
			(*_5347_chain.alloc)._field_Default=_1c7384025_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1d7a8a661;
		}
	_iter_next_1d7a8a661:;
	}
	_iter_end_1d7a8a661:;;
	return _5347_chain;;
}



inline jule::Ptr<_1c6638c37_Expr> _1c73846a7_buildCoCallSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _55633_tokens) {
	jule::Ptr<_1c661e327_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1c6638c37_Expr> _5597_e = _1c739c55a_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1d7a8e753:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1c663c961_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1d7a8ed2a:;
			{
				_1c737e10d_pushErr(_self_, _5573_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1d7a8ecb4:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1c66423b1_GotoSt> _1c73849e8_buildGotoSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _57232_tokens) {
	jule::Ptr<_1c66423b1_GotoSt> _5737_gt = jule::new_ptr<_1c66423b1_GotoSt>(_1c66423b1_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1c737e10d_pushErr(_self_, (*(_5737_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1c737e10d_pushErr(_self_, (*(_57232_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1c661e327_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c737e10d_pushErr(_self_, _5827_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1c66426ad_FallSt> _1c7384d39_buildFallSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _59232_tokens) {
	jule::Ptr<_1c66426ad_FallSt> _5937_fll = jule::new_ptr<_1c66426ad_FallSt>(_1c66426ad_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1c737e10d_pushErr(_self_, (*(_59232_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c738517a_buildTypeAliasSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _60237_tokens) {
	jule::Ptr<_1c664b420_TypeAliasDecl> _6037_tad = _1c739dced_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1c7385653_pushCaseExpr(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _60832_tokens, jule::Ptr<_1c661e327_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1c6634903_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1c6638c37_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1c6638c37_Expr>(_1c6638c37_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type92)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1c737e10d_pushErr(_self_, _60832_tokens[_6148_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c6638c37_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1c739c55a_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1c6638c37_Expr__jule_tuple_bool _1c7385b09_buildCaseExprs(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _63135_tokens, jule::Ptr<_1c661e327_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1c6638c37_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6638c37_Expr>(nullptr); __jule_collection; });;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7a9b6d8:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1d7a9ce48:;
						{
							(_6337_braceN)++;
							goto _iter_next_1d7a9b6d8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1d7a9d333:;
						{
							(_6337_braceN)--;
							goto _iter_next_1d7a9b6d8;
						}
					}
					_match_end_1d7a9d234:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1d7a9b6d8;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1d7a9e9e9:;
						{
							jule::Slice<jule::Ptr<_1c661e327_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1c737e10d_pushErr(_self_, _63515_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1c7385653_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1d7a9ea60:;
						{
							(*(_63158_colon))=_63515_tok;
							_1c7385653_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1d7a9e4ee:;
				};
			}
			_iter_next_1d7a9b6d8:;
			++it;
			_6358_i++;
			goto _iter_begin_1d7a9b6d8;
		}
		_iter_end_1d7a9b6d8:;
	};
	_1c737e10d_pushErr(_self_, (*(_63135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1c6644924_ScopeTree> _1c7385e4a_buildCaseScope(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1c661e327_Token>> _6778_next;
			({
				__jule_tuple_sx_1c661e327_Token__jule_tuple_bool __jule_assign_result = _1c737c172_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1d7aa37de;
			};
			jule::Ptr<_1c661e327_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1d7aa37de;
			};
			jule::Slice<jule::Ptr<_1c661e327_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1c6644924_ScopeTree> _6878_scope = _1c737edab_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1d7aa37de:;
	}
	_iter_end_1d7aa37de:;;
	jule::Ptr<_1c661e327_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c6644924_ScopeTree> _6957_scope = _1c737edab_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1c664b8c6_Case__jule_tuple_bool _1c7386346_buildCase(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1c664b8c6_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c664b8c6_Case> _7017_c = jule::new_ptr<_1c664b8c6_Case>(_1c664b8c6_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c6638c37_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c661e327_Token> _70511_colon = nullptr;;
	if (((*(_70030_tokens)).len() == 0LL)) {
		_1c737e10d_pushErr(_self_, (*(_7017_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _71012_ok;
	({
		__jule_tuple_sx_1c6638c37_Expr__jule_tuple_bool __jule_assign_result = _1c7385b09_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*_7017_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_71012_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1c7385e4a_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7153_isDefault = (_71012_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7153_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c664b8c6_Case__jule_tuple_x_1c664a72c_Else _1c7386742_buildCases(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _71930_tokens, jule::Bool _71948_typeMatch) {
	__jule_tuple_sx_1c664b8c6_Case__jule_tuple_x_1c664a72c_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c664b8c6_Case>> _72011_cases = nullptr;;
	jule::Ptr<_1c664a72c_Else> _72111_def = nullptr;;
	jule::Bool _7227_defNotLast = false;;
	while ((_71930_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c661e327_Token> _7248_tok = _71930_tokens[0LL];;
			if (((*(_7248_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1c737e10d_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1d7aacc05;
			};
			jule::Ptr<_1c664b8c6_Case> _7298_c;
			jule::Bool _72911_isDefault;
			({
				__jule_tuple_x_1c664b8c6_Case__jule_tuple_bool __jule_assign_result = _1c7386346_buildCase(_self_, &(_71930_tokens), _71948_typeMatch);
				_7298_c = __jule_assign_result.__jule_result_arg0;
				_72911_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72911_isDefault) {
				(*(_7298_c))._field_Token=_7248_tok;
				if ((_72111_def == nullptr)) {
					_72111_def=jule::new_ptr<_1c664a72c_Else>(_1c664a72c_Else{._field_Token=(*_7298_c.alloc)._field_Token, ._field_Scope=(*_7298_c.alloc)._field_Scope});
				} else {
					_1c737e10d_pushErr(_self_, _7248_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_7227_defNotLast=(_7227_defNotLast || (_72111_def != nullptr));
				{ jule::Slice<jule::Ptr<_1c664b8c6_Case>> &__jule_push_dest = _72011_cases; __jule_push_dest.push(_7298_c); };
			};
		}
	_iter_next_1d7aacc05:;
	}
	_iter_end_1d7aacc05:;;
	if (_7227_defNotLast) {
		_1c737e10d_pushErr(_self_, (*(_72111_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _72011_cases;
	__jule_func_result.__jule_result_arg1 = _72111_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c664c1e0_MatchCase> _1c7386a83_buildMatchCase(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _75334_tokens) {
	jule::Ptr<_1c664c1e0_MatchCase> _7547_m = jule::new_ptr<_1c664c1e0_MatchCase>(_1c664c1e0_MatchCase{._field_Comptime=false, ._field_Token=_75334_tokens[0LL], ._field_End=jule::Ptr<_1c661e327_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1c664b8c6_Case>>(nullptr), ._field_Default=jule::Ptr<_1c664a72c_Else>(nullptr)});;
	(_75334_tokens).mut_slice(1LL);;
	if (((_75334_tokens.len() > 0LL) && ((*(_75334_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7547_m))._field_TypeMatch=true;
		(_75334_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _7647_exprTokens = _1c7396587_getBlockExpr(&(_75334_tokens));;
	if ((_7647_exprTokens.len() > 0LL)) {
		(*_7547_m.alloc)._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, &(_7647_exprTokens));
	} else if ((*_7547_m.alloc)._field_TypeMatch) {
		_1c737e10d_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I64 _7717_i = _7647_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _7727_blockToks = _1c7399a74_range(&(_7717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_75334_tokens));;
	if ((_7727_blockToks == nullptr)) {
		_1c737d4e7_stop(_self_);
		_1c737e10d_pushErr(_self_, (*_7547_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1c737e471_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7717_i < _75334_tokens.len())) {
		_1c737e10d_pushErr(_self_, _75334_tokens[_7717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7547_m.alloc)._field_End=_75334_tokens[(_7717_i - 1LL)];
	({
		__jule_tuple_sx_1c664b8c6_Case__jule_tuple_x_1c664a72c_Else __jule_assign_result = _1c7386742_buildCases(_self_, _7727_blockToks, (*_7547_m.alloc)._field_TypeMatch);
		(*_7547_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7547_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7547_m;;
}



inline jule::Ptr<_1c6644924_ScopeTree> _1c7386dc4_buildScopeSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _78632_tokens) {
	jule::Bool _7877_isUnsafe = false;;
	jule::Bool _7887_isDeferred = false;;
	jule::Ptr<_1c661e327_Token> _7897_token = _78632_tokens[0LL];;
	if (((*(_7897_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7877_isUnsafe=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1c737e10d_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7897_token=_78632_tokens[0LL];
		if (((*_7897_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7887_isDeferred=true;
			(_78632_tokens).mut_slice(1LL);;
			if ((_78632_tokens.len() == 0LL)) {
				_1c737e10d_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7897_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7887_isDeferred=true;
		(_78632_tokens).mut_slice(1LL);;
		if ((_78632_tokens.len() == 0LL)) {
			_1c737e10d_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I64 _8157_i = 0LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8167_scopeTokens = _1c7399a74_range(&(_8157_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78632_tokens));;
	if ((_8167_scopeTokens == nullptr)) {
		_1c737e10d_pushErr(_self_, _7897_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_8157_i < _78632_tokens.len())) {
		_1c737e10d_pushErr(_self_, _78632_tokens[_8157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1c6644924_ScopeTree> _8237_scope = _1c737edab_buildScope(_self_, &(_8167_scopeTokens), _78632_tokens[(_8157_i - 1LL)]);;
	(*(_8237_scope))._field_Unsafety=_7877_isUnsafe;
	(*_8237_scope.alloc)._field_Deferred=_7887_isDeferred;
	return _8237_scope;;
}



inline jule::Ptr<_1c6641ed7_LabelSt> _1c7387215_buildLabelSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _82933_tokens) {
	jule::Ptr<_1c6641ed7_LabelSt> _8307_lbl = jule::new_ptr<_1c6641ed7_LabelSt>(_1c6641ed7_LabelSt{._field_Token=(*(_82933_tokens))[0LL], ._field_Ident=(*((*(_82933_tokens))[0LL]))._field_Kind});;
	if (((*(_82933_tokens)).len() > 2LL)) {
		((*(_82933_tokens))).mut_slice(2LL);;
		_1c737e729_insertAsNext(_self_, _82933_tokens);
	};
	return _8307_lbl;;
}



inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c7387556_buildIdSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _84430_tokens) {
	__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84430_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c661e327_Token> _8497_token = (*(_84430_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8497_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1d7ac47bb:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1c7387215_buildLabelSt(_self_, _84430_tokens), &__jule_any_type64);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d7ac502a:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c7397ec3_assignInfo> _1c7387897_buildAssignInfo(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _85836_tokens) {
	jule::Ptr<_1c7397ec3_assignInfo> _8597_info = jule::new_ptr<_1c7397ec3_assignInfo>(_1c7397ec3_assignInfo{._field_l=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_setter=jule::Ptr<_1c661e327_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8627_braceN = 0LL;;
	{
		auto expr = _85836_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ac6801:;
		if (it != expr_end) {
			jule::I64 _8638_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _86315_token = *it;
			{
				{
					auto &_match_expr{ (*(_86315_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7ac723b:;
						{
							(_8627_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7ac75c1:;
						{
							(_8627_braceN)--;
						}
					}
					_match_end_1d7ac74c2:;
				};
				{
					
					if ((_8627_braceN > 0LL)) {
						_case_begin_1d7ac8726:;
						{
							goto _iter_next_1d7ac6801;
						}
					}
					else if (((!(_1c6624173_IsAssignOp((*(_86315_token))._field_Id))) && ((*_86315_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1d7ac878c:;
						{
							goto _iter_next_1d7ac6801;
						}
					}
					_match_end_1d7ac867c:;
				};
				(*(_8597_info))._field_l=(*(_85836_tokens)).slice(0LL, _8638_i);
				if (((*_8597_info.alloc)._field_l.len() == 0LL)) {
					(*_8597_info.alloc)._field_ok=false;
				};
				(*_8597_info.alloc)._field_setter=_86315_token;
				if (((_8638_i + 1LL) >= (*(_85836_tokens)).len())) {
					(*_8597_info.alloc)._field_r=nullptr;
					(*_8597_info.alloc)._field_ok=_1c6623da9_IsPostfixOp((*((*_8597_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1d7ac6801;
				};
				(*_8597_info.alloc)._field_r=(*(_85836_tokens)).slice((_8638_i + 1LL));
				if (_1c6623da9_IsPostfixOp((*(*(_8597_info))._field_setter.alloc)._field_Id)) {
					if (((*_8597_info.alloc)._field_r.len() > 0LL)) {
						_1c737e10d_pushErr(_self_, (*(_8597_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8597_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1d7ac6801;
			}
			_iter_next_1d7ac6801:;
			++it;
			_8638_i++;
			goto _iter_begin_1d7ac6801;
		}
		_iter_end_1d7ac6801:;
	};
	return _8597_info;;
}



inline jule::Ptr<_1c6642d1d_AssignLeft> _1c7387bd8_buildAssignL(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _90333_tokens) {
	jule::Ptr<_1c6642d1d_AssignLeft> _9047_l = jule::new_ptr<_1c6642d1d_AssignLeft>(_1c6642d1d_AssignLeft{._field_Token=(*(_90333_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	if (((*((*(_90333_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9047_l))._field_Ident=(*((*_9047_l.alloc)._field_Token))._field_Kind;
	};
	(*_9047_l.alloc)._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, _90333_tokens);
	return _9047_l;;
}



inline jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> _1c7388029_buildAssignLs(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _91434_parts) {
	jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> _91511_lefts = nullptr;;
	{
		auto expr = _91434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ad0b3a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _91615_part = *it;
			{
				jule::Ptr<_1c6642d1d_AssignLeft> _9178_l = _1c7387bd8_buildAssignL(_self_, &(_91615_part));;
				{ jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> &__jule_push_dest = _91511_lefts; __jule_push_dest.push(_9178_l); };
			}
			_iter_next_1d7ad0b3a:;
			++it;
			goto _iter_begin_1d7ad0b3a;
		}
		_iter_end_1d7ad0b3a:;
	};
	return _91511_lefts;;
}



inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c738836a_buildPlainAssign(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _92337_tokens) {
	__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c7397ec3_assignInfo> _9247_info = _1c7387897_buildAssignInfo(_self_, _92337_tokens);;
	if ((!((*(_9247_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c66433a1_AssignSt> _9297_assign = jule::new_ptr<_1c66433a1_AssignSt>(_1c66433a1_AssignSt{._field_Declarative=false, ._field_Setter=(*_9247_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	if (((*((*_9247_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9297_assign))._field_Declarative=true;
		(*_9297_assign.alloc)._field_Right=_1c739c55a_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
		jule::Bool _9374_ok = _1c7388766_buildDeclAssign1(_self_, &((*_9247_info.alloc)._field_l), &(_9297_assign));;
		if ((!(_9374_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9297_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type66);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1c6642d1d_AssignLeft> _9468_left = (*(_9297_assign))._field_Left[0LL];;
		jule::Ptr<_1c664776d_VarDecl> _9478_decl = jule::new_ptr<_1c664776d_VarDecl>(_1c664776d_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9468_left))._field_Token, ._field_Setter=(*_9297_assign.alloc)._field_Setter, ._field_Ident=(*_9468_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9468_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9468_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Expr=(*_9297_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9478_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _9597_parts;
	jule::Slice<_20806e73a_Log> _95914_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&((*_9247_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9597_parts = __jule_assign_result.__jule_result_arg0;
		_95914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9297_assign.alloc)._field_Left=_1c7388029_buildAssignLs(_self_, &(_9597_parts));
	if (((*_9247_info.alloc)._field_r != nullptr)) {
		(*_9297_assign.alloc)._field_Right=_1c739c55a_buildExpr((*(_self_))._field_p, &((*_9247_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9297_assign, &__jule_any_type66);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1c7388766_buildDeclAssign1(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _97337_lefts, jule::Ptr<_1c66433a1_AssignSt>* _97359_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _9757_parts;
	jule::Slice<_20806e73a_Log> _97514_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(_97337_lefts, static_cast<jule::U64>(5LLU), true);
		_9757_parts = __jule_assign_result.__jule_result_arg0;
		_97514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97514_errs);
		return false;;
	};
	{
		auto expr = &(_9757_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7adc2ea:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _98115_part = *it;
			{
				jule::Bool _9828_isMut = false;;
				jule::Bool _9838_isRef = false;;
				jule::Ptr<_1c661e327_Token> _9854_token = _98115_part[0LL];;
				if (((*(_9854_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9828_isMut=true;
					(_98115_part).mut_slice(1LL);;
					if ((_98115_part.len() == 0LL)) {
						_1c737e10d_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_98115_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9838_isRef=true;
					(_98115_part).mut_slice(1LL);;
					if ((_98115_part.len() == 0LL)) {
						_1c737e10d_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_98115_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_98115_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1c737e10d_pushErr(_self_, _9854_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1c6642d1d_AssignLeft> _10098_l = _1c7387bd8_buildAssignL(_self_, &(_98115_part));;
				(*(_10098_l))._field_Mutable=_9828_isMut;
				(*_10098_l.alloc)._field_Reference=_9838_isRef;
				{ jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>> &__jule_push_dest = (*((*(_97359_assign))))._field_Left; __jule_push_dest.push(_10098_l); };
			}
			_iter_next_1d7adc2ea:;
			++it;
			goto _iter_begin_1d7adc2ea;
		}
		_iter_end_1d7adc2ea:;
	};
	return true;;
}



inline __jule_tuple_x_1c66433a1_AssignSt__jule_tuple_bool _1c7388aa7_buildDeclAssign(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _101835_tokens) {
	__jule_tuple_x_1c66433a1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101835_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101835_tokens).mut_slice(1LL);;
	jule::Ptr<_1c661e327_Token> _10247_token = _101835_tokens[0LL];;
	if (((*(_10247_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c66433a1_AssignSt> _10297_assign = jule::new_ptr<_1c66433a1_AssignSt>(_1c66433a1_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1c6642d1d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	jule::I64 _10337_i = 0LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _10347_rang = _1c7399a74_range(&(_10337_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101835_tokens));;
	if ((_10347_rang == nullptr)) {
		_1c737e10d_pushErr(_self_, _10247_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10337_i + 1LL) < _101835_tokens.len())) {
		(*(_10297_assign))._field_Setter=_101835_tokens[_10337_i];
		if (((*((*_10297_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c737e10d_pushErr(_self_, (*_10297_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10337_i)++;
		jule::Slice<jule::Ptr<_1c661e327_Token>> _10448_exprTokens = _101835_tokens.slice(_10337_i);;
		(*_10297_assign.alloc)._field_Right=_1c739c55a_buildExpr((*(_self_))._field_p, &(_10448_exprTokens));
	};
	jule::Bool _10483_ok = _1c7388766_buildDeclAssign1(_self_, &(_10347_rang), &(_10297_assign));;
	__jule_func_result.__jule_result_arg0 = _10297_assign;
	__jule_func_result.__jule_result_arg1 = _10483_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1c6644061_StmtData__jule_tuple_bool _1c7388de8_buildAssignSt(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _105234_tokens) {
	__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1c739837a_checkAssignTokens(_105234_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_105234_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d7aeca58:;
			{
				({
					__jule_tuple_x_1c66433a1_AssignSt__jule_tuple_bool __jule_assign_result = _1c7388aa7_buildDeclAssign(_self_, (*(_105234_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type66);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d7aebbcd:;
			{
				({
					__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_assign_result = _1c738836a_buildPlainAssign(_self_, _105234_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d7aec140:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c663960b_UseExpr> _1c7389239_buildUseExpr(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _106533_tokens) {
	if (((*(_106533_tokens)).len() == 1LL)) {
		_1c737e10d_pushErr(_self_, (*(_106533_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1c663960b_UseExpr> _10707_ue = jule::new_ptr<_1c663960b_UseExpr>(_1c663960b_UseExpr{._field_Token=(*(_106533_tokens))[0LL], ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	((*(_106533_tokens))).mut_slice(1LL);;
	(*(_10707_ue))._field_Expr=_1c739c55a_buildExpr((*(_self_))._field_p, _106533_tokens);
	return _10707_ue;;
}



inline jule::Any _1c738957a_buildConstSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _107833_st) {
	if (((*((*(_107833_st))))._field_tokens.len() == 1LL)) {
		_1c737e10d_pushErr(_self_, (*((*(_107833_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107833_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1d7b02178:;
			{
				((*((*(_107833_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c66483b7_Iter> _10868_iter = _1c7383211_buildIterSt(_self_, _107833_st);;
				if ((_10868_iter != nullptr)) {
					(*_10868_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10868_iter, &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d7b01e69:;
			{
				((*((*(_107833_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c664c1e0_MatchCase> _10938_mt = _1c7386a83_buildMatchCase(_self_, (*((*(_107833_st))))._field_tokens);;
				if ((_10938_mt != nullptr)) {
					(*_10938_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10938_mt, &__jule_any_type67);;
			}
		}
		else {
			_case_begin_1d7b01276:;
			{
				return jule::Any(_1c73801ec_buildVarSt(_self_, &((*((*(_107833_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1d7b019b3:;
	};
}



inline jule::Any _1c73898bb_buildSt(_1c737cd43_scopeParser* _self_, jule::Ptr<_1c737c4a2_stmt>* _110328_st) {
	jule::Ptr<_1c661e327_Token> _11047_token = (*((*(_110328_st))))._field_tokens[0LL];;
	if (((*(_11047_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11068_s;
		jule::Bool _110611_ok;
		({
			__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_assign_result = _1c7387556_buildIdSt(_self_, &((*((*(_110328_st))))._field_tokens));
			_11068_s = __jule_assign_result.__jule_result_arg0;
			_110611_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110611_ok) {
			return _11068_s;;
		};
	};
	jule::Any _11127_s;
	jule::Bool _111210_ok;
	({
		__jule_tuple__1c6644061_StmtData__jule_tuple_bool __jule_assign_result = _1c7388de8_buildAssignSt(_self_, &((*((*(_110328_st))))._field_tokens));
		_11127_s = __jule_assign_result.__jule_result_arg0;
		_111210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_111210_ok) {
		return _11127_s;;
	};
	{
		auto &_match_expr{ (*(_11047_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1d7b080a2:;
			{
				return jule::Any(_1c7389239_buildUseExpr(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type71);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1d7b07e2b:;
			{
				return _1c738957a_buildConstSt(_self_, _110328_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1d7b08316:;
			{
				return jule::Any(_1c73801ec_buildVarSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1d7b0837c:;
			{
				return jule::Any(_1c738053d_buildRetSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type70);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1d7b083e3:;
			{
				return jule::Any(_1c7383211_buildIterSt(_self_, _110328_st), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1d7b08459:;
			{
				return jule::Any(_1c7383552_buildBreakSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1d7b084c0:;
			{
				return jule::Any(_1c7383893_buildContSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1d7b08547:;
			{
				return jule::Any(_1c7384366_buildIfElseChain(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1d7b085be:;
			{
				return jule::Any(_1c73846a7_buildCoCallSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1d7b08646:;
			{
				return jule::Any(_1c73849e8_buildGotoSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1d7b086bd:;
			{
				return jule::Any(_1c7384d39_buildFallSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d7b08745:;
			{
				return jule::Any(_1c738517a_buildTypeAliasSt(_self_, &((*((*(_110328_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1d7b087bc:;
			{
				return jule::Any(_1c7386a83_buildMatchCase(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7b08844:;
			{
				if (((*((*(_110328_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1d7b07c61;
				};
				if ((((*((*((*(_110328_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_110328_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1c7386dc4_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1d7b088bb:;
			{
				return jule::Any(_1c7386dc4_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1d7b08943:;
			{
				return jule::Any(_1c7386dc4_buildScopeSt(_self_, (*((*(_110328_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		_match_end_1d7b07c61:;
	};
	jule::Ptr<_1c6638c37_Expr> _11597_expr = _1c739c55a_buildExpr((*(_self_))._field_p, &((*((*(_110328_st))))._field_tokens));;
	if ((_11597_expr != nullptr)) {
		return jule::Any(_11597_expr, &__jule_any_type60);;
	};
	_1c737e10d_pushErr(_self_, _11047_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1c7389c2e_build(_1c737cd43_scopeParser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _116726_tokens, jule::Ptr<_1c6644924_ScopeTree>* _116749_s) {
	if (((*(_116749_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1c737c859_splitStmts(_116726_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116749_s));
	while (((!(_1c737dc9a_isLastSt(_self_))) && (!(_1c737da14_finished(_self_))))) {
		{
			jule::Ptr<_1c737c4a2_stmt> _11758_st = _1c737e9b0_next(_self_);;
			jule::Any _11768_data = _1c73898bb_buildSt(_self_, &(_11758_st));;
			if ((_11768_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1c66442b4_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c66442b4_Stmt{._field_Token=(*(_11758_st))._field_tokens[0LL], ._field_Data=_11768_data}; __jule_collection; }));
			};
			if (_1c737d77d_stopped(_self_)) {
				goto _iter_end_1d7b15b92;
			};
		}
	_iter_next_1d7b15b92:;
	}
	_iter_end_1d7b15b92:;;
}








inline jule::Bool _1c738a7ac_exprBuilder_eq(_1c738a7ac_exprBuilder *_self_, _1c738a7ac_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1c738b082_pushErr(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1c739bda6_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1c738b3e5_pushSuggestion(_1c738a7ac_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1c739c219_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1c663982b_TupleExpr> _1c738b736_buildTuple(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _5431_parts) {
	jule::Ptr<_1c663982b_TupleExpr> _557_tuple = jule::new_ptr<_1c663982b_TupleExpr>(_1c663982b_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6638c37_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b39cb5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c7395b2a_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1d7b39cb5:;
			++it;
			goto _iter_begin_1d7b39cb5;
		}
		_iter_end_1d7b39cb5:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1c6639bc2_LitExpr> _1c738ba77_buildLit(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _6424_token) {
	return jule::new_ptr<_1c6639bc2_LitExpr>(_1c6639bc2_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1c738c209_buildSingle(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1d7b3c9aa:;
			{
				return jule::Any(_1c738ba77_buildLit(_self_, _7531_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1d7b3ca32:;
			{
				return jule::Any(jule::new_ptr<_1c663b1bd_VariadicExpr>(_1c663b1bd_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1d7b3ca98:;
			{
				return jule::Any(_1c7396ed3_buildIdentExpr(&(_7531_token)), &__jule_any_type52);;
			}
		}
		_match_end_1d7b3c8de:;
	};
	_1c738b082_pushErr(_self_, _7531_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c663a552_IdentExpr> _1c738c54a_buildBindIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1c738b082_pushErr(_self_, (*(_9235_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c738b082_pushErr(_self_, (*(_9235_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c663a552_IdentExpr> _1067_expr = _1c7396ed3_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1c663ace4_UnaryExpr> _1c738c88b_buildUnary(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _11130_tokens) {
	jule::Ptr<_1c661e327_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1c738b082_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c661ea64_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1c738b082_pushErr(_self_, _1127_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1c663ace4_UnaryExpr>(_1c663ace4_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1c7395b2a_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1c663bd4a_SubIdentExpr> _1c738cbcc_buildObjSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1c661e327_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, _1347_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c663bd4a_SubIdentExpr>(_1c663bd4a_SubIdentExpr{._field_Expr=_1c7395b2a_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1c663b971_NsSelectionExpr> _1c738d01d_buildNsSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _14736_tokens) {
	jule::Ptr<_1c663b971_NsSelectionExpr> _1487_ns = jule::new_ptr<_1c663b971_NsSelectionExpr>(_1c663b971_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Ident=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7b49a94:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1c661e327_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1c738b082_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1c738b082_pushErr(_self_, _15416_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1d7b49a94:;
				++it;
				_1549_i++;
				goto _iter_begin_1d7b49a94;
			}
			_iter_end_1d7b49a94:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c738d35e_buildType(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1c6634903_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1c738b082_pushErr(_self_, (*(_17230_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1c738b082_pushErr(_self_, (*(_17230_tokens))[_1737_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1c738d6a0_buildSubIdent(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1c661e327_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1d7b53196:;
			{
				return jule::Any(_1c738cbcc_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d7b537c3:;
			{
				return jule::Any(_1c738d01d_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1d7b53839:;
			{
				return jule::Any(_1c738d35e_buildType(_self_, _18634_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1d7b536a2:;
	};
	if (_1c7397676_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1c738d35e_buildType(_self_, _18634_tokens), &__jule_any_type92);;
	};
	_1c738b082_pushErr(_self_, _1883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c663b1bd_VariadicExpr> _1c738d9e1_buildVariadic(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _20833_tokens) {
	jule::Ptr<_1c661e327_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1c663b1bd_VariadicExpr>(_1c663b1bd_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1c7395b2a_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1c6639001_RangeExpr> _1c738dd32_buildBetweenParentheses(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1c738b082_pushErr(_self_, _21743_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1c6639001_RangeExpr>(_1c6639001_RangeExpr{._field_Expr=_1c7395b2a_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1c663b597_CastExpr> _1c738e173_tryBuildCast(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b593bc:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7b59c5d:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1d7b593bc;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7b5a148:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1d7b5a049:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1d7b593bc;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c661e327_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1c661e327_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c661e327_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1c663b597_CastExpr> _2638_cast = jule::new_ptr<_1c663b597_CastExpr>(_1c663b597_CastExpr{._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1c738b082_pushErr(_self_, _2518_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1c738b082_pushErr(_self_, _2508_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1c6634903_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1c738b082_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1c7399a74_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1c7395b2a_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1d7b593bc:;
			++it;
			_2317_i++;
			goto _iter_begin_1d7b593bc;
		}
		_iter_end_1d7b593bc:;
	};
	return nullptr;;
}



inline void _1c738e591_pushArg(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c6638c37_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c661e327_Token>> _30347_tokens, jule::Ptr<_1c661e327_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, _30365_err_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c6638c37_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1c7395b2a_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1c6638c37_Expr>> _1c738e8d2_buildArgs(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b67cd2:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7b689b4:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7b68d9e:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1d7b68ca0:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1d7b67cd2;
				};
				_1c738e591_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1d7b67cd2:;
			++it;
			_3227_i++;
			goto _iter_begin_1d7b67cd2;
		}
		_iter_end_1d7b67cd2:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1c738e591_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1c738e591_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1c663c961_FnCallExpr> _1c73901c9_buildFnCall(_1c738a7ac_exprBuilder* _self_, jule::Ptr<_1c661e327_Token>* _37832_token, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37873_args) {
	return jule::new_ptr<_1c663c961_FnCallExpr>(_1c663c961_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1c7395b2a_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1c738e8d2_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1c739051a_buildParenthesesRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _38642_tokens) {
	jule::Ptr<_1c661e327_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1c663b597_CastExpr> _3898_expr = _1c738e173_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_assign_result = _1c7399d3d_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1c738dd32_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type104);;
	};
	if (_1c7397676_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1c738d35e_buildType(_self_, _38642_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1c73901c9_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1c663a09b_UnsafeExpr> _1c739085b_buildUnsafeExpr(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _40835_tokens) {
	jule::Ptr<_1c661e327_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _4127_rangeTokens = _1c7399a74_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, _40835_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c663a09b_UnsafeExpr>(_1c663a09b_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1c7395b2a_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1c66465b3_FnDecl> _1c7390b9c_buildAnonFn(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _42332_tokens) {
	jule::Ptr<_1c66465b3_FnDecl> _4247_f = _1c73a3044_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1c6646959_IsAnon(_4247_f.ptr())))) {
		_1c738b082_pushErr(_self_, (*_4247_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1c7390edd_buildUnsafe(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d7b7b8ea:;
			{
				return jule::Any(_1c7390b9c_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1d7b7ac90:;
			{
				return jule::Any(_1c739085b_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1d7b7b1d0:;
	};
}



inline void _1c739140b_pushRangeLitPart(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _44236_part, jule::Ptr<_1c661e327_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1c738b082_pushErr(_self_, _4433_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c739174c_getBraceRangeLitExprParts(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b8017e:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7b80d61:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7b8124b:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1d7b8114c:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1d7b8017e;
				};
				_1c739140b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1d7b8017e:;
			++it;
			_4647_i++;
			goto _iter_begin_1d7b8017e;
		}
		_iter_end_1d7b8017e:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1c739140b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1c739140b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1c663d456_FieldExprPair> _1c7391a8d_buildFieldExprPair(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1c738b082_pushErr(_self_, _49538_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c663d456_FieldExprPair> _5007_pair = jule::new_ptr<_1c663d456_FieldExprPair>(_1c663d456_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1c7395b2a_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1c6638c37_Expr> _1c7391dce_buildStructLitExpr(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _50839_tokens) {
	jule::Ptr<_1c661e327_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1c6638c37_Expr>(_1c6638c37_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1c7391a8d_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type81)});;
		};
	};
	return _1c7395b2a_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c6638c37_Expr>> _1c7392220_buildStructLitExprs(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _5247_parts = _1c739174c_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6638c37_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6638c37_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b89a5c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6638c37_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1c7391dce_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1d7b89a5c:;
			++it;
			goto _iter_begin_1d7b89a5c;
		}
		_iter_end_1d7b89a5c:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1c663dc81_StructLit> _1c7392561_buildTypedStructLiteral(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1c6634903_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1c738b082_pushErr(_self_, _53643_tokens[_5377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1c661e327_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1c738b082_pushErr(_self_, _5473_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c663dc81_StructLit>(_1c663dc81_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1c7392220_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1c6638c37_Expr> _1c73928a2_buildBraceLitPart(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _56114_r;
	({
		__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_assign_result = _1c7396950_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1c6638c37_Expr>(_1c6638c37_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c663ea62_KeyValPair>(_1c663ea62_KeyValPair{._field_Key=_1c7395b2a_buildFromTokens(_self_, _5617_l), ._field_Val=_1c7395b2a_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type82)});;
	};
	return _1c7395b2a_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1c663e237_BraceLit> _1c7392be3_buildBraceLit(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _57734_tokens) {
	jule::Ptr<_1c663e237_BraceLit> _5787_lit = jule::new_ptr<_1c663e237_BraceLit>(_1c663e237_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1c6638c37_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _5837_parts = _1c739174c_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6638c37_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b9477b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c73928a2_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1d7b9477b:;
			++it;
			goto _iter_begin_1d7b9477b;
		}
		_iter_end_1d7b9477b:;
	};
	return _5787_lit;;
}



inline jule::Any _1c7393034_buildBraceRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1c661e327_Token__jule_tuple_int __jule_assign_result = _1c739729c_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1d7b961c8:;
			{
				return jule::Any(_1c7392be3_buildBraceLit(_self_, _59636_tokens), &__jule_any_type111);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1d7b96261:;
			{
				_1c738b082_pushErr(_self_, (*(_59636_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7b96162:;
	};
	jule::Ptr<_1c661e327_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1c7395498_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1d7b990aa:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1c661e327_Token>> _6199_rangeTokens = _1c7399a74_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1c663c961_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1c663c961_FnCallExpr>();;
					if (_1c663d09e_Ignored(_6209_model.ptr())) {
						_1c738b082_pushErr(_self_, _6083_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1c739d050_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1d7b98c14:;
				{
					_1c738b082_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1d7b99154:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7b9d90b:;
			{
				return _1c7390edd_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d7b9e1ae:;
			{
				return jule::Any(_1c7390b9c_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1d7b9e225:;
			{
				return jule::Any(_1c7392561_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1d7b9ba19:;
			{
				_1c738b082_pushErr(_self_, _5977_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7b9d4ee:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c7393375_getEnumerableParts(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _6507_parts;
	jule::Slice<_20806e73a_Log> _65014_errors;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1c664028d_SliceExpr> _1c73936b6_buildSlice(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _65530_tokens) {
	jule::Ptr<_1c664028d_SliceExpr> _6567_slc = jule::new_ptr<_1c664028d_SliceExpr>(_1c664028d_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1c6638c37_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _6617_parts = _1c7393375_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6638c37_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ba40a4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1d7ba40a4;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6638c37_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c7395b2a_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1d7ba40a4:;
			++it;
			goto _iter_begin_1d7ba40a4;
		}
		_iter_end_1d7ba40a4:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1c6640bea_IndexingExpr> _1c7393b6c_buildIndexing(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c661e327_Token>> _6787_tokens, jule::Ptr<_1c661e327_Token> _67829_errorToken) {
	jule::Ptr<_1c661e327_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, _67829_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _6857_expr = _1c7395b2a_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _6897_index = _1c7395b2a_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6640bea_IndexingExpr>(_1c6640bea_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1c664135a_SlicingExpr> _1c7394288_buildSlicing(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c661e327_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c661e327_Token>>* _7028_to, jule::Ptr<_1c661e327_Token>* _70227_errorToken, jule::Ptr<_1c661e327_Token> _70251_end) {
	jule::Ptr<_1c664135a_SlicingExpr> _7037_slc = jule::new_ptr<_1c664135a_SlicingExpr>(_1c664135a_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1c7395b2a_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_To=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1c7395b2a_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1c7395b2a_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1c73945c9_buildBracketRange(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _71737_tokens) {
	jule::Ptr<_1c661e327_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1c661e327_Token__jule_tuple_int __jule_assign_result = _1c739729c_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1c73936b6_buildSlice(_self_, _71737_tokens), &__jule_any_type97);;
	} else if ((_71919_rangeN > 0LL)) {
		_1c738b082_pushErr(_self_, _7187_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _73518_to;
	({
		__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_assign_result = _1c7396950_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1c7394288_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1c7393b6c_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type107);;
}



inline jule::Any _1c739491a_buildExclRight(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _74235_tokens) {
	jule::Ptr<_1c661e327_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1c7395498_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1d7bb1b83:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1c663c961_FnCallExpr>()))._field_Exception=jule::new_ptr<_1c6644924_ScopeTree>(_1c6644924_ScopeTree{._field_Parent=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1c66442b4_Stmt>(nullptr), ._field_End=jule::Ptr<_1c661e327_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1d7bb206d:;
	};
	_1c738b082_pushErr(_self_, _7433_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c7394c5b_buildData(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1d7bb3789:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1d7bb3800:;
			{
				return _1c738c209_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d7bb3866:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1c738c54a_buildBindIdent(_self_, _76030_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1d7bb3657:;
	};
	jule::Ptr<_1c661e327_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1c738d9e1_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type79);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1c661ea64_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1c738d35e_buildType(_self_, _76030_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1c738c88b_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type91);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1d7bbce8b:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1c661e327_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1d7bbd266;
						};
					};
					jule::Ptr<_1c661e327_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1d7bbd266;
					};
					return jule::Any(_1c738d35e_buildType(_self_, _76030_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1d7bbd266:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d7bc1467:;
			{
				return _1c738d6a0_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1d7bc14cd:;
			{
				return _1c739491a_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1d7bc1544:;
			{
				return _1c739051a_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1d7bc15aa:;
			{
				return _1c7393034_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1d7bc1621:;
			{
				return _1c73945c9_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1d7bc1401:;
	};
	_1c738b082_pushErr(_self_, _7727_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c7395157_buildBinary(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1c661e327_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1c7395eb0_isTypeOp(&((*(_8307_op))._field_Id)) && _1c73962bd_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1c738d35e_buildType(_self_, _82932_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1c738b082_pushErr(_self_, (*(_82932_tokens))[_82950_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c738b3e5_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c663c301_BinaryExpr>(_1c663c301_BinaryExpr{._field_Left=_1c7395b2a_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1c7395b2a_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type112);;
}



inline jule::Any _1c7395498_build(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1c738d35e_buildType(_self_, _85426_tokens), &__jule_any_type92);;
	};
	jule::I64 _8583_i = _1c7396c19_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1c7394c5b_buildData(_self_, _85426_tokens);;
	};
	return _1c7395157_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1c73957d9_buildKind(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _8667_parts;
	jule::Slice<_20806e73a_Log> _86614_errors;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1c738b736_buildTuple(_self_, &(_8667_parts)), &__jule_any_type83);;
	};
	return _1c7395498_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1c6638c37_Expr> _1c7395b2a_buildFromTokens(_1c738a7ac_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1c73957d9_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6638c37_Expr>(_1c6638c37_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}











inline void _1c739b702_stop(_1c739b3c2_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1c739b988_stopped(_1c739b3c2_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1c739bda6_pushErr(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_20806e73a_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c739a9a9_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1c739c219_pushSuggestion(_1c739b3c2_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1c739ad50_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1c6638c37_Expr> _1c739c55a_buildExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _21731_tokens) {
	return _1c7395b2a_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1c6633d20_Directive> _1c739c89b_buildDirective(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1c739bda6_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1c739bda6_pushErr(_self_, _22134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c6633d20_Directive>(_1c6633d20_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1c739cb54_pushDirective(_1c739b3c2_parser* _self_, jule::Ptr<_1c6633d20_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7bedad2:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1d7bedad2:;
			++it;
			goto _iter_begin_1d7bedad2;
		}
		_iter_end_1d7bedad2:;
	};
	{ jule::Slice<jule::Ptr<_1c6633d20_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1c6644924_ScopeTree> _1c739d050_buildScope(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _24932_tokens, jule::Ptr<_1c661e327_Token> _24954_end) {
	jule::Ptr<_1c6644924_ScopeTree> _2507_s = _1c737b25e_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1c737cd43_scopeParser _2527_sp = _1c737cd43_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1c737c4a2_stmt>>(nullptr), ._field_pos=0};;
	_1c7389c2e_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c739d506__buildType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1c73ad4e4_typeBuilder _2617_tb = _1c73ad4e4_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1c73b1508_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c739d9ac_buildType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c661e327_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1c6634903_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d506__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1c739bda6_pushErr(_self_, _2733_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c739dced_buildTypeAliasDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c739bda6_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c664b420_TypeAliasDecl> _2877_tad = jule::new_ptr<_1c664b420_TypeAliasDecl>(_1c664b420_TypeAliasDecl{._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
	jule::Ptr<_1c661e327_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, _2917_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1c739bda6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1c6634903_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1c739bda6_pushErr(_self_, (*(_28140_tokens))[_2827_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1c670383a_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1c739e161_buildVarTypeAndExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664776d_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c661e327_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1c661e327_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1c739bda6_pushErr(_self_.ptr(), _3237_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c6634903_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1c739bda6_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1c739bda6_pushErr(_self_, _3237_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1c739c55a_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1c739e4c4_buildVarCommon(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664776d_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c661e327_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1c670383a_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1c739e161_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1c739e837_buildVarBegin(_1c739b3c2_parser* _self_, jule::Ptr<_1c664776d_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c661e327_Token>>* _37052_tokens) {
	jule::Ptr<_1c661e327_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d7c1a4d3:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1d7c1a192;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d7c1a192:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1c739bda6_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1d7c1a208:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1d7c19d84:;
			{
				(*(_37052_tokens))=nullptr;
				_1c739bda6_pushErr(_self_, _3713_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d7c1a12b:;
	};
}



inline jule::Ptr<_1c664776d_VarDecl> _1c739eb78_buildVar(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _39829_tokens) {
	jule::Ptr<_1c664776d_VarDecl> _3997_v = jule::new_ptr<_1c664776d_VarDecl>(_1c664776d_VarDecl{._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	_1c739e837_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1c739e4c4_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1c6641b0d_GenericDecl> _1c739eeb9_buildGeneric(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _41734_tokens) {
	jule::Ptr<_1c6641b0d_GenericDecl> _4187_g = jule::new_ptr<_1c6641b0d_GenericDecl>(_1c6641b0d_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1c6641657_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1c739bda6_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1c739bda6_pushErr(_self_, (*(_41734_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c661e327_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _4368_parts;
		jule::Slice<_20806e73a_Log> _43615_errors;
		({
			__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1c6641657_Constraint>(_1c6641657_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7708da1:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c661e327_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1c6634903_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1c739bda6_pushErr(_self_, _44216_part[_4439_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1d7708da1:;
				++it;
				goto _iter_begin_1d7708da1;
			}
			_iter_end_1d7708da1:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _1c73a03b5_buildGenerics(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _45435_tokens, jule::Ptr<_1c661e327_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1c739bda6_pushErr(_self_.ptr(), (*(_45454_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _4607_parts;
	jule::Slice<_20806e73a_Log> _46014_errors;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6641b0d_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d770e428:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1c739eeb9_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1d770e428:;
			++it;
			goto _iter_begin_1d770e428;
		}
		_iter_end_1d770e428:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1c6645161_ParamDecl> _1c73a0706_buildSelfParam(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c6645161_ParamDecl> _4797_param = jule::new_ptr<_1c6645161_ParamDecl>(_1c6645161_ParamDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1c739bda6_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_20759e353_StrBuilder _4917_ident = static__2075a7c41_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_2075a814d_WriteStr(&_4917_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
		if ((_47434_tokens.len() == 1LL)) {
			_1c739bda6_pushErr(_self_, _47434_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_2075a814d_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1c739bda6_pushErr(_self_, _47434_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_2075a8945_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1c73a0b24_paramTypeBegin(_1c739b3c2_parser* _self_, jule::Ptr<_1c6645161_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1c739bda6_pushErr(_self_, _5164_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1d7716dc0;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1d7716dc0:;
	}
	_iter_end_1d7716dc0:;;
}



inline void _1c73a0e87_buildParamType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6645161_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c661e327_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1c73a0b24_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_52960_tokens))[_5307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1c73a12ea_buildParamBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6645161_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c661e327_Token>> _54259_tokens) {
	jule::Ptr<_1c661e327_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1c739bda6_pushErr(_self_.ptr(), _5437_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1c73a0e87_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1c73a0e87_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1c6645161_ParamDecl> _1c73a163b_buildParam(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _56231_tokens) {
	jule::Ptr<_1c6645161_ParamDecl> _5637_param = jule::new_ptr<_1c6645161_ParamDecl>(_1c6645161_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1c739bda6_pushErr(_self_.ptr(), _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1c739bda6_pushErr(_self_, _56231_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1c73a0e87_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1c73a12ea_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1c73a18e4_checkParams(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c6645161_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d77277a4:;
		if (it != expr_end) {
			jule::Ptr<_1c6645161_ParamDecl> _60615_param = *it;
			{
				if ((_1c6645518_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1d77277a4;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1c739bda6_pushErr(_self_, (*_60615_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_60615_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1d77277a4:;
			++it;
			goto _iter_begin_1d77277a4;
		}
		_iter_end_1d77277a4:;
	};
}



inline jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> _1c73a1ce0_buildParams(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _6267_parts;
	jule::Slice<_20806e73a_Log> _62614_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1c6645161_ParamDecl> _6348_param = _1c73a0706_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1c6645518_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d772e39e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1d772e39e;
				};
				jule::Ptr<_1c6645161_ParamDecl> _6458_param = _1c73a163b_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1c6645161_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1d772e39e:;
			++it;
			goto _iter_begin_1d772e39e;
		}
		_iter_end_1d772e39e:;
	};
	_1c73a18e4_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool _1c73a21db_buildMultiRetType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c66377e6_RetTypeDecl>(_1c66377e6_RetTypeDecl{._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _6657_rangeTokens = _1c7399a74_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _6677_parts;
	jule::Slice<_20806e73a_Log> _66714_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c661e327_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d77354a4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1d77354a4;
				};
				jule::Ptr<_1c661e327_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1c739bda6_pushErr(_self_, _6798_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1d77354a4;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1c661e327_Token> _6969_newToken = jule::new_ptr<_1c661e327_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1c6634903_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1c739bda6_pushErr(_self_, _67515_part[_6808_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1d77354a4:;
			++it;
			goto _iter_begin_1d77354a4;
		}
		_iter_end_1d77354a4:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c6636130_TupleTypeDecl>(_1c6636130_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool _1c73a25d7_buildRetType(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c66377e6_RetTypeDecl>(_1c66377e6_RetTypeDecl{._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c661e327_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1d773e568:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1d773e5e0:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1d773e656:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1c739bda6_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7740514:;
						{
							({
								__jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c73a21db_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1d774167a:;
						{
							_1c739bda6_pushErr(_self_, _7327_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1d77415d1:;
				};
				({
					__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1d773e502:;
	};
	((*(_72657_i)))++;
	_1c739bda6_pushErr(_self_.ptr(), _7327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c66465b3_FnDecl> _1c73a2a8d_buildFnPrototype(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1c66465b3_FnDecl> _7667_f = jule::new_ptr<_1c66465b3_FnDecl>(_1c66465b3_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1c66377e6_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c6645161_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c739bda6_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c739bda6_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c739bda6_pushErr(_self_, (*_7667_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1c661e327_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8127_genericsTokens = _1c7399a74_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1c73a03b5_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1c739bda6_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8227_paramsToks = _1c7399a74_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1c73a1ce0_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1c661e327_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1c670383a_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1c66377e6_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c73a25d7_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1c66465b3_FnDecl> _1c73a3044_buildFn(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1c66465b3_FnDecl> _8447_f = _1c73a2a8d_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1c739bda6_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*(_8447_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8607_blockTokens = _1c7399a74_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1c739d050_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1c739bda6_pushErr(_self_, (*(_84229_tokens))[_8437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*_8447_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c73a3385_getUseDeclSelectors(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1c7399a74_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _8797_parts;
	jule::Slice<_20806e73a_Log> _87914_errs;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c661e327_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d775b288:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1c739bda6_pushErr(_self_, _88615_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c661e327_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1c739bda6_pushErr(_self_, _8908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
					goto _iter_next_1d775b288;
				};
				{ jule::Slice<jule::Ptr<_1c661e327_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1d775b288:;
			++it;
			goto _iter_begin_1d775b288;
		}
		_iter_end_1d775b288:;
	};
	return _8857_selectors;;
}



inline void _1c73a36e8_buildBindUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c661e327_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1c739bda6_pushErr(_self_, (*(_90154_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c661e327_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1c739bda6_pushErr(_self_, _9053_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1c73a3a39_useDeclTokstoa(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7763bdb:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1c739bda6_pushErr(_self_, (*(_91610_token)), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1d7763bdb:;
			++it;
			goto _iter_begin_1d7763bdb;
		}
		_iter_end_1d7763bdb:;
	};
	_20759e353_StrBuilder _9227_s = static__2075a7c41_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7763922:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_92310_token = it;
			{
				_2075a814d_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1d7763922:;
			++it;
			goto _iter_begin_1d7763922;
		}
		_iter_end_1d7763922:;
	};
	return _2075a8945_Str(&_9227_s);;
}



inline void _1c73a3d9c_buildStdUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1c661e327_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d776877e:;
			{
				_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1d7768806:;
			{
				jule::Slice<jule::Ptr<_1c661e327_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_assign_result = _1c7399d3d_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1c73a3385_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d776886c:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1d7768718:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1c73a3a39_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1c73a4210_buildIdentUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1c661e327_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1d7772a63:;
			{
				_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1d7773965:;
			{
				jule::Slice<jule::Ptr<_1c661e327_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_assign_result = _1c7399d3d_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1c73a3385_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d77739cb:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c739bda6_pushErr(_self_, _9907_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1d7773833:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1c73a3a39_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1c73a4573_parseUseDecl(_1c739b3c2_parser* _self_, jule::Ptr<_1c664ca09_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c661e327_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1c73a36e8_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1c661e327_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c739bda6_pushErr(_self_, _10417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1d7781bd7:;
			{
				_1c73a3d9c_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1d77814ab:;
			{
				_1c73a4210_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1d7781445:;
	};
}



inline jule::Ptr<_1c664ca09_UseDecl> _1c73a496e_buildUseDecl(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1c664ca09_UseDecl> _10707_decl = jule::new_ptr<_1c664ca09_UseDecl>(_1c664ca09_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1c739bda6_pushErr(_self_, (*(_10707_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1c73a4573_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73a4d6a_buildTypeEnumItemKind(jule::Ptr<_1c739b3c2_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7785a21:;
					{
						(_10847_braceN)++;
						goto _iter_next_1d7784ea4;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7785d51:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1d7785a98:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1d7784ea4;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c661e327_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1c6634903_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1c739bda6_pushErr(_self_, _110313_kindTokens[_11099_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1d7784ea4:;
	}
	_iter_end_1d7784ea4:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>> _1c73a51ab_buildTypeEnumItems(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c664e39b_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1c661e327_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1c664e39b_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1c664e39b_TypeEnumItemDecl>(_1c664e39b_TypeEnumItemDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1c739bda6_pushErr(_self_.ptr(), _11248_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1d778ad12;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1c73a4d6a_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1d778ad12:;
	}
	_iter_end_1d778ad12:;;
	return _11217_items;;
}



inline jule::Ptr<_1c664ea0b_TypeEnumDecl> _1c73a54ec_buildTypeEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1c664ea0b_TypeEnumDecl> _11467_e = jule::new_ptr<_1c664ea0b_TypeEnumDecl>(_1c664ea0b_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _11567_itemTokens = _1c7399a74_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*_11467_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_114439_tokens))[_11457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1c670383a_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1c73a51ab_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1c6638c37_Expr> _1c73a58e8_buildEnumItemExpr(jule::Ptr<_1c739b3c2_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c661e327_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7d2bbcc:;
					{
						(_11727_braceN)++;
						goto _iter_next_1d7d2b160;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7d2c00c:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1d7d2bc54:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1d7d2b160;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c661e327_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1c739c55a_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1d7d2b160:;
	}
	_iter_end_1d7d2b160:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> _1c73a5c39_buildEnumItems(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c664ceb0_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1c661e327_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1c664ceb0_EnumItemDecl> _12088_item = jule::new_ptr<_1c664ceb0_EnumItemDecl>(_1c664ceb0_EnumItemDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1c739bda6_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1d7d30a9e;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1c739bda6_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1d7d30a9e;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1c739bda6_pushErr(_self_, _12078_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1d7d30a9e;
			};
			(*_12088_item.alloc)._field_Expr=_1c73a58e8_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1d7d30a9e:;
	}
	_iter_end_1d7d30a9e:;;
	return _12047_items;;
}



inline jule::Ptr<_1c664da71_EnumDecl> _1c73a607a_buildEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1c739bda6_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c664da71_EnumDecl> _12457_e = jule::new_ptr<_1c664da71_EnumDecl>(_1c664da71_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1c661e327_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1c739bda6_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1c739b702_stop(_self_);
			_1c739bda6_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _12707_itemTokens = _1c7399a74_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*_12457_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_124035_tokens))[_12537_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1c670383a_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1c73a5c39_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1c73a63bb_buildNodeEnumDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1c73a54ec_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1c73a607a_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c664ecc5_FieldDecl> _1c73a670c_buildField(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _129431_tokens) {
	jule::Ptr<_1c664ecc5_FieldDecl> _12957_f = jule::new_ptr<_1c664ecc5_FieldDecl>(_1c664ecc5_FieldDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1c739bda6_pushErr(_self_.ptr(), _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, (*_12957_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1c739bda6_pushErr(_self_, _129431_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1c739bda6_pushErr(_self_, _129431_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1c661e327_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c739bda6_pushErr(_self_, _129431_tokens[_13237_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1c739bda6_pushErr(_self_, _13264_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1c739c55a_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1c670383a_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>> _1c73a6a4d_buildStructDeclFields(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _13457_stmts = _1c737c859_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7d52a05:;
		if (it != expr_end) {
			jule::Ptr<_1c737c4a2_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1c664ecc5_FieldDecl> _13488_f = _1c73a670c_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1d7d52a05:;
			++it;
			goto _iter_begin_1d7d52a05;
		}
		_iter_end_1d7d52a05:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1c66506bb_StructDecl> _1c73a6d8e_buildStructDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1c739bda6_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1c66506bb_StructDecl> _13617_s = jule::new_ptr<_1c66506bb_StructDecl>(_1c66506bb_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1c661e327_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _13767_genericsTokens = _1c7399a74_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1c73a03b5_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _13867_bodyTokens = _1c7399a74_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*_13617_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_135437_tokens))[_13607_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1c670383a_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1c73a6a4d_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1c73a7147_checkMethodReceiver(_1c739b3c2_parser* _self_, jule::Ptr<_1c66465b3_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1c6645518_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1c739bda6_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1c739bda6_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c6645161_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1c6645518_IsSelf(_14143_param.ptr())))) {
		_1c739bda6_pushErr(_self_, (*((*(_140236_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c73a74aa_buildTraitBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6650e08_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c661e327_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _14227_stmts = _1c737c859_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7d64385:;
		if (it != expr_end) {
			jule::Ptr<_1c737c4a2_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1d7d64385;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1d7d68004:;
						{
							jule::Ptr<_1c66465b3_FnDecl> _14309_f = _1c73a3044_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1d7d65650;
							};
							_1c73a7147_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1c739bda6_pushErr(_self_, (*(_14309_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c66465b3_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1d7d64e46:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1c6634903_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1d7d65650;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1c739bda6_pushErr(_self_, _142155_tokens[_14409_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1d7d65650:;
				};
			}
			_iter_next_1d7d64385:;
			++it;
			goto _iter_begin_1d7d64385;
		}
		_iter_end_1d7d64385:;
	};
}



inline jule::Ptr<_1c6650e08_TraitDecl> _1c73a77eb_buildTraitDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1c739bda6_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6650e08_TraitDecl> _14587_t = jule::new_ptr<_1c6650e08_TraitDecl>(_1c6650e08_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c66465b3_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c739bda6_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _14677_bodyTokens = _1c7399a74_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, (*_14587_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1c739bda6_pushErr(_self_, (*(_145336_tokens))[_14667_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1c670383a_IsPub((*_14587_t.alloc)._field_Ident);
	_1c73a74aa_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1c66465b3_FnDecl> _1c73a7b3c_buildBindFn(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1c66465b3_FnDecl> _14857_f = _1c73a3044_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1c664776d_VarDecl> _1c73a7e7d_buildBindVar(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1c664776d_VarDecl> _14957_v = _1c739eb78_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1c739bda6_pushErr(_self_, (*_14957_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1c66506bb_StructDecl> _1c73a82be_buildBindStruct(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1c66506bb_StructDecl> _15087_s = _1c73a6d8e_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7d77a91:;
			if (it != expr_end) {
				jule::Ptr<_1c664ecc5_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1d7d77a91:;
				++it;
				goto _iter_begin_1d7d77a91;
			}
			_iter_end_1d7d77a91:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1c664b420_TypeAliasDecl> _1c73a8610_buildBindTypeAlias(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1c664b420_TypeAliasDecl> _15227_t = _1c739dced_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1c664ca09_UseDecl> _1c73a8951_buildBindUse(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1c739bda6_pushErr(_self_.ptr(), _153033_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1c73a496e_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1c73a8c92_buildBind(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _154131_tokens) {
	jule::Ptr<_1c661e327_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1c739bda6_pushErr(_self_.ptr(), _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7d7db63:;
			{
				return jule::Any(_1c73a7b3c_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1d7d7d7ab:;
			{
				return jule::Any(_1c73a7e7d_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1d7d7d822:;
			{
				return jule::Any(_1c73a82be_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d7d7d888:;
			{
				return jule::Any(_1c73a8610_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1d7d7ca41:;
			{
				_1c739bda6_pushErr(_self_, _15427_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d7d7d745:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66465b3_FnDecl> _1c73a90d3_getMethod(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1c661e327_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1c739bda6_pushErr(_self_.ptr(), _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1c739bda6_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1c739bda6_pushErr(_self_, _15677_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c73a3044_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1c73a9446_parseImplBody(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6651568_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c661e327_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _15957_stmts = _1c737c859_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7d86ab1:;
		if (it != expr_end) {
			jule::Ptr<_1c737c4a2_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1c661e327_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1d7d87ab2:;
						{
							_1c739cb54_pushDirective(_self_.ptr(), _1c739c89b_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1d7d86ab1;
						}
					}
					_match_end_1d7d87d04:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1d7d8907a:;
						{
							jule::Ptr<_1c664776d_VarDecl> _16079_v = _1c739eb78_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1c664776d_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1d7d88cb1:;
						{
							jule::Ptr<_1c66465b3_FnDecl> _16149_f = _1c73a90d3_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1c73a7147_checkMethodReceiver(_self_, &(_16149_f));
								_1c73a9d81_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1c66465b3_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1d7d87e58:;
						{
							_1c739bda6_pushErr(_self_, _15988_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1d7d86ab1;
						}
					}
					_match_end_1d7d88453:;
				};
			}
			_iter_next_1d7d86ab1:;
			++it;
			goto _iter_begin_1d7d86ab1;
		}
		_iter_end_1d7d86ab1:;
	};
}



inline jule::Ptr<_1c6651568_Impl> _1c73a9787_buildImpl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _162730_tokens) {
	jule::Ptr<_1c661e327_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1c739bda6_pushErr(_self_.ptr(), _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1c6634903_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1c739bda6_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6651568_Impl> _16457_ipl = jule::new_ptr<_1c6651568_Impl>(_1c6651568_Impl{._field_End=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c66465b3_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c664776d_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1d7d95cce;
		};
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1d7d95cce:;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _16837_bodyTokens = _1c7399a74_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1c739b702_stop(_self_);
		_1c739bda6_pushErr(_self_, _16287_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1c739bda6_pushErr(_self_, _162730_tokens[_16347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1c73a9446_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1c73a9ac8_buildNodeData(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _169835_tokens) {
	jule::Ptr<_1c661e327_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7d9ae9e:;
			{
				jule::Ptr<_1c66465b3_FnDecl> _17038_f = _1c73a3044_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1d7d9b686:;
			{
				return jule::Any(_1c739eb78_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1d7d9b6ec:;
			{
				return jule::Any(_1c739dced_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1d7d9aab4:;
			{
				return _1c73a63bb_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1d7d9ab2a:;
			{
				return jule::Any(_1c73a6d8e_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1d7d9ab91:;
			{
				return jule::Any(_1c73a77eb_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1d7d9ac07:;
			{
				return jule::Any(_1c73a9787_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1d7d9ac7e:;
			{
				return _1c73a8c92_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1d7d9a7b7:;
			{
				_1c739bda6_pushErr(_self_.ptr(), _16997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7d9aa4d:;
	};
}



inline void _1c73a9d81_applyFnMeta(_1c739b3c2_parser* _self_, jule::Ptr<_1c66465b3_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1c73aa139_applyMeta(_1c739b3c2_parser* _self_, _1c6633902_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1d7da299a:;
			{
				jule::Ptr<_1c664776d_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c664776d_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1d7da2703:;
			{
				jule::Ptr<_1c66465b3_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c66465b3_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1c73a9d81_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1d7da2a44:;
			{
				jule::Ptr<_1c66506bb_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c66506bb_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1d7da2912:;
	};
}



inline void _1c73aa3e2_pushUseDecl(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c664ca09_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c664ca09_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1c739bda6_pushErr(_self_, (*((*(_176133_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1c739c219_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c73aa733_pushMetaNodes(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1d7da9111:;
			{
				;
				jule::Ptr<_1c664ca09_UseDecl> _17738_decl = _1c73a496e_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1c73aa3e2_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1d7da9188:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1c664ca09_UseDecl> _17789_decl = _1c73a8951_buildBindUse(_self_, (*(_176935_tokens)));;
					_1c73aa3e2_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1d7da91ee:;
			{
				_1c739cb54_pushDirective(_self_.ptr(), _1c739c89b_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1d7da9001:;
	};
	return false;;
}



inline _1c6633902_Node _1c73aaa74_parseNode(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _178931_st) {
	_1c6633902_Node _17907_node = _1c6633902_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1c73aa733_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1c73a9ac8_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1c73aa139_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c739bda6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1c73aad2c_appendNode(jule::Ptr<_1c739b3c2_parser> _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1c6633902_Node _18177_node = _1c73aaa74_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1c739b988_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1c6633902_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1c73ab305_removeRange(_1c739b3c2_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c661e327_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1c739a57a_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1c661e327_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1d7db43b3;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1d7db43b3;
		}
	_iter_next_1d7db43b3:;
	}
	_iter_end_1d7db43b3:;;
}



inline void _1c73ab723_pushWrongOrderCloseErr(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token>* _183539_t, jule::Slice<jule::Ptr<_1c661e327_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1d7db67c2:;
			{
				_1c739bda6_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1d7db6849:;
			{
				_1c739bda6_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1d7db68b0:;
			{
				_1c739bda6_pushErr(_self_, (*(_183539_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1d7db66b2:;
	};
}



inline void _1c73abbeb_pushRangeClose(_1c739b3c2_parser* _self_, jule::Ptr<_1c661e327_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c661e327_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1d7db98c4:;
				{
					_1c739bda6_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1d7db994b:;
				{
					_1c739bda6_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1d7db99b2:;
				{
					_1c739bda6_pushErr(_self_, _184630_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1d7db9808:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1c73ab723_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1c73ab305_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1c73abea4_checkRanges(_1c739b3c2_parser* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7dbcc90:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1d7dbdb3c:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7dbdbc5:;
						{
							_1c73abbeb_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1d7dbdc3b:;
						{
							_1c73abbeb_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1d7dbdca2:;
						{
							_1c73abbeb_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1d7dbda71:;
				};
			}
			_iter_next_1d7dbcc90:;
			++it;
			_18677_i++;
			goto _iter_begin_1d7dbcc90;
		}
		_iter_end_1d7dbcc90:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7dbcd6c:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1c661e327_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7dc1b62:;
						{
							_1c739bda6_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1d7dc1bc8:;
						{
							_1c739bda6_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1d7dc1c3e:;
						{
							_1c739bda6_pushErr(_self_, _18834_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1d7dc18cb:;
				};
			}
			_iter_next_1d7dbcd6c:;
			++it;
			goto _iter_begin_1d7dbcd6c;
		}
		_iter_end_1d7dbcd6c:;
	};
}



inline void _1c73ac25c_parse(jule::Ptr<_1c739b3c2_parser> _self_, jule::Ptr<_1c6624aad_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1c6632945_AST>(_1c6632945_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1c664ca09_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1c6633902_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1c738a7ac_exprBuilder>(_1c738a7ac_exprBuilder{._field_p=_self_});
	_1c73abea4_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _19087_stmts = _1c737c859_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1c737c4a2_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1d7dc5a56;
			};
			if ((!(_20807153e_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1d7dc5a56;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6633d20_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c739c89b_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1d7dc5a56:;
	}
	_iter_end_1d7dc5a56:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1c739b988_stopped(_self_)))); (_19117_i)++) {
		{
			jule::Ptr<_1c737c4a2_stmt> _19308_stmt = _19087_stmts[_19117_i];;
			_1c73aad2c_appendNode(_self_, &((*(_19308_stmt))._field_tokens));
		}
	_iter_next_1d7dc8a59:;
	}
	_iter_end_1d7dc8a59:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c739bda6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1c73adabb_pushErr(_1c73ad4e4_typeBuilder* _self_, jule::Ptr<_1c661e327_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1c739bda6_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1c73ade2e_pushSuggestion(_1c73ad4e4_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1c739c219_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73ae1b5_buildNamespace(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c6634903_TypeDecl> _557_t = jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1c66356a1_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1c66356a1_NamespaceTypeDecl>(_1c66356a1_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_Kind=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1c73adabb_pushErr(_self_, _628_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					_1c73ade2e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c661e327_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1d7dce444;
			};
			(_607_n)++;
		}
	_iter_next_1d7dce444:;
	}
	_iter_end_1d7dce444:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1c73ae968_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type94);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _1c73ae44b_buildGenerics(_1c73ad4e4_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _937_parts = _1c73ae6d2_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1c73adabb_pushErr(_self_, _883_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6634903_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7dd6b88:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1c6634903_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1c73adabb_pushErr(_self_, _10015_part[_1018_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1c6634903_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1d7dd6b88:;
			++it;
			goto _iter_begin_1d7dd6b88;
		}
		_iter_end_1d7dd6b88:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c73ae6d2_identGenerics(_1c73ad4e4_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1d7ddae23:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1d7ddb253:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1d7ddae9a:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1d7dda0ed;
			};
		}
	_iter_next_1d7dda0ed:;
	}
	_iter_end_1d7dda0ed:;;
	jule::Slice<jule::Ptr<_1c661e327_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1287_parts;
	jule::Slice<_20806e73a_Log> _12814_errors;
	({
		__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c739a2e4_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73ae968_buildIdent(_1c73ad4e4_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1c73ae1b5_buildNamespace(_self_);;
	};
	jule::Ptr<_1c661e327_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c663500d_IdentTypeDecl> _1417_it = jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6634903_TypeDecl> _1477_itd = jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type78)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1c73ae44b_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1c73adabb_pushErr(_self_, _1407_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c73adabb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1477_itd;;
	};
	jule::Ptr<_1c66352c7_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1c66352c7_SubIdentTypeDecl>(_1c66352c7_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1c6634903_TypeDecl> _1667_ident = _1c73ae968_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1d7de6dc9:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1c663500d_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1d7de12d0:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1c66352c7_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1d7de6d52:;
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73aebee_buildCppLink(_1c73ad4e4_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1c73adabb_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c6634903_TypeDecl> _1857_t = _1c73ae968_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1c663500d_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73aee85_buildFn(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c66465b3_FnDecl> _1927_f = _1c73a2a8d_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6646959_IsAnon(_1927_f.ptr())))) {
		_1c73adabb_pushErr(_self_, (*(_1927_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b021b_buildPtr(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, _2067_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1c663642c_PtrTypeDecl>(_1c663642c_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1c6634903_TypeDecl> _2237_elem = _1c73b1272_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1c663642c_PtrTypeDecl>(_1c663642c_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b04a2_buildSptr(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, _2377_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6634903_TypeDecl> _2447_elem = _1c73b1272_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1c663599d_SptrTypeDecl>(_1c663599d_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0738_buildSlc(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c6634903_TypeDecl> _2607_elem = _1c73b1272_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1c6635d33_SlcTypeDecl>(_1c6635d33_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b09be_buildArr(_1c73ad4e4_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c661e327_Token>> _2737_exprTokens = _1c7399a74_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1c6634903_TypeDecl> _2797_elem = _1c73b1272_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c6636bbe_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1c6636bbe_ArrTypeDecl>(_1c6636bbe_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1c6638c37_Expr>(nullptr)});;
	jule::Ptr<_1c661e327_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1c739c55a_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0c55_buildMap(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c661e327_Token>> _3107_keyTokens = _1c7399a74_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1c73adabb_pushErr(_self_, _3027_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1c663741c_MapTypeDecl> _3197_mapt = jule::new_ptr<_1c663741c_MapTypeDecl>(_1c663741c_MapTypeDecl{._field_Key=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1c6634903_TypeDecl>(nullptr)});;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1c6634903_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1c73adabb_pushErr(_self_, _3107_keyTokens[_3207_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1c6634903_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_assign_result = _1c739d9ac_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b0edb_buildEnumerable(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1c73adabb_pushErr(_self_, _3417_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1c73b0738_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1c73b09be_buildArr(_self_);;
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73b1272_step(_1c73ad4e4_typeBuilder* _self_) {
	jule::Ptr<_1c661e327_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1d7e175c0:;
			{
				return _1c73ae968_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1d7e179aa:;
			{
				return _1c73aebee_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7e17a21:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1c6634903_TypeDecl> _3669_f = _1c73aee85_buildFn(_self_);;
					if ((_3669_f != nullptr)) {
						(*((*_3669_f.alloc)._field_Kind.cast_ptr<_1c66465b3_FnDecl>(&__jule_any_type14)))._field_Unsafety=true;
					};
					return _3669_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d7e17a87:;
			{
				return _1c73aee85_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d7e17aed:;
			{
				return _1c73b021b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d7e17b75:;
			{
				return _1c73b04a2_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1d7e17bec:;
			{
				return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1c663599d_SptrTypeDecl>(_1c663599d_SptrTypeDecl{._field_Elem=_1c73b04a2_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1d7e17c74:;
			{
				return _1c73b0edb_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1d7e17ceb:;
			{
				return _1c73b0c55_buildMap(_self_);;
			}
		}
		_match_end_1d7e17647:;
	};
	((*((*(_self_))._field_i)))++;
	_1c73adabb_pushErr(_self_, _3563_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool _1c73b1508_build(_1c73ad4e4_typeBuilder* _self_) {
	__jule_tuple_x_1c6634903_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c6634903_TypeDecl> _3977_root = _1c73b1272_step(_self_);;
	if ((_3977_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1c73acc63_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3977_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1c6a8601e_CompileInfo_eq(_1c6a8601e_CompileInfo *_self_, _1c6a8601e_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_AtomicRC == _self_->_field_AtomicRC) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1c6a87a7b_pushErr(_1c6a874e8_directiveEval* _self_, jule::Ptr<_1c661e327_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_20806e73a_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_20806eb9c_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1c6a87e77_splitOperans(_1c6a874e8_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c661e327_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1c661e327_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7e41de1:;
					{
						(_367_rangeN)++;
						goto _iter_next_1d7e41462;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7e42221:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1d7e41e68:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1d7e41462;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1d7e41462:;
	}
	_iter_end_1d7e41462:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1c6a87a7b_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1c6a882b8_evalDirectiveIdent(_1c6a874e8_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e44cd4:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1d7e44cd4:;
			++it;
			goto _iter_begin_1d7e44cd4;
		}
		_iter_end_1d7e44cd4:;
	};
	return false;;
}



inline jule::Bool _1c6a88609_evalDirectivePart(_1c6a874e8_directiveEval* _self_, jule::Slice<jule::Ptr<_1c661e327_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1c6a87a7b_pushErr(_self_, _7837_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1c6a882b8_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1c6a88890_eval(_1c6a874e8_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1c6a87a7b_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1047_logicalOrParts = _1c6a87e77_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e4a801:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c661e327_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> _1118_logicalAndParts = _1c6a87e77_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7e4c32a:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c661e327_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1c661e327_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c661e327_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1c6a87a7b_pushErr(_self_, _1175_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1c6a88609_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1d7e4c32a:;
						++it;
						goto _iter_begin_1d7e4c32a;
					}
					_iter_end_1d7e4c32a:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1d7e4a801:;
			++it;
			goto _iter_begin_1d7e4a801;
		}
		_iter_end_1d7e4a801:;
	};
	return _1027_result;;
}







inline jule::Ptr<_1c73b24d7_JuleImporter> static__1c73b2916_New(_1c6a8601e_CompileInfo _5816_info) {
	jule::Ptr<_1c73b24d7_JuleImporter> _597_imp = jule::new_ptr<_1c73b24d7_JuleImporter>(_1c73b24d7_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _208821eed_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1c6a8689e_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _1c73b2b9c_AllPackages(_1c73b24d7_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1c73b30dc_SetModPath(_1c73b24d7_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1c73b3373_GetModPath(_1c73b24d7_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1c73b36b4_ModById(_1c73b24d7_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c73b3a05_GetImport(_1c73b24d7_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e537a4:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1d7e537a4:;
			++it;
			goto _iter_begin_1d7e537a4;
		}
		_iter_end_1d7e537a4:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log _1c73b3e01_ImportPackage(_1c73b24d7_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod) {
	__jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_238ad88a0_DirEntry>> _977_dirents = ({
		auto except = static__208775bee_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_20806e73a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c73b1eed_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _9629_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>(nullptr);});
	});;
	if (_9640_updateMod) {
		jule::Str _1024_newMod = _1c6702c24_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_20806e73a_Log> _1059_errs = _1c6702edd_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c6632945_AST>> _1127_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6632945_AST>>::alloc(0LL, _977_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6632945_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e559b5:;
		if (it != expr_end) {
			jule::Ptr<_238ad88a0_DirEntry> _11310_dirent = *it;
			{
				if ((_238adc376_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_20876951c_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1d7e559b5;
				};
				jule::Str _1194__path = _2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9629_path; (*it++) = (*_11310_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1c6624aad_File> _1208_file = _1c6625e88_NewFileSet(_1194__path);;
				_1c662500e_Fill(_1208_file.ptr(), _1c73b1be0_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_20806e73a_Log> _1228_errors = _1c663246c_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1c6c9de3a_FileInfo> _1278_finfo = _1c6ca1c0c_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c6a6a8c7_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1d7e559b5;
				};
				jule::Bool _1374_r;
				jule::Slice<_20806e73a_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c73b45d8_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1d7e559b5;
				};
				{ jule::Slice<jule::Ptr<_1c6632945_AST>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1d7e559b5:;
			++it;
			goto _iter_begin_1d7e559b5;
		}
		_iter_end_1d7e559b5:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c73b41a9_Imported(_1c73b24d7_JuleImporter* _self_, jule::Ptr<_1c66d63cd_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e57ae9:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1d7e57ae9:;
			++it;
			goto _iter_begin_1d7e57ae9;
		}
		_iter_end_1d7e57ae9:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d7e6022d:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1d7e5e87b;
					};
				}
				_iter_next_1d7e6022d:;
				++it;
				_1628_i++;
				goto _iter_begin_1d7e6022d;
			}
			_iter_end_1d7e6022d:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1d7e5e87b:;
	};
	{ jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_20806e73a_Log _1c73b45d8_isPassBuildDirectives(_1c73b24d7_JuleImporter* _self_, jule::Ptr<_1c6632945_AST>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_20806e73a_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e57aa5:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _18015_td = *it;
			{
				if (((*((*(_18015_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1d7e57aa5;
				};
				_1c6a874e8_directiveEval _1848_de = _1c6a874e8_directiveEval{._field_logs=jule::Slice<_20806e73a_Log>(nullptr), ._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1c6a88890_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1d7e57aa5:;
			++it;
			goto _iter_begin_1d7e57aa5;
		}
		_iter_end_1d7e57aa5:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1c73b8cc4_ExprInspector> static__1c73b916a_New(void) {
	return jule::new_ptr<_1c73b8cc4_ExprInspector>(_1c73b8cc4_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1c73b9423_args(_1c73b8cc4_ExprInspector* _self_, jule::Slice<jule::Any> _5624_args) {
	{
		auto expr = &(_5624_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7eae755:;
		if (it != expr_end) {
			jule::Any _5715_arg = *it;
			{
				_1c73b96cb_inspect(_self_, &(_5715_arg));
			}
			_iter_next_1d7eae755:;
			++it;
			goto _iter_begin_1d7eae755;
		}
		_iter_end_1d7eae755:;
	};
}



inline void _1c73b96cb_inspect(_1c73b8cc4_ExprInspector* _self_, jule::Any* _6228_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6228_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6228_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d7eb0b74:;
			{
				jule::Ptr<_1c665ca19_BinaryExprModel> _708_b = (*(_6228_m)).cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114);;
				_1c73b96cb_inspect(_self_, &((*((*(_708_b))._field_Left))._field_Model));
				_1c73b96cb_inspect(_self_, &((*((*_708_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d7eb0cea:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _748_u = (*(_6228_m)).cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113);;
				_1c73b96cb_inspect(_self_, &((*((*(_748_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d7eb0bda:;
			{
				jule::Ptr<_1c665d7b7_StructLitExprModel> _778_lit = (*(_6228_m)).cast_ptr<_1c665d7b7_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_778_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7eb51a6:;
					if (it != expr_end) {
						jule::Ptr<_1c665d421_StructArgExprModel> _7816_arg = *it;
						{
							_1c73b96cb_inspect(_self_, &((*((*(_7816_arg))._field_Expr))._field_Model));
						}
						_iter_next_1d7eb51a6:;
						++it;
						goto _iter_begin_1d7eb51a6;
					}
					_iter_end_1d7eb51a6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1d7eb10c5:;
			{
				jule::Ptr<_1c665d7b7_StructLitExprModel> _828_lit = (*((*(_6228_m)).cast_ptr<_1c665dab4_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_828_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7eb686c:;
					if (it != expr_end) {
						jule::Ptr<_1c665d421_StructArgExprModel> _8316_arg = *it;
						{
							_1c73b96cb_inspect(_self_, &((*((*(_8316_arg))._field_Expr))._field_Model));
						}
						_iter_next_1d7eb686c:;
						++it;
						goto _iter_begin_1d7eb686c;
					}
					_iter_end_1d7eb686c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d7eb113b:;
			{
				jule::Ptr<_1c665e147_CastingExprModel> _878_c = (*(_6228_m)).cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96);;
				_1c73b96cb_inspect(_self_, &((*((*(_878_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d7eb11a2:;
			{
				jule::Ptr<_1c665e9e9_FnCallExprModel> _908_fc = (*(_6228_m)).cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41);;
				_1c73b96cb_inspect(_self_, &((*(_908_fc))._field_Expr));
				_1c73b9423_args(_self_, (*_908_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1d7eb1218:;
			{
				jule::Ptr<_1c665edc3_SliceExprModel> _948_s = (*(_6228_m)).cast_ptr<_1c665edc3_SliceExprModel>(&__jule_any_type80);;
				_1c73b9423_args(_self_, (*(_948_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1d7eb127e:;
			{
				jule::Ptr<_1c6662d0a_ArrayExprModel> _978_a = (*(_6228_m)).cast_ptr<_1c6662d0a_ArrayExprModel>(&__jule_any_type88);;
				_1c73b9423_args(_self_, (*(_978_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d7eb1306:;
			{
				jule::Ptr<_1c6660379_IndexingExprModel> _1008_i = (*(_6228_m)).cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53);;
				_1c73b96cb_inspect(_self_, &((*((*(_1008_i))._field_Expr))._field_Model));
				_1c73b96cb_inspect(_self_, &((*((*_1008_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1d7eb137d:;
			{
				jule::Ptr<_1c66610d3_MapExprModel> _1048_mp = (*(_6228_m)).cast_ptr<_1c66610d3_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_1048_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7ebcd5c:;
					if (it != expr_end) {
						jule::Ptr<_1c6660c09_KeyValPairExprModel> _10516_entry = *it;
						{
							_1c73b96cb_inspect(_self_, &((*(_10516_entry))._field_Key));
							_1c73b96cb_inspect(_self_, &((*_10516_entry.alloc)._field_Val));
						}
						_iter_next_1d7ebcd5c:;
						++it;
						goto _iter_begin_1d7ebcd5c;
					}
					_iter_end_1d7ebcd5c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d7eb1405:;
			{
				jule::Ptr<_1c6661666_SlicingExprModel> _1108_s = (*(_6228_m)).cast_ptr<_1c6661666_SlicingExprModel>(&__jule_any_type95);;
				_1c73b96cb_inspect(_self_, &((*(_1108_s))._field_Expr));
				_1c73b96cb_inspect(_self_, &((*_1108_s.alloc)._field_Left));
				if (((*_1108_s.alloc)._field_Right != nullptr)) {
					_1c73b96cb_inspect(_self_, &((*_1108_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1d7eb147c:;
			{
				jule::Ptr<_1c6661be9_TraitSubIdentExprModel> _1178_t = (*(_6228_m)).cast_ptr<_1c6661be9_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1c73b96cb_inspect(_self_, &((*(_1178_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d7eb1504:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _1208_s = (*(_6228_m)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				_1c73b96cb_inspect(_self_, &((*((*(_1208_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d7eb157b:;
			{
				jule::Ptr<_1c6663107_TupleExprModel> _1238_t = (*(_6228_m)).cast_ptr<_1c6663107_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_1238_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7ec28bc:;
					if (it != expr_end) {
						jule::Ptr<_1c6788b56_Data> _12416_d = *it;
						{
							_1c73b96cb_inspect(_self_, &((*(_12416_d))._field_Model));
						}
						_iter_next_1d7ec28bc:;
						++it;
						goto _iter_begin_1d7ec28bc;
					}
					_iter_end_1d7ec28bc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1d7eb1603:;
			{
				jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> _1288_b = (*(_6228_m)).cast_ptr<_1c6663c84_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_1288_b))._field_Init != nullptr)) {
					_1c73b96cb_inspect(_self_, &((*_1288_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d7eb167a:;
			{
				jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> _1338_c = (*(_6228_m)).cast_ptr<_1c66634d1_BuiltinOutCallExprModel>(&__jule_any_type34);;
				_1c73b96cb_inspect(_self_, &((*((*(_1338_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d7eb1702:;
			{
				jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> _1368_c = (*(_6228_m)).cast_ptr<_1c66638aa_BuiltinOutlnCallExprModel>(&__jule_any_type35);;
				_1c73b96cb_inspect(_self_, &((*((*(_1368_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d7eb1779:;
			{
				jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _1398_c = (*(_6228_m)).cast_ptr<_1c666415d_BuiltinPanicCallExprModel>(&__jule_any_type36);;
				_1c73b96cb_inspect(_self_, &((*(_1398_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d7eb1801:;
			{
				jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _1428_c = (*(_6228_m)).cast_ptr<_1c6664614_BuiltinAssertCallExprModel>(&__jule_any_type37);;
				_1c73b96cb_inspect(_self_, &((*(_1428_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d7eb1878:;
			{
				jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _1458_c = (*(_6228_m)).cast_ptr<_1c666621a_BuiltinErrorCallExprModel>(&__jule_any_type30);;
				_1c73b96cb_inspect(_self_, &((*((*(_1458_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1d7eb1900:;
			{
				jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _1488_b = (*(_6228_m)).cast_ptr<_1c6664aba_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1488_b))._field_Len != nullptr)) {
					_1c73b96cb_inspect(_self_, &((*_1488_b.alloc)._field_Len));
				};
				if (((*_1488_b.alloc)._field_Cap != nullptr)) {
					_1c73b96cb_inspect(_self_, &((*_1488_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d7eb1977:;
			{
				jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _1568_b = (*(_6228_m)).cast_ptr<_1c6664e94_BuiltinAppendCallExprModel>(&__jule_any_type33);;
				_1c73b96cb_inspect(_self_, &((*(_1568_b))._field_Dest));
				_1c73b96cb_inspect(_self_, &((*_1568_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d7eb19ee:;
			{
				jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _1608_l = (*(_6228_m)).cast_ptr<_1c6665291_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1c73b96cb_inspect(_self_, &((*((*(_1608_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d7eb1a76:;
			{
				jule::Ptr<_1c666558d_BuiltinCapCallExprModel> _1638_c = (*(_6228_m)).cast_ptr<_1c666558d_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1c73b96cb_inspect(_self_, &((*((*(_1638_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d7eb1aed:;
			{
				jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _1668_b = (*(_6228_m)).cast_ptr<_1c6665967_BuiltinDeleteCallExprModel>(&__jule_any_type39);;
				_1c73b96cb_inspect(_self_, &((*((*(_1668_b))._field_Dest))._field_Model));
				if (((*_1668_b.alloc)._field_Key != nullptr)) {
					_1c73b96cb_inspect(_self_, &((*(*(_1668_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d7eb1b75:;
			{
				jule::Ptr<_1c66668be_SizeofExprModel> _1728_s = (*(_6228_m)).cast_ptr<_1c66668be_SizeofExprModel>(&__jule_any_type120);;
				_1c73b96cb_inspect(_self_, &((*(_1728_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d7eb1bec:;
			{
				jule::Ptr<_1c6666aab_AlignofExprModel> _1758_a = (*(_6228_m)).cast_ptr<_1c6666aab_AlignofExprModel>(&__jule_any_type121);;
				_1c73b96cb_inspect(_self_, &((*(_1758_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1d7eb1c74:;
			{
				jule::Ptr<_1c6667529_FreeExprModel> _1788_f = (*(_6228_m)).cast_ptr<_1c6667529_FreeExprModel>(&__jule_any_type40);;
				_1c73b96cb_inspect(_self_, &((*(_1788_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1d7eb1ceb:;
			{
				jule::Ptr<_1c666722c_BackendEmitExprModel> _1818_e = (*(_6228_m)).cast_ptr<_1c666722c_BackendEmitExprModel>(&__jule_any_type32);;
				_1c73b9423_args(_self_, (*(_1818_e))._field_Exprs);
			}
		}
		_match_end_1d7eb0b0d:;
	};
}



inline void _1c73b9a3e_Inspect(_1c73b8cc4_ExprInspector* _self_, jule::Any* _18928_m, jule::Fn<void,jule::Any*> _18942_f) {
	(*(_self_))._field_handler=_18942_f;
	_1c73b96cb_inspect(_self_, _18928_m);
}












inline jule::Bool _1c75091de_specialCaseDefines_eq(_1c75091de_specialCaseDefines *_self_, _1c75091de_specialCaseDefines _other_) {
	return 
		(_self_->_field_runtime_Map == _other_._field_runtime_Map) &&
		(_self_->_field_runtime_mapIterator == _self_->_field_runtime_mapIterator);
}

inline jule::Bool _1c7509552_isAllMethodsLive(_1c75091de_specialCaseDefines* _self_, jule::Ptr<_1c6655803_Struct> _3028_s) {
	return ((_3028_s == (*(_self_))._field_runtime_Map) || (_3028_s == (*(_self_))._field_runtime_mapIterator));;
}











inline jule::Ptr<_1c750a0ad_ObjectDeadCode> static__1c750a630_new(jule::Ptr<_1c73b4d7a_IR>* _5021_ir) {
	return jule::new_ptr<_1c750a0ad_ObjectDeadCode>(_1c750a0ad_ObjectDeadCode{._field_live=_1c7509b07_liveTable{._field_vars=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1c666d4ec_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1c665865d_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1c667de9c_Trait>>(nullptr)}, ._field_ir=(*(_5021_ir)), ._field_scd=_1c75091de_specialCaseDefines{._field_runtime_Map=jule::Ptr<_1c6655803_Struct>(nullptr), ._field_runtime_mapIterator=jule::Ptr<_1c6655803_Struct>(nullptr)}});;
}



inline jule::Bool _1d8028291_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1c665865d_StructIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1d8029e0d:;
			{
				_5711_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1d8029ccb:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8029d42:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1d8029d42:;
			++it;
			_687_i++;
			goto _iter_begin_1d8029d42;
		}
		_iter_end_1d8029d42:;
	};
	return false;;
}

inline jule::Bool _1d8030188_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c666d4ec_FnIns>* _5627_t) {
	jule::Slice<jule::Ptr<_1c666d4ec_FnIns>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1d8031c4a:;
			{
				_5711_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1d8031b7e:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8031be5:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1d8031be5:;
			++it;
			_687_i++;
			goto _iter_begin_1d8031be5;
		}
		_iter_end_1d8031be5:;
	};
	return false;;
}

inline jule::Bool _1d8056cb4_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c667de9c_Trait>* _5627_t) {
	jule::Slice<jule::Ptr<_1c667de9c_Trait>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1d8058997:;
			{
				_5711_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1d80587ee:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8059a64:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1d8059a64:;
			++it;
			_687_i++;
			goto _iter_begin_1d8059a64;
		}
		_iter_end_1d8059a64:;
	};
	return false;;
}

inline jule::Bool _1d8061ede_isLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c672acb3_Var>* _5627_t) {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _5711_live = nullptr;;
	{
		
{
			_case_begin_1d8063881:;
			{
				_5711_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1d80639d5:;
	};
	{
		auto expr = &(_5711_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d806451e:;
		if (it != expr_end) {
			jule::I64 _687_i = it - expr->begin();
			{
				if ((_5711_live[_687_i] == (*(_5627_t)))) {
					return true;;
				};
			}
			_iter_next_1d806451e:;
			++it;
			_687_i++;
			goto _iter_begin_1d806451e;
		}
		_iter_end_1d806451e:;
	};
	return false;;
}



inline void _1d8028b98_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns> _7632_t) {
	{
		
{
			_case_begin_1d802c2a6:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c665865d_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1d802b00d:;
	};
}

inline void _1d8030595_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c666d4ec_FnIns> _7632_t) {
	{
		
{
			_case_begin_1d8034764:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666d4ec_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1d8033b5e:;
	};
}

inline void _1d80576bb_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c667de9c_Trait> _7632_t) {
	{
		
{
			_case_begin_1d805ab31:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c667de9c_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1d80593d2:;
	};
}

inline void _1d8062396_pushLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c672acb3_Var> _7632_t) {
	{
		
{
			_case_begin_1d8066114:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7632_t; __jule_collection; }));
			}
		}
		_match_end_1d8064b5c:;
	};
}



inline void _1c750ae9e_pushStructAsLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c665865d_StructIns>* _8938_s) {
	if (_1d8028291_isLive(_self_, _8938_s)) {
		return;;
	};
	_1d8028b98_pushLive(_self_, (*(_8938_s)));
	_1c750b257_setReferencesAsLive(_self_, &((*((*(_8938_s))))._field_Refers));
	jule::Bool _953_allLive = _1c7509552_isAllMethodsLive(&(*_self_.alloc)._field_scd, (*((*(_8938_s))))._field_Decl);;
	{
		auto expr = &((*((*(_8938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d802d72a:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _9615_m = *it;
			{
				{
					auto expr = &((*(_9615_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d802e176:;
					if (it != expr_end) {
						jule::Ptr<_1c666d4ec_FnIns> _9716_ins = *it;
						{
							if (_1d8030188_isLive(_self_, &(_9716_ins))) {
								goto _iter_next_1d802e176;
							};
							if (_953_allLive) {
								_1d8030595_pushLive(_self_, _9716_ins);
								_1c750b257_setReferencesAsLive(_self_, &((*(_9716_ins))._field_Refers));
								goto _iter_next_1d802e176;
							};
							if (_1c73bb865_IsTraitMethod(_8938_s, &(_9716_ins))) {
								_1d8030595_pushLive(_self_, _9716_ins);
								_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Eq)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Gt)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_GtEq)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Lt)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_LtEq)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shl)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Shr)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Add)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Sub)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Div)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mul)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Mod)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAnd)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOr)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXor)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Neg)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_Pos)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitNot)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_AddAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_SubAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_DivAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_MulAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ModAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShlAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_ShrAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitOrAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitAndAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_9716_ins == (*((*(_8938_s))))._field_Operators._field_BitXorAssign)) {
									_1d8030595_pushLive(_self_, _9716_ins);
									_1c750b257_setReferencesAsLive(_self_, &((*_9716_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1c666a51b_Fn> _1359_dispose = _1c6659708_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
							if (((_1359_dispose != nullptr) && static__1c672c3ad_Dispose(_1359_dispose))) {
								jule::Ptr<_1c666d4ec_FnIns> _13710_fins = (*_1359_dispose.alloc)._field_Instances[0LL];;
								_1d8030595_pushLive(_self_, _13710_fins);
								_1c750b257_setReferencesAsLive(_self_, &((*(_13710_fins))._field_Refers));
							};
							jule::Ptr<_1c666a51b_Fn> _1429__str = _1c6659708_FindMethod((*(_8938_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1429__str != nullptr) && static__1c672c677_Str(_1429__str))) {
								jule::Ptr<_1c666d4ec_FnIns> _14410_fins = (*(_1429__str))._field_Instances[0LL];;
								_1d8030595_pushLive(_self_, _14410_fins);
								_1c750b257_setReferencesAsLive(_self_, &((*(_14410_fins))._field_Refers));
							};
						}
						_iter_next_1d802e176:;
						++it;
						goto _iter_begin_1d802e176;
					}
					_iter_end_1d802e176:;
				};
			}
			_iter_next_1d802d72a:;
			++it;
			goto _iter_begin_1d802d72a;
		}
		_iter_end_1d802d72a:;
	};
}



inline void _1c750b257_setReferencesAsLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c6671687_ReferenceStack>* _15241_rs) {
	if (((*(_15241_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _1567_i = 0LL;;
	for (; (_1567_i < _1c6671da2_Len((*(_15241_rs)).ptr())); (_1567_i)++) {
		{
			jule::Any _1588_ref = _1c66721e3_At((*(_15241_rs)).ptr(), _1567_i);;
			{
				auto &_match_expr{ _1588_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1d80559a5:;
					{
						jule::Ptr<_1c667de9c_Trait> _1619_t = _1588_ref.unsafe_cast_ptr<_1c667de9c_Trait>();;
						if (_1d8056cb4_isLive(_self_, &(_1619_t))) {
							goto _iter_next_1d8054b80;
						};
						_1d80576bb_pushLive(_self_, _1619_t);
						{
							auto expr = &((*(_1619_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1d80566cb:;
							if (it != expr_end) {
								jule::Ptr<_1c666a51b_Fn> _16617_ins = *it;
								{
									{
										auto expr = &((*(_16617_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1d805a735:;
										if (it != expr_end) {
											jule::Ptr<_1c666d4ec_FnIns> _16718_mins = *it;
											{
												if (_1d8030188_isLive(_self_, &(_16718_mins))) {
													goto _iter_next_1d805a735;
												};
												_1d8030595_pushLive(_self_, _16718_mins);
												_1c750b257_setReferencesAsLive(_self_, &((*(_16718_mins))._field_Refers));
											}
											_iter_next_1d805a735:;
											++it;
											goto _iter_begin_1d805a735;
										}
										_iter_end_1d805a735:;
									};
								}
								_iter_next_1d80566cb:;
								++it;
								goto _iter_begin_1d80566cb;
							}
							_iter_end_1d80566cb:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1d80557da:;
					{
						jule::Ptr<_1c666d4ec_FnIns> _1769_f = _1588_ref.unsafe_cast_ptr<_1c666d4ec_FnIns>();;
						if (_1d8030188_isLive(_self_, &(_1769_f))) {
							goto _match_end_1d8055862;
						};
						if ((((*(_1769_f))._field_Owner != nullptr) && (!((*((*_1769_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1d8028291_isLive(_self_, &((*_1769_f.alloc)._field_Owner))))) {
								_1d8028b98_pushLive(_self_, (*_1769_f.alloc)._field_Owner);
								_1c750b257_setReferencesAsLive(_self_, &((*(*(_1769_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1d8030595_pushLive(_self_, _1769_f);
						_1c750b257_setReferencesAsLive(_self_, &((*_1769_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1d8055a1b:;
					{
						jule::Ptr<_1c672acb3_Var> _1899_v = _1588_ref.unsafe_cast_ptr<_1c672acb3_Var>();;
						if (_1d8061ede_isLive(_self_, &(_1899_v))) {
							goto _match_end_1d8055862;
						};
						_1d8062396_pushLive(_self_, _1899_v);
						_1c750b257_setReferencesAsLive(_self_, &((*(_1899_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1d8055a82:;
					{
						jule::Ptr<_1c665865d_StructIns> _1969_s = _1588_ref.unsafe_cast_ptr<_1c665865d_StructIns>();;
						_1c750ae9e_pushStructAsLive(_self_, &(_1969_s));
					}
				}
				_match_end_1d8055862:;
			};
		}
	_iter_next_1d8054b80:;
	}
	_iter_end_1d8054b80:;;
}



inline void _1c750b510_inits(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _20227_pkg) {
	{
		auto expr = &((*((*(_20227_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8054d17:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _20315_file = *it;
			{
				{
					auto expr = &((*(_20315_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8068556:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _20416_f = *it;
						{
							if ((*(_20416_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c666d4ec_FnIns> _20610_ins = (*(_20416_f))._field_Instances[0LL];;
								if ((!(_1d8030188_isLive(_self_, &(_20610_ins))))) {
									_1d8030595_pushLive(_self_, _20610_ins);
								};
								_1c750b257_setReferencesAsLive(_self_, &((*(_20610_ins))._field_Refers));
							};
						}
						_iter_next_1d8068556:;
						++it;
						goto _iter_begin_1d8068556;
					}
					_iter_end_1d8068556:;
				};
			}
			_iter_next_1d8054d17:;
			++it;
			goto _iter_begin_1d8054d17;
		}
		_iter_end_1d8054d17:;
	};
}



inline void _1c750b7b8_collectLivePackage(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _21640_pkg) {
	_1c750b510_inits(_self_, _21640_pkg);
	_1c73b7a3c_IterFiles(_21640_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1d806b34a, jule::Ptr<__jule_anon_1d806b34a_ctx>::make(__jule_anon_1d806b34a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d806b34a_ctx_handler));
	if (_208829b60_Test) {
		if ((((*((*(_21640_pkg))))._field_Files.len() > 0LL) && _1c73bbbd9_IsStdPackage((*((*((*((*(_21640_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1c6655803_Struct> _2469_s = _1c66da4c0_FindStruct((*(_21640_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1c665865d_StructIns> _2479_ins = (*(_2469_s))._field_Instances[0LL];;
			_1c750ae9e_pushStructAsLive(_self_, &(_2479_ins));
			{
				auto expr = &((*(_2479_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d807287e:;
				if (it != expr_end) {
					jule::Ptr<_1c666a51b_Fn> _24917_m = *it;
					{
						{
							auto expr = &((*(_24917_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1d80733eb:;
							if (it != expr_end) {
								jule::Ptr<_1c666d4ec_FnIns> _25018_mins = *it;
								{
									if (_1d8030188_isLive(_self_, &(_25018_mins))) {
										goto _iter_next_1d80733eb;
									};
									_1d8030595_pushLive(_self_, _25018_mins);
									_1c750b257_setReferencesAsLive(_self_, &((*(_25018_mins))._field_Refers));
								}
								_iter_next_1d80733eb:;
								++it;
								goto _iter_begin_1d80733eb;
							}
							_iter_end_1d80733eb:;
						};
					}
					_iter_next_1d807287e:;
					++it;
					goto _iter_begin_1d807287e;
				}
				_iter_end_1d807287e:;
			};
		};
		{
			auto expr = &((*((*(_21640_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d806e3d6:;
			if (it != expr_end) {
				jule::Ptr<_1c678348b_SymbolTable> _25916_file = *it;
				{
					{
						auto expr = &((*(_25916_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d8075ab3:;
						if (it != expr_end) {
							jule::Ptr<_1c666a51b_Fn> _26017_f = *it;
							{
								if (_1c73bd0a3_HasDirective(&((*(_26017_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1c666d4ec_FnIns> _26211_ins = (*_26017_f.alloc)._field_Instances[0LL];;
									if ((!(_1d8030188_isLive(_self_, &(_26211_ins))))) {
										_1d8030595_pushLive(_self_, _26211_ins);
									};
									_1c750b257_setReferencesAsLive(_self_, &((*(_26211_ins))._field_Refers));
								};
							}
							_iter_next_1d8075ab3:;
							++it;
							goto _iter_begin_1d8075ab3;
						}
						_iter_end_1d8075ab3:;
					};
				}
				_iter_next_1d806e3d6:;
				++it;
				goto _iter_begin_1d806e3d6;
			}
			_iter_end_1d806e3d6:;
		};
	};
}



inline void _1c750b9b6_collectLive(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d80767c8:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _27415_used = *it;
			{
				if ((!((*(_27415_used))._field_Binded))) {
					_1c750b7b8_collectLivePackage(_self_, &((*_27415_used.alloc)._field_Package));
				};
			}
			_iter_next_1d80767c8:;
			++it;
			goto _iter_begin_1d80767c8;
		}
		_iter_end_1d80767c8:;
	};
	_1c750b7b8_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1c666a51b_Fn> _2827_main = _1c66da8bb_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2827_main != nullptr)) {
		jule::Ptr<_1c666d4ec_FnIns> _2848_ins = (*_2827_main.alloc)._field_Instances[0LL];;
		if ((!(_1d8030188_isLive(_self_, &(_2848_ins))))) {
			_1d8030595_pushLive(_self_, _2848_ins);
		};
		_1c750b257_setReferencesAsLive(_self_, &((*(_2848_ins))._field_Refers));
	};
}



inline void _1c750bc6e_removeDeadGlobals(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _29239_vars) {
	jule::I64 _2937_i = 0LL;;
	while ((_2937_i < (*(_29239_vars)).len())) {
		{
			jule::Ptr<_1c672acb3_Var> _2954_v = (*(_29239_vars))[_2937_i];;
			if (_1d8061ede_isLive(_self_, &(_2954_v))) {
				(_2937_i)++;
				goto _iter_next_1d807c4e3;
			};
			(*(_29239_vars))=jule::append((*(_29239_vars)).slice(0LL, _2937_i),(*(_29239_vars)).slice((_2937_i + 1LL)));
		}
	_iter_next_1d807c4e3:;
	}
	_iter_end_1d807c4e3:;;
}



inline void _1c750c027_removeDeadFns(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _30435_funcs) {
	jule::I64 _3057_i = 0LL;;
	while ((_3057_i < (*(_30435_funcs)).len())) {
		{
			jule::Ptr<_1c666a51b_Fn> _3078_f = (*(_30435_funcs))[_3057_i];;
			jule::I64 _3088_j = 0LL;;
			while ((_3088_j < (*(_3078_f))._field_Instances.len())) {
				{
					jule::Ptr<_1c666d4ec_FnIns> _3105_ins = (*(_3078_f))._field_Instances[_3088_j];;
					if (_1d8030188_isLive(_self_, &(_3105_ins))) {
						(_3088_j)++;
						goto _iter_next_1d807ed97;
					};
					(*_3078_f.alloc)._field_Instances=jule::append((*_3078_f.alloc)._field_Instances.slice(0LL, _3088_j),(*_3078_f.alloc)._field_Instances.slice((_3088_j + 1LL)));
				}
			_iter_next_1d807ed97:;
			}
			_iter_end_1d807ed97:;;
			if (((*_3078_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_30435_funcs))=jule::append((*(_30435_funcs)).slice(0LL, _3057_i),(*(_30435_funcs)).slice((_3057_i + 1LL)));
				goto _iter_next_1d807ddb8;
			};
			(_3057_i)++;
		}
	_iter_next_1d807ddb8:;
	}
	_iter_end_1d807ddb8:;;
}



inline void _1c750c2d0_removeDeadStructs(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _32539_structs) {
	jule::I64 _3267_i = 0LL;;
	while ((_3267_i < (*(_32539_structs)).len())) {
		{
			jule::Ptr<_1c6655803_Struct> _3288_s = (*(_32539_structs))[_3267_i];;
			jule::I64 _3298_j = 0LL;;
			while ((_3298_j < (*(_3288_s))._field_Instances.len())) {
				{
					jule::Ptr<_1c665865d_StructIns> _3319_ins = (*(_3288_s))._field_Instances[_3298_j];;
					_1c750c027_removeDeadFns(_self_, &((*(_3319_ins))._field_Methods));
					if ((((*_3319_ins.alloc)._field_Methods.len() != 0LL) || _1d8028291_isLive(_self_, &(_3319_ins)))) {
						(_3298_j)++;
						goto _iter_next_1d8083a49;
					};
					(*_3288_s.alloc)._field_Instances=jule::append((*_3288_s.alloc)._field_Instances.slice(0LL, _3298_j),(*_3288_s.alloc)._field_Instances.slice((_3298_j + 1LL)));
				}
			_iter_next_1d8083a49:;
			}
			_iter_end_1d8083a49:;;
			if (((*_3288_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_32539_structs))=jule::append((*(_32539_structs)).slice(0LL, _3267_i),(*(_32539_structs)).slice((_3267_i + 1LL)));
				goto _iter_next_1d8082c02;
			};
			(_3267_i)++;
		}
	_iter_next_1d8082c02:;
	}
	_iter_end_1d8082c02:;;
}



inline void _1c750c588_removeDeadTraits(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c667de9c_Trait>>* _34738_traits) {
	jule::I64 _3487_i = 0LL;;
	while ((_3487_i < (*(_34738_traits)).len())) {
		{
			jule::Ptr<_1c667de9c_Trait> _3508_t = (*(_34738_traits))[_3487_i];;
			if ((!(_1d8056cb4_isLive(_self_, &(_3508_t))))) {
				(*(_34738_traits))=jule::append((*(_34738_traits)).slice(0LL, _3487_i),(*(_34738_traits)).slice((_3487_i + 1LL)));
				goto _iter_next_1d8087410;
			};
			jule::I64 _3558_j = 0LL;;
			while ((_3558_j < (*(_3508_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1c6655803_Struct> _3575_s = (*(_3508_t))._field_Implemented[_3558_j];;
					if (((*(_3575_s))._field_Instances.len() > 0LL)) {
						(_3558_j)++;
						goto _iter_next_1d8087d5b;
					};
					(*_3508_t.alloc)._field_Implemented=jule::append((*_3508_t.alloc)._field_Implemented.slice(0LL, _3558_j),(*_3508_t.alloc)._field_Implemented.slice((_3558_j + 1LL)));
				}
			_iter_next_1d8087d5b:;
			}
			_iter_end_1d8087d5b:;;
			(_3487_i)++;
		}
	_iter_next_1d8087410:;
	}
	_iter_end_1d8087410:;;
}



inline void _1c750c841_removeDeadsFile(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c678348b_SymbolTable>* _36837_file) {
	_1c750c027_removeDeadFns(_self_, &((*((*(_36837_file))))._field_Funcs));
	_1c750c2d0_removeDeadStructs(_self_, &((*((*(_36837_file))))._field_Structs));
	_1c750c588_removeDeadTraits(_self_, &((*((*(_36837_file))))._field_Traits));
	_1c750bc6e_removeDeadGlobals(_self_, &((*((*(_36837_file))))._field_Vars));
}



inline void _1c750cae9_removeDeadsPackage(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_, jule::Ptr<_1c66d9304_Package>* _37540_pkg) {
	{
		auto expr = &((*((*(_37540_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d808c921:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _37615_file = *it;
			{
				_1c750c841_removeDeadsFile(_self_, &(_37615_file));
			}
			_iter_next_1d808c921:;
			++it;
			goto _iter_begin_1d808c921;
		}
		_iter_end_1d808c921:;
	};
}



inline void _1c750cce7_removeDeads(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d808d1b3:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _38215_used = *it;
			{
				if ((!((*(_38215_used))._field_Binded))) {
					_1c750cae9_removeDeadsPackage(_self_, &((*_38215_used.alloc)._field_Package));
				};
			}
			_iter_next_1d808d1b3:;
			++it;
			goto _iter_begin_1d808d1b3;
		}
		_iter_end_1d808d1b3:;
	};
	_1c750cae9_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1c750cee5_collectSpecialCaseDefines(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_) {
	(*(_self_))._field_scd._field_runtime_Map=_1c69d21bd_RuntimeFindStruct(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));
	(*_self_.alloc)._field_scd._field_runtime_mapIterator=_1c69d21bd_RuntimeFindStruct(&((*(*(_self_))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));
}



inline void _1c750d1e3_elimanate(jule::Ptr<_1c750a0ad_ObjectDeadCode> _self_) {
	_1c750cee5_collectSpecialCaseDefines(_self_);
	_1c750b9b6_collectLive(_self_);
	_1c750cce7_removeDeads(_self_);
}








inline jule::Bool _1c750e1d3_scopeDeadCode_eq(_1c750e1d3_scopeDeadCode *_self_, _1c750e1d3_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1c750e700_optimizeChild(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _3935_s) {
	jule::Ptr<_1c750e1d3_scopeDeadCode> _407_sdc = jule::new_ptr<_1c750e1d3_scopeDeadCode>(_1c750e1d3_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c751211a_optimizeStmts(_407_sdc);
	};
}



inline void _1c750e9a8_optimizeBodyChildExceptional(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _4950_s) {
	jule::Ptr<_1c750e1d3_scopeDeadCode> _507_sdc = jule::new_ptr<_1c750e1d3_scopeDeadCode>(_1c750e1d3_scopeDeadCode{._field_parent=jule::Ptr<_1c750e1d3_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1c751211a_optimizeStmts(_507_sdc);
	};
}



inline void _1c750ec61_optimizeBodyChild(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b35b9_Scope>* _5939_s) {
	jule::Ptr<_1c750e1d3_scopeDeadCode> _607_sdc = jule::new_ptr<_1c750e1d3_scopeDeadCode>(_1c750e1d3_scopeDeadCode{._field_parent=jule::Ptr<_1c750e1d3_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c751211a_optimizeStmts(_607_sdc);
	};
}



inline void _1c7510019_optimizeExprModel(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1c751387a_exprDeadCode _693_edc = static__1c7513c43_new(&(_self_));;
	_1c7513eeb_optimize(&_693_edc, _6839_model);
}



inline void _1c7510217_eliminateFollowed(_1c750e1d3_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1c750e1d3_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1d80a0549:;
	}
	_iter_end_1d80a0549:;;
}



inline void _1c75104c0_pushGoto(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b6776_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1d80a387c:;
	}
	_iter_end_1d80a387c:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1c7510778_pushLabel(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b6116_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1d80a5a7c;
			};
			(_1007_i)++;
		}
	_iter_next_1d80a5a7c:;
	}
	_iter_end_1d80a5a7c:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b6116_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1c7510a31_optimizeRangeIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b5401_RangeIter> _11238_it) {
	_1c7510019_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1c750ec61_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1c7510cd9_optimizeWhileIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b49a5_WhileIter> _11738_it) {
	_1c7510019_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1c7511e1c_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1c750ec61_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1c7511092_optimizeInfIter(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b44ee_InfIter> _12536_it) {
	_1c750ec61_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1c751134a_optimizeConditional(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b4202_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d80ac842:;
		if (it != expr_end) {
			jule::Ptr<_1c66b39d7_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1c7510019_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1c750ec61_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1d80ac842:;
			++it;
			goto _iter_begin_1d80ac842;
		}
		_iter_end_1d80ac842:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1c750e700_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1c750ec61_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c7511603_optimizeMatch(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b7ce9_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d80b0dc8:;
		if (it != expr_end) {
			jule::Ptr<_1c66b8822_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d80b1857:;
					if (it != expr_end) {
						jule::Ptr<_1c6788b56_Data> _14916_expr = *it;
						{
							_1c7510019_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1d80b1857:;
						++it;
						goto _iter_begin_1d80b1857;
					}
					_iter_end_1d80b1857:;
				};
				_1c750ec61_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1d80b0dc8:;
			++it;
			goto _iter_begin_1d80b0dc8;
		}
		_iter_end_1d80b0dc8:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1c750e700_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1c750ec61_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c75118ab_optimizeAssign(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b7106_Assign> _16535_assign) {
	_1c7510019_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1c7510019_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1c7511b64_optimizeMultiAssign(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d80b5c24:;
		if (it != expr_end) {
			jule::Ptr<_1c6788b56_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1c7510019_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1d80b5c24:;
			++it;
			goto _iter_begin_1d80b5c24;
		}
		_iter_end_1d80b5c24:;
	};
	_1c7510019_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1c7511e1c_optimizeStmt(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d80b78c4:;
			{
				jule::Ptr<_1c66b35b9_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1c66b35b9_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1c7512417_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1c750e700_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d80b763d:;
			{
				_1c7510a31_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1c66b5401_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d80b794b:;
			{
				_1c7510cd9_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1c66b49a5_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d80b79c3:;
			{
				_1c7511092_optimizeInfIter(_self_, _17933_st.cast_ptr<_1c66b44ee_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1d80b7a4a:;
			{
				_1c751134a_optimizeConditional(_self_, _17933_st.cast_ptr<_1c66b4202_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1d80b7ac2:;
			{
				_1c7511603_optimizeMatch(_self_, _17933_st.cast_ptr<_1c66b7ce9_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1d80b7b49:;
			{
				_1c75118ab_optimizeAssign(_self_, _17933_st.cast_ptr<_1c66b7106_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1d80b7bc1:;
			{
				_1c7511b64_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1c66b75ac_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d80b7c48:;
			{
				jule::Ptr<_1c6788b56_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1c6788b56_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1d80b7770;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type36) {
						_case_begin_1d80bd4ac:;
						{
							_1c7510217_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1d80bdb2d:;
						{
							_1c7510019_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1d80bdab7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1d80b7cc0:;
			{
				_1c7510217_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1d80b7d47:;
			{
				_1c75104c0_pushGoto(_self_, _17933_st.cast_ptr<_1c66b6776_GotoSt>(&__jule_any_type49));
				_1c7510217_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d80b7dbe:;
			{
				_1c7510778_pushLabel(_self_, _17933_st.cast_ptr<_1c66b6116_Label>(&__jule_any_type28));
			}
		}
		_match_end_1d80b7770:;
	};
}



inline void _1c751211a_optimizeStmts(jule::Ptr<_1c750e1d3_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c7511e1c_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1d80c179b:;
	}
	_iter_end_1d80c179b:;;
}








inline jule::Bool _1c751387a_exprDeadCode_eq(_1c751387a_exprDeadCode *_self_, _1c751387a_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1c751387a_exprDeadCode static__1c7513c43_new(jule::Ptr<_1c750e1d3_scopeDeadCode>* _1821_s) {
	return _1c751387a_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1c7513eeb_optimize(_1c751387a_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1c73b8cc4_ExprInspector> _257_inspector = static__1c73b916a_New();;
	_1c73b9a3e_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1d80c43e7, jule::Ptr<__jule_anon_1d80c43e7_ctx>::make(__jule_anon_1d80c43e7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d80c43e7_ctx_handler));
}








inline jule::Bool _1c68b7081_ExceptionalForwardingExprModel_eq(_1c68b7081_ExceptionalForwardingExprModel *_self_, _1c68b7081_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1c68b7416_SwapExprModel_eq(_1c68b7416_SwapExprModel *_self_, _1c68b7416_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1c68b77e0_EmptyCompareExprModel_eq(_1c68b77e0_EmptyCompareExprModel *_self_, _1c68b77e0_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1c68b7b64_RefExprModel_eq(_1c68b7b64_RefExprModel *_self_, _1c68b7b64_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1c68b80d7_StrCompExprModel_eq(_1c68b80d7_StrCompExprModel *_self_, _1c68b80d7_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1c68b866a_MutSlicingExprModel_eq(_1c68b866a_MutSlicingExprModel *_self_, _1c68b866a_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1c68b8967_UnsafeBinaryExprModel_eq(_1c68b8967_UnsafeBinaryExprModel *_self_, _1c68b8967_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1c68b8cec_UnsafeIndexingExprModel_eq(_1c68b8cec_UnsafeIndexingExprModel *_self_, _1c68b8cec_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1c68b91c6_PushToSliceExprModel_eq(_1c68b91c6_PushToSliceExprModel *_self_, _1c68b91c6_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1c68b95a0_AppendToSliceExprModel_eq(_1c68b95a0_AppendToSliceExprModel *_self_, _1c68b95a0_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1c68b9979_StrRuneIter_eq(_1c68b9979_StrRuneIter *_self_, _1c68b9979_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1c68b9c76_UnsafeDerefExprModel_eq(_1c68b9c76_UnsafeDerefExprModel *_self_, _1c68b9c76_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1c68ba073_UnsafeCastingExprModel_eq(_1c68ba073_UnsafeCastingExprModel *_self_, _1c68ba073_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1c68bac55_nilVar_eq(_1c68bac55_nilVar *_self_, _1c68bac55_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1c68bb53b_pushVar(_1c68bb096_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1c73d69c3_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d812ac01:;
		if (it != expr_end) {
			_1c68bac55_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1d812ac01:;
			++it;
			goto _iter_begin_1d812ac01;
		}
		_iter_end_1d812ac01:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d812ba9d:;
		if (it != expr_end) {
			_1c68bac55_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1d812ba9d:;
			++it;
			goto _iter_begin_1d812ba9d;
		}
		_iter_end_1d812ba9d:;
	};
	{ jule::Slice<_1c68bac55_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c68bac55_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _1c68bb87c_removeVar(_1c68bb096_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d812dac2:;
			if (it != expr_end) {
				_1c68bac55_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1d812dac2:;
				++it;
				goto _iter_begin_1d812dac2;
			}
			_iter_end_1d812dac2:;
		};
	};
	return false;;
}



inline jule::Bool _1c68bbbbd_isSafe(_1c68bb096_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d8130266:;
			if (it != expr_end) {
				_1c68bac55_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1d8130266:;
				++it;
				goto _iter_begin_1d8130266;
			}
			_iter_end_1d8130266:;
		};
	};
	return false;;
}








inline jule::Bool _1c73c19be_scopeOptimizer_eq(_1c73c19be_scopeOptimizer *_self_, _1c73c19be_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1c73c19be_scopeOptimizer> static__1c73c2074_new(jule::Ptr<_1c66b35b9_Scope> _5120_scope) {
	jule::Ptr<_1c73c19be_scopeOptimizer> _527_sc = jule::new_ptr<_1c73c19be_scopeOptimizer>(_1c73c19be_scopeOptimizer{._field_parent=jule::Ptr<_1c73c19be_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1c73d17d1_data>(_1c73d17d1_data{._field_boundary=jule::new_ptr<_1c73d31c8_boundary>(_1c73d31c8_boundary{._field_vars=jule::Slice<_1c73d2d87_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1c68bb096_nils>(_1c68bb096_nils{._field_vars=jule::Slice<_1c68bac55_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1c73cdb52_dynamic>(_1c73cdb52_dynamic{._field_vars=jule::Slice<_1c73cd811_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1c73c232c_setCurrentStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1c73c252a_removeCurrent(jule::Ptr<_1c73c19be_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1c73c27b1_isLastStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_) {
	jule::Ptr<_1c73c19be_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1d813c42c:;
	}
	_iter_end_1d813c42c:;;
	return true;;
}



inline jule::Bool _1c73c2a47_isIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_) {
	jule::Ptr<_1c73c19be_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type47 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type43) {
					_case_begin_1d813ec7b:;
					{
						return true;;
					}
				}
				_match_end_1d813ebd2:;
			};
		}
	_iter_next_1d813d85c:;
	}
	_iter_end_1d813d85c:;;
	return false;;
}



inline void _1c73c2d00_optimizeData(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c6788b56_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d8140e47:;
			{
				jule::Ptr<_1c665e9e9_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1c665e9e9_FnCallExprModel>();;
				if (_20882a523_Production) {
					if (((!(_1c666e9b5_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1c73bbbd9_IsStdPackage((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1c73c232c_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1c73c8bd5_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1c73d7e47_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1c73ba842_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1c73c27b1_isLastStmt(_self_)) && (!(_1c73c2a47_isIter(_self_))))) {
					_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b7081_ExceptionalForwardingExprModel>(_1c68b7081_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_1d8140dc0:;
	};
	static__1c73c8bd5_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c73c30a8_optimizeVar(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c672acb3_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c68bc707_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _1c68bc43d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1c68bb53b_pushVar((*((*(_self_))._field_data))._field_nils, _1c68bca48_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1c67bb8d1_TypeKind> _1309_kind = _1c73d0428_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1c73ceee9_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1c73ce0e7_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c73d0769_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1c73c8bd5_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1c73c3361_optimizeConditional(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b4202_Conditional> _14240_c) {
	_1c73d12d6_dataCheckpoint _1437_checkpoint = _1c73d1b88_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8152068:;
		if (it != expr_end) {
			jule::Ptr<_1c66b39d7_If> _14415_elif = *it;
			{
				static__1c73c8bd5_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1c73c5ee0_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1c73d1e41_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1d8152068:;
			++it;
			goto _iter_begin_1d8152068;
		}
		_iter_end_1d8152068:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1c73c5ee0_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1c73d1e41_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1c73d73ec_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8155be8:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1c66b39d7_If> _16315_elif = *it;
			{
				if ((!(_1c73c6573_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1d8155be8;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1c66b3cd4_Else>(_1c66b3cd4_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1d8155be8;
			}
			_iter_next_1d8155be8:;
			++it;
			_1638_i++;
			goto _iter_begin_1d8155be8;
		}
		_iter_end_1d8155be8:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c66b39d7_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1c66b39d7_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1c73c6e8b_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1d81592a1:;
	}
	_iter_end_1d81592a1:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d815aba9:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1c66b39d7_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1d815aba9:;
			++it;
			_2007_j++;
			goto _iter_begin_1d815aba9;
		}
		_iter_end_1d815aba9:;
	};
	if ((_1997_only != -1LL)) {
		_1c73c232c_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1c73c377e_buildDefaultConstantTrueCase(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b8822_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1c66b7ce9_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1d815daad:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1d815da58;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type56) {
					_case_begin_1d81609c2:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type29);
							goto _iter_end_1d815da58;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type29);
					}
				}
				else {
					_case_begin_1d8160a9e:;
					{
						goto _iter_end_1d815da58;
					}
				}
				_match_end_1d816095b:;
			};
		}
	_iter_next_1d815da58:;
	}
	_iter_end_1d815da58:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1c73c3a37_optimizeMatch(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7ce9_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1c73d84a8_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1c73d0769_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1c73d12d6_dataCheckpoint _2477_checkpoint = _1c73d1b88_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d816491b:;
		if (it != expr_end) {
			jule::Ptr<_1c66b8822_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8165312:;
					if (it != expr_end) {
						jule::Ptr<_1c6788b56_Data> _24916_expr = *it;
						{
							static__1c73c8bd5_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1d8165312:;
						++it;
						goto _iter_begin_1d8165312;
					}
					_iter_end_1d8165312:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1c67bb8d1_TypeKind> _2549_kind = _1c73d0428_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1c73ce0e7_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1c73ce438_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1c73c5ee0_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1c73d1e41_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1d816491b:;
			++it;
			goto _iter_begin_1d816491b;
		}
		_iter_end_1d816491b:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1c73c5ee0_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1c73d1e41_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1c73d73ec_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d816bcca:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1c66b8822_Case> _27819_case = *it;
			{
				if ((!(_1c73c6b4a_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1d816bcca;
				};
				_2757_constCase=true;
				_1c73c377e_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1d816bcca;
			}
			_iter_next_1d816bcca:;
			++it;
			_27812_i++;
			goto _iter_begin_1d816bcca;
		}
		_iter_end_1d816bcca:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c66b8822_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1c66b8822_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1c73c7222_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1d816e88d:;
	}
	_iter_end_1d816e88d:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8170b69:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1c66b8822_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1d8170b69:;
			++it;
			_3087_j++;
			goto _iter_begin_1d8170b69;
		}
		_iter_end_1d8170b69:;
	};
	if ((_3077_only != -1LL)) {
		_1c73c232c_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type29));
	};
}



inline void _1c73c3ce0_optimizeRangeIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b5401_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1c73d366d_pushVar((*((*(_self_))._field_data))._field_boundary, _1c73d5609_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1c73c5ee0_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1c73d8200_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1d8175883:;
				{
					jule::Ptr<_1c665e147_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c665e147_CastingExprModel>();;
					jule::Ptr<_1c67c49e9_Prim> _3375_eprim = _1c67be087_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1c67c7eb4_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1d817580b;
					};
					jule::Ptr<_1c67c8ee8_Slc> _3419_s = _1c67c00dd_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1d817580b;
					};
					jule::Ptr<_1c67c49e9_Prim> _3455_prim = _1c67be087_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1d817580b;
					};
					{
						
						if (_1c67c6424_IsU8(_3455_prim.ptr())) {
							_case_begin_1d817926b:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1c67c5e07_IsI32(_3455_prim.ptr())) {
							_case_begin_1d8179447:;
							{
								static__1c73c8bd5_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b9979_StrRuneIter>(_1c68b9979_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_1d817907e:;
					};
				}
			}
			_match_end_1d817580b:;
		};
	};
	static__1c73c8bd5_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c73c4098_optimizeWhileIter(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b49a5_WhileIter> _36938_it) {
	static__1c73c8bd5_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1c73c5c37_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1c73c5ee0_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1c73c43d9_substr(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d8181be1:;
			{
				jule::Ptr<_1c6661666_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1c6661666_SlicingExprModel>();;
				if (_1c68b6459_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b866a_MutSlicingExprModel>(_1c68b866a_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1d8181b69:;
	};
	return false;;
}



inline jule::Bool _1c73c472a_strAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _39530_a) {
	if ((!(_1c73d763e_Str))) {
		return false;;
	};
	jule::Ptr<_1c67c49e9_Prim> _3993_lp = _1c67be087_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1c67c7eb4_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1c73c43d9_substr(_self_, _39530_a);;
}



inline jule::Bool _1c73c4a6b_sliceAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _40632_a) {
	if (((!(_1c73d78d6_Slice)) || (_1c67c00dd_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1c73c43d9_substr(_self_, _40632_a);;
}



inline void _1c73c4d24_optimizePostfix(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b6b50_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1c73d4cac_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1c73c8bd5_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1c73c50cc_optimizeAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b7106_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _1c68b6459_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1c73c252a_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1c73d5076_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1c73d4cac_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1c68bc43d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_1c68bc707_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_1c68bb53b_pushVar((*((*(_self_))._field_data))._field_nils, _1c68bca48_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1c68bc075_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1c67bb8d1_TypeKind> _4458_kind = _1c73d0428_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1c73ceee9_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1c73ce0e7_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c73d0769_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1c73cebdb_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1c73c472a_strAssign(_self_, _42135_assign) || _1c73c4a6b_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1d8193c9c:;
			{
				return;;
			}
		}
		_match_end_1d819594c:;
	};
	static__1c73c8bd5_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1c73c8bd5_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU) || _match_expr == static_cast<jule::U64>(45LLU) || _match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d8199566:;
			{
				if (((!(_1c73d671a_Math)) || (_1c67c060a_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1d81994de;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1d819c7de:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1d819c855:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(45LLU)) {
						_case_begin_1d819c46a:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(46LLU)) {
						_case_begin_1d819c4e2:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else {
						_case_begin_1d819bee7:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:486:5"));;
						}
					}
					_match_end_1d819c327:;
				};
				jule::Ptr<_1c665ca19_BinaryExprModel> _4888_b = jule::new_ptr<_1c665ca19_BinaryExprModel>(_1c665ca19_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4938_model = jule::Any(_4888_b, &__jule_any_type114);;
				static__1c73c8bd5_optimizeData(&(_4938_model), &((*_self_.alloc)._field_data));
				if ((!__jule_any_type114_compare(_4938_model, _4888_b))) {
					(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1c665c51e_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
					(*(_4888_b))._field_Op=jule::new_ptr<_1c661e327_Token>((*(*(_4888_b))._field_Op.alloc));
					(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
					(*(*(_42135_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4938_model;
					return;;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1d81994de:;
	};
	if (_1c73d641d_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1d81a66d8:;
				{
					jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _5139_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1c6664e94_BuiltinAppendCallExprModel>(&__jule_any_type33);;
					if ((!(_1c73cca1e_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5139_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5139_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1d81a9224:;
							{
								_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b91c6_PushToSliceExprModel>(_1c68b91c6_PushToSliceExprModel{._field_Dest=(*_5139_m.alloc)._field_Dest, ._field_Elems=(*(_5139_m))._field_Elements.unsafe_cast_ptr<_1c665edc3_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1d81a8267:;
							{
								_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b95a0_AppendToSliceExprModel>(_1c68b95a0_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5139_m.alloc)._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1d81a8201:;
					};
				}
			}
			_match_end_1d81a6661:;
		};
	};
}



inline jule::Bool _1c73c541d_tryOptimizeSwap(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _53537_assign) {
	if (((((!(_1c73d7b8e_Assign)) || ((*((*(_53537_assign))))._field_Left.len() != 2LL)) || ((*((*(_53537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c6663107_TupleExprModel> _54011_tup;;
	{
		auto &_match_expr{ (*((*(_53537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d81b0e2e:;
			{
				_54011_tup=(*((*(_53537_assign))))._field_Right.unsafe_cast_ptr<_1c6663107_TupleExprModel>();
			}
		}
		_match_end_1d81b0da7:;
	};
	if (((_54011_tup == nullptr) || ((*(_54011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1c68b6459_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model) && _1c68b6459_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) {
		_1c73c252a_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1c68b6459_equalModels((*((*((*(_53537_assign))))._field_Left[0LL]))._field_Model, (*((*(_54011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1c68b6459_equalModels((*((*((*(_53537_assign))))._field_Left[1LL]))._field_Model, (*((*(_54011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1c68b7416_SwapExprModel> _5627_model = jule::new_ptr<_1c68b7416_SwapExprModel>(_1c68b7416_SwapExprModel{._field_Left=(*((*(_53537_assign))))._field_Left[0LL], ._field_Right=(*((*(_53537_assign))))._field_Left[1LL]});;
	static__1c73c8bd5_optimizeData(&((*((*(_5627_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1c73c8bd5_optimizeData(&((*((*_5627_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1c73c232c_setCurrentStmt(_self_, jule::Any(_5627_model, &__jule_any_type127));
	return true;;
}



inline void _1c73c56c6_optimizeMultiAssign(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _57240_assign) {
	if (_1c73c541d_tryOptimizeSwap(_self_, &(_57240_assign))) {
		return;;
	};
	jule::Ptr<_1c6663107_TupleExprModel> _5797_tup = static_cast<jule::Ptr<_1c6663107_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_57240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d81bc3d0:;
			{
				_5797_tup=(*(_57240_assign))._field_Right.unsafe_cast_ptr<_1c6663107_TupleExprModel>();
			}
		}
		_match_end_1d81bc358:;
	};
	{
		auto expr = &((*(_57240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d81ba367:;
		if (it != expr_end) {
			jule::I64 _5848_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _58415_l = *it;
			{
				if ((_58415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1c73d5076_isBoundaryRiskyType((*_58415_l.alloc)._field_Kind)) {
							_1c73d4cac_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_58415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5797_tup != nullptr) && _1c68bc43d_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Model))) {
							if (_1c68bc707_isNilValidType((*_58415_l.alloc)._field_Kind)) {
								;
								_1c68bb53b_pushVar((*((*(_self_))._field_data))._field_nils, _1c68bca48_getNilVar((*_58415_l.alloc)._field_Model), true);
							};
						} else {
							_1c68bc075_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_58415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5797_tup != nullptr))) {
						jule::Ptr<_1c67bb8d1_TypeKind> _60210_kind = _1c73d0428_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5797_tup.alloc)._field_Datas[_5848_i]))._field_Kind, (*((*(_5797_tup))._field_Datas[_5848_i]))._field_Model);;
						if ((_60210_kind != nullptr)) {
							if (_1c73ceee9_isDynamicValidType((*_58415_l.alloc)._field_Kind)) {
								_1c73ce0e7_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c73d0769_getDynamicVar((*_58415_l.alloc)._field_Model), _60210_kind);
							};
						} else {
							_1c73cebdb_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_58415_l.alloc)._field_Model);
						};
					};
					static__1c73c8bd5_optimizeData(&((*_58415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1d81ba367:;
			++it;
			_5848_i++;
			goto _iter_begin_1d81ba367;
		}
		_iter_end_1d81ba367:;
	};
	static__1c73c8bd5_optimizeData(&((*_57240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1c73c597e_optimizeRet(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b93b1_RetSt> _61832_r) {
	static__1c73c8bd5_optimizeData(&((*(_61832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1c73d7e47_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d81c973e:;
			{
				goto _match_end_1d81c97e9;
			}
		}
		else {
			_case_begin_1d81c9860:;
			{
				return;;
			}
		}
		_match_end_1d81c97e9:;
	};
	jule::Ptr<_1c665e9e9_FnCallExprModel> _6327_fc = (*_61832_r.alloc)._field_Expr.cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41);;
	if (((((!((*((*((*(_6327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6327_fc.alloc)._field_Except == nullptr)) || ((*((*_6327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1c73ba842_IsForwarded(&((*_6327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1c73c232c_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1c68b7081_ExceptionalForwardingExprModel>(_1c68b7081_ExceptionalForwardingExprModel{._field_Expr=_6327_fc}), &__jule_any_type122));
}



inline void _1c73c5c37_optimizeStmt(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Any _64233_stmt) {
	{
		auto &_match_expr{ _64233_stmt };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d81ccc81:;
			{
				_1c73c5ee0_optimizeChild(_self_, _64233_stmt.cast_ptr<_1c66b35b9_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d81cca0b:;
			{
				_1c73c2d00_optimizeData(_self_, _64233_stmt.cast_ptr<_1c6788b56_Data>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d81ccd19:;
			{
				_1c73c30a8_optimizeVar(_self_, _64233_stmt.cast_ptr<_1c672acb3_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1d81ccdb3:;
			{
				_1c73c3361_optimizeConditional(_self_, _64233_stmt.cast_ptr<_1c66b4202_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d81cce29:;
			{
				_1c73c3ce0_optimizeRangeIter(_self_, _64233_stmt.cast_ptr<_1c66b5401_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d81cce90:;
			{
				_1c73c4098_optimizeWhileIter(_self_, _64233_stmt.cast_ptr<_1c66b49a5_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d81cd017:;
			{
				_1c73c5ee0_optimizeChild(_self_, (*(_64233_stmt.unsafe_cast_ptr<_1c66b44ee_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1d81cd08e:;
			{
				_1c73c50cc_optimizeAssign(_self_, _64233_stmt.cast_ptr<_1c66b7106_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1d81cd116:;
			{
				_1c73c56c6_optimizeMultiAssign(_self_, _64233_stmt.cast_ptr<_1c66b75ac_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1d81cd18d:;
			{
				_1c73c3a37_optimizeMatch(_self_, _64233_stmt.cast_ptr<_1c66b7ce9_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1d81cd215:;
			{
				_1c73c597e_optimizeRet(_self_, _64233_stmt.cast_ptr<_1c66b93b1_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1d81cd28c:;
			{
				_1c73c4d24_optimizePostfix(_self_, _64233_stmt.cast_ptr<_1c66b6b50_Postfix>(&__jule_any_type50));
			}
		}
		_match_end_1d81ccb2c:;
	};
}



inline void _1c73c5ee0_optimizeChild(jule::Ptr<_1c73c19be_scopeOptimizer> _self_, jule::Ptr<_1c66b35b9_Scope> _67134_child) {
	jule::Ptr<_1c73c19be_scopeOptimizer> _6727_so = static__1c73c2074_new(_67134_child);;
	(*(_6727_so))._field_parent=_self_;
	(*_6727_so.alloc)._field_data=(*(_self_))._field_data;
	_1c73c61dd_optimize(_6727_so);
}



inline void _1c73c61dd_optimize(jule::Ptr<_1c73c19be_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c73c5c37_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1d81d62b7:;
	}
	_iter_end_1d81d62b7:;;
}








inline jule::Bool _1c73c8421_exprOptimizer_eq(_1c73c8421_exprOptimizer *_self_, _1c73c8421_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1c73c88e9_optimize(jule::Any* _3626_model) {
	static__1c73c8bd5_optimizeData(_3626_model, &(_1c73d0dda_emptyData));
}



inline void static__1c73c8bd5_optimizeData(jule::Any* _4030_model, jule::Ptr<_1c73d17d1_data>* _4053_d) {
	if (_1c751456d_exprEnabled) {
		jule::Ptr<_1c73c8421_exprOptimizer> _438_exop = jule::new_ptr<_1c73c8421_exprOptimizer>(_1c73c8421_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1c73b916a_New()});;
		_1c73cc216_do(_438_exop.ptr());
	};
}



inline jule::Bool _1c73c9026_selfCmpCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _5228_m) {
	if ((!(_1c68b6459_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d81e5ccc:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1dd720356_NewBool(true), &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1d81e61d9:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1dd720356_NewBool(false), &__jule_any_type20);
				return true;;
			}
		}
		else {
			_case_begin_1d81e4b99:;
			{
				return false;;
			}
		}
		_match_end_1d81e5c55:;
	};
}



inline jule::Bool _1c73c9367_boolCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1c67c49e9_Prim> _773_lp = _1c67be087_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1c67c7c2d_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d81ea61c:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1d81e97e7:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1d81e8ad2:;
						{
							goto _match_end_1d81ea122;
						}
					}
					else {
						_case_begin_1d81ea188:;
						{
							return false;;
						}
					}
					_match_end_1d81ea122:;
				};
			}
		}
		_match_end_1d81e9781:;
	};
	jule::Ptr<_1dd71e850_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1d81ec267:;
			{
				if (_1dd721775_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1dd722d5e_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1d81ec311:;
			{
				if (_1dd721775_ReadBool(_947_c.ptr())) {
					_1dd722d5e_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type20);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1d81ea3db:;
		}
		_match_end_1d81ec1ce:;
	};
	return false;;
}



inline jule::Bool _1c73c96a8_strCond(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _12923_m) {
	jule::Ptr<_1c67c49e9_Prim> _1303_lp = _1c67be087_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1c67c7eb4_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d8203e61:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1d820313b:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1d8201bb7:;
						{
							goto _match_end_1d8203966;
						}
					}
					else {
						_case_begin_1d82039cc:;
						{
							return false;;
						}
					}
					_match_end_1d8203966:;
				};
			}
		}
		_match_end_1d82030c5:;
	};
	jule::Ptr<_1dd71e850_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1d8203c41:;
			{
				if ((_1dd721a0b_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_1c68b77e0_EmptyCompareExprModel>(_1c68b77e0_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1d82059ac;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_1c68b80d7_StrCompExprModel>(_1c68b80d7_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1d8205a67:;
			{
				if ((_1dd721a0b_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_1c68b77e0_EmptyCompareExprModel>(_1c68b77e0_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1d82059ac;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_1c68b80d7_StrCompExprModel>(_1c68b80d7_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1d82059ac:;
	};
	return true;;
}



inline jule::Bool _1c73c9b5e_tryNeutralElement1(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _18635_m, jule::Ptr<_1dd71e850_Const> _18660_c, jule::Ptr<_1c665c51e_OperandExprModel>* _18672_nc) {
	if (_1dd724107_IsStr(_18660_c.ptr())) {
		if ((!(_1c73d763e_Str))) {
			return false;;
		};
		if (((_1dd721a0b_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1c73d671a_Math)) || (_1dd722545_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d8214bdb:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d8215824:;
			{
				_1dd7227ed_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type20);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d821588a:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1d82156d1:;
	};
	return false;;
}



inline jule::Bool _1c73c9ea0_tryNeutralElement(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d8218ea9:;
			{
				jule::Ptr<_1dd71e850_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1dd71e850_Const>();;
				return _1c73c9b5e_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1d8218e32:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d82194c6:;
			{
				jule::Ptr<_1dd71e850_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1dd71e850_Const>();;
				return _1c73c9b5e_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1d8219460:;
	};
	return false;;
}



inline void _1c73ca258_checkBinaryForBoundary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d821c92a:;
			{
				jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1c6665291_BuiltinLenCallExprModel>();;
				if ((!(_1c73d5340_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1d8220c08:;
							{
								jule::Ptr<_1dd71e850_Const> _26310_c = jule::new_ptr<_1dd71e850_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20))));;
								_1dd7268ce_Sub(_26310_c, (*(static__1dd71ecc3_NewI64(1LL))));
								_1c73d366d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c73d5609_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type20));
							}
						}
						_match_end_1d8220b81:;
					};
					return;;
				};
				_1c73d366d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c73d5609_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1d821c8a3:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d821d09b:;
			{
				jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1c6665291_BuiltinLenCallExprModel>();;
				if ((!(_1c73d5340_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type20) {
							_case_begin_1d8227847:;
							{
								jule::Ptr<_1dd71e850_Const> _28610_c = jule::new_ptr<_1dd71e850_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20))));;
								_1dd7268ce_Sub(_28610_c, (*(static__1dd71ecc3_NewI64(1LL))));
								_1c73d366d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c73d5609_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type20));
							}
						}
						_match_end_1d82277c0:;
					};
					return;;
				};
				_1c73d366d_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c73d5609_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1d821d024:;
	};
}



inline void _1c73ca511_checkBinaryForNil(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _1c68bca48_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_1c68bc707_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1d822d1ee:;
				{
					_1c68bb53b_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1d822d177:;
		};
		return;;
	};
	_3017_var=_1c68bca48_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_1c68bc707_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type20) {
				_case_begin_1d82308d8:;
				{
					_1c68bb53b_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1d8230861:;
		};
		return;;
	};
}



inline void _1c73ca7b9_binary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _32922_m) {
	_1c73ca258_checkBinaryForBoundary(_self_, &(_32922_m));
	_1c73ca511_checkBinaryForNil(_self_, &(_32922_m));
	if (_1c73d73ec_Cond) {
		{
			
			if (_1c73c96a8_strCond(_self_, _32922_m) || _1c73c9367_boolCond(_self_, &(_32922_m)) || _1c73c9026_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1d8232841:;
				{
					return;;
				}
			}
			_match_end_1d823270e:;
		};
	};
	if (_1c73c9ea0_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1c73d671a_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d82337a9:;
			{
				goto _match_end_1d8233a40;
			}
		}
		else {
			_case_begin_1d8233aa6:;
			{
				return;;
			}
		}
		_match_end_1d8233a40:;
	};
	jule::Ptr<_1c67c49e9_Prim> _3623_lp = _1c67be087_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _3663_rp = _1c67be087_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d823637d:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c73cc656_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1c661e327_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1dd71e850_Const> _3789_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
					_1dd722aa6_SetU64(_3789_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d82363e4:;
			{
				jule::Bool _3854_ok;
				jule::U64 _3858_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c73cc656_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3854_ok = __jule_assign_result.__jule_result_arg0;
					_3858_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3854_ok) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1c661e327_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1dd71e850_Const> _3909_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
					_1dd722aa6_SetU64(_3909_c.ptr(), _3858_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d823645a:;
			{
				jule::Ptr<_1dd71e850_Const> _3978_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
				if ((_1dd722545_AsF64(_3978_c.ptr()) == 2LL)) {
					(*_32922_m.alloc)._field_Op=jule::new_ptr<_1c661e327_Token>((*(*(_32922_m))._field_Op.alloc));
					(*(*(_32922_m))._field_Op.alloc)._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1dd7227ed_SetI64(_3978_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d82364c1:;
			{
				jule::I64 _4094_z = _1dd713c51_BitsizeOf((*(_3623_lp))._field_Kind);;
				jule::U64 _4104_s = _1dd7222ae_AsU64((*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20).ptr());;
				if ((_4104_s >= static_cast<jule::U64>(_4094_z))) {
					(*((*(_self_))._field_model))=jule::Any(static__1dd72008c_NewU64(0LLU), &__jule_any_type20);
					return;;
				};
			}
		}
		else {
			_case_begin_1d8235ed7:;
			{
				return;;
			}
		}
		_match_end_1d8236306:;
	};
	jule::Any _4237_model = jule::Any(jule::new_ptr<_1c68b8967_UnsafeBinaryExprModel>(_1c68b8967_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4237_model))))));
}



inline void _1c73caa72_unary(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665cde3_UnaryExprModel> _42721_m) {
	if ((!(_1c73d7034_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_42721_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d824a9d0:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1d824c9e3:;
						{
							jule::Ptr<_1c665cde3_UnaryExprModel> _4359_um = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>();;
							if (((*((*(_4359_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4359_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1d824c96b:;
				};
				if ((!(_1c73d69c3_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1c68bc707_isNilValidType((*(*(_42721_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4495_var = _1c68bca48_getNilVar((*(*(_42721_m))._field_Expr.alloc)._field_Model);;
					if (_1c68bbbbd_isSafe((*((*(_self_))._field_data))._field_nils, _4495_var)) {
						jule::Any _45110_model = jule::Any(jule::new_ptr<_1c68b9c76_UnsafeDerefExprModel>(_1c68b9c76_UnsafeDerefExprModel{._field_Base=_42721_m}), &__jule_any_type131);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_45110_model))))));
						return;;
					};
					_1c68bb53b_pushVar((*((*(_self_))._field_data))._field_nils, _4495_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d824aa46:;
			{
				{
					auto &_match_expr{ (*((*(_42721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1d8255ea2:;
						{
							jule::Ptr<_1c672acb3_Var> _4619_v = (*((*(_42721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
							if ((*(_4619_v))._field_Reference) {
								jule::Any _46310_model = jule::Any(jule::new_ptr<_1c68b7b64_RefExprModel>(_1c68b7b64_RefExprModel{._field_Var=_4619_v}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_46310_model))))));
							};
						}
					}
					_match_end_1d8255e2a:;
				};
			}
		}
		_match_end_1d824a969:;
	};
}



inline void _1c73cad2a_structureLit(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665d7b7_StructLitExprModel> _47028_m) {
	{
		auto expr = &((*(_47028_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82583c2:;
		if (it != expr_end) {
			jule::Ptr<_1c665d421_StructArgExprModel> _47115_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1c73d5076_isBoundaryRiskyType((*((*(_47115_arg))._field_Expr))._field_Kind)) {
						_1c73d4cac_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_47115_arg, &__jule_any_type133));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1c68bc075_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1c73cebdb_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_47115_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1d82583c2:;
			++it;
			goto _iter_begin_1d82583c2;
		}
		_iter_end_1d82583c2:;
	};
}



inline void _1c73cb0d3_casting(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665e147_CastingExprModel> _48623_m) {
	jule::Bool _4873_valid = _1c73ceee9_isDynamicValidType((*(_48623_m))._field_ExprKind);;
	jule::Uintptr _4883_var = _1c73d0769_getDynamicVar((*((*_48623_m.alloc)._field_Expr))._field_Model);;
	if (((_4873_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1c73ce834_isFits((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind))) {
		jule::Any _4908_model = jule::Any(jule::new_ptr<_1c68ba073_UnsafeCastingExprModel>(_1c68ba073_UnsafeCastingExprModel{._field_Base=_48623_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4908_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4873_valid)) {
		_1c73ce0e7_pushVar((*((*(_self_))._field_data))._field_dynamic, _4883_var, (*_48623_m.alloc)._field_Kind);
	};
}



inline void _1c73cb446_args(_1c73c8421_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1c666c474_ParamIns>> _50020_params, jule::Slice<jule::Any>* _50046_args) {
	{
		auto expr = _50046_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82692c3:;
		if (it != expr_end) {
			jule::I64 _5018_i = it - expr->begin();
			jule::Any _50115_arg = *it;
			{
				if ((_5018_i >= _50020_params.len())) {
					goto _iter_next_1d82692c3;
				};
				jule::Ptr<_1c666c474_ParamIns> _5058_p = _50020_params[_5018_i];;
				if (((*((*(_5058_p))._field_Decl))._field_Mutable && (*(*(_5058_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1c73d5076_isBoundaryRiskyType((*_5058_p.alloc)._field_Kind)) {
							_1c73d4cac_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _50115_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1c68bc075_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _50115_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1c73cebdb_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _50115_arg);
					};
				};
			}
			_iter_next_1d82692c3:;
			++it;
			_5018_i++;
			goto _iter_begin_1d82692c3;
		}
		_iter_end_1d82692c3:;
	};
}



inline void _1c73cb6ee_scope(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c66b35b9_Scope>* _52222_s) {
	jule::Ptr<_1c73c19be_scopeOptimizer> _5237_scopt = static__1c73c2074_new((*(_52222_s)));;
	(*(_5237_scopt))._field_data=(*(_self_))._field_data;
	_1c73c61dd_optimize(_5237_scopt);
}



inline void _1c73cb9a7_funcCall(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c665e9e9_FnCallExprModel> _52824_m) {
	_1c73cb446_args(_self_, (*((*(_52824_m))._field_Func))._field_Params, &((*_52824_m.alloc)._field_Args));
	if (((*_52824_m.alloc)._field_Except != nullptr)) {
		_1c73cb6ee_scope(_self_, &((*_52824_m.alloc)._field_Except));
	};
}



inline void _1c73cbc60_indexing(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c6660379_IndexingExprModel> _53524_m) {
	if ((!(_1c73d69c3_Access))) {
		return;;
	};
	jule::Bool _5403_array = (_1c67bed57_Arr((*((*(_53524_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5403_array && _1c6789591_IsConst((*_53524_m.alloc)._field_Index.ptr()))) {
		jule::Any _5438_model = jule::Any(jule::new_ptr<_1c68b8cec_UnsafeIndexingExprModel>(_1c68b8cec_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1c73d5340_isBoundaryValidType((*(*(_53524_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5494_var = _1c73d5609_getBoundaryVar((*(*(_53524_m))._field_Expr.alloc)._field_Model);;
		if (_1c73d3daa_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5519_model = jule::Any(jule::new_ptr<_1c68b8cec_UnsafeIndexingExprModel>(_1c68b8cec_UnsafeIndexingExprModel{._field_Node=_53524_m}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5519_model))))));
			return;;
		};
		_1c73d366d_pushVar((*((*(_self_))._field_data))._field_boundary, _5494_var, (*(*(_53524_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1c73cc018_anonFunc(_1c73c8421_exprOptimizer* _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _55924_m) {
	_1c73cb6ee_scope(_self_, &((*((*(_55924_m))._field_Func))._field_Scope));
}



inline void _1c73cc216_do(_1c73c8421_exprOptimizer* _self_) {
	_1c73b9a3e_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1d827b1c5, jule::Ptr<__jule_anon_1d827b1c5_ctx>::make(__jule_anon_1d827b1c5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d827b1c5_ctx_handler));
}








inline jule::Bool _1c73cd811_dynamicVar_eq(_1c73cd811_dynamicVar *_self_, _1c73cd811_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1c73ce0e7_pushVar(jule::Ptr<_1c73cdb52_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1c67bb8d1_TypeKind> _3242_kind) {
	if (((!(_1c73d84a8_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1c73d0428_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d828a877:;
		if (it != expr_end) {
			_1c73cd811_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1d828a877:;
			++it;
			goto _iter_begin_1d828a877;
		}
		_iter_end_1d828a877:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d828b36c:;
		if (it != expr_end) {
			_1c73cd811_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1c67bb8d1_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1d828b36c:;
			++it;
			goto _iter_begin_1d828b36c;
		}
		_iter_end_1d828b36c:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1c73cd811_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c73cd811_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1c73ce438_removeVar(_1c73cdb52_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d828d55b:;
			if (it != expr_end) {
				_1c73cd811_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1d828d55b:;
				++it;
				goto _iter_begin_1d828d55b;
			}
			_iter_end_1d828d55b:;
		};
	};
	return false;;
}



inline jule::Bool _1c73ce834_isFits(_1c73cdb52_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1c67bb8d1_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d828ee20:;
			if (it != expr_end) {
				_1c73cd811_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1c67bc11d_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1d828ee20:;
				++it;
				goto _iter_begin_1d828ee20;
			}
			_iter_end_1d828ee20:;
		};
	};
	return false;;
}








inline jule::Bool _1c73d17d1_data_eq(_1c73d17d1_data *_self_, _1c73d17d1_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1c73d12d6_dataCheckpoint _1c73d1b88_getCheckpoint(_1c73d17d1_data* _self_) {
	_1c73d12d6_dataCheckpoint _257_c = _1c73d12d6_dataCheckpoint{._field_boundary=_1c73d31c8_boundary{._field_vars=jule::Slice<_1c73d2d87_boundaryVar>(nullptr)}, ._field_nils=_1c68bb096_nils{._field_vars=jule::Slice<_1c68bac55_nilVar>(nullptr)}, ._field_dynamic=_1c73cdb52_dynamic{._field_vars=jule::Slice<_1c73cd811_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1c73d2d87_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c73d2d87_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8291cbd:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1d8291cbd:;
			++it;
			_277_i++;
			goto _iter_begin_1d8291cbd;
		}
		_iter_end_1d8291cbd:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1c68bac55_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c68bac55_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1c73cd811_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c73cd811_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1c73d1e41_loadCheckpoint(_1c73d17d1_data* _self_, _1c73d12d6_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}











inline void _1c73d366d_pushVar(_1c73d31c8_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1c73d69c3_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1c73d4240_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82a6079:;
		if (it != expr_end) {
			_1c73d2d87_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d82a6d6b:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1c73d497c_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1d82a6d6b:;
							++it;
							_349_i++;
							goto _iter_begin_1d82a6d6b;
						}
						_iter_end_1d82a6d6b:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1d82a6079:;
			++it;
			goto _iter_begin_1d82a6079;
		}
		_iter_end_1d82a6079:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82a68e8:;
		if (it != expr_end) {
			_1c73d2d87_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1d82a68e8:;
			++it;
			goto _iter_begin_1d82a68e8;
		}
		_iter_end_1d82a68e8:;
	};
	{ jule::Slice<_1c73d2d87_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c73d2d87_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1c73d3daa_fitsMaxSize(_1c73d31c8_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d82ab788:;
			if (it != expr_end) {
				_1c73d2d87_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1c73d4608_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1d82ab788:;
				++it;
				goto _iter_begin_1d82ab788;
			}
			_iter_end_1d82ab788:;
		};
	};
	return false;;
}








inline jule::Bool _1c751499c_Optimizer_eq(_1c751499c_Optimizer *_self_, _1c751499c_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1c751499c_Optimizer> static__1c7514e53_New(jule::Ptr<_1c73b4d7a_IR>* _2621_ir) {
	return jule::new_ptr<_1c751499c_Optimizer>(_1c751499c_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1c751520b_optimizeGlobal(_1c751499c_Optimizer* _self_, jule::Ptr<_1c672acb3_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1c73c88e9_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c75154b4_optimizeFunction(_1c751499c_Optimizer* _self_, jule::Ptr<_1c666a51b_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82b1804:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1c73c19be_scopeOptimizer> _438_so = static__1c73c2074_new((*(_4215_ins))._field_Scope);;
				_1c73c61dd_optimize(_438_so);
			}
			_iter_next_1d82b1804:;
			++it;
			goto _iter_begin_1d82b1804;
		}
		_iter_end_1d82b1804:;
	};
}



inline void _1c751576c_optimizeStruct(_1c751499c_Optimizer* _self_, jule::Ptr<_1c6655803_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82b2ecb:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d82b38d3:;
					if (it != expr_end) {
						jule::Ptr<_1c6657aad_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1c73c88e9_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1d82b38d3:;
						++it;
						goto _iter_begin_1d82b38d3;
					}
					_iter_end_1d82b38d3:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d82b3d34:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _5816_m = *it;
						{
							_1c75154b4_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1d82b3d34:;
						++it;
						goto _iter_begin_1d82b3d34;
					}
					_iter_end_1d82b3d34:;
				};
			}
			_iter_next_1d82b2ecb:;
			++it;
			goto _iter_begin_1d82b2ecb;
		}
		_iter_end_1d82b2ecb:;
	};
}



inline void _1c7515a25_optimizeGlobals(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82b5176:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d82b5e8a:;
					if (it != expr_end) {
						jule::Ptr<_1c672acb3_Var> _6616_v = *it;
						{
							_1c751520b_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1d82b5e8a:;
						++it;
						goto _iter_begin_1d82b5e8a;
					}
					_iter_end_1d82b5e8a:;
				};
			}
			_iter_next_1d82b5176:;
			++it;
			goto _iter_begin_1d82b5176;
		}
		_iter_end_1d82b5176:;
	};
}



inline void _1c7515ccd_optimizeFunctions(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82b6540:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d82b73a9:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _7416_func = *it;
						{
							_1c75154b4_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1d82b73a9:;
						++it;
						goto _iter_begin_1d82b73a9;
					}
					_iter_end_1d82b73a9:;
				};
			}
			_iter_next_1d82b6540:;
			++it;
			goto _iter_begin_1d82b6540;
		}
		_iter_end_1d82b6540:;
	};
}



inline void _1c7516086_optimizeStructs(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82b795e:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d82b87c8:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _8216_s = *it;
						{
							_1c751576c_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1d82b87c8:;
						++it;
						goto _iter_begin_1d82b87c8;
					}
					_iter_end_1d82b87c8:;
				};
			}
			_iter_next_1d82b795e:;
			++it;
			goto _iter_begin_1d82b795e;
		}
		_iter_end_1d82b795e:;
	};
}



inline void _1c751633e_optimizePackage(_1c751499c_Optimizer* _self_, jule::Ptr<_1c66d9304_Package>* _8836_p) {
	_1c7515a25_optimizeGlobals(_self_, _8836_p);
	_1c7515ccd_optimizeFunctions(_self_, _8836_p);
	_1c7516086_optimizeStructs(_self_, _8836_p);
}



inline void _1c751653c_Optimize(_1c751499c_Optimizer* _self_) {
	_1c75167a1_detectEnabled();
	if (_1c73d6165_Deadcode) {
		_1c750d49b_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c75147b0_scopeEnabled || _1c751456d_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d82ba830:;
			if (it != expr_end) {
				jule::Ptr<_1c66d63cd_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1c751633e_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1d82ba830:;
				++it;
				goto _iter_begin_1d82ba830;
			}
			_iter_end_1d82ba830:;
		};
		_1c751633e_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1c73d6165_Deadcode) {
		_1c75130a5_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1c753ae57_AnsiEscape_eq(_1c753ae57_AnsiEscape *_self_, _1c753ae57_AnsiEscape _other_) { return true; }

inline void static__1c7516c57_Reset(void) {
	jule::out(_1d508560e_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1c7539cd0_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1d508560e_toStr(_1918_escape));
	jule::out(_1d508560e_toStr(_1931_text));
	static__1c7516c57_Reset();
}








inline jule::Bool _1c753c50d_Logger_eq(_1c753c50d_Logger *_self_, _1c753c50d_Logger _other_) { return true; }

inline void static__1c753c7d8_LogFlat(_20806e73a_Log* _1421_l) {
	jule::outln(_1d508560e_toStr((*(_1421_l))._field_Text));
}



inline void static__1c753ca19_LogError(_20806e73a_Log* _1922_l) {
	jule::out(_1d508560e_toStr(jule::Str::lit("\033[31m", 5)));
	jule::out(_1d508560e_toStr(jule::Str::lit("error: ", 7)));
	jule::out(_1d508560e_toStr((*(_1922_l))._field_Text));
	static__1c7516c57_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(_1d508560e_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::out(_1d508560e_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(_1d508560e_toStr(jule::Str::lit(":", 1)));
		jule::out(_1d508560e_toStr(_1dd7115cd_Itoa((*(_1922_l))._field_Row)));
		jule::out(_1d508560e_toStr(jule::Str::lit(":", 1)));
		jule::out(_1d508560e_toStr(_1dd7115cd_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _208770eb3_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_20876ea3e_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(_1d508560e_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1dd7115cd_Itoa((*(_1922_l))._field_Row);;
		jule::out(_1d508560e_toStr(_434_row));
		jule::out(_1d508560e_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1d508560e_toStr(_388_line));
		jule::out(_1d508560e_toStr(jule::Str::lit("\n  ", 3)));
		jule::out(_1d508560e_toStr(_208768cd0_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::out(_1d508560e_toStr(jule::Str::lit(" | ", 3)));
		jule::out(_1d508560e_toStr(_208768cd0_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::out(_1d508560e_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(_1d508560e_toStr(jule::Str::lit("\n  ", 3)));
			jule::out(_1d508560e_toStr(_208768cd0_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::out(_1d508560e_toStr(jule::Str::lit(" | ", 3)));
			static__1c7539cd0_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out(_1d508560e_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::outln(_1d508560e_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1c753cc4a_Log(_20806e73a_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1d82c80bd:;
			{
				static__1c753c7d8_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1d82c8387:;
			{
				static__1c753ca19_LogError(_6417_l);
			}
		}
		_match_end_1d82c8288:;
	};
}



inline void static__1c753ce7b_PrintLogs(jule::Slice<_20806e73a_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82c8453:;
		if (it != expr_end) {
			_20806e73a_Log *_7510_l = it;
			{
				static__1c753cc4a_Log(_7510_l);
			}
			_iter_next_1d82c8453:;
			++it;
			goto _iter_begin_1d82c8453;
		}
		_iter_end_1d82c8453:;
	};
	jule::out(_1d508560e_toStr(jule::Str::lit("=== ", 4)));
	jule::out(_1d508560e_toStr(_1dd7115cd_Itoa((*(_7423_logs)).len())));
	jule::outln(_1d508560e_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1d4c97c8e_AbsTime_eq(_1d4c97c8e_AbsTime *_self_, _1d4c97c8e_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1d4c98465_Time_eq(_1d4c98465_Time *_self_, _1d4c98465_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1d4c98465_Time static__1d4c98850_Unix(jule::U64 _9117_sec) {
	return _1d4c98465_Time{._field_sec=_9117_sec};;
}



inline _1d4c98465_Time static__1d4c98a5e_Now(void) {
	return static__1d4c98850_Unix(_1d4c9a555_unix());;
}



inline _1d4c97c8e_AbsTime _1d4c9a247_Abs(_1d4c98465_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1d4c97200_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1d4c97200_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1d83061a6:;
	}
	_iter_end_1d83061a6:;;
	_1d4c97c8e_AbsTime _1747_t = _1d4c97c8e_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1d4bbe91e_scopeCoder_eq(_1d4bbe91e_scopeCoder *_self_, _1d4bbe91e_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1d4bbe91e_scopeCoder> static__1d4bc0117_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1d4bbe91e_scopeCoder>(_1d4bbe91e_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1d8429906_iterHead(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c73d5d68_Copy && _1d4bc7d45_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d842eea0:;
				{
					jule::Ptr<_1c672acb3_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1d4bd9bc0_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1d842d3cc;
					};
					goto _case_begin_1d842d443;
				}
			}
			else {
				_case_begin_1d842d443:;
				{
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1d4bd9bc0_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1d842d3cc:;
		};
	} else {
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, _8052_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
}



inline void _1d4bc07dd_rangeIndexIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _12936_it) {
	_20759e353_StrBuilder _1307_sb = static__2075a7c41_New(64LL);;
	static__1d4be4658_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _2075a8945_Str(&_1307_sb);;
	_2075a8b43_Clear(&_1307_sb);
	static__1d4be4c30_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _2075a8945_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1d8429906_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1d4cab07c_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d843a41c, jule::Ptr<__jule_anon_1d843a41c_ctx>::make(__jule_anon_1d843a41c_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1d843a41c_ctx_handler));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1c73d5d68_Copy && _1d4bc820d_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1d4cab07c_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1d843de26, jule::Ptr<__jule_anon_1d843de26_ctx>::make(__jule_anon_1d843de26_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1d843de26_ctx_handler));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4bc70db_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, _1353_next);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1d4ca4482_write((*(_self_))._field_oc, _1323_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4944_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bc0a96_rangeHashmapIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter>* _19638_it) {
	_20759e353_StrBuilder _1977_sb = static__2075a7c41_New(64LL);;
	static__1d4be4658_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _2075a8945_Str(&_1977_sb);;
	_2075a8b43_Clear(&_1977_sb);
	static__1d4be4c30_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _2075a8945_Str(&_1977_sb);;
	jule::Ptr<_1c67ca68c_Map> _2047__map = _1c67c0b27_Map((*((*((*(_19638_it))))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1c6655803_Struct> _2057_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1c665865d_StructIns> _2067_ins = _1c73beb98_FindStructGenericInstance(&(_2057_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_2047__map))._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1c666d4ec_FnIns> _2087_f = (*(_1c6659708_FindMethod(_2067_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1c6655803_Struct> _2107_itDecl = _1c69d21bd_RuntimeFindStruct(&((*(*((*(_self_))._field_oc))._field_ir.alloc)._field_Runtime), static_cast<jule::Str>(jule::Str::lit("mapIterator", 11)));;
	jule::Ptr<_1c665865d_StructIns> _2117_iterator = _1c73beb98_FindStructGenericInstance(&(_2107_itDecl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_2047__map.alloc)._field_Key; (*it++) = (*_2047__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1c666d4ec_FnIns> _2127_nextCall = (*(_1c6659708_FindMethod(_2117_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	jule::Str _2167_resultKey = jule::Str::lit("__iterator_result.__jule_result_arg0", 36);;
	jule::Str _2177_resultVal = jule::Str::lit("__iterator_result.__jule_result_arg1", 36);;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4cb6c14_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _2117_iterator);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2087_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_19638_it))))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, _1993_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4cb7e24_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2127_nextCall));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1d4ca4482_write((*(_self_))._field_oc, _2167_resultKey);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1d4cab07c_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d845e4a7, jule::Ptr<__jule_anon_1d845e4a7_ctx>::make(__jule_anon_1d845e4a7_ctx{._self_=_self_,._2167_resultKey=_2167_resultKey}).as<jule::Uintptr>(), __jule_anon_1d845e4a7_ctx_handler));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1d4cab07c_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1d8461a2b, jule::Ptr<__jule_anon_1d8461a2b_ctx>::make(__jule_anon_1d8461a2b_ctx{._self_=_self_,._2177_resultVal=_2177_resultVal}).as<jule::Uintptr>(), __jule_anon_1d8461a2b_ctx_handler));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4bc70db_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, _2023_next);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1d4ca4482_write((*(_self_))._field_oc, _1993_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4944_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bc0d4e_strRuneIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b9979_StrRuneIter> _27932_it) {
	_20759e353_StrBuilder _2807_sb = static__2075a7c41_New(64LL);;
	static__1d4be4658_iterBegin(&(_2807_sb), static_cast<jule::Uintptr>((*(_27932_it))._field_Base));
	jule::Str _2823_begin = _2075a8945_Str(&_2807_sb);;
	_2075a8b43_Clear(&_2807_sb);
	static__1d4be4c30_iterNext(&(_2807_sb), static_cast<jule::Uintptr>((*_27932_it.alloc)._field_Base));
	jule::Str _2853_next = _2075a8945_Str(&_2807_sb);;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	jule::Bool _2917_ref = false;;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c73d5d68_Copy && _1d4bc7d45_isCopyOptimizable(&((*_27932_it.alloc)._field_Expr)))) {
		_2917_ref=true;
		{
			auto &_match_expr{ (*((*(_27932_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d8470c27:;
				{
					jule::Ptr<_1c672acb3_Var> _2975_v = (*((*(_27932_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
					if ((*(_2975_v))._field_Reference) {
						_1d4bd9bc0_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1d846e154;
					};
					goto _case_begin_1d846e1ba;
				}
			}
			else {
				_case_begin_1d846e1ba:;
				{
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1d4bd9bc0_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1d846e154:;
		};
	} else {
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_27932_it.alloc)._field_Expr))._field_Model);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2917_ref) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2917_ref) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*((*_27932_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1d4cab07c_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1d847aa78, jule::Ptr<__jule_anon_1d847aa78_ctx>::make(__jule_anon_1d847aa78_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d847aa78_ctx_handler));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1d4cab07c_varInitExpr((*(_self_))._field_oc, &((*(*(_27932_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4ca4482_write((*(_self_))._field_oc, _2823_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4bc70db_scope(_self_, (*(*(_27932_it))._field_Base.alloc)._field_Scope);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, _2853_next);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*(*(_27932_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_27932_it))._field_Base.alloc)._field_KeyA);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1d4ca4482_write((*(_self_))._field_oc, _2823_begin);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bc1107_ifCase(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b39d7_If> _39127_i) {
	if (((*(_39127_i))._field_Expr != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39127_i.alloc)._field_Expr);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1d4bc70db_scope(_self_, (*_39127_i.alloc)._field_Scope);
}



inline void _1d4bc13b0_conditional(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b4202_Conditional> _40032_c) {
	jule::Bool _4017_writed = false;;
	{
		auto expr = &((*(_40032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84910dd:;
		if (it != expr_end) {
			jule::Ptr<_1c66b39d7_If> _40215_elif = *it;
			{
				if ((_40215_elif == nullptr)) {
					goto _iter_next_1d84910dd;
				};
				if (_4017_writed) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_4017_writed=true;
				_1d4bc1107_ifCase(_self_, _40215_elif);
			}
			_iter_next_1d84910dd:;
			++it;
			goto _iter_begin_1d84910dd;
		}
		_iter_end_1d84910dd:;
	};
	if (((*_40032_c.alloc)._field_Default != nullptr)) {
		if (_4017_writed) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1d4bc70db_scope(_self_, (*(*(_40032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1d4bc1668_infIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b44ee_InfIter> _42028_it) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4bc70db_scope(_self_, (*(_42028_it))._field_Scope);
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4c30_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4944_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_42028_it));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1d4bc1921_whileIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b49a5_WhileIter> _43730_it) {
	if ((((*(_43730_it))._field_Expr != nullptr) && ((*_43730_it.alloc)._field_Next == nullptr))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_43730_it))._field_Expr != nullptr)) {
			_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_43730_it.alloc)._field_Expr);
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_43730_it.alloc)._field_Next != nullptr)) {
			_1d4bc6a7a_st(_self_, (*_43730_it.alloc)._field_Next);
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_43730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4bc70db_scope(_self_, (*_43730_it.alloc)._field_Scope);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4c30_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be4944_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_43730_it));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1d4bc1bc9_rangeIter(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5401_RangeIter> _47630_it) {
	{
		
		if ((_1c67c00dd_Slc((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d84a69d8:;
			{
				_1d4bc07dd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1c67bed57_Arr((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d84a6686:;
			{
				_1d4bc07dd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		else if ((_1c67c0b27_Map((*((*(_47630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d84a66ec:;
			{
				_1d4bc0a96_rangeHashmapIter(_self_, &(_47630_it));
			}
		}
		else {
			_case_begin_1d84a6620:;
			{
				_1d4bc07dd_rangeIndexIter(_self_, &(_47630_it));
			}
		}
		_match_end_1d84a6510:;
	};
}



inline void _1d4bc1e82_cont(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5786_ContSt> _48921_c) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d4be4c30_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_48921_c))._field_It);
}



inline void _1d4bc223a_label(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6116_Label> _49422_l) {
	static__1d4be501b_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_49422_l));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1d4bc24e3_gotoSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6776_GotoSt> _49923_gt) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d4be501b_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_49923_gt))._field_Label));
}



inline void _1d4bc279b_postfix(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b6b50_Postfix> _50428_p) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_50428_p))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1d4ca4482_write((*(_self_))._field_oc, (*_50428_p.alloc)._field_Op);
}



inline void _1d4bc2a54_assignLeft(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Any* _51132_model) {
	{
		auto &_match_expr{ (*(_51132_model)) };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d84b0a03:;
			{
				jule::Ptr<_1c6660379_IndexingExprModel> _5148_iem = (*(_51132_model)).cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53);;
				jule::Ptr<_1c67ca68c_Map> _5154__map = _1c67c0b27_Map((*((*(_5148_iem))._field_Expr))._field_Kind.ptr());;
				if ((_5154__map == nullptr)) {
					goto _match_end_1d84b098c;
				};
				jule::Ptr<_1c6655803_Struct> _5218_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1c665865d_StructIns> _5228_ins = _1c73beb98_FindStructGenericInstance(&(_5218_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5154__map))._field_Key; (*it++) = (*(_5154__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1c666d4ec_FnIns> _5248_f = (*(_1c6659708_FindMethod(_5228_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_5248_f));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
				_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_5148_iem))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_5148_iem.alloc)._field_Index))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1d84b098c:;
	};
	_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_51132_model)));
}



inline void _1d4bc2d0c_shl(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _53724_a) {
	_1d4bc2a54_assignLeft(_self_, &((*((*(_53724_a))._field_Left))._field_Model));
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1d4bce115_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_53724_a.alloc)._field_Left), &((*_53724_a.alloc)._field_Right));
}



inline void _1d4bc30b5_shr(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _54324_a) {
	_1d4bc2a54_assignLeft(_self_, &((*((*(_54324_a))._field_Left))._field_Model));
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1d4bce478_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54324_a.alloc)._field_Left), &((*_54324_a.alloc)._field_Right));
}



inline void _1d4bc336d_divByZeroAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _54936_a) {
	_1d4bc2a54_assignLeft(_self_, &((*((*(_54936_a))._field_Left))._field_Model));
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1d4bcd301_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_54936_a.alloc)._field_Op), &((*_54936_a.alloc)._field_Left), &((*_54936_a.alloc)._field_Right));
}



inline void _1d4bc3846_operatorOverloadingAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _55547_s, jule::Ptr<_1c665c51e_OperandExprModel>* _55573_l, jule::Ptr<_1c665c51e_OperandExprModel>* _5568_r, jule::U64 _55636_op) {
	;
	jule::Ptr<_1c666d4ec_FnIns> _5587_f = _1c73be390_FindOperator(_55547_s, _55636_op, false);;
	if ((_5587_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:560:4"));;
	};
	static__1d4be30e6_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5587_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1d4bc2a54_assignLeft(_self_, &((*((*(_55573_l))))._field_Model));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5568_r))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bc3aee_assign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7106_Assign> _57027_a) {
	{
		auto &_match_expr{ (*((*(_57027_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d84c45b6:;
			{
				if ((_20882a2d1_Safety && (_1c67c060a_Struct((*((*(_57027_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1d4bc336d_divByZeroAssign(_self_, _57027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d84c463d:;
			{
				if ((_1c67c060a_Struct((*((*(_57027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1d4bc2d0c_shl(_self_, _57027_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d84c46a4:;
			{
				if ((_1c67c060a_Struct((*((*(_57027_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1d4bc30b5_shr(_self_, _57027_a);
					return;;
				};
			}
		}
		_match_end_1d84c44ea:;
	};
	if ((((*((*(_57027_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c67c060a_Struct((*((*_57027_a.alloc)._field_Left))._field_Kind.ptr()) != nullptr))) {
		jule::Ptr<_1c665865d_StructIns> _5938_s = _1c67c060a_Struct((*((*(_57027_a))._field_Left))._field_Kind);;
		_1d4bc3846_operatorOverloadingAssign(_self_, &(_5938_s), &((*_57027_a.alloc)._field_Left), &((*_57027_a.alloc)._field_Right), (*(*(_57027_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1d4bc2a54_assignLeft(_self_, &((*(*(_57027_a))._field_Left.alloc)._field_Model));
	_1d4ca4482_write((*_self_.alloc)._field_oc, (*(*(_57027_a))._field_Op.alloc)._field_Kind);
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_57027_a.alloc)._field_Right))._field_Model);
}



inline void _1d4bc3da7_mapLookupAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _60337_a) {
	jule::Ptr<_1c6660379_IndexingExprModel> _6047_iem = (*((*(_60337_a))))._field_Right.cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53);;
	jule::Ptr<_1c67ca68c_Map> _6057__map = _1c67c0b27_Map((*((*(_6047_iem))._field_Expr))._field_Kind.ptr());;
	jule::Ptr<_1c6655803_Struct> _6077_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1c665865d_StructIns> _6087_ins = _1c73beb98_FindStructGenericInstance(&(_6077_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_6057__map))._field_Key; (*it++) = (*_6057__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1c666d4ec_FnIns> _6107_f = (*(_1c6659708_FindMethod(_6087_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_6107_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1d4bc2a54_assignLeft(_self_, &((*(*(_6047_iem))._field_Expr.alloc)._field_Model));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_6047_iem.alloc)._field_Index))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_60337_a))))._field_Left[0LL] != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60337_a))))._field_Left[0LL]))._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_60337_a))))._field_Left[1LL] != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_60337_a))))._field_Left[1LL]))._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bc4160_multiAssignTup(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _63536_a) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1c6663107_TupleExprModel> _6397_tup = (*((*(_63536_a))))._field_Right.cast_ptr<_1c6663107_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6397_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84da0d2:;
		if (it != expr_end) {
			jule::I64 _6418_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _64115_r = *it;
			{
				_1d4ca4d34_indent((*(_self_))._field_oc);
				jule::Ptr<_1c6788b56_Data> _6438_l = (*((*(_63536_a))))._field_Left[_6418_i];;
				if ((_6438_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6438_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1d84dd15c:;
							{
								jule::Ptr<_1c672acb3_Var> _64710_v = (*(_6438_l))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
								if (((*(_64710_v))._field_Reference && (!(_1c672b1c0_IsInitialized(_64710_v))))) {
									static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _64710_v);
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_64115_r))._field_Model);
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_63536_a))))._field_Left[_6418_i]=nullptr;
									goto _iter_next_1d84da0d2;
								};
							}
						}
						_match_end_1d84dd0e6:;
					};
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6438_l.alloc)._field_Kind);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1d4be25bd_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1d4bbe1b0_assignArgName, static_cast<jule::Uintptr>(_6418_i));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_64115_r.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d84da0d2:;
			++it;
			_6418_i++;
			goto _iter_begin_1d84da0d2;
		}
		_iter_end_1d84da0d2:;
	};
	{
		auto expr = &((*((*(_63536_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84e4790:;
		if (it != expr_end) {
			jule::I64 _6688_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _66815_l = *it;
			{
				if ((_66815_l == nullptr)) {
					goto _iter_next_1d84e4790;
				};
				_1d4ca4d34_indent((*(_self_))._field_oc);
				_1d4bc2a54_assignLeft(_self_, &((*(_66815_l))._field_Model));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1d4be25bd_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1d4bbe1b0_assignArgName, static_cast<jule::Uintptr>(_6688_i));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d84e4790:;
			++it;
			_6688_i++;
			goto _iter_begin_1d84e4790;
		}
		_iter_end_1d84e4790:;
	};
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d4bc4418_multiAssignFn(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign>* _68435_a) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	jule::Ptr<_1c665e9e9_FnCallExprModel> _6897_f = (*((*(_68435_a))))._field_Right.cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41);;
	_1d4cbd90d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6897_f))._field_Func))._field_Result));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_68435_a))))._field_Right);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1c67c9adc_Tuple> _6957_tup = _1c67c0dad_Tup((*(*(_6897_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_68435_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d84ed436:;
		if (it != expr_end) {
			jule::I64 _6968_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _69615_l = *it;
			{
				if ((_69615_l == nullptr)) {
					goto _iter_next_1d84ed436;
				};
				;
				_1d4ca4d34_indent((*(_self_))._field_oc);
				_1d4bc2a54_assignLeft(_self_, &((*(_69615_l))._field_Model));
				{
					
					if (_1c67bc11d_Equal((*(_6957_tup))._field_Types[_6968_i], (*(_69615_l))._field_Kind)) {
						_case_begin_1d850861c:;
						{
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_6968_i));
						}
					}
					else if (_1c73bae19_IsAny(&((*(_69615_l))._field_Kind))) {
						_case_begin_1d850552b:;
						{
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_6968_i));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1d4ca5b48_pushAnyType((*(_self_))._field_oc, (*(_6957_tup))._field_Types[_6968_i])));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1d84ee723:;
						{
							if ((_1c67c0891_Trait((*(_6957_tup))._field_Types[_6968_i].ptr()) != nullptr)) {
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1c667de9c_Trait> _71710_t1 = _1c67c0891_Trait((*(_69615_l))._field_Kind.ptr());;
								jule::Ptr<_1c667de9c_Trait> _71810_t2 = _1c67c0891_Trait((*(_6957_tup))._field_Types[_6968_i].ptr());;
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_6968_i));
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1d4ca651c_pushAndWriteMaskMapper((*(_self_))._field_oc, _71710_t1, _71810_t2);
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1d8500625;
							};
							jule::Ptr<_1c667de9c_Trait> _7265_t = _1c67c0891_Trait((*(_69615_l))._field_Kind);;
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_6968_i));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1d4be33d2_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7265_t);
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1c73bde61_FindTraitTypeOffset(_7265_t, (*(_6957_tup))._field_Types[_6968_i])));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1d8500625:;
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d84ed436:;
			++it;
			_6968_i++;
			goto _iter_begin_1d84ed436;
		}
		_iter_end_1d84ed436:;
	};
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d4bc46c1_multiAssign(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b75ac_MultiAssign> _74332_a) {
	{
		auto expr = &((*(_74332_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8513ddb:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _74615_d = *it;
			{
				_1d4cab07c_varInitExpr((*(_self_))._field_oc, &(_74615_d), nullptr);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1d4ca4d34_indent((*(_self_))._field_oc);
			}
			_iter_next_1d8513ddb:;
			++it;
			goto _iter_begin_1d8513ddb;
		}
		_iter_end_1d8513ddb:;
	};
	{
		auto &_match_expr{ (*(_74332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d8514606:;
			{
				_1d4bc3da7_mapLookupAssign(_self_, &(_74332_a));
				return;;
			}
		}
		_match_end_1d8514590:;
	};
	{
		auto &_match_expr{ (*(_74332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d851468e:;
			{
				_1d4bc4160_multiAssignTup(_self_, &(_74332_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d8516152:;
			{
				_1d4bc4418_multiAssignFn(_self_, &(_74332_a));
			}
		}
		else {
			_case_begin_1d85160db:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:765:4"));;
			}
		}
		_match_end_1d8516075:;
	};
}



inline jule::Fn<void> _1d4bc4a12_matchExpr(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _76930_m) {
	if ((!(_1c6789591_IsConst((*(_76930_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1d85186a4, jule::Ptr<__jule_anon_1d85186a4_ctx>::make(__jule_anon_1d85186a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d85186a4_ctx_handler);;
	};
	if (((!(_1dd723d71_IsBool((*(*(_76930_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1dd721775_ReadBool((*((*(_76930_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1d85199d5, jule::Ptr<__jule_anon_1d85199d5_ctx>::make(__jule_anon_1d85199d5_ctx{._self_=_self_,._76930_m=_76930_m}).as<jule::Uintptr>(), __jule_anon_1d85199d5_ctx_handler);;
	};
	return nullptr;;
}



inline void _1d4bc4d75_case(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _77925_m, jule::Ptr<_1c66b8822_Case> _77940_c) {
	if ((((*(_77940_c))._field_Exprs.len() != 0LL) && (!((*(_77925_m))._field_Comptime)))) {
		if ((((*_77925_m.alloc)._field_Cases.len() > 0LL) && ((*(_77925_m))._field_Cases[0LL] == _77940_c))) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_77940_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d851dc70:;
			if (it != expr_end) {
				jule::I64 _7869_i = it - expr->begin();
				jule::Ptr<_1c6788b56_Data> _78616_expr = *it;
				{
					{
						
						if ((!((*_77925_m.alloc)._field_TypeMatch))) {
							_case_begin_1d85267a0:;
							{
								jule::Fn<void> _7896_caseExpr = _1d4bc4a12_matchExpr(_self_, _77925_m);;
								if (_1c67898d2_GoodOperand((*_77925_m.alloc)._field_Expr.ptr(), &(_78616_expr))) {
									if ((_7896_caseExpr != nullptr)) {
										_7896_caseExpr();
										_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_78616_expr))._field_Model);
								} else {
									_1d4bd0864_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_78616_expr))._field_Model);
									if ((_7896_caseExpr != nullptr)) {
										_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7896_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1d851e842:;
							{
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1c67bb8d1_TypeKind> _80510_tk = (*(_78616_expr))._field_Model.cast_ptr<_1c67bb8d1_TypeKind>(&__jule_any_type87);;
								if ((_1c67c0891_Trait((*((*_77925_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1d4bcbb5c_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1c67be31d_Sptr((*(_78616_expr))._field_Kind) != nullptr));
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1d4be33d2_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c67c0891_Trait((*((*(_77925_m))._field_Expr))._field_Kind));
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1c73bde61_FindTraitTypeOffset(_1c67c0891_Trait((*((*(_77925_m))._field_Expr))._field_Kind), (*_78616_expr.alloc)._field_Kind)));
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _8157_j = _1d4ca5b48_pushAnyType((*(_self_))._field_oc, _80510_tk);;
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_8157_j));
								};
							}
						}
						_match_end_1d851e732:;
					};
					if ((((*_77940_c.alloc)._field_Exprs.len() - _7869_i) > 1LL)) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1d851dc70:;
				++it;
				_7869_i++;
				goto _iter_begin_1d851dc70;
			}
			_iter_end_1d851dc70:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_77925_m))._field_Default == _77940_c) && ((*_77925_m.alloc)._field_Cases.len() != 0LL))) {
		_1d4ca4d34_indent((*(_self_))._field_oc);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be55e3_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_77940_c));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_77940_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1d4ca4d34_indent((*(_self_))._field_oc);
		_1d4bc70db_scope(_self_, (*_77940_c.alloc)._field_Scope);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bc512d_matchSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b7ce9_Match> _84928_m) {
	if ((((*(_84928_m))._field_Cases.len() == 0LL) && ((*_84928_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_84928_m.alloc)._field_Comptime && (((*_84928_m.alloc)._field_Default == nullptr) || ((*((*((*_84928_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((!((*_84928_m.alloc)._field_Comptime)) && (!(_1c6789591_IsConst((*_84928_m.alloc)._field_Expr.ptr()))))) {
		if ((_1c73d5d68_Copy && _1d4bc7d45_isCopyOptimizable(&((*_84928_m.alloc)._field_Expr)))) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_84928_m))._field_Expr.alloc)._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1d4ca4d34_indent((*(_self_))._field_oc);
	};
	if (((*_84928_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_84928_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d853a0dd:;
			if (it != expr_end) {
				jule::Ptr<_1c66b8822_Case> _87716_c = *it;
				{
					if ((_87716_c == nullptr)) {
						goto _iter_next_1d853a0dd;
					};
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1d4ca4d34_indent((*(_self_))._field_oc);
					_1d4bc4d75_case(_self_, _84928_m, _87716_c);
				}
				_iter_next_1d853a0dd:;
				++it;
				goto _iter_begin_1d853a0dd;
			}
			_iter_end_1d853a0dd:;
		};
	};
	if (((*_84928_m.alloc)._field_Default != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1d4bc4d75_case(_self_, _84928_m, (*_84928_m.alloc)._field_Default);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be5307_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_84928_m));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bc53d6_fallSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b901a_FallSt> _90423_f) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1d4be55e3_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_90423_f))._field_DestCase);
}



inline void _1d4bc568e_breakSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b5b60_BreakSt> _90924_b) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_90924_b))._field_It != 0LLU)) {
		static__1d4be4944_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_90924_b.alloc)._field_It);
	} else {
		static__1d4be5307_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_90924_b))._field_Mtch);
	};
}



inline void _1d4bc5947_setResult(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b93b1_RetSt> _91830_r) {
	if (((*((*((*((*(_91830_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91830_r.alloc)._field_Expr);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1d4ca4d34_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_91830_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d8544e72:;
			{
				jule::Slice<jule::Ptr<_1c6788b56_Data>> _9288_datas = (*((*(_91830_r))._field_Expr.unsafe_cast_ptr<_1c6663107_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9288_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8548b57:;
					if (it != expr_end) {
						jule::I64 _9298_i = it - expr->begin();
						jule::Ptr<_1c6788b56_Data> _92911_data = *it;
						{
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_9298_i));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_92911_data))._field_Model);
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1d4ca4d34_indent((*(_self_))._field_oc);
						}
						_iter_next_1d8548b57:;
						++it;
						_9298_i++;
						goto _iter_begin_1d8548b57;
					}
					_iter_end_1d8548b57:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d8547b01:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1d4bd9bc0_model((*((*(_self_))._field_oc))._field_ec, (*_91830_r.alloc)._field_Expr);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1d8547716:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:942:4"));;
			}
		}
		_match_end_1d85476a0:;
	};
}



inline void _1d4bc5c00_retSt(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b93b1_RetSt> _94626_r) {
	if (_1c666a9c2_IsVoid((*((*(_94626_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_94626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_94626_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_94626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_94626_r))._field_Func.alloc)._field_Result);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_94626_r.alloc)._field_Expr);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_94626_r.alloc)._field_Expr);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_94626_r))._field_Expr != nullptr)) {
		_1d4bc5947_setResult(_self_, _94626_r);
	};
	if ((*((*((*_94626_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1d4cbd90d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_94626_r))._field_Func.alloc)._field_Result));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1d4bc5ea8_var(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c672acb3_Var> _98224_v) {
	if ((!((*(_98224_v))._field_Constant))) {
		_1d4cab335_var((*(_self_))._field_oc, _98224_v);
	};
}



inline void _1d4bc6261_mutSlicing(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b866a_MutSlicingExprModel> _98831_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_98831_m))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_20882a523_Production))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_98831_m.alloc)._field_Token));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98831_m.alloc)._field_Left);
	if (((*_98831_m.alloc)._field_Right != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_98831_m.alloc)._field_Right);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1d4bc6519_swap(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b7416_SwapExprModel> _100525_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1d4bd0864_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_100525_m))._field_Left))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4bd0864_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_100525_m.alloc)._field_Right))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bc67c2_exceptionalForwarding(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c68b7081_ExceptionalForwardingExprModel> _101342_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1d4bd228e_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_101342_m))._field_Expr));
}



inline void _1d4bc6a7a_st(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Any _101923_st) {
	if ((_101923_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _101923_st };
		
		if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1d8565d3e:;
			{
				_1d4bc70db_scope(_self_, _101923_st.cast_ptr<_1c66b35b9_Scope>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d85660b4:;
			{
				_1d4bc5ea8_var(_self_, _101923_st.cast_ptr<_1c672acb3_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d856612a:;
			{
				_1d4bd9bc0_model((*((*(_self_))._field_oc))._field_ec, (*(_101923_st.unsafe_cast_ptr<_1c6788b56_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1d856689a:;
			{
				_1d4bc13b0_conditional(_self_, _101923_st.cast_ptr<_1c66b4202_Conditional>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1d8566911:;
			{
				_1d4bc1668_infIter(_self_, _101923_st.cast_ptr<_1c66b44ee_InfIter>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1d8566977:;
			{
				_1d4bc1921_whileIter(_self_, _101923_st.cast_ptr<_1c66b49a5_WhileIter>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1d85669dd:;
			{
				_1d4bc1bc9_rangeIter(_self_, _101923_st.cast_ptr<_1c66b5401_RangeIter>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1d8566a54:;
			{
				_1d4bc1e82_cont(_self_, _101923_st.cast_ptr<_1c66b5786_ContSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1d8566aba:;
			{
				_1d4bc223a_label(_self_, _101923_st.cast_ptr<_1c66b6116_Label>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1d8566b31:;
			{
				_1d4bc24e3_gotoSt(_self_, _101923_st.cast_ptr<_1c66b6776_GotoSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1d8566b97:;
			{
				_1d4bc279b_postfix(_self_, _101923_st.cast_ptr<_1c66b6b50_Postfix>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1d8566c0d:;
			{
				_1d4bc3aee_assign(_self_, _101923_st.cast_ptr<_1c66b7106_Assign>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1d8566c74:;
			{
				_1d4bc46c1_multiAssign(_self_, _101923_st.cast_ptr<_1c66b75ac_MultiAssign>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1d8566cda:;
			{
				_1d4bc512d_matchSt(_self_, _101923_st.cast_ptr<_1c66b7ce9_Match>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1d8566d51:;
			{
				_1d4bc53d6_fallSt(_self_, _101923_st.cast_ptr<_1c66b901a_FallSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1d8566dc8:;
			{
				_1d4bc568e_breakSt(_self_, _101923_st.cast_ptr<_1c66b5b60_BreakSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1d8566e50:;
			{
				_1d4bc5c00_retSt(_self_, _101923_st.cast_ptr<_1c66b93b1_RetSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1d8566ec7:;
			{
				_1d4bd76a1_pushToSlice((*((*(_self_))._field_oc))._field_ec, _101923_st.cast_ptr<_1c68b91c6_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1d856704e:;
			{
				_1d4bd7959_appendToSlice((*((*(_self_))._field_oc))._field_ec, _101923_st.cast_ptr<_1c68b95a0_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1d85670c6:;
			{
				_1d4bc6261_mutSlicing(_self_, _101923_st.cast_ptr<_1c68b866a_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1d856714d:;
			{
				_1d4bc6519_swap(_self_, _101923_st.cast_ptr<_1c68b7416_SwapExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1d85671c5:;
			{
				_1d4bc67c2_exceptionalForwarding(_self_, _101923_st.cast_ptr<_1c68b7081_ExceptionalForwardingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1d856724c:;
			{
				_1d4bc0d4e_strRuneIter(_self_, _101923_st.cast_ptr<_1c68b9979_StrRuneIter>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1d8565ba7:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1d8565b41:;
	};
}



inline void _1d4bc6d33_scopeStmts(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b35b9_Scope>* _107532_s) {
	{
		auto expr = &((*((*(_107532_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8574d92:;
		if (it != expr_end) {
			jule::Any _107615_st = *it;
			{
				_1d4ca4d34_indent((*(_self_))._field_oc);
				_1d4bc6a7a_st(_self_, _107615_st);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1d8574d92:;
			++it;
			goto _iter_begin_1d8574d92;
		}
		_iter_end_1d8574d92:;
	};
}



inline void _1d4bc70db_scope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c66b35b9_Scope> _108426_s) {
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	if ((*(_108426_s))._field_Deferred) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4bc6d33_scopeStmts(_self_, &(_108426_s));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_108426_s.alloc)._field_Deferred) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1d4bc7394_commonFuncScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _109937_f) {
	if ((!(_1c666a9c2_IsVoid((*((*(_109937_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1c67c9adc_Tuple> _11018_tup = _1c67c0dad_Tup((*((*(_109937_f))))._field_Result.ptr());;
		if ((_11018_tup != nullptr)) {
			_1d4ca4d34_indent((*(_self_))._field_oc);
			_1d4cbd237_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _11018_tup);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_11018_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1d857bb13:;
				if (it != expr_end) {
					jule::I64 _110610_i = it - expr->begin();
					jule::Ptr<_1c67bb8d1_TypeKind> _110617_t = *it;
					{
						if (_1d4cc0adb_shouldInitialized(&(_110617_t))) {
							_1d4ca4d34_indent((*(_self_))._field_oc);
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_110610_i));
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1d4bdad8b_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _110617_t);
							_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1d857bb13:;
					++it;
					_110610_i++;
					goto _iter_begin_1d857bb13;
				}
				_iter_end_1d857bb13:;
			};
		} else if (((*((*(*((*(_109937_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1d4ca4d34_indent((*(_self_))._field_oc);
			_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_109937_f))))._field_Result);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1d4cc0adb_shouldInitialized(&((*((*(_109937_f))))._field_Result))) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1d4bdad8b_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_109937_f))))._field_Result);
			};
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1d4bc6d33_scopeStmts(_self_, &((*((*(_109937_f))))._field_Scope));
	if (((*(*((*(_109937_f))))._field_Decl.alloc)._field_Exceptional && _1c666a9c2_IsVoid((*((*(_109937_f))))._field_Decl))) {
		_1d4ca4d34_indent((*_self_.alloc)._field_oc);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1d4bc7707_anonFuncScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _113934_m, jule::Str _113955_ident) {
	if (((*((*(_113934_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11433_closure = _1c73bb25a_IsClosure(&(_113934_m));;
	if (_11433_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c672acb3_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1c672acb3_Var>>((void*)__jule_anon_1d858a3a2, jule::Ptr<__jule_anon_1d858a3a2_ctx>::make(__jule_anon_1d858a3a2_ctx{._self_=_self_,._113934_m=_113934_m}).as<jule::Uintptr>(), __jule_anon_1d858a3a2_ctx_handler); __jule_collection; }));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	if (_11433_closure) {
		_1d4ca4d34_indent((*(_self_))._field_oc);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1d4ca4482_write((*(_self_))._field_oc, _113955_ident);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1d4ca4482_write((*(_self_))._field_oc, _113955_ident);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1d4bc7394_commonFuncScope(_self_, &((*_113934_m.alloc)._field_Func));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11433_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1d4bc79b0_funcScope(jule::Ptr<_1d4bbe91e_scopeCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _117130_f) {
	if (((*(_117130_f))._field_Scope == nullptr)) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4bc7394_commonFuncScope(_self_, &(_117130_f));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1d4bcb200_exprCoder> static__1d4bcb5eb_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _11321_oc) {
	return jule::new_ptr<_1d4bcb200_exprCoder>(_1d4bcb200_exprCoder{._field_oc=(*(_11321_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c672acb3_Var>>>(nullptr)});;
}



inline void _1d4bcb8a4_string(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _11924_c) {
	jule::Str _1203_content = _1dd721a0b_ReadStr((*(_11924_c)).ptr());;
	if ((_1203_content.len() == 0LL)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1253_len = _1dd711314_FmtInt(static_cast<jule::I64>(_1203_content.len()), 10LL);;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1d4bdbb4a_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1203_content);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4ca4482_write((*(_self_))._field_oc, _1253_len);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bcbb5c_boolean(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Bool _13424_b) {
	if (_13424_b) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1d4bcbd5a_nilLit(jule::Ptr<_1d4bcb200_exprCoder> _self_) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1d4bcc19b_ftoaSpecialCases(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::F64* _14634_x) {
	{
		
		if (_1dd6b5b48_IsNaN((*(_14634_x)))) {
			_case_begin_1d85ae74a:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1dd6b62ca_IsInf((*(_14634_x)), 1LL)) {
			_case_begin_1d85ae7e4:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1dd6b62ca_IsInf((*(_14634_x)), -1LL)) {
			_case_begin_1d85ae86b:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1d85ae6b2:;
			{
				return false;;
			}
		}
		_match_end_1d85ae5a2:;
	};
	return true;;
}



inline void _1d4bcc454_float32(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _16025_c) {
	jule::F64 _1613_x = _1dd722545_AsF64((*(_16025_c)).ptr());;
	if (_1d4bcc19b_ftoaSpecialCases(_self_, &(_1613_x))) {
		return;;
	};
	{
		
		if ((_1613_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1d85b3a07:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1613_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1d85b2dd0:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1d85b2a4a:;
			{
				_1d4bdbee1_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1613_x, 32LL);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1d85b27d6:;
	};
}



inline void _1d4bcc70c_float64(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const>* _17925_c) {
	jule::F64 _1803_x = _1dd722545_AsF64((*(_17925_c)).ptr());;
	if (_1d4bcc19b_ftoaSpecialCases(_self_, &(_1803_x))) {
		return;;
	};
	{
		
		if ((_1803_x == jule::MAX_F64)) {
			_case_begin_1d85b6345:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1803_x == jule::MIN_F64)) {
			_case_begin_1d85b6026:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1d85b5eb0:;
			{
				_1d4bdbee1_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1803_x, 64LL);
			}
		}
		_match_end_1d85b5c4b:;
	};
}



inline void _1d4bcc9b5_constant(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1dd71e850_Const> _19729_c) {
	{
		
		if (_1dd724107_IsStr(_19729_c.ptr())) {
			_case_begin_1d85b81c1:;
			{
				_1d4bcb8a4_string(_self_, &(_19729_c));
			}
		}
		else if (_1dd723d71_IsBool(_19729_c.ptr())) {
			_case_begin_1d85b8237:;
			{
				_1d4bcbb5c_boolean(_self_, _1dd721775_ReadBool(_19729_c));
			}
		}
		else if (_1dd72438d_IsF64(_19729_c.ptr())) {
			_case_begin_1d85b829d:;
			{
				{
					
					if (((*_19729_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1d85babda:;
						{
							_1d4bcc454_float32(_self_, &(_19729_c));
						}
					}
					else {
						_case_begin_1d85ba844:;
						{
							_1d4bcc70c_float64(_self_, &(_19729_c));
						}
					}
					_match_end_1d85ba734:;
				};
			}
		}
		else if (_1dd723854_IsI64(_19729_c.ptr())) {
			_case_begin_1d85b8314:;
			{
				_1d4bdc2cc_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1dd721258_ReadI64(_19729_c));
			}
		}
		else if (_1dd723ada_IsU64(_19729_c.ptr())) {
			_case_begin_1d85b837a:;
			{
				_1d4bdc5b8_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1dd7214de_ReadU64(_19729_c));
			}
		}
		else if (_1dd724624_IsNil(_19729_c.ptr())) {
			_case_begin_1d85b83e1:;
			{
				_1d4bcbd5a_nilLit(_self_);
			}
		}
		else {
			_case_begin_1d85b815a:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1d85b805b:;
	};
}



inline void _1d4bccdd3_operatorOverloadingUnary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _22146_s, jule::U64 _22161_op, jule::Any _22178_e) {
	;
	jule::Ptr<_1c666d4ec_FnIns> _2237_f = _1c73be390_FindOperator(_22146_s, _22161_op, true);;
	if ((_2237_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:4"));;
	};
	static__1d4be30e6_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2237_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1d4bd0864_possibleRefExpr(_self_, _22178_e);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bcd301_divByZeroBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c661e327_Token>* _23333_op, jule::Ptr<_1c665c51e_OperandExprModel>* _23350_l, jule::Ptr<_1c665c51e_OperandExprModel>* _23377_r) {
	;
	;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23350_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_23350_l))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23377_r))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_23377_r))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_20882a523_Production))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" \"", 2));
		_1d4ca67c5_locInfo((*(_self_))._field_oc, _23333_op);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_23350_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_23333_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d85c95bc:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d85ccceb:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1d85ccc52:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1d4bcd9e9__unsafeBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, _20759e353_StrBuilder* _27235_buf, jule::Str* _27253_l, jule::Str* _27262_r, jule::Ptr<_1c67bb8d1_TypeKind>* _2738_lk, jule::Ptr<_1c67bb8d1_TypeKind>* _27328_rk, jule::U64 _27343_op, jule::Str _27356_kind) {
	if ((_1c67c060a_Struct((*(_2738_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1c665865d_StructIns> _2768_s = _1c67c060a_Struct((*(_2738_lk)).ptr());;
		_1d4bdcc17_operatorOverloadingBinary(_27235_buf, &(_2768_s), _27253_l, _27262_r, _27343_op, _27356_kind);
		return;;
	};
	if (((_27343_op == static_cast<jule::U64>(50LLU)) || (_27343_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1c73bae19_IsAny(_2738_lk)) {
				_case_begin_1d85d288e:;
				{
					if (((!(_1c67bca14_IsNil((*(_27328_rk)).ptr()))) && (!(_1c73bae19_IsAny(_27328_rk))))) {
						_2075a8406_WriteByte(_27235_buf, '(');
						if ((_27343_op == static_cast<jule::U64>(51LLU))) {
							_2075a8406_WriteByte(_27235_buf, '!');
						};
						jule::I64 _2926_i = _1d4ca5b48_pushAnyType((*(_self_))._field_oc, (*(_27328_rk)));;
						_2075a814d_WriteStr(_27235_buf, jule::Str::lit("__jule_any_type", 15));
						_2075a814d_WriteStr(_27235_buf, _1dd7115cd_Itoa(_2926_i));
						_2075a814d_WriteStr(_27235_buf, jule::Str::lit("_compare(", 9));
						_2075a814d_WriteStr(_27235_buf, (*(_27253_l)));
						_2075a814d_WriteStr(_27235_buf, jule::Str::lit(", ", 2));
						_2075a814d_WriteStr(_27235_buf, (*(_27262_r)));
						_2075a814d_WriteStr(_27235_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1c67bed57_Arr((*(_2738_lk)).ptr()) != nullptr)) {
				_case_begin_1d85d2938:;
				{
					jule::Ptr<_1c67cb319_Arr> _3055_arr = _1c67bed57_Arr((*(_2738_lk)).ptr());;
					jule::Ptr<_1c666a51b_Fn> _3069_f = _1c68bd1b9_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
					jule::Ptr<_1c666d4ec_FnIns> _3079_ins = _1c73be714_FindFnGenericInstance(&(_3069_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_3055_arr))._field_Elem; __jule_collection; }));;
					if ((_27343_op == static_cast<jule::U64>(51LLU))) {
						_2075a8406_WriteByte(_27235_buf, '!');
					};
					static__1d4be30e6_funcIns(_27235_buf, &(_3079_ins));
					_2075a8406_WriteByte(_27235_buf, '(');
					_2075a814d_WriteStr(_27235_buf, (*(_27253_l)));
					_2075a814d_WriteStr(_27235_buf, jule::Str::lit(".begin(), ", 10));
					_2075a814d_WriteStr(_27235_buf, (*(_27262_r)));
					_2075a814d_WriteStr(_27235_buf, jule::Str::lit(".begin(), ", 10));
					_2075a814d_WriteStr(_27235_buf, _1dd7115cd_Itoa((*_3055_arr.alloc)._field_N));
					_2075a8406_WriteByte(_27235_buf, ')');
					return;;
				}
			}
			else if ((_1c67c0b27_Map((*(_2738_lk)).ptr()) != nullptr)) {
				_case_begin_1d85d299e:;
				{
					jule::Ptr<_1c67ca68c_Map> _3239__map = _1c67c0b27_Map((*(_2738_lk)).ptr());;
					jule::Ptr<_1c6655803_Struct> _3249_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
					jule::Ptr<_1c665865d_StructIns> _3259_ins = _1c73beb98_FindStructGenericInstance(&(_3249_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_3239__map))._field_Key; (*it++) = (*_3239__map.alloc)._field_Val; __jule_collection; }));;
					;
					jule::Ptr<_1c666d4ec_FnIns> _3279_f = (*(_1c6659708_FindMethod(_3259_ins.ptr(), jule::Str::lit("isNil", 5), false)))._field_Instances[0LL];;
					static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3279_f));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
					_1d4ca4482_write((*(_self_))._field_oc, (*(_27253_l)));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					return;;
				}
			}
			_match_end_1d85d275c:;
		};
	};
	{
		auto &_match_expr{ _27343_op };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1d85da710:;
			{
				jule::Ptr<_1c67c49e9_Prim> _3394_lp = _1c67be087_Prim((*(_2738_lk)).ptr());;
				if (((_3394_lp != nullptr) && _1dd71d9a3_IsUnsigInt((*_3394_lp.alloc)._field_Kind))) {
					_2075a8406_WriteByte(_27235_buf, '(');
					_1d4cb4481_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _27235_buf, _3394_lp);
					_2075a8406_WriteByte(_27235_buf, ')');
				};
			}
		}
		_match_end_1d85da5de:;
	};
	_2075a8406_WriteByte(_27235_buf, '(');
	_2075a814d_WriteStr(_27235_buf, (*(_27253_l)));
	_2075a8406_WriteByte(_27235_buf, ' ');
	_2075a814d_WriteStr(_27235_buf, _27356_kind);
	_2075a8406_WriteByte(_27235_buf, ' ');
	_2075a814d_WriteStr(_27235_buf, (*(_27262_r)));
	_2075a8406_WriteByte(_27235_buf, ')');
}



inline void _1d4bcdca2_unsafeBinary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _35633_m) {
	jule::I64 _3573_i = _2075a8dc9_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3587_oldbuf = _2075a93e6_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_35633_m))._field_Left))._field_Model);
	jule::Str _3603_l = __jule_bytesToStr(_2075a93e6_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3573_i));;
	{
		_2075a969e_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3587_oldbuf);
	};
	_1d4bd0864_possibleRefExpr(_self_, (*((*_35633_m.alloc)._field_Right))._field_Model);
	jule::Str _3633_r = __jule_bytesToStr(_2075a93e6_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3573_i));;
	{
		_2075a969e_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3587_oldbuf);
	};
	_1d4bcd9e9__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3603_l), &(_3633_r), &((*(*(_35633_m))._field_Left.alloc)._field_Kind), &((*(*(_35633_m))._field_Right.alloc)._field_Kind), (*((*_35633_m.alloc)._field_Op))._field_Id, (*(*(_35633_m))._field_Op.alloc)._field_Kind);
}



inline void _1d4bce115_shl(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665c51e_OperandExprModel>* _36825_l, jule::Ptr<_1c665c51e_OperandExprModel>* _36852_r) {
	;
	;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_36825_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_36825_l))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_36852_r))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_36852_r))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_36825_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1dd713c51_BitsizeOf((*(_1c67be087_Prim((*((*(_36825_l))))._field_Kind.ptr())))._field_Kind)));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1d4bce478_shr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665c51e_OperandExprModel>* _39625_l, jule::Ptr<_1c665c51e_OperandExprModel>* _39652_r) {
	;
	;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_39625_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_39625_l))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_39652_r))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_39652_r))))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_39625_l))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1dd713c51_BitsizeOf((*(_1c67be087_Prim((*((*(_39625_l))))._field_Kind.ptr())))._field_Kind)));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1d4bce731_binary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665ca19_BinaryExprModel> _42427_m) {
	{
		auto &_match_expr{ (*((*(_42427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d861411d:;
			{
				if ((_20882a2d1_Safety && (_1c67c060a_Struct((*((*(_42427_m))._field_Left))._field_Kind.ptr()) == nullptr))) {
					_1d4bcd301_divByZeroBinary(_self_, &((*_42427_m.alloc)._field_Op), &((*_42427_m.alloc)._field_Left), &((*_42427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1d8614195:;
			{
				if ((_1c67c060a_Struct((*((*(_42427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1d4bce115_shl(_self_, &((*_42427_m.alloc)._field_Left), &((*_42427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d861420b:;
			{
				if ((_1c67c060a_Struct((*((*(_42427_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1d4bce478_shr(_self_, &((*_42427_m.alloc)._field_Left), &((*_42427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1d8614052:;
	};
	_1d4bcdca2_unsafeBinary(_self_, _42427_m);
}



inline void _1d4bce9d9_var(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c672acb3_Var> _44824_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8619024:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1c672acb3_Var>> _44910_prefix = *it;
			{
				if (_44910_prefix(_44824_m)) {
					return;;
				};
			}
			_iter_next_1d8619024:;
			++it;
			goto _iter_begin_1d8619024;
		}
		_iter_end_1d8619024:;
	};
	if ((*(_44824_m))._field_Binded) {
		jule::Ptr<_1c6633d20_Directive> _4554_d = _1c73bcbda_FindDirective(&((*_44824_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_4554_d != nullptr)) {
			_1d4ca473a_writeBytes((*_self_.alloc)._field_oc, _1d4cb1071_concatAllParts((*_4554_d.alloc)._field_Args));
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _44824_m);
}



inline void _1d4bcec92_structureIns(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns> _46433_m) {
	_1d4cb6c14_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _46433_m);
}



inline void _1d4bd004a_unary(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665cde3_UnaryExprModel> _46826_m) {
	if ((_1c67c060a_Struct((*((*(_46826_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c665865d_StructIns> _4718_s = _1c67c060a_Struct((*((*(_46826_m))._field_Expr))._field_Kind);;
		_1d4bccdd3_operatorOverloadingUnary(_self_, &(_4718_s), (*((*_46826_m.alloc)._field_Op))._field_Id, (*(*(_46826_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_46826_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d8620338:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_46826_m))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d8620b96:;
			{
				if ((_20882a523_Production || (_1c67be31d_Sptr((*((*(_46826_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1d8620aec;
				};
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_46826_m))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_46826_m.alloc)._field_Op));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1d8620aec:;
	};
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1d4ca4482_write((*(_self_))._field_oc, (*(*(_46826_m))._field_Op.alloc)._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*(*(_46826_m))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1d4bd0303_structureLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665d7b7_StructLitExprModel> _49933_m) {
	if ((*((*((*(_49933_m))._field_Strct))._field_Decl))._field_Binded) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1d4cb6c14_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49933_m.alloc)._field_Strct);
	if ((*(*((*(_49933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _5107_inited = false;;
	_julec_label_1d8627e56:;
	{
		auto expr = &((*(*(_49933_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d862b113:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _51215_f = *it;
			{
				{
					auto expr = &((*_49933_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d862bd28:;
					if (it != expr_end) {
						jule::Ptr<_1c665d421_StructArgExprModel> _51316_arg = *it;
						{
							if (((*(_51316_arg))._field_Field == _51215_f)) {
								if (_5107_inited) {
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1d4be4081_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_51215_f))._field_Decl));
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1d4bd0864_possibleRefExpr(_self_, (*((*_51316_arg.alloc)._field_Expr))._field_Model);
								_5107_inited=true;
								goto _iter_next_1d862b113;
							};
						}
						_iter_next_1d862bd28:;
						++it;
						goto _iter_begin_1d862bd28;
					}
					_iter_end_1d862bd28:;
				};
				if ((*(*((*(_49933_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_5107_inited=false;
					goto _iter_next_1d862b113;
				};
				if (_5107_inited) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_5107_inited=_1d4bda011_handleFieldByDefault(_self_, &(_51215_f));
			}
			_iter_next_1d862b113:;
			++it;
			goto _iter_begin_1d862b113;
		}
		_iter_end_1d862b113:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bd05ab_allocStructure(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665dab4_AllocStructLitExprModel> _54235_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1d4be3c95_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_54235_m))._field_Lit))._field_Strct));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1d4bd0303_structureLit(_self_, (*_54235_m.alloc)._field_Lit);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd0864_possibleRefExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _55032_expr) {
	{
		auto &_match_expr{ _55032_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d86345d3:;
			{
				jule::Ptr<_1c672acb3_Var> _5534_v = _55032_expr.unsafe_cast_ptr<_1c672acb3_Var>();;
				if ((*(_5534_v))._field_Reference) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1d4bd9bc0_model(_self_, _55032_expr);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1d863456c:;
	};
	_1d4bd9bc0_model(_self_, _55032_expr);
}



inline void _1d4bd0c82_castTraitFromTrait(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e147_CastingExprModel>* _56440_m, jule::Ptr<_1c667de9c_Trait> _56466_t1, jule::Ptr<_1c667de9c_Trait> _56482_t2) {
	_1d4bd0864_possibleRefExpr(_self_, (*((*((*(_56440_m))))._field_Expr))._field_Model);
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1d4ca651c_pushAndWriteMaskMapper((*(_self_))._field_oc, _56466_t1, _56482_t2);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd103a_casting(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e147_CastingExprModel> _57728_m) {
	{
		
		if (_1c73bae19_IsAny(&((*(_57728_m))._field_Kind))) {
			_case_begin_1d86391dc:;
			{
				if (_1c67bca14_IsNil((*_57728_m.alloc)._field_ExprKind.ptr())) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1c67beac1_TypeEnum((*(_57728_m))._field_ExprKind) != nullptr)) {
					_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _5884_i = _1d4ca5b48_pushAnyType((*(_self_))._field_oc, (*_57728_m.alloc)._field_ExprKind);;
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_57728_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1d863ae47:;
						{
							jule::Ptr<_1c67c49e9_Prim> _5925_prim = _1c67be087_Prim((*(_57728_m))._field_ExprKind);;
							if (((_5925_prim != nullptr) && _1dd71dc6c_IsInt((*_5925_prim.alloc)._field_Kind))) {
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1d4cb4481_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5925_prim);
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1d4bd0864_possibleRefExpr(_self_, (*(*(_57728_m))._field_Expr.alloc)._field_Model);
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1d863d17a;
							};
							goto _case_begin_1d863d1e1;
						}
					}
					else {
						_case_begin_1d863d1e1:;
						{
							_1d4bd0864_possibleRefExpr(_self_, (*(*(_57728_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1d863d17a:;
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_5884_i));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1c73bae19_IsAny(&((*(_57728_m))._field_ExprKind))) {
			_case_begin_1d8639286:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c67be31d_Sptr((*_57728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c67be31d_Sptr((*(_57728_m))._field_Kind)))._field_Elem);
				} else {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20882a523_Production))) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_57728_m.alloc)._field_Token));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1d4ca5b48_pushAnyType((*(_self_))._field_oc, (*_57728_m.alloc)._field_Kind)));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c67be5a4_Ptr((*(_57728_m))._field_ExprKind.ptr()) != nullptr) || (_1c67be5a4_Ptr((*_57728_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d86392ec:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1c67c0891_Trait((*(_57728_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1d8639363:;
			{
				if ((_1c67c0891_Trait((*_57728_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1d4bd0c82_castTraitFromTrait(_self_, &(_57728_m), _1c67c0891_Trait((*(_57728_m))._field_Kind), _1c67c0891_Trait((*(_57728_m))._field_ExprKind));
					return;;
				};
				_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c67be31d_Sptr((*(_57728_m))._field_Kind) != nullptr)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c67be31d_Sptr((*(_57728_m))._field_Kind)))._field_Elem);
				} else {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_20882a523_Production))) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_57728_m.alloc)._field_Token));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1d4be33d2_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c67c0891_Trait((*(_57728_m))._field_ExprKind));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1c73bde61_FindTraitTypeOffset(_1c67c0891_Trait((*(_57728_m))._field_ExprKind), (*_57728_m.alloc)._field_Kind)));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c67c0891_Trait((*(_57728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d86393c9:;
			{
				_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1d4be33d2_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c67c0891_Trait((*(_57728_m))._field_Kind));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_1c73bde61_FindTraitTypeOffset(_1c67c0891_Trait((*(_57728_m))._field_Kind), (*_57728_m.alloc)._field_ExprKind)));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c67c0b27_Map((*(_57728_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d8639451:;
			{
				_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
				return;;
			}
		}
		_match_end_1d8639044:;
	};
	jule::Ptr<_1c67c49e9_Prim> _6797_prim = _1c67be087_Prim((*(_57728_m))._field_Kind.ptr());;
	if (((_6797_prim != nullptr) && _1c67c7eb4_IsStr(_6797_prim))) {
		jule::Ptr<_1c67c49e9_Prim> _6818_eprim = _1c67be087_Prim((*_57728_m.alloc)._field_ExprKind.ptr());;
		if (((_6818_eprim != nullptr) && (_6797_prim != nullptr))) {
			if (_1c67c6424_IsU8(_6818_eprim)) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1d4bd0864_possibleRefExpr(_self_, (*((*_57728_m.alloc)._field_Expr))._field_Model);
			_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1c67c8ee8_Slc> _6928_slc = _1c67c00dd_Slc((*(_57728_m))._field_ExprKind);;
		if ((_6928_slc != nullptr)) {
			_6818_eprim=_1c67be087_Prim((*_6928_slc.alloc)._field_Elem.ptr());
			if (_1c67c5e07_IsI32(_6818_eprim)) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1d4bd0864_possibleRefExpr(_self_, (*(*(_57728_m))._field_Expr.alloc)._field_Model);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_6797_prim=_1c67be087_Prim((*(_57728_m))._field_ExprKind);
	if (((_6797_prim != nullptr) && _1c67c7eb4_IsStr(_6797_prim))) {
		jule::Ptr<_1c67c8ee8_Slc> _7088_slc = _1c67c00dd_Slc((*(_57728_m))._field_Kind);;
		if ((_7088_slc != nullptr)) {
			_6797_prim=_1c67be087_Prim((*(_7088_slc))._field_Elem);
			if (_1c67c5e07_IsI32(_6797_prim)) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1d4bd0864_possibleRefExpr(_self_, (*(*(_57728_m))._field_Expr.alloc)._field_Model);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_57728_m.alloc)._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1d4bd0864_possibleRefExpr(_self_, (*(*(_57728_m))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd12e3_args(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _72926_m) {
	jule::I64 _7307_j = 0LL;;
	if (((((*((*((*(_72926_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_72926_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_72926_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1c6669196_IsSelf((*((*((*((*(_72926_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_7307_j)++;
	};
	{
		auto expr = &((*((*(_72926_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d867757c:;
		if (it != expr_end) {
			jule::I64 _7357_i = it - expr->begin();
			jule::Any _73510_arg = *it;
			{
				jule::Ptr<_1c666c474_ParamIns> _7364_p = (*(*((*(_72926_m))))._field_Func.alloc)._field_Params[_7307_j];;
				if ((((*(_7364_p))._field_Decl != nullptr) && (*(*(_7364_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _73510_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1d867a3a4:;
							{
								jule::Ptr<_1c672acb3_Var> _7406_v = _73510_arg.unsafe_cast_ptr<_1c672acb3_Var>();;
								if ((*(_7406_v))._field_Reference) {
									_1d4bd9bc0_model(_self_, _73510_arg);
									goto _julec_label_1d867ce01;
								};
							}
						}
						_match_end_1d867a33d:;
					};
					_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1d4bd9bc0_model(_self_, _73510_arg);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1d867ce01;
				};
				_1d4bd0864_possibleRefExpr(_self_, _73510_arg);
				_julec_label_1d867ce01:;
				if ((((*((*(_72926_m))))._field_Args.len() - _7357_i) > 1LL)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_7307_j)++;
			}
			_iter_next_1d867757c:;
			++it;
			_7357_i++;
			goto _iter_begin_1d867757c;
		}
		_iter_end_1d867757c:;
	};
}



inline void _1d4bd159b_modelForCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _76033_expr) {
	{
		auto &_match_expr{ _76033_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d867de57:;
			{
				_1d4bd4b21_funcIns(_self_, _76033_expr.cast_ptr<_1c666d4ec_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d867931a:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _7668_ssie = _76033_expr.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>();;
				if (((*(_7668_ssie))._field_Method != nullptr)) {
					_1d4bd4b21_funcIns(_self_, (*_7668_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1d867dde1:;
	};
	_1d4bd0864_possibleRefExpr(_self_, _76033_expr);
}



inline void _1d4bd1854_pushCallInf(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _77529_m) {
	if ((_20882a523_Production || (!((*((*((*(_77529_m))))._field_Func))._field_Anon)))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_77529_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_77529_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d8682a0a:;
				{
					if ((*((*((*((*((*((*(_77529_m))))._field_Expr.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1d8682994:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*((*(_77529_m))))._field_Token));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_77529_m))))._field_Args.len() != 0LL)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1d4bd1b95_isWrapped(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _79831_m) {
	if ((((!(_1c666e9b5_IsBuiltin((*((*(_79831_m))))._field_Func.ptr()))) && ((*((*(*((*(_79831_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1c6669196_IsSelf((*((*((*((*(_79831_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_79831_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d86877bd:;
				{
					jule::Ptr<_1c666258a_StructSubIdentExprModel> _8029_ssie = (*((*(_79831_m))))._field_Expr.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>();;
					{
						
						if (_1c666942c_IsRef((*((*((*((*(_79831_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1c67be31d_Sptr((*((*(_8029_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1d868956c:;
							{
								goto _match_end_1d8688725;
							}
						}
						else {
							_case_begin_1d868879c:;
							{
								if ((_1c67c060a_Struct((*((*(_8029_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_8029_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1d4bd9bc0_model(_self_, (*(*(_8029_ssie))._field_Expr.alloc)._field_Model);
										_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1d8688725:;
					};
				}
			}
			_match_end_1d8687757:;
		};
	};
	return false;;
}



inline jule::Bool _1d4bd1ed6_writeReceiver(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _82234_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _82234_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d868e099:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*((*(_82234_m.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d868e2a8:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*((*((*(_82234_m.unsafe_cast_ptr<_1c68b9c76_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d868e242:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:831:4"));;
			}
		}
		_match_end_1d868e1cb:;
	};
}



inline void _1d4bd228e_pureFuncCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _83534_m) {
	jule::Bool _8363_wrapped = _1d4bd1b95_isWrapped(_self_, _83534_m);;
	_1d4bd159b_modelForCall(_self_, (*((*(_83534_m))))._field_Expr);
	if ((!(_1c666e9b5_IsBuiltin((*((*(_83534_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_83534_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_83534_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1c73bd0a3_HasDirective(&((*(*((*((*(_83534_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_83534_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d86935ed:;
					if (it != expr_end) {
						jule::I64 _84211_i = it - expr->begin();
						jule::Ptr<_1c67b9eea_InsGeneric> _84218_g = *it;
						{
							_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_84218_g))._field_Kind);
							if ((((*(*((*(_83534_m))))._field_Func.alloc)._field_Generics.len() - _84211_i) > 1LL)) {
								_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1d86935ed:;
						++it;
						_84211_i++;
						goto _iter_begin_1d86935ed;
					}
					_iter_end_1d86935ed:;
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1d4bd1854_pushCallInf(_self_, _83534_m);
	if (((*(*((*(_83534_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_83534_m))))._field_Func.alloc)._field_Anon)))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_83534_m))))._field_Args.len() > 0LL)) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1c666e9b5_IsBuiltin((*((*(_83534_m))))._field_Func))) && ((*(*((*((*(_83534_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1c6669196_IsSelf((*((*((*((*(_83534_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_83534_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1d869a308:;
				{
					jule::Ptr<_1c666258a_StructSubIdentExprModel> _8669_ssie = (*((*(_83534_m))))._field_Expr.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>();;
					{
						
						if (_1c666942c_IsRef((*((*((*((*(_83534_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1d869e593:;
							{
								_1d4bd1ed6_writeReceiver(_self_, (*((*(_8669_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1c67be31d_Sptr((*((*(_8669_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1d86a0b38:;
							{
								jule::Bool _8736_safe = _1d4bd1ed6_writeReceiver(_self_, (*(*(_8669_ssie))._field_Expr.alloc)._field_Model);;
								if (_8736_safe) {
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_20882a523_Production))) {
										_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*((*(_83534_m))))._field_Token));
										_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1d869b35e:;
							{
								if ((_1c67c060a_Struct((*((*(_8669_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_8669_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1d869bbab:;
											{
												jule::Ptr<_1c672acb3_Var> _8878_v = (*((*(_8669_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
												if ((*(_8878_v))._field_Reference) {
													goto _match_end_1d869c184;
												};
												goto _case_begin_1d869c1ea;
											}
										}
										else {
											_case_begin_1d869c1ea:;
											{
												_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1d869c184:;
									};
								};
								if (_8363_wrapped) {
									_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1c67be5a4_Ptr((*((*(_8669_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1d4bd9bc0_model(_self_, (*(*(_8669_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1d4bd0864_possibleRefExpr(_self_, (*((*((*(*(_8669_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1d869b2d7:;
					};
					if (((*((*(_83534_m))))._field_Args.len() > 0LL)) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1d8699e95:;
				{
					_1d4bd0864_possibleRefExpr(_self_, (*((*((*(_83534_m))))._field_Expr.unsafe_cast_ptr<_1c6661be9_TraitSubIdentExprModel>()))._field_Expr);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_83534_m))))._field_Args.len() > 0LL)) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1d869a281:;
		};
	};
	_1d4bd12e3_args(_self_, _83534_m);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_8363_wrapped) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1d4bd2547_coFuncCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel>* _92532_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_20759e353_StrBuilder _9287_head = static__2075a7c41_New(32LL);;
	_2075a814d_WriteStr(&_9287_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_92532_m))))._field_Func))._field_Owner != nullptr)) {
		_2075a814d_WriteStr(&_9287_head, jule::Str::lit("_self_", 6));
		if (((*((*(_92532_m))))._field_Args.len() > 0LL)) {
			_2075a814d_WriteStr(&_9287_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_92532_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d86ae2ea:;
		if (it != expr_end) {
			jule::I64 _9367_i = it - expr->begin();
			jule::Any _93610_arg = *it;
			{
				if ((_9367_i > 0LL)) {
					_2075a814d_WriteStr(&_9287_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _93610_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1d86b0807:;
						{
							jule::Ptr<_1c672acb3_Var> _9429_v = _93610_arg.unsafe_cast_ptr<_1c672acb3_Var>();;
							static__1d4be436c_var(&(_9287_head), _9429_v);
							goto _iter_next_1d86ae2ea;
						}
					}
					_match_end_1d86b0296:;
				};
				jule::Str _9464_name = (jule::Str::lit("_co_arg_", 8) + _1dd7115cd_Itoa(_9367_i));;
				_2075a814d_WriteStr(&_9287_head, _9464_name);
				_1d4ca4d34_indent((*(_self_))._field_oc);
				_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_92532_m))))._field_Func.alloc)._field_Params[_9367_i]))._field_Kind);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_92532_m))))._field_Func))._field_Params[_9367_i]))._field_Decl))._field_Reference) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1d4ca4482_write((*(_self_))._field_oc, _9464_name);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1d4bd0864_possibleRefExpr(_self_, _93610_arg);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _9584_argS = jule::Any(_9464_name, &__jule_any_type4);;
				(*((*(_92532_m))))._field_Args[_9367_i]=(*(((jule::Any*)((&(_9584_argS))))));
			}
			_iter_next_1d86ae2ea:;
			++it;
			_9367_i++;
			goto _iter_begin_1d86ae2ea;
		}
		_iter_end_1d86ae2ea:;
	};
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_2075a7d95_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2075a93e6_Buf(&_9287_head));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4bd228e_pureFuncCall(_self_, _92532_m);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bd28aa_writeUseExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _97634_f, jule::Ptr<_1c6788b56_Data> _97649_d) {
	if ((_1c67c0dad_Tup((*(_97649_d))._field_Kind.ptr()) == nullptr)) {
		_1d4bd0864_possibleRefExpr(_self_, (*_97649_d.alloc)._field_Model);
		_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1c6663107_TupleExprModel> _9827_tup = (*_97649_d.alloc)._field_Model.cast_ptr<_1c6663107_TupleExprModel>(&__jule_any_type84);;
	_1d4cbd237_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1c67c0dad_Tup((*((*(_97634_f))))._field_Result.ptr()));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9827_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d86c05d6:;
		if (it != expr_end) {
			jule::I64 _9857_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _98510_data = *it;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_9857_i));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1d4bd0864_possibleRefExpr(_self_, (*(_98510_data))._field_Model);
				if ((((*(_9827_tup))._field_Datas.len() - _9857_i) > 1LL)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1d86c05d6:;
			++it;
			_9857_i++;
			goto _iter_begin_1d86c05d6;
		}
		_iter_end_1d86c05d6:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1d4bd2b63_funcCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665e9e9_FnCallExprModel> _99729_m) {
	if ((*(_99729_m))._field_IsCo) {
		_1d4bd2547_coFuncCall(_self_, &(_99729_m));
		return;;
	};
	if (((_1c666e9b5_IsBuiltin((*_99729_m.alloc)._field_Func.ptr()) || (!((*((*(*(_99729_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_99729_m.alloc)._field_Except != nullptr) && ((*(*(_99729_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1d4bd228e_pureFuncCall(_self_, &(_99729_m));
		return;;
	};
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1d4bd228e_pureFuncCall(_self_, &(_99729_m));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if (((*_99729_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_99729_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_99729_m.alloc)._field_Assigned)))) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1d4bc70db_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_99729_m.alloc)._field_Except);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _10255_forwarded = _1c73ba842_IsForwarded(&((*_99729_m.alloc)._field_Except));;
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_10255_forwarded) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _10309_stmt = (*(*(_99729_m))._field_Except.alloc)._field_Stmts[((*(*(_99729_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _10309_stmt };
				
				if (_match_expr.type == &__jule_any_type31) {
					_case_begin_1d838cc54:;
					{
						((*((*(_99729_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_99729_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1d4ca4938_addIndent((*(_self_))._field_oc);
						_1d4bc6d33_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_99729_m.alloc)._field_Except));
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1d4ca4d34_indent((*(_self_))._field_oc);
						_1d4bd28aa_writeUseExpr(_self_, &((*_99729_m.alloc)._field_Func), _10309_stmt.cast_ptr<_1c6788b56_Data>(&__jule_any_type31));
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1d4ca4b36_doneIndent((*(_self_))._field_oc);
						_1d4ca4d34_indent((*(_self_))._field_oc);
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1d838e1b7:;
					{
						_1d4bc70db_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_99729_m.alloc)._field_Except);
					}
				}
				_match_end_1d838e151:;
			};
			if (_10255_forwarded) {
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1d4bdad8b_initExpr(_self_, (*(*(_99729_m))._field_Func.alloc)._field_Result);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_99729_m.alloc)._field_Token));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1c666a9c2_IsVoid((*((*(_99729_m))._field_Func))._field_Decl)))) {
			_1d4ca4d34_indent((*(_self_))._field_oc);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	};
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1d4bd2e1b_slice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665edc3_SliceExprModel> _107026_m) {
	if (((*(_107026_m))._field_Elems.len() == 0LL)) {
		_1d4cb5d67_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107026_m.alloc)._field_ElemKind);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1d4cb5d67_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_107026_m.alloc)._field_ElemKind);
	jule::Str _10783_size = _1dd7115cd_Itoa((*_107026_m.alloc)._field_Elems.len());;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1d4ca4482_write((*(_self_))._field_oc, _10783_size);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4ca4482_write((*(_self_))._field_oc, _10783_size);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_107026_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d87ca218:;
		if (it != expr_end) {
			jule::I64 _10887_i = it - expr->begin();
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1d4bd0864_possibleRefExpr(_self_, (*(_107026_m))._field_Elems[_10887_i]);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d87ca218:;
			++it;
			_10887_i++;
			goto _iter_begin_1d87ca218;
		}
		_iter_end_1d87ca218:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1d4bd31c4_indexing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6660379_IndexingExprModel> _109929_m) {
	{
		auto &_match_expr{ (*((*(_109929_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d87ce096:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_20882a523_Production))) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*(_109929_m))._field_Token));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _11104_s = _1dd721a0b_ReadStr((*((*(_109929_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1dd71e850_Const>().ptr());;
				_1d4bdbb4a_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _11104_s);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_11104_s.len()));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*((*_109929_m.alloc)._field_Index))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1d87ce030:;
	};
	{
		
		if ((_1c67c0b27_Map((*((*_109929_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d87d7e5c:;
			{
				jule::Ptr<_1c67ca68c_Map> _11238__map = _1c67c0b27_Map((*((*(_109929_m))._field_Expr))._field_Kind);;
				jule::Ptr<_1c6655803_Struct> _11248_s = _1c69d21bd_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
				jule::Ptr<_1c665865d_StructIns> _11258_ins = _1c73beb98_FindStructGenericInstance(&(_11248_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_11238__map))._field_Key; (*it++) = (*_11238__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1c666d4ec_FnIns> _11278_f = (*(_1c6659708_FindMethod(_11258_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11278_f));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_109929_m))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_109929_m))._field_Index.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_20882a523_Production || (_1c67be5a4_Ptr((*((*_109929_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1c73bab50_IsExprComesFromBind(&((*_109929_m.alloc)._field_Expr))) {
			_case_begin_1d87d5597:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_109929_m))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_109929_m))._field_Index.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1d87d5487:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*((*_109929_m.alloc)._field_Expr))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_109929_m.alloc)._field_Token));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1d4bd0864_possibleRefExpr(_self_, (*(*(_109929_m))._field_Index.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1d87d2880:;
	};
}



inline void _1d4bd347c_unsafeIndexing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b8cec_UnsafeIndexingExprModel> _115135_m) {
	_1d4bd0864_possibleRefExpr(_self_, (*((*((*(_115135_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_20882a523_Production || (_1c67be5a4_Ptr((*(*((*(_115135_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1c67c0b27_Map((*((*((*(_115135_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1d87e452e:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1d4bd0864_possibleRefExpr(_self_, (*((*(*(_115135_m))._field_Node.alloc)._field_Index))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1d87e2087:;
			{
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1d4bd0864_possibleRefExpr(_self_, (*((*(*(_115135_m))._field_Node.alloc)._field_Index))._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1d87e2b37:;
	};
}



inline void _1d4bd3735_anonFunc(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel> _116829_m) {
	jule::Bool _11693_closure = _1c73bb25a_IsClosure(&(_116829_m));;
	jule::Str _11703_ident = _1d4ca5807_pushAnonFn((*(_self_))._field_oc, &(_116829_m));;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1d4cb8287_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_116829_m))._field_Func);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1d4ca4482_write((*(_self_))._field_oc, _11703_ident);
	if (_11693_closure) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1d4ca4482_write((*(_self_))._field_oc, _11703_ident);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1d4ca4482_write((*(_self_))._field_oc, _11703_ident);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_116829_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d87e8c2b:;
			if (it != expr_end) {
				jule::I64 _11829_i = it - expr->begin();
				jule::Ptr<_1c672acb3_Var> _118216_v = *it;
				{
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1d4be436c_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _118216_v);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1d4bce9d9_var(_self_, _118216_v);
					if ((((*_116829_m.alloc)._field_Captured.len() - _11829_i) > 1LL)) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1d87e8c2b:;
				++it;
				_11829_i++;
				goto _iter_begin_1d87e8c2b;
			}
			_iter_end_1d87e8c2b:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1d4ca4482_write((*(_self_))._field_oc, _11703_ident);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1d4bd39dd_mapExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66610d3_MapExprModel> _119928_m) {
	if (((*(_119928_m))._field_Entries.len() == 0LL)) {
		_1d4cb653d_mapType((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_119928_m.alloc)._field_Kind);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
		return;;
	};
	jule::Ptr<_1c6655803_Struct> _12067_s = _1c69d21bd_RuntimeFindStruct(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1c665865d_StructIns> _12077_ins = _1c73beb98_FindStructGenericInstance(&(_12067_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*_119928_m.alloc)._field_Kind))._field_Key; (*it++) = (*(*(_119928_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1c666d4ec_FnIns> _12097_f = (*(_1c6659708_FindMethod(_12077_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1d4cb653d_mapType((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_119928_m.alloc)._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	{
		auto expr = &((*_119928_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8809a61:;
		if (it != expr_end) {
			jule::Ptr<_1c6660c09_KeyValPairExprModel> _121715_pair = *it;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_12097_f));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*(_121715_pair))._field_Key);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1d4bd0864_possibleRefExpr(_self_, (*_121715_pair.alloc)._field_Val);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d8809a61:;
			++it;
			goto _iter_begin_1d8809a61;
		}
		_iter_end_1d8809a61:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1d4bd3c96_slicing(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6661666_SlicingExprModel> _123228_m) {
	_1d4bd0864_possibleRefExpr(_self_, (*(_123228_m))._field_Expr);
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_20882a523_Production))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_123228_m.alloc)._field_Token));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1d4bd0864_possibleRefExpr(_self_, (*_123228_m.alloc)._field_Left);
	if (((*_123228_m.alloc)._field_Right != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*_123228_m.alloc)._field_Right);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd404e_traitSub(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6661be9_TraitSubIdentExprModel> _124829_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1d4be33d2_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_124829_m))._field_Trt);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1d4bd0864_possibleRefExpr(_self_, (*_124829_m.alloc)._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_20882a523_Production))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_124829_m.alloc)._field_Token));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1d4be2d0a_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_124829_m.alloc)._field_Method));
}



inline void _1d4bd4307_structureSub(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666258a_StructSubIdentExprModel> _126433_m) {
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_126433_m))._field_Expr))._field_Model);
	if (((*_126433_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1d4be4081_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_126433_m.alloc)._field_Field))._field_Decl));
}



inline void _1d4bd45b0_array(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6662d0a_ArrayExprModel> _127326_m) {
	if ((((*((*(_127326_m))._field_Kind))._field_N == 0LL) || (((*_127326_m.alloc)._field_Elems.len() == 0LL) && (!(_1d4cc0811_ableToInit(&((*(*(_127326_m))._field_Kind.alloc)._field_Elem))))))) {
		_1d4cb7077_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_127326_m.alloc)._field_Kind);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_127326_m.alloc)._field_Elems.len() == 2LL) && ((*(_127326_m))._field_Elems[1LL] == nullptr))) {
		_1d4cb7077_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_127326_m.alloc)._field_Kind);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1d4bd0864_possibleRefExpr(_self_, (*(_127326_m))._field_Elems[0LL]);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1d4cb7077_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_127326_m.alloc)._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_127326_m.alloc)._field_Elems.len() != (*(*(_127326_m))._field_Kind.alloc)._field_N)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_127326_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d882561a:;
		if (it != expr_end) {
			jule::I64 _13067_i = it - expr->begin();
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1d4bd0864_possibleRefExpr(_self_, (*_127326_m.alloc)._field_Elems[_13067_i]);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1d882561a:;
			++it;
			_13067_i++;
			goto _iter_begin_1d882561a;
		}
		_iter_end_1d882561a:;
	};
	if ((((*_127326_m.alloc)._field_Elems.len() != (*(*(_127326_m))._field_Kind.alloc)._field_N) && _1d4cc0811_ableToInit(&((*(*(_127326_m))._field_Kind.alloc)._field_Elem)))) {
		_1d4bda572_fillCollectionByDefault(_self_, &((*(*(_127326_m))._field_Kind.alloc)._field_Elem));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1d4bd4868_funcInsCommon(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _132334_m) {
	_1d4cb85ea_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _132334_m);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd4b21_funcIns(_self_, _132334_m);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd4b21_funcIns(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _133028_m) {
	if ((((*(_133028_m))._field_Decl != nullptr) && (*(*(_133028_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1c6633d20_Directive> _13324_d = _1c73bcbda_FindDirective(&((*(*(_133028_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_13324_d != nullptr)) {
			_1d4ca473a_writeBytes((*(_self_))._field_oc, _1d4cb1071_concatAllParts((*_13324_d.alloc)._field_Args));
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_133028_m));
}



inline void _1d4bd4dc9_tuple(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6663107_TupleExprModel> _134126_m) {
	{
		auto expr = &((*_134126_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8832d53:;
		if (it != expr_end) {
			jule::I64 _13428_i = it - expr->begin();
			jule::Ptr<_1c6788b56_Data> _134215_d = *it;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*(_134215_d))._field_Model);
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_134126_m))._field_Datas.len() - _13428_i) > 1LL)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1d4ca4d34_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1d8832d53:;
			++it;
			_13428_i++;
			goto _iter_begin_1d8832d53;
		}
		_iter_end_1d8832d53:;
	};
}



inline void _1d4bd5182_newCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> _135228_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_135228_m))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_135228_m.alloc)._field_Init != nullptr)) {
		_1d4bd0864_possibleRefExpr(_self_, (*_135228_m.alloc)._field_Init);
	} else if (_1d4cc0811_ableToInit(&((*_135228_m.alloc)._field_Kind))) {
		_1d4bdad8b_initExpr(_self_, (*_135228_m.alloc)._field_Kind);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd543a_outCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> _136428_m) {
	if (((*(_136428_m))._field_Debug && _20882a523_Production)) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	jule::Ptr<_1c666a51b_Fn> _13697_decl = _1c68bd1b9_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1c666d4ec_FnIns> _13707_f = _1c73be714_FindFnGenericInstance(&(_13697_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_136428_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13707_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*(*(_136428_m))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1d4bd56e3_outlnCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> _137730_m) {
	if (((*(_137730_m))._field_Debug && _20882a523_Production)) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	jule::Ptr<_1c666a51b_Fn> _13827_decl = _1c68bd1b9_RuntimeFindFn(&((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
	jule::Ptr<_1c666d4ec_FnIns> _13837_f = _1c73be714_FindFnGenericInstance(&(_13827_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*_137730_m.alloc)._field_Expr))._field_Kind; __jule_collection; }));;
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13837_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*(*(_137730_m))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1d4bd599b_panicCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _139030_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1d4bd0864_possibleRefExpr(_self_, (*(_139030_m))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_139030_m.alloc)._field_Token));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1d4bd5c54_assertCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _139831_m) {
	if (_20882a523_Production) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1d4bd0864_possibleRefExpr(_self_, (*(_139831_m))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")) __jule_panic_s(jule::Str(", 28));
	_1d4bdbb4a_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_139831_m.alloc)._field_Log);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1d4ca67c5_locInfo((*(_self_))._field_oc, &((*_139831_m.alloc)._field_Token));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1d4bd600c_errorCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _141130_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1c666a9c2_IsVoid((*((*(_141130_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_141130_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d8849760:;
				{
					jule::Ptr<_1c672acb3_Var> _14165_v = (*((*(_141130_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
					if (((*(_14165_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1d88496e9:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1d4cbd90d_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_141130_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_141130_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1d884dcc5:;
				{
					jule::Ptr<_1c672acb3_Var> _14285_v = (*((*(_141130_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>();;
					if (((*(_14285_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1d884dc5e:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_141130_m))._field_Err))._field_Model);
	jule::I64 _14373_i = _1d4ca5b48_pushAnyType((*(_self_))._field_oc, (*(*(_141130_m))._field_Err.alloc)._field_Kind);;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_14373_i));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1d4bd62b5_copyCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665d41_BuiltinCopyCallExprModel> _144329_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_144329_m))._field_Dest))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4bd0864_possibleRefExpr(_self_, (*((*_144329_m.alloc)._field_Src))._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd656d_lenCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _145128_m) {
	jule::Ptr<_1c67ca68c_Map> _14527__map = _1c67c0b27_Map((*((*(_145128_m))._field_Expr))._field_Kind.ptr());;
	if ((_14527__map != nullptr)) {
		jule::Ptr<_1c6655803_Struct> _14548_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		jule::Ptr<_1c665865d_StructIns> _14558_ins = _1c73beb98_FindStructGenericInstance(&(_14548_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_14527__map.alloc)._field_Key; (*it++) = (*_14527__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1c666d4ec_FnIns> _14578_f = (*(_1c6659708_FindMethod(_14558_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14578_f));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*(*(_145128_m))._field_Expr.alloc)._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1d4bd0864_possibleRefExpr(_self_, (*(*(_145128_m))._field_Expr.alloc)._field_Model);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1d4bd6826_capCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666558d_BuiltinCapCallExprModel> _146828_m) {
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_146828_m))._field_Expr))._field_Model);
	_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1d4bd6ace_deleteCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _147331_m) {
	jule::Ptr<_1c67ca68c_Map> _14747__map = _1c67c0b27_Map((*((*(_147331_m))._field_Dest))._field_Kind.ptr());;
	if ((_14747__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1476:4"));;
	};
	jule::Ptr<_1c6655803_Struct> _14787_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1c665865d_StructIns> _14797_ins = _1c73beb98_FindStructGenericInstance(&(_14787_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14747__map))._field_Key; (*it++) = (*(_14747__map))._field_Val; __jule_collection; }));;
	;
	if (((*_147331_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1c666d4ec_FnIns> _14828_f = (*(_1c6659708_FindMethod(_14797_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14828_f));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*(*(_147331_m))._field_Dest.alloc)._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*(*(_147331_m))._field_Key.alloc)._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1c666d4ec_FnIns> _14908_f = (*(_1c6659708_FindMethod(_14797_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_14908_f));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*(*(_147331_m))._field_Dest.alloc)._field_Model);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1d4bd6d87_makeCallSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel>* _149835_m) {
	jule::Ptr<_1c67c8ee8_Slc> _14997_slice = _1c67c00dd_Slc((*((*(_149835_m))))._field_Kind.ptr());;
	jule::Bool _15003_init = _1d4cc0811_ableToInit(&((*(_14997_slice))._field_Elem));;
	if (_15003_init) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_149835_m))))._field_Kind);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_149835_m))))._field_Len);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_149835_m))))._field_Cap != nullptr)) {
		_1d4bd0864_possibleRefExpr(_self_, (*((*(_149835_m))))._field_Cap);
	} else {
		_1d4bd0864_possibleRefExpr(_self_, (*((*(_149835_m))))._field_Len);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_15003_init))) {
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1d4bda82a_initCollection(_self_, &((*_14997_slice.alloc)._field_Elem));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1d4bd7140_makeCallStr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel>* _152233_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1d4bd0864_possibleRefExpr(_self_, (*((*(_152233_m))))._field_Len);
	if (((*((*(_152233_m))))._field_Cap != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1d4bd0864_possibleRefExpr(_self_, (*((*(_152233_m))))._field_Cap);
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd73e8_makeCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _153329_m) {
	if ((_1c67c00dd_Slc((*(_153329_m))._field_Kind.ptr()) != nullptr)) {
		_1d4bd6d87_makeCallSlice(_self_, &(_153329_m));
		return;;
	};
	_1d4bd7140_makeCallStr(_self_, &(_153329_m));
}



inline void _1d4bd76a1_pushToSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b91c6_PushToSliceExprModel> _154132_m) {
	;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1d4cb5d67_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_154132_m))._field_Elems))._field_ElemKind);
	jule::Bool _15497_ptr = false;;
	{
		auto &_match_expr{ (*(_154132_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d8876d53:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _15538_u = (*(_154132_m))._field_Dest.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>();;
				if ((_1c67be5a4_Ptr((*((*(_15538_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1d4bd0864_possibleRefExpr(_self_, (*(*(_15538_u))._field_Expr.alloc)._field_Model);
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_15497_ptr=true;
					goto _match_end_1d8875846;
				};
				goto _case_begin_1d88758ac;
			}
		}
		else {
			_case_begin_1d88758ac:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1d4bd0864_possibleRefExpr(_self_, (*_154132_m.alloc)._field_Dest);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1d8875846:;
	};
	if (((*(*(_154132_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_15497_ptr) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1d4bd0864_possibleRefExpr(_self_, (*((*(_154132_m))._field_Elems))._field_Elems[0LL]);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_15497_ptr) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa((*(*(_154132_m))._field_Elems.alloc)._field_Elems.len()));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_154132_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d887e300:;
		if (it != expr_end) {
			jule::Any _158715_e = *it;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_15497_ptr) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1d4bd0864_possibleRefExpr(_self_, _158715_e);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1d887e300:;
			++it;
			goto _iter_begin_1d887e300;
		}
		_iter_end_1d887e300:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bd7959_appendToSlice(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b95a0_AppendToSliceExprModel> _160134_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*(_160134_m))._field_Dest);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1d4bd0864_possibleRefExpr(_self_, (*_160134_m.alloc)._field_Slice);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1d4bd7c12_appendCall(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _160931_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1d4bd0864_possibleRefExpr(_self_, (*(_160931_m))._field_Dest);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*_160931_m.alloc)._field_Elements);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd7eba_sizeof(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c66668be_SizeofExprModel> _161727_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1d4bd0864_possibleRefExpr(_self_, (*(_161727_m))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd8273_alignof(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6666aab_AlignofExprModel> _162328_m) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1d4bd0864_possibleRefExpr(_self_, (*(_162328_m))._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1d4bd852b_runeLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6666d53_RuneExprModel> _162924_m) {
	if (((*(_162924_m))._field_Code <= 127LL)) {
		_2075a8406_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _16328_b = _1d4bdb52e_sbtoa(static_cast<jule::U8>((*_162924_m.alloc)._field_Code));;
		if (_16328_b.equal("'", 1)) {
			_2075a8406_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_2075a814d_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16328_b);
		_2075a8406_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1d4bdc2cc_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_162924_m.alloc)._field_Code));
}



inline void _1d4bd87d4_structureStatic(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6662931_StructStaticIdentExprModel> _164336_m) {
	static__1d4be30e6_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_164336_m))._field_Method));
}



inline void _1d4bd8a8c_backendEmit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c666722c_BackendEmitExprModel> _164732_m) {
	if (((*(_164732_m))._field_Exprs.len() == 0LL)) {
		_1d4ca4482_write((*(_self_))._field_oc, (*_164732_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _16523_n = _2075a8dc9_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _16537_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_164732_m.alloc)._field_Exprs.len(), (*_164732_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_164732_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d888e541:;
		if (it != expr_end) {
			jule::I64 _16548_i = it - expr->begin();
			jule::Any _165415_expr = *it;
			{
				_1d4bd0864_possibleRefExpr(_self_, _165415_expr);
				jule::Slice<jule::U8> _16568_buf = _2075a93e6_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_16537_args[_16548_i]=jule::Any(__jule_bytesToStr(_16568_buf.slice(_16523_n)), &__jule_any_type4);
				{
					_2075a969e_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _16568_buf.slice(0LL, _16523_n));
				};
			}
			_iter_next_1d888e541:;
			++it;
			_16548_i++;
			goto _iter_begin_1d888e541;
		}
		_iter_end_1d888e541:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, _1c68a0058_Format((*_164732_m.alloc)._field_Code, _16537_args));
}



inline void _1d4bd8d45_free(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6667529_FreeExprModel> _166325_m) {
	_1d4bd0864_possibleRefExpr(_self_, (*(_166325_m))._field_Expr);
	if (_208829e18_RC) {
		_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1d4bd90ed_strComp(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b80d7_StrCompExprModel> _167228_m) {
	if ((*(_167228_m))._field_NotEq) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16763_s = _1dd721a0b_ReadStr((*_167228_m.alloc)._field_Right.ptr());;
	_1d4bd0864_possibleRefExpr(_self_, (*_167228_m.alloc)._field_Left);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1d4bdbb4a_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16763_s);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_16763_s.len()));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_167228_m.alloc)._field_NotEq) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1d4bd93a6_emptyCompare(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b77e0_EmptyCompareExprModel> _168833_m) {
	if ((*(_168833_m))._field_Neg) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1d4bd0864_possibleRefExpr(_self_, (*_168833_m.alloc)._field_Expr);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1d4bd965e_unsafeDeref(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68b9c76_UnsafeDerefExprModel> _169732_m) {
	{
		
		if ((_1c67be31d_Sptr((*((*((*(_169732_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d889d099:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1d4bd0864_possibleRefExpr(_self_, (*(*((*(_169732_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1d889cbd1:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1704:4"));;
			}
		}
		_match_end_1d889cac1:;
	};
}



inline void _1d4bd9917_unsafeCasting(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c68ba073_UnsafeCastingExprModel> _170834_m) {
	{
		
		if (_1c73bae19_IsAny(&((*((*(_170834_m))._field_Base))._field_ExprKind))) {
			_case_begin_1d88a0c7d:;
			{
				_1d4bd0864_possibleRefExpr(_self_, (*((*(*(_170834_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1c67be31d_Sptr((*(*(_170834_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c67be31d_Sptr((*((*(_170834_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1d4cb895d_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_170834_m))._field_Base.alloc)._field_Kind);
				};
				_1d4ca4482_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1d88a08b5:;
			{
				__jule_panic_s(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1721:4"));;
			}
		}
		_match_end_1d88a07c7:;
	};
}



inline void _1d4bd9bc0_model(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Any _172526_m) {
	{
		auto &_match_expr{ _172526_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d88a15ec:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, _172526_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1d88a6635:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, (*(_172526_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1d88a669b:;
			{
				_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _172526_m.cast_ptr<_1c67bb8d1_TypeKind>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d88a6712:;
			{
				_1d4bcc9b5_constant(_self_, _172526_m.cast_ptr<_1dd71e850_Const>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d88a6778:;
			{
				_1d4bce9d9_var(_self_, _172526_m.cast_ptr<_1c672acb3_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1d88a67de:;
			{
				_1d4bcec92_structureIns(_self_, _172526_m.cast_ptr<_1c665865d_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d88a6855:;
			{
				_1d4bd4868_funcInsCommon(_self_, _172526_m.cast_ptr<_1c666d4ec_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1d88a74c1:;
			{
				_1d4bcdca2_unsafeBinary(_self_, (*(_172526_m.unsafe_cast_ptr<_1c68b8967_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d88a7537:;
			{
				_1d4bce731_binary(_self_, _172526_m.cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d88a759d:;
			{
				_1d4bd004a_unary(_self_, _172526_m.cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d88a7614:;
			{
				_1d4bd0303_structureLit(_self_, _172526_m.cast_ptr<_1c665d7b7_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1d88a767a:;
			{
				_1d4bd05ab_allocStructure(_self_, _172526_m.cast_ptr<_1c665dab4_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d88a76e1:;
			{
				_1d4bd103a_casting(_self_, _172526_m.cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d88a7757:;
			{
				_1d4bd2b63_funcCall(_self_, _172526_m.cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1d88a77bd:;
			{
				_1d4bd2e1b_slice(_self_, _172526_m.cast_ptr<_1c665edc3_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1d88a7845:;
			{
				_1d4bd45b0_array(_self_, _172526_m.cast_ptr<_1c6662d0a_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1d88a78bc:;
			{
				_1d4bd347c_unsafeIndexing(_self_, _172526_m.cast_ptr<_1c68b8cec_UnsafeIndexingExprModel>(&__jule_any_type135));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d88a7944:;
			{
				_1d4bd31c4_indexing(_self_, _172526_m.cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d88a79bb:;
			{
				_1d4bd3735_anonFunc(_self_, _172526_m.cast_ptr<_1c6660830_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1d88a7a43:;
			{
				_1d4bd39dd_mapExpr(_self_, _172526_m.cast_ptr<_1c66610d3_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d88a7aba:;
			{
				_1d4bd3c96_slicing(_self_, _172526_m.cast_ptr<_1c6661666_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1d88a7b42:;
			{
				_1d4bd404e_traitSub(_self_, _172526_m.cast_ptr<_1c6661be9_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d88a7bb9:;
			{
				_1d4bd4307_structureSub(_self_, _172526_m.cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1d88a7c41:;
			{
				_1d4bd4dc9_tuple(_self_, _172526_m.cast_ptr<_1c6663107_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1d88a7cb8:;
			{
				_1d4bd543a_outCall(_self_, _172526_m.cast_ptr<_1c66634d1_BuiltinOutCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1d88a7d40:;
			{
				_1d4bd56e3_outlnCall(_self_, _172526_m.cast_ptr<_1c66638aa_BuiltinOutlnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1d88a7db7:;
			{
				_1d4bd5182_newCall(_self_, _172526_m.cast_ptr<_1c6663c84_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1d88a7e3e:;
			{
				_1d4bd599b_panicCall(_self_, _172526_m.cast_ptr<_1c666415d_BuiltinPanicCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1d88a7eb6:;
			{
				_1d4bd5c54_assertCall(_self_, _172526_m.cast_ptr<_1c6664614_BuiltinAssertCallExprModel>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1d88a803d:;
			{
				_1d4bd600c_errorCall(_self_, _172526_m.cast_ptr<_1c666621a_BuiltinErrorCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1d88a80b5:;
			{
				_1d4bd73e8_makeCall(_self_, _172526_m.cast_ptr<_1c6664aba_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1d88a813c:;
			{
				_1d4bd7c12_appendCall(_self_, _172526_m.cast_ptr<_1c6664e94_BuiltinAppendCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1d88a81b4:;
			{
				_1d4bd62b5_copyCall(_self_, _172526_m.cast_ptr<_1c6665d41_BuiltinCopyCallExprModel>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1d88a823b:;
			{
				_1d4bd656d_lenCall(_self_, _172526_m.cast_ptr<_1c6665291_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1d88a82b3:;
			{
				_1d4bd6826_capCall(_self_, _172526_m.cast_ptr<_1c666558d_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1d88a833a:;
			{
				_1d4bd6ace_deleteCall(_self_, _172526_m.cast_ptr<_1c6665967_BuiltinDeleteCallExprModel>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1d88a83b2:;
			{
				_1d4bd7eba_sizeof(_self_, _172526_m.cast_ptr<_1c66668be_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1d88a8439:;
			{
				_1d4bd8273_alignof(_self_, _172526_m.cast_ptr<_1c6666aab_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1d88a84b1:;
			{
				_1d4bd852b_runeLit(_self_, _172526_m.cast_ptr<_1c6666d53_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d88a8538:;
			{
				_1d4bd87d4_structureStatic(_self_, _172526_m.cast_ptr<_1c6662931_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1d88a85b0:;
			{
				_1d4bd8a8c_backendEmit(_self_, _172526_m.cast_ptr<_1c666722c_BackendEmitExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1d88a8637:;
			{
				_1d4bd8d45_free(_self_, _172526_m.cast_ptr<_1c6667529_FreeExprModel>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1d88a86ae:;
			{
				_1d4bd90ed_strComp(_self_, _172526_m.cast_ptr<_1c68b80d7_StrCompExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1d88a8736:;
			{
				_1d4bce9d9_var(_self_, (*(_172526_m.unsafe_cast_ptr<_1c68b7b64_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1d88a87ad:;
			{
				_1d4bd93a6_emptyCompare(_self_, _172526_m.cast_ptr<_1c68b77e0_EmptyCompareExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1d88a8835:;
			{
				_1d4bd965e_unsafeDeref(_self_, _172526_m.cast_ptr<_1c68b9c76_UnsafeDerefExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1d88a88ac:;
			{
				_1d4bd9917_unsafeCasting(_self_, _172526_m.cast_ptr<_1c68ba073_UnsafeCastingExprModel>(&__jule_any_type134));
			}
		}
		else {
			_case_begin_1d88a65be:;
			{
				_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1d88a64d1:;
	};
}



inline jule::Bool _1d4bda011_handleFieldByDefault(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c6657aad_FieldIns>* _182742_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_182742_f))))._field_Default != nullptr)) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1d4be4081_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182742_f))))._field_Decl));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1d4bd0864_possibleRefExpr(_self_, (*(*((*(_182742_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1d4cc0811_ableToInit(&((*((*(_182742_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1d4be4081_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_182742_f))))._field_Decl));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1d4bdad8b_initExpr(_self_, (*((*(_182742_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d4bda2b9_initStructLit(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _184835_s) {
	if ((*((*((*(_184835_s))))._field_Decl))._field_Binded) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1d4cb6c14_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184835_s)));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1d4cb6c14_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_184835_s)));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18577_inited = false;;
	{
		auto expr = &((*((*(_184835_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d88cb79d:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _185815_f = *it;
			{
				if (_18577_inited) {
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18577_inited=_1d4bda011_handleFieldByDefault(_self_, &(_185815_f));
			}
			_iter_next_1d88cb79d:;
			++it;
			goto _iter_begin_1d88cb79d;
		}
		_iter_end_1d88cb79d:;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1d4bda572_fillCollectionByDefault(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _187045_elem) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4bdad8b_initExpr(_self_, (*(_187045_elem)));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1d4bda82a_initCollection(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _188536_elem) {
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1d4bda572_fillCollectionByDefault(_self_, _188536_elem);
}



inline void _1d4bdaad3_initArray(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67cb319_Arr>* _189931_arr) {
	if (((*((*(_189931_arr))))._field_N == 0LL)) {
		_1d4cb7077_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189931_arr)));
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1d4cb7077_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_189931_arr)));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1d4bda82a_initCollection(_self_, &((*((*(_189931_arr))))._field_Elem));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1d4bdad8b_initExpr(jule::Ptr<_1d4bcb200_exprCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _191329_t) {
	if (_1c67bd7d4_NilCompatible(_191329_t.ptr())) {
		if ((_1c67c0b27_Map(_191329_t) != nullptr)) {
			_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _191329_t);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1c67be5a4_Ptr(_191329_t) != nullptr)) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _191329_t);
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c67c9adc_Tuple> _19287_tup = _1c67c0dad_Tup(_191329_t);;
	if ((_19287_tup != nullptr)) {
		_1d4cbd237_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _19287_tup);
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_19287_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d88e4e6a:;
			if (it != expr_end) {
				jule::I64 _19329_i = it - expr->begin();
				jule::Ptr<_1c67bb8d1_TypeKind> _193216_tt = *it;
				{
					if ((!(_1d4cc0adb_shouldInitialized(&(_193216_tt))))) {
						goto _iter_next_1d88e4e6a;
					};
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1d4ca4482_write((*(_self_))._field_oc, _1dd7115cd_Itoa(_19329_i));
					_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1d4bdad8b_initExpr(_self_, _193216_tt);
					if ((((*_19287_tup.alloc)._field_Types.len() - _19329_i) > 1LL)) {
						_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1d88e4e6a:;
				++it;
				_19329_i++;
				goto _iter_begin_1d88e4e6a;
			}
			_iter_end_1d88e4e6a:;
		};
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1c66816a8_Enum> _19477_enm = _1c67be83a_Enum(_191329_t);;
	if ((_19477_enm != nullptr)) {
		_1d4bd9bc0_model(_self_, (*((*((*((*_19477_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _19523_prim = _1c67be087_Prim(_191329_t);;
	if ((_19523_prim != nullptr)) {
		if (_1dd71e344_IsNum((*_19523_prim.alloc)._field_Kind)) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1c67c7c2d_IsBool(_19523_prim)) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1c67c7eb4_IsStr(_19523_prim)) {
			_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c67bed57_Arr(_191329_t) != nullptr)) {
		jule::Ptr<_1c67cb319_Arr> _19648_arr = _1c67bed57_Arr(_191329_t);;
		_1d4bdaad3_initArray(_self_, &(_19648_arr));
		return;;
	};
	jule::Ptr<_1c665865d_StructIns> _19687_s = _1c67c060a_Struct(_191329_t);;
	if ((_19687_s != nullptr)) {
		_1d4bda2b9_initStructLit(_self_, &(_19687_s));
		return;;
	};
	_1d4cb895d_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _191329_t);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1d4bddc5c_TestCoder_eq(_1d4bddc5c_TestCoder *_self_, _1d4bddc5c_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1d4bddc5c_TestCoder> static__1d4bde213_New(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1d4bddc5c_TestCoder>(_1d4bddc5c_TestCoder{._field_t=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1d4bde499_findTestingPackage(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8900a47:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1d8900a47:;
			++it;
			goto _iter_begin_1d8900a47;
		}
		_iter_end_1d8900a47:;
	};
	return nullptr;;
}



inline void _1d4bde752_appendTest(jule::Ptr<_1d4bddc5c_TestCoder> _self_, jule::Ptr<_1c666d4ec_FnIns> _4431_f) {
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4bdee8e_callTmReset(_self_);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1d4bdbb4a_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	static__1d4be30e6_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1d4bdea0a_appendPackageTests(jule::Ptr<_1d4bddc5c_TestCoder> _self_, jule::Ptr<_1c66d9304_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8907323:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8907ca2:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _6116_f = *it;
						{
							if (_1c73bd0a3_HasDirective(&((*(_6116_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1d4bde752_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1d8907ca2:;
						++it;
						goto _iter_begin_1d8907ca2;
					}
					_iter_end_1d8907ca2:;
				};
			}
			_iter_next_1d8907323:;
			++it;
			goto _iter_begin_1d8907323;
		}
		_iter_end_1d8907323:;
	};
}



inline jule::Bool _1d4bdec91_readyTestingPackage(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	jule::Ptr<_1c66d63cd_ImportInfo> _707_p = _1d4bde499_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1c66d75dd_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1c6659708_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1c6659708_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1c6659708_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1d4bdee8e_callTmReset(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	static__1d4be2d0a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d4be018c_callTmFailed(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	static__1d4be2d0a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d4be038a_callTmSkipped(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	static__1d4be2d0a_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1d4be0588_Serialize(jule::Ptr<_1d4bddc5c_TestCoder> _self_) {
	_1d4cb09dd_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1d4cb047c_end((*(_self_))._field_oc);
	});;
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	if ((!(_1d4bdec91_readyTestingPackage(_self_)))) {
		_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1d4ca4b36_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_20759e353_StrBuilder _1187_tb = static__2075a7c41_New(40LL);;
	_1d4cb6c14_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1d4cb4b57_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _2075a93e6_Buf(&_1187_tb));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1d4ca473a_writeBytes((*(_self_))._field_oc, _2075a93e6_Buf(&_1187_tb));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1d4ca4938_addIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1d4be018c_callTmFailed(_self_);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1d4be038a_callTmSkipped(_self_);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1d4bdea0a_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1d4ca4b36_doneIndent((*(_self_))._field_oc);
	_1d4ca4d34_indent((*(_self_))._field_oc);
	_1d4ca4482_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}








inline jule::Bool _1d4be1bd8_identCoder_eq(_1d4be1bd8_identCoder *_self_, _1d4be1bd8_identCoder _other_) { return true; }

inline void static__1d4be2227_writeIdentTo(_20759e353_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8922915:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1d8922c89;
				};
			}
			_iter_next_1d8922915:;
			++it;
			goto _iter_begin_1d8922915;
		}
		_iter_end_1d8922915:;
	};
	_2075a814d_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1d8922c89:;
	{
		auto expr = _3548_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _4610_r;
		_iter_begin_1d89237c3:;
		__jule_runeStep(it, end - it, &_4610_r, &len);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_2075a8406_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1d89237c3;
				};
				_2075a814d_WriteStr(_3530_buf, _1dd711314_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1d89237c3:;
			it += len;
			goto _iter_begin_1d89237c3;
		}
	};
}



inline void static__1d4be25bd_toOut(_20759e353_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_2075a8406_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_2075a814d_WriteStr(_6323_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_2075a8406_WriteByte(_6323_buf, '_');
	};
	static__1d4be2227_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1d4be2a1e_toLocal(_20759e353_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_2075a8406_WriteByte(_7825_buf, '_');
	_2075a814d_WriteStr(_7825_buf, _1dd7115cd_Itoa(_7842_row));
	_2075a814d_WriteStr(_7825_buf, _1dd7115cd_Itoa(_7852_col));
	_2075a8406_WriteByte(_7825_buf, '_');
	static__1d4be2227_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1d4be2d0a_func(_20759e353_StrBuilder* _8622_buf, jule::Ptr<_1c666a51b_Fn>* _8644_f) {
	{
		
		if ((*((*(_8644_f))))._field_Binded) {
			_case_begin_1d8927c06:;
			{
				_2075a814d_WriteStr(_8622_buf, (*((*(_8644_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8644_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1d8927ca0:;
			{
				_2075a814d_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1c666ac58_IsMethod((*(_8644_f)).ptr())) {
			_case_begin_1d8927d16:;
			{
				if ((*((*(_8644_f))))._field_Statically) {
					_2075a814d_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1d8927a91:;
	};
	jule::Ptr<_1c6633d20_Directive> _993_export = _1c73bcbda_FindDirective(&((*((*(_8644_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_993_export != nullptr)) {
		_2075a814d_WriteStr(_8622_buf, (*((*_993_export.alloc)._field_Args[0LL]))._field_Kind);
		return;;
	};
	static__1d4be25bd_toOut(_8622_buf, (*((*(_8644_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8644_f))));
}



inline void static__1d4be30e6_funcIns(_20759e353_StrBuilder* _10725_buf, jule::Ptr<_1c666d4ec_FnIns>* _10747_f) {
	if (_1c666e9b5_IsBuiltin((*(_10747_f)).ptr())) {
		_2075a814d_WriteStr(_10725_buf, jule::Str::lit("jule::", 6));
		_2075a814d_WriteStr(_10725_buf, (*((*((*(_10747_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10747_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10747_f))))._field_Generics.len() == 0LL))) {
		static__1d4be2d0a_func(_10725_buf, &((*((*(_10747_f))))._field_Decl));
		return;;
	};
	static__1d4be25bd_toOut(_10725_buf, (*(*((*(_10747_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10747_f))));
}



inline void static__1d4be33d2_traitDecl(_20759e353_StrBuilder* _12227_buf, jule::Ptr<_1c667de9c_Trait> _12244_t) {
	static__1d4be25bd_toOut(_12227_buf, (*(_12244_t))._field_Ident, static_cast<jule::Uintptr>(_12244_t));
}



inline void static__1d4be36bd_param(_20759e353_StrBuilder* _12623_buf, jule::Ptr<_1c6668a47_Param>* _12641_p) {
	if ((_1c6621ec8_IsAnonIdent((*((*(_12641_p))))._field_Ident) || _1c6621c0e_IsIgnoreIdent((*((*(_12641_p))))._field_Ident))) {
		return;;
	};
	if (_1c6669196_IsSelf((*(_12641_p)).ptr())) {
		_2075a814d_WriteStr(_12623_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12641_p))))._field_Token == nullptr)) {
		static__1d4be2a1e_toLocal(_12623_buf, 0LL, 0LL, &((*((*(_12641_p))))._field_Ident));
		return;;
	};
	static__1d4be2a1e_toLocal(_12623_buf, (*((*((*(_12641_p))))._field_Token))._field_Row, (*((*((*(_12641_p))))._field_Token))._field_Column, &((*((*(_12641_p))))._field_Ident));
}



inline void static__1d4be39a9_structure(_20759e353_StrBuilder* _14127_buf, jule::Ptr<_1c6655803_Struct>* _14145_s) {
	if ((*((*(_14145_s))))._field_Binded) {
		if ((!(_1c73bd0a3_HasDirective(&((*((*(_14145_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			_2075a814d_WriteStr(_14127_buf, jule::Str::lit("struct ", 7));
		};
		_2075a814d_WriteStr(_14127_buf, (*((*(_14145_s))))._field_Ident);
		return;;
	};
	static__1d4be25bd_toOut(_14127_buf, (*((*(_14145_s))))._field_Ident, static_cast<jule::Uintptr>((*(_14145_s))));
}



inline void static__1d4be3c95_structureIns(_20759e353_StrBuilder* _15230_buf, jule::Ptr<_1c665865d_StructIns>* _15248_s) {
	if (((*((*((*(_15248_s))))._field_Decl))._field_Binded || ((*((*(_15248_s))))._field_Generics.len() == 0LL))) {
		static__1d4be39a9_structure(_15230_buf, &((*((*(_15248_s))))._field_Decl));
		return;;
	};
	static__1d4be25bd_toOut(_15230_buf, (*(*((*(_15248_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_15248_s))));
}



inline void static__1d4be4081_field(_20759e353_StrBuilder* _16023_buf, jule::Ptr<_1c66528cc_Field>* _16041_f) {
	if ((*((*((*(_16041_f))))._field_Owner))._field_Binded) {
		_2075a814d_WriteStr(_16023_buf, (*((*(_16041_f))))._field_Ident);
		return;;
	};
	_2075a814d_WriteStr(_16023_buf, jule::Str::lit("_field_", 7));
	static__1d4be2227_writeIdentTo(_16023_buf, &((*((*(_16041_f))))._field_Ident));
}



inline void static__1d4be436c_var(_20759e353_StrBuilder* _17021_buf, jule::Ptr<_1c672acb3_Var> _17042_v) {
	{
		
		if ((*(_17042_v))._field_Binded) {
			_case_begin_1d893e679:;
			{
				_2075a814d_WriteStr(_17021_buf, (*_17042_v.alloc)._field_Ident);
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1d893d898:;
			{
				_2075a814d_WriteStr(_17021_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if (((*(_17042_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1d893c930:;
			{
				_2075a814d_WriteStr(_17021_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_17042_v))._field_RetOrder == -1LL)) {
			_case_begin_1d893c996:;
			{
				_2075a814d_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_17042_v))._field_RetOrder >= 0LL)) {
			_case_begin_1d893ca0c:;
			{
				_2075a814d_WriteStr(_17021_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_2075a814d_WriteStr(_17021_buf, _1dd7115cd_Itoa((*_17042_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_17042_v))._field_Scope != nullptr)) {
			_case_begin_1d893ca73:;
			{
				static__1d4be2a1e_toLocal(_17021_buf, (*((*_17042_v.alloc)._field_Token))._field_Row, (*(*(_17042_v))._field_Token.alloc)._field_Column, &((*_17042_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1d893c8b9:;
			{
				jule::Ptr<_1c6633d20_Directive> _1884_export = _1c73bcbda_FindDirective(&((*(_17042_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1884_export != nullptr)) {
					_2075a814d_WriteStr(_17021_buf, (*((*_1884_export.alloc)._field_Args[0LL]))._field_Kind);
					return;;
				};
				static__1d4be25bd_toOut(_17021_buf, (*_17042_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_17042_v));
			}
		}
		_match_end_1d893c7a9:;
	};
}



inline void static__1d4be4658_iterBegin(_20759e353_StrBuilder* _19727_buf, jule::Uintptr _19744_it) {
	_2075a814d_WriteStr(_19727_buf, jule::Str::lit("_iter_begin_", 12));
	_2075a814d_WriteStr(_19727_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_19744_it), 15LL));
}



inline void static__1d4be4944_iterEnd(_20759e353_StrBuilder* _20225_buf, jule::Uintptr _20242_it) {
	_2075a814d_WriteStr(_20225_buf, jule::Str::lit("_iter_end_", 10));
	_2075a814d_WriteStr(_20225_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_20242_it), 15LL));
}



inline void static__1d4be4c30_iterNext(_20759e353_StrBuilder* _20726_buf, jule::Uintptr _20743_it) {
	_2075a814d_WriteStr(_20726_buf, jule::Str::lit("_iter_next_", 11));
	_2075a814d_WriteStr(_20726_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_20743_it), 15LL));
}



inline void static__1d4be501b_label(_20759e353_StrBuilder* _21223_buf, jule::Uintptr _21240_u) {
	_2075a814d_WriteStr(_21223_buf, jule::Str::lit("_julec_label_", 13));
	_2075a814d_WriteStr(_21223_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_21240_u), 15LL));
}



inline void static__1d4be5307_matchEnd(_20759e353_StrBuilder* _21726_buf, jule::Uintptr _21743_m) {
	_2075a814d_WriteStr(_21726_buf, jule::Str::lit("_match_end_", 11));
	_2075a814d_WriteStr(_21726_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_21743_m), 15LL));
}



inline void static__1d4be55e3_caseBegin(_20759e353_StrBuilder* _22227_buf, jule::Uintptr _22244_c) {
	_2075a814d_WriteStr(_22227_buf, jule::Str::lit("_case_begin_", 12));
	_2075a814d_WriteStr(_22227_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>(_22244_c), 15LL));
}








inline jule::Bool _1d4ca1eeb_SerializationInfo_eq(_1d4ca1eeb_SerializationInfo *_self_, _1d4ca1eeb_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1d4ca2419_traitCast_eq(_1d4ca2419_traitCast *_self_, _1d4ca2419_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1d4ca27e3_anonHash_eq(_1d4ca27e3_anonHash *_self_, _1d4ca27e3_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}





inline jule::Ptr<_1d4ca3c9a_ObjectCoder> static__1d4ca41c9_New(jule::Ptr<_1c73b4d7a_IR>* _11721_ir, _1d4ca1eeb_SerializationInfo _11730_info) {
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _1187_oc = jule::new_ptr<_1d4ca3c9a_ObjectCoder>(_1d4ca3c9a_ObjectCoder{._field_Buf=_20759e353_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_20759e353_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_20759e353_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_20759e353_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_20759e353_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11721_ir)), ._field_info=_11730_info, ._field_anons=jule::Slice<jule::Ptr<_1d4ca27e3_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=_1d83252b3__Map{}, ._field_anyTypeMap=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1d4ca2419_traitCast>(nullptr), ._field_traitMetMap=_1d83713ec__Map{}, ._field_ec=jule::Ptr<_1d4bcb200_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1d4bbe91e_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1d4cb375a_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0});;
	(*(_1187_oc))._field_ec=static__1d4bcb5eb_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_sc=static__1d4bc0117_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_tc=static__1d4cb3caa_new(&(_1187_oc));
	return _1187_oc;;
}



inline void _1d4ca4482_write(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Str _12822_s) {
	_2075a814d_WriteStr(&(*(_self_))._field_Buf, _12822_s);
}



inline void _1d4ca473a_writeBytes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b) {
	_2075a7d95_Write(&(*(_self_))._field_Buf, _13227_b);
}



inline void _1d4ca4938_addIndent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1d4ca4b36_doneIndent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1d4ca4d34_indent(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_2075a7d95_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1d4ca5175_findAnyType(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _15133_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8953ddb:;
		if (it != expr_end) {
			jule::I64 _1528_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _15215_at = *it;
			{
				if (_1c67bc11d_Equal(_15215_at, (*(_15133_t)))) {
					return _1528_i;;
				};
			}
			_iter_next_1d8953ddb:;
			++it;
			_1528_i++;
			goto _iter_begin_1d8953ddb;
		}
		_iter_end_1d8953ddb:;
	};
	return -1LL;;
}



inline jule::I64 _1d4ca54b6_pushDealloc(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _16032_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d895499c:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _16110_dt = *it;
			{
				if (_1c67bc11d_Equal(_16110_dt, _16032_t)) {
					return _1617_i;;
				};
			}
			_iter_next_1d895499c:;
			++it;
			_1617_i++;
			goto _iter_begin_1d895499c;
		}
		_iter_end_1d895499c:;
	};
	jule::I64 _1663_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16032_t; __jule_collection; }));
	_2075a814d_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_2075a814d_WriteStr(&(*_self_.alloc)._field_deallocObj, _1dd7115cd_Itoa(_1663_i));
	_2075a814d_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1d4cb895d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16032_t);
	_2075a814d_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1663_i;;
}



inline jule::Str _1d4ca5807_pushAnonFn(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _17632_m) {
	jule::Str __jule_func_result;
	jule::Bool _1773_closure = _1c73bb25a_IsClosure(_17632_m);;
	if (_1773_closure) {
		_2075a814d_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1814_l = _2075a8dc9_Len(&(*_self_.alloc)._field_anonObj);;
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL));
		__jule_func_result=__jule_bytesToStr(_2075a93e6_Buf(&(*_self_.alloc)._field_anonObj).slice(_1814_l));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17632_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c63a8db4:;
			if (it != expr_end) {
				jule::Ptr<_1c672acb3_Var> _18616_v = *it;
				{
					_2075a8406_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1d4cb895d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18616_v))._field_Kind))._field_Kind);
					_2075a8406_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18616_v.alloc)._field_Reference) {
						_2075a8406_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1d4be436c_var(&((*_self_.alloc)._field_anonObj), _18616_v);
					_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c63a8db4:;
				++it;
				goto _iter_begin_1c63a8db4;
			}
			_iter_end_1c63a8db4:;
		};
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1d4ca27e3_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1d4ca27e3_anonHash>(_1d4ca27e3_anonHash{._field_expr=(*(_17632_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1d4cab698_anonFuncInsDecl(_self_, _17632_m, __jule_func_result);
	_2075a8406_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1d4ca5b48_pushAnyType(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _21632_t) {
	jule::Ptr<_1c67bb8d1_TypeKind> _2177_orig = _21632_t;;
	if ((_1c67be83a_Enum(_21632_t.ptr()) != nullptr)) {
		_21632_t=(*((*(_1c67be83a_Enum(_21632_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2217_i = _1d4ca5175_findAnyType(_self_, &(_21632_t));;
	if ((_2217_i != -1LL)) {
		return _2217_i;;
	};
	_2217_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21632_t; __jule_collection; }));
	jule::Str _2273_si = _1dd7115cd_Itoa(_2217_i);;
	if ((_1c67be31d_Sptr(_21632_t) != nullptr)) {
		_20759e353_StrBuilder _2298_elemKind = static__2075a7c41_New(40LL);;
		_1d4cb895d_kind((*_self_.alloc)._field_tc.ptr(), &(_2298_elemKind), (*(_1c67be31d_Sptr(_21632_t)))._field_Elem);
		jule::I64 _2334_di = _1d4ca54b6_pushDealloc(_self_, (*(_1c67be31d_Sptr(_21632_t)))._field_Elem);;
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _1dd7115cd_Itoa(_2334_di));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1d4cb4b57_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _2075a93e6_Buf(&_2298_elemKind));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2524_comparable = _1c67bd031_Comparable(_21632_t);;
		_20759e353_StrBuilder _2538_kindB = static__2075a7c41_New(40LL);;
		_1d4cb895d_kind((*_self_.alloc)._field_tc.ptr(), &(_2538_kindB), _21632_t);
		jule::Str _2554_kind = _2075a8945_Str(&_2538_kindB);;
		jule::I64 _2584_di = _1d4ca54b6_pushDealloc(_self_, _21632_t);;
		if (_2524_comparable) {
			jule::Str _2649_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_2649_lmodel+=_2554_kind;
			_2649_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _2679_rmodel = _2649_lmodel;;
			_2679_rmodel+=jule::Str::lit("other)", 6);
			_2649_lmodel+=jule::Str::lit("alloc)", 6);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1d4bcd9e9__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_2649_lmodel), &(_2679_rmodel), &(_21632_t), &(_21632_t), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
		jule::Ptr<_1c666a51b_Fn> _2828_decl = _1c68bd1b9_RuntimeFindFn(&((*((*_self_.alloc)._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5)));;
		jule::Ptr<_1c666d4ec_FnIns> _2838_f = _1c73be714_FindFnGenericInstance(&(_2828_decl), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2177_orig; __jule_collection; }));;
		static__1d4be30e6_funcIns(&((*_self_.alloc)._field_anyObj), &(_2838_f));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
		if ((_1c67be5a4_Ptr(_21632_t) == nullptr)) {
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2554_kind);
		} else {
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2554_kind);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _1dd7115cd_Itoa(_2584_di));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2524_comparable) {
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
		_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2524_comparable) {
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2554_kind);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _2273_si);
			_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2217_i;;
}



inline void _1d4ca5e01_pushResultIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _32735_f) {
	jule::Str _3283_s = __jule_bytesToStr(_1d4cbdc1b_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_32735_f))))._field_Result)));;
	jule::Bool _3296_ok;
	_1d8325db8_lookup(&(*_self_.alloc)._field_resultMap, _3283_s, nullptr, &(_3296_ok));
	if (_3296_ok) {
		return;;
	};
	(*_1d8326171_set(&(*_self_.alloc)._field_resultMap, _3283_s))=false;
	_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, _3283_s);
	_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1c67c0dad_Tup((*((*(_32735_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63d0a9a:;
		if (it != expr_end) {
			jule::I64 _3378_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _33715_t = *it;
			{
				_2075a8406_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1d4cb895d_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _33715_t);
				_2075a8406_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, _1dd7115cd_Itoa(_3378_i));
				_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c63d0a9a:;
			++it;
			_3378_i++;
			goto _iter_begin_1c63d0a9a;
		}
		_iter_end_1c63d0a9a:;
	};
	_2075a814d_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1d4ca61a9_pushResult(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _34832_f) {
	if ((_1c666a9c2_IsVoid((*(_34832_f)).ptr()) || ((*((*((*(_34832_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3527_n = (*((*(_34832_f))))._field_Instances.len();;
	if (((*((*(_34832_f))))._field_Generics.len() == 0LL)) {
		_3527_n=1LL;
	};
	{
		auto expr = (*((*(_34832_f))))._field_Instances.slice(0LL, _3527_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c63d5b7c:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _35615_ins = *it;
			{
				_1d4ca5e01_pushResultIns(_self_, &(_35615_ins));
			}
			_iter_next_1c63d5b7c:;
			++it;
			goto _iter_begin_1c63d5b7c;
		}
		_iter_end_1c63d5b7c:;
	};
}



inline void _1d4ca651c_pushAndWriteMaskMapper(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait> _36143_t1, jule::Ptr<_1c667de9c_Trait> _36159_t2) {
	_20759e353_StrBuilder _3627_ident = static__2075a7c41_New(32LL);;
	_2075a814d_WriteStr(&_3627_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_2075a814d_WriteStr(&_3627_ident, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_36159_t2)), 15LL));
	_2075a814d_WriteStr(&_3627_ident, jule::Str::lit("_to_", 4));
	_2075a814d_WriteStr(&_3627_ident, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_36143_t1)), 15LL));
	_2075a7d95_Write(&(*(_self_))._field_Buf, _2075a93e6_Buf(&_3627_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63d8a09:;
		if (it != expr_end) {
			_1d4ca2419_traitCast _37010_m = *it;
			{
				if (((_37010_m._field_t1 == _36143_t1) && (_37010_m._field_t2 == _36159_t2))) {
					return;;
				};
			}
			_iter_next_1c63d8a09:;
			++it;
			goto _iter_begin_1c63d8a09;
		}
		_iter_end_1c63d8a09:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1d4ca2419_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1d4ca2419_traitCast{._field_t1=_36143_t1, ._field_t2=_36159_t2}; __jule_collection; }));
	;
	_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_2075a7d95_Write(&(*_self_.alloc)._field_anyObj, _2075a93e6_Buf(&_3627_ident));
	_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_20759e353_StrBuilder _3847_t1Ident = static__2075a7c41_New(16LL);;
	_20759e353_StrBuilder _3857_t2Ident = static__2075a7c41_New(16LL);;
	static__1d4be33d2_traitDecl(&(_3847_t1Ident), _36143_t1);
	static__1d4be33d2_traitDecl(&(_3857_t2Ident), _36159_t2);
	{
		auto expr = &((*(_36143_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63d9136:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _38915_s1 = *it;
			{
				{
					auto expr = &((*(_36159_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c63dd13a:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _39011_s2 = *it;
						{
							if ((_38915_s1 == _39011_s2)) {
								{
									auto expr = &((*(_38915_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c63de02b:;
									if (it != expr_end) {
										jule::Ptr<_1c665865d_StructIns> _39218_s1i = *it;
										{
											jule::I64 _3937_i1 = _1c73bdadc_FindTraitTypeOffsetS(_36143_t1, _39218_s1i);;
											jule::I64 _3947_i2 = _1c73bdadc_FindTraitTypeOffsetS(_36159_t2, _39218_s1i);;
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_2075a7d95_Write(&(*_self_.alloc)._field_anyObj, _2075a93e6_Buf(&_3857_t2Ident));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _1dd7115cd_Itoa(_3947_i2));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_2075a7d95_Write(&(*_self_.alloc)._field_anyObj, _2075a93e6_Buf(&_3847_t1Ident));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, _1dd7115cd_Itoa(_3937_i1));
											_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1c63de02b:;
										++it;
										goto _iter_begin_1c63de02b;
									}
									_iter_end_1c63de02b:;
								};
							};
						}
						_iter_next_1c63dd13a:;
						++it;
						goto _iter_begin_1c63dd13a;
					}
					_iter_end_1c63dd13a:;
				};
			}
			_iter_next_1c63d9136:;
			++it;
			goto _iter_begin_1c63d9136;
		}
		_iter_end_1c63d9136:;
	};
	_2075a814d_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
}



inline void _1d4ca67c5_locInfo(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c661e327_Token>* _41225_t) {
	jule::Str *_4134_loc = &((*((*((*(_41225_t))))._field_File))._field_Path);;
	if (_20882a523_Production) {
		{
			
			if (_208769198_HasPrefix((*(_4134_loc)), _208821eed_PathStdlib)) {
				_case_begin_1c63e451a:;
				{
					_1d4bdb81a_cstrBytes(&((*(_self_))._field_Buf), (*(_4134_loc)).slice((_2087752c5_Dir(_208821eed_PathStdlib).len() + 1LL)));
				}
			}
			else if (_208769198_HasPrefix((*(_4134_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c63e45e7:;
				{
					_1d4bdb81a_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_4134_loc)).slice((_2087752c5_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c63e4152:;
				{
					_1d4bdb81a_cstrBytes(&((*(_self_))._field_Buf), (*(_4134_loc)));
				}
			}
			_match_end_1c63e4075:;
		};
	} else {
		_1d4bdb81a_cstrBytes(&((*(_self_))._field_Buf), (*(_4134_loc)));
	};
	_1d4ca4482_write(_self_, jule::Str::lit(":", 1));
	_1d4ca4482_write(_self_, _1dd7115cd_Itoa((*((*(_41225_t))))._field_Row));
	_1d4ca4482_write(_self_, jule::Str::lit(":", 1));
	_1d4ca4482_write(_self_, _1dd7115cd_Itoa((*((*(_41225_t))))._field_Column));
}



inline void _1d4ca69c3_head(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4c98465_Time _4393_time = static__1d4c98a5e_Now();;
	_1d4c97c8e_AbsTime _4403_abs = _1d4c9a247_Abs(&_4393_time);;
	_1d4ca4482_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1d4ca4482_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1d4ca4482_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
	_1d4ca4482_write(_self_, jule::Str::lit("// Date: ", 9));
	_1d4ca4482_write(_self_, _1dd710e4b_FmtUint(_4403_abs._field_Day, 10LL));
	_1d4ca4482_write(_self_, jule::Str::lit("/", 1));
	_1d4ca4482_write(_self_, _1dd710e4b_FmtUint(_4403_abs._field_Month, 10LL));
	_1d4ca4482_write(_self_, jule::Str::lit("/", 1));
	_1d4ca4482_write(_self_, _1dd710e4b_FmtUint(_4403_abs._field_Year, 10LL));
	_1d4ca4482_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1d4ca4482_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
	_1d4ca4482_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	if (_20882a523_Production) {
		_1d4ca4482_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_208829e18_RC))) {
		_1d4ca4482_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_20882a2d1_Safety))) {
		_1d4ca4482_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1d4ca6c7b_links(_self_, true);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1d4ca4482_write(_self_, _2088227e5_PathApi);
	_1d4ca4482_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1d4ca6c7b_links(_self_, false);
}



inline void _1d4ca6c7b_links(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Bool _47922_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6401219:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _48010_used = *it;
			{
				{
					
					if ((!((*(_48010_used))._field_Binded))) {
						_case_begin_1c6402050:;
						{
							goto _iter_next_1c6401219;
						}
					}
					else if (_20806208a_IsStdHeaderPath((*(_48010_used))._field_Path)) {
						_case_begin_1c64020d8:;
						{
							if ((!(_47922_std))) {
								goto _iter_next_1c6401219;
							};
							_1d4ca4482_write(_self_, jule::Str::lit("#include ", 9));
							_1d4ca4482_write(_self_, (*_48010_used.alloc)._field_Path);
							_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_208062365_IsValidHeaderExt(_208774868_Ext((*(_48010_used))._field_Path))) {
						_case_begin_1c640214e:;
						{
							if (_47922_std) {
								goto _iter_next_1c6401219;
							};
							_1d4ca4482_write(_self_, jule::Str::lit("#include \"", 10));
							_1d4ca4482_write(_self_, (*_48010_used.alloc)._field_Path);
							_1d4ca4482_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c6401deb:;
				};
			}
			_iter_next_1c6401219:;
			++it;
			goto _iter_begin_1c6401219;
		}
		_iter_end_1c6401219:;
	};
}



inline void _1d4ca7034_prepareStructure(_1d4ca3c9a_ObjectCoder* _self_, jule::Ptr<_1c6655803_Struct>* _50237_s) {
	{
		auto expr = &((*((*(_50237_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6401ba9:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _50315_ins = *it;
			{
				{
					auto expr = &((*(_50315_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6405ce0:;
					if (it != expr_end) {
						jule::Ptr<_1c666a51b_Fn> _50416_m = *it;
						{
							if ((*(_50416_m))._field_Statically) {
								goto _iter_next_1c6405ce0;
							};
							{
								auto expr = &((*_50416_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c64068a1:;
								if (it != expr_end) {
									jule::Ptr<_1c666d4ec_FnIns> _50817_mins = *it;
									{
										jule::Ptr<_1c666c474_ParamIns> _50910_p = (*(_50817_mins))._field_Params[0LL];;
										_20759e353_StrBuilder _51010_kind = static__2075a7c41_New(40LL);;
										_1d4cb895d_kind((*(_self_))._field_tc.ptr(), &(_51010_kind), (*(_50910_p))._field_Kind);
										if ((!(_1c666942c_IsRef((*_50910_p.alloc)._field_Decl.ptr())))) {
											_2075a814d_WriteStr(&_51010_kind, jule::Str::lit("*", 1));
										};
										(*_50910_p.alloc)._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1d4cb2b22_customType>(_1d4cb2b22_customType{._field_kind=_2075a8945_Str(&_51010_kind)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data29)});
									}
									_iter_next_1c64068a1:;
									++it;
									goto _iter_begin_1c64068a1;
								}
								_iter_end_1c64068a1:;
							};
						}
						_iter_next_1c6405ce0:;
						++it;
						goto _iter_begin_1c6405ce0;
					}
					_iter_end_1c6405ce0:;
				};
			}
			_iter_next_1c6401ba9:;
			++it;
			goto _iter_begin_1c6401ba9;
		}
		_iter_end_1c6401ba9:;
	};
}



inline void _1d4ca7232_prepareStructures(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6400bb9:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _52615_s = *it;
			{
				if (((*(_52615_s))._field_Token != nullptr)) {
					_1d4ca7034_prepareStructure(_self_.ptr(), &(_52615_s));
				};
			}
			_iter_next_1c6400bb9:;
			++it;
			goto _iter_begin_1c6400bb9;
		}
		_iter_end_1c6400bb9:;
	};
}



inline void _1d4ca74da_structurePlainDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _53340_s) {
	{
		auto expr = &((*((*(_53340_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c640aeb0:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _53415_ins = *it;
			{
				_1d4ca4482_write(_self_, jule::Str::lit("struct ", 7));
				static__1d4be3c95_structureIns(&((*_self_.alloc)._field_Buf), &(_53415_ins));
				_1d4ca4482_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c640aeb0:;
			++it;
			goto _iter_begin_1c640aeb0;
		}
		_iter_end_1c640aeb0:;
	};
}



inline void _1d4ca76d8_structurePlainDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c640c5cc:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _54215_s = *it;
			{
				if (((*(_54215_s))._field_Token != nullptr)) {
					_1d4ca74da_structurePlainDecl(_self_, &(_54215_s));
				};
			}
			_iter_next_1c640c5cc:;
			++it;
			goto _iter_begin_1c640c5cc;
		}
		_iter_end_1c640c5cc:;
	};
}



inline void _1d4ca7991_fieldDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6657aad_FieldIns>* _54931_f) {
	_1d4cb895d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_54931_f))))._field_Kind);
	_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
	static__1d4be4081_field(&((*_self_.alloc)._field_Buf), &((*((*(_54931_f))))._field_Decl));
	_1d4ca4482_write(_self_, jule::Str::lit(";", 1));
}



inline void _1d4ca7c49_structureDestructor(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _55641_s) {
	;
	jule::Ptr<_1c666a51b_Fn> _5597_disposeMethod = _1c6659708_FindMethod((*(_55641_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5607_disposed = static__1c672c3ad_Dispose(_5597_disposeMethod);;
	if ((!(_5607_disposed))) {
		return;;
	};
	_1d4ca4482_write(_self_, jule::Str::lit("~", 1));
	static__1d4be3c95_structureIns(&((*_self_.alloc)._field_Buf), _55641_s);
	_1d4ca4482_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1d4be2d0a_func(&((*_self_.alloc)._field_Buf), &(_5597_disposeMethod));
	_1d4ca4482_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1d4ca8167_structureOperatorEq(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Str _57236_ident, jule::Ptr<_1c665865d_StructIns>* _57253_s, jule::Bool _57268_decl) {
	if ((!(_1d4cb1648_defaultEq(_57253_s)))) {
		return;;
	};
	_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
	if (_1c73d6c7b_Inline) {
		_1d4ca4482_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1d4ca4482_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1d4ca4482_write(_self_, _57236_ident);
	_1d4ca4482_write(_self_, jule::Str::lit("_eq", 3));
	_1d4ca4482_write(_self_, jule::Str::lit("(", 1));
	_1d4ca4482_write(_self_, _57236_ident);
	_1d4ca4482_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1d4ca4482_write(_self_, _57236_ident);
	_1d4ca4482_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_57268_decl) {
		_1d4ca4482_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1d4ca4482_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_57253_s))))._field_Fields.len() == 0LL)) {
		_1d4ca4482_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1d4ca4938_addIndent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
	_1d4ca4d34_indent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("return ", 7));
	_1d4ca4938_addIndent(_self_);
	jule::Bool _6037_writed = false;;
	jule::Str _6067_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6077_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_57253_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c641a343:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _60915_f = *it;
			{
				jule::Ptr<_1c665865d_StructIns> _6114_strct = _1c67c060a_Struct((*(_60915_f))._field_Kind.ptr());;
				if ((((_6114_strct != nullptr) && ((*_6114_strct.alloc)._field_Decl != nullptr)) && (*(*(_6114_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1c641a343;
				};
				if (_6037_writed) {
					_1d4ca4482_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6037_writed=true;
				_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
				_1d4ca4d34_indent(_self_);
				_20759e353_StrBuilder _6228_fIdent = static__2075a7c41_New((*((*_60915_f.alloc)._field_Decl))._field_Ident.len());;
				static__1d4be4081_field(&(_6228_fIdent), &((*_60915_f.alloc)._field_Decl));
				_6067_lmodel+=_220024189_BytesStr(_2075a93e6_Buf(&_6228_fIdent));
				_6077_rmodel+=_220024189_BytesStr(_2075a93e6_Buf(&_6228_fIdent));
				_1d4bcd9e9__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6067_lmodel), &(_6077_rmodel), &((*_60915_f.alloc)._field_Kind), &((*_60915_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6067_lmodel).mut_slice(0LL, (_6067_lmodel.len() - _2075a8dc9_Len(&_6228_fIdent)));;
				_6077_rmodel=_6067_lmodel.slice(0LL, (_6077_rmodel.len() - _2075a8dc9_Len(&_6228_fIdent)));
			}
			_iter_next_1c641a343:;
			++it;
			goto _iter_begin_1c641a343;
		}
		_iter_end_1c641a343:;
	};
	_1d4ca4b36_doneIndent(_self_);
	if ((!(_6037_writed))) {
		_1d4ca4482_write(_self_, jule::Str::lit("true", 4));
	};
	_1d4ca4482_write(_self_, jule::Str::lit(";\n", 2));
	_1d4ca4b36_doneIndent(_self_);
	_1d4ca4d34_indent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1d4ca84ca_structureOperators(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _64040_s, jule::Bool _64055_decl) {
	_20759e353_StrBuilder _6417_sb = static__2075a7c41_New(40LL);;
	static__1d4be3c95_structureIns(&(_6417_sb), _64040_s);
	jule::Str _6433_ident = _2075a8945_Str(&_6417_sb);;
	_1d4ca8167_structureOperatorEq(_self_, _6433_ident, _64040_s, _64055_decl);
}



inline void _1d4ca8783_structureInsDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _64938_s) {
	{
		auto expr = &((*((*(_64938_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c642468d:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _65015_m = *it;
			{
				if (_1d4cb137e_isHeadDecl(&(_65015_m))) {
					_1d4ca9ad6_funcDecl(_self_, &(_65015_m), false);
				};
			}
			_iter_next_1c642468d:;
			++it;
			goto _iter_begin_1c642468d;
		}
		_iter_end_1c642468d:;
	};
	_1d4ca4482_write(_self_, jule::Str::lit("struct ", 7));
	static__1d4be3c95_structureIns(&((*_self_.alloc)._field_Buf), _64938_s);
	_1d4ca4482_write(_self_, jule::Str::lit(" {\n", 3));
	_1d4ca4938_addIndent(_self_);
	{
		auto expr = &((*((*(_64938_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6426096:;
		if (it != expr_end) {
			jule::Ptr<_1c6657aad_FieldIns> _66115_f = *it;
			{
				_1d4ca4d34_indent(_self_);
				_1d4ca7991_fieldDecl(_self_, &(_66115_f));
				_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c6426096:;
			++it;
			goto _iter_begin_1c6426096;
		}
		_iter_end_1c6426096:;
	};
	_1d4ca4d34_indent(_self_);
	_1d4ca7c49_structureDestructor(_self_, _64938_s);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	_1d4ca4b36_doneIndent(_self_);
	_1d4ca4d34_indent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("};", 2));
	;
	_1d4ca84ca_structureOperators(_self_, _64938_s, true);
}



inline void _1d4ca8a3b_structureDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _67935_s) {
	{
		auto expr = &((*((*(_67935_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6429c37:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _68015_ins = *it;
			{
				_1d4ca8783_structureInsDecl(_self_, &(_68015_ins));
			}
			_iter_next_1c6429c37:;
			++it;
			goto _iter_begin_1c6429c37;
		}
		_iter_end_1c6429c37:;
	};
}



inline void _1d4ca8c39_structureDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c642a4c9:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _68615_s = *it;
			{
				if (((*(_68615_s))._field_Token != nullptr)) {
					_1d4ca8a3b_structureDecl(_self_, &(_68615_s));
					_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c642a4c9:;
			++it;
			goto _iter_begin_1c642a4c9;
		}
		_iter_end_1c642a4c9:;
	};
}



inline void _1d4ca8e37_structureMethodDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c642b4ec:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _69515_s = *it;
			{
				if (((*(_69515_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_69515_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c642d620:;
						if (it != expr_end) {
							jule::Ptr<_1c665865d_StructIns> _69717_ins = *it;
							{
								{
									auto expr = &((*(_69717_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c642e06b:;
									if (it != expr_end) {
										jule::Ptr<_1c666a51b_Fn> _69818_m = *it;
										{
											if ((!(_1d4cb137e_isHeadDecl(&(_69818_m))))) {
												_1d4ca61a9_pushResult(_self_, &(_69818_m));
												_1d4ca9ad6_funcDecl(_self_, &(_69818_m), false);
											};
										}
										_iter_next_1c642e06b:;
										++it;
										goto _iter_begin_1c642e06b;
									}
									_iter_end_1c642e06b:;
								};
							}
							_iter_next_1c642d620:;
							++it;
							goto _iter_begin_1c642d620;
						}
						_iter_end_1c642d620:;
					};
				};
			}
			_iter_next_1c642b4ec:;
			++it;
			goto _iter_begin_1c642b4ec;
		}
		_iter_end_1c642b4ec:;
	};
}



inline void _1d4ca9410_funcHead(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _71330_buf, jule::Ptr<_1c666d4ec_FnIns>* _71352_f, jule::Bool _71363_ptr, jule::Str _71374_ident) {
	if ((((!(_71363_ptr)) && _1c73d6c7b_Inline) && (!(_1c666aede_IsEntryPoint((*((*(_71352_f))))._field_Decl.ptr()))))) {
		_2075a814d_WriteStr(_71330_buf, jule::Str::lit("inline ", 7));
	};
	_1d4cb7e24_funcInsResult((*(_self_))._field_tc.ptr(), _71330_buf, _71352_f);
	if (_71363_ptr) {
		_2075a814d_WriteStr(_71330_buf, jule::Str::lit("(*", 2));
		static__1d4be30e6_funcIns(_71330_buf, _71352_f);
		_2075a8406_WriteByte(_71330_buf, ')');
	} else {
		_2075a8406_WriteByte(_71330_buf, ' ');
		if ((_71374_ident).empty()) {
			static__1d4be30e6_funcIns(_71330_buf, _71352_f);
		} else {
			_2075a814d_WriteStr(_71330_buf, _71374_ident);
		};
	};
}



inline void _1d4ca9773_funcDeclIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _73233_f, jule::Bool _73244_ptr) {
	_1d4ca4d34_indent(_self_);
	_1d4ca9410_funcHead(_self_, &((*_self_.alloc)._field_Buf), _73233_f, _73244_ptr, jule::Str());
	_1d4caac19_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _73233_f);
	_1d4ca4482_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1d4ca9ad6_funcDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _73930_f, jule::Bool _73938_ptr) {
	{
		auto expr = &((*((*(_73930_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64352a3:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _74015_c = *it;
			{
				_1d4ca9773_funcDeclIns(_self_, &(_74015_c), _73938_ptr);
			}
			_iter_next_1c64352a3:;
			++it;
			goto _iter_begin_1c64352a3;
		}
		_iter_end_1c64352a3:;
	};
}



inline void _1d4ca9d8e_funcDeclTrait(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _74535_f) {
	{
		auto expr = &((*((*(_74535_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64361d8:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _74615_c = *it;
			{
				jule::Ptr<_1c67bb8d1_TypeKind> _7478_k = (*((*(_74615_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_74615_c))._field_Params[0LL]))._field_Kind=_1d4ca1c32_generalGCPtr;
				_1d4ca9773_funcDeclIns(_self_, &(_74615_c), true);
				(*((*(_74615_c))._field_Params[0LL]))._field_Kind=_7478_k;
			}
			_iter_next_1c64361d8:;
			++it;
			goto _iter_begin_1c64361d8;
		}
		_iter_end_1c64361d8:;
	};
}



inline void _1d4caa08c_funcDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1c73b770c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1c6438e11, jule::Ptr<__jule_anon_1c6438e11_ctx>::make(__jule_anon_1c6438e11_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6438e11_ctx_handler));
}



inline void _1d4caa345_traitDataTypeMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _76742_t) {
	_1c73b85a9_IterTraitMethods(_76742_t, jule::__new_closure<void,jule::Ptr<_1c666a51b_Fn>*>((void*)__jule_anon_1c643a42e, jule::Ptr<__jule_anon_1c643a42e_ctx>::make(__jule_anon_1c643a42e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c643a42e_ctx_handler));
}



inline void _1d4caa543_traitDataTypes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1c73b770c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1c6440ab6, jule::Ptr<__jule_anon_1c6440ab6_ctx>::make(__jule_anon_1c6440ab6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6440ab6_ctx_handler));
}



inline void _1d4caa8a6_paramIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _80330_buf, jule::Ptr<_1c666c474_ParamIns>* _80352_p) {
	_1d4cb774d_paramIns((*(_self_))._field_tc.ptr(), _80330_buf, _80352_p);
	_2075a8406_WriteByte(_80330_buf, ' ');
	static__1d4be36bd_param(_80330_buf, &((*((*(_80352_p))))._field_Decl));
}



inline void _1d4caac19_paramsIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _80931_buf, jule::Ptr<_1c666d4ec_FnIns>* _80953_f) {
	if (((!((*((*(_80953_f))))._field_AsAnon)) && ((*((*(_80953_f))))._field_Params.len() == 0LL))) {
		_2075a814d_WriteStr(_80931_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_2075a8406_WriteByte(_80931_buf, '(');
	if ((*((*(_80953_f))))._field_AsAnon) {
		_2075a814d_WriteStr(_80931_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_80953_f))))._field_Params.len() > 0LL)) {
			_2075a814d_WriteStr(_80931_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_80953_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6448daa:;
		if (it != expr_end) {
			jule::I64 _8218_i = it - expr->begin();
			jule::Ptr<_1c666c474_ParamIns> _82115_p = *it;
			{
				_1d4caa8a6_paramIns(_self_, _80931_buf, &(_82115_p));
				if ((((*((*(_80953_f))))._field_Params.len() - _8218_i) > 1LL)) {
					_2075a814d_WriteStr(_80931_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c6448daa:;
			++it;
			_8218_i++;
			goto _iter_begin_1c6448daa;
		}
		_iter_end_1c6448daa:;
	};
	_2075a8406_WriteByte(_80931_buf, ')');
}



inline void _1d4cab07c_varInitExpr(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c672acb3_Var>* _83033_v, jule::Fn<void> _83042_init) {
	if ((*((*(_83033_v))))._field_Statically) {
		_1d4ca4482_write(_self_, jule::Str::lit("static ", 7));
	};
	_1d4cb895d_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_83033_v))))._field_Kind))._field_Kind);
	_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_83033_v))))._field_Reference) {
		_1d4ca4482_write(_self_, jule::Str::lit("*", 1));
	};
	static__1d4be436c_var(&((*_self_.alloc)._field_Buf), (*(_83033_v)));
	if ((_83042_init != nullptr)) {
		_1d4ca4482_write(_self_, jule::Str::lit(" = ", 3));
		_83042_init();
	};
	_1d4ca4482_write(_self_, jule::Str::lit(";", 1));
}



inline void _1d4cab335_var(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c672acb3_Var> _84824_v) {
	if (_1c6621c0e_IsIgnoreIdent((*(_84824_v))._field_Ident)) {
		return;;
	};
	if ((((*_84824_v.alloc)._field_Value != nullptr) && ((*(*(_84824_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_84824_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_84824_v.alloc)._field_Reference) {
				_1d4cab07c_varInitExpr(_self_, &(_84824_v), jule::__new_closure<void>((void*)__jule_anon_1c6451269, jule::Ptr<__jule_anon_1c6451269_ctx>::make(__jule_anon_1c6451269_ctx{._self_=_self_,._84824_v=_84824_v}).as<jule::Uintptr>(), __jule_anon_1c6451269_ctx_handler));
			} else {
				_1d4cab07c_varInitExpr(_self_, &(_84824_v), jule::__new_closure<void>((void*)__jule_anon_1c6453359, jule::Ptr<__jule_anon_1c6453359_ctx>::make(__jule_anon_1c6453359_ctx{._self_=_self_,._84824_v=_84824_v}).as<jule::Uintptr>(), __jule_anon_1c6453359_ctx_handler));
			};
			return;;
		};
		_1d4cab07c_varInitExpr(_self_, &(_84824_v), nullptr);
		return;;
	};
	if ((*_84824_v.alloc)._field_Reference) {
		_1d4cab07c_varInitExpr(_self_, &(_84824_v), jule::__new_closure<void>((void*)__jule_anon_1c6455a65, jule::Ptr<__jule_anon_1c6455a65_ctx>::make(__jule_anon_1c6455a65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6455a65_ctx_handler));
		return;;
	};
	if (_1d4cc0adb_shouldInitialized(&((*((*_84824_v.alloc)._field_Kind))._field_Kind))) {
		_1d4cab07c_varInitExpr(_self_, &(_84824_v), jule::__new_closure<void>((void*)__jule_anon_1c6456c0e, jule::Ptr<__jule_anon_1c6456c0e_ctx>::make(__jule_anon_1c6456c0e_ctx{._self_=_self_,._84824_v=_84824_v}).as<jule::Uintptr>(), __jule_anon_1c6456c0e_ctx_handler));
		return;;
	};
	_1d4cab07c_varInitExpr(_self_, &(_84824_v), nullptr);
}



inline void _1d4cab698_anonFuncInsDecl(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _87937_m, jule::Str _87958_ident) {
	_1d4ca9410_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_87937_m))))._field_Func), false, _87958_ident);
	_1d4caac19_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_87937_m))))._field_Func));
	_2075a8406_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1d4caba0b_anonFuncIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6660830_AnonFnExprModel>* _88533_m, jule::Str _88554_ident) {
	_1d4ca9410_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88533_m))))._field_Func), false, _88554_ident);
	_1d4caac19_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_88533_m))))._field_Func));
	_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
	_1d4bc7707_anonFuncScope((*_self_.alloc)._field_sc, (*(_88533_m)), _88554_ident);
	if (((*((*((*(_88533_m))))._field_Func))._field_Scope != nullptr)) {
		_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1d4cabd6e_funcIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666d4ec_FnIns>* _89529_f, jule::Str _89540_ident) {
	_1d4ca9410_funcHead(_self_, &((*_self_.alloc)._field_Buf), _89529_f, false, _89540_ident);
	_1d4caac19_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _89529_f);
	_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
	_1d4bc79b0_funcScope((*_self_.alloc)._field_sc, (*(_89529_f)));
	if (((*((*(_89529_f))))._field_Scope != nullptr)) {
		_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1d4cac127_func(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _90526_f) {
	{
		auto expr = &((*((*(_90526_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6460542:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _90615_ins = *it;
			{
				_1d4cabd6e_funcIns(_self_, &(_90615_ins), jule::Str());
			}
			_iter_next_1c6460542:;
			++it;
			goto _iter_begin_1c6460542;
		}
		_iter_end_1c6460542:;
	};
}



inline void _1d4cac48a_funcTrait(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _91127_s, jule::Ptr<_1c666d4ec_FnIns>* _91147_f) {
	(*((*(_91147_f))))._field_Scope=nullptr;
	_20759e353_StrBuilder _9147_nident = static__2075a7c41_New(30LL);;
	_2075a814d_WriteStr(&_9147_nident, jule::Str::lit("__jule_trait_method_", 20));
	_2075a814d_WriteStr(&_9147_nident, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_91147_f)))), 15LL));
	_2075a814d_WriteStr(&_9147_nident, jule::Str::lit("_", 1));
	_2075a814d_WriteStr(&_9147_nident, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_91127_s)))), 15LL));
	jule::Ptr<_1c67bb8d1_TypeKind> _9207_k = (*((*((*(_91147_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_91147_f))))._field_Params[0LL]))._field_Kind=_1d4ca1c32_generalGCPtr;
	_1d4cabd6e_funcIns(_self_, _91147_f, _2075a8945_Str(&_9147_nident));
	(*((*((*(_91147_f))))._field_Params[0LL]))._field_Kind=_9207_k;
}



inline __jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool _1d4cac7cb_findTraitMetMap(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c666a51b_Fn>* _92637_m) {
	__jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c666d4ec_FnIns> _9277_mins = (*((*(_92637_m))))._field_Instances[0LL];;
	{
		_1d8379416_mapIterator it = _1d83728d7_iterator(&(*(_self_))._field_traitMetMap);
		_iter_begin_1c6465d1c:;
		__jule_tuple_px_1c666d4ec_FnIns__jule_tuple_psuintptr __iterator_result = _1d8379aed_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1c666d4ec_FnIns> _92812_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_92812_f))._field_Decl))._field_Public == (*((*(_92637_m))))._field_Public) && ((*(*(_92812_f))._field_Decl.alloc)._field_Ident == (*((*(_92637_m))))._field_Ident)) && _1c666e157_EqualFn(_92812_f, &(_9277_mins)))) {
					__jule_func_result.__jule_result_arg0 = _92812_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c6465d1c:;
			goto _iter_begin_1c6465d1c;
		}
		_iter_end_1c6465d1c:;
	};
	__jule_func_result.__jule_result_arg0 = _9277_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1d4cacb3e_traitWrapper(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _93834_t, jule::Ptr<_1c666a51b_Fn>* _93850_m) {
	_julec_label_1c646854a:;
	{
		auto expr = &((*((*(_93834_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6468704:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _94015_imp = *it;
			{
				jule::Ptr<_1c666d4ec_FnIns> _9418_mepf;
				jule::Bool _94114_exist;
				({
					__jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool __jule_assign_result = _1d4cac7cb_findTraitMetMap(_self_, _93850_m);
					_9418_mepf = __jule_assign_result.__jule_result_arg0;
					_94114_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_94114_exist) {
					jule::Slice<jule::Uintptr> _9449_vals = _1d8372123_get(&(*_self_.alloc)._field_traitMetMap, _9418_mepf);;
					{
						auto expr = &(_9449_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c646a6d4:;
						if (it != expr_end) {
							jule::Uintptr _94512_val = *it;
							{
								if ((_94512_val == static_cast<jule::Uintptr>(_94015_imp))) {
									goto _iter_next_1c6468704;
								};
							}
							_iter_next_1c646a6d4:;
							++it;
							goto _iter_begin_1c646a6d4;
						}
						_iter_end_1c646a6d4:;
					};
					(*_1d8372266_set(&(*_self_.alloc)._field_traitMetMap, _9418_mepf))=jule::append(_9449_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_94015_imp); __jule_collection; }));
				} else {
					(*_1d8372266_set(&(*_self_.alloc)._field_traitMetMap, _9418_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_94015_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_94015_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c646b41b:;
					if (it != expr_end) {
						jule::Ptr<_1c665865d_StructIns> _95516_ins = *it;
						{
							_1d4cac48a_funcTrait(_self_, &(_95516_ins), &(_9418_mepf));
							jule::Ptr<_1c666a51b_Fn> _9589_sm = _1c6659708_FindMethod(_95516_ins.ptr(), (*((*(_93850_m))))._field_Ident, false);;
							if (((_9589_sm == nullptr) || ((*(_9589_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1d4ca4938_addIndent(_self_);
							_1d4ca4482_write(_self_, jule::Str::lit("{\n", 2));
							_1d4ca4d34_indent(_self_);
							if (((*((*(_93850_m))))._field_Exceptional || (!(_1c666a9c2_IsVoid((*(_93850_m)).ptr()))))) {
								_1d4ca4482_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1d4be2d0a_func(&((*_self_.alloc)._field_Buf), &(_9589_sm));
							_1d4ca4482_write(_self_, jule::Str::lit("(", 1));
							_1d4ca4482_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1d4cb6c14_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _95516_ins);
							_1d4ca4482_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _9755_ptr = (!(_1c666942c_IsRef((*((*(_93850_m))))._field_Params[0LL].ptr())));;
							if (_9755_ptr) {
								_1d4ca4482_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_93850_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1c6472cd5:;
								if (it != expr_end) {
									jule::Ptr<_1c6668a47_Param> _97912_mp = *it;
									{
										_1d4ca4482_write(_self_, jule::Str::lit(", ", 2));
										static__1d4be36bd_param(&((*_self_.alloc)._field_Buf), &(_97912_mp));
									}
									_iter_next_1c6472cd5:;
									++it;
									goto _iter_begin_1c6472cd5;
								}
								_iter_end_1c6472cd5:;
							};
							_1d4ca4482_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1d4ca4b36_doneIndent(_self_);
						}
						_iter_next_1c646b41b:;
						++it;
						goto _iter_begin_1c646b41b;
					}
					_iter_end_1c646b41b:;
				};
			}
			_iter_next_1c6468704:;
			++it;
			goto _iter_begin_1c6468704;
		}
		_iter_end_1c6468704:;
	};
}



inline void _1d4cacd3c_traitWrappers(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1c73b770c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1c6474b50, jule::Ptr<__jule_anon_1c6474b50_ctx>::make(__jule_anon_1c6474b50_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6474b50_ctx_handler));
}



inline void _1d4cad1a0_traitDataMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _100438_t, jule::Ptr<_1c665865d_StructIns> _100449_s) {
	_1c73b85a9_IterTraitMethods(_100438_t, jule::__new_closure<void,jule::Ptr<_1c666a51b_Fn>*>((void*)__jule_anon_1c6475ec5, jule::Ptr<__jule_anon_1c6475ec5_ctx>::make(__jule_anon_1c6475ec5_ctx{._self_=_self_,._100449_s=_100449_s}).as<jule::Uintptr>(), __jule_anon_1c6475ec5_ctx_handler));
}



inline void _1d4cad5bd_traitData(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c667de9c_Trait>* _102131_t, jule::I64 _102142_i, jule::Ptr<_1c665865d_StructIns>* _102155_s) {
	_20759e353_StrBuilder _10227_ident = static__2075a7c41_New((*((*(_102131_t))))._field_Ident.len());;
	static__1d4be33d2_traitDecl(&(_10227_ident), (*(_102131_t)));
	_1d4ca4482_write(_self_, jule::Str::lit("static ", 7));
	_1d4ca473a_writeBytes(_self_, _2075a93e6_Buf(&_10227_ident));
	_1d4ca4482_write(_self_, jule::Str::lit("MptrData ", 9));
	_1d4ca473a_writeBytes(_self_, _2075a93e6_Buf(&_10227_ident));
	_1d4ca4482_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1d4ca4482_write(_self_, _1dd7115cd_Itoa(_102142_i));
	_1d4ca4482_write(_self_, jule::Str::lit(" {\n", 3));
	_1d4ca4938_addIndent(_self_);
	_1d4ca4d34_indent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1d4ca4482_write(_self_, _1dd7115cd_Itoa(_1d4ca54b6_pushDealloc(_self_, jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_102155_s)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)}))));
	_1d4ca4482_write(_self_, jule::Str::lit(",\n", 2));
	_1d4cad1a0_traitDataMethods(_self_, _102131_t, (*(_102155_s)));
	_1d4ca4b36_doneIndent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1d4cad7bb_traitDatas(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1c73b770c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1c6483983, jule::Ptr<__jule_anon_1c6483983_ctx>::make(__jule_anon_1c6483983_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6483983_ctx_handler));
}



inline void _1d4cad9b9_globalDecls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6483323:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _105815_v = *it;
			{
				_1d4cb895d_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_105815_v))._field_Kind))._field_Kind);
				_1d4ca4482_write(_self_, jule::Str::lit(" ", 1));
				static__1d4be436c_var(&((*_self_.alloc)._field_Buf), _105815_v);
				_1d4ca4482_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6483323:;
			++it;
			goto _iter_begin_1c6483323;
		}
		_iter_end_1c6483323:;
	};
}



inline void _1d4cadbb7_decls(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4ca76d8_structurePlainDecls(_self_);
	_1d4ca8c39_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_2075a8dc9_Len(&(*_self_.alloc)._field_Buf);
	_1d4ca8e37_structureMethodDecls(_self_);
	_1d4caa08c_funcDecls(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	_1d4caa543_traitDataTypes(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_2075a8dc9_Len(&(*_self_.alloc)._field_Buf);
	_1d4cacd3c_traitWrappers(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	_1d4cad7bb_traitDatas(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_2075a8dc9_Len(&(*_self_.alloc)._field_Buf);
	_1d4cad9b9_globalDecls(_self_);
}



inline void _1d4cade70_structureMethods(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _108438_s) {
	{
		auto expr = &((*((*(_108438_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c648d76d:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _108515_f = *it;
			{
				_1d4cac127_func(_self_, &(_108515_f));
				_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c648d76d:;
			++it;
			goto _iter_begin_1c648d76d;
		}
		_iter_end_1c648d76d:;
	};
}



inline void _1d4cae228_structureIns(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c665865d_StructIns>* _109134_s) {
	;
	_1d4ca84ca_structureOperators(_self_, _109134_s, false);
	_1d4cade70_structureMethods(_self_, _109134_s);
}



inline void _1d4cae4d1_structure(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c6655803_Struct>* _109731_s) {
	{
		auto expr = &((*((*(_109731_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a90e7e:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _109815_ins = *it;
			{
				_1d4cae228_structureIns(_self_, &(_109815_ins));
				_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1d8a90e7e:;
			++it;
			goto _iter_begin_1d8a90e7e;
		}
		_iter_end_1d8a90e7e:;
	};
}



inline void _1d4cae6ce_structures(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a916bb:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _110515_s = *it;
			{
				if (((*(_110515_s))._field_Token != nullptr)) {
					_1d4cae4d1_structure(_self_, &(_110515_s));
					_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1d8a916bb:;
			++it;
			goto _iter_begin_1d8a916bb;
		}
		_iter_end_1d8a916bb:;
	};
}



inline void _1d4cae8cc_funcs(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1c73b770c_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1d8a942e5, jule::Ptr<__jule_anon_1d8a942e5_ctx>::make(__jule_anon_1d8a942e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d8a942e5_ctx_handler));
}



inline void _1d4caeb85_pushInit(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, jule::Ptr<_1c66d9304_Package>* _112930_pkg) {
	_1c73b7a3c_IterFiles(_112930_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1d8a957be, jule::Ptr<__jule_anon_1d8a957be_ctx>::make(__jule_anon_1d8a957be_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d8a957be_ctx_handler));
}



inline void _1d4caed83_anonHashes(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_julec_label_1d8a98e87:;
	jule::Slice<jule::Ptr<_1d4ca27e3_anonHash>> _11467_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_11467_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a9aa16:;
		if (it != expr_end) {
			jule::Ptr<_1d4ca27e3_anonHash> _114815_h = *it;
			{
				_1d4caba0b_anonFuncIns(_self_, &((*(_114815_h))._field_expr), (*_114815_h.alloc)._field_ident);
			}
			_iter_next_1d8a9aa16:;
			++it;
			goto _iter_begin_1d8a9aa16;
		}
		_iter_end_1d8a9aa16:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1d8a98e87;
	};
}



inline void _1d4cb0081_initGlobals(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a9c034:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _115715_v = *it;
			{
				static__1d4be436c_var(&((*(_self_))._field_Buf), _115715_v);
				_1d4ca4482_write(_self_, jule::Str::lit(" = ", 3));
				_1d4bd9bc0_model((*_self_.alloc)._field_ec, (*((*((*(_115715_v))._field_Value))._field_Data))._field_Model);
				_1d4ca4482_write(_self_, jule::Str::lit(";\n", 2));
				_2075a8406_WriteByte(&(*_self_.alloc)._field_Buf, 9LLU);
			}
			_iter_next_1d8a9c034:;
			++it;
			goto _iter_begin_1d8a9c034;
		}
		_iter_end_1d8a9c034:;
	};
}



inline void _1d4cb027e_initCaller(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4ca4482_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1d4ca4938_addIndent(_self_);
	_1c73b770c_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1c66d9304_Package>*>((void*)__jule_anon_1d8aa09d8, jule::Ptr<__jule_anon_1d8aa09d8_ctx>::make(__jule_anon_1d8aa09d8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1d8aa09d8_ctx_handler));
	_1d4ca4b36_doneIndent(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1d4cb047c_end(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4ca4482_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	_1d4ca4d34_indent(_self_);
	_1d4cb0081_initGlobals(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_208829b60_Test) {
		_1d4ca4482_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1d4ca4482_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1d4cb07e0_insertBuf(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_, _20759e353_StrBuilder* _120131_buf, jule::I64 _120148_pos) {
	if ((_2075a8dc9_Len(_120131_buf) > 0LL)) {
		jule::Slice<jule::U8> _12038_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_2075a8dc9_Len(&(*(_self_))._field_Buf) + _2075a8dc9_Len(_120131_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_12038_head).append(_2075a93e6_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _120148_pos));;
		(_12038_head).append(_2075a93e6_Buf(_120131_buf));;
		(_12038_head).append(_2075a93e6_Buf(&(*_self_.alloc)._field_Buf).slice(_120148_pos));;
		{
			_2075a969e_SetBuf(&(*_self_.alloc)._field_Buf, _12038_head);
		};
	};
}



inline void _1d4cb09dd_serializeHead(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4ca7232_prepareStructures(_self_);
	_1d4ca69c3_head(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
	_1d4cadbb7_decls(_self_);
	_1d4cb07e0_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_resultDecls);
	_1d4ca4482_write(_self_, jule::Str::lit("\n", 1));
	_1d4cae6ce_structures(_self_);
	_1d4cae8cc_funcs(_self_);
	_1d4cb027e_initCaller(_self_);
	_1d4ca4482_write(_self_, jule::Str::lit("\n\n", 2));
	_1d4caed83_anonHashes(_self_);
	_1d4cb07e0_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_deallocObj);
	_1d4cb07e0_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_anyObj);
	_1d4cb07e0_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_2075a8dc9_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1d4cb0bdb_Serialize(jule::Ptr<_1d4ca3c9a_ObjectCoder> _self_) {
	_1d4cb09dd_serializeHead(_self_);
	_1d4cb047c_end(_self_);
}








inline jule::Bool _1d4cb2b22_customType_eq(_1d4cb2b22_customType *_self_, _1d4cb2b22_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1d4cb301d_Str(_1d4cb2b22_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1d4cb335e_Equal(jule::Ptr<_1d4cb2b22_customType> _self_, jule::Ptr<_1c67bb8d1_TypeKind> _4418_k) {
	return false;;
}








inline jule::Bool _1d4cb375a_typeCoder_eq(_1d4cb375a_typeCoder *_self_, _1d4cb375a_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1d4cb375a_typeCoder> static__1d4cb3caa_new(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1d4cb375a_typeCoder> _707_tc = jule::new_ptr<_1d4cb375a_typeCoder>(_1d4cb375a_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1d4cbb345_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1d4cbb851_new(&(_707_tc));
	return _707_tc;;
}



inline void _1d4cb411d_toType(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((_7648_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_7648_id=_1dd713987_RealKindOf(_7648_id);
	};
	_2075a814d_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_2075a8406_WriteByte(_7627_buf, (jule::U8)(_7648_id[0LL] - 32LLU));
	} else {
		_2075a8406_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_2075a814d_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1d4cb4481_prim(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _9025_buf, jule::Ptr<_1c67c49e9_Prim> _9042_p) {
	_1d4cb411d_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1d4cb47e4_tuple(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _9526_buf, jule::Ptr<_1c67c9adc_Tuple> _9547_t) {
	_2075a814d_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8aba2c7:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> _9715_tk = *it;
			{
				_1d4cb895d_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_2075a8406_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1d8aba2c7:;
			++it;
			_978_i++;
			goto _iter_begin_1d8aba2c7;
		}
		_iter_end_1d8aba2c7:;
	};
	_2075a8406_WriteByte(_9526_buf, '>');
}



inline void _1d4cb4b57_asSptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_2075a814d_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_2075a7d95_Write(_10727_buf, _10744_elem);
	_2075a8406_WriteByte(_10727_buf, '>');
}



inline void _1d4cb4eba_sptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _11425_buf, jule::Ptr<_1c67c8525_Sptr> _11446_sptr) {
	_2075a814d_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1d4cb895d_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_2075a8406_WriteByte(_11425_buf, '>');
}



inline void _1d4cb532d_ptr(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _12124_buf, jule::Ptr<_1c67cbcdc_Ptr> _12145_p) {
	;
	if (_1c67cc859_IsUnsafe(_12145_p.ptr())) {
		_2075a814d_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1d4cb895d_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_2075a814d_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1d4cb5691_enumDecl(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _13229_buf, jule::Ptr<_1c66816a8_Enum> _13250_e) {
	_1d4cb895d_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1d4cb5a04_typeEnumDecl(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _13733_buf, jule::Ptr<_1c6682db3_TypeEnum> _13754_e) {
	_2075a814d_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1d4cb5d67_asSlice(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _14128_buf, jule::Ptr<_1c67bb8d1_TypeKind> _14149_elem) {
	_2075a814d_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1d4cb895d_kind(_self_, _14128_buf, _14149_elem);
	_2075a8406_WriteByte(_14128_buf, '>');
}



inline void _1d4cb61ca_slice(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _14826_buf, jule::Ptr<_1c67c8ee8_Slc> _14847_s) {
	_1d4cb5d67_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1d4cb653d_mapType(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _15328_buf, jule::Ptr<_1c67ca68c_Map> _15349_m) {
	jule::Ptr<_1c6655803_Struct> _1547_s = _1c69d21bd_RuntimeFindStruct(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
	jule::Ptr<_1c665865d_StructIns> _1557_ins = _1c73beb98_FindStructGenericInstance(&(_1547_s), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_15349_m))._field_Key; (*it++) = (*_15349_m.alloc)._field_Val; __jule_collection; }));;
	static__1d4be3c95_structureIns(_15328_buf, &(_1557_ins));
}



inline void _1d4cb6c14_structureIns(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _16533_buf, jule::Ptr<_1c665865d_StructIns> _16554_s) {
	if ((!((*((*(_16554_s))._field_Decl))._field_Binded))) {
		static__1d4be3c95_structureIns(_16533_buf, &(_16554_s));
		return;;
	};
	jule::Ptr<_1c6633d20_Directive> _1703_d = _1c73bcbda_FindDirective(&((*(*(_16554_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1703_d != nullptr)) {
		_2075a7d95_Write(_16533_buf, _1d4cb1071_concatAllParts((*_1703_d.alloc)._field_Args));
		_2075a814d_WriteStr(_16533_buf, jule::Str::lit("::", 2));
	};
	static__1d4be3c95_structureIns(_16533_buf, &(_16554_s));
	if (((*_16554_s.alloc)._field_Generics.len() > 0LL)) {
		_2075a8406_WriteByte(_16533_buf, '<');
		{
			auto expr = &((*_16554_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d8ac85b0:;
			if (it != expr_end) {
				jule::I64 _1789_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> _17816_g = *it;
				{
					_1d4cb895d_kind(_self_, _16533_buf, (*(_17816_g))._field_Kind);
					if ((((*_16554_s.alloc)._field_Generics.len() - _1789_i) > 1LL)) {
						_2075a8406_WriteByte(_16533_buf, ',');
					};
				}
				_iter_next_1d8ac85b0:;
				++it;
				_1789_i++;
				goto _iter_begin_1d8ac85b0;
			}
			_iter_end_1d8ac85b0:;
		};
		_2075a8406_WriteByte(_16533_buf, '>');
	};
}



inline void _1d4cb7077_array(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _18926_buf, jule::Ptr<_1c67cb319_Arr> _18947_a) {
	_2075a814d_WriteStr(_18926_buf, jule::Str::lit("jule::Array<", 12));
	_1d4cb895d_kind(_self_, _18926_buf, (*(_18947_a))._field_Elem);
	_2075a8406_WriteByte(_18926_buf, ',');
	_2075a814d_WriteStr(_18926_buf, _1dd7115cd_Itoa((*_18947_a.alloc)._field_N));
	_2075a8406_WriteByte(_18926_buf, '>');
}



inline void _1d4cb774d_paramIns(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _21229_buf, jule::Ptr<_1c666c474_ParamIns>* _21251_p) {
	if ((*((*((*(_21251_p))))._field_Decl))._field_Variadic) {
		_2075a814d_WriteStr(_21229_buf, jule::Str::lit("jule::Slice<", 12));
		_1d4cb895d_kind(_self_, _21229_buf, (*((*(_21251_p))))._field_Kind);
		_2075a8406_WriteByte(_21229_buf, '>');
	} else {
		_1d4cb895d_kind(_self_, _21229_buf, (*((*(_21251_p))))._field_Kind);
	};
	if ((*((*((*(_21251_p))))._field_Decl))._field_Reference) {
		_2075a8406_WriteByte(_21229_buf, '*');
	};
}



inline void _1d4cb7e24_funcInsResult(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _24434_s, jule::Ptr<_1c666d4ec_FnIns>* _24454_f) {
	if (_1c666a9c2_IsVoid((*((*(_24454_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24454_f))))._field_Decl.alloc)._field_Exceptional) {
			_2075a814d_WriteStr(_24434_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_2075a814d_WriteStr(_24434_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24454_f))))._field_Decl.alloc)._field_Exceptional) {
		_2075a814d_WriteStr(_24434_s, jule::Str::lit("jule::Exceptional<", 18));
		_1d4cbd90d_codeMut1((*(_self_))._field_rc.ptr(), _24434_s, &((*((*(_24454_f))))._field_Result));
		_2075a8406_WriteByte(_24434_s, '>');
		return;;
	};
	_1d4cbd90d_codeMut1((*(_self_))._field_rc, _24434_s, &((*((*(_24454_f))))._field_Result));
}



inline void _1d4cb8287_anonFunc(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _26229_buf, jule::Ptr<_1c666d4ec_FnIns> _26250_f) {
	if ((((*(_26250_f))._field_Result != nullptr) && (_1c67c0dad_Tup((*(_26250_f))._field_Result) != nullptr))) {
		_1d4ca5e01_pushResultIns((*(_self_))._field_oc, &(_26250_f));
	};
	_1d4cb7e24_funcInsResult(_self_, _26229_buf, &(_26250_f));
	if (((*_26250_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_2075a8406_WriteByte(_26229_buf, ',');
	{
		auto expr = &((*_26250_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8ad9deb:;
		if (it != expr_end) {
			jule::I64 _2718_i = it - expr->begin();
			jule::Ptr<_1c666c474_ParamIns> _27115_param = *it;
			{
				if (_1c6669196_IsSelf((*(_27115_param))._field_Decl.ptr())) {
					goto _iter_next_1d8ad9deb;
				};
				_1d4cb774d_paramIns(_self_, _26229_buf, &(_27115_param));
				if ((((*_26250_f.alloc)._field_Params.len() - _2718_i) > 1LL)) {
					_2075a8406_WriteByte(_26229_buf, ',');
				};
			}
			_iter_next_1d8ad9deb:;
			++it;
			_2718_i++;
			goto _iter_begin_1d8ad9deb;
		}
		_iter_end_1d8ad9deb:;
	};
}



inline void _1d4cb85ea_func(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _28325_buf, jule::Ptr<_1c666d4ec_FnIns> _28346_f) {
	_2075a814d_WriteStr(_28325_buf, jule::Str::lit("jule::Fn<", 9));
	_1d4cb8287_anonFunc(_self_, _28325_buf, _28346_f);
	_2075a8406_WriteByte(_28325_buf, '>');
}



inline void _1d4cb895d_kind(_1d4cb375a_typeCoder* _self_, _20759e353_StrBuilder* _29025_buf, jule::Ptr<_1c67bb8d1_TypeKind> _29046_k) {
	{
		
		if ((_1c67c060a_Struct(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add43d:;
			{
				_1d4cb6c14_structureIns(_self_, _29025_buf, _1c67c060a_Struct(_29046_k));
				return;;
			}
		}
		else if (_1c67bc77d_Binded(_29046_k.ptr())) {
			_case_begin_1d8add4d7:;
			{
				_2075a814d_WriteStr(_29025_buf, (*_29046_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1c67be087_Prim(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add54d:;
			{
				_1d4cb4481_prim(_self_, _29025_buf, _1c67be087_Prim(_29046_k));
				return;;
			}
		}
		else if ((_1c67c0dad_Tup(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add5b4:;
			{
				_1d4cb47e4_tuple(_self_, _29025_buf, _1c67c0dad_Tup(_29046_k));
				return;;
			}
		}
		else if ((_1c67be31d_Sptr(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add62a:;
			{
				_1d4cb4eba_sptr(_self_, _29025_buf, _1c67be31d_Sptr(_29046_k));
				return;;
			}
		}
		else if ((_1c67be5a4_Ptr(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add6a2:;
			{
				_1d4cb532d_ptr(_self_, _29025_buf, _1c67be5a4_Ptr(_29046_k));
				return;;
			}
		}
		else if ((_1c67be83a_Enum(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add729:;
			{
				_1d4cb5691_enumDecl(_self_, _29025_buf, _1c67be83a_Enum(_29046_k));
				return;;
			}
		}
		else if ((_1c67beac1_TypeEnum(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add7a1:;
			{
				_1d4cb5a04_typeEnumDecl(_self_, _29025_buf, _1c67beac1_TypeEnum(_29046_k));
				return;;
			}
		}
		else if ((_1c67c00dd_Slc(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add828:;
			{
				_1d4cb61ca_slice(_self_, _29025_buf, _1c67c00dd_Slc(_29046_k));
				return;;
			}
		}
		else if ((_1c67c0b27_Map(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add8a0:;
			{
				_1d4cb653d_mapType(_self_, _29025_buf, _1c67c0b27_Map(_29046_k));
				return;;
			}
		}
		else if ((_1c67c0891_Trait(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add927:;
			{
				_2075a814d_WriteStr(_29025_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1c67bed57_Arr(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8add99e:;
			{
				_1d4cb7077_array(_self_, _29025_buf, _1c67bed57_Arr(_29046_k));
				return;;
			}
		}
		else if ((_1c67c0374_Fn(_29046_k.ptr()) != nullptr)) {
			_case_begin_1d8adda26:;
			{
				_1d4cb85ea_func(_self_, _29025_buf, _1c67c0374_Fn(_29046_k));
				return;;
			}
		}
		_match_end_1d8add251:;
	};
	{
		auto &_match_expr{ (*(_29046_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data29)) {
			_case_begin_1d8addaae:;
			{
				_2075a814d_WriteStr(_29025_buf, (*((*(_29046_k))._field_Kind.cast_ptr<_1d4cb2b22_customType>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data29)))._field_kind);
			}
		}
		else {
			_case_begin_1d8ae729e:;
			{
				_2075a814d_WriteStr(_29025_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1d8ae7238:;
	};
}








inline jule::Bool _1d4cbb345_resultCoder_eq(_1d4cbb345_resultCoder *_self_, _1d4cbb345_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1d4cbb345_resultCoder> static__1d4cbb851_new(jule::Ptr<_1d4cb375a_typeCoder>* _35821_tc) {
	return jule::new_ptr<_1d4cbb345_resultCoder>(_1d4cbb345_resultCoder{._field_tc=(*(_35821_tc))});;
}



inline void _1d4cbbbb4_ptr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _36224_s, jule::Ptr<_1c67cbcdc_Ptr> _36243_p) {
	_2075a814d_WriteStr(_36224_s, jule::Str::lit("p", 1));
	_1d4cbd59a_codeMut(_self_, _36224_s, &((*(_36243_p))._field_Elem));
}



inline void _1d4cbc027_sptr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _36725_s, jule::Ptr<_1c67c8525_Sptr> _36744_p) {
	_2075a814d_WriteStr(_36725_s, jule::Str::lit("x", 1));
	_1d4cbd59a_codeMut(_self_, _36725_s, &((*(_36744_p))._field_Elem));
}



inline void _1d4cbc38a_mapType(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _37228_s, jule::Ptr<_1c67ca68c_Map> _37247_p) {
	_2075a814d_WriteStr(_37228_s, jule::Str::lit("m", 1));
	_1d4cbd59a_codeMut(_self_, _37228_s, &((*(_37247_p))._field_Key));
	_1d4cbd59a_codeMut(_self_, _37228_s, &((*_37247_p.alloc)._field_Val));
}



inline void _1d4cbc6ed_slice(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _37826_s, jule::Ptr<_1c67c8ee8_Slc> _37845_slc) {
	_2075a814d_WriteStr(_37826_s, jule::Str::lit("s", 1));
	_1d4cbd59a_codeMut(_self_, _37826_s, &((*(_37845_slc))._field_Elem));
}



inline void _1d4cbca61_arr(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _38324_s, jule::Ptr<_1c67cb319_Arr> _38343_arr) {
	_2075a814d_WriteStr(_38324_s, jule::Str::lit("a", 1));
	_2075a814d_WriteStr(_38324_s, _1dd711314_FmtInt(static_cast<jule::I64>((*(_38343_arr))._field_N), 16LL));
	_1d4cbd59a_codeMut(_self_, _38324_s, &((*_38343_arr.alloc)._field_Elem));
}



inline void _1d4cbcdc4_func(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _38925_s, jule::Ptr<_1c666d4ec_FnIns> _38944_f) {
	_2075a814d_WriteStr(_38925_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_38944_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8aee75c:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _39115_p = *it;
			{
				if ((*((*(_39115_p))._field_Decl))._field_Reference) {
					_2075a814d_WriteStr(_38925_s, jule::Str::lit("r", 1));
				};
				_1d4cbd59a_codeMut(_self_, _38925_s, &((*_39115_p.alloc)._field_Kind));
			}
			_iter_next_1d8aee75c:;
			++it;
			goto _iter_begin_1d8aee75c;
		}
		_iter_end_1d8aee75c:;
	};
	if (((*_38944_f.alloc)._field_Result != nullptr)) {
		_1d4cbd59a_codeMut(_self_, _38925_s, &((*_38944_f.alloc)._field_Result));
	};
}



inline void _1d4cbd237_tup(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _40224_s, jule::Ptr<_1c67c9adc_Tuple> _40243_tup) {
	{
		auto expr = &((*(_40243_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b01de1:;
		if (it != expr_end) {
			jule::Ptr<_1c67bb8d1_TypeKind> _40315_t = *it;
			{
				_2075a814d_WriteStr(_40224_s, jule::Str::lit("__jule_tuple_", 13));
				_1d4cbd59a_codeMut(_self_, _40224_s, &(_40315_t));
			}
			_iter_next_1d8b01de1:;
			++it;
			goto _iter_begin_1d8b01de1;
		}
		_iter_end_1d8b01de1:;
	};
}



inline void _1d4cbd59a_codeMut(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _40928_s, jule::Ptr<_1c67bb8d1_TypeKind>* _40948_t) {
	if (_1c67bc77d_Binded((*(_40948_t)).ptr())) {
		_2075a814d_WriteStr(_40928_s, jule::Str::lit("b", 1));
		_2075a814d_WriteStr(_40928_s, (*((*(_40948_t))))._field_BindIdent);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_40948_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28)) {
			_case_begin_1d8b03585:;
			{
				_1d4cbbbb4_ptr(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67cbcdc_Ptr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)) {
			_case_begin_1d8b04223:;
			{
				_1d4cbc027_sptr(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67c8525_Sptr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26)) {
			_case_begin_1d8b04289:;
			{
				_1d4cbc38a_mapType(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67ca68c_Map>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)) {
			_case_begin_1d8b04300:;
			{
				_1d4cbc6ed_slice(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67c8ee8_Slc>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27)) {
			_case_begin_1d8b04366:;
			{
				_1d4cbca61_arr(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67cb319_Arr>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)) {
			_case_begin_1d8b047a6:;
			{
				_1d4cbcdc4_func(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c666d4ec_FnIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3)) {
			_case_begin_1d8b0481c:;
			{
				jule::Ptr<_1c66816a8_Enum> _4294_te = (*((*(_40948_t))))._field_Kind.cast_ptr<_1c66816a8_Enum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3);;
				static__1d4be25bd_toOut(_40928_s, (*(_4294_te))._field_Ident, static_cast<jule::Uintptr>(_4294_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4)) {
			_case_begin_1d8b04883:;
			{
				jule::Ptr<_1c6682db3_TypeEnum> _4324_te = (*((*(_40948_t))))._field_Kind.cast_ptr<_1c6682db3_TypeEnum>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data4);;
				static__1d4be25bd_toOut(_40928_s, (*(_4324_te))._field_Ident, static_cast<jule::Uintptr>(_4324_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)) {
			_case_begin_1d8b048e9:;
			{
				jule::Ptr<_1c665865d_StructIns> _4358_si = (*((*(_40948_t))))._field_Kind.cast_ptr<_1c665865d_StructIns>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0);;
				static__1d4be3c95_structureIns(_40928_s, &(_4358_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data2)) {
			_case_begin_1d8b04960:;
			{
				jule::Ptr<_1c667de9c_Trait> _4388_trt = (*((*(_40948_t))))._field_Kind.cast_ptr<_1c667de9c_Trait>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data2);;
				static__1d4be33d2_traitDecl(_40928_s, _4388_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)) {
			_case_begin_1d8b049c6:;
			{
				_2075a814d_WriteStr(_40928_s, (*((*((*(_40948_t))))._field_Kind.cast_ptr<_1c67c49e9_Prim>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25)) {
			_case_begin_1d8b04a3c:;
			{
				_1d4cbd237_tup(_self_, _40928_s, (*((*(_40948_t))))._field_Kind.cast_ptr<_1c67c9adc_Tuple>((jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1d8b041ac:;
			{
				__jule_panic_s(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:4"));;
			}
		}
		_match_end_1d8b04146:;
	};
}



inline void _1d4cbd90d_codeMut1(_1d4cbb345_resultCoder* _self_, _20759e353_StrBuilder* _44929_s, jule::Ptr<_1c67bb8d1_TypeKind>* _44949_t) {
	jule::Ptr<_1c67c9adc_Tuple> _4507_tup = _1c67c0dad_Tup((*(_44949_t)).ptr());;
	if ((_4507_tup != nullptr)) {
		_1d4cbd237_tup(_self_, _44929_s, _4507_tup);
	} else {
		_1d4cb895d_kind((*(_self_))._field_tc.ptr(), _44929_s, (*(_44949_t)));
	};
}



inline jule::Slice<jule::U8> _1d4cbdc1b_code(_1d4cbb345_resultCoder* _self_, jule::Ptr<_1c67bb8d1_TypeKind>* _45825_t) {
	_20759e353_StrBuilder _4597_s = static__2075a7c41_New(20LL);;
	_1d4cbd59a_codeMut(_self_, &(_4597_s), _45825_t);
	return _2075a93e6_Buf(&_4597_s);;
}








inline jule::Bool _1d8b10b58_Flag_eq(_1d8b10b58_Flag *_self_, _1d8b10b58_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d8b109b0_Name(_1d8b10b58_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d8b10e44_What(_1d8b10b58_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d8b11087_Reset(_1d8b10b58_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d8b111ca_Short(_1d8b10b58_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d8b14475_Flag_eq(_1d8b14475_Flag *_self_, _1d8b14475_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d8b14101_Name(_1d8b14475_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d8b14761_What(_1d8b14475_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d8b148a4_Reset(_1d8b14475_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d8b149e7_Short(_1d8b14475_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d8b17b82_Flag_eq(_1d8b17b82_Flag *_self_, _1d8b17b82_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d8b1780d_Name(_1d8b17b82_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d8b17e6d_What(_1d8b17b82_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d8b180b1_Reset(_1d8b17b82_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d8b18204_Short(_1d8b17b82_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d8b1b3d3_Flag_eq(_1d8b1b3d3_Flag *_self_, _1d8b1b3d3_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d8b1b05e_Name(_1d8b1b3d3_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d8b1b6be_What(_1d8b1b3d3_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d8b1b812_Reset(_1d8b1b3d3_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d8b1b955_Short(_1d8b1b3d3_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1d8b1eae0_Flag_eq(_1d8b1eae0_Flag *_self_, _1d8b1eae0_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1d8b1e76b_Name(_1d8b1eae0_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1d8b1edcb_What(_1d8b1eae0_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1d8b2001e_Reset(_1d8b1eae0_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1d8b20162_Short(_1d8b1eae0_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1d4d373d3_FlagSet> static__1d4d37702_New(void) {
	return jule::new_ptr<_1d4d373d3_FlagSet>(_1d4d373d3_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1d4d37ba8_FindFlag(_1d4d373d3_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b29963:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1d4d35810_CommonFlagMptrData*)_7215_flag.safe_type())->_1d4d046be_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1d8b29963:;
			++it;
			goto _iter_begin_1d8b29963;
		}
		_iter_end_1d8b29963:;
	};
	return nullptr;;
}



inline jule::Trait _1d4d37ee9_FindFlagShort(_1d4d373d3_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b2a17d:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1d4d35810_CommonFlagMptrData*)_8215_flag.safe_type())->_1d4d04812_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1d8b2a17d:;
			++it;
			goto _iter_begin_1d8b2a17d;
		}
		_iter_end_1d8b2a17d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1d4d385c1_Parse(_1d4d373d3_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1d4d39d97_argParser _1167_ap = _1d4d39d97_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1d4d3b3c6_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1d8b1eae0_Flag> _1d8b9d7d9_addFlagCommon(_1d4d373d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1d4d37ba8_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1d4d37ee9_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1d8b1eae0_Flag> _1407_flag = jule::new_ptr<_1d8b1eae0_Flag>(_1d8b1eae0_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1d8b1b3d3_Flag> _1d8ba78ae_addFlagCommon(_1d4d373d3_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1d4d37ba8_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1d4d37ee9_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1d8b1b3d3_Flag> _1407_flag = jule::new_ptr<_1d8b1b3d3_Flag>(_1d8b1b3d3_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1d8b9b0ab_AddVar(_1d4d373d3_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1d8b1eae0_Flag> _1717_flag = _1d8b9d7d9_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1d8ba51c5_AddVar(_1d4d373d3_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1d8b1b3d3_Flag> _1717_flag = _1d8ba78ae_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1d8b328b1_parseInteger(_1d4d39d97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1d8b35919:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1d8b35661:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1d8b35023:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1d8b35089:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1d8b35100:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d8b34eac:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d8b34d9c:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1d8b3a48a_parseInteger(_1d4d39d97_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1d8b3d57b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1d8b3d2c3:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1d8b3cb85:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_208769198_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1d8b3cbeb:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1d8b3cc62:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1d8b3cb1e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1d8b3ca0e:;
	};
	return __jule_func_result;;
}



inline jule::Str _1d4d3a6e4_getData(_1d4d39d97_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1d4d3a969_processFlag(_1d4d39d97_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data3)) {
			_case_begin_1d8b2ea67:;
			{
				jule::Ptr<_1d8b1b3d3_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1d8b1b3d3_Flag>((jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1d8b2ea01:;
	};
	jule::Str _2203_data = _1d4d3a6e4_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1d4d35810_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1d4d046be_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data0)) {
			_case_begin_1d8b3196a:;
			{
				jule::Ptr<_1d8b10b58_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1d8b10b58_Flag>((jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1d8b328b1_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1d8b363ba, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1d4d35810_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1d4d046be_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data1)) {
			_case_begin_1d8b313c6:;
			{
				jule::Ptr<_1d8b14475_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1d8b14475_Flag>((jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1d8b3a48a_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1d8b3e02c, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1d4d35810_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1d4d046be_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data2)) {
			_case_begin_1d8b319d1:;
			{
				jule::Ptr<_1d8b17b82_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1d8b17b82_Flag>((jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1dd70657e_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1d4d35810_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1d4d046be_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data4)) {
			_case_begin_1d8b31a47:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1d8b1eae0_Flag>((jule::Trait::Type*)&_1d4d35810_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1d8b3120b:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1d4d3ac22_singleDash(_1d4d39d97_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1d8b448a1:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1d4d37ee9_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1d4d3a969_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1d8b448a1:;
			it += len;
			goto _iter_begin_1d8b448a1;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1d4d3aeca_doubleDash(_1d4d39d97_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1d4d37ba8_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1d4d3a969_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1d4d3b1c8_tryArg(_1d4d39d97_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1d4d3aeca_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1d4d3ac22_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1d4d3b3c6_parse(_1d4d39d97_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1d4d3b1c8_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1d8b4960e:;
	}
	_iter_end_1d8b4960e:;;
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_1c73b4d7a_IR__jule_tuple_s_20806e73a_Log static__1c73b5353_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1c73b4d7a_IR__jule_tuple_s_20806e73a_Log __jule_func_result;
	jule::Ptr<_1c73b24d7_JuleImporter> _307_importer = static__1c73b2916_New(_1c73b6d05_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1c6632945_AST>> _327_files;
	jule::Slice<_20806e73a_Log> _3218_logs;
	({
		__jule_tuple_sx_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c73b3e01_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1c6632945_AST> _447_firstFile = _327_files[0LL];;
	_1c73b70ad_pushRuntimeToAST(&(_447_firstFile));
	jule::Ptr<_1c66d9304_Package> _477_pkg;
	({
		__jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c67dda8a_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1c66d3144_Importer_mptr_data0), _2929_flags);
		_477_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1c73b4d7a_IR> _527_ir = jule::new_ptr<_1c73b4d7a_IR>(_1c73b4d7a_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_477_pkg, ._field_Runtime=jule::Ptr<_1c66d63cd_ImportInfo>(nullptr), ._field_Used=_1c73b2b9c_AllPackages(_307_importer), ._field_Ordered=_1c73c02e7_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)}});;
	(*(_527_ir))._field_Passes=_1c73b6ae6_getAllUniquePasses(&((*_527_ir.alloc)._field_Main), (*_527_ir.alloc)._field_Used);
	(*_527_ir.alloc)._field_Runtime=(*((*(_477_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _527_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c73b583c_appendStructs(_1c73b4d7a_IR* _self_, jule::Ptr<_1c66d9304_Package>* _6730_p, jule::Slice<jule::Ptr<_1c6655803_Struct>>* _6754_buffer) {
	{
		auto expr = &((*((*(_6730_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e94dbc:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _6815_f = *it;
			{
				{
					auto expr = &((*(_6815_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7e95829:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _6916_s = *it;
						{
							if ((!((*(_6916_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1c6655803_Struct>> &__jule_push_dest = (*(_6754_buffer)); __jule_push_dest.push(_6916_s); };
							};
						}
						_iter_next_1d7e95829:;
						++it;
						goto _iter_begin_1d7e95829;
					}
					_iter_end_1d7e95829:;
				};
			}
			_iter_next_1d7e94dbc:;
			++it;
			goto _iter_begin_1d7e94dbc;
		}
		_iter_end_1d7e94dbc:;
	};
}



inline jule::Slice<jule::Ptr<_1c6655803_Struct>> _1c73b5ac3_GetAllStructures(_1c73b4d7a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c6655803_Struct>> _8011_buffer = nullptr;;
	_1c73b583c_appendStructs(_self_, &((*(_self_))._field_Main), &(_8011_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e969d4:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _8215_u = *it;
			{
				if ((!((*(_8215_u))._field_Binded))) {
					_1c73b583c_appendStructs(_self_, &((*_8215_u.alloc)._field_Package), &(_8011_buffer));
				};
			}
			_iter_next_1d7e969d4:;
			++it;
			goto _iter_begin_1d7e969d4;
		}
		_iter_end_1d7e969d4:;
	};
	return _8011_buffer;;
}



inline void _1c73b5e36_appendGlobals(_1c73b4d7a_IR* _self_, jule::Ptr<_1c66d9304_Package>* _9030_p, jule::Slice<jule::Ptr<_1c672acb3_Var>>* _9054_buffer) {
	{
		auto expr = &((*((*(_9030_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e98167:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _9115_f = *it;
			{
				{
					auto expr = &((*(_9115_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7e98ac4:;
					if (it != expr_end) {
						jule::Ptr<_1c672acb3_Var> _9216_v = *it;
						{
							if (((((*(_9216_v))._field_Token != nullptr) && (!((*_9216_v.alloc)._field_Binded))) && (!((*_9216_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*(_9054_buffer)); __jule_push_dest.push(_9216_v); };
							};
						}
						_iter_next_1d7e98ac4:;
						++it;
						goto _iter_begin_1d7e98ac4;
					}
					_iter_end_1d7e98ac4:;
				};
			}
			_iter_next_1d7e98167:;
			++it;
			goto _iter_begin_1d7e98167;
		}
		_iter_end_1d7e98167:;
	};
}



inline jule::Slice<jule::Ptr<_1c672acb3_Var>> _1c73b61bc_GetAllGlobals(_1c73b4d7a_IR* _self_) {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _10311_buffer = nullptr;;
	_1c73b5e36_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10311_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e9a4ee:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _10515_u = *it;
			{
				if ((!((*(_10515_u))._field_Binded))) {
					_1c73b5e36_appendGlobals(_self_, &((*_10515_u.alloc)._field_Package), &(_10311_buffer));
				};
			}
			_iter_next_1d7e9a4ee:;
			++it;
			goto _iter_begin_1d7e9a4ee;
		}
		_iter_end_1d7e9a4ee:;
	};
	return _10311_buffer;;
}



inline void _1c73b63ba_Order(_1c73b4d7a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1c73b61bc_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1c73b5ac3_GetAllStructures(_self_);
	_1d7e9c105_order((*(_self_))._field_Ordered._field_Globals);
	_1d7e9cbd8_order((*(_self_))._field_Ordered._field_Structs);
}











inline jule::Ptr<_208819a0c_Cmd> static__208819e4c_New(jule::Str _2616_path) {
	return jule::new_ptr<_208819a0c_Cmd>(_208819a0c_Cmd{._field_attrs=_20881dc64_cmdAttrs{}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _20881a14a_Spawn(_208819a0c_Cmd* _self_) {
	return _20881e11b_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20881a5ce_Wait(_208819a0c_Cmd* _self_) {
	return _20881e5a0_wait(_self_);
}



inline jule::VoidExceptional _20881e11b_spawn(_208819a0c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _220021dac_UTF16FromStr(_20881ebdd_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _2088200b7_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_2088212d8_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _20881e5a0_wait(_208819a0c_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_2210a0da2_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_2210a0da2_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}







inline jule::I32 _220020e11_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _2200211ca_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _22002151b_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d476e0:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1d4d476e0:;
			++it;
			goto _iter_begin_1d4d476e0;
		}
		_iter_end_1d4d476e0:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d4944a:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1d4d4a11b:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1d4d49cdb:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2200211ca_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1d4d49c75:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1d4d49b65:;
				};
			}
			_iter_next_1d4d4944a:;
			++it;
			goto _iter_begin_1d4d4944a;
		}
		_iter_end_1d4d4944a:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _2200217a2_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1d4d4e906:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1d4d4e6c5:;
					{
						_1206_a[_1216_n]=_220020e11_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1d4d4e30c:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1d4d4e296:;
			};
			(_1216_n)++;
		}
	_iter_next_1d4d4c3a4:;
	}
	_iter_end_1d4d4c3a4:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _220021b26_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1d4d52244:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1d4d522dd:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _2200211ca_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1d4d52145:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _220021dac_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d5c2d7:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1d4d5c2d7;
				};
				_176_buff=_220021b26_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1d4d5c2d7:;
			++it;
			goto _iter_begin_1d4d5c2d7;
		}
		_iter_end_1d4d5c2d7:;
	};
	return _220021b26_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _2200221ba_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d4d5e96b:;
		if (it != expr_end) {
			jule::I64 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1d4d5e96b;
				};
			}
			_iter_next_1d4d5e96b:;
			++it;
			_356_i++;
			goto _iter_begin_1d4d5e96b;
		}
		_iter_end_1d4d5e96b:;
	};
	return __jule_runesToStr(_2200217a2_Decode(_346_codePage));;
}



inline jule::Str _220022484_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I64 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_2200217a2_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1d4d6030c:;
	}
	_iter_end_1d4d6030c:;;
	return jule::Str();;
}



inline jule::Str _2200232ba_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1d4d6b03d_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _220023e03_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1d4d6b03d_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _220024189_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _2200232ba_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _220024453_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I64 _220025ba2_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _2210a0ad8_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _2210a0da2_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _2210a1226_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _2210a1655_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _2210a1864_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _2210a1bd8_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _2210a226b_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _2210a2535_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _2210a27ee_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _2210a2cd8_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1092_buff)), ((wchar_t**)(_10914_fname)));;
}



inline jule::Bool _2210a315c_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _2210a3767_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _2210a3cb7_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_1257_written)))), _12521_reserved);;
}



inline jule::Bool _2210a42a1_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_1337_readed)), nullptr);;
}



inline jule::Uintptr _2210a4834_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _2210a4ba8_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _2210a4e72_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _2210a7051_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _2210a742a_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _2210a77d2_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2210a7a13_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _2066ae95e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _2066ad6c7_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_2066adc7c_acceptRange _1962_accept = _2066ae123_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2066aeca0_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _2066ad6c7_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_2066adc7c_acceptRange _2432_accept = _2066ae123_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _2066b0300_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_2066b1a1b_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1d4e19a15;
			};
		}
	_iter_next_1d4e19a15:;
	}
	_iter_end_1d4e19a15:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _2066b05b9_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1d4e1b808:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1d4e1bc04:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1d4e1bc6a:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1d4e1bce2:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1d4e1bd69:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1d4e1b86e:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1d4e1b792:;
			{
				return -1LL;;
			}
		}
		_match_end_1d4e1b6a4:;
	};
}



inline jule::I64 _2066b0a4d_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1d4e214cd:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1d4e21b93:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1d4e1e82d:;
			{
				_37434_r=65533LL;
				goto _case_begin_1d4e21a61;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1d4e21a61:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1d4e1e465:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1d4e1e3dd:;
	};
}



inline jule::Slice<jule::U8> _2066b0d4a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _2066b11be_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _2066b11be_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1d4e28c99:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1d4e27957:;
			{
				_41242_r=128LL;
				goto _case_begin_1d4e279bd;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1d4e279bd:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1d4e271e8:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1d4e27171:;
	};
}



inline jule::I64 _2066b1752_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1d4e320b0;
			};
			jule::U8 _4823_x = _2066ad6c7_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1d4e320b0;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1d4e320b0;
			};
			_2066adc7c_acceptRange _4923_accept = _2066ae123_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1d4e320b0:;
	}
	_iter_end_1d4e320b0:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _2066b1a1b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _238a14468_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _238a1bd00_Len64(_6119_x));;
}



inline jule::I64 _238a153ae_TrailingZeros(jule::U64 _8318_x) {
	;
	return _238a1605d_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _238a15c94_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_238a14aa6__DE_BRUIJN32_TAB[static_cast<jule::I64>(((jule::U32)((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _238a1605d_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_238a1514a__DE_BRUIJN64_TAB[static_cast<jule::I64>(((jule::U64)((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _238a1ba36_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x=(_35214_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x=(_35214_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _238a1bd00_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x=(_36614_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x=(_36614_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x=(_36614_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _238a1ca8c_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _238a1e396_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (jule::U64)(_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = (jule::U64)((jule::U64)(_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(jule::U64)(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::I64 _239890238_randInt(jule::U64 _716_seed, jule::I64 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U64 _172_p2 = static_cast<jule::U64>(_162_p1);;
	return ({ jule::I64 __jule_x = static_cast<jule::I64>((({ jule::U64 __jule_x = _172_p2; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I64 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1d50b541e_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1d50b6ec0:;
	}
	_iter_end_1d50b6ec0:;;
	return true;;
}

inline jule::Bool _1d612a2c9_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1d612b97e:;
	}
	_iter_end_1d612b97e:;;
	return true;;
}

inline jule::Bool _1d8328bce_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1d832a73b:;
	}
	_iter_end_1d832a73b:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I64 _1328_n) {
	__jule_writeStderr(_220023e03_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1d4d6b03d_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_220023e03_StrBytes(jule::Str::lit("\n", 1)));
	_2210a7a13_Exit(2LL);
}



inline void _2066b281e__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I64 _2066b2b2c_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _220021dac_UTF16FromStr(_220024189_BytesStr(_1545_buf));;
	jule::Bool _202_ok = _2210a3cb7_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), _192_utf16Buf.len(), &(__jule_func_result), nullptr);;
	if ((!(_202_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I64 _2066b2ea1_readConsole(jule::Uintptr _2923_handle, jule::Slice<jule::U8> _2948_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_2948_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _336_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_2948_buf.len(), _2948_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Bool _342_ok = _2210a42a1_ReadConsole(_2923_handle, (&(_336_codepage[0LL])), _336_codepage.len(), &(__jule_func_result));;
	if ((!(_342_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _392_runes = _2200217a2_Decode(_336_codepage.slice(0LL, __jule_func_result));;
	__jule_func_result=0LL;
	{
		auto expr = &(_392_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d500a397:;
		if (it != expr_end) {
			jule::I32 *_419_r = it;
			{
				jule::I64 _423_size = _2066b05b9_RuneLen((*(_419_r)));;
				if (((__jule_func_result + _423_size) > _2948_buf.len())) {
					goto _iter_end_1d500a397;
				};
				_2066b0a4d_EncodeRune(_2948_buf.slice(__jule_func_result), (*(_419_r)));
				__jule_func_result+=_423_size;
			}
			_iter_next_1d500a397:;
			++it;
			goto _iter_begin_1d500a397;
		}
		_iter_end_1d500a397:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I64 __jule_writeStdout(jule::Slice<jule::U8> _5620_buf) {
	_2066c7bdb_handleRW(&(_5620_buf));
	return _2066b2b2c_writeConsole(_2210a0577_STDOUT, _5620_buf);;
}



inline jule::I64 __jule_writeStderr(jule::Slice<jule::U8> _6420_buf) {
	_2066c7bdb_handleRW(&(_6420_buf));
	return _2066b2b2c_writeConsole(_2210a0874_STDERR, _6420_buf);;
}



inline jule::I64 __jule_readStdin(jule::Slice<jule::U8> _7218_buf) {
	_2066c7bdb_handleRW(&(_7218_buf));
	return _2066b2ea1_readConsole(_2210a02d0_STDIN, _7218_buf);;
}



inline jule::Slice<jule::Str> _2066b9716_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d500d378:;
		if (it != expr_end) {
			jule::I64 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_220022484_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1d500d378:;
			++it;
			_196_i++;
			goto _iter_begin_1d500d378;
		}
		_iter_end_1d500d378:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _2066b9bbc_executable(void) {
	;
	jule::Slice<jule::U16> _476_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _482_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_476_buf[0LL])))), 260LL);;
	if ((_482_n > 0LL)) {
		_476_buf[_482_n]=0LLU;
		return _220022484_U16PtrToStr((&(_476_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:53:2"));;
}



inline jule::U64 __jule_RCLoad(jule::U64* _1019_p) {
	return (*(_1019_p));;
}



inline void __jule_RCAdd(jule::U64* _1722_p) {
	(*(_1722_p))+=1LLU;
}



inline jule::Bool __jule_RCDrop(jule::U64* _2523_p) {
	jule::Bool _272_alive = ((*(_2523_p)) > 1LLU);;
	(*(_2523_p))-=1LLU;
	return _272_alive;;
}



inline jule::U64* __jule_RCNew(void) {
	;
	;
	jule::U64* _256_p = ((jule::U64*)(malloc(8LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline void __jule_RCFree(jule::U64* _3519_p) {
	free(_3519_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I64>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1d501b809:;
	}
	_iter_end_1d501b809:;;
	jule::I64 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1d501bcb0:;
	}
	_iter_end_1d501bcb0:;;
	return _220024453_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _522_n = _2066c4578_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _220024453_StrFromBytes(_516_buf);;
}



inline jule::I64 _2066c4578_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I64 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1d5021c93:;
	}
	_iter_end_1d5021c93:;;
	jule::I64 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_2066c5722_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	jule::I64 _842_n = 26LL;;
	jule::Slice<jule::U8> _856_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_842_n, _842_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _866_j = 0LL;;
	if ((_8017_f < 0LL)) {
		_856_buf[0LL]='-';
		(_866_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _932_intPart = static_cast<jule::U64>(_8017_f);;
	_866_j+=_2066c4578_u64ToBuf(_856_buf.slice(_866_j), _932_intPart);
	_856_buf[_866_j]='.';
	jule::F64 _976_fracPart = (_8017_f - static_cast<jule::F64>(_932_intPart));;
	jule::I64 _986_i = 0LL;;
	for (; (_986_i < 4LL); (_986_i)++) {
		{
			_976_fracPart*=10LL;
			jule::I64 _1013_digit = static_cast<jule::I64>(_976_fracPart);;
			(_866_j)++;
			_856_buf[_866_j]=static_cast<jule::U8>(('0' + _1013_digit));
			_976_fracPart-=static_cast<jule::F64>(_1013_digit);
		}
	_iter_next_1d502746e:;
	}
	_iter_end_1d502746e:;;
	for (; (_866_j >= 0LL); (_866_j)--) {
		{
			if ((_856_buf[_866_j] != '0')) {
				goto _iter_end_1d502830a;
			};
		}
	_iter_next_1d502830a:;
	}
	_iter_end_1d502830a:;;
	if ((_856_buf[_866_j] != '.')) {
		(_866_j)++;
	};
	(_856_buf).mut_slice(0LL, _866_j);;
	return _220024453_StrFromBytes(_856_buf);;
}



inline jule::Str _1d8b6b6b9_arrToStr(jule::Slice<jule::U8> _12316_x) {
	jule::Slice<jule::U8> _1246_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_12316_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b6c984:;
		if (it != expr_end) {
			jule::I64 _1266_i = it - expr->begin();
			jule::U8 *_1269_z = it;
			{
				if ((_1266_i > 0LL)) {
					(_1246_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1246_buf).append(_1d50991e4_toStr((*(_1269_z))));;
			}
			_iter_next_1d8b6c984:;
			++it;
			_1266_i++;
			goto _iter_begin_1d8b6c984;
		}
		_iter_end_1d8b6c984:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1246_buf; __jule_push_dest.push(']'); };
	return _220024453_StrFromBytes(_1246_buf);;
}



inline jule::Str _1d8b6155a_structToStr(_20759e353_StrBuilder _15619_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1d8b64591:;
				{
					;
					{
						
{
							_case_begin_1d8b65729:;
							{
								;
								;
							}
						}
						_match_end_1d8b6540a:;
					};
				}
			}
			_match_end_1d8b63b34:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1d8b6760a:;
				{
					(_1776_buf).append(_1d8b67de1_toStr(_15619_x._field_buf));;
				}
			}
			_match_end_1d8b67561:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1776_buf; __jule_push_dest.push('}'); };
	return _220024453_StrFromBytes(_1776_buf);;
}



inline jule::Str _1d5083431_toStr(jule::Any _19713_x) {
	;
	{
		
{
			_case_begin_1d5084663:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d5084575:;
	};
	{
		
{
			_case_begin_1d5084b80:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _19713_x.type->to_str(_19713_x.data.alloc);;
			}
		}
		_match_end_1d5084a1a:;
	};
}

inline jule::Str _1d508560e_toStr(jule::Str _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d5086885:;
			{
				return _19713_x;;
			}
		}
		_match_end_1d508681e:;
	};
}

inline jule::Str _1d5085d5c_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d508938d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1d50892a0:;
	};
}

inline jule::Str _1d508aaba_toStr(jule::I8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d508bd1e:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1d508bc31:;
	};
}

inline jule::Str _1d50887ee_toStr(jule::I16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d508e7a0:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1d508e6b2:;
	};
}

inline jule::Str _1d5090ecc_toStr(jule::I32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50922b9:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1d50921cb:;
	};
}

inline jule::Str _1d50939b3_toStr(jule::I64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d5094cd3:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_19713_x));;
			}
		}
		_match_end_1d5094be5:;
	};
}

inline jule::Str _1d5096510_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50977db:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d5097676:;
	};
}

inline jule::Str _1d5094024_toStr(jule::Uintptr _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d5099c2d:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d5099ab8:;
	};
}

inline jule::Str _1d50991e4_toStr(jule::U8 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d509c170:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d509c00a:;
	};
}

inline jule::Str _1d509b636_toStr(jule::U16 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d509e5b2:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d509e44c:;
	};
}

inline jule::Str _1d509da78_toStr(jule::U32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50a1a04:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d50a188e:;
	};
}

inline jule::Str _1d50a0eba_toStr(jule::U64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50a4089:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_19713_x));;
			}
		}
		_match_end_1d50a3e24:;
	};
}

inline jule::Str _1d50a4397_toStr(jule::F32 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50a6597:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1d50a63aa:;
	};
}

inline jule::Str _1d50a3451_toStr(jule::F64 _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50a85ee:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_19713_x));;
			}
		}
		_match_end_1d50a8412:;
	};
}

inline jule::Str _1d50913a6_toStr(jule::Bool _19713_x) {
	;
	;
	{
		
{
			_case_begin_1d50aa4be:;
			{
				return __jule_boolToStr(_19713_x);;
			}
		}
		_match_end_1d50aa249:;
	};
}

inline jule::Str _1d50aa634_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d50ac15d:;
			{
				return _1d5085d5c_toStr(_19713_x);;
			}
		}
		_match_end_1d50ab228:;
	};
}

inline jule::Str _1d5d42cc2_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d5d447eb:;
			{
				return _1d5085d5c_toStr(_19713_x);;
			}
		}
		_match_end_1d5d44202:;
	};
}

inline jule::Str _1d5d6eea8_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d5d719d2:;
			{
				return _1d5085d5c_toStr(_19713_x);;
			}
		}
		_match_end_1d5d713d8:;
	};
}

inline jule::Str _1d61b9742_toStr(jule::I64 _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d61bb238:;
			{
				return _1d5085d5c_toStr(_19713_x);;
			}
		}
		_match_end_1d61bab3e:;
	};
}

inline jule::Str _1d6796747_toStr(jule::Ptr<_1c6651568_Impl> _19713_x) {
	;
	{
		
{
			_case_begin_1d6797913:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6797825:;
	};
	;
	{
		
{
			_case_begin_1d67983b4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6798084:;
	};
}

inline jule::Str _1d6796a11_toStr(jule::Ptr<_1c664b420_TypeAliasDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d679b1ca:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d679b0dc:;
	};
	;
	{
		
{
			_case_begin_1d679bb7b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d679b84b:;
	};
}

inline jule::Str _1d679934e_toStr(jule::Ptr<_1c66506bb_StructDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d679ece4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d679ec06:;
	};
	;
	{
		
{
			_case_begin_1d67a0795:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67a0465:;
	};
}

inline jule::Str _1d679cb16_toStr(jule::Ptr<_1c66465b3_FnDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d67a3b83:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67a3a95:;
	};
	;
	{
		
{
			_case_begin_1d67a4634:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67a4304:;
	};
}

inline jule::Str _1d67a5459_toStr(jule::Ptr<_1c6650e08_TraitDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d67a779c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67a76ae:;
	};
	;
	{
		
{
			_case_begin_1d67a824d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67a7e1d:;
	};
}

inline jule::Str _1d67a9073_toStr(jule::Ptr<_1c664776d_VarDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d67ab3b6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67ab2c8:;
	};
	;
	{
		
{
			_case_begin_1d67abd67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67aba37:;
	};
}

inline jule::Str _1d67acb8c_toStr(jule::Ptr<_1c664da71_EnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d67aeed0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67aede2:;
	};
	;
	{
		
{
			_case_begin_1d67b0981:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67b0651:;
	};
}

inline jule::Str _1d67b1542_toStr(jule::Ptr<_1c664ea0b_TypeEnumDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d67b3885:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67b3797:;
	};
	;
	{
		
{
			_case_begin_1d67b4336:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67b4006:;
	};
}

inline jule::Str _1d67d3531_toStr(jule::Ptr<_1c66528cc_Field> _19713_x) {
	;
	{
		
{
			_case_begin_1d67d471e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67d4631:;
	};
	;
	{
		
{
			_case_begin_1d67d51c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67d4d90:;
	};
}

inline jule::Str _1d67e5642_toStr(jule::Ptr<_1dd71e850_Const> _19713_x) {
	;
	{
		
{
			_case_begin_1d67e6830:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67e6742:;
	};
	;
	{
		
{
			_case_begin_1d67e72d1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67e6ea1:;
	};
}

inline jule::Str _1d67eb79c_toStr(jule::Ptr<_1c672acb3_Var> _19713_x) {
	;
	{
		
{
			_case_begin_1d67ed392:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67ed2a4:;
	};
	;
	{
		
{
			_case_begin_1d67edd43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d67eda13:;
	};
}

inline jule::Str _1d6812bc0_toStr(jule::Ptr<_1c6680b3b_EnumItem> _19713_x) {
	;
	{
		
{
			_case_begin_1d6813d9c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6813cae:;
	};
	;
	{
		
{
			_case_begin_1d681484d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d681451d:;
	};
}

inline jule::Str _1d68242db_toStr(jule::Ptr<_1c6668a47_Param> _19713_x) {
	;
	{
		
{
			_case_begin_1d68254c9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d68253db:;
	};
	;
	{
		
{
			_case_begin_1d6825e7a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6825b4a:;
	};
}

inline jule::Str _1d684adc3_toStr(jule::Ptr<_1c6655803_Struct> _19713_x) {
	;
	{
		
{
			_case_begin_1d684c0b1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d684bec3:;
	};
	;
	{
		
{
			_case_begin_1d684ca62:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d684c732:;
	};
}

inline jule::Str _1d684d5e0_toStr(jule::Ptr<_1c667de9c_Trait> _19713_x) {
	;
	{
		
{
			_case_begin_1d6850aa9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d68509bb:;
	};
	;
	{
		
{
			_case_begin_1d685155a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d685122a:;
	};
}

inline jule::Str _1d6851d63_toStr(jule::Ptr<_1c66816a8_Enum> _19713_x) {
	;
	{
		
{
			_case_begin_1d685432c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d685423e:;
	};
	;
	{
		
{
			_case_begin_1d6854ccd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d685499d:;
	};
}

inline jule::Str _1d68555d6_toStr(jule::Ptr<_1c6682db3_TypeEnum> _19713_x) {
	;
	{
		
{
			_case_begin_1d6857aa0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d68579b2:;
	};
	;
	{
		
{
			_case_begin_1d6858551:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6858221:;
	};
}

inline jule::Str _1d685d237_toStr(jule::Ptr<_1c666a51b_Fn> _19713_x) {
	;
	{
		
{
			_case_begin_1d685e39d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d685e2b0:;
	};
	;
	{
		
{
			_case_begin_1d685ed4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d685ea1e:;
	};
}

inline jule::Str _1d691c9cd_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d691e507:;
			{
				return _1d508560e_toStr(_19713_x);;
			}
		}
		_match_end_1d691de0d:;
	};
}

inline jule::Str _1d6965a15_toStr(jule::Ptr<_1c67baade_TypeAlias> _19713_x) {
	;
	{
		
{
			_case_begin_1d6966d79:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6966c8b:;
	};
	;
	{
		
{
			_case_begin_1d696782a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d69674ea:;
	};
}

inline jule::Str _1d69e8290_toStr(jule::Ptr<_1c663500d_IdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d69e944a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d69e935c:;
	};
	;
	{
		
{
			_case_begin_1d69e9deb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d69e9abb:;
	};
}

inline jule::Str _1d6a10609_toStr(jule::Ptr<_1c6663107_TupleExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a1161b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a1152d:;
	};
	;
	{
		
{
			_case_begin_1d6a120bc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a11c8c:;
	};
}

inline jule::Str _1d6a12a90_toStr(jule::Ptr<_1c663982b_TupleExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a15488:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a1539a:;
	};
	;
	{
		
{
			_case_begin_1d6a15e39:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a15b09:;
	};
}

inline jule::Str _1d6a22990_toStr(jule::Ptr<_1c66433a1_AssignSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a23a90:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a239a2:;
	};
	;
	{
		
{
			_case_begin_1d6a24541:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a24211:;
	};
}

inline jule::Str _1d6a25ad6_toStr(jule::Ptr<_1c6638c37_Expr> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a26c08:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a2561e:;
	};
	;
	{
		
{
			_case_begin_1d6a27b71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a27379:;
	};
}

inline jule::Str _1d6a27cb4_toStr(jule::Ptr<_1c66b6b50_Postfix> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a2a0e6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a2a008:;
	};
	;
	{
		
{
			_case_begin_1d6a2aa97:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a2a778:;
	};
}

inline jule::Str _1d6a2a954_toStr(jule::Ptr<_1c66b7106_Assign> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a2b8de:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a2b801:;
	};
	;
	{
		
{
			_case_begin_1d6a2d66b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a2d32a:;
	};
}

inline jule::Str _1d6a2848a_toStr(jule::Ptr<_1c66b75ac_MultiAssign> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a2e172:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a2e084:;
	};
	;
	{
		
{
			_case_begin_1d6a3609c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a35c5b:;
	};
}

inline jule::Str _1d6a34a07_toStr(jule::Ptr<_1c6788b56_Data> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a3706a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a36e7c:;
	};
	;
	{
		
{
			_case_begin_1d6a38d5d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a389b7:;
	};
}

inline jule::Str _1d6a39611_toStr(jule::Ptr<_1c665e9e9_FnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a3ba75:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a3b987:;
	};
	;
	{
		
{
			_case_begin_1d6a3c526:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a3c1e6:;
	};
}

inline jule::Str _1d6a6b18c_toStr(jule::Ptr<_1c66b6116_Label> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a6c347:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a6c259:;
	};
	;
	{
		
{
			_case_begin_1d6a6cce8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a6c9b8:;
	};
}

inline jule::Str _1d6a89ab2_toStr(jule::Ptr<_1c66b35b9_Scope> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a8aca0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a8abb2:;
	};
	;
	{
		
{
			_case_begin_1d6a8b751:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a8b421:;
	};
}

inline jule::Str _1d6a9402d_toStr(jule::Ptr<_1c666621a_BuiltinErrorCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a951d8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a950ea:;
	};
	;
	{
		
{
			_case_begin_1d6a95b89:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a95859:;
	};
}

inline jule::Str _1d6a986b4_toStr(jule::Ptr<_1c666722c_BackendEmitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a9974d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a99660:;
	};
	;
	{
		
{
			_case_begin_1d6a9a1ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a99dbe:;
	};
}

inline jule::Str _1d6a98dac_toStr(jule::Ptr<_1c6664e94_BuiltinAppendCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a9b2bb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a9b1cd:;
	};
	;
	{
		
{
			_case_begin_1d6a9d048:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6a9cc18:;
	};
}

inline jule::Str _1d6a9e346_toStr(jule::Ptr<_1c66634d1_BuiltinOutCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6a9dd90:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6a9dca2:;
	};
	;
	{
		
{
			_case_begin_1d6aa0b1c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aa07cb:;
	};
}

inline jule::Str _1d6aa09c9_toStr(jule::Ptr<_1c66638aa_BuiltinOutlnCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6aa1964:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6aa1876:;
	};
	;
	{
		
{
			_case_begin_1d6aa36e1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aa33a0:;
	};
}

inline jule::Str _1d6aa359d_toStr(jule::Ptr<_1c666415d_BuiltinPanicCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6aa4538:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6aa444a:;
	};
	;
	{
		
{
			_case_begin_1d6aa62b5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aa5e74:;
	};
}

inline jule::Str _1d6aa6172_toStr(jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6aa710c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6aa701e:;
	};
	;
	{
		
{
			_case_begin_1d6aa8d89:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aa8a48:;
	};
}

inline jule::Str _1d6aa8c46_toStr(jule::Ptr<_1c6665d41_BuiltinCopyCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6aa9bd1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6aa9ae3:;
	};
	;
	{
		
{
			_case_begin_1d6aab95d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aab61c:;
	};
}

inline jule::Str _1d6aab81a_toStr(jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6aac541:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6aac453:;
	};
	;
	{
		
{
			_case_begin_1d6aae752:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6aade9e:;
	};
}

inline jule::Str _1d6aace8c_toStr(jule::Ptr<_1c6667529_FreeExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6ab0115:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6ab0027:;
	};
	;
	{
		
{
			_case_begin_1d6ab1d92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6ab1a51:;
	};
}

inline jule::Str _1d6ab9ce0_toStr(jule::Ptr<_1c66b4202_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1d67ece0d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d67ecd0e:;
	};
	;
	{
		
{
			_case_begin_1d6abb550:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6abab04:;
	};
}

inline jule::Str _1d6ac4cc8_toStr(jule::Ptr<_1c66b44ee_InfIter> _19713_x) {
	;
	{
		
{
			_case_begin_1d6ac5eb6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6ac5dc8:;
	};
	;
	{
		
{
			_case_begin_1d6ac6967:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6ac6637:;
	};
}

inline jule::Str _1d6acab36_toStr(jule::Ptr<_1c66b49a5_WhileIter> _19713_x) {
	;
	{
		
{
			_case_begin_1d6acbd24:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6acbc36:;
	};
	;
	{
		
{
			_case_begin_1d6acc7c5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6acc495:;
	};
}

inline jule::Str _1d6b02751_toStr(jule::Ptr<_1c66b5401_RangeIter> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b0393e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b03851:;
	};
	;
	{
		
{
			_case_begin_1d6b043e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b040b0:;
	};
}

inline jule::Str _1d6b12464_toStr(jule::Ptr<_1c6648be2_WhileKind> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b1361e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b13531:;
	};
	;
	{
		
{
			_case_begin_1d6b140c0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b13c90:;
	};
}

inline jule::Str _1d6b150e3_toStr(jule::Ptr<_1c66495e9_RangeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b1747a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b1738c:;
	};
	;
	{
		
{
			_case_begin_1d6b17e2b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b17aeb:;
	};
}

inline jule::Str _1d6b3195b_toStr(jule::Ptr<_1c66b5786_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b32b49:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b32a5b:;
	};
	;
	{
		
{
			_case_begin_1d6b335ea:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b332ba:;
	};
}

inline jule::Str _1d6b3a7bc_toStr(jule::Ptr<_1c66b6776_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b3b9aa:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b3b8bc:;
	};
	;
	{
		
{
			_case_begin_1d6b3c45b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b3c12b:;
	};
}

inline jule::Str _1d6b71825_toStr(jule::Ptr<_1c663a552_IdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b729e1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b72903:;
	};
	;
	{
		
{
			_case_begin_1d6b73492:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b73162:;
	};
}

inline jule::Str _1d6b8643e_toStr(jule::Ptr<_1c6660379_IndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6b875e9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6b8750b:;
	};
	;
	{
		
{
			_case_begin_1d6b8809a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6b87c6a:;
	};
}

inline jule::Str _1d6bd4943_toStr(jule::Ptr<_1c66b7ce9_Match> _19713_x) {
	;
	{
		
{
			_case_begin_1d6bd5b31:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6bd5a43:;
	};
	;
	{
		
{
			_case_begin_1d6bd65d2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6bd62a2:;
	};
}

inline jule::Str _1d6be8c76_toStr(jule::Ptr<_1c66b901a_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6bea607:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6bea519:;
	};
	;
	{
		
{
			_case_begin_1d6beb0a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6beac78:;
	};
}

inline jule::Str _1d6c14cd6_toStr(jule::Ptr<_1c66b5b60_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c15ec4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c15dd6:;
	};
	;
	{
		
{
			_case_begin_1d6c16975:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c16645:;
	};
}

inline jule::Str _1d6c1b480_toStr(jule::Ptr<_1c66b93b1_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c1c66d:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c1c580:;
	};
	;
	{
		
{
			_case_begin_1d6c1d11e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c1ccde:;
	};
}

inline jule::Str _1d6c25e07_toStr(jule::Ptr<_1c6644924_ScopeTree> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c270a1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c26eb3:;
	};
	;
	{
		
{
			_case_begin_1d6c27a52:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c27722:;
	};
}

inline jule::Str _1d6c2ab54_toStr(jule::Ptr<_1c664abd3_Conditional> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c2bca9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c2bbbb:;
	};
	;
	{
		
{
			_case_begin_1d6c2c75a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c2c42a:;
	};
}

inline jule::Str _1d6c2ada7_toStr(jule::Ptr<_1c66483b7_Iter> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c2ee99:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c2edab:;
	};
	;
	{
		
{
			_case_begin_1d6c3094a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c3061a:;
	};
}

inline jule::Str _1d6c2d0eb_toStr(jule::Ptr<_1c6649d9c_ContSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c33189:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c3309b:;
	};
	;
	{
		
{
			_case_begin_1d6c33b3a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c3380a:;
	};
}

inline jule::Str _1d6c312db_toStr(jule::Ptr<_1c6641ed7_LabelSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c34d39:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c34c4b:;
	};
	;
	{
		
{
			_case_begin_1d6c36ab6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c36786:;
	};
}

inline jule::Str _1d6c381a0_toStr(jule::Ptr<_1c66423b1_GotoSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c39305:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c39217:;
	};
	;
	{
		
{
			_case_begin_1d6c39ca6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c39976:;
	};
}

inline jule::Str _1d6c3a889_toStr(jule::Ptr<_1c664c1e0_MatchCase> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c3cc76:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c3cb88:;
	};
	;
	{
		
{
			_case_begin_1d6c3d727:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c3d3e7:;
	};
}

inline jule::Str _1d6c3ab20_toStr(jule::Ptr<_1c66426ad_FallSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c40e66:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c40d78:;
	};
	;
	{
		
{
			_case_begin_1d6c41917:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c415d7:;
	};
}

inline jule::Str _1d6c3e0b8_toStr(jule::Ptr<_1c66499c3_BreakSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c44156:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c44068:;
	};
	;
	{
		
{
			_case_begin_1d6c44b07:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c447c7:;
	};
}

inline jule::Str _1d6c422a8_toStr(jule::Ptr<_1c6647b47_RetSt> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c47346:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c47258:;
	};
	;
	{
		
{
			_case_begin_1d6c47ce7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c479b7:;
	};
}

inline jule::Str _1d6c45498_toStr(jule::Ptr<_1c663960b_UseExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d6c4a536:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6c4a448:;
	};
	;
	{
		
{
			_case_begin_1d6c4aed7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6c4aba7:;
	};
}

inline jule::Str _1d6ccbce3_toStr(jule::Ptr<_1c666258a_StructSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6ccd146:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6ccd058:;
	};
	;
	{
		
{
			_case_begin_1d6ccdae7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6ccd7b7:;
	};
}

inline jule::Str _1d6ccc574_toStr(jule::Ptr<_1c665cde3_UnaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d6cd1c4e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6cd1b61:;
	};
	;
	{
		
{
			_case_begin_1d6cd2700:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6cd23c0:;
	};
}

inline jule::Str _1d6d16c51_toStr(jule::Ptr<_1c666d4ec_FnIns> _19713_x) {
	;
	{
		
{
			_case_begin_1d6d17e3e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d6d17d51:;
	};
	;
	{
		
{
			_case_begin_1d6d188e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6d185b0:;
	};
}

inline jule::Str _1d711e025_toStr(jule::Ptr<_1c663741c_MapTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d71201e1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7120103:;
	};
	;
	{
		
{
			_case_begin_1d7120b92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7120862:;
	};
}

inline jule::Str _1d71248aa_toStr(jule::Ptr<_1c6636130_TupleTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d7125a76:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7125988:;
	};
	;
	{
		
{
			_case_begin_1d7126527:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71261e7:;
	};
}

inline jule::Str _1d7137c86_toStr(jule::Ptr<_1c6636bbe_ArrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d7138e52:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7138d64:;
	};
	;
	{
		
{
			_case_begin_1d7139903:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71395c3:;
	};
}

inline jule::Str _1d713e221_toStr(jule::Ptr<_1c6635d33_SlcTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d71403dc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d71402ee:;
	};
	;
	{
		
{
			_case_begin_1d7140d8d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7140a5d:;
	};
}

inline jule::Str _1d7145777_toStr(jule::Ptr<_1c663642c_PtrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d7146943:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7146855:;
	};
	;
	{
		
{
			_case_begin_1d71473e4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71470b4:;
	};
}

inline jule::Str _1d714b87c_toStr(jule::Ptr<_1c663599d_SptrTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d714ca48:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d714c95a:;
	};
	;
	{
		
{
			_case_begin_1d714d4e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d714d1b9:;
	};
}

inline jule::Str _1d7196eb0_toStr(jule::Ptr<_1c663b1bd_VariadicExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d71980e3:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7198005:;
	};
	;
	{
		
{
			_case_begin_1d7198a94:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7198764:;
	};
}

inline jule::Str _1d719cc1e_toStr(jule::Ptr<_1c665edc3_SliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d719e935:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d719e847:;
	};
	;
	{
		
{
			_case_begin_1d71a03d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71a00a6:;
	};
}

inline jule::Str _1d71b7a91_toStr(jule::Ptr<_1c663d456_FieldExprPair> _19713_x) {
	;
	{
		
{
			_case_begin_1d71b8c4b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d71b8b5d:;
	};
	;
	{
		
{
			_case_begin_1d71b96ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71b93bc:;
	};
}

inline jule::Str _1d71c15b1_toStr(jule::Ptr<_1c663ea62_KeyValPair> _19713_x) {
	;
	{
		
{
			_case_begin_1d71c276b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d71c267d:;
	};
	;
	{
		
{
			_case_begin_1d71c321c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d71c2ddc:;
	};
}

inline jule::Str _1d722c991_toStr(jule::Ptr<_1c663c961_FnCallExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d722db4b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d722da5d:;
	};
	;
	{
		
{
			_case_begin_1d722e5ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d722e2bc:;
	};
}

inline jule::Str _1d726072c_toStr(jule::Ptr<_1c665dab4_AllocStructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d726191a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d726182c:;
	};
	;
	{
		
{
			_case_begin_1d72623bb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d726208b:;
	};
}

inline jule::Str _1d72750d2_toStr(jule::Ptr<_1c665e147_CastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d72762c0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d72761d2:;
	};
	;
	{
		
{
			_case_begin_1d7276c71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7276941:;
	};
}

inline jule::Str _1d728c968_toStr(jule::Ptr<_1c6662931_StructStaticIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d728da68:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d728d97a:;
	};
	;
	{
		
{
			_case_begin_1d728e519:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d728e1d9:;
	};
}

inline jule::Str _1d729011e_toStr(jule::Ptr<_1c663bd4a_SubIdentExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d729392a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d729383c:;
	};
	;
	{
		
{
			_case_begin_1d72943cb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d729409b:;
	};
}

inline jule::Str _1d729bd62_toStr(jule::Ptr<_1c665d7b7_StructLitExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d729d01c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d729ce2e:;
	};
	;
	{
		
{
			_case_begin_1d729d9bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d729d68d:;
	};
}

inline jule::Str _1d72bc4c0_toStr(jule::Ptr<_1c6666d53_RuneExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d72bd6ad:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d72bd5c0:;
	};
	;
	{
		
{
			_case_begin_1d72be15e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d72bdd2e:;
	};
}

inline jule::Str _1d72e038e_toStr(jule::Ptr<_1c665865d_StructIns> _19713_x) {
	;
	{
		
{
			_case_begin_1d72e157c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d72e148e:;
	};
	;
	{
		
{
			_case_begin_1d72e202d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d72e1bed:;
	};
}

inline jule::Str _1d733018c_toStr(jule::Ptr<_1c67bb8d1_TypeKind> _19713_x) {
	;
	{
		
{
			_case_begin_1d7331325:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7331237:;
	};
	;
	{
		
{
			_case_begin_1d7331cc6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7331996:;
	};
}

inline jule::Str _1d73525bb_toStr(jule::Ptr<_1c6662d0a_ArrayExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d73537a9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d73536bb:;
	};
	;
	{
		
{
			_case_begin_1d735425a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7353e2a:;
	};
}

inline jule::Str _1d739184c_toStr(jule::Ptr<_1c66352c7_SubIdentTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d7392a3a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d739294c:;
	};
	;
	{
		
{
			_case_begin_1d73934db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d73931ab:;
	};
}

inline jule::Str _1d7395e5b_toStr(jule::Ptr<_1c663ace4_UnaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d73970e4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7397006:;
	};
	;
	{
		
{
			_case_begin_1d7397a95:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7397765:;
	};
}

inline jule::Str _1d73a00db_toStr(jule::Ptr<_1c6634903_TypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d73a0680:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d73a0592:;
	};
	;
	{
		
{
			_case_begin_1d73a1131:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d73a0d12:;
	};
}

inline jule::Str _1d73a4b6d_toStr(jule::Ptr<_1c663b971_NsSelectionExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d73a75ee:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d73a7511:;
	};
	;
	{
		
{
			_case_begin_1d73a80a0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d73a7c70:;
	};
}

inline jule::Str _1d73ab69c_toStr(jule::Ptr<_1c66356a1_NamespaceTypeDecl> _19713_x) {
	;
	{
		
{
			_case_begin_1d73ac88a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d73ac79c:;
	};
	;
	{
		
{
			_case_begin_1d73ad33b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d73ad00b:;
	};
}

inline jule::Str _1d73e7144_toStr(jule::Ptr<_1c6661666_SlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d73e82cc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d73e81de:;
	};
	;
	{
		
{
			_case_begin_1d73e8c7d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d73e894d:;
	};
}

inline jule::Str _1d7464aeb_toStr(jule::Ptr<_1c664028d_SliceExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d7465ca6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7465bb8:;
	};
	;
	{
		
{
			_case_begin_1d7466757:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7466427:;
	};
}

inline jule::Str _1d74d86ec_toStr(jule::Ptr<_1c6661be9_TraitSubIdentExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d74d98da:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d74d97ec:;
	};
	;
	{
		
{
			_case_begin_1d74da38b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d74da05b:;
	};
}

inline jule::Str _1d7584017_toStr(jule::Ptr<_1c66610d3_MapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d7585b95:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7585aa7:;
	};
	;
	{
		
{
			_case_begin_1d7586646:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7586316:;
	};
}

inline jule::Str _1d7594500_toStr(jule::Ptr<_1c6660830_AnonFnExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d75956dd:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7595600:;
	};
	;
	{
		
{
			_case_begin_1d759618e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d7595d5e:;
	};
}

inline jule::Str _1d759b5b2_toStr(jule::Ptr<_1c6639001_RangeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d759c76c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d759c67e:;
	};
	;
	{
		
{
			_case_begin_1d759d21d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d759cddd:;
	};
}

inline jule::Str _1d759b86a_toStr(jule::Ptr<_1c6639bc2_LitExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75a1166:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75a1078:;
	};
	;
	{
		
{
			_case_begin_1d75a1b17:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75a17d7:;
	};
}

inline jule::Str _1d75a46ec_toStr(jule::Ptr<_1c663a09b_UnsafeExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75a5cd6:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75a5be8:;
	};
	;
	{
		
{
			_case_begin_1d75a6787:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75a6457:;
	};
}

inline jule::Str _1d75a6d4d_toStr(jule::Ptr<_1c6640bea_IndexingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75a949e:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75a93b1:;
	};
	;
	{
		
{
			_case_begin_1d75a9e50:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75a9b20:;
	};
}

inline jule::Str _1d75a2a19_toStr(jule::Ptr<_1c664135a_SlicingExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75ac66c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75ac57e:;
	};
	;
	{
		
{
			_case_begin_1d75ad11d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75accdd:;
	};
}

inline jule::Str _1d75ad6d4_toStr(jule::Ptr<_1c663b597_CastExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75b083a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75b074c:;
	};
	;
	{
		
{
			_case_begin_1d75b12db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75b0eab:;
	};
}

inline jule::Str _1d75b18a2_toStr(jule::Ptr<_1c663dc81_StructLit> _19713_x) {
	;
	{
		
{
			_case_begin_1d75b4267:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75b4168:;
	};
	;
	{
		
{
			_case_begin_1d75b51d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75b48d8:;
	};
}

inline jule::Str _1d75b7523_toStr(jule::Ptr<_1c663e237_BraceLit> _19713_x) {
	;
	{
		
{
			_case_begin_1d75b93c1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75b92d3:;
	};
	;
	{
		
{
			_case_begin_1d75b9d72:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75b9a42:;
	};
}

inline jule::Str _1d75b8810_toStr(jule::Ptr<_1c663c301_BinaryExpr> _19713_x) {
	;
	{
		
{
			_case_begin_1d75bcccb:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d75bcbdd:;
	};
	;
	{
		
{
			_case_begin_1d75bd77c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d75bd44c:;
	};
}

inline jule::Str _1d642ddb3_toStr(jule::Ptr<_1c665ca19_BinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d64300a1:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d642eeb3:;
	};
	;
	{
		
{
			_case_begin_1d6430a52:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d6430722:;
	};
}

inline jule::Str _1d78bc9d2_toStr(jule::Ptr<_1c6663c84_BuiltinNewCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d78bdbc0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d78bdad2:;
	};
	;
	{
		
{
			_case_begin_1d78be671:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d78be341:;
	};
}

inline jule::Str _1d78d3663_toStr(jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d78d4851:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d78d4763:;
	};
	;
	{
		
{
			_case_begin_1d78d5302:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d78d4ec2:;
	};
}

inline jule::Str _1d791c1e6_toStr(jule::Ptr<_1c6665291_BuiltinLenCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d791d3d4:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d791d2e6:;
	};
	;
	{
		
{
			_case_begin_1d791dd85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d791da55:;
	};
}

inline jule::Str _1d7936ebe_toStr(jule::Ptr<_1c666558d_BuiltinCapCallExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d79381ac:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d79380be:;
	};
	;
	{
		
{
			_case_begin_1d7938b5d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d793882d:;
	};
}

inline jule::Str _1d7989c47_toStr(jule::Ptr<_1c66668be_SizeofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d798ad69:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d798ac7b:;
	};
	;
	{
		
{
			_case_begin_1d798b81a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d798b4da:;
	};
}

inline jule::Str _1d7993c51_toStr(jule::Ptr<_1c6666aab_AlignofExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d7994d73:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d7994c85:;
	};
	;
	{
		
{
			_case_begin_1d7995824:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d79954e4:;
	};
}

inline jule::Str _1d7e7b744_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d7e7d229:;
			{
				return _1d508560e_toStr(_19713_x);;
			}
		}
		_match_end_1d7e7cb30:;
	};
}

inline jule::Str _1d8144ac7_toStr(jule::Ptr<_1c68b7081_ExceptionalForwardingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d8145cb5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d8145bc7:;
	};
	;
	{
		
{
			_case_begin_1d8146766:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8146436:;
	};
}

inline jule::Str _1d817baba_toStr(jule::Ptr<_1c68b9979_StrRuneIter> _19713_x) {
	;
	{
		
{
			_case_begin_1d817cca8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d817cbba:;
	};
	;
	{
		
{
			_case_begin_1d817d759:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d817d429:;
	};
}

inline jule::Str _1d818450c_toStr(jule::Ptr<_1c68b866a_MutSlicingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d81856ea:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d818560c:;
	};
	;
	{
		
{
			_case_begin_1d818619b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8185d6b:;
	};
}

inline jule::Str _1d81a95cb_toStr(jule::Ptr<_1c68b95a0_AppendToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d81aa7b9:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d81aa6cb:;
	};
	;
	{
		
{
			_case_begin_1d81ab26a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d81aae3a:;
	};
}

inline jule::Str _1d81abe08_toStr(jule::Ptr<_1c68b91c6_PushToSliceExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d81ae3c2:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d81ae2d4:;
	};
	;
	{
		
{
			_case_begin_1d81aed73:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d81aea43:;
	};
}

inline jule::Str _1d81b99d7_toStr(jule::Ptr<_1c68b7416_SwapExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d81babc5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d81baad7:;
	};
	;
	{
		
{
			_case_begin_1d81bb676:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d81bb346:;
	};
}

inline jule::Str _1d820755d_toStr(jule::Ptr<_1c68b77e0_EmptyCompareExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d820874b:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d820865d:;
	};
	;
	{
		
{
			_case_begin_1d82091ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8208dbc:;
	};
}

inline jule::Str _1d820a2db_toStr(jule::Ptr<_1c68b80d7_StrCompExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d820c7a5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d820c6b7:;
	};
	;
	{
		
{
			_case_begin_1d820d256:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d820ce26:;
	};
}

inline jule::Str _1d82433ce_toStr(jule::Ptr<_1c68b8967_UnsafeBinaryExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d82445bc:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d82444ce:;
	};
	;
	{
		
{
			_case_begin_1d8245007:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8244875:;
	};
}

inline jule::Str _1d82515da_toStr(jule::Ptr<_1c68b9c76_UnsafeDerefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d82527c8:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d82526da:;
	};
	;
	{
		
{
			_case_begin_1d8253279:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8252e49:;
	};
}

inline jule::Str _1d8257e4e_toStr(jule::Ptr<_1c68b7b64_RefExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d825913c:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d825904e:;
	};
	;
	{
		
{
			_case_begin_1d8259add:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d82597ad:;
	};
}

inline jule::Str _1d825c4e7_toStr(jule::Ptr<_1c665d421_StructArgExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d825d6d5:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d825d5e7:;
	};
	;
	{
		
{
			_case_begin_1d825e186:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d825dd56:;
	};
}

inline jule::Str _1d8263cb2_toStr(jule::Ptr<_1c68ba073_UnsafeCastingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d8264ea0:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d8264db2:;
	};
	;
	{
		
{
			_case_begin_1d8265951:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8265621:;
	};
}

inline jule::Str _1d8272b28_toStr(jule::Ptr<_1c68b8cec_UnsafeIndexingExprModel> _19713_x) {
	;
	{
		
{
			_case_begin_1d8273d16:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d8273c28:;
	};
	;
	{
		
{
			_case_begin_1d82747b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d8274487:;
	};
}

inline jule::Str _1d88a9726_toStr(jule::Ptr<jule::Str> _19713_x) {
	;
	{
		
{
			_case_begin_1d88aa86a:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d88aa77c:;
	};
	;
	{
		
{
			_case_begin_1d88ab31b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_19713_x))));;
			}
		}
		_match_end_1d88aaedb:;
	};
}

inline jule::Str _1d8b5b599_toStr(_20759e353_StrBuilder _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d8b5e998:;
			{
				return _1d8b6155a_structToStr(_19713_x);;
			}
		}
		_match_end_1d8b5e525:;
	};
}

inline jule::Str _1d8b67de1_toStr(jule::Slice<jule::U8> _19713_x) {
	;
	{
		
{
			_case_begin_1d8b69288:;
			{
				if ((_19713_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1d8b68ead:;
	};
	;
	{
		
{
			_case_begin_1d8b69ae6:;
			{
				return _1d8b6b6b9_arrToStr(_19713_x);;
			}
		}
		_match_end_1d8b6991a:;
	};
}

inline jule::Str _1d8b6321b_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d8b5ebeb:;
			{
				return _1d508560e_toStr(_19713_x);;
			}
		}
		_match_end_1d8b6896e:;
	};
}

inline jule::Str _1d8b6a333_toStr(jule::Str _19713_x) {
	;
	;
	;
	{
		
{
			_case_begin_1d8b71537:;
			{
				return _1d508560e_toStr(_19713_x);;
			}
		}
		_match_end_1d8b670bb:;
	};
}



inline void _2066c5722_rev(jule::Slice<jule::U8> _25012_b) {
	jule::I64 _2516_i = 0LL;;
	for (; (_2516_i < (_25012_b.len() >> 1LL)); (_2516_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _25012_b[((_25012_b.len() - 1LL) - _2516_i)];
				jule::U8 _1___jule_assign_arg = _25012_b[_2516_i];
				_25012_b[_2516_i] = ___jule_assign_arg;
				_25012_b[((_25012_b.len() - 1LL) - _2516_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1d5029c79:;
	}
	_iter_end_1d5029c79:;;
}



inline jule::I64 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I64 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I64 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1d502b74d:;
	}
	_iter_end_1d502b74d:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _220024453_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, ({ jule::I64 __jule_x = _4415_runes.len(); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5030554:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_2066b0d4a_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1d5030554:;
			++it;
			goto _iter_begin_1d5030554;
		}
		_iter_end_1d5030554:;
	};
	return _220024453_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _2066b1752_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I64 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1d5031742:;
	}
	_iter_end_1d5031742:;;
	return _556_buf.slice(0LL, _566_n);;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _220024453_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_2066b0d4a_AppendRune(_846_buf, _8316_r);
	return _220024453_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I64 _9430_n, jule::I32* _9442_r, jule::I64* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1d4d6b03d_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline void _2066c7bdb_handleRW(jule::Slice<jule::U8>* _814_b) {
	_2066b281e__handleRW(_814_b);
}



inline jule::U64 _20672d406_hash128to64(_20672d04e_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _20672d714_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__206729ac8_DecodeU64(_5312_bytes);;
}



inline jule::U32 _20672d9cd_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__206729237_DecodeU32(_5412_bytes);;
}



inline jule::U64 _20672dd1e_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _20672e160_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _20672d406_hash128to64(_20672d04e_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _20672e4d4_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _20672e913_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _20672ed97_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I64 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_20672d714_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _20672d714_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_20672e4d4_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_20672e4d4_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _20672e913_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_20672d9cd_fetch32(_7517_bytes));;
		return _20672e913_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_20672d9cd_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I64 _963_z = (_7532_n + (static_cast<jule::I64>(_943_c) << 2LL));;
		return (jule::U64)(_20672dd1e_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _20672d04e_u128 _20673024e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I64 _10334_n, _20672d04e_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I64 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_20672dd1e_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _20672ed97_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_20672dd1e_shiftMix((jule::U64)(_1046_a + _20672d714_fetch64(_10319_bytes)));
		} else {
			_1076_d=_20672dd1e_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_20672e160_hashLen16((jule::U64)(_20672d714_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_20672e160_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _20672d714_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_20672dd1e_shiftMix((jule::U64)(_20672d714_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_20672dd1e_shiftMix((jule::U64)(_20672d714_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1d50492d7;
				};
			}
		_iter_next_1d50492d7:;
		}
		_iter_end_1d50492d7:;;
	};
	_1046_a=_20672e160_hashLen16(_1046_a, _1066_c);
	_1056_b=_20672e160_hashLen16(_1076_d, _1056_b);
	return _20672d04e_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_20672e160_hashLen16(_1056_b, _1046_a)};;
}



inline _20672d04e_u128 _20673089d_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_20672e4d4_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_20672e4d4_rotate64(_14563_a, 44LLU);
	return _20672d04e_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _20672d04e_u128 _206730ccc_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _20673089d_weakHashLen32WithSeeds(_20672d714_fetch64(_15529_bytes), _20672d714_fetch64(_15529_bytes.slice(8LL)), _20672d714_fetch64(_15529_bytes.slice(16LL)), _20672d714_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _20672d04e_u128 _20673120b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I64 _16040_n, _20672d04e_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _20673024e_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I64 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_20672d04e_u128 _16910_v = _20672d04e_u128{._field_hi=0, ._field_lo=0};;
	_20672d04e_u128 _17010_w = _20672d04e_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_20672e4d4_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _20672d714_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_20672e4d4_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _20672d714_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_20672e4d4_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_20672e4d4_rotate64((jule::U64)(_1716_x + _20672d714_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_20672e4d4_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _20672d714_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_20672e4d4_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _20672d714_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _20672d714_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_20672e4d4_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_206730ccc_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_206730ccc_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _20672d714_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_20672e4d4_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _20672d714_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_20672e4d4_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _20672d714_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _20672d714_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_20672e4d4_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_206730ccc_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_206730ccc_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _20672d714_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1d5057801;
			};
		}
	_iter_next_1d5057801:;
	}
	_iter_end_1d5057801:;;
	_1716_x+=(jule::U64)(_20672e4d4_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _20672e4d4_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _20672e4d4_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I64 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_20672e4d4_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_20672d714_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _20672d714_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_206730ccc_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1d50634dd:;
	}
	_iter_end_1d50634dd:;;
	_1716_x=_20672e160_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_20672e160_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _20672d04e_u128{._field_hi=(jule::U64)(_20672e160_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_20672e160_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _2067314c5_hash(jule::Slice<jule::U8> _23413_bytes) {
	_20672d04e_u128 _2356_sum = _20672d04e_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_20673120b_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _20672d04e_u128{._field_hi=_20672d714_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_20672d714_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_20673120b_hashWithSeed(_23413_bytes, _23413_bytes.len(), _20672d04e_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _20672d406_hash128to64(_2356_sum);;
}



inline jule::U64 _238a23950_metaMatchH2(jule::Array<jule::I8,8>* _5423_m, jule::I8 _5437_h) {
	return _238a24368_hasZeroByte((_238a245ee_castU64(_5423_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5437_h))));;
}



inline jule::U64 _238a23c5d_metaMatchEmpty(jule::Array<jule::I8,8>* _5926_m) {
	return _238a24368_hasZeroByte((_238a245ee_castU64(_5926_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _238a24027_nextMatch(jule::U64* _6319_b) {
	jule::U32 _642_s = static_cast<jule::U32>(_238a1605d_TrailingZeros64(static_cast<jule::U64>((*(_6319_b)))));;
	(*(_6319_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _642_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_642_s >> 3LLU);;
}



inline jule::U64 _238a24368_hasZeroByte(jule::U64 _6916_x) {
	return static_cast<jule::U64>((((jule::U64)(_6916_x - 72340172838076673LLU) & (~(_6916_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _238a245ee_castU64(jule::Array<jule::I8,8>* _7319_m) {
	return (*(((jule::U64*)(_7319_m))));;
}



inline jule::I64 _238a248b8_numGroups(jule::I64 _7814_n) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result=({ jule::I64 __jule_x = ((_7814_n + 4LL) - 1LL); jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _238a24ac7_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d506d075:;
		if (it != expr_end) {
			jule::I64 _876_i = it - expr->begin();
			{
				__jule_func_result[_876_i]=-128LL;
			}
			_iter_next_1d506d075:;
			++it;
			_876_i++;
			goto _iter_begin_1d506d075;
		}
		_iter_end_1d506d075:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _238a24ea1_splitHash(jule::U64 _9314_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9314_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9314_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _238a2529d_probeStart(jule::U64 _9715_hi, jule::I64 _9723_groups) {
	return _238a25622_fastModN(static_cast<jule::U32>(_9715_hi), static_cast<jule::U32>(_9723_groups));;
}



inline jule::U32 _238a25622_fastModN(jule::U32 _10213_x, jule::U32 _10221_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10213_x) * static_cast<jule::U64>(_10221_n)) >> 32LLU));;
}



inline jule::I64 _2075d4e05_getLastOsErrorWindows(void) {
	jule::U32 _162_err = _2210a1864_GetLastError();;
	{
		auto &_match_expr{ _162_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1d5081055:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1d50810bb:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1d5081132:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1d50811a9:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1d507cb89:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1d507cc66:;
	};
}



inline jule::Slice<jule::Str> _2075d5a1b_Args(void) {
	return _2066b9716_args();;
}



inline jule::Exceptional<jule::Str> _2075d5e7d_WorkingDir(void) {
	return _2075d691d_getwd();
}



inline jule::Exceptional<jule::Str> _2075d691d_getwd(void) {
	jule::Array<jule::U16,261> _1510_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _162_n = _2210a1bd8_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1510_buf[0LL])));;
	if ((_162_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_2075d4e05_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_220022484_U16PtrToStr((&(_1510_buf[0LL])))};;
}



inline jule::Bool _2086b12dd_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20871e060__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2087274a8_isExcludingLatin(_2086ba2b4_Letter, _7613_r);;
}



inline jule::Bool _20872682b_is16(jule::Slice<_208724a8d_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d5c7a534:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_208724a8d_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1d5c7a534:;
				++it;
				_1937_i++;
				goto _iter_begin_1d5c7a534;
			}
			_iter_end_1d5c7a534:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ({ jule::I64 __jule_x = (_2096_hi - _2086_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_208724a8d_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1d5c79368:;
	}
	_iter_end_1d5c79368:;;
	return false;;
}



inline jule::Bool _208726ba0_is32(jule::Slice<_2087250bb_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d5c81914:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_2087250bb_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1d5c81914:;
				++it;
				_2307_i++;
				goto _iter_begin_1d5c81914;
			}
			_iter_end_1d5c81914:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ({ jule::I64 __jule_x = (_2466_hi - _2456_lo); jule::I64 __jule_y = 1LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));;
			_2087250bb_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1d5c7d636:;
	}
	_iter_end_1d5c7d636:;;
	return false;;
}



inline jule::Bool _2087274a8_isExcludingLatin(jule::Ptr<_20872553e_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_208724a8d_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _20872682b_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_2087250bb_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _208726ba0_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _2087276ea_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20871e060__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2087274a8_isExcludingLatin(_2086c1584_Upper, _29512_r);;
}



inline jule::I64 _208768032_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1d5c97540:;
	}
	_iter_end_1d5c97540:;;
	return -1LL;;
}



inline jule::I64 _20876865e_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5c978e7:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1d5c978e7:;
			++it;
			_706_i++;
			goto _iter_begin_1d5c978e7;
		}
		_iter_end_1d5c978e7:;
	};
	return -1LL;;
}



inline jule::I64 _2087689d3_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _208768032_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _208768cd0_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I64 __jule_x = jule::MAX_I64; jule::I64 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_20759e353_StrBuilder _186_ss = static__2075a7c41_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_2075a814d_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1d5caab6e:;
	}
	_iter_end_1d5caab6e:;;
	return _2075a8945_Str(&_186_ss);;
}



inline jule::Bool _208769198_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _20876951c_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _2087699c3_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_208769198_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1d5cae832:;
	}
	_iter_end_1d5cae832:;;
	return -1LL;;
}



inline jule::I64 _208769d14_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _2087699c3_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _20876a243_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1d5cb1a87:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1d5cb13a0;
					};
				}
			_iter_next_1d5cb3308:;
			}
			_iter_end_1d5cb3308:;;
			return _636_j;;
		}
	_iter_next_1d5cb13a0:;
	}
	_iter_end_1d5cb13a0:;;
	return -1LL;;
}



inline jule::I64 _20876a5b7_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _20876a243_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _20876bd9e_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _2087689d3_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _20876c223_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1d5cc02c1:;
	}
	_iter_end_1d5cc02c1:;;
	return -1LL;;
}



inline jule::I64 _20876cb4c_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20876c223_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1d5cc35d2:;
	}
	_iter_end_1d5cc35d2:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _20876d2e0_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _2087699c3_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1d5cc87e6;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1d5cc87e6:;
	}
	_iter_end_1d5cc87e6:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _20876d664_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_2087699c3_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _20876e1d1_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_20876cb4c_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _20876e555_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _2087699c3_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1d5ccd367;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1d5ccd367:;
	}
	_iter_end_1d5ccd367:;;
	return _2686_n;;
}



inline jule::Str _20876ea3e_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _20876e555_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_20759e353_StrBuilder _2976_ss = static__2075a7c41_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _2087699c3_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1d5cd1e4d;
			};
			_2075a814d_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_2075a814d_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1d5cd1e4d:;
	}
	_iter_end_1d5cd1e4d:;;
	_2075a814d_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _2075a8945_Str(&_2976_ss);;
}



inline jule::Str _2087707ba_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20876c223_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1d5cd6dba:;
	}
	_iter_end_1d5cd6dba:;;
	return jule::Str();;
}



inline jule::Str _208770b3e_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066b0300_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20876c223_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1d5cd89d2:;
	}
	_iter_end_1d5cd89d2:;;
	return jule::Str();;
}



inline jule::Str _208770eb3_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _2087707ba_TrimLeft(_208770b3e_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _2075aa1c7_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _2075aa4d5_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _2075aa79e_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _2075aad76_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_2075aa4d5_isSlash(_8318_path[0LL]))) || (!(_2075aa4d5_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2075ab140_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2075ab140_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_2075aa79e_toUpper(_976_p2[0LL]) == 'U')) && (_2075aa79e_toUpper(_976_p2[1LL]) == 'N')) && (_2075aa79e_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2075ab140_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2075ab140_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _2075ab140_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5d02d81:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_2075aa4d5_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1d5d02d81:;
			++it;
			_1216_i++;
			goto _iter_begin_1d5d02d81;
		}
		_iter_end_1d5d02d81:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2075ab409_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _220021dac_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_2210a2cd8_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _2200221ba_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1d5d04e3d:;
	}
	_iter_end_1d5d04e3d:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _2075ab7d3_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2075ab409_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _208773bb9_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _2075aba25_join(jule::Slice<jule::Str> _16013_elem) {
	_20759e353_StrBuilder _1616_s = static__2075a7c41_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5d0934e:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_2075a8dc9_Len(&_1616_s) == 0LL)) {
						_case_begin_1d5d0a053:;
					}
					else if (_2075aa4d5_isSlash(_1626_lastChar)) {
						_case_begin_1d5d0a41b:;
						{
							while (((_16314_e.len() > 0LL) && _2075aa4d5_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1d5d0a828:;
							}
							_iter_end_1d5d0a828:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1d5d09c23:;
					}
					else {
						_case_begin_1d5d09bac:;
						{
							_2075a8406_WriteByte(&_1616_s, '\\');
							_1626_lastChar='\\';
						}
					}
					_match_end_1d5d09aad:;
				};
				if ((_16314_e.len() > 0LL)) {
					_2075a814d_WriteStr(&_1616_s, _16314_e);
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1d5d0934e:;
			++it;
			goto _iter_begin_1d5d0934e;
		}
		_iter_end_1d5d0934e:;
	};
	if ((_2075a8dc9_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _208773bb9_Clean(_2075a8945_Str(&_1616_s));;
}



inline jule::Str _208773bb9_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _2075aad76_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _2075aa1c7_IsPathSep(_1102_originalPath[0LL])) && _2075aa1c7_IsPathSep(_1102_originalPath[1LL]))) {
			return _208774291_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _2075aa1c7_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_208772d2d_lazyBuff _1286_out = _208772d2d_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_20877359d_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_2075aa1c7_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1d5d14238:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _2075aa1c7_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1d5d11e4a:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _2075aa1c7_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1d5d11eb1:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1d5d182e7:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_2075aa1c7_IsPathSep(_2087732e5_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1d5d18a78:;
									}
									_iter_end_1d5d18a78:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1d5d18391:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_20877359d_append(&_1286_out, 92LLU);
									};
									_20877359d_append(&_1286_out, '.');
									_20877359d_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1d5d17e40:;
						};
					}
				}
				else {
					_case_begin_1d5d11dd4:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_20877359d_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_2075aa1c7_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_20877359d_append(&_1286_out, '.');
										_20877359d_append(&_1286_out, 92LLU);
										goto _iter_end_1d5d13952;
									};
								}
							_iter_next_1d5d13952:;
							}
							_iter_end_1d5d13952:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_2075aa1c7_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_20877359d_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1d5d132c0:;
						}
						_iter_end_1d5d132c0:;;
					}
				}
				_match_end_1d5d11ad7:;
			};
		}
	_iter_next_1d5d115ed:;
	}
	_iter_end_1d5d115ed:;;
	if ((_1286_out._field_w == 0LL)) {
		_20877359d_append(&_1286_out, '.');
	};
	return _208774291_FromSlash(_208773834_string(&_1286_out));;
}



inline jule::Str _208774291_FromSlash(jule::Str _21214_path) {
	;
	return _20876ea3e_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _2087745d2_Join(jule::Slice<jule::Str> _2269_elem) {
	return _2075aba25_join(_2269_elem);;
}



inline jule::Str _208774868_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_2075aa1c7_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1d5d1c582:;
	}
	_iter_end_1d5d1c582:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _208774b32_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_2075ab7d3_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _208774deb_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _2075aa1c7_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1d5d1d918:;
	}
	_iter_end_1d5d1d918:;;
	(_25213_path).mut_slice(_208775517_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_2075aa1c7_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1d5d1dd36:;
	}
	_iter_end_1d5d1dd36:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _2087752c5_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _208775517_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_2075aa1c7_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1d5d222e0:;
	}
	_iter_end_1d5d222e0:;;
	jule::Str _2892_dir = _208773bb9_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _208775517_VolumeName(jule::Str _30115_path) {
	return _208774291_FromSlash(_30115_path.slice(0LL, _2075aad76_volumeNameLen(_30115_path)));;
}



inline jule::I64 _238ad82ea_getLastFsError(void) {
	jule::I64 _722_err = _220025ba2_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d5d355ab:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d5d354ac:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1d5d34dd5:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1d5d34e4b:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d5d34eb2:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d5d35039:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1d5d350b1:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1d5d35138:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1d5d35754:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1d5d357cb:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d5d35853:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1d5d358ca:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1d5d35952:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1d5d359c9:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1d5d35a51:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1d5d35ac8:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1d5d35b50:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1d5d35bc7:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1d5d35c4e:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1d5d35cc6:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1d5d35d4d:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1d5d35dc5:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1d5d35e4c:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1d5d35ec4:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1d5d3604b:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1d5d360c3:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1d5d3614a:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1d5d361c2:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1d5d34c5e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1d5d34d6e:;
	};
}



inline jule::Bool _238ade6ca_isConsoleHandle(jule::Uintptr _10220_handle) {
	return (((_10220_handle == _2210a02d0_STDIN) || (_10220_handle == _2210a0577_STDOUT)) || (_10220_handle == _2210a0874_STDERR));;
}



inline void _20881e924_appendEscapeArg(_20759e353_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_2075a814d_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1d5d7a722:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1d5d7aa1e:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1d5d7a8ed:;
			};
		}
	_iter_next_1d5d7a37b:;
	}
	_iter_end_1d5d7a37b:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		_2075a814d_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		_2075a8406_WriteByte(_10225_s, '\"');
		_2075a814d_WriteStr(_10225_s, _10240_arg);
		_2075a8406_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1096_hasSpace) {
		_2075a8406_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10240_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1d5d7de0c:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1d5d7deb7:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								_2075a8406_WriteByte(_10225_s, '\\');
							}
						_iter_next_1d5d7e6e3:;
						}
						_iter_end_1d5d7e6e3:;;
						_2075a8406_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1d5d7d967:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1d5d7da77:;
			};
			_2075a8406_WriteByte(_10225_s, _1393_c);
		}
	_iter_next_1d5d7d12b:;
	}
	_iter_end_1d5d7d12b:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				_2075a8406_WriteByte(_10225_s, '\\');
			}
		_iter_next_1d5d80271:;
		}
		_iter_end_1d5d80271:;;
		_2075a8406_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _20881ebdd_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_20759e353_StrBuilder _1646_s = static__2075a7c41_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5d80d76:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_2075a8dc9_Len(&_1646_s) > 0LL)) {
					_2075a8406_WriteByte(&_1646_s, ' ');
				};
				_20881e924_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1d5d80d76:;
			++it;
			goto _iter_begin_1d5d80d76;
		}
		_iter_end_1d5d80d76:;
	};
	return _2075a8945_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _2088200b7_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_22002151b_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5d826a2:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_20876865e_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1d5d826a2:;
			++it;
			goto _iter_begin_1d5d826a2;
		}
		_iter_end_1d5d826a2:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5d82064:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1d5d84d36:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_220021b26_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1d5d84d36:;
						it += len;
						goto _iter_begin_1d5d84d36;
					}
				};
				_1916_b=_220021b26_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1d5d82064:;
			++it;
			goto _iter_begin_1d5d82064;
		}
		_iter_end_1d5d82064:;
	};
	_1916_b=_220021b26_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _2088210b8_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1d5d862ee:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1d5d85b5b:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1d5d83ab0:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1d5d8572c:;
	};
}



inline jule::I64 _2088212d8_getLastProcessError(void) {
	return _2088210b8_processErrorFromCode(static_cast<jule::I64>(_2210a1864_GetLastError()));;
}



inline void _208821a25_Exit(jule::I64 _109_code) {
	_2210a7a13_Exit(_109_code);
}



inline jule::Str _208821c56_Executable(void) {
	return _2066b9bbc_executable();;
}



inline jule::Bool _20806208a_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _208062365_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_20805ece1_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5da7210:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1d5da7210:;
			++it;
			goto _iter_begin_1d5da7210;
		}
		_iter_end_1d5da7210:;
	};
	return false;;
}



inline jule::Bool _20806262e_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_208061aa1_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5da8057:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1d5da8057:;
			++it;
			goto _iter_begin_1d5da8057;
		}
		_iter_end_1d5da8057:;
	};
	{
		auto expr = &(_208061cb0_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5da7e58:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1d5da7e58:;
			++it;
			goto _iter_begin_1d5da7e58;
		}
		_iter_end_1d5da7e58:;
	};
	return false;;
}



inline jule::Str _20806eb9c_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _20807063c_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _20806eeaa_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d5daa301:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1d5daa598:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1d5daa60e:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1d5daa532:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1d5daa4bb:;
	};
}



inline jule::I64 _208070274_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5da99d7:;
		if (it != expr_end) {
			jule::I64 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1d5da99d7:;
			++it;
			_3426_i++;
			goto _iter_begin_1d5da99d7;
		}
		_iter_end_1d5da99d7:;
	};
	return -1LL;;
}



inline jule::Str _20807063c_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_20759e353_StrBuilder _3516_s = static__2075a7c41_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d5dad05c:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I64 _3533_i = _208070274_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1d5dad05c;
				};
				_2075a814d_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
				_2075a814d_WriteStr(&_3516_s, _20806eeaa_argToStr((*(_3529_arg))));
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1d5dad05c:;
			++it;
			goto _iter_begin_1d5dad05c;
		}
		_iter_end_1d5dad05c:;
	};
	_2075a814d_WriteStr(&_3516_s, _35017_fmt);
	return _2075a8945_Str(&_3516_s);;
}



inline jule::Bool _20807153e_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _20807295d_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _208072c6b_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _208073035_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _208073376_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _20807360c_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _2080738c6_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _208073b90_IsUnix(jule::Str _5511_os) {
	return (_208072c6b_IsDarwin(_5511_os) || _208073035_IsLinux(_5511_os));;
}



inline jule::Bool _208074069_Is32Bit(jule::Str _5812_arch) {
	return _208073376_IsI386(_5812_arch);;
}



inline jule::Bool _2080742ab_Is64Bit(jule::Str _6112_arch) {
	return (_20807360c_IsAmd64(_6112_arch) || _2080738c6_IsArm64(_6112_arch));;
}



inline void _208822e99_init(void) {
	jule::Str _256_path = _208821c56_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_2088224e8_PathWd=({
			auto except = _2075d5e7d_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_208822240_PathExec=_2087752c5_Dir(_256_path);
		_208821eed_PathStdlib=_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _208822240_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_2088227e5_PathApi=_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _208822240_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1dd6ac3e2_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1dd6ac700_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1dd6ac9b9_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1dd6acd0a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1dd6b036d_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1d5e358a9:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dd6b62ca_IsInf(_4714_f, 0LL) || _1dd6b5b48_IsNaN(_4714_f)) {
			_case_begin_1d5e35953:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1d5e357bb:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dd6b6594_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1dd6ac9b9_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1dd6acd0a_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1dd6b583a_NaN(void) {
	return _1dd6acd0a_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1dd6b5b48_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1dd6b5e12_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1dd6acd0a_F64FromBits(9218868437227405312LLU);;
	};
	return _1dd6acd0a_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1dd6b62ca_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dd6b6594_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dd6b894d_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dd6b8068_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dd6b5b48_IsNaN(_1118_x) || _1dd6b62ca_IsInf(_1118_x, 1LL)) {
			_case_begin_1d5e71b7b:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1d5e71c25:;
			{
				return _1dd6b583a_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1d5e71c8b:;
			{
				return _1dd6b5e12_Inf(-1LL);;
			}
		}
		_match_end_1d5e71ab0:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dd6b036d_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1dd6b894d_Abs(jule::F64 _438_x) {
	return _1dd6acd0a_F64FromBits((_1dd6ac9b9_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dd6c0526_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1dd6b894d_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1d5ed4815:;
		}
		_iter_end_1d5ed4815:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1dd6c0d2e_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dd6b036d_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1dd6b8068_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1dd6e97c5_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _220024453_StrFromBytes(_1dd6e9dad_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1dd6ed268_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1dd6e9dad_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1dd6e85b5_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d61c00c7:;
			{
				_886_bits=static_cast<jule::U64>(_1dd6ac3e2_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1dd6e85b5_floatInfo>)((&(_1dd6e89b1_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d61bed0d:;
			{
				_886_bits=_1dd6ac9b9_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1dd6e85b5_floatInfo>)((&(_1dd6e8cad_f64info))));
			}
		}
		else {
			_case_begin_1d61bdaba:;
			{
				__jule_panic_s(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1d61be989:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (jule::U64)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>(({ jule::U64 __jule_x = _886_bits; jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1d61c3e22:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1d61c5660:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1d61c574d:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1d61c4ede:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1d61c4dce:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d61c4010:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1d61c30ca:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U64 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1d61c3273:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1dd6ec3dd_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1dd6eca70_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1dd6e9242_decimalSlice _1376_digs = _1dd6e9242_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1dd7081b8_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d61c83dd:;
				{
					_8758_prec=_1dd6ed268_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d61c9400:;
				{
					_8758_prec=_1dd6ed268_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d61c9466:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1d61c860d:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d61cb402:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d61cb4bd:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1d61cae5c:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1d61cb06c:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1dd706e0e_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1dd7073a4_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1dd6ea5b7_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1dd6eac8d_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1dd6ea5b7_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1dd6e85b5_floatInfo* _18824_flt) {
	_1dd70be9c_decimal _1896_d = _1dd70be9c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dd70c387_assign(&_1896_d, _1882_mant);
	_1dd70c640_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1dd6e9242_decimalSlice _1926_digs = _1dd6e9242_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1dd6eb1ab_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1dd6e9242_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d61d2381:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d61d3184:;
				{
					_18733_prec=_1dd6ed268_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d61d31ea:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1d61d2eec:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d61d20a6:;
				{
					_1dd70ce59_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d61d211c:;
				{
					_1dd70ce59_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d61d2183:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1dd70ce59_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1d61d46d5:;
		};
		_1926_digs=_1dd6e9242_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1dd6eac8d_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1dd6eac8d_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1dd6e9242_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1d61d7870:;
			{
				return _1dd6eb750_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d61d78d6:;
			{
				return _1dd6ebc39_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1d61d794c:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1dd6eb750_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1dd6ebc39_fmtF(_22418_dst, _22447_neg, _2252_digs, _1dd6ed268_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1d61d77b5:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1dd6eb1ab_roundShortest(_1dd70be9c_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1dd6e85b5_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1dd70be9c_decimal _2926_upper = _1dd70be9c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dd70c387_assign(&_2926_upper, (jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1dd70c640_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)(({ jule::U64 __jule_x = _26235_mant; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1dd70be9c_decimal _3116_lower = _1dd70be9c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dd70c387_assign(&_3116_lower, (jule::U64)(({ jule::U64 __jule_x = _3026_mantlo; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) + 1LLU));
	_1dd70c640_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1d61e88d6;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1d61ed688:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1d61ed732:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1d61ed798:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1d61ed5ab:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1d620114c:;
					{
						_1dd70ce59_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1d62011e6:;
					{
						_1dd70c8e8_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1d620125c:;
					{
						_1dd70cba1_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1d61ed80e:;
			};
		}
	_iter_next_1d61e88d6:;
	}
	_iter_end_1d61e88d6:;;
}



inline jule::Slice<jule::U8> _1dd6eb750_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1dd6e9242_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1dd6ecde4_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1d6205140:;
		}
		_iter_end_1d6205140:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1d6207829:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1d62079d3:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1d6207296:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _4306_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1d6207142:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1dd6ebc39_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1dd6e9242_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1dd6ecde4_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1d620b5ec:;
		}
		_iter_end_1d620b5ec:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1d620c90b:;
		}
		_iter_end_1d620c90b:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1dd6ec3dd_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1dd6e85b5_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd712249_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd712249_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1dd6eca70_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1dd6e85b5_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1d6212702:;
	}
	_iter_end_1d6212702:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>(({ jule::I64 __jule_x = _51126_prec; jule::I64 __jule_y = 2LLU; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U64 __jule_y = (jule::U64)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1d6217b25:;
		}
		_iter_end_1d6217b25:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1d6219693:;
		}
		_iter_end_1d6219693:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1dd6ede06_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1d6216a25:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1d621c146:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1d621b783:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I64 __jule_x = _51221_exp; jule::I64 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1d621b5eb:;
	};
	return _51113_dst;;
}



inline jule::I64 _1dd6ecde4_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1dd6ed268_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1dd6ede06_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1dd0569e5_ConvError _1dd6ee379_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1dd0569e5_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1d62228cc:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1d6222811:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1dd6ede06_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1d622437e:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dd6ede06_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1d622446c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dd6ede06_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1d622402c:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1d6223eb6:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1d6223dd9:;
					};
				};
			}
		}
		else {
			_case_begin_1d6221c2d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1d62222b1:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1d6228394:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d6228075:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1d62235d1:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1d622800e:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d62280db:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d6223a98:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1d62294d8:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d622a484:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1d622b74e:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1dd6ede06_lower(_1099_c)) && (_1dd6ede06_lower(_1099_c) <= 'z'))) {
						_case_begin_1d622b683:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1dd6ede06_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1d622b276:;
						{
							goto _iter_next_1d622a484;
						}
					}
					else {
						_case_begin_1d622b210:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1d622b188:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1d622a484:;
			++it;
			goto _iter_begin_1d622a484;
		}
		_iter_end_1d622a484:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dd6ee7a8_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd6ee379_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1dd6eec5e_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd6ee379_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = static_cast<jule::U64>((_17240_bitSize - 1LL)); ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1dd70091e_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1dd6acd0a_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _238a14468_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U64 __jule_y = static_cast<jule::U64>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_4122_man, _1dd701788_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_4122_man, _1dd701788_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1dd6acd0a_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dd700d92_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1dd6ac700_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _238a14468_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U64 __jule_y = static_cast<jule::U64>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_11022_man, _1dd701788_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_11022_man, _1dd701788_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1dd6ac700_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dd702b74_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1d6250421:;
	}
	_iter_end_1d6250421:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dd702e82_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1d6253da3:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1d6253e2a;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1d6253e2a:;
			{
				jule::I64 _887_caseN = _1dd702b74_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1dd6b5e12_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1d6253e91:;
			{
				if ((_1dd702b74_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1dd6b583a_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1d6253d09:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dd70324b_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1d62591a5:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1d62595a1:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1d625913e:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1dd6ede06_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1d625e551:;
					{
						goto _iter_next_1d625d9d4;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1d625e5ea:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1d6263214;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1d625d9d4;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1d625e661:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1d625d9d4;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d625d9d4;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1dd6ede06_lower(_1383_c))) && (_1dd6ede06_lower(_1383_c) <= 'f'))) {
					_case_begin_1d625e6c7:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1dd6ede06_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d625d9d4;
					}
				}
				_match_end_1d625e463:;
			};
			goto _iter_end_1d625d9d4;
		}
	_iter_next_1d625d9d4:;
	}
	_iter_end_1d625d9d4:;;
	_julec_label_1d6263214:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1dd6ede06_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1d62668bb;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1d62668bb:;
		}
		_iter_end_1d62668bb:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dd704c97_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U64 __jule_y = _1dd6e8cad_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1d626e8e6:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1d626e95c:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dd70415e_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1dd70415e_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1d626e9c3:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1dd70415e_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d626e808:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dd7051c6_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U64 __jule_y = _1dd6e89b1_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1d6273b5e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1d6273bc5:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dd70448e_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1dd70448e_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1d6273c3b:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1dd70448e_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d6273a71:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1dd0569e5_ConvError _1dd70576a_atofHex(_1dd6e85b5_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1dd0569e5_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1d6277514:;
	}
	_iter_end_1d6277514:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (jule::U64)((jule::U64)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1d62797e1:;
	}
	_iter_end_1d62797e1:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1d6279bba:;
	}
	_iter_end_1d6279bba:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U64 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1dd6e85b5_floatInfo_eq(&(*(_55613_flt)), _1dd6e89b1_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dd6ac700_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1dd6acd0a_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd705b44_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1dd0569e5_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd702e82_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70324b_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd70576a_atofHex(&(_1dd6e89b1_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd7051c6_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd700d92_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dd700d92_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dd70be9c_decimal _6676_d = _1dd70be9c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1dd703911_set(&_6676_d, _220023e03_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dd703c52_floatBits(&_6676_d, &(_1dd6e89b1_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1dd6ac700_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd705d86_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd702e82_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70324b_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd70576a_atofHex(&(_1dd6e8cad_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd704c97_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd70091e_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dd70091e_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dd70be9c_decimal _7246_d = _1dd70be9c_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1dd703911_set(&_7246_d, _220023e03_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dd703c52_floatBits(&_7246_d, &(_1dd6e8cad_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1dd6acd0a_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError _1dd70620a_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd705b44_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1dd705d86_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dd70657e_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1dd0569e5_ConvError __jule_assign_result = _1dd70620a_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1dd706e0e_ryuFtoaFixed32(_1dd6e9242_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _238a1ba36_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U64 __jule_y = static_cast<jule::U64>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1dd70844e_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd709d46_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1dd70a5e9_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _942_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U64 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U64 __jule_y = (jule::U64)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1dd707be0_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1dd7073a4_ryuFtoaFixed64(_1dd6e9242_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _238a1bd00_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U64 __jule_y = static_cast<jule::U64>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1dd70844e_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70a275_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1dd70a5e9_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _1662_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U64 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U64 __jule_y = (jule::U64)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1dd707be0_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1dd707be0_formatDecimal(_1dd6e9242_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1dd7076e5_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1d62aeb23:;
	}
	_iter_end_1d62aeb23:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((jule::U64)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1d62b2cd0:;
	}
	_iter_end_1d62b2cd0:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1d62b8797:;
	}
	_iter_end_1d62b8797:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1dd7081b8_ryuFtoaShortest(_1dd6e9242_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dd6e85b5_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_238a1605d_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U64 __jule_y = static_cast<jule::U64>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1dd709296_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dd708b47_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1dd709296_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1dd70844e_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1dd6e85b5_floatInfo_eq(&(*(_26168_flt)), _1dd6e89b1_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd709d46_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd709d46_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd709d46_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70a275_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70a275_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dd70a275_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1dd70a5e9_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1dd70a5e9_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1dd70a5e9_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _3252_extra; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U64 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U64 __jule_y = (jule::U64)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1dd709296_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1dd70844e_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1dd708718_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dd708b47_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dd6e85b5_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U64 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1dd709296_ryuDigits(_1dd6e9242_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd70a8b3_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd70a8b3_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dd70a8b3_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1dd709917_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1dd709917_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1d62d65d9:;
		}
		_iter_end_1d62d65d9:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((jule::U64)(9LL - _4287_n));
		_1dd709917_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1d62d719a:;
	}
	_iter_end_1d62d719a:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1d62d8ec1:;
	}
	_iter_end_1d62d8ec1:;;
}



inline void _1dd709917_ryuDigits32(_1dd6e9242_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1d62db864;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1d62db864:;
	}
	_iter_end_1d62db864:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1d62e2925:;
	}
	_iter_end_1d62e2925:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dd709d46_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1dd701788_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dd708718_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dd70a275_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1dd701788_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dd708718_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1e396_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _238a1ca8c_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dd70a5e9_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1d6300999:;
	}
	_iter_end_1d6300999:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dd70a8b3_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1dd70d7ea_trim(_1dd70be9c_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1d6303e20:;
	}
	_iter_end_1d6303e20:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1dd70dad6_rightShift(_1dd70be9c_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; (({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U64)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1d6307110:;
				}
				_iter_end_1d6307110:;;
				goto _iter_end_1d6305a26;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1d6305a26:;
	}
	_iter_end_1d6305a26:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (jule::U64)(static_cast<jule::U64>(({ jule::I64 __jule_x = 1LL; jule::U64 __jule_y = _28432_k; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U64)((jule::U64)((jule::U64)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1d630850c:;
	}
	_iter_end_1d630850c:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = ({ jule::U64 __jule_x = _2896_n; jule::U64 __jule_y = _28432_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U64)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U64)(_2896_n * 10LLU);
		}
	_iter_next_1d630a8a5:;
	}
	_iter_end_1d630a8a5:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1dd70d7ea_trim(_28420_a);
}



inline jule::Bool _1dd70e08c_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1d630d5de:;
	}
	_iter_end_1d630d5de:;;
	return false;;
}



inline void _1dd70e345_leftShift(_1dd70be9c_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1dd70b8b4_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1dd70e08c_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1dd70b8b4_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U64 __jule_x = (jule::U64)(static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U64 __jule_y = _35231_k; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1d6311b0e:;
	}
	_iter_end_1d6311b0e:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (jule::U64)(_3626_n - (jule::U64)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U64)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1d6314194:;
	}
	_iter_end_1d6314194:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1dd70d7ea_trim(_35219_a);
}



inline jule::Bool _1dd70e6b9_shouldRoundUp(_1dd70be9c_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1dd710e4b_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1dd71191e_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd712249_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1dd711314_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1dd71191e_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dd712249_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1dd7115cd_Itoa(jule::I64 _819_i) {
	return _1dd711314_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1dd71191e_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _220024453_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1dd711ba5_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dd712249_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1d63503ab:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ({ jule::U64 __jule_x = (_1547_us % 100LL); jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1d6351e6d:;
				}
				_iter_end_1d6351e6d:;;
				jule::U64 _1643_is = ({ jule::U64 __jule_x = _1547_us; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((jule::U64)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1dd711ba5_isPowerOfTwo(_10541_base)) {
			_case_begin_1d6350ab5:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_238a153ae_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (jule::U64)(static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1d6359a47:;
				}
				_iter_end_1d6359a47:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1d634e421:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1d635018b:;
				}
				_iter_end_1d635018b:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1d634e70c:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_220024453_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1dd713987_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1d636a9d1:;
			{
				return _1dd712ea3_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1d636e40d:;
			{
				return _1dd71325b_SysUint;;
			}
		}
		else {
			_case_begin_1d636b4d7:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1d636e63e:;
	};
}



inline jule::I64 _1dd713c51_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1d63703cb:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1d637083d:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1d63708a4:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1d6370442:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1d63704a8:;
			{
				return _1dd712ba6_BitSize;;
			}
		}
		else {
			_case_begin_1d6370750:;
			{
				return -1LL;;
			}
		}
		_match_end_1d6370321:;
	};
}



inline jule::Str _1dd714092_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d6373830:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d6373632:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d6373698:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d6373896:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1d6373544:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d6373126:;
	};
}



inline jule::Str _1dd714328_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1d63750e5:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1d637515b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1d63751c2:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d6375238:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1d637391d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d6374c0a:;
	};
}



inline jule::Str _1dd7145e2_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1d6376b0d:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1d63768cc:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1d6373c1a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d63764c0:;
	};
}



inline jule::Bool _1dd7151e7_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dd70657e_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dd7154b1_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1d637ba47:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d637abab:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d637b481:;
	};
}



inline jule::I64 _1dd71577a_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1d637c75c:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1d637bcde:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1d637bd55:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d637bc78:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d637c33e:;
	};
}



inline jule::I64 _1dd715a44_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1d637e341:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1d637d52c:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1d637d593:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1d637d4b6:;
			{
				return 64LLU;;
			}
		}
		_match_end_1d637d917:;
	};
}



inline void _1dd715bdc_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _208822d56_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1d637ec6a:;
				{
					_1dd712ba6_BitSize=64LLU;
					_1dd712ea3_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1dd71325b_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1d6380397:;
				{
					_1dd712ba6_BitSize=32LLU;
					_1dd712ea3_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1dd71325b_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1d63802a9:;
		};
	};
}



inline void _1dd715d63_init(void) {
	_1dd715bdc_UpdateTarget();
}



inline jule::I64 _1dd7199c1_MinI(jule::Str _6113_k) {
	_6113_k=_1dd713987_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1d638281c:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1d6382b2a:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1d6382b91:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1d6382c07:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1d637e6c6:;
			{
				return 0LL;;
			}
		}
		_match_end_1d637e792:;
	};
}



inline jule::I64 _1dd719cce_MaxI(jule::Str _7913_k) {
	_7913_k=_1dd713987_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1d6384247:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1d63845aa:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1d6384632:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1d63846a9:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1d6383ba3:;
			{
				return 0LL;;
			}
		}
		_match_end_1d6383b3c:;
	};
}



inline jule::U64 _1dd71a098_MaxU(jule::Str _9713_k) {
	_9713_k=_1dd713987_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1d6385bc7:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1d638603a:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1d63860b2:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1d6386139:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1d6385633:;
			{
				return 0LLU;;
			}
		}
		_match_end_1d63855bc:;
	};
}



inline jule::F64 _1dd71a3d9_Min(jule::Str _11512_k) {
	_11512_k=_1dd713987_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1dd7199c1_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1d6388713:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1d6387b63:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1d6387dc7:;
			{
				return 0LL;;
			}
		}
		_match_end_1d6387aec:;
	};
}



inline jule::F64 _1dd71a670_Max(jule::Str _13312_k) {
	_13312_k=_1dd713987_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1dd719cce_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1dd71a098_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1d638ac21:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1d638a0e9:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1d638a3d5:;
			{
				return 0LL;;
			}
		}
		_match_end_1d638a083:;
	};
}



inline jule::Bool _1dd71d695_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1dd71d9a3_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1dd71dc6c_IsInt(jule::Str _4610_k) {
	return (_1dd71d695_IsSigInt(_4610_k) || _1dd71d9a3_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1dd71e0ad_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1dd71e344_IsNum(jule::Str _5610_k) {
	return (_1dd71dc6c_IsInt(_5610_k) || _1dd71e0ad_IsFloat(_5610_k));;
}



inline jule::Bool _1dd71e60d_IsSigNum(jule::Str _6113_k) {
	return (_1dd71d695_IsSigInt(_6113_k) || _1dd71e0ad_IsFloat(_6113_k));;
}



inline void _1dd72886a_lshiftUnsig(_1dd71e850_Const* _59021_c, _1dd71e850_Const* _59032_x) {
	jule::U64 _5912_l = _1dd7222ae_AsU64(_59021_c);;
	jule::U64 _5922_r = _1dd7222ae_AsU64(_59032_x);;
	_1dd722aa6_SetU64(_59021_c, ({ jule::U64 __jule_x = _5912_l; jule::U64 __jule_y = _5922_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1dd728b9a_rshiftUnsig(_1dd71e850_Const* _59621_c, _1dd71e850_Const* _59632_x) {
	jule::U64 _5972_l = _1dd7222ae_AsU64(_59621_c);;
	jule::U64 _5982_r = _1dd7222ae_AsU64(_59632_x);;
	_1dd722aa6_SetU64(_59621_c, ({ jule::U64 __jule_x = _5972_l; jule::U64 __jule_y = _5982_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Bool _1c661ea64_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1c65706da_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72850ad:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1c72850ad:;
			++it;
			goto _iter_begin_1c72850ad;
		}
		_iter_end_1c72850ad:;
	};
	return false;;
}



inline jule::Bool _1c661ed72_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c6618233_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72855db:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1c72855db:;
			++it;
			goto _iter_begin_1c72855db;
		}
		_iter_end_1c72855db:;
	};
	return false;;
}



inline jule::Bool _1c662047c_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c6620713_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c6620713_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c66209cc_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c66213b2_IsFloat(jule::Str _38012_k) {
	if (_208769198_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _20876e1d1_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _20876e1d1_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1c662167b_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1c6621c0e_IsIgnoreIdent(jule::Str _40318_ident) {
	return (_40318_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1c6621ec8_IsAnonIdent(jule::Str _40616_ident) {
	return (_40616_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1c662255b_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c65703ee_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c728cbcb:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1c728cbcb:;
			++it;
			goto _iter_begin_1c728cbcb;
		}
		_iter_end_1c728cbcb:;
	};
	return false;;
}



inline jule::Bool _1c6622a56_IsLetter(jule::I32 _42913_r) {
	return _2086b12dd_IsLetter(_42913_r);;
}



inline jule::Bool _1c6622ec9_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c6623293_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c662355c_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c6623826_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1c72917d4:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1c729187d:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1c7291905:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c729176d:;
			{
				return false;;
			}
		}
		_match_end_1c7291581:;
	};
}



inline jule::Bool _1c6623ae0_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1c6623da9_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1c661880a_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7294595:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1c7294595:;
			++it;
			goto _iter_begin_1c7294595;
		}
		_iter_end_1c7294595:;
	};
	return false;;
}



inline jule::Bool _1c6624173_IsAssignOp(jule::U64 _49515_id) {
	if (_1c6623da9_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1c6618ae6_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72953a9:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1c72953a9:;
			++it;
			goto _iter_begin_1c72953a9;
		}
		_iter_end_1c72953a9:;
	};
	return false;;
}



inline jule::Ptr<_1c6624aad_File> _1c6625e88_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c6624aad_File>(_1c6624aad_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr)});;
}



inline _20806e73a_Log _1c66279b2_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c6624aad_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_20806eb9c_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1c6627d7a_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72a0936:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1c72a0936:;
			++it;
			_1146_i++;
			goto _iter_begin_1c72a0936;
		}
		_iter_end_1c72a0936:;
	};
	return true;;
}



inline jule::Str _1c66281ee_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1c6622ec9_IsDecimal(_1286_b))))) {
				goto _iter_end_1c72a38c3;
			};
		}
	_iter_next_1c72a38c3:;
	}
	_iter_end_1c72a38c3:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c66285b7_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c66281ee_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c662893b_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1c72a56e9:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1c6622ec9_IsDecimal(_1683_b)) {
					_case_begin_1c72a6794:;
					{
						goto _iter_next_1c72a55a6;
					}
				}
				else if (_1c662a2bc_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1c72a683d:;
					{
						return _1c66285b7_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1c72a671c:;
					{
						goto _iter_end_1c72a55a6;
					}
				}
				_match_end_1c72a6695:;
			};
		}
	_iter_next_1c72a55a6:;
	}
	_iter_end_1c72a55a6:;;
	return jule::Str();;
}



inline jule::Str _1c6628cb0_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c66281ee_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c6629134_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c66281ee_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c66295b8_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1c66281ee_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1c6622ec9_IsDecimal(_2013_b))))) {
				goto _iter_end_1c72a9412;
			};
		}
	_iter_next_1c72a9412:;
	}
	_iter_end_1c72a9412:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c662980a_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1c72ab59b:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1c72ac316:;
					{
						__jule_func_result = _1c66295b8_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1c72ac3b0:;
					{
						goto _iter_next_1c72ab6de;
					}
				}
				else if (_1c6629e48_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1c72ac426:;
					{
						__jule_func_result = _1c66281ee_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c6622ec9_IsDecimal(_2203_b)))) {
					_case_begin_1c72ac48c:;
					{
						goto _iter_end_1c72ab6de;
					}
				}
				_match_end_1c72ac228:;
			};
		}
	_iter_next_1c72ab6de:;
	}
	_iter_end_1c72ab6de:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1c6629ac4_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c6627d7a_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1c6623293_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1c72aebba;
			};
		}
	_iter_next_1c72aebba:;
	}
	_iter_end_1c72aebba:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1c6629e48_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c662a2bc_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c662a641_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1c72b2a58:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1c6622ec9_IsDecimal(_2763_b)) {
					_case_begin_1c72b376d:;
					{
						goto _iter_next_1c72b25c4;
					}
				}
				else if (_1c662a2bc_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1c72b3817:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c72b36e6:;
					{
						goto _iter_end_1c72b25c4;
					}
				}
				_match_end_1c72b366e:;
			};
		}
	_iter_next_1c72b25c4:;
	}
	_iter_end_1c72b25c4:;;
	return false;;
}



inline jule::Bool _1c662a9b5_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1c72b476e:;
			{
				goto _case_begin_1c72b442d;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1c72b442d:;
			{
				goto _case_begin_1c72b4807;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1c72b4807:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c72b4384:;
			{
				return true;;
			}
		}
		_match_end_1c72b42a7:;
	};
}



inline jule::Bool _1c662ad39_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1c72b6397:;
			{
				goto _case_begin_1c72b640d;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1c72b640d:;
			{
				goto _case_begin_1c72b6474;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1c72b6474:;
			{
				goto _case_begin_1c72b64eb;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1c72b64eb:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c72b62cb:;
			{
				return true;;
			}
		}
		_match_end_1c72b5d7a:;
	};
}



inline jule::Str _1c662b334_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c66295b8_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1c6629e48_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1c66281ee_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1c662355c_IsOctal(_3393_b))))) {
				goto _iter_end_1c72b9c4c;
			};
		}
	_iter_next_1c72b9c4c:;
	}
	_iter_end_1c72b9c4c:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1c662b510_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1c72be515:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1c662a9b5_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1c72c0181:;
					{
						__jule_func_result = _1c6629134_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c662ad39_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1c72c022a:;
					{
						__jule_func_result = _1c6628cb0_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c662a2bc_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1c72c0291:;
					{
						__jule_func_result = _1c66285b7_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c662a641_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1c72c0307:;
					{
						__jule_func_result = _1c662893b_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1c6623826_IsHex(_3723_b))))) {
					_case_begin_1c72c036d:;
					{
						goto _iter_end_1c72be5ae;
					}
				}
				_match_end_1c72c0082:;
			};
		}
	_iter_next_1c72be5ae:;
	}
	_iter_end_1c72be5ae:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1c662b862_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1c6623826_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c72c1e85:;
	}
	_iter_end_1c72c1e85:;;
	__jule_func_result=__jule_bytesToStr((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c662bb2b_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c662b862_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c662bde5_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c662b862_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c662c1ae_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c662b862_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c662c478_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c662355c_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c662355c_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c662355c_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = __jule_bytesToStr((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_20806e73a_Log> _1c663246c_Lex(jule::Ptr<_1c6624aad_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1c662cbe8_lex _8116_lex = _1c662cbe8_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1c661e327_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_20806e73a_Log>(nullptr)};;
	_1c6630a42_newLine(&_8116_lex);
	_1c662d820_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1c670296b_FindModuleFile(jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c735539d:;
		if (it != expr_end) {
			jule::Ptr<_238ad88a0_DirEntry> *_149_d = it;
			{
				if (((!(_238adc376_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c735539d:;
			++it;
			goto _iter_begin_1c735539d;
		}
		_iter_end_1c735539d:;
	};
	return false;;
}



inline jule::Str _1c6702c24_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_238ad88a0_DirEntry>> _277_dirents = ({
				auto except = static__208775bee_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c7356547;
				} jule::Slice<jule::Ptr<_238ad88a0_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1c670296b_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_2087752c5_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1c7356547;
			};
		}
	_iter_next_1c7356547:;
	}
	_iter_end_1c7356547:;;
	return jule::Str();;
}



inline jule::Slice<_20806e73a_Log> _1c6702edd_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__238ada819_Read(_2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_20806e73a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20806e73a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _208770eb3_Trim(_220024189_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_20806e73a_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _20806e73a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1c670383a_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2087276ea_IsUpper(_142_r);;
}



inline jule::Bool _1c674c774_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1c676c70b_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1c676d366_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1c676c91a_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1c676cc5b_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d64a82b1:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1d64a82b1;
				};
			}
			_iter_next_1d64a82b1:;
			++it;
			goto _iter_begin_1d64a82b1;
		}
		_iter_end_1d64a82b1:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1c676d70c_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066aeca0_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_2066b0d4a_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1d64a947c:;
	}
	_iter_end_1d64a947c:;;
	return _220024453_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c676cee2_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1d64ac6b1:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d64acdba:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d64ace31:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1d64ace97:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1d64ad00d:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d64ad085:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1d64ad10c:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1d64ad184:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1d64ad20b:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1d64ad283:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1d64acc33:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c676d366_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c676cee2_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1d64b2e03:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1dd6ee7a8_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1d64b31cd:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1dd6ee7a8_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1d64b3255:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1dd6ee7a8_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1d64b19c3:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1dd6ee7a8_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1d64b1c15:;
	};
}



inline void _1c676d70c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1c676d366_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_2066b0d4a_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _1c689bbc0_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I64 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I64 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1d64dda66:;
	}
	_iter_end_1d64dda66:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1c689c088_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _292_start = (*(_2824_i));;
	jule::I64 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I64 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _2066ae95e_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1d64e14e7:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1d64e176c:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1d64e143c:;
			};
		}
	_iter_next_1d64e076b:;
	}
	_iter_end_1d64e076b:;;
	return nullptr;;
}



inline void _1c689c374_FmtByDefault(_20759e353_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_2075a814d_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1d64e0a35:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd6e97c5_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type138)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1d64e3829:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd6e97c5_FmtFloat((*(_4840_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1d64e3890:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd711314_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1d64e2d67:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd711314_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1d64e2dcd:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd711314_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1d64e2e44:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd711314_FmtInt((*(_4840_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1d64e2eaa:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1d64e39a0:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type141)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1d64e3a16:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd710e4b_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type142)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1d64e3a7c:;
			{
				_2075a814d_WriteStr(_4822_buf, _1dd710e4b_FmtUint((*(_4840_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1d64e3ae3:;
			{
				_2075a814d_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1d64e3b59:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_2075a814d_WriteStr(_4822_buf, jule::Str::lit("true", 4));
				} else {
					_2075a814d_WriteStr(_4822_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1d64e27c3:;
			{
				_2075a814d_WriteStr(_4822_buf, _1d5083431_toStr((*(_4840_arg))));
			}
		}
		_match_end_1d64e275c:;
	};
}



inline void _1c689c792_applyFmtByDefault(_20759e353_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _882_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1c689c374_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1c689cbb0_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _20759e353_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1c689c792_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_2075a814d_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_2075a7d95_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Slice<jule::U8> _1c689d034_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _220023e03_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1216_i = _1c689bbc0_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I64 _1256_j = 0LL;;
	jule::I64 _1266_last = 0LL;;
	_20759e353_StrBuilder _1276_buf = static__2075a7c41_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1c689bbc0_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			_2075a7d95_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
			jule::Slice<jule::U8> _1307_format = _1c689c088_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1d6500bee;
			};
			_1c689cbb0_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				_2075a7d95_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1d6500bee;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1d6500bee:;
	}
	_iter_end_1d6500bee:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		_2075a7d95_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
	};
	return _2075a93e6_Buf(&_1276_buf);;
}



inline jule::Str _1c68a0058_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _220024453_StrFromBytes(_1c689d034_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6224746_runtimeFindFn(jule::Ptr<_1c66d63cd_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1c666a51b_Fn> _126_f = _1c66d79d9_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1c6655803_Struct> _1c6224c96_runtimeFindStruct(jule::Ptr<_1c66d63cd_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1c6655803_Struct> _256_f = _1c66d75dd_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1c66707c9_parameterUsesGenerics(jule::Ptr<_1c666c474_ParamIns>* _39431_p, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _39446_generics) {
	if (_1c6669196_IsSelf((*((*(_39431_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1c67d7a84_kindUsesGenerics(&((*((*(_39431_p))))._field_Kind), _39446_generics);;
}



inline jule::Ptr<_1c67c40e2_TypeSymbol> _1c6673007_buildType(jule::Ptr<_1c6634903_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1c6789ccd_Value> _1c6673315_buildExpr(jule::Ptr<_1c6638c37_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1c6788b56_Data>(nullptr)});;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c66735ce_buildTypeAlias(jule::Ptr<_1c664b420_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1c6673007_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1c66528cc_Field> _1c6673920_buildField(jule::Ptr<_1c664ecc5_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c66528cc_Field>(_1c66528cc_Field{._field_Owner=jule::Ptr<_1c6655803_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1c6673007_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c66528cc_Field>> _1c6673ba6_buildFields(jule::Slice<jule::Ptr<_1c664ecc5_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c66528cc_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66528cc_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66528cc_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54255b3:;
		if (it != expr_end) {
			jule::Ptr<_1c664ecc5_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c66528cc_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1c6673920_buildField(_13614_decl)); };
			}
			_iter_next_1c54255b3:;
			++it;
			goto _iter_begin_1c54255b3;
		}
		_iter_end_1c54255b3:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1c6655803_Struct> _1c6673e70_buildStruct(jule::Ptr<_1c66506bb_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c6655803_Struct>(_1c6655803_Struct{._field_sema=jule::Ptr<_1c670684e_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1c6673ba6_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1c666a51b_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1c667de9c_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c665865d_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1c6668a47_Param> _1c6674239_buildParam(jule::Ptr<_1c6645161_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c6668a47_Param>(_1c6668a47_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1c6673007_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c6668a47_Param>> _1c6674613_buildParams(jule::Slice<jule::Ptr<_1c6645161_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c6668a47_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6668a47_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6668a47_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c542960b:;
		if (it != expr_end) {
			jule::Ptr<_1c6645161_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6668a47_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1c6674239_buildParam(_16714_decl)); };
			}
			_iter_next_1c542960b:;
			++it;
			goto _iter_begin_1c542960b;
		}
		_iter_end_1c542960b:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1c666832c_RetType> _1c6674855_buildRetType(jule::Ptr<_1c66377e6_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c666832c_RetType>(_1c666832c_RetType{._field_Kind=_1c6673007_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1c666a51b_Fn> _1c6674b1e_buildFunc(jule::Ptr<_1c66465b3_FnDecl> _18318_decl) {
	return jule::new_ptr<_1c666a51b_Fn>(_1c666a51b_Fn{._field_sema=jule::Ptr<_1c670684e_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1c6674855_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1c6674613_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1c6655803_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c666d4ec_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1c666a51b_Fn>> _1c6674dd8_buildMethods(jule::Slice<jule::Ptr<_1c66465b3_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c666a51b_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c666a51b_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c666a51b_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c542e6aa:;
		if (it != expr_end) {
			jule::Ptr<_1c66465b3_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c666a51b_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1c6674b1e_buildFunc(_20314_decl)); };
			}
			_iter_next_1c542e6aa:;
			++it;
			goto _iter_begin_1c542e6aa;
		}
		_iter_end_1c542e6aa:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>> _1c66751a2_buildTraitInherits(jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67c40e2_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c54307ee:;
		if (it != expr_end) {
			jule::Ptr<_1c6634903_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1c67c40e2_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1c6673007_buildType(_21114_it)); };
			}
			_iter_next_1c54307ee:;
			++it;
			goto _iter_begin_1c54307ee;
		}
		_iter_end_1c54307ee:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1c667de9c_Trait> _1c667546b_buildTrait(jule::Ptr<_1c6650e08_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c667de9c_Trait>(_1c667de9c_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1c66751a2_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1c6674dd8_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr)});;
}



inline jule::Ptr<_1c6680b3b_EnumItem> _1c6675735_buildEnumItem(jule::Ptr<_1c664ceb0_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c6680b3b_EnumItem>(_1c6680b3b_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1c6673315_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _1c66759ee_buildEnumItems(jule::Slice<jule::Ptr<_1c664ceb0_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6680b3b_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5433aaa:;
		if (it != expr_end) {
			jule::Ptr<_1c664ceb0_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c6680b3b_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1c6675735_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1c5433aaa:;
			++it;
			goto _iter_begin_1c5433aaa;
		}
		_iter_end_1c5433aaa:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1c66816a8_Enum> _1c6675ee9_buildEnum(jule::Ptr<_1c664da71_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c66816a8_Enum>(_1c66816a8_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1c6673007_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1c66759ee_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c66827db_TypeEnumItem> _1c66761c5_buildTypeEnumItem(jule::Ptr<_1c664e39b_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c66827db_TypeEnumItem>(_1c66827db_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1c6673007_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _1c667646c_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c664e39b_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66827db_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5436d66:;
		if (it != expr_end) {
			jule::Ptr<_1c664e39b_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c66827db_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1c66761c5_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1c5436d66:;
			++it;
			goto _iter_begin_1c5436d66;
		}
		_iter_end_1c5436d66:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c6676736_buildTypeEnum(jule::Ptr<_1c664ea0b_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c6682db3_TypeEnum>(_1c6682db3_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1c667646c_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c672acb3_Var> _1c6676a00_buildVar(jule::Ptr<_1c664776d_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1c6673007_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1c6673315_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1c66719a6_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1c672acb3_Var>> _1c6676cb9_buildVars(jule::Slice<jule::Ptr<_1c664776d_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c672acb3_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c672acb3_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c672acb3_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c543b6a6:;
		if (it != expr_end) {
			jule::Ptr<_1c664776d_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1c6676a00_buildVar(_29714_decl)); };
			}
			_iter_next_1c543b6a6:;
			++it;
			goto _iter_begin_1c543b6a6;
		}
		_iter_end_1c543b6a6:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1c66adce0_Impl> _1c6677083_buildImpl(jule::Ptr<_1c6651568_Impl> _30318_decl) {
	return jule::new_ptr<_1c66adce0_Impl>(_1c66adce0_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1c6674dd8_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1c6676cb9_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1c667d496_isImplicitImport(jule::Ptr<_1c66d63cd_ImportInfo> _78821_imp) {
	return ((*(_78821_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a93c3_buildAsComptimeMethodData(jule::Ptr<_1c666d4ec_FnIns>* _203035_f) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c66d63cd_ImportInfo> _1c66a95d2_findComptimePackage(jule::Ptr<_1c670684e_sema>* _203829_s) {
	return _1c6706d27_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c66d63cd_ImportInfo>>((void*)__jule_anon1d67cd6a2, nullptr, nullptr));;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a9956_buildComptimeTypeInfoData(jule::Ptr<_1c670684e_sema>* _204435_s, jule::Ptr<_1c67bb8d1_TypeKind>* _204450_t) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67061bc_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c66a9c97_buildComptimeValue(jule::Ptr<_1c6788b56_Data>* _205228_d) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c669b7e4_comptimeValue>(_1c669b7e4_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Str _1c66acc89_toStrConstraints(jule::Ptr<_1c67b9eea_InsGeneric> _14321_g) {
	_20759e353_StrBuilder _1446_sb = static__2075a7c41_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d69d7867:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1c67bb8d1_TypeKind> *_1459_c = it;
			{
				_2075a814d_WriteStr(&_1446_sb, _1c67bbccc_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_2075a814d_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1d69d7867:;
			++it;
			_1456_i++;
			goto _iter_begin_1d69d7867;
		}
		_iter_end_1d69d7867:;
	};
	return _2075a8945_Str(&_1446_sb);;
}



inline jule::Bool _1c66ad152_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1c67bb8d1_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1d69d9726:;
			{
				jule::Ptr<_1c67c49e9_Prim> _1573_prim = _1c67be087_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1dd71e60d_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1d69d978c:;
			{
				jule::Ptr<_1c67c49e9_Prim> _1633_prim = _1c67be087_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1dd71d9a3_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1d69d9803:;
			{
				jule::Ptr<_1c67c49e9_Prim> _1693_prim = _1c67be087_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1dd71e0ad_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1d69d987a:;
			{
				jule::Ptr<_1c67c49e9_Prim> _1753_prim = _1c67be087_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1dd71e344_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1d69d9a56:;
			{
				return _1c67bd2b7_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1d69d9abc:;
			{
				return (!(_1c67bd2b7_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1d69d9b33:;
			{
				return _1c67bd031_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1d69d9b99:;
			{
				return _1c67bd54d_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1d69d813c:;
			{
				return false;;
			}
		}
		_match_end_1d69d95c2:;
	};
}



inline jule::Bool _1c66ad41b_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1c66ab150_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d69e06a5:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1d69e06a5:;
			++it;
			goto _iter_begin_1d69e06a5;
		}
		_iter_end_1d69e06a5:;
	};
	return false;;
}



inline jule::Ptr<_1c66ba857_scopeChecker> _1c66b1023_newScopeCheckerBase(jule::Ptr<_1c670684e_sema>* _5829_s, jule::Ptr<_1c666d4ec_FnIns> _5843_owner) {
	return jule::new_ptr<_1c66ba857_scopeChecker>(_1c66ba857_scopeChecker{._field_calledFrom=jule::Ptr<_1c661e327_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1c66ba857_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1c678348b_SymbolTable>(_1c678348b_SymbolTable{._field_File=jule::Ptr<_1c6624aad_File>(nullptr), ._field_Passes=jule::Slice<_1c6672b94_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1c6655803_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1c666a51b_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1c667de9c_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1c66816a8_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1c6682db3_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1c66adce0_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_tree=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1c672acb3_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1c66b9867_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1c66ba857_scopeChecker> _1c66b13db_newScopeChecker(jule::Ptr<_1c670684e_sema>* _6625_s, jule::Ptr<_1c666d4ec_FnIns> _6639_owner) {
	jule::Ptr<_1c66ba857_scopeChecker> _676_base = _1c66b1023_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c66b9867_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1c66b9867_scopeLabel> _1c66b1760_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c66ba857_scopeChecker> _7637_scope) {
	jule::Ptr<_1c66b9867_scopeLabel> _776_label = _1c66bec24_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1c66bec24_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1d6a0b2e7:;
	}
	_iter_end_1d6a0b2e7:;;
	return _776_label;;
}



inline jule::Slice<jule::Ptr<_1c6788b56_Data>> _1c66b1aa1_getDatasFromTupleData(jule::Ptr<_1c6788b56_Data>* _8831_d) {
	if ((_1c67c0dad_Tup((*((*(_8831_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_8831_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1d6a10a8d:;
				{
					return (*((*((*(_8831_d))))._field_Model.unsafe_cast_ptr<_1c6663107_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1d6a0d140:;
				{
					jule::Ptr<_1c67c9adc_Tuple> _948_t = _1c67c0dad_Tup((*((*(_8831_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1c6788b56_Data>> _958_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(0LL, (*(_948_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6788b56_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_948_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d6a0e938:;
						if (it != expr_end) {
							jule::Ptr<_1c67bb8d1_TypeKind> _9616_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1c6788b56_Data>> &__jule_push_dest = _958_r; __jule_push_dest.push(jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_9616_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})); };
							}
							_iter_next_1d6a0e938:;
							++it;
							goto _iter_begin_1d6a0e938;
						}
						_iter_end_1d6a0e938:;
					};
					return _958_r;;
				}
			}
			_match_end_1d6a0d0c9:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6788b56_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8831_d)); __jule_collection; });;
	};
}



inline jule::Bool _1c66b2321_checkMut(jule::Ptr<_1c670684e_sema>* _12318_s, jule::Ptr<_1c6788b56_Data>* _12329_left, jule::Ptr<_1c6788b56_Data> _12346_right, jule::Ptr<_1c661e327_Token> _12360_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_12329_left))))._field_Mutable))) {
			_case_begin_1d6a190e6:;
			{
				_1c6709753_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_12346_right != nullptr) && (!((*_12346_right.alloc)._field_Mutable))) && _1c67bd2b7_Mutable((*_12346_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1d6a19503:;
			{
				if ((((*(_12360_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c67c060a_Struct((*(_12346_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c6709753_pushErr((*(_12318_s)).ptr(), _12360_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_12346_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d6a19080:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d6a18ec5:;
	};
}



inline jule::Bool _1c66b280a_checkAssign(jule::Ptr<_1c670684e_sema>* _14221_s, jule::Ptr<_1c6788b56_Data>* _14236_left, jule::Ptr<_1c6788b56_Data> _14253_right, jule::Ptr<_1c661e327_Token> _14267_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c666d4ec_FnIns> _1432_f = _1c67c0374_Fn((*((*(_14236_left))))._field_Kind.ptr());;
	if ((((_1432_f != nullptr) && ((*_1432_f.alloc)._field_Decl != nullptr)) && (*(*(_1432_f))._field_Decl.alloc)._field_Global)) {
		_1c6709753_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c6789591_IsConst((*(_14236_left)).ptr())) {
			_case_begin_1d6a1ec89:;
			{
				_1c6709753_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1c6709ab6_pushSuggestion((*(_14221_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_14236_left))))._field_Lvalue))) {
			_case_begin_1d6a1ed33:;
			{
				_1c6709753_pushErr((*(_14221_s)).ptr(), _14267_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c66b2321_checkMut(_14221_s, _14236_left, _14253_right, _14267_op)))) {
			_case_begin_1d6a1edaa:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1d6a1ec23:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d6a1eabe:;
	};
}



inline jule::Bool _1c66b2bd4_isValidAstStForNextSt(jule::Any* _16431_n) {
	{
		auto &_match_expr{ (*(_16431_n)) };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1d6a1282b:;
			{
				return (!((*((*(_16431_n)).cast_ptr<_1c66433a1_AssignSt>(&__jule_any_type66)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1d6a2240c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d6a222db:;
			{
				return false;;
			}
		}
		_match_end_1d6a1ee43:;
	};
}



inline jule::Bool _1c66b2e26_isValidStForNextSt(jule::Any* _17524_st) {
	{
		auto &_match_expr{ (*(_17524_st)) };
		
		if (_match_expr.type == &__jule_any_type50 || _match_expr.type == &__jule_any_type51 || _match_expr.type == &__jule_any_type54) {
			_case_begin_1d6a22671:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d6a289a7:;
			{
				{
					auto &_match_expr{ (*((*(_17524_st)).cast_ptr<_1c6788b56_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1d6a39028:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1d6a3a1b1:;
						{
							return false;;
						}
					}
					_match_end_1d6a3a14a:;
				};
			}
		}
		else {
			_case_begin_1d6a250e1:;
			{
				return false;;
			}
		}
		_match_end_1d6a26b3c:;
	};
}



inline jule::U64 _1c66cd0a6_removeEqFromOp(jule::U64 _216719_op) {
	{
		auto &_match_expr{ _216719_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d6a3d824:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1d6a39bc7:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1d6a39c3d:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d6a3d88a:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d6a3d901:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d6a3da55:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d6a3dabb:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1d6a3db32:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1d6a365ca:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1d6a36641:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1d6a3a326:;
			{
				return _216719_op;;
			}
		}
		_match_end_1d6a39e4c:;
	};
}



inline void _1c66cd2d7_makeComptimeRange(jule::Ptr<_1c6788b56_Data>* _219627_d) {
	{
		
		if ((_1c67c13ca_comptimeStructFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a3caba:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c13ca_comptimeStructFields((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c18e7_comptimeEnumFields((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a42493:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c18e7_comptimeEnumFields((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c26b7_comptimeTypeInfos((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a42509:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c26b7_comptimeTypeInfos((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c1e14_comptimeParams((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a3cb31:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c1e14_comptimeParams((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c2bd4_comptimeStatics((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a3cb97:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c2bd4_comptimeStatics((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c3c3a_comptimeFiles((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a3cc0d:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c3c3a_comptimeFiles((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else if ((_1c67c371d_comptimeDecls((*((*(_219627_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d6a42a6a:;
			{
				(*((*(_219627_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66857de_comptimeRange>(_1c66857de_comptimeRange{._field_kind=jule::Trait(_1c67c371d_comptimeDecls((*((*(_219627_d))))._field_Kind), (jule::Trait::Type*)&_1c66855be_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1d6a3ca54:;
			{
				(*((*(_219627_d))))._field_Decl=true;
			}
		}
		_match_end_1d6a42163:;
	};
}



inline jule::Bool _1c66cd5a1_canComptimeMatch(jule::Ptr<_1c6788b56_Data>* _221926_d) {
	if ((!(_1c6782589_isGoodValueToInfer(_221926_d)))) {
		return false;;
	};
	return (_1c6789591_IsConst((*(_221926_d)).ptr()) || (_1c67c294d_comptimeTypeInfo((*((*(_221926_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1c66cd86a_stmtIsDef(jule::Any* _222715_stmt) {
	{
		auto &_match_expr{ (*(_222715_stmt)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6a4b931:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1d6a4e01b:;
			{
				jule::Ptr<_1c66b75ac_MultiAssign> _22323_ma = (*(_222715_stmt)).cast_ptr<_1c66b75ac_MultiAssign>(&__jule_any_type54);;
				return ((*(_22323_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1d6a4dacb:;
			{
				return false;;
			}
		}
		_match_end_1d6a4da43:;
	};
}



inline jule::I64 _1c66cdbde_countMatchType(jule::Ptr<_1c66b7ce9_Match>* _223920_m, jule::Ptr<_1c67bb8d1_TypeKind>* _223932_t) {
	jule::I64 _22406_n = 0LL;;
	_julec_label_1d6a5067c:;
	{
		auto expr = &((*((*(_223920_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6a50a9a:;
		if (it != expr_end) {
			jule::Ptr<_1c66b8822_Case> *_22429_c = it;
			{
				if (((*(_22429_c)) == nullptr)) {
					goto _iter_next_1d6a50a9a;
				};
				{
					auto expr = &((*((*(_22429_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6a5189d:;
					if (it != expr_end) {
						jule::Ptr<_1c6788b56_Data> *_224610_expr = it;
						{
							if (((*(_224610_expr)) == nullptr)) {
								goto _iter_end_1d6a50a9a;
							};
							if (_1c67bc11d_Equal((*(_223932_t)), (*((*(_224610_expr))))._field_Model.cast_ptr<_1c67bb8d1_TypeKind>(&__jule_any_type87))) {
								(_22406_n)++;
							};
						}
						_iter_next_1d6a5189d:;
						++it;
						goto _iter_begin_1d6a5189d;
					}
					_iter_end_1d6a5189d:;
				};
			}
			_iter_next_1d6a50a9a:;
			++it;
			goto _iter_begin_1d6a50a9a;
		}
		_iter_end_1d6a50a9a:;
	};
	return _22406_n;;
}



inline jule::Ptr<_1c678348b_SymbolTable> _1c66d3485_findVarFileInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _4430_files, jule::Ptr<_1c672acb3_Var>* _4454_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb039d:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _4514_f = *it;
			{
				if ((_1c6785a32_findVar1(_4514_f.ptr(), _4454_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1d6cb039d:;
			++it;
			goto _iter_begin_1d6cb039d;
		}
		_iter_end_1d6cb039d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c672acb3_Var> _1c66d3908_findVarInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _5526_files, jule::Str* _5550_ident, jule::Bool _5562_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb1657:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _5614_f = *it;
			{
				jule::Ptr<_1c672acb3_Var> _577_v = _1c6783da4_FindVar(_5614_f.ptr(), (*(_5550_ident)), _5562_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1d6cb1657:;
			++it;
			goto _iter_begin_1d6cb1657;
		}
		_iter_end_1d6cb1657:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c66d3d37_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _6732_files, jule::Str* _6756_ident, jule::Bool _6768_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb2c0d:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _6814_f = *it;
			{
				jule::Ptr<_1c67baade_TypeAlias> _697_ta = _1c67842a0_FindTypeAlias(_6814_f.ptr(), (*(_6756_ident)), _6768_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1d6cb2c0d:;
			++it;
			goto _iter_begin_1d6cb2c0d;
		}
		_iter_end_1d6cb2c0d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6655803_Struct> _1c66d42dd_findStructInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _7929_files, jule::Str* _7953_ident, jule::Bool _7965_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb423c:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _8014_f = *it;
			{
				jule::Ptr<_1c6655803_Struct> _817_s = _1c678469b_FindStruct(_8014_f.ptr(), (*(_7953_ident)), _7965_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1d6cb423c:;
			++it;
			goto _iter_begin_1d6cb423c;
		}
		_iter_end_1d6cb423c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c666a51b_Fn> _1c66d46d9_findFnInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _9125_files, jule::Str* _9149_ident, jule::Bool _9161_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb576b:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _9214_file = *it;
			{
				jule::Ptr<_1c666a51b_Fn> _937_f = _1c6784a97_FindFn(_9214_file.ptr(), (*(_9149_ident)), _9161_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1d6cb576b:;
			++it;
			goto _iter_begin_1d6cb576b;
		}
		_iter_end_1d6cb576b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c667de9c_Trait> _1c66d4a5d_findTraitInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _10328_files, jule::Str* _10352_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb665c:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _10414_f = *it;
			{
				jule::Ptr<_1c667de9c_Trait> _1057_t = _1c6784dd8_FindTrait(_10414_f.ptr(), (*(_10352_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1d6cb665c:;
			++it;
			goto _iter_begin_1d6cb665c;
		}
		_iter_end_1d6cb665c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c66816a8_Enum> _1c66d4dd2_findEnumInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _11527_files, jule::Str* _11551_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb8087:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _11614_f = *it;
			{
				jule::Ptr<_1c66816a8_Enum> _1177_e = _1c6785229_FindEnum(_11614_f.ptr(), (*(_11551_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1d6cb8087:;
			++it;
			goto _iter_begin_1d6cb8087;
		}
		_iter_end_1d6cb8087:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c6682db3_TypeEnum> _1c66d5366_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _12731_files, jule::Str* _12755_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb93da:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _12814_f = *it;
			{
				jule::Ptr<_1c6682db3_TypeEnum> _1297_e = _1c678556a_FindTypeEnum(_12814_f.ptr(), (*(_12755_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1d6cb93da:;
			++it;
			goto _iter_begin_1d6cb93da;
		}
		_iter_end_1d6cb93da:;
	};
	return nullptr;;
}



inline jule::Any _1c66d571d_defByIdentPackage(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _13827_files, jule::Str* _13851_ident, jule::Bool _13863_binded) {
	{
		auto expr = _13827_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cb5d10:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _13914_file = *it;
			{
				jule::Any _1407_def = _1c678688a_defByIdent(_13914_file.ptr(), _13851_ident, _13863_binded);;
				if ((_1407_def != nullptr)) {
					return _1407_def;;
				};
			}
			_iter_next_1d6cb5d10:;
			++it;
			goto _iter_begin_1d6cb5d10;
		}
		_iter_end_1d6cb5d10:;
	};
	return nullptr;;
}



inline jule::Bool _1c66db7ce_isStdPackage(jule::Str* _36918_f, jule::Str _36926_p) {
	return _208769198_HasPrefix((*(_36918_f)), _2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _208821eed_PathStdlib; (*it++) = _36926_p; __jule_collection; })));;
}



inline jule::Bool _1c6703e12_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d6ccb7d7:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d6ccb84d:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_187_model))._field_Field != nullptr) && _1c6703e12_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d6ccb8b4:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1c67be5a4_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c67be31d_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1c6703e12_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d6ccb92a:;
			{
				jule::Ptr<_1c6660379_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53);;
				if ((_1c67bed57_Arr((*((*(_357_indexing))._field_Expr))._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1c6703e12_isValidModelForRef(&((*(*(_357_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1d6ccb3ca:;
			{
				return false;;
			}
		}
		_match_end_1d6ccaeac:;
	};
}



inline _20806e73a_Log _1c67043b8_compilerErr(jule::Ptr<_1c661e327_Token>* _4717_token, jule::Bool _4732_line, jule::Str _4744_fmt, jule::Slice<jule::Any> _4757_args) {
	_20806e73a_Log _486_log = _20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4717_token))))._field_Row, ._field_Column=(*((*(_4717_token))))._field_Column, ._field_Path=(*((*((*(_4717_token))))._field_File))._field_Path, ._field_Text=_20806eb9c_Logf(_4744_fmt, _4757_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4732_line) {
		_486_log._field_Line=_1c6625b03_GetRow((*((*(_4717_token))))._field_File, (*((*(_4717_token))))._field_Row);
	};
	return _486_log;;
}



inline jule::Bool _1c670473c_impIsLookupable(jule::Ptr<_1c66d63cd_ImportInfo>* _6121_i, jule::Str* _6138_ident) {
	if ((*((*(_6121_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_6121_i))))._field_ImportAll))) {
		if (((*((*(_6121_i))))._field_Selected.len() > 0LL)) {
			return _1c66d8c93_existIdent((*(_6121_i)).ptr(), (*(_6138_ident)));;
		};
	};
	return (*((*(_6121_i))))._field_ImportAll;;
}



inline void _1c6704a6c_appendRetVars(jule::Slice<jule::Ptr<_1c672acb3_Var>>* _7323_dest, jule::Ptr<_1c666d4ec_FnIns>* _7342_f) {
	if ((_1c666a9c2_IsVoid((*((*(_7342_f))))._field_Decl.ptr()) || ((*((*(_7342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _786_types = _1c666e72e_Types((*(_7342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_7342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6cdd772:;
		if (it != expr_end) {
			jule::I64 _797_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _7914_ident = *it;
			{
				if ((_1c6621c0e_IsIgnoreIdent((*(_7914_ident))._field_Kind) || _1c6621ec8_IsAnonIdent((*_7914_ident.alloc)._field_Kind))) {
					goto _iter_next_1d6cdd772;
				};
				{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*(_7323_dest)); __jule_push_dest.push(jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=(*((*(_7342_f))))._field_Scope, ._field_Token=_7914_ident, ._field_Ident=(*_7914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=_786_types[_797_i]}), ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=_797_i, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)})); };
			}
			_iter_next_1d6cdd772:;
			++it;
			_797_i++;
			goto _iter_begin_1d6cdd772;
		}
		_iter_end_1d6cdd772:;
	};
	if ((((*(*((*((*(_7342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_7323_dest)).len() == 1LL))) {
		(*((*(_7323_dest))[((*(_7323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1c6704d58_appendParamVars(jule::Slice<jule::Ptr<_1c672acb3_Var>>* _10325_dest, jule::Ptr<_1c666d4ec_FnIns>* _10344_f) {
	if (((*((*(_10344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_10344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6ce30c3:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _10814_p = *it;
			{
				if ((_1c6621c0e_IsIgnoreIdent((*((*(_10814_p))._field_Decl))._field_Ident) || _1c6621ec8_IsAnonIdent((*(*(_10814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1d6ce30c3;
				};
				jule::Ptr<_1c672acb3_Var> _1137_v = jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=(*((*(_10344_f))))._field_Scope, ._field_Token=(*(*(_10814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10814_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
				{
					
					if (_1c6669196_IsSelf((*(_10814_p))._field_Decl)) {
						_case_begin_1d6cebd13:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_10344_f))))._field_Owner, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)});
							(*_1137_v.alloc)._field_Reference=(!(_1c666942c_IsRef((*(_10814_p))._field_Decl)));
							if (_1c666942c_IsRef((*(_10814_p))._field_Decl)) {
								((*(_1137_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1137_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1137_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_10814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1d6ceb9e4:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8ee8_Slc>(_1c67c8ee8_Slc{._field_Elem=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=(*((*_10814_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10814_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1d6ceb97d:;
						{
							(*((*(_1137_v))._field_Kind))._field_Kind=(*_10814_p.alloc)._field_Kind;
						}
					}
					_match_end_1d6ceb84b:;
				};
				{ jule::Slice<jule::Ptr<_1c672acb3_Var>> &__jule_push_dest = (*(_10325_dest)); __jule_push_dest.push(_1137_v); };
			}
			_iter_next_1d6ce30c3:;
			++it;
			goto _iter_begin_1d6ce30c3;
		}
		_iter_end_1d6ce30c3:;
	};
}



inline void _1c6705144_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _16334_dest, jule::Ptr<_1c666d4ec_FnIns>* _16359_f) {
	jule::I64 _1646_size = (*((*(_16359_f))))._field_Generics.len();;
	if (((*((*((*(_16359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1646_size+=(*(*((*((*(_16359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1646_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_16359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d0526c:;
		if (it != expr_end) {
			jule::I64 _1737_i = it - expr->begin();
			jule::Ptr<_1c67b9eea_InsGeneric> _17314_g = *it;
			{
				if ((_17314_g == nullptr)) {
					goto _iter_next_1d6d0526c;
				};
				jule::Ptr<_1c6641b0d_GenericDecl> _1777_decl = (*(*((*(_16359_f))))._field_Decl.alloc)._field_Generics[_1737_i];;
				{ jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1777_decl.alloc)._field_Token, ._field_Ident=(*(_1777_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_17314_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1d6d0526c:;
			++it;
			_1737_i++;
			goto _iter_begin_1d6d0526c;
		}
		_iter_end_1d6d0526c:;
	};
	if (((*(*((*(_16359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1c665865d_StructIns> _1897_owner = (*((*(_16359_f))))._field_Owner;;
		{
			auto expr = &((*_1897_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1d6d06b0e:;
			if (it != expr_end) {
				jule::I64 _1908_i = it - expr->begin();
				jule::Ptr<_1c67b9eea_InsGeneric> _19015_g = *it;
				{
					jule::Ptr<_1c6641b0d_GenericDecl> _1918_decl = (*((*(_1897_owner))._field_Decl))._field_Generics[_1908_i];;
					{ jule::Slice<jule::Ptr<_1c67baade_TypeAlias>> &__jule_push_dest = (*(_16334_dest)); __jule_push_dest.push(jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=(*(*((*(_16359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1918_decl.alloc)._field_Token, ._field_Ident=(*(_1918_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_19015_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1d6d06b0e:;
				++it;
				_1908_i++;
				goto _iter_begin_1d6d06b0e;
			}
			_iter_end_1d6d06b0e:;
		};
	};
}



inline jule::Ptr<_1c678348b_SymbolTable> _1c67054b8_findFile(jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>* _20418_files, jule::Ptr<_1c6624aad_File>* _20442_handler) {
	{
		auto expr = _20418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d0abe0:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _20514_fl = *it;
			{
				if (((*(_20514_fl))._field_File == (*(_20442_handler)))) {
					return _20514_fl;;
				};
			}
			_iter_next_1d6d0abe0:;
			++it;
			goto _iter_begin_1d6d0abe0;
		}
		_iter_end_1d6d0abe0:;
	};
	return nullptr;;
}



inline void _1c670596e_pushSuggestion(_20806e73a_Log* _21330_log, jule::Str _21341_fmt, jule::Slice<jule::Any> _21354_args) {
	(*(_21330_log))._field_Suggestion=_20806eb9c_Logf(_21341_fmt, _21354_args);
}



inline void _1c6729047_pushImplemented(jule::Ptr<_1c667de9c_Trait> _300524_t, jule::Ptr<_1c6655803_Struct>* _300540_d) {
	_julec_label_1d6d0a7b1:;
	{
		
		if (((*(_300524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1d6d0d918:;
			{
				{
					auto expr = &((*_300524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6d0e375:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _300910_s = *it;
						{
							if ((_300910_s == (*(_300540_d)))) {
								goto _match_end_1d6d0cd9b;
							};
						}
						_iter_next_1d6d0e375:;
						++it;
						goto _iter_begin_1d6d0e375;
					}
					_iter_end_1d6d0e375:;
				};
				goto _case_begin_1d6d0ce56;
			}
		}
		else {
			_case_begin_1d6d0ce56:;
			{
				(*(_300524_t))._field_Implemented=jule::append((*_300524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6655803_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_300540_d)); __jule_collection; }));
			}
		}
		_match_end_1d6d0cd9b:;
	};
	{
		auto expr = &((*(_300524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d0ec8d:;
		if (it != expr_end) {
			jule::Ptr<_1c67c40e2_TypeSymbol> _301814_i = *it;
			{
				_1c6729047_pushImplemented(_1c67c0891_Trait((*(_301814_i))._field_Kind.ptr()), _300540_d);
			}
			_iter_next_1d6d0ec8d:;
			++it;
			goto _iter_begin_1d6d0ec8d;
		}
		_iter_end_1d6d0ec8d:;
	};
}



inline void _1c6729333_pushImplements(jule::Ptr<_1c6655803_Struct>* _302324_s, jule::Ptr<_1c667de9c_Trait> _302340_t) {
	_julec_label_1d6d0e023:;
	{
		
		if (((*((*(_302324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1d6d114a9:;
			{
				{
					auto expr = &((*((*(_302324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d6d11e16:;
					if (it != expr_end) {
						jule::Ptr<_1c667de9c_Trait> _302710_b = *it;
						{
							if ((_302710_b == _302340_t)) {
								goto _match_end_1d6d1093c;
							};
						}
						_iter_next_1d6d11e16:;
						++it;
						goto _iter_begin_1d6d11e16;
					}
					_iter_end_1d6d11e16:;
				};
				goto _case_begin_1d6d109e7;
			}
		}
		else {
			_case_begin_1d6d109e7:;
			{
				{ jule::Slice<jule::Ptr<_1c667de9c_Trait>> &__jule_push_dest = (*((*(_302324_s))))._field_Implements; __jule_push_dest.push(_302340_t); };
			}
		}
		_match_end_1d6d1093c:;
	};
	{
		auto expr = &((*(_302340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6d1282e:;
		if (it != expr_end) {
			jule::Ptr<_1c67c40e2_TypeSymbol> _303614_i = *it;
			{
				_1c6729333_pushImplements(_302324_s, _1c67c0891_Trait((*(_303614_i))._field_Kind.ptr()));
			}
			_iter_next_1d6d1282e:;
			++it;
			goto _iter_begin_1d6d1282e;
		}
		_iter_end_1d6d1282e:;
	};
}



inline void _1c6729784_pushRuntimeToStr(jule::Ptr<_1c670684e_sema>* _304126_s, jule::Ptr<_1c67bb8d1_TypeKind>* _304141_t, jule::Ptr<_1c661e327_Token>* _304160_token, jule::Ptr<_1c6671687_ReferenceStack> _30426_refers) {
	if ((((*((*((*(_304126_s))))._field_meta))._field_runtime == nullptr) || _1c67bca14_IsNil((*(_304141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _30466_f = _1c666ba28_instanceForce(_1c6224746_runtimeFindFn(&((*(*((*(_304126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_30466_f))._field_Generics=jule::append((*_30466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c67b9eea_InsGeneric>(_1c67b9eea_InsGeneric{._field_Kind=(*(_304141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>(nullptr)}); __jule_collection; }));
	jule::Bool _30482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6722d32_checkGenericFn((*(_304126_s)), &(_30466_f), _304160_token);
		_30482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_30482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:3050:3"));;
	};
	if ((_30426_refers != nullptr)) {
		_1c667249b_Push(_30426_refers, jule::Any(_30466_f, &__jule_any_type7));
	};
}



inline jule::Bool _1c676deb0_traitHasReferenceReceiver(jule::Ptr<_1c667de9c_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d70ce2c1:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1d70ce2c1;
				};
				jule::Ptr<_1c6668a47_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1c666942c_IsRef(_353_p.ptr()) && _1c6669196_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1d70ce2c1:;
			++it;
			goto _iter_begin_1d70ce2c1;
		}
		_iter_end_1d70ce2c1:;
	};
	return false;;
}



inline jule::Bool _1c676e345_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1c6788b56_Data>* _4333_d) {
	jule::Str _442_value = _1dd6e97c5_FmtFloat(_1dd722545_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1dd7151e7_CheckBitFloat(_442_value, _1dd713c51_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1c676e6b9_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1c6788b56_Data>* _4830_d) {
	jule::F64 _492_min = _1dd71a3d9_Min(_4818_kind);;
	jule::F64 _502_max = _1dd71a670_Max(_4818_kind);;
	{
		
		if (_1dd72438d_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1d70d2d52:;
			{
				jule::F64 _533_x = _1dd721c92_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dd6c0526_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1dd723ada_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1d70d2db8:;
			{
				jule::F64 _603_x = _1dd722545_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1dd723854_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1d70d2e40:;
			{
				jule::F64 _653_x = _1dd722545_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1d70d2c31:;
	};
	return false;;
}



inline jule::Bool _1c676ea82_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1c6788b56_Data>* _7132_d) {
	jule::F64 _722_max = _1dd71a670_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && (_7120_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1c674c774_IsAscii(static_cast<jule::I32>(_1dd721258_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1dd72438d_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1d70d8ac2:;
			{
				jule::F64 _793_x = _1dd721c92_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dd6c0526_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1dd723ada_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1d70d8b38:;
			{
				jule::F64 _893_x = _1dd722545_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1dd723854_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1d70d8b9e:;
			{
				jule::F64 _943_x = _1dd722545_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1d70d8176:;
	};
	return false;;
}



inline jule::Bool _1c676ee06_intAssignable(jule::Str _10018_kind, jule::Ptr<_1c6788b56_Data>* _10030_d) {
	{
		
		if (_1dd71d695_IsSigInt(_10018_kind)) {
			_case_begin_1d70dd6ed:;
			{
				return _1c676e6b9_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1dd71d9a3_IsUnsigInt(_10018_kind)) {
			_case_begin_1d70dd786:;
			{
				return _1c676ea82_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1d70dd225:;
			{
				return false;;
			}
		}
		_match_end_1d70dd148:;
	};
}



inline void _1c677b3eb_checkMutRiskOfStructLit(jule::Ptr<_1c670684e_sema>* _92133_s, jule::Ptr<_1c665d7b7_StructLitExprModel>* _92144_m) {
	{
		auto expr = &((*((*(_92144_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d70de864:;
		if (it != expr_end) {
			jule::Ptr<_1c665d421_StructArgExprModel> *_9229_arg = it;
			{
				if ((*((*((*((*(_9229_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1d70de864;
				};
				if (((!((*((*(*(_9229_arg)).alloc)._field_Expr))._field_Mutable)) && _1c67bd2b7_Mutable((*(*((*(_9229_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1c6709753_pushErr((*(_92133_s)).ptr(), (*(*(_9229_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*((*(_9229_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1d70de864:;
			++it;
			goto _iter_begin_1d70de864;
		}
		_iter_end_1d70de864:;
	};
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c6782237_lenKind(void) {
	return _1c68a2698_primInt;;
}



inline jule::Bool _1c6782589_isGoodValueToInfer(jule::Ptr<_1c6788b56_Data>* _142624_d) {
	return (!(_1c6789074_IsNil((*(_142624_d)).ptr())));;
}



inline jule::Ptr<_1c6633d20_Directive> _1c67b3158_findDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _440323_directives, jule::Str _440354_d) {
	{
		auto expr = _440323_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7252730:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _440414_dr = *it;
			{
				if (((*((*(_440414_dr))._field_Tag))._field_Kind == _440354_d)) {
					return _440414_dr;;
				};
			}
			_iter_next_1d7252730:;
			++it;
			goto _iter_begin_1d7252730;
		}
		_iter_end_1d7252730:;
	};
	return nullptr;;
}



inline jule::Any _1c67b3521_findBuiltinsImport(jule::Str* _441224_ident, jule::Ptr<_1c66d63cd_ImportInfo> _441236_imp) {
	return _1c68a5ca6_findPackageBuiltinDef(&((*(_441236_imp))._field_LinkPath), _441224_ident);;
}



inline void _1c67b3752_fitBitsize(jule::Ptr<_1c6788b56_Data>* _442120_d) {
	jule::Ptr<_1c67c49e9_Prim> _44226_prim = _1c67be087_Prim((*((*(_442120_d))))._field_Kind.ptr());;
	jule::I64 _44232_z = _1dd713c51_BitsizeOf(_1c67c4d6d_Str(_44226_prim.ptr()));;
	{
		
		if (_1dd723854_IsI64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1d7255c72:;
			{
				jule::I64 _44263_k = _1dd71577a_BitsizeOfInt(_1dd721258_ReadI64((*((*(_442120_d))))._field_Constant));;
				if (((_44263_k > _44232_z) || _1dd71d9a3_IsUnsigInt((*_44226_prim.alloc)._field_Kind))) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1dd714092_IntFromBits(_44263_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1c68a49ec_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dd723ada_IsU64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1d7255cd8:;
			{
				jule::I64 _44323_k = _1dd715a44_BitsizeOfUint(_1dd7214de_ReadU64((*((*(_442120_d))))._field_Constant));;
				if (((_44323_k > _44232_z) || _1dd71d695_IsSigInt((*_44226_prim.alloc)._field_Kind))) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1dd714328_UintFromBits(_44323_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1c68a49ec_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dd72438d_IsF64((*((*(_442120_d))))._field_Constant.ptr())) {
			_case_begin_1d7255d60:;
			{
				if ((_44232_z == 64LLU)) {
					return;;
				};
				jule::I64 _44423_k = _1dd7154b1_BitsizeOfFloat(_1dd721c92_ReadF64((*((*(_442120_d))))._field_Constant));;
				if ((_44423_k > _44232_z)) {
					(*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind=_1dd7145e2_FloatFromBits(_44423_k);
					(*((*(_442120_d))))._field_Kind=(*((*(_1c68a49ec_findBuiltinTypeAlias((*(*((*(_442120_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1d7255b51:;
	};
}



inline void _1c67b3a82_makeStructLitAlloc(jule::Ptr<_1c6788b56_Data>* _445028_d, jule::Ptr<_1c665d7b7_StructLitExprModel>* _445043_lit) {
	(*((*(_445028_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_445043_lit))))._field_Strct, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)});
	(*((*(_445028_d))))._field_Model=jule::Any(jule::new_ptr<_1c665dab4_AllocStructLitExprModel>(_1c665dab4_AllocStructLitExprModel{._field_Lit=(*(_445043_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1c672acb3_Var> _1c67b3e06_buildErrorVar(jule::Ptr<_1c66b35b9_Scope>* _446123_s, jule::Ptr<_1c663c961_FnCallExpr>* _446139_fc) {
	return jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=(*(_446123_s)), ._field_Token=(*((*(_446139_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_Kind, ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
}



inline jule::Any _1c67b427a_findBuiltinsSema(jule::Str* _447622_ident, jule::Ptr<_1c670684e_sema> _447638_s) {
	{
		auto expr = &((*((*(_447638_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7265105:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _447714_imp = *it;
			{
				if (((*(_447714_imp))._field_ImportAll || _1c66d8c93_existIdent(_447714_imp, (*(_447622_ident))))) {
					jule::Any _44798_def = _1c67b3521_findBuiltinsImport(_447622_ident, _447714_imp);;
					if ((_44798_def != nullptr)) {
						return _44798_def;;
					};
				};
			}
			_iter_next_1d7265105:;
			++it;
			goto _iter_begin_1d7265105;
		}
		_iter_end_1d7265105:;
	};
	jule::Str _44876_ppath = _1c6625295_Dir((*(*(_447638_s))._field_file.alloc)._field_File.ptr());;
	if (_208769198_HasPrefix(_44876_ppath, _208821eed_PathStdlib)) {
		(_44876_ppath).mut_slice(_208821eed_PathStdlib.len());;
		_44876_ppath=(jule::Str::lit("std", 3) + _20876ea3e_Replace(_44876_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1c68a5ca6_findPackageBuiltinDef(&(_44876_ppath), _447622_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c67b4544_isOkForShifting(jule::Ptr<_1c6788b56_Data>* _450125_d) {
	if (_1c6789591_IsConst((*(_450125_d)).ptr())) {
		{
			
			if (_1dd723854_IsI64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1d72685ae:;
				{
					return (_1dd721258_ReadI64((*((*(_450125_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1dd723ada_IsU64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1d7268658:;
				{
					return true;;
				}
			}
			else if (_1dd72438d_IsF64((*((*(_450125_d))))._field_Constant.ptr())) {
				_case_begin_1d72686d0:;
				{
					return (_1dd721c92_ReadF64((*((*(_450125_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1d7268526:;
				{
					return false;;
				}
			}
			_match_end_1d7268449:;
		};
	};
	jule::Ptr<_1c67c49e9_Prim> _45142_prim = _1c67be087_Prim((*((*(_450125_d))))._field_Kind.ptr());;
	return ((_45142_prim != nullptr) && _1dd71dc6c_IsInt(_1c67c4d6d_Str(_45142_prim)));;
}



inline jule::Bool _1c67b491d_isInstancedStruct(jule::Ptr<_1c665865d_StructIns> _451822_s) {
	return ((*((*(_451822_s))._field_Decl))._field_Generics.len() == (*_451822_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1c67b4c1a_isPtrArithmeticCompatible(jule::Ptr<_1c6788b56_Data>* _452235_l, jule::Ptr<_1c6788b56_Data>* _452250_r) {
	jule::Ptr<_1c67cbcdc_Ptr> _45232_ptr = _1c67be5a4_Ptr((*((*(_452250_r))))._field_Kind.ptr());;
	if ((_45232_ptr != nullptr)) {
		return _1c67bc11d_Equal((*(_1c67be5a4_Ptr((*((*(_452235_l))))._field_Kind)))._field_Elem, (*_45232_ptr.alloc)._field_Elem);;
	};
	if ((_1c6789591_IsConst((*(_452250_r)).ptr()) && (*((*(_452250_r))))._field_untyped)) {
		return (_1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _452250_r) || _1c676ee06_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _452250_r));;
	};
	_1c67703e0_typeCompatibilityChecker _45326_tcc = _1c67703e0_typeCompatibilityChecker{._field_s=jule::Ptr<_1c670684e_sema>(nullptr), ._field_dest=_1c68a2698_primInt, ._field_src=(*((*(_452250_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1c661e327_Token>(nullptr)};;
	if (_1c6771ad9_check(&_45326_tcc)) {
		return true;;
	};
	_45326_tcc._field_dest=_1c68a22d0_primUint;
	return _1c6771ad9_check(&_45326_tcc);;
}



inline void _1c67b5226_applyRuntimeToStr(jule::Ptr<_1c670684e_sema>* _454327_s, jule::Ptr<_1c67bb8d1_TypeKind>* _454342_from, jule::Ptr<_1c67bb8d1_TypeKind>* _454364_to, jule::Ptr<_1c661e327_Token>* _45447_token, jule::Ptr<_1c6671687_ReferenceStack> _454426_refers) {
	jule::Ptr<_1c67c49e9_Prim> _45452_prim = _1c67be087_Prim((*(_454364_to)).ptr());;
	if ((_45452_prim != nullptr)) {
		if (_1c67c824a_IsAny(_45452_prim)) {
			_1c6729784_pushRuntimeToStr(_454327_s, _454342_from, _45447_token, _454426_refers);
		};
		return;;
	};
	if ((_1c67beac1_TypeEnum((*(_454364_to)).ptr()) != nullptr)) {
		_1c6729784_pushRuntimeToStr(_454327_s, _454342_from, _45447_token, _454426_refers);
		return;;
	};
}



inline void _1c67b5732_applyCastKindModel(jule::Ptr<_1c670684e_sema>* _455828_s, jule::Ptr<_1c6788b56_Data>* _455843_d, jule::Ptr<_1c67bb8d1_TypeKind>* _455858_t, jule::Ptr<_1c661e327_Token>* _45597_token, jule::Ptr<_1c6671687_ReferenceStack> _455926_refers) {
	_1c67b5226_applyRuntimeToStr(_455828_s, &((*((*(_455843_d))))._field_Kind), _455858_t, _45597_token, _455926_refers);
	(*((*(_455843_d))))._field_Model=jule::Any(jule::new_ptr<_1c665e147_CastingExprModel>(_1c665e147_CastingExprModel{._field_Token=(*(_45597_token)), ._field_Expr=jule::new_ptr<_1c6788b56_Data>((*((*(_455843_d))))), ._field_Kind=(*(_455858_t)), ._field_ExprKind=(*((*(_455843_d))))._field_Kind}), &__jule_any_type96);
}



inline void _1c67b5c3d_applyCastKind(jule::Ptr<_1c670684e_sema>* _456923_s, jule::Ptr<_1c6788b56_Data>* _456938_d, jule::Ptr<_1c67bb8d1_TypeKind>* _456953_t, jule::Ptr<_1c661e327_Token>* _45707_token, jule::Ptr<_1c6671687_ReferenceStack> _457026_refers) {
	_1c67b5732_applyCastKindModel(_456923_s, _456938_d, _456953_t, _45707_token, _457026_refers);
	(*((*(_456938_d))))._field_Kind=(*(_456953_t));
}



inline jule::Ptr<_1c6788b56_Data> _1c67b5e4c_buildVoidData(void) {
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a1411_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Str _1c67b6436_checkDataForIntegerIndexing(jule::Ptr<_1c670684e_sema>* _458137_s, jule::Ptr<_1c6788b56_Data>* _458152_d, jule::Ptr<_1c661e327_Token>* _45827_token, jule::Ptr<_1c6671687_ReferenceStack> _458226_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_458152_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1c67be087_Prim((*((*(_458152_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1d7279878:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1dd71dc6c_IsInt(_1c67c4d6d_Str(_1c67be087_Prim((*((*(_458152_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1d72798de:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1c6789591_IsConst((*(_458152_d)).ptr())) {
			_case_begin_1d7279955:;
			{
				if ((_1dd722545_AsF64((*((*(_458152_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c67be087_Prim((*((*(_458152_d))))._field_Kind.ptr()) == nullptr) || _1c6789591_IsConst((*(_458152_d)).ptr()) || (_1dd713987_RealKindOf(_1c67c4d6d_Str(_1c67be087_Prim((*((*(_458152_d))))._field_Kind).ptr())) != _1dd713987_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1d72799bb:;
			{
				_1c67b5c3d_applyCastKind(_458137_s, _458152_d, &(_1c68a2698_primInt), _45827_token, _458226_refers);
			}
		}
		_match_end_1d727945a:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1c67b6942_applyCastModelByEnum(jule::Ptr<_1c670684e_sema>* _460730_s, jule::Ptr<_1c6788b56_Data>* _460745_d, jule::Ptr<_1c66816a8_Enum> _460759_e, jule::Ptr<_1c661e327_Token>* _46087_token, jule::Ptr<_1c6671687_ReferenceStack> _460826_refers) {
	if ((_460759_e == nullptr)) {
		return;;
	};
	_1c67b5732_applyCastKindModel(_460730_s, _460745_d, &((*((*(_460759_e))._field_Kind))._field_Kind), _46087_token, _460826_refers);
}



inline void _1c67b6e5e_castConstByType(jule::Str* _461521_t, jule::Ptr<_1c6788b56_Data>* _461534_d) {
	{
		
		if (_1dd71d695_IsSigInt((*(_461521_t)))) {
			_case_begin_1d728074c:;
			{
				{
					auto _match_expr{ _1dd713c51_BitsizeOf(_1dd713987_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d7281330:;
						{
							_1dd7227ed_SetI64((*((*(_461534_d))))._field_Constant.ptr(), _1dd722028_AsI64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d72813a7:;
						{
							_1dd7227ed_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1dd722028_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1d728141d:;
						{
							_1dd7227ed_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1dd722028_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1d7281484:;
						{
							_1dd7227ed_SetI64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1dd722028_AsI64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1d7281000:;
				};
			}
		}
		else if (_1dd71d9a3_IsUnsigInt((*(_461521_t)))) {
			_case_begin_1d72807e6:;
			{
				{
					auto _match_expr{ _1dd713c51_BitsizeOf(_1dd713987_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d7280c9c:;
						{
							_1dd722aa6_SetU64((*((*(_461534_d))))._field_Constant.ptr(), _1dd7222ae_AsU64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d7285587:;
						{
							_1dd722aa6_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1dd7222ae_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1d72855ed:;
						{
							_1dd722aa6_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1dd7222ae_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1d7285664:;
						{
							_1dd722aa6_SetU64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1dd7222ae_AsU64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1d7285521:;
				};
			}
		}
		else if (_1dd71e0ad_IsFloat((*(_461521_t)))) {
			_case_begin_1d728085c:;
			{
				{
					auto _match_expr{ _1dd713c51_BitsizeOf(_1dd713987_RealKindOf((*(_461521_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1d7281781:;
						{
							_1dd7233c0_SetF64((*((*(_461534_d))))._field_Constant.ptr(), _1dd722545_AsF64((*((*(_461534_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1d728969b:;
						{
							_1dd7233c0_SetF64((*((*(_461534_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1dd722545_AsF64((*((*(_461534_d))))._field_Constant))));
						}
					}
					_match_end_1d7289613:;
				};
			}
		}
		_match_end_1d72805e8:;
	};
}



inline void _1c67b713a_updateModelToGenericIns(jule::Any* _464933_m, jule::Ptr<_1c666d4ec_FnIns>* _464952_f) {
	{
		auto &_match_expr{ (*(_464933_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1d7289965:;
			{
				(*(_464933_m))=jule::Any((*(_464952_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d7285a0a:;
			{
				(*((*(_464933_m)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_464952_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1d72899cb:;
			{
				(*((*(_464933_m)).cast_ptr<_1c6662931_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_464952_f));
			}
		}
		_match_end_1d7285ad7:;
	};
}



inline jule::Bool _1c67b74ae_pushSubIdentFromExpr(jule::Any _466029_expr, jule::Ptr<_1c66352c7_SubIdentTypeDecl>* _466050_t) {
	{
		auto &_match_expr{ _466029_expr };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d7290916:;
			{
				jule::Ptr<_1c663a552_IdentExpr> _46637_e = _466029_expr.unsafe_cast_ptr<_1c663a552_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>> &__jule_push_dest = (*((*(_466050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*(_46637_e))._field_Token, ._field_Ident=(*_46637_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1d728cc43:;
			{
				jule::Ptr<_1c663bd4a_SubIdentExpr> _46697_e = _466029_expr.unsafe_cast_ptr<_1c663bd4a_SubIdentExpr>();;
				if ((!(_1c67b74ae_pushSubIdentFromExpr((*((*(_46697_e))._field_Expr))._field_Kind, _466050_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1c663500d_IdentTypeDecl>> &__jule_push_dest = (*((*(_466050_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c663500d_IdentTypeDecl>(_1c663500d_IdentTypeDecl{._field_Token=(*_46697_e.alloc)._field_Ident, ._field_Ident=(*((*_46697_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c6634903_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1d728cbcc:;
			{
				return false;;
			}
		}
		_match_end_1d728cb66:;
	};
	return true;;
}



inline jule::Str _1c67b7778_constoa(jule::Ptr<_1dd71e850_Const>* _468313_c) {
	{
		
		if (_1dd723854_IsI64((*(_468313_c)).ptr())) {
			_case_begin_1d7296972:;
			{
				return _1dd711314_FmtInt(_1dd721258_ReadI64((*(_468313_c)).ptr()), 10LL);;
			}
		}
		else if (_1dd723ada_IsU64((*(_468313_c)).ptr())) {
			_case_begin_1d7296a0a:;
			{
				return _1dd710e4b_FmtUint(_1dd7214de_ReadU64((*(_468313_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1d72954dc:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d728ed11:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c67b7d1c_evalEnumStatic(jule::Ptr<_1c670684e_sema>* _469424_s, jule::Ptr<_1c66816a8_Enum>* _469439_enm, jule::Ptr<_1c6680b3b_EnumItem>* _469456_item, jule::Ptr<_1c661e327_Token>* _46957_token, jule::Ptr<_1c6671687_ReferenceStack> _469526_refers) {
	jule::Ptr<_1c6788b56_Data> _46966_d = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_469439_enm)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if (((*(_469456_item)) != nullptr)) {
		(*(_46966_d))._field_Constant=jule::new_ptr<_1dd71e850_Const>((*(*((*((*((*(_469456_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46966_d.alloc)._field_Model=jule::Any((*_46966_d.alloc)._field_Constant, &__jule_any_type20);
		_1c67b6942_applyCastModelByEnum(_469424_s, &(_46966_d), (*(_469439_enm)), _46957_token, _469526_refers);
	};
	return _46966_d;;
}



inline jule::Ptr<_1c665d7b7_StructLitExprModel> _1c67b80d6_isLitBased(jule::Any* _471220_m) {
	{
		auto &_match_expr{ (*(_471220_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d729b9bb:;
			{
				return (*(_471220_m)).cast_ptr<_1c665d7b7_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1d729ba32:;
			{
				return (*((*(_471220_m)).cast_ptr<_1c665dab4_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d729ba98:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _47197_ssi = (*(_471220_m)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1c67b80d6_isLitBased(&((*((*(_47197_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d729bb0e:;
			{
				jule::Ptr<_1c665e147_CastingExprModel> _47227_c = (*(_471220_m)).cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96);;
				return _1c67b80d6_isLitBased(&((*((*(_47227_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1d729b56a:;
			{
				return nullptr;;
			}
		}
		_match_end_1d729b504:;
	};
}



inline void _1c67b83c2_makeImplicitDeref(jule::Ptr<_1c6788b56_Data>* _472927_d, jule::Ptr<_1c661e327_Token> _472941_baseToken) {
	jule::Ptr<_1c665cde3_UnaryExprModel> _47306_unary = jule::new_ptr<_1c665cde3_UnaryExprModel>(_1c665cde3_UnaryExprModel{._field_Expr=jule::new_ptr<_1c6788b56_Data>((*((*(_472927_d))))), ._field_Op=jule::new_ptr<_1c661e327_Token>((*(_472941_baseToken)))});;
	(*((*(_47306_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_47306_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_472927_d))))._field_Model=jule::Any(_47306_unary, &__jule_any_type113);
}



inline void _1d73b9b0b_updateRefer(jule::Ptr<_1c6671687_ReferenceStack> _474023_ref, jule::Ptr<_1c666d4ec_FnIns>* _474046_old, jule::Ptr<_1c666d4ec_FnIns>* _474059_new) {
	{
		auto expr = &((*(_474023_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d73bb547:;
		if (it != expr_end) {
			jule::I64 _47416_i = it - expr->begin();
			jule::Any _47419_sym = *it;
			{
				if ((jule::Any((*(_474046_old)), &__jule_any_type7) == _47419_sym)) {
					(*(_474023_ref))._field_buffer[_47416_i]=jule::Any((*(_474059_new)), &__jule_any_type7);
				};
			}
			_iter_next_1d73bb547:;
			++it;
			_47416_i++;
			goto _iter_begin_1d73bb547;
		}
		_iter_end_1d73bb547:;
	};
}



inline void _1c67b8a54_makeVariadic(jule::Ptr<_1c6788b56_Data>* _474822_d, jule::Ptr<_1c67bb8d1_TypeKind> _474836_elem) {
	(*((*(_474822_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=(*_474836_elem.alloc)._field_BindIdent, ._field_Generic=(*(_474836_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_474836_elem.alloc)._field_Kind});
}



inline jule::Bool _1c67b8e83_isVarCaptured(jule::Ptr<_1c66ba857_scopeChecker> _476218_r, jule::Ptr<_1c66ba857_scopeChecker> _476240_s, jule::Ptr<_1c672acb3_Var> _476258_v) {
	if (((*(_476258_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_476240_s))._field_scope == (*_476258_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_476240_s.alloc)._field_parent == nullptr) || (_476240_s == _476218_r))) {
				goto _iter_end_1d72a5bc3;
			};
			_476240_s=(*_476240_s.alloc)._field_parent;
		}
	_iter_next_1d72a5bc3:;
	}
	_iter_end_1d72a5bc3:;;
	return true;;
}



inline jule::Bool _1c67d7a84_kindUsesGenerics(jule::Ptr<_1c67bb8d1_TypeKind>* _175726_k, jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>* _175741_generics) {
	{
		auto expr = _175741_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d643b189:;
		if (it != expr_end) {
			jule::Ptr<_1c6641b0d_GenericDecl> *_17589_g = it;
			{
				if (static__1c67d7688_exist(&((*((*(_17589_g))))._field_Ident), _175726_k)) {
					return true;;
				};
			}
			_iter_next_1d643b189:;
			++it;
			goto _iter_begin_1d643b189;
		}
		_iter_end_1d643b189:;
	};
	return false;;
}



inline jule::Bool _1c67d7e4c_hasDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _176722_directives, jule::Str _176753_tag) {
	{
		auto expr = _176722_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d643b970:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _176814_dr = *it;
			{
				if (((*((*(_176814_dr))._field_Tag))._field_Kind == _176753_tag)) {
					return true;;
				};
			}
			_iter_next_1d643b970:;
			++it;
			goto _iter_begin_1d643b970;
		}
		_iter_end_1d643b970:;
	};
	return false;;
}



inline jule::Bool _1c67d8216_canGetPtr(jule::Ptr<_1c6788b56_Data>* _177619_d) {
	{
		
		if ((!((*((*(_177619_d))))._field_Lvalue)) || _1c6789591_IsConst((*(_177619_d)).ptr())) {
			_case_begin_1d643d39a:;
			{
				return false;;
			}
		}
		else if ((_1c67c0374_Fn((*((*(_177619_d))))._field_Kind.ptr()) != nullptr) || (_1c67be83a_Enum((*((*(_177619_d))))._field_Kind) != nullptr)) {
			_case_begin_1d643d7a7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1d643c6da:;
			{
				return true;;
			}
		}
		_match_end_1d643caa3:;
	};
}



inline jule::Bool _1c67d8557_isValidForSptrType(jule::Ptr<_1c67bb8d1_TypeKind>* _178828_t) {
	jule::Ptr<_1c665865d_StructIns> _17896_s = _1c67c060a_Struct((*(_178828_t)).ptr());;
	if ((((_17896_s != nullptr) && ((*_17896_s.alloc)._field_Decl != nullptr)) && (*(*(_17896_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c67d87dd_isValidForRef(jule::Ptr<_1c67bb8d1_TypeKind>* _179723_t) {
	return (_1c67c0374_Fn((*(_179723_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c67d8aa7_isBuiltinStrConvertable(jule::Ptr<_1c67bb8d1_TypeKind>* _180033_t) {
	return ((((!(_1c67bcc9a_Void((*(_180033_t)).ptr()))) && (_1c67c0374_Fn((*(_180033_t)).ptr()) == nullptr)) && (_1c67c0dad_Tup((*(_180033_t)).ptr()) == nullptr)) && (!(_1c67c1144_comptime((*(_180033_t)).ptr()))));;
}



inline jule::Str _1c67d8d71_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _180427_tokens) {
	if ((((*(_180427_tokens)).len() == 1LL) && ((*((*(_180427_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _18086_n = 0LL;;
	{
		auto expr = _180427_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d644367a:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_18099_token = it;
			{
				_18086_n+=(*((*(_18099_token))))._field_Kind.len();
				_18086_n+=2LL;
			}
			_iter_next_1d644367a:;
			++it;
			goto _iter_begin_1d644367a;
		}
		_iter_end_1d644367a:;
	};
	_20759e353_StrBuilder _18136_s = static__2075a7c41_New(_18086_n);;
	{
		auto expr = _180427_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6441e81:;
		if (it != expr_end) {
			jule::I64 _18146_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> *_18149_token = it;
			{
				_2075a814d_WriteStr(&_18136_s, (*((*(_18149_token))))._field_Kind);
				if ((((*(_180427_tokens)).len() - _18146_i) > 1LL)) {
					_2075a814d_WriteStr(&_18136_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1d6441e81:;
			++it;
			_18146_i++;
			goto _iter_begin_1d6441e81;
		}
		_iter_end_1d6441e81:;
	};
	return _2075a8945_Str(&_18136_s);;
}



inline jule::Ptr<_1c67c49e9_Prim> _1c67d924a_buildPrimType(jule::Str _182318_kind) {
	return jule::new_ptr<_1c67c49e9_Prim>(_1c67c49e9_Prim{._field_Kind=_182318_kind});;
}



inline void _1c67d9998_applyImplicitCast(jule::Ptr<_1c670684e_sema>* _185127_s, jule::Ptr<_1c67bb8d1_TypeKind>* _185142_dest, jule::Ptr<_1c6788b56_Data>* _185164_d, jule::Ptr<_1c661e327_Token>* _18527_token, jule::Ptr<_1c6671687_ReferenceStack> _185226_refers) {
	if (_1c67bca14_IsNil((*((*(_185164_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c67c49e9_Prim> _18562_destPrim = _1c67be087_Prim((*(_185142_dest)).ptr());;
	if (((_18562_destPrim != nullptr) && _1c67c824a_IsAny(_18562_destPrim))) {
		jule::Ptr<_1c67c49e9_Prim> _18583_prim = _1c67be087_Prim((*((*(_185164_d))))._field_Kind);;
		if (((_18583_prim == nullptr) || (!(_1c67c824a_IsAny(_18583_prim.ptr()))))) {
			_1c67b5c3d_applyCastKind(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
		};
		return;;
	};
	jule::Ptr<_1c667de9c_Trait> _18652_dt = _1c67c0891_Trait((*(_185142_dest)).ptr());;
	if ((_18652_dt != nullptr)) {
		jule::Ptr<_1c667de9c_Trait> _18673_bt = _1c67c0891_Trait((*((*(_185164_d))))._field_Kind);;
		if (((_18673_bt == nullptr) || (_18673_bt != _18652_dt))) {
			_1c67b5732_applyCastKindModel(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
			return;;
		};
	};
	if (((_1c67beac1_TypeEnum((*(_185142_dest)).ptr()) != nullptr) && (_1c67beac1_TypeEnum((*((*(_185164_d))))._field_Kind) == nullptr))) {
		_1c67b5732_applyCastKindModel(_185127_s, _185164_d, _185142_dest, _18527_token, _185226_refers);
		return;;
	};
}



inline jule::Bool _1c67d9c62_validTypeForXof(jule::Ptr<_1c67bb8d1_TypeKind>* _188025_t) {
	return ((!(_1c67bcc9a_Void((*(_188025_t)).ptr()))) && (_1c67c0374_Fn((*(_188025_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log _1c67dcd75_buildSymbols(jule::Ptr<_1c6632945_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1c6677649_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log __jule_func_result;
	jule::Ptr<_1c6677649_symbolBuilder> _176_sb = jule::new_ptr<_1c6677649_symbolBuilder>(_1c6677649_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_20806e73a_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1c678348b_SymbolTable>(nullptr)});;
	_1c667d0cd_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1c67dd1a5_collectImplicitImports(jule::Ptr<_1c670684e_sema>* _3132_s, jule::Ptr<_1c678348b_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d786d202:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1c667d496_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1d786d202;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1d786e3e0:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1d786d983:;
						{
							__jule_panic_s(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1d786e027:;
				};
			}
			_iter_next_1d786d202:;
			++it;
			goto _iter_begin_1d786d202;
		}
		_iter_end_1d786d202:;
	};
}



inline __jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log _1c67dd5d4_analyzePackage(jule::Slice<jule::Ptr<_1c6632945_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c678348b_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c678348b_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7870644:;
		if (it != expr_end) {
			jule::Ptr<_1c6632945_AST> _4814_f = *it;
			{
				jule::Ptr<_1c678348b_SymbolTable> _497_table;
				jule::Slice<_20806e73a_Log> _4918_errors;
				({
					__jule_tuple_x_1c678348b_SymbolTable__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c67dcd75_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1c678348b_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1d7870644:;
			++it;
			goto _iter_begin_1d7870644;
		}
		_iter_end_1d7870644:;
	};
	jule::Ptr<_1c670684e_sema> _566_sema = jule::new_ptr<_1c670684e_sema>(_1c670684e_sema{._field_errors=jule::Slice<_20806e73a_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1c678348b_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1c678348b_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1c6705c27_commonSemaMeta>(_1c6705c27_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1c66956de_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1c66d63cd_ImportInfo>(nullptr)})});;
	jule::Ptr<_1c678348b_SymbolTable> _636_firstTable = _476_tables[0LL];;
	_1c67dd1a5_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1c6727210_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c66d9304_Package> _716_pkg = jule::new_ptr<_1c66d9304_Package>(_1c66d9304_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log _1c67dda8a_AnalyzePackage(jule::Slice<jule::Ptr<_1c6632945_AST>> _9523_files, jule::Trait _9542_importer, jule::I64 _9562_flags) {
	__jule_tuple_x_1c66d9304_Package__jule_tuple_s_20806e73a_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1c67dd5d4_analyzePackage(&(_9523_files), &(_9542_importer), &(_9562_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c68a09e8_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1d787a242:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _2914_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a6559_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1d787a2a8:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _3214_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a6988_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1d787a31e:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _3514_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a6db7_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1d787a396:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _3814_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a72e6_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1d787a52d:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _4114_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a7956_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1d787a594:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _4414_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a7c75_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1d787a61b:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _4714_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a868d_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1d787a693:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _5014_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68a9d32_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1d787a7b4:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _5314_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68aa5d5_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1d787a82a:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _5614_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68aaeed_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1d787a891:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _5914_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ab42c_builtinCallerAssert), ._field_reloaded=false});;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1d7879c47:;
			{
				return nullptr;;
			}
		}
		_match_end_1d787a0aa:;
	};
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c68a0d06_primTypeAlias(jule::Ptr<_1c67bb8d1_TypeKind>* _6623_k) {
	return jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=(*(_6623_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1c672acb3_Var> _1c68a46ab_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1d7882bc8:;
			{
				static jule::Ptr<_1c672acb3_Var> _9714_v = jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=_1c68a1114_primNil}), ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd720ae8_NewNil()})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1d7882c72:;
			{
				static jule::Ptr<_1c672acb3_Var> _11214_v = jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd720356_NewBool(true)})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1d7882ce9:;
			{
				static jule::Ptr<_1c672acb3_Var> _12514_v = jule::new_ptr<_1c672acb3_Var>(_1c672acb3_Var{._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_1c68a49ec_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c6789ccd_Value>(_1c6789ccd_Value{._field_Expr=jule::Ptr<_1c6638c37_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dd720356_NewBool(false)})}), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c672acb3_Var>>(nullptr)});;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1d7882425:;
			{
				return nullptr;;
			}
		}
		_match_end_1d787b81a:;
	};
}



inline jule::Ptr<_1c67baade_TypeAlias> _1c68a49ec_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1d7887b12:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _14514_t = _1c68a0d06_primTypeAlias(&(_1c68a16b9_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1d7887c77:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _14814_t = _1c68a0d06_primTypeAlias(&(_1c68a19b6_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1d7887cdd:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _15114_t = _1c68a0d06_primTypeAlias(&(_1c68a1c6e_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1d7887dba:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _15414_t = _1c68a0d06_primTypeAlias(&(_1c68a2027_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1d7887e31:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _15714_t = _1c68a0d06_primTypeAlias(&(_1c68a22d0_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1d7887e97:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _16014_t = _1c68a0d06_primTypeAlias(&(_1c68a2698_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1d788800d:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _16314_t = _1c68a0d06_primTypeAlias(&(_1c68a28da_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1d7888074:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _16614_t = _1c68a0d06_primTypeAlias(&(_1c68a2b82_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1d7888151:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _16914_t = _1c68a0d06_primTypeAlias(&(_1c68a31e3_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1d78881c8:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _17214_t = _1c68a0d06_primTypeAlias(&(_1c68a3754_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1d7888250:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _17514_t = _1c68a0d06_primTypeAlias(&(_1c68a3a0c_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1d78882c7:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _17814_t = _1c68a0d06_primTypeAlias(&(_1c68a3ee6_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1d788834e:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _18114_t = _1c68a0d06_primTypeAlias(&(_1c68a4238_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1d78883c6:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _18414_t = _1c68a0d06_primTypeAlias(&(_1c68a4447_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1d788844d:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _18714_t = _1c68a0d06_primTypeAlias(&(_1c68a349b_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1d78884c5:;
			{
				static jule::Ptr<_1c67baade_TypeAlias> _19014_t = _1c68a0d06_primTypeAlias(&(_1c68a2e3a_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1d7883338:;
			{
				return nullptr;;
			}
		}
		_match_end_1d7883415:;
	};
}



inline jule::Any _1c68a4c83_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1c672acb3_Var> _1986_v = _1c68a46ab_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c666d4ec_FnIns> _2026_f = _1c68a09e8_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c67baade_TypeAlias> _2066_ta = _1c68a49ec_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type27);;
	};
	return nullptr;;
}



inline jule::Any _1c68a504c_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1d7892d4d:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _21614_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ae793_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1d7893249:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _21914_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68aebc2_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1d7891720:;
			{
				return nullptr;;
			}
		}
		_match_end_1d7891b82:;
	};
}



inline jule::Any _1c68a5316_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1d7892de7:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _22914_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ad5c7_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1d7894ab9:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _23214_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ada06_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1d7892e80:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _23514_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ade35_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1d78932d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1d7894811:;
	};
}



inline jule::Any _1c68a56e0_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1d789504d:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _24514_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ab85b_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1d7897083:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _24814_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68abecc_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1d789710a:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _25114_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ac40b_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1d78950c5:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _25414_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ac83a_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1d789514c:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _25714_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68acc69_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1d789722b:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _26014_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c666a51b_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ad198_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1d7892ee6:;
			{
				return nullptr;;
			}
		}
		_match_end_1d7896cdb:;
	};
}



inline jule::Any _1c68a5932_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1d78974c3:;
			{
				static jule::Ptr<_1c666d4ec_FnIns> _27014_f = jule::new_ptr<_1c666d4ec_FnIns>(_1c666d4ec_FnIns{._field_Owner=jule::Ptr<_1c665865d_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1c666a51b_Fn>(_1c666a51b_Fn{._field_sema=jule::Ptr<_1c670684e_sema>(nullptr), ._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c6641b0d_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c6641b0d_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1c666832c_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c6668a47_Param>>(nullptr), ._field_Owner=jule::Ptr<_1c6655803_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c666d4ec_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1c67b9eea_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c666c474_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c66b35b9_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c6671687_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c6788b56_Data>,jule::Ptr<_1c678a87d_eval>*,jule::Ptr<_1c663c961_FnCallExpr>*,jule::Ptr<_1c6788b56_Data>*>(_1c68ae364_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1d78972b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1d789b4d8:;
	};
}



inline jule::Any _1c68a5ca6_findPackageBuiltinDef(jule::Str* _28227_linkPath, jule::Str* _28243_ident) {
	{
		auto &_match_expr{ (*(_28227_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1d789d4c9:;
			{
				return _1c68a56e0_findBuiltinDefStdComptime(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1d789d540:;
			{
				return _1c68a504c_findBuiltinDefStdDebug(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1d789d1dd:;
			{
				return _1c68a5316_findBuiltinDefStdMem(_28243_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1d789d254:;
			{
				return _1c68a5932_findBuiltinDefStdJuleIntegrated(_28243_ident);;
			}
		}
		else {
			_case_begin_1d789cb8d:;
			{
				return nullptr;;
			}
		}
		_match_end_1d789b9a0:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c68a612a_builtinCallerError(jule::Ptr<_1c678a87d_eval>* _29728_e, jule::Ptr<_1c663c961_FnCallExpr>* _29743_fc) {
	if (((*((*(_29743_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_29728_e)).ptr(), (*((*(_29743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29743_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_29728_e)).ptr(), (*((*((*(_29743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _3056_expr = _1c67a96e3_evalExpr((*(_29728_e)), (*((*(_29743_fc))))._field_Args[0LL]);;
	if ((_3056_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _3106_token = (*((*((*(_29743_fc))))._field_Args[0LL]))._field_Token;;
	if (_1c6789074_IsNil(_3056_expr.ptr())) {
		_1c678ae11_pushErr((*(_29728_e)).ptr(), _3106_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1c6717057_checkValidityForInitExpr((*((*(_29728_e))))._field_s, true, false, &(_1c68a16b9_primAny), &(_3056_expr), &(_3106_token))))) {
		return nullptr;;
	};
	_1c67b5226_applyRuntimeToStr(&((*((*(_29728_e))))._field_s), &((*(_3056_expr))._field_Kind), &(_1c68a16b9_primAny), &(_3106_token), _1c678de14_getOwnerRefers((*(_29728_e)).ptr()));
	jule::Ptr<_1c6788b56_Data> _3236_d = _1c67b5e4c_buildVoidData();;
	(*(_3236_d))._field_Model=jule::Any(jule::new_ptr<_1c666621a_BuiltinErrorCallExprModel>(_1c666621a_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1c666d4ec_FnIns>(nullptr), ._field_Err=_3056_expr}), &__jule_any_type30);
	return _3236_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a6559_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _32826_e, jule::Ptr<_1c663c961_FnCallExpr>* _32841_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_32841_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_32826_e)).ptr(), (*((*(_32841_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32841_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_32826_e)).ptr(), (*((*((*(_32841_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6638c37_Expr> _3376_arg = (*((*(_32841_fc))))._field_Args[0LL];;
	jule::Ptr<_1c6788b56_Data> _3386_expr = _1c67a96e3_evalExpr((*(_32826_e)), _3376_arg);;
	if ((_3386_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c67d8aa7_isBuiltinStrConvertable(&((*(_3386_expr))._field_Kind))))) {
		_1c678ae11_pushErr((*(_32826_e)).ptr(), (*(_3376_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c6729784_pushRuntimeToStr(&((*((*(_32826_e))))._field_s), &((*(_3386_expr))._field_Kind), &((*_3376_arg.alloc)._field_Token), _1c678de14_getOwnerRefers((*(_32826_e)).ptr()));
	jule::Ptr<_1c6788b56_Data> _3506_d = _1c67b5e4c_buildVoidData();;
	(*(_3506_d))._field_Model=jule::Any(jule::new_ptr<_1c66634d1_BuiltinOutCallExprModel>(_1c66634d1_BuiltinOutCallExprModel{._field_Expr=_3386_expr, ._field_Debug=false}), &__jule_any_type34);
	return _3506_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a6988_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _35528_e, jule::Ptr<_1c663c961_FnCallExpr>* _35543_fc, jule::Ptr<_1c6788b56_Data>* _35565_d) {
	(*(_35565_d))=_1c68a6559_builtinCallerOut(nullptr, _35528_e, _35543_fc, _35565_d);
	if (((*(_35565_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35565_d))))._field_Model=jule::Any(jule::new_ptr<_1c66638aa_BuiltinOutlnCallExprModel>(_1c66638aa_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_35565_d))))._field_Model.cast_ptr<_1c66634d1_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Expr, ._field_Debug=false}), &__jule_any_type35);
	return (*(_35565_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a6db7_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _36726_e, jule::Ptr<_1c663c961_FnCallExpr>* _36741_fc, jule::Ptr<_1c6788b56_Data>* _36763_d) {
	if (((*((*(_36741_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_36726_e)).ptr(), (*((*(_36741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36741_fc))))._field_Args.len() > 2LL)) {
		_1c678ae11_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _3766_t = _1c67a8c20_eval1((*(_36726_e)), (*((*(_36741_fc))))._field_Args[0LL]);;
	if ((_3766_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3766_t))._field_Decl))) {
		_1c678ae11_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c67d8557_isValidForSptrType(&((*(_3766_t))._field_Kind))))) {
		jule::Ptr<_1c665865d_StructIns> _3877_s = _1c67c060a_Struct((*(_3766_t))._field_Kind.ptr());;
		if ((((_3877_s != nullptr) && ((*_3877_s.alloc)._field_Decl != nullptr)) && (*(*(_3877_s))._field_Decl.alloc)._field_Binded)) {
			_1c678ae11_pushErr((*(_36726_e)).ptr(), (*((*((*(_36741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_36763_d))))._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=(*(_3766_t))._field_Kind}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)});
	if (((*((*(_36741_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c67bb8d1_TypeKind> _4017_old = (*((*(_36726_e))))._field_prefix;;
		(*((*(_36726_e))))._field_prefix=(*(_3766_t))._field_Kind;
		jule::Ptr<_1c6788b56_Data> _4047_init = _1c67a96e3_evalExpr((*(_36726_e)), (*((*(_36741_fc))))._field_Args[1LL]);;
		(*((*(_36726_e))))._field_prefix=_4017_old;
		if ((_4047_init != nullptr)) {
			jule::Ptr<_1c661e327_Token> _4098_token = (*((*((*(_36741_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1c6717057_checkValidityForInitExpr((*((*(_36726_e))))._field_s, (!((*((*(_36726_e))))._field_immutable)), false, &((*(_3766_t))._field_Kind), &(_4047_init), &(_4098_token));
			_1c67127c2_checkAssignType((*((*(_36726_e))))._field_s, false, &((*(_3766_t))._field_Kind), &(_4047_init), _4098_token, _1c678de14_getOwnerRefers((*(_36726_e)).ptr()));
			(*((*(_36763_d))))._field_Model=jule::Any(jule::new_ptr<_1c6663c84_BuiltinNewCallExprModel>(_1c6663c84_BuiltinNewCallExprModel{._field_Kind=(*(_3766_t))._field_Kind, ._field_Init=(*_4047_init.alloc)._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_36763_d))))._field_Model=jule::Any(jule::new_ptr<_1c6663c84_BuiltinNewCallExprModel>(_1c6663c84_BuiltinNewCallExprModel{._field_Kind=(*(_3766_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_36763_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a72e6_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _42928_e, jule::Ptr<_1c663c961_FnCallExpr>* _42943_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_42943_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_42928_e)).ptr(), (*((*(_42943_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42943_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_42928_e)).ptr(), (*((*((*(_42943_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _4386_expr = _1c67a96e3_evalExpr((*(_42928_e)), (*((*(_42943_fc))))._field_Args[0LL]);;
	if ((_4386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c67be087_Prim((*(_4386_expr))._field_Kind.ptr()) == nullptr) || (!(_1c67c7eb4_IsStr(_1c67be087_Prim((*(_4386_expr))._field_Kind).ptr()))))) {
		_1c678ae11_pushErr((*(_42928_e)).ptr(), (*((*(_42943_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6788b56_Data> _4476_d = _1c67b5e4c_buildVoidData();;
	(*(_4476_d))._field_Model=jule::Any(jule::new_ptr<_1c666415d_BuiltinPanicCallExprModel>(_1c666415d_BuiltinPanicCallExprModel{._field_Token=(*((*(_42943_fc))))._field_Token, ._field_Expr=(*(_4386_expr))._field_Model}), &__jule_any_type36);
	return _4476_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a7956_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _45527_e, jule::Ptr<_1c663c961_FnCallExpr>* _45542_fc, jule::Ptr<_1c6788b56_Data>* _45564_d) {
	if (((*((*(_45542_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_45542_fc))))._field_Args.len() == 1LL)) {
			_1c678ae11_pushErr((*(_45527_e)).ptr(), (*((*(_45542_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c678ae11_pushErr((*(_45527_e)).ptr(), (*((*(_45542_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_45542_fc))))._field_Args.len() > 3LL)) {
		_1c678ae11_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6788b56_Data> _4686_t = _1c67a88ce_evalExprKind((*(_45527_e)), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4686_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4686_t))._field_Decl))) {
		_1c678ae11_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1c67c00dd_Slc((*(_4686_t))._field_Kind.ptr()) == nullptr)) {
		_1c678ae11_pushErr((*(_45527_e)).ptr(), (*((*((*(_45542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_4686_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_45564_d))))._field_Kind=(*(_4686_t))._field_Kind;
	jule::Ptr<_1c6788b56_Data> _4836_lenExpr = _1c67a96e3_evalExpr(_1c6711d65_evalp((*((*(_45527_e))))._field_s, (*((*(_45527_e))))._field_lookup, (*(_4686_t))._field_Kind), (*((*(_45542_fc))))._field_Args[1LL]);;
	if ((_4836_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c6794b84_checkIntegerIndexingByData((*(_45527_e)).ptr(), &(_4836_lenExpr), (*((*((*(_45542_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1c6664aba_BuiltinMakeCallExprModel> _4906_model = jule::new_ptr<_1c6664aba_BuiltinMakeCallExprModel>(_1c6664aba_BuiltinMakeCallExprModel{._field_Kind=(*(_4686_t))._field_Kind, ._field_Len=(*(_4836_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_45564_d))))._field_Model=jule::Any(_4906_model, &__jule_any_type117);
	if (((*((*(_45542_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1c6788b56_Data> _4967_capExpr = _1c67a96e3_evalExpr(_1c6711d65_evalp((*((*(_45527_e))))._field_s, (*((*(_45527_e))))._field_lookup, (*(_4686_t))._field_Kind), (*((*(_45542_fc))))._field_Args[2LL]);;
		if ((_4967_capExpr == nullptr)) {
			return (*(_45564_d));;
		};
		_1c6794b84_checkIntegerIndexingByData((*(_45527_e)).ptr(), &(_4967_capExpr), (*((*((*(_45542_fc))))._field_Args[2LL]))._field_Token);
		(*(_4906_model))._field_Cap=(*(_4967_capExpr))._field_Model;
	};
	return (*(_45564_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a7c75_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _50629_e, jule::Ptr<_1c663c961_FnCallExpr>* _50644_fc, jule::Ptr<_1c6788b56_Data>* _50666_d) {
	if (((*((*(_50644_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_50644_fc))))._field_Args.len() == 1LL)) {
			_1c678ae11_pushErr((*(_50629_e)).ptr(), (*((*(_50644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c678ae11_pushErr((*(_50629_e)).ptr(), (*((*(_50644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6638c37_Expr> _5166_firstArg = (*((*(_50644_fc))))._field_Args[0LL];;
	jule::Ptr<_1c6788b56_Data> _5176_t = _1c67a96e3_evalExpr((*(_50629_e)), _5166_firstArg);;
	if ((_5176_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c67c8ee8_Slc> _5226_s = _1c67c00dd_Slc((*(_5176_t))._field_Kind.ptr());;
	if ((_5226_s == nullptr)) {
		_1c678ae11_pushErr((*(_50629_e)).ptr(), (*(_5166_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1c6717057_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5176_t))._field_Kind), &(_5176_t), &((*_5166_firstArg.alloc)._field_Token))) {
		_1c67127c2_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5176_t))._field_Kind), &(_5176_t), (*_5166_firstArg.alloc)._field_Token, _1c678de14_getOwnerRefers((*(_50629_e)).ptr()));
	};
	jule::Ptr<_1c67bb8d1_TypeKind> _5376_prefix = (*((*(_50629_e))))._field_prefix;;
	(*((*(_50629_e))))._field_prefix=(*(_5176_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_50629_e))))._field_prefix=_5376_prefix;
	});;
	(*(_50666_d))=jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=(*(_5176_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});
	jule::Ptr<_1c6638c37_Expr> _5456_secondArg = (*((*(_50644_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5456_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1d78e3035:;
			{
				if (((*((*(_50644_fc))))._field_Args.len() > 2LL)) {
					_1c678ae11_pushErr((*(_50629_e)).ptr(), (*((*((*(_50644_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c6788b56_Data> _5527_e1 = _1c67a96e3_evalExpr((*(_50629_e)), (*((*(_5456_secondArg))._field_Kind.unsafe_cast_ptr<_1c663b1bd_VariadicExpr>()))._field_Expr);;
				if ((_5527_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1c67be087_Prim((*(_5226_s))._field_Elem.ptr()) != nullptr) && _1c67c6424_IsU8(_1c67be087_Prim((*(_5226_s))._field_Elem).ptr()))) {
					if (((_1c67be087_Prim((*(_5527_e1))._field_Kind) != nullptr) && _1c67c7eb4_IsStr(_1c67be087_Prim((*(_5527_e1))._field_Kind).ptr()))) {
						_1c67b8a54_makeVariadic(&(_5527_e1), _1c68a349b_primU8);
						(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1c6664e94_BuiltinAppendCallExprModel>(_1c6664e94_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=(*(_5527_e1))._field_Model}), &__jule_any_type33);
						return (*(_50666_d));;
					};
				};
				if ((!(_1c67bdd01_Variadicable((*(_5527_e1))._field_Kind)))) {
					_1c678ae11_pushErr((*(_50629_e)).ptr(), (*(_5456_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_5527_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1c67b8a54_makeVariadic(&(_5527_e1), (*(_5226_s))._field_Elem);
				if (_1c6717057_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5226_s))._field_Elem), &(_5527_e1), &((*_5456_secondArg.alloc)._field_Token))) {
					_1c67127c2_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5226_s))._field_Elem), &(_5527_e1), (*_5456_secondArg.alloc)._field_Token, _1c678de14_getOwnerRefers((*(_50629_e)).ptr()));
				};
				(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1c6664e94_BuiltinAppendCallExprModel>(_1c6664e94_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=(*(_5527_e1))._field_Model}), &__jule_any_type33);
				return (*(_50666_d));;
			}
		}
		_match_end_1d78e2ead:;
	};
	jule::Ptr<_1c6788b56_Data> _5866_e1 = _1c67a96e3_evalExpr((*(_50629_e)), _5456_secondArg);;
	if ((_5866_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c665edc3_SliceExprModel> _5916_slice = jule::new_ptr<_1c665edc3_SliceExprModel>(_1c665edc3_SliceExprModel{._field_ElemKind=(*(_5226_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_50644_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_50644_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1d78ee052:;
		if (it != expr_end) {
			jule::Ptr<_1c6638c37_Expr> _59514_arg = *it;
			{
				_5866_e1=_1c67a96e3_evalExpr((*(_50629_e)), _59514_arg);
				if ((_5866_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5866_e1))._field_Kind.alloc)._field_Variadic) {
					_1c678ae11_pushErr((*(_50629_e)).ptr(), (*(_59514_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1c6717057_checkValidityForInitExpr((*((*(_50629_e))))._field_s, true, false, &((*(_5226_s))._field_Elem), &(_5866_e1), &((*_59514_arg.alloc)._field_Token))) {
					_1c67127c2_checkAssignType((*((*(_50629_e))))._field_s, false, &((*(_5226_s))._field_Elem), &(_5866_e1), (*_59514_arg.alloc)._field_Token, _1c678de14_getOwnerRefers((*(_50629_e)).ptr()));
				};
				(*(_5916_slice))._field_Elems=jule::append((*_5916_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5866_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1d78ee052:;
			++it;
			goto _iter_begin_1d78ee052;
		}
		_iter_end_1d78ee052:;
	};
	(*((*(_50666_d))))._field_Model=jule::Any(jule::new_ptr<_1c6664e94_BuiltinAppendCallExprModel>(_1c6664e94_BuiltinAppendCallExprModel{._field_Dest=(*(_5176_t))._field_Model, ._field_Elements=jule::Any(_5916_slice, &__jule_any_type80)}), &__jule_any_type33);
	return (*(_50666_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a825e_callerCopySlice(jule::Ptr<_1c6788b56_Data>* _61725_dest, jule::Ptr<_1c678a87d_eval>* _61743_e, jule::Ptr<_1c663c961_FnCallExpr>* _61758_fc, jule::Ptr<_1c6788b56_Data>* _61780_d) {
	if ((!((*((*(_61725_dest))))._field_Mutable))) {
		_1c678ae11_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6788b56_Data> _6226_src = _1c67a96e3_evalExpr((*(_61743_e)), (*((*(_61758_fc))))._field_Args[1LL]);;
	if ((_6226_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c67c8ee8_Slc> _6266_slc = _1c67c00dd_Slc((*(_6226_src))._field_Kind.ptr());;
	if ((_6266_slc != nullptr)) {
		if (((!((*(_6226_src))._field_Mutable)) && _1c67bd2b7_Mutable((*_6266_slc.alloc)._field_Elem.ptr()))) {
			_1c678ae11_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1c67bc11d_Equal((*((*(_61725_dest))))._field_Kind, (*(_6226_src))._field_Kind)))) {
			_1c678ae11_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_6226_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1c67c49e9_Prim> _6363_destPrim = _1c67be087_Prim((*(_1c67c00dd_Slc((*((*(_61725_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1c67c49e9_Prim> _6373_prim = _1c67be087_Prim((*(_6226_src))._field_Kind);;
		if (((((_6363_destPrim == nullptr) || (_6373_prim == nullptr)) || (!(_1c67c7eb4_IsStr(_6373_prim.ptr())))) || (!(_1c67c6424_IsU8(_6363_destPrim.ptr()))))) {
			_1c678ae11_pushErr((*(_61743_e)).ptr(), (*((*((*(_61758_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*((*(_61725_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_6226_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_61780_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_61780_d))))._field_Model=jule::Any(jule::new_ptr<_1c6665d41_BuiltinCopyCallExprModel>(_1c6665d41_BuiltinCopyCallExprModel{._field_Dest=(*(_61725_dest)), ._field_Src=_6226_src}), &__jule_any_type38);
	return (*(_61780_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a868d_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _65127_e, jule::Ptr<_1c663c961_FnCallExpr>* _65142_fc, jule::Ptr<_1c6788b56_Data>* _65164_d) {
	if (((*((*(_65142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_65142_fc))))._field_Args.len() == 1LL)) {
			_1c678ae11_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c678ae11_pushErr((*(_65127_e)).ptr(), (*((*(_65142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_65142_fc))))._field_Args.len() > 2LL)) {
		_1c678ae11_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _6646_dest = _1c67a96e3_evalExpr((*(_65127_e)), (*((*(_65142_fc))))._field_Args[0LL]);;
	{
		
		if ((_6646_dest == nullptr)) {
			_case_begin_1d7919897:;
			{
				return nullptr;;
			}
		}
		else if ((_1c67c00dd_Slc((*(_6646_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d791a69a:;
			{
				return _1c68a825e_callerCopySlice(&(_6646_dest), _65127_e, _65142_fc, _65164_d);;
			}
		}
		else {
			_case_begin_1d79194ce:;
			{
				_1c678ae11_pushErr((*(_65127_e)).ptr(), (*((*((*(_65142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d791782e:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c68a8a12_callerLenSlice(jule::Ptr<_1c6788b56_Data>* _67624_expr, jule::Ptr<_1c6788b56_Data>* _67642_d) {
	(*((*(_67642_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_67642_d))))._field_Model=jule::Any(jule::new_ptr<_1c6665291_BuiltinLenCallExprModel>(_1c6665291_BuiltinLenCallExprModel{._field_Expr=(*(_67624_expr))}), &__jule_any_type118);
	return (*(_67642_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a8d86_callerLenMap(jule::Ptr<_1c6788b56_Data>* _68422_expr, jule::Ptr<_1c6788b56_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1c6665291_BuiltinLenCallExprModel>(_1c6665291_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type118);
	return (*(_68440_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a920a_callerLenArr(jule::Ptr<_1c6788b56_Data>* _69222_expr, jule::Ptr<_1c6788b56_Data>* _69240_d) {
	(*((*(_69240_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_69240_d))))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>((*(_1c67bed57_Arr((*((*(_69222_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_69240_d))))._field_Model=jule::Any((*((*(_69240_d))))._field_Constant, &__jule_any_type20);
	return (*(_69240_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a957e_callerLenStr(jule::Ptr<_1c6788b56_Data>* _69922_expr, jule::Ptr<_1c6788b56_Data>* _69940_d) {
	(*((*(_69940_d))))._field_Kind=_1c6782237_lenKind();
	if (_1c6789591_IsConst((*(_69922_expr)).ptr())) {
		(*((*(_69940_d))))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_1dd721a0b_ReadStr((*((*(_69922_expr))))._field_Constant.ptr()).len()));
		(*((*(_69940_d))))._field_Model=jule::Any((*((*(_69940_d))))._field_Constant, &__jule_any_type20);
	} else {
		(*((*(_69940_d))))._field_Model=jule::Any(jule::new_ptr<_1c6665291_BuiltinLenCallExprModel>(_1c6665291_BuiltinLenCallExprModel{._field_Expr=(*(_69922_expr))}), &__jule_any_type118);
	};
	return (*(_69940_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a9903_callerLenComptime(jule::Ptr<_1c6788b56_Data>* _71227_d, jule::I64 _71237_n) {
	(*((*(_71227_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_71227_d))))._field_Constant=static__1dd71ecc3_NewI64(static_cast<jule::I64>(_71237_n));
	(*((*(_71227_d))))._field_Model=jule::Any((*((*(_71227_d))))._field_Constant, &__jule_any_type20);
	return (*(_71227_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68a9d32_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _71926_e, jule::Ptr<_1c663c961_FnCallExpr>* _71941_fc, jule::Ptr<_1c6788b56_Data>* _71963_d) {
	if (((*((*(_71941_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_71926_e)).ptr(), (*((*(_71941_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71941_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _7276_dest = _1c67a93a2_evalExpr1((*(_71926_e)), (*((*(_71941_fc))))._field_Args[0LL]);;
	{
		
		if ((_7276_dest == nullptr)) {
			_case_begin_1d7929a83:;
			{
				return nullptr;;
			}
		}
		else if ((_1c67c00dd_Slc((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792a886:;
			{
				return _1c68a8a12_callerLenSlice(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1c67bed57_Arr((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792a8ec:;
			{
				return _1c68a920a_callerLenArr(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1c67c0b27_Map((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7929731:;
			{
				return _1c68a8d86_callerLenMap(&(_7276_dest), _71963_d);;
			}
		}
		else if (((_1c67be087_Prim((*(_7276_dest))._field_Kind.ptr()) != nullptr) && _1c67c7eb4_IsStr(_1c67be087_Prim((*(_7276_dest))._field_Kind).ptr()))) {
			_case_begin_1d7929797:;
			{
				return _1c68a957e_callerLenStr(&(_7276_dest), _71963_d);;
			}
		}
		else if ((_1c67c13ca_comptimeStructFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792980d:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c13ca_comptimeStructFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c67c18e7_comptimeEnumFields((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d7929874:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c18e7_comptimeEnumFields((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c67c26b7_comptimeTypeInfos((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792a9da:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c26b7_comptimeTypeInfos((*(_7276_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1c67c1e14_comptimeParams((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792aa51:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c1e14_comptimeParams((*(_7276_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1c67c2bd4_comptimeStatics((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792aab7:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c2bd4_comptimeStatics((*(_7276_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c67c3c3a_comptimeFiles((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792ab2d:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c3c3a_comptimeFiles((*(_7276_dest))._field_Kind)))._field_files.len());;
			}
		}
		else if ((_1c67c371d_comptimeDecls((*(_7276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d792ab94:;
			{
				return _1c68a9903_callerLenComptime(_71963_d, (*(_1c67c371d_comptimeDecls((*(_7276_dest))._field_Kind)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1d79296ba:;
			{
				_1c678ae11_pushErr((*(_71926_e)).ptr(), (*((*((*(_71941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7927a1a:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c68aa1a6_callerCapSlice(jule::Ptr<_1c6788b56_Data>* _75924_expr, jule::Ptr<_1c6788b56_Data>* _75942_d) {
	(*((*(_75942_d))))._field_Kind=_1c6782237_lenKind();
	(*((*(_75942_d))))._field_Model=jule::Any(jule::new_ptr<_1c666558d_BuiltinCapCallExprModel>(_1c666558d_BuiltinCapCallExprModel{._field_Expr=(*(_75924_expr))}), &__jule_any_type119);
	return (*(_75942_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68aa5d5_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _76726_e, jule::Ptr<_1c663c961_FnCallExpr>* _76741_fc, jule::Ptr<_1c6788b56_Data>* _76763_d) {
	if (((*((*(_76741_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_76726_e)).ptr(), (*((*(_76741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76741_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _7756_dest = _1c67a96e3_evalExpr((*(_76726_e)), (*((*(_76741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7756_dest == nullptr)) {
			_case_begin_1d793d48c:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7756_dest))._field_Decl) {
			_case_begin_1d793e290:;
			{
				_1c678ae11_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c67c00dd_Slc((*(_7756_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d793e306:;
			{
				return _1c68aa1a6_callerCapSlice(&(_7756_dest), _76763_d);;
			}
		}
		else {
			_case_begin_1d793d0c4:;
			{
				_1c678ae11_pushErr((*(_76726_e)).ptr(), (*((*((*(_76741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d793a18c:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c68aaabe_callerDeleteMap(jule::Ptr<_1c678a87d_eval>* _79025_e, jule::Ptr<_1c663c961_FnCallExpr>* _79040_fc, jule::Ptr<_1c6788b56_Data>* _79062_expr, jule::Ptr<_1c6788b56_Data>* _79080_d) {
	if ((!((*((*(_79062_expr))))._field_Mutable))) {
		_1c678ae11_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_79080_d))=_1c67b5e4c_buildVoidData();
	jule::Ptr<_1c6665967_BuiltinDeleteCallExprModel> _7956_model = jule::new_ptr<_1c6665967_BuiltinDeleteCallExprModel>(_1c6665967_BuiltinDeleteCallExprModel{._field_Dest=(*(_79062_expr)), ._field_Key=jule::Ptr<_1c6788b56_Data>(nullptr)});;
	if (((*((*(_79040_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c6788b56_Data> _7997_key = _1c67a96e3_evalExpr((*(_79025_e)), (*((*(_79040_fc))))._field_Args[1LL]);;
		{
			
			if ((_7997_key == nullptr)) {
				_case_begin_1d79453b7:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7997_key))._field_Decl) {
				_case_begin_1d7944020:;
				{
					_1c678ae11_pushErr((*(_79025_e)).ptr(), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1d7943ea9:;
				{
					;
					jule::Ptr<_1c67bb8d1_TypeKind> _8088_keyType = (*(_1c67c0b27_Map((*((*(_79062_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1c67127c2_checkAssignType((*((*(_79025_e))))._field_s, false, &(_8088_keyType), &(_7997_key), (*((*((*(_79040_fc))))._field_Args[1LL]))._field_Token, _1c678de14_getOwnerRefers((*(_79025_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1d7943e43:;
		};
		(*(_7956_model))._field_Key=_7997_key;
	};
	(*((*(_79080_d))))._field_Model=jule::Any(_7956_model, &__jule_any_type39);
	return (*(_79080_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68aaeed_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _81929_e, jule::Ptr<_1c663c961_FnCallExpr>* _81944_fc, jule::Ptr<_1c6788b56_Data>* _81966_d) {
	if (((*((*(_81944_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_81929_e)).ptr(), (*((*(_81944_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81944_fc))))._field_Args.len() > 2LL)) {
		_1c678ae11_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _8276_dest = _1c67a96e3_evalExpr((*(_81929_e)), (*((*(_81944_fc))))._field_Args[0LL]);;
	{
		
		if ((_8276_dest == nullptr)) {
			_case_begin_1d794bd6e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8276_dest))._field_Decl) {
			_case_begin_1d794cb72:;
			{
				_1c678ae11_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c67c0b27_Map((*(_8276_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1d794cbd8:;
			{
				return _1c68aaabe_callerDeleteMap(_81929_e, _81944_fc, &(_8276_dest), _81966_d);;
			}
		}
		else {
			_case_begin_1d794b9a6:;
			{
				_1c678ae11_pushErr((*(_81929_e)).ptr(), (*((*((*(_81944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d7949d06:;
	};
}



inline jule::Ptr<_1c6788b56_Data> _1c68ab42c_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _84229_e, jule::Ptr<_1c663c961_FnCallExpr>* _84244_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_84244_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_84229_e)).ptr(), (*((*(_84244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84244_fc))))._field_Args.len() > 2LL)) {
		_1c678ae11_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _8516_expr = _1c67a96e3_evalExpr((*(_84229_e)), (*((*(_84244_fc))))._field_Args[0LL]);;
	if ((_8516_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c67be087_Prim((*(_8516_expr))._field_Kind.ptr()) == nullptr) || (!(_1c67c7c2d_IsBool(_1c67be087_Prim((*(_8516_expr))._field_Kind).ptr()))))) {
		_1c678ae11_pushErr((*(_84229_e)).ptr(), (*((*(_84244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("assertion requires boolean expression", 37)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6664614_BuiltinAssertCallExprModel> _8606_model = jule::new_ptr<_1c6664614_BuiltinAssertCallExprModel>(_1c6664614_BuiltinAssertCallExprModel{._field_Token=(*((*(_84244_fc))))._field_Token, ._field_Expr=(*(_8516_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_84244_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c6788b56_Data> _8687_log = _1c67a96e3_evalExpr((*(_84229_e)), (*((*(_84244_fc))))._field_Args[1LL]);;
		if ((_8687_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c6789591_IsConst(_8687_log.ptr()))) || (_1c67be087_Prim((*(_8687_log))._field_Kind) == nullptr)) || (!(_1c67c7eb4_IsStr(_1c67be087_Prim((*(_8687_log))._field_Kind).ptr()))))) {
			_1c678ae11_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_8687_log))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		(*(_8606_model))._field_Log=_1dd721a0b_ReadStr((*(_8687_log))._field_Constant.ptr());
	};
	jule::Ptr<_1c6788b56_Data> _8816_d = _1c67b5e4c_buildVoidData();;
	(*(_8816_d))._field_Model=jule::Any(_8606_model, &__jule_any_type37);
	return _8816_d;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ab85b_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _88640_e, jule::Ptr<_1c663c961_FnCallExpr>* _88655_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_88655_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*(_88655_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_88655_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _8956_d = _1c67a88ce_evalExprKind((*(_88640_e)), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8956_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _8992_f = _1c67c0374_Fn((*(_8956_d))._field_Kind.ptr());;
	if ((_8992_f != nullptr)) {
		if (_1c666e9b5_IsBuiltin(_8992_f)) {
			_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8992_f.alloc)._field_Generics.len() != (*((*_8992_f.alloc)._field_Decl))._field_Generics.len())) {
			_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c665865d_StructIns> _9102_s = _1c67c060a_Struct((*(_8956_d))._field_Kind);;
	if (((_9102_s != nullptr) && ((*_9102_s.alloc)._field_Generics.len() != (*((*_9102_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1c67c1144_comptime((*(_8956_d))._field_Kind)) {
		_1c678ae11_pushErr((*(_88640_e)).ptr(), (*((*((*(_88655_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_8956_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9956_buildComptimeTypeInfoData(&((*((*(_88640_e))))._field_s), &((*(_8956_d))._field_Kind));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68abecc_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _92241_e, jule::Ptr<_1c663c961_FnCallExpr>* _92256_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_92256_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_92241_e)).ptr(), (*((*(_92256_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92256_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_92241_e)).ptr(), (*((*((*(_92256_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _9306_d = _1c67a96e3_evalExpr((*(_92241_e)), (*((*(_92256_fc))))._field_Args[0LL]);;
	if ((_9306_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c6782589_isGoodValueToInfer(&(_9306_d))))) {
		_1c678ae11_pushErr((*(_92241_e)).ptr(), (*((*((*(_92256_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_9306_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c66a9c97_buildComptimeValue(&(_9306_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ac40b_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _94238_e, jule::Ptr<_1c663c961_FnCallExpr>* _94253_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_94253_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_94238_e)).ptr(), (*((*((*(_94253_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1dd71e850_Const> _9466_constant = static__1dd71ecc3_NewI64(static_cast<jule::I64>((*((*((*(_94253_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a2698_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9466_constant, &__jule_any_type20), ._field_Decl=false, ._field_Constant=_9466_constant});;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ac83a_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _95438_e, jule::Ptr<_1c663c961_FnCallExpr>* _95453_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_95453_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_95438_e)).ptr(), (*((*((*(_95453_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c66a0ebe_comptimeFile>(_1c66a0ebe_comptimeFile{._field_file=(*((*((*(_95438_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c68acc69_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _96739_e, jule::Ptr<_1c663c961_FnCallExpr>* _96754_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_96754_fc))))._field_Args.len() > 0LL)) {
		_1c678ae11_pushErr((*(_96739_e)).ptr(), (*((*((*(_96754_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c669e550_comptimeFiles>(_1c669e550_comptimeFiles{._field_files=(*((*((*(_96739_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ad198_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98043_e, jule::Ptr<_1c663c961_FnCallExpr>* _98058_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_98058_fc))))._field_Args.len() > 2LL)) {
		_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_98058_fc))))._field_Args.len() == 0LL)) {
		_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_98058_fc))))._field_Args.len() == 1LL)) {
		_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_98058_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1d79772c8:;
			{
				goto _match_end_1d79785a4;
			}
		}
		else {
			_case_begin_1d797862b:;
			{
				_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1c678b274_pushSuggestion((*(_98043_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1d79785a4:;
	};
	jule::Ptr<_1c661e327_Token> _10016_ident = (*((*((*((*(_98058_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1c663a552_IdentExpr>(&__jule_any_type52)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_98043_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0)) {
			_case_begin_1d797abb1:;
			{
				goto _match_end_1d797ade2;
			}
		}
		else {
			_case_begin_1d797ae58:;
			{
				_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*(_98058_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1d797ade2:;
	};
	jule::Ptr<_1c66ba857_scopeChecker> _10106_sc = (*((*(_98043_e))))._field_lookup.cast_ptr<_1c66ba857_scopeChecker>((jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data0);;
	jule::Ptr<_1c67baade_TypeAlias> _10116_alias = jule::new_ptr<_1c67baade_TypeAlias>(_1c67baade_TypeAlias{._field_Scope=(*(_10106_sc))._field_tree, ._field_Public=_1c670383a_IsPub((*(_10016_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_10016_ident, ._field_Ident=(*_10016_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1c67c40e2_TypeSymbol>(_1c67c40e2_TypeSymbol{._field_Decl=jule::Ptr<_1c6634903_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1c67bb8d1_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>(nullptr)});;
	jule::Ptr<_1c6788b56_Data> _10216_t = _1c67a8c20_eval1((*(_98043_e)), (*((*(_98058_fc))))._field_Args[1LL]);;
	if ((_10216_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10216_t))._field_Decl) {
		(*((*(_10116_alias))._field_Kind))._field_Kind=(*(_10216_t))._field_Kind;
	} else {
		jule::Ptr<_1c66956de_comptimeTypeInfo> _10287_cti = _1c67c294d_comptimeTypeInfo((*(_10216_t))._field_Kind.ptr());;
		if ((_10287_cti == nullptr)) {
			_1c678ae11_pushErr((*(_98043_e)).ptr(), (*((*((*(_98058_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1c678b274_pushSuggestion((*(_98043_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_10116_alias))._field_Kind))._field_Kind=(*(_10287_cti))._field_base;
	};
	_1c66c09c2_checkTypeAlias(_10106_sc, &(_10116_alias));
	return _1c67b5e4c_buildVoidData();;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ad5c7_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _104035_e, jule::Ptr<_1c663c961_FnCallExpr>* _104050_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<_1c6788b56_Data> _10416_result = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a22d0_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if (((*((*(_104050_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_104035_e)).ptr(), (*((*(_104050_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10416_result;;
	};
	if (((*((*(_104050_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_104035_e)).ptr(), (*((*((*(_104050_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _10536_d = _1c67a88ce_evalExprKind((*(_104035_e)), (*((*((*(_104050_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10536_d == nullptr)) {
		return _10416_result;;
	};
	if ((!(_1c67d9c62_validTypeForXof(&((*(_10536_d))._field_Kind))))) {
		_1c678ae11_pushErr((*(_104035_e)).ptr(), (*((*((*(_104050_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_10536_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10416_result))._field_Model=jule::Any(jule::new_ptr<_1c66668be_SizeofExprModel>(_1c66668be_SizeofExprModel{._field_Expr=(*(_10536_d))._field_Model}), &__jule_any_type120);
	return _10416_result;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ada06_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _106536_e, jule::Ptr<_1c663c961_FnCallExpr>* _106551_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<_1c6788b56_Data> _10666_result = jule::new_ptr<_1c6788b56_Data>(_1c6788b56_Data{._field_untyped=false, ._field_Kind=_1c68a22d0_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dd71e850_Const>(nullptr)});;
	if (((*((*(_106551_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_106536_e)).ptr(), (*((*(_106551_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10666_result;;
	};
	if (((*((*(_106551_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_106536_e)).ptr(), (*((*((*(_106551_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _10786_d = _1c67a88ce_evalExprKind((*(_106536_e)), (*((*((*(_106551_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10786_d == nullptr)) {
		return _10666_result;;
	};
	if ((!(_1c67d9c62_validTypeForXof(&((*(_10786_d))._field_Kind))))) {
		_1c678ae11_pushErr((*(_106536_e)).ptr(), (*((*((*(_106551_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c67bbccc_Str((*(_10786_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10666_result))._field_Model=jule::Any(jule::new_ptr<_1c6666aab_AlignofExprModel>(_1c6666aab_AlignofExprModel{._field_Expr=(*(_10786_d))._field_Model}), &__jule_any_type121);
	return _10666_result;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ade35_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _109033_e, jule::Ptr<_1c663c961_FnCallExpr>* _109048_fc, jule::Ptr<_1c6788b56_Data>* ) {
	if (((*((*(_109048_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_109033_e)).ptr(), (*((*(_109048_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_109048_fc))))._field_Args.len() > 1LL)) {
		_1c678ae11_pushErr((*(_109033_e)).ptr(), (*((*((*(_109048_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c6788b56_Data> _10996_d = _1c67a96e3_evalExpr((*(_109033_e)), (*((*(_109048_fc))))._field_Args[0LL]);;
	if ((_10996_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c67bda6a_GC((*(_10996_d))._field_Kind.ptr())))) {
		_1c678ae11_pushErr((*(_109033_e)).ptr(), (*((*((*(_109048_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c6788b56_Data> _11086_result = _1c67b5e4c_buildVoidData();;
	(*(_11086_result))._field_Model=jule::Any(jule::new_ptr<_1c6667529_FreeExprModel>(_1c6667529_FreeExprModel{._field_Expr=(*(_10996_d))._field_Model}), &__jule_any_type40);
	return _11086_result;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ae364_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _111344_e, jule::Ptr<_1c663c961_FnCallExpr>* _111359_fc, jule::Ptr<_1c6788b56_Data>* _111381_d) {
	if ((!(_1c678b906_isUnsafe((*(_111344_e)).ptr())))) {
		_1c678ae11_pushErr((*(_111344_e)).ptr(), (*((*(_111359_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_111359_fc))))._field_Args.len() < 1LL)) {
		_1c678ae11_pushErr((*(_111344_e)).ptr(), (*((*(_111359_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c6788b56_Data> _11236_argd = _1c67a96e3_evalExpr((*(_111344_e)), (*((*(_111359_fc))))._field_Args[0LL]);;
	if ((_11236_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c67be087_Prim((*(_11236_argd))._field_Kind.ptr()) == nullptr) || (!(_1c67c7eb4_IsStr(_1c67be087_Prim((*(_11236_argd))._field_Kind).ptr()))))) {
		_1c678ae11_pushErr((*(_111344_e)).ptr(), (*((*((*(_111359_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type4); (*it++) = jule::Any(_1c67bbccc_Str((*(_11236_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1c6789591_IsConst(_11236_argd.ptr()))) || (!(_1dd724107_IsStr((*(_11236_argd))._field_Constant.ptr()))))) {
		_1c678ae11_pushErr((*(_111344_e)).ptr(), (*((*((*(_111359_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c6788b56_Data> _11386_r = _1c67b5e4c_buildVoidData();;
	jule::Ptr<_1c666d4ec_FnIns> _11406_f = _1c67c0374_Fn((*((*(_111381_d))))._field_Kind);;
	if (((*(_11406_f))._field_Generics.len() > 0LL)) {
		(*(_11386_r))._field_Kind=(*((*(_11406_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1c666722c_BackendEmitExprModel> _11456_model = jule::new_ptr<_1c666722c_BackendEmitExprModel>(_1c666722c_BackendEmitExprModel{._field_Code=_1dd721a0b_ReadStr((*(_11236_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_111359_fc))))._field_Args.len() > 1LL)) {
		(*(_11456_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_111359_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_111359_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1d79a7e30:;
			if (it != expr_end) {
				jule::Ptr<_1c6638c37_Expr> _115115_arg = *it;
				{
					_11236_argd=_1c67a8c20_eval1((*(_111344_e)), _115115_arg);
					if ((_11236_argd == nullptr)) {
						return nullptr;;
					};
					(*_11456_model.alloc)._field_Exprs=jule::append((*_11456_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_11236_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1d79a7e30:;
				++it;
				goto _iter_begin_1d79a7e30;
			}
			_iter_end_1d79a7e30:;
		};
	};
	(*_11386_r.alloc)._field_Model=jule::Any(_11456_model, &__jule_any_type32);
	return _11386_r;;
}



inline jule::Ptr<_1c6788b56_Data> _1c68ae793_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _116434_e, jule::Ptr<_1c663c961_FnCallExpr>* _116449_fc, jule::Ptr<_1c6788b56_Data>* _116471_d) {
	(*(_116471_d))=_1c68a6559_builtinCallerOut(nullptr, _116434_e, _116449_fc, _116471_d);
	if (((*(_116471_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_116471_d))))._field_Model.cast_ptr<_1c66634d1_BuiltinOutCallExprModel>(&__jule_any_type34)))._field_Debug=true;
	return (*(_116471_d));;
}



inline jule::Ptr<_1c6788b56_Data> _1c68aebc2_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _117336_e, jule::Ptr<_1c663c961_FnCallExpr>* _117351_fc, jule::Ptr<_1c6788b56_Data>* _117373_d) {
	(*(_117373_d))=_1c68a6988_builtinCallerOutln(nullptr, _117336_e, _117351_fc, _117373_d);
	if (((*(_117373_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117373_d))))._field_Model.cast_ptr<_1c66638aa_BuiltinOutlnCallExprModel>(&__jule_any_type35)))._field_Debug=true;
	return (*(_117373_d));;
}



inline jule::Ptr<_1c6c9de3a_FileInfo> _1c6ca1c0c_ParseFile(jule::Ptr<_1c6624aad_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c6c9de3a_FileInfo> _276_finf = jule::new_ptr<_1c6c9de3a_FileInfo>(_1c6c9de3a_FileInfo{._field_Ast=jule::Ptr<_1c6632945_AST>(nullptr), ._field_Errors=jule::Slice<_20806e73a_Log>(nullptr)});;
	({
		__jule_tuple_x_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_assign_result = _1c737a78b_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1c6632945_AST__jule_tuple_s_20806e73a_Log _1c737a78b_parseFileset(jule::Ptr<_1c6624aad_File> _5521_f) {
	__jule_tuple_x_1c6632945_AST__jule_tuple_s_20806e73a_Log __jule_func_result;
	jule::Ptr<_1c739b3c2_parser> _566_p = jule::new_ptr<_1c739b3c2_parser>(_1c739b3c2_parser{._field_ast=jule::Ptr<_1c6632945_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1c6633d20_Directive>>(nullptr), ._field_errors=jule::Slice<_20806e73a_Log>(nullptr), ._field_ep=jule::Ptr<_1c738a7ac_exprBuilder>(nullptr)});;
	_1c73ac25c_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c6644924_ScopeTree> _1c737b25e_newScope(void) {
	return jule::new_ptr<_1c6644924_ScopeTree>(_1c6644924_ScopeTree{._field_Parent=jule::Ptr<_1c6644924_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1c66442b4_Stmt>(nullptr), ._field_End=jule::Ptr<_1c661e327_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1c737b5b1_isSt(jule::Ptr<_1c661e327_Token> _499_current, jule::Ptr<_1c661e327_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c737b935_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c661e327_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c661e327_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c661ed72_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c737bced_nextStPos(jule::Slice<jule::Ptr<_1c661e327_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1c661e327_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7a36e9d:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1c737b935_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c737b5b1_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1d7a3ab3e;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1d7a35a3a;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7a371e0:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c737b5b1_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1d7a3ab3e;
							};
						};
						goto _iter_next_1d7a35a3a;
					}
				}
				_match_end_1d7a37146:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1d7a35a3a;
			};
			if ((_706_i > _6833_start)) {
				if (_1c737b935_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1d7a35a3a;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c737b5b1_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c737b5b1_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1d7a35a3a;
			};
			_julec_label_1d7a3ab3e:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1d7a35a3a:;
	}
	_iter_end_1d7a35a3a:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c661e327_Token__jule_tuple_bool _1c737c172_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c661e327_Token>> _13028_tokens) {
	__jule_tuple_sx_1c661e327_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c737bced_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c661e327_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1c737c172_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _1c737c859_splitStmts(jule::Slice<jule::Ptr<_1c661e327_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1c737c4a2_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c737c4a2_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c737c4a2_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c661e327_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1c661e327_Token__jule_tuple_bool __jule_assign_result = _1c737c172_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1c737c4a2_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1c737c4a2_stmt>(_1c737c4a2_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1d7a3e8ac:;
	}
	_iter_end_1d7a3e8ac:;;
	return _1526_stmts;;
}



inline jule::Bool _1c7395eb0_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1c73962bd_isTypeRange(jule::Slice<jule::Ptr<_1c661e327_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b1969b:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c661e327_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d7b1b060:;
						if (it != expr_end) {
							jule::Ptr<_1c661e327_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1d7b1b813:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1d7b1b060;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1d7b1bbed:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1d7b1b060;
										}
									}
									_match_end_1d7b1baee:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1c7395eb0_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1d7b1b060:;
							++it;
							goto _iter_begin_1d7b1b060;
						}
						_iter_end_1d7b1b060:;
					};
					return true;;
				};
				if ((!(_1c7395eb0_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1d7b1969b:;
			++it;
			_9026_i++;
			goto _iter_begin_1d7b1969b;
		}
		_iter_end_1d7b1969b:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c7396587_getBlockExpr(jule::Slice<jule::Ptr<_1c661e327_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b1a38e:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1d7b1e904:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1d7b1e98c:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1d7b1e838;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7b1ea03:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7b1ea69:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1d7b1e838:;
				};
			}
			_iter_next_1d7b1a38e:;
			++it;
			_9366_i++;
			goto _iter_begin_1d7b1a38e;
		}
		_iter_end_1d7b1a38e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token _1c7396950_splitDelim(jule::Slice<jule::Ptr<_1c661e327_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1c661e327_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1d7b24552:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7b245c9:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1d7b22c37;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7b24640:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1d7b22c37;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1d7b246a6:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1d7b242bb:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1c661e327_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1c661e327_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1d7b22c37:;
	}
	_iter_end_1d7b22c37:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1c7396c19_findLowestPrecOp(jule::Slice<jule::Ptr<_1c661e327_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7b29843:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1d7b2a5e1:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1d7b2a679;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1d7b2a679:;
						{
							(_10126_braceN)++;
							goto _iter_next_1d7b29843;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1d7b2a6e0:;
						{
							(_10126_braceN)--;
							goto _iter_next_1d7b29843;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1d7b2a756:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1d7b29843;
						}
					}
					_match_end_1d7b2a525:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1d7b2bd1d:;
						{
							goto _iter_next_1d7b29843;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1d7b2beb6:;
						{
							goto _iter_next_1d7b29843;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1d7b2c02c:;
						{
							goto _iter_next_1d7b29843;
						}
					}
					else if ((!(_1c661ed72_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1d7b2c093:;
						{
							goto _iter_next_1d7b29843;
						}
					}
					_match_end_1d7b2bca7:;
				};
				jule::Ptr<_1c661e327_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1c661ea64_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1d7b29843;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c661e327_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1d7b29843;
						};
					};
				};
				jule::U8 _10603_p = _1c661e6ce_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1d7b29843:;
			++it;
			_10146_i++;
			goto _iter_begin_1d7b29843;
		}
		_iter_end_1d7b29843:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1c663a552_IdentExpr> _1c7396ed3_buildIdentExpr(jule::Ptr<_1c661e327_Token>* _106924_token) {
	return jule::new_ptr<_1c663a552_IdentExpr>(_1c663a552_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c661e327_Token__jule_tuple_int _1c739729c_getRangeExprTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _107728_tokens) {
	__jule_tuple_sx_1c661e327_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1c661e327_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7b33e46:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7b34276:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1d7b33ebd:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1d7b3341d:;
	}
	_iter_end_1d7b3341d:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1c7397676_isAnonFnHead(jule::Slice<jule::Ptr<_1c661e327_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1d7b35c28:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1d7b36157;
				};
				goto _case_begin_1d7b3629a;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1d7b3629a:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1d7b36157;
				};
				return true;;
			}
		}
		_match_end_1d7b36157:;
	};
	return false;;
}



inline jule::Bool _1c739837a_checkAssignTokens(jule::Slice<jule::Ptr<_1c661e327_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c6623ae0_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7bd0179:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7bd083e:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7bd0bc4:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1d7bd0ac5:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1d7bd1d29:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1d7bd1db2:;
						{
							goto _iter_next_1d7bd0179;
						}
					}
					else if (_1c6624173_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1d7bd1e28:;
						{
							return true;;
						}
					}
					_match_end_1d7bd1c80:;
				};
			}
			_iter_next_1d7bd0179:;
			++it;
			goto _iter_begin_1d7bd0179;
		}
		_iter_end_1d7bd0179:;
	};
	return false;;
}



inline _20806e73a_Log _1c7399546_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c6624aad_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_20806eb9c_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1c661e327_Token>> _1c7399a74_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c661e327_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c661e327_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c661e327_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1d7bd6e83:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1d7bd72e6:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1d7bd725d:;
			};
		}
	_iter_next_1d7bd4a85:;
	}
	_iter_end_1d7bd4a85:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token _1c7399d3d_rangeLast(jule::Slice<jule::Ptr<_1c661e327_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c661e327_Token__jule_tuple_sx_1c661e327_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1c661e327_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1d7bdb163:;
					{
						(_1096_braceN)++;
						goto _iter_next_1d7bda4a3;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1d7bdb493:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1d7bdb1da:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1d7bda4a3:;
	}
	_iter_end_1d7bda4a3:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log _1c739a2e4_parts(jule::Slice<jule::Ptr<_1c661e327_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c661e327_Token__jule_tuple_s_20806e73a_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7bde331:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1c661e327_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1d7be0365:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1d7be03dc:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1d7be0453:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1d7bde331;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_20806e73a_Log _1545_err = _1c7399546_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_20806e73a_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1d7be0299:;
				};
			}
			_iter_next_1d7bde331:;
			++it;
			_1436_i++;
			goto _iter_begin_1d7bde331;
		}
		_iter_end_1d7bde331:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c661e327_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1c739a57a_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1d7be3995:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1d7be3a3e:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1d7be3ab6:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1d7bdec6b:;
			{
				return _16720_left;;
			}
		}
		_match_end_1d7bded48:;
	};
}



inline _20806e73a_Log _1c739a9a9_compilerErr(jule::Ptr<_1c661e327_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_20806eb9c_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1c6625b03_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1c739ad50_pushSuggestion(_20806e73a_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_20806eb9c_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1c6634903_TypeDecl> _1c73acc63_buildVoidType(void) {
	return jule::new_ptr<_1c6634903_TypeDecl>(_1c6634903_TypeDecl{._field_Token=jule::Ptr<_1c661e327_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1c6a6a5db_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1d7e2bb9a:;
			{
				__jule_func_result.__jule_result_arg0=_20807295d_IsWindows(_208822a9d_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1d7e2bc11:;
			{
				__jule_func_result.__jule_result_arg0=_208072c6b_IsDarwin(_208822a9d_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1d7e2b87b:;
			{
				__jule_func_result.__jule_result_arg0=_208073035_IsLinux(_208822a9d_Os);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1d7e2b8e2:;
			{
				__jule_func_result.__jule_result_arg0=_208073b90_IsUnix(_208822a9d_Os);
			}
		}
		else {
			_case_begin_1d7e2b2d7:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1d7e2b75a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c6a6a72e_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1d7e2e20d:;
			{
				__jule_func_result.__jule_result_arg0=_208073376_IsI386(_208822d56_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1d7e2e274:;
			{
				__jule_func_result.__jule_result_arg0=_20807360c_IsAmd64(_208822d56_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1d7e2ddde:;
			{
				__jule_func_result.__jule_result_arg0=_2080738c6_IsArm64(_208822d56_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1d7e2de55:;
			{
				__jule_func_result.__jule_result_arg0=_2080742ab_Is64Bit(_208822d56_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1d7e2debb:;
			{
				__jule_func_result.__jule_result_arg0=_208074069_Is32Bit(_208822d56_Arch);
			}
		}
		else {
			_case_begin_1d7e2d84a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1d7e2dcbd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c6a6a8c7_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_208774deb_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _208774868_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _20876bd9e_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a5db_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a72e_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_20876bd9e_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a5db_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a72e_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a72e_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a5db_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c6a6a5db_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1c6a8633d_setOsVars(jule::Slice<jule::Str>* _3919_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3919_vars)); __jule_push_dest.push(_208822a9d_Os); };
	if (_208073b90_IsUnix(_208822a9d_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3919_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1c6a865b3_setArchVars(jule::Slice<jule::Str>* _4721_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(_208822d56_Arch); };
	if (_2080742ab_Is64Bit(_208822d56_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_208074069_Is32Bit(_208822d56_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4721_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1c6a8689e_initVars(jule::Slice<jule::Str>* _5818_vars, _1c6a8601e_CompileInfo* _5832_info) {
	_1c6a8633d_setOsVars(_5818_vars);
	_1c6a865b3_setArchVars(_5818_vars);
	if ((*(_5832_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5832_info))._field_AtomicRC) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("atomicrc", 8)); };
	};
	if ((*(_5832_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5832_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1d7e3a868:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1d7e39b42:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1d7e39acb:;
	};
	{
		auto &_match_expr{ (*(_5832_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1d7e39bca:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1d7e398ab:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1d7e3b649:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5818_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1d7e3b5d3:;
	};
}



inline jule::Slice<jule::U8> _1c73b1be0_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__238ada819_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(_1d508560e_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_208821a25_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _20806e73a_Log _1c73b1eed_flatCompilerErr(jule::Str _4120_text) {
	return _20806e73a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1c666a51b_Fn> _1c68bd1b9_RuntimeFindFn(jule::Ptr<_1c66d63cd_ImportInfo>* _1223_runtime, jule::Str _1245_ident) {
	;
	jule::Ptr<_1c666a51b_Fn> _146_f = _1c66d79d9_FindFn((*(_1223_runtime)).ptr(), _1245_ident, false);;
	if ((_146_f == nullptr)) {
		jule::outln(_1d7e7b744_toStr(_1245_ident));
		__jule_panic_s(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:17:3"));;
	};
	return _146_f;;
}



inline jule::Ptr<_1c6655803_Struct> _1c69d21bd_RuntimeFindStruct(jule::Ptr<_1c66d63cd_ImportInfo>* _2727_runtime, jule::Str _2749_ident) {
	;
	jule::Ptr<_1c6655803_Struct> _296_f = _1c66d75dd_FindStruct((*(_2727_runtime)).ptr(), _2749_ident, false);;
	if ((_296_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 101) + jule::Str("\nlocation: julec/obj/runtime.jule:31:3"));;
	};
	return _296_f;;
}



inline void _1c73b672d_pushPasses(jule::Ptr<_1c66d9304_Package>* _12220_p, jule::Slice<jule::Str>* _12244_passes) {
	{
		auto expr = &((*((*(_12220_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e7d290:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _12314_f = *it;
			{
				_julec_label_1d7e7d911:;
				{
					auto expr = &((*(_12314_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7e7dd40:;
					if (it != expr_end) {
						_1c6672b94_Pass _12510_pass = *it;
						{
							if ((_12510_pass._field_Text).empty()) {
								goto _iter_next_1d7e7dd40;
							};
							{
								auto expr = _12244_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1d7e85d8b:;
								if (it != expr_end) {
									jule::Str _12911_cpass = *it;
									{
										if ((_12911_cpass == _12510_pass._field_Text)) {
											goto _iter_next_1d7e7dd40;
										};
									}
									_iter_next_1d7e85d8b:;
									++it;
									goto _iter_begin_1d7e85d8b;
								}
								_iter_end_1d7e85d8b:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12244_passes)); __jule_push_dest.push(_12510_pass._field_Text); };
						}
						_iter_next_1d7e7dd40:;
						++it;
						goto _iter_begin_1d7e7dd40;
					}
					_iter_end_1d7e7dd40:;
				};
			}
			_iter_next_1d7e7d290:;
			++it;
			goto _iter_begin_1d7e7d290;
		}
		_iter_end_1d7e7d290:;
	};
}



inline jule::Slice<jule::Str> _1c73b6ae6_getAllUniquePasses(jule::Ptr<_1c66d9304_Package>* _13928_pkg, jule::Slice<jule::Ptr<_1c66d63cd_ImportInfo>> _13953_uses) {
	jule::Slice<jule::Str> _14010_passes = nullptr;;
	_1c73b672d_pushPasses(_13928_pkg, &(_14010_passes));
	{
		auto expr = &(_13953_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7e86ce3:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _14314_u = *it;
			{
				if ((!((*(_14314_u))._field_Binded))) {
					_1c73b672d_pushPasses(&((*_14314_u.alloc)._field_Package), &(_14010_passes));
				};
			}
			_iter_next_1d7e86ce3:;
			++it;
			goto _iter_begin_1d7e86ce3;
		}
		_iter_end_1d7e86ce3:;
	};
	return _14010_passes;;
}



inline _1c6a8601e_CompileInfo _1c73b6d05_buildCompileInfo(void) {
	_1c6a8601e_CompileInfo _1536_info = _1c6a8601e_CompileInfo{._field_Prod=_20882a523_Production, ._field_Test=_208829b60_Test, ._field_AtomicRC=_20882a7ba_AtomicRC, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _208827b3b_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1d7e88201:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1d7e88366:;
			{
				_1536_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1d7e882cd:;
	};
	{
		auto &_match_expr{ _208829401_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1d7e883dd:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1d7e89125:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1d7e88894:;
			{
				_1536_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1d7e89422:;
	};
	return _1536_info;;
}



inline void _1c73b70ad_pushRuntimeToAST(jule::Ptr<_1c6632945_AST>* _17926_f) {
	jule::Ptr<_1c664ca09_UseDecl> _1806_decl = jule::new_ptr<_1c664ca09_UseDecl>(_1c664ca09_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1c664ca09_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1c73b770c_IterPackages(jule::Ptr<_1c73b4d7a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1c66d9304_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ea1acc:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1d7ea1acc:;
			++it;
			goto _iter_begin_1d7ea1acc;
		}
		_iter_end_1d7ea1acc:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1c73b7a3c_IterFiles(jule::Ptr<_1c66d9304_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1c678348b_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ea9e7b:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1d7ea9e7b:;
			++it;
			goto _iter_begin_1d7ea9e7b;
		}
		_iter_end_1d7ea9e7b:;
	};
}



inline void _1c73b7dd3_iterTraitInheritMethods(jule::Ptr<_1c667de9c_Trait>* _2233_base, jule::Ptr<_1c667de9c_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _2263_f) {
	_1c73b8301_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7eab0c0:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _2414_m = *it;
			{
				if ((!(_1c73bd427_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1d7eab0c0:;
			++it;
			goto _iter_begin_1d7eab0c0;
		}
		_iter_end_1d7eab0c0:;
	};
}



inline void _1c73b8301_iterTraitInheritMethods1(jule::Ptr<_1c667de9c_Trait>* _3134_base, jule::Ptr<_1c667de9c_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7eac467:;
		if (it != expr_end) {
			jule::Ptr<_1c67c40e2_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1c667de9c_Trait> _337_t2 = _1c67c0891_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1c73b7dd3_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1d7eac467:;
			++it;
			goto _iter_begin_1d7eac467;
		}
		_iter_end_1d7eac467:;
	};
}



inline void _1c73b85a9_IterTraitMethods(jule::Ptr<_1c667de9c_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1c666a51b_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ead90d:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1d7ead90d:;
			++it;
			goto _iter_begin_1d7ead90d;
		}
		_iter_end_1d7ead90d:;
	};
	_1c73b8301_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1c73ba842_IsForwarded(jule::Ptr<_1c66b35b9_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1d7ed4516:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1c6788b56_Data>(&__jule_any_type31)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1d7ed4758:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1d7ed53c4:;
						{
							return false;;
						}
					}
					_match_end_1d7ed535d:;
				};
			}
		}
		else {
			_case_begin_1d7ed468c:;
			{
				return true;;
			}
		}
		_match_end_1d7ed4626:;
	};
}



inline jule::Bool _1c73bab50_IsExprComesFromBind(jule::Ptr<_1c6788b56_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d7ed5e1e:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1c672acb3_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d7ed612d:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1d7ed4e84:;
			{
				return false;;
			}
		}
		_match_end_1d7ed4e1d:;
	};
}



inline jule::Bool _1c73bae19_IsAny(jule::Ptr<_1c67bb8d1_TypeKind>* _5215_t) {
	if ((_1c67beac1_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c67c49e9_Prim> _562_prim = _1c67be087_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1c67c824a_IsAny(_562_prim));;
}



inline jule::Bool _1c73bb25a_IsClosure(jule::Ptr<_1c6660830_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1c73bb4e1_IsOpMethod(jule::Ptr<_1c666a51b_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c73bb865_IsTraitMethod(jule::Ptr<_1c665865d_StructIns>* _8023_owner, jule::Ptr<_1c666d4ec_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7edb908:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _8114_t = *it;
			{
				if ((_1c667eb7e_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1d7edb908:;
			++it;
			goto _iter_begin_1d7edb908;
		}
		_iter_end_1d7edb908:;
	};
	return false;;
}



inline jule::Bool _1c73bbbd9_IsStdPackage(jule::Str _9417_f, jule::Str _9425_p) {
	return _208769198_HasPrefix(_9417_f, _2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _208821eed_PathStdlib; (*it++) = _9425_p; __jule_collection; })));;
}



inline jule::Ptr<_1c6633d20_Directive> _1c73bcbda_FindDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ee7dcb:;
		if (it != expr_end) {
			jule::Ptr<_1c6633d20_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1d7ee7dcb:;
			++it;
			goto _iter_begin_1d7ee7dcb;
		}
		_iter_end_1d7ee7dcb:;
	};
	return nullptr;;
}



inline jule::Bool _1c73bd0a3_HasDirective(jule::Slice<jule::Ptr<_1c6633d20_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1c73bcbda_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1c73bd427_ContainsTraitMethod(jule::Ptr<_1c667de9c_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ee9a15:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1d7ee9a15:;
			++it;
			goto _iter_begin_1d7ee9a15;
		}
		_iter_end_1d7ee9a15:;
	};
	return false;;
}



inline jule::I64 _1c73bdadc_FindTraitTypeOffsetS(jule::Ptr<_1c667de9c_Trait> _3925_t, jule::Ptr<_1c665865d_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7eeb72b:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d7eec61c:;
						if (it != expr_end) {
							jule::Ptr<_1c665865d_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1d7eec61c:;
							++it;
							goto _iter_begin_1d7eec61c;
						}
						_iter_end_1d7eec61c:;
					};
					goto _iter_end_1d7eeb72b;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1d7eeb72b:;
			++it;
			goto _iter_begin_1d7eeb72b;
		}
		_iter_end_1d7eeb72b:;
	};
	return -1LL;;
}



inline jule::I64 _1c73bde61_FindTraitTypeOffset(jule::Ptr<_1c667de9c_Trait> _6224_t, jule::Ptr<_1c67bb8d1_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c665865d_StructIns> _6610_s = nullptr;;
	if ((_1c67be31d_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1c67be31d_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1c67c060a_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1c73bdadc_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c73be390_FindOperator(jule::Ptr<_1c665865d_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1d8001115:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1d8000e17:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1d8000e7d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1d800117b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1d8001203:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1d800127a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1d800139b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1d8001412:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1d8001478:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1d80014de:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1d8001555:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1d80015cc:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1d8001654:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1d80016cb:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1d8001753:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1d80017ca:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1d8001852:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1d80018c9:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1d8001951:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1d80019c8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1d8001a50:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1d8001ac7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1d8001b4e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1d8001bc6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1d8001c4d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1d8000a4e:;
			{
				return nullptr;;
			}
		}
		_match_end_1d8000b81:;
	};
}



inline jule::Ptr<_1c666d4ec_FnIns> _1c73be714_FindFnGenericInstance(jule::Ptr<_1c666a51b_Fn>* _14731_f, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _14739_generics) {
	_julec_label_1d800a806:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d800d694:;
		if (it != expr_end) {
			jule::Ptr<_1c666d4ec_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d800e09b:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1c67bc11d_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14739_generics[_1507_i])))) {
								goto _iter_next_1d800d694;
							};
						}
						_iter_next_1d800e09b:;
						++it;
						_1507_i++;
						goto _iter_begin_1d800e09b;
					}
					_iter_end_1d800e09b:;
				};
				return _14914_ins;;
			}
			_iter_next_1d800d694:;
			++it;
			goto _iter_begin_1d800d694;
		}
		_iter_end_1d800d694:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1c665865d_StructIns> _1c73beb98_FindStructGenericInstance(jule::Ptr<_1c6655803_Struct>* _16335_s, jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>> _16347_generics) {
	_julec_label_1d800e51e:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8010795:;
		if (it != expr_end) {
			jule::Ptr<_1c665865d_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d801119c:;
					if (it != expr_end) {
						jule::I64 _1667_i = it - expr->begin();
						{
							if ((!(_1c67bc11d_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Kind, _16347_generics[_1667_i])))) {
								goto _iter_next_1d8010795;
							};
						}
						_iter_next_1d801119c:;
						++it;
						_1667_i++;
						goto _iter_begin_1d801119c;
					}
					_iter_end_1d801119c:;
				};
				return _16514_ins;;
			}
			_iter_next_1d8010795:;
			++it;
			goto _iter_begin_1d8010795;
		}
		_iter_end_1d8010795:;
	};
	__jule_panic_s(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Bool _1d7e9e9cb_isOrdered(jule::Ptr<_1c672acb3_Var>* _1418_t, jule::Slice<jule::Ptr<_1c672acb3_Var>> _1425_s) {
	_julec_label_1d7ea1e0c:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ea235d:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1d7ea2b66:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1d7ea235d;
							};
						}
					}
					_match_end_1d7ea2ade:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7ea334d:;
					if (it != expr_end) {
						jule::Ptr<_1c672acb3_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1d7ea235d;
							};
						}
						_iter_next_1d7ea334d:;
						++it;
						goto _iter_begin_1d7ea334d;
					}
					_iter_end_1d7ea334d:;
				};
				return false;;
			}
			_iter_next_1d7ea235d:;
			++it;
			goto _iter_begin_1d7ea235d;
		}
		_iter_end_1d7ea235d:;
	};
	return true;;
}

inline jule::Bool _1d7ea574b_isOrdered(jule::Ptr<_1c6655803_Struct>* _1418_t, jule::Slice<jule::Ptr<_1c6655803_Struct>> _1425_s) {
	_julec_label_1d7ea7b38:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d7ea8089:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d7ea86a5:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1d7ea8089;
							};
						}
						_iter_next_1d7ea86a5:;
						++it;
						goto _iter_begin_1d7ea86a5;
					}
					_iter_end_1d7ea86a5:;
				};
				return false;;
			}
			_iter_next_1d7ea8089:;
			++it;
			goto _iter_begin_1d7ea8089;
		}
		_iter_end_1d7ea8089:;
	};
	return true;;
}



inline void _1d7e9c105_order(jule::Slice<jule::Ptr<_1c672acb3_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1d7e9c5bc:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1d7e9d359:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1c672acb3_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1d7e9e547:;
				if (it != expr_end) {
					jule::Ptr<_1c672acb3_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1d7e9d90e;
						};
					}
					_iter_next_1d7e9e547:;
					++it;
					goto _iter_begin_1d7e9e547;
				}
				_iter_end_1d7e9e547:;
			};
			if (_1d7e9e9cb_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1d7e9d90e:;
	}
	_iter_end_1d7e9d90e:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1d7e9c5bc;
	};
}

inline void _1d7e9cbd8_order(jule::Slice<jule::Ptr<_1c6655803_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1d7e9db73:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1d7ea28ad:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1c6655803_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1d7ea52b7:;
				if (it != expr_end) {
					jule::Ptr<_1c6655803_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1d7ea467e;
						};
					}
					_iter_next_1d7ea52b7:;
					++it;
					goto _iter_begin_1d7ea52b7;
				}
				_iter_end_1d7ea52b7:;
			};
			if (_1d7ea574b_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1d7ea467e:;
	}
	_iter_end_1d7ea467e:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1d7e9db73;
	};
}



inline void _1c750d49b_EliminateDefines(jule::Ptr<_1c73b4d7a_IR>* _40226_ir) {
	jule::Ptr<_1c750a0ad_ObjectDeadCode> _4036_ocd = static__1c750a630_new(_40226_ir);;
	_1c750d1e3_elimanate(_4036_ocd);
}



inline void _1c7512417_eliminateDeadCodeOfScope(jule::Ptr<_1c66b35b9_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1c66b6116_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b6116_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66b6116_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1c66b6776_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c66b6776_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1c750e1d3_scopeDeadCode> _2416_sdc = jule::new_ptr<_1c750e1d3_scopeDeadCode>(_1c750e1d3_scopeDeadCode{._field_parent=jule::Ptr<_1c750e1d3_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c66b6116_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c66b6776_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1c751211a_optimizeStmts(_2416_sdc);
	};
}



inline void _1c751268c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c666a51b_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8092c45:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d80956e8:;
					if (it != expr_end) {
						jule::Ptr<_1c666d4ec_FnIns> _25215_ins = *it;
						{
							_1c7512417_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1d80956e8:;
						++it;
						goto _iter_begin_1d80956e8;
					}
					_iter_end_1d80956e8:;
				};
			}
			_iter_next_1d8092c45:;
			++it;
			goto _iter_begin_1d8092c45;
		}
		_iter_end_1d8092c45:;
	};
}



inline void _1c75128bd_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1c6655803_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8095660:;
		if (it != expr_end) {
			jule::Ptr<_1c6655803_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d8096809:;
					if (it != expr_end) {
						jule::Ptr<_1c665865d_StructIns> _26115_ins = *it;
						{
							_1c751268c_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1d8096809:;
						++it;
						goto _iter_begin_1d8096809;
					}
					_iter_end_1d8096809:;
				};
			}
			_iter_next_1d8095660:;
			++it;
			goto _iter_begin_1d8095660;
		}
		_iter_end_1d8095660:;
	};
}



inline void _1c7512b76_eliminateFunctionsScopePackage(jule::Ptr<_1c66d9304_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d80975b8:;
		if (it != expr_end) {
			jule::Ptr<_1c678348b_SymbolTable> _26814_f = *it;
			{
				_1c751268c_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1c75128bd_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1d80975b8:;
			++it;
			goto _iter_begin_1d80975b8;
		}
		_iter_end_1d80975b8:;
	};
}



inline void _1c7512d74_eliminateScopePackage(jule::Ptr<_1c66d9304_Package>* _27431_pkg) {
	_1c7512b76_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1c75130a5_EliminateScopes(jule::Ptr<_1c73b4d7a_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1c66d63cd_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1c7512d74_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1d8098cc3:;
	}
	_iter_end_1d8098cc3:;;
	_1c7512d74_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _1c68aee7a_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1c68b0343_equalConst(jule::Ptr<_1dd71e850_Const> _2115_l, jule::Ptr<_1dd71e850_Const> _2126_r) {
	{
		
		if (_1dd723854_IsI64(_2115_l.ptr())) {
			_case_begin_1d81113bd:;
			{
				return (_1dd723854_IsI64(_2126_r.ptr()) && (_1dd721258_ReadI64(_2115_l) == _1dd721258_ReadI64(_2126_r)));;
			}
		}
		else if (_1dd723ada_IsU64(_2115_l.ptr())) {
			_case_begin_1d8111434:;
			{
				return (_1dd723ada_IsU64(_2126_r.ptr()) && (_1dd7214de_ReadU64(_2115_l) == _1dd7214de_ReadU64(_2126_r)));;
			}
		}
		else if (_1dd72438d_IsF64(_2115_l.ptr())) {
			_case_begin_1d811149a:;
			{
				return (_1dd72438d_IsF64(_2126_r.ptr()) && (_1dd721c92_ReadF64(_2115_l) == _1dd721c92_ReadF64(_2126_r)));;
			}
		}
		else if (_1dd724107_IsStr(_2115_l.ptr())) {
			_case_begin_1d8111522:;
			{
				return (_1dd724107_IsStr(_2126_r.ptr()) && (_1dd721a0b_ReadStr(_2115_l) == _1dd721a0b_ReadStr(_2126_r)));;
			}
		}
		else if (_1dd723d71_IsBool(_2115_l.ptr())) {
			_case_begin_1d8111599:;
			{
				return (_1dd723d71_IsBool(_2126_r.ptr()) && (_1dd721775_ReadBool(_2115_l) == _1dd721775_ReadBool(_2126_r)));;
			}
		}
		else if (_1dd724624_IsNil(_2115_l.ptr())) {
			_case_begin_1d811170e:;
			{
				return _1dd724624_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1d81112d0:;
			{
				return false;;
			}
		}
		_match_end_1d8110d29:;
	};
}



inline jule::Bool _1c68b06b7_equalCasting(jule::Ptr<_1c665e147_CastingExprModel> _4017_l, jule::Ptr<_1c665e147_CastingExprModel> _4039_r) {
	if ((!(_1c67bc11d_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1c68b6459_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c68b0a80_equalUnary(jule::Ptr<_1c665cde3_UnaryExprModel> _4715_l, jule::Ptr<_1c665cde3_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1c68b6459_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1c68b0e04_equalIndexing(jule::Ptr<_1c6660379_IndexingExprModel> _5418_l, jule::Ptr<_1c6660379_IndexingExprModel> _5441_r) {
	return (_1c68b6459_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1c68b6459_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1c68b1278_equalBinary(jule::Ptr<_1c665ca19_BinaryExprModel> _5916_l, jule::Ptr<_1c665ca19_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1c68b6459_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _1c68b6459_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1c68b6459_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1c68aee7a_typeData(&(_7016_l)) != _1c68aee7a_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d812008b:;
			{
				return (_7016_l.unsafe_cast_ptr<_1c672acb3_Var>() == _7030_r.cast_ptr<_1c672acb3_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d8120b2a:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>();;
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _1c68b6459_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d8120b91:;
			{
				return _1c68b0343_equalConst(_7016_l.cast_ptr<_1dd71e850_Const>(&__jule_any_type20), _7030_r.cast_ptr<_1dd71e850_Const>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d8120751:;
			{
				return _1c68b06b7_equalCasting(_7016_l.cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96), _7030_r.cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d81207b7:;
			{
				return _1c68b0a80_equalUnary(_7016_l.cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113), _7030_r.cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d812082d:;
			{
				return _1c68b0e04_equalIndexing(_7016_l.cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53), _7030_r.cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d8120894:;
			{
				return _1c68b1278_equalBinary(_7016_l.cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114), _7030_r.cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1d81206da:;
			{
				return false;;
			}
		}
		_match_end_1d81202cd:;
	};
}



inline void _1c68bc075_possibleNilRemove(jule::Ptr<_1c68bb096_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1c68bb87c_removeVar((*(_7827_n)).ptr(), _1c68bca48_getNilVar(_7837_m));
	};
}



inline jule::Bool _1c68bc43d_isGuaranteedNonNilExpr(jule::Ptr<_1c68bb096_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1d8126a76:;
			{
				return true;;
			}
		}
		_match_end_1d8126a10:;
	};
	return (((*(_8432_n)) != nullptr) && _1c68bbbbd_isSafe((*(_8432_n)).ptr(), _1c68bca48_getNilVar(_8442_m)));;
}



inline jule::Bool _1c68bc707_isNilValidType(jule::Ptr<_1c67bb8d1_TypeKind> _9223_t) {
	return (_1c67be31d_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1c68bca48_getNilVar(jule::Any _9414_m) {
	if ((!(_1c73d69c3_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d812812c:;
			{
				jule::Ptr<_1c672acb3_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1c672acb3_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1c672acb3_Var>());;
				};
				return _1c68bca48_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d812857d:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1d81280b6:;
	};
	return 0LLU;;
}



inline jule::Bool _1c73c6573_isConstantValidConditionalCase(jule::Ptr<_1c66b39d7_If>* _68736_i) {
	{
		auto &_match_expr{ (*((*(_68736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d8130574:;
			{
				jule::Ptr<_1dd71e850_Const> _6903_c = (*((*(_68736_i))))._field_Expr.unsafe_cast_ptr<_1dd71e850_Const>();;
				return (_1dd723d71_IsBool(_6903_c.ptr()) && _1dd721775_ReadBool(_6903_c));;
			}
		}
		_match_end_1d8130c39:;
	};
	return false;;
}



inline jule::Bool _1c73c6881_isUnreachableExpr(jule::Any* _69623_expr) {
	{
		auto &_match_expr{ (*(_69623_expr)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d81314cb:;
			{
				jule::Ptr<_1dd71e850_Const> _6993_c = (*(_69623_expr)).cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
				return (_1dd723d71_IsBool(_6993_c.ptr()) && (!(_1dd721775_ReadBool(_6993_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d813060c:;
			{
				jule::Ptr<_1c665ca19_BinaryExprModel> _7023_m = (*(_69623_expr)).cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_7023_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1c73c6881_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Left))._field_Model)) || _1c73c6881_isUnreachableExpr(&((*((*_7023_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1d8131e49:;
	};
	return false;;
}



inline jule::Bool _1c73c6b4a_isConstantValidMatchCase(jule::Ptr<_1c66b8822_Case>* _71130_case) {
	{
		auto expr = &((*((*(_71130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d81356de:;
		if (it != expr_end) {
			jule::Ptr<_1c6788b56_Data> *_7129_expr = it;
			{
				if (((_1c6789591_IsConst((*(_7129_expr)).ptr()) && _1dd723d71_IsBool((*(*(_7129_expr)).alloc)._field_Constant.ptr())) && _1dd721775_ReadBool((*((*(_7129_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1d81356de:;
			++it;
			goto _iter_begin_1d81356de;
		}
		_iter_end_1d81356de:;
	};
	return false;;
}



inline jule::Bool _1c73c6e8b_isUnreachableConditionalCase(jule::Ptr<_1c66b39d7_If>* _72034_i) {
	return _1c73c6881_isUnreachableExpr(&((*((*(_72034_i))))._field_Expr));;
}



inline jule::Bool _1c73c7222_isUnreachableMatchCase(jule::Ptr<_1c66b8822_Case>* _72428_case) {
	{
		auto expr = &((*((*(_72428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8137702:;
		if (it != expr_end) {
			jule::Ptr<_1c6788b56_Data> *_7259_expr = it;
			{
				if ((!(_1c73c6881_isUnreachableExpr(&((*((*(_7259_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1d8137702:;
			++it;
			goto _iter_begin_1d8137702;
		}
		_iter_end_1d8137702:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1c73cc656_checkForBitShiftOpt(jule::Ptr<_1c665c51e_OperandExprModel>* _59625_l, jule::Ptr<_1c665c51e_OperandExprModel>* _59648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1dd71dc6c_IsInt(_1c67bbccc_Str((*((*(_59625_l))))._field_Kind.ptr())))) || (!(_1dd71dc6c_IsInt(_1c67bbccc_Str((*((*(_59648_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1dd7222ae_AsU64((*((*(_59648_r))))._field_Model.cast_ptr<_1dd71e850_Const>(&__jule_any_type20).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _6042_j = _1dd6c0d2e_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _6052_z = static_cast<jule::U64>(_6042_j);;
	if ((static_cast<jule::F64>(_6052_z) != _6042_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _6052_z;
	return __jule_func_result;;
}



inline jule::Bool _1c73cca1e_areSameLvalueExprModel(jule::Any* _61328_l, jule::Any* _61343_r) {
	{
		auto &_match_expr{ (*(_61328_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d81dc026:;
			{
				return ((*(_61343_r)) == (*(_61328_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d81dbd39:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1d81dc8b7:;
						{
							goto _match_end_1d81dcd4b;
						}
					}
					else {
						_case_begin_1d81dcdb2:;
						{
							return false;;
						}
					}
					_match_end_1d81dcd4b:;
				};
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _6263_lsi = (*(_61328_l)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _6273_rsi = (*(_61343_r)).cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_6263_lsi))._field_Field != (*(_6273_rsi))._field_Field)) {
					return false;;
				};
				return _1c73cca1e_areSameLvalueExprModel(&((*((*_6263_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6273_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d81dc09d:;
			{
				{
					auto &_match_expr{ (*(_61343_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1d81de6aa:;
						{
							jule::Ptr<_1c665cde3_UnaryExprModel> _6394_ul = (*(_61328_l)).cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1c665cde3_UnaryExprModel> _6404_ur = (*(_61343_r)).cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_6394_ul))._field_Op))._field_Id != (*(*(_6404_ur))._field_Op.alloc)._field_Id) || ((*(*(_6394_ul))._field_Op.alloc)._field_Kind != (*(*(_6404_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1c73cca1e_areSameLvalueExprModel(&((*((*_6394_ul.alloc)._field_Expr))._field_Model), &((*(*(_6404_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1d81de633:;
				};
			}
		}
		_match_end_1d81dbeb0:;
	};
	return false;;
}



inline void _1c73cebdb_possibleDynamicRemove(jule::Ptr<_1c73cdb52_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1c73ce438_removeVar((*(_8131_d)).ptr(), _1c73d0769_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1c73ceee9_isDynamicValidType(jule::Ptr<_1c67bb8d1_TypeKind> _8727_t) {
	return _1c73bae19_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1c67bb8d1_TypeKind> _1c73d0428_isTypeGuaranteedDynamicData(jule::Ptr<_1c73cdb52_dynamic>* _8937_dy, jule::Ptr<_1c67bb8d1_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1c73bae19_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1c67c0891_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d8282d36:;
			{
				jule::Ptr<_1c665e147_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1c665e147_CastingExprModel>();;
				return _1c73d0428_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1d82833a8:;
	};
	jule::Uintptr _1022_var = _1c73d0769_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8284c39:;
		if (it != expr_end) {
			_1c73cd811_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1d8284c39:;
			++it;
			goto _iter_begin_1d8284c39;
		}
		_iter_end_1d8284c39:;
	};
	return nullptr;;
}



inline jule::Uintptr _1c73d0769_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1c73d84a8_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d8285410:;
			{
				jule::Ptr<_1c672acb3_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1c672acb3_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1c672acb3_Var>());;
				};
				return _1c73d0769_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d828608c:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d8285487:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c73d0769_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1d8285399:;
	};
	return 0LLU;;
}



inline jule::Bool _1c73d4240_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1c73d497c_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1c73d4608_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82954db:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1c73d497c_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1d82954db:;
			++it;
			_906_i++;
			goto _iter_begin_1d82954db;
		}
		_iter_end_1d82954db:;
	};
	return -1LL;;
}



inline jule::Bool _1c73d497c_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1c68aee7a_typeData(&(_9813_e1)) != _1c68aee7a_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1d829706a:;
			{
				jule::Ptr<_1dd71e850_Const> _1043_exprConst = _9828_e2.cast_ptr<_1dd71e850_Const>(&__jule_any_type20);;
				return ((_1dd722545_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1dd72624c_GtEq(_9813_e1.unsafe_cast_ptr<_1dd71e850_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d82970d1:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d8297147:;
			{
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>();;
				jule::Ptr<_1c666258a_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1c666258a_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1c68b6459_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d8296be6:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>();;
				jule::Ptr<_1c665cde3_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1c73d497c_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1d8296b80:;
			{
				return false;;
			}
		}
		_match_end_1d8296ab4:;
	};
}



inline void _1c73d4cac_possibleBoundaryRemove(jule::Ptr<_1c73d31c8_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d82974bb:;
		if (it != expr_end) {
			_1c73d2d87_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d829deea:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1c68b6459_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1d829deea;
							};
						}
						_iter_next_1d829deea:;
						++it;
						_1277_i++;
						goto _iter_begin_1d829deea;
					}
					_iter_end_1d829deea:;
				};
			}
			_iter_next_1d82974bb:;
			++it;
			goto _iter_begin_1d82974bb;
		}
		_iter_end_1d82974bb:;
	};
}



inline jule::Bool _1c73d5076_isBoundaryRiskyType(jule::Ptr<_1c67bb8d1_TypeKind> _13628_t) {
	return (_1c67bed57_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1c73d5340_isBoundaryValidType(jule::Ptr<_1c67bb8d1_TypeKind> _14128_t) {
	return ((_1c67c00dd_Slc(_14128_t.ptr()) != nullptr) || (_1c67bed57_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1c73d5609_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1c73d69c3_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1d82a13b5:;
			{
				jule::Ptr<_1c672acb3_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1c672acb3_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1c672acb3_Var>());;
				};
				return _1c73d5609_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1d82a1849:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1c666258a_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d82a142b:;
			{
				jule::Ptr<_1c665cde3_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1c665cde3_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c73d5609_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1d82a176c:;
	};
	return 0LLU;;
}



inline void _1c73d8684_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1c73d5d68_Copy=_332_l1;
	_1c73d6165_Deadcode=_332_l1;
	_1c73d641d_Append=_332_l1;
	_1c73d671a_Math=_332_l1;
	_1c73d69c3_Access=_332_l1;
	_1c73d6c7b_Inline=_332_l1;
	_1c73d7034_Ptr=_332_l1;
	_1c73d73ec_Cond=_332_l1;
	_1c73d763e_Str=_332_l1;
	_1c73d78d6_Slice=_332_l1;
	_1c73d7b8e_Assign=_332_l1;
	_1c73d7e47_Exceptional=_332_l1;
	_1c73d8200_Iter=_332_l1;
	_1c73d84a8_Dynamic=_332_l1;
}



inline void _1c75167a1_detectEnabled(void) {
	_1c751456d_exprEnabled=(((_1c73d7034_Ptr || _1c73d671a_Math) || _1c73d69c3_Access) || _1c73d73ec_Cond);
	_1c75147b0_scopeEnabled=((((((((_1c73d73ec_Cond || _1c73d641d_Append) || _1c73d5d68_Copy) || _1c73d763e_Str) || _1c73d78d6_Slice) || _1c73d7b8e_Assign) || _1c73d7e47_Exceptional) || _1c73d8200_Iter) || _1c73d84a8_Dynamic);
}



inline void _1c753d90a_Throw(jule::Str _910_msg) {
	jule::outln(_1d508560e_toStr(_910_msg));
	_208821a25_Exit(1LL);
}



inline jule::U64 _1d4c9a555_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1d4bc7d45_isCopyOptimizable(jule::Ptr<_1c6788b56_Data>* _118423_expr) {
	if ((!((*((*(_118423_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_118423_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1d8423856:;
			{
				return false;;
			}
		}
		_match_end_1d84237e0:;
	};
	return true;;
}



inline jule::Bool _1d4bc820d_isIterCopyOptimizable(jule::Ptr<_1c6788b56_Data>* _119527_expr, jule::Ptr<_1c672acb3_Var>* _119541_v) {
	if (((!((*((*(_119527_expr))))._field_Lvalue)) && (!(_1c67bd2b7_Mutable((*((*(_119527_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_119541_v))))._field_Mutable)) && (!((*((*(_119527_expr))))._field_Mutable)));;
}



inline jule::Bool _1d4bc863c_captureVarHandling(jule::Ptr<_1d4ca3c9a_ObjectCoder>* _120228_oc, jule::Ptr<_1c6660830_AnonFnExprModel>* _120251_m, jule::Ptr<_1c672acb3_Var>* _120277_v) {
	{
		auto expr = &((*((*(_120251_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8425a23:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _12039_cv = *it;
			{
				if ((_12039_cv == (*(_120277_v)))) {
					_1d4ca4482_write((*(_120228_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1d4be436c_var(&((*((*(_120228_oc))))._field_Buf), (*(_120277_v)));
					return true;;
				};
			}
			_iter_next_1d8425a23:;
			++it;
			goto _iter_begin_1d8425a23;
		}
		_iter_end_1d8425a23:;
	};
	return false;;
}



inline jule::Str _1d4bdb221_decomposeCommonEsq(jule::U8 _197823_b) {
	{
		auto &_match_expr{ _197823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1d8595b4e:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1d85959b7:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1d8595a2d:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1d8595522:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1d8595588:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1d8595610:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1d8595687:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1d859570e:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1d8595bb5:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1d8595c2b:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1d8592ee2:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d8595467:;
	};
}



inline jule::Str _1d4bdb52e_sbtoa(jule::U8 _200510_b) {
	if ((_200510_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_200510_b < 128LLU)) {
		jule::Str _20103_seq = _1d4bdb221_decomposeCommonEsq(_200510_b);;
		if (!(_20103_seq).empty()) {
			return _20103_seq;;
		};
		if (((32LL <= _200510_b) && (_200510_b <= 126LLU))) {
			return __jule_strFromByte(_200510_b);;
		};
	};
	jule::Str _20182_seq = _1dd710e4b_FmtUint(static_cast<jule::U64>(_200510_b), 8LL);;
	if ((_20182_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _20182_seq);;
	};
	return (jule::Str::lit("\\", 1) + _20182_seq);;
}



inline void _1d4bdb81a_cstrBytes(_20759e353_StrBuilder* _202519_s, jule::Str _202534_ctx) {
	{
		auto expr = &(_202534_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d859a7e1:;
		if (it != expr_end) {
			jule::U8 *_20269_b = it;
			{
				_2075a814d_WriteStr(_202519_s, _1d4bdb52e_sbtoa((*(_20269_b))));
			}
			_iter_next_1d859a7e1:;
			++it;
			goto _iter_begin_1d859a7e1;
		}
		_iter_end_1d859a7e1:;
	};
}



inline void _1d4bdbb4a_cstrLit(_20759e353_StrBuilder* _203117_s, jule::Str _203132_ctx) {
	_2075a8406_WriteByte(_203117_s, '\"');
	_1d4bdb81a_cstrBytes(_203117_s, _203132_ctx);
	_2075a8406_WriteByte(_203117_s, '\"');
}



inline void _1d4bdbee1_ftoa(_20759e353_StrBuilder* _203714_s, jule::F64 _203729_f, jule::I64 _203737_bitsize) {
	if ((_203737_bitsize != 32LL)) {
		if ((_203729_f == static_cast<jule::F64>(static_cast<jule::I64>(_203729_f)))) {
			_1d4bdc2cc_itoa(_203714_s, static_cast<jule::I64>(_203729_f));
			return;;
		};
		if ((_203729_f == static_cast<jule::F64>(static_cast<jule::U64>(_203729_f)))) {
			_1d4bdc5b8_utoa(_203714_s, static_cast<jule::U64>(_203729_f));
			return;;
		};
	};
	jule::Str _20482_m = _1dd6e97c5_FmtFloat(_203729_f, 'f', -1LL, _203737_bitsize);;
	_2075a814d_WriteStr(_203714_s, _20482_m);
	if ((!(_20876d664_Contains(_20482_m, jule::Str::lit(".", 1))))) {
		_2075a814d_WriteStr(_203714_s, jule::Str::lit(".0", 2));
	};
}



inline void _1d4bdc2cc_itoa(_20759e353_StrBuilder* _205514_s, jule::I64 _205529_x) {
	{
		
		if ((_205529_x == jule::MAX_I64)) {
			_case_begin_1d859ed89:;
			{
				_2075a814d_WriteStr(_205514_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_205529_x == jule::MIN_I64)) {
			_case_begin_1d859ee33:;
			{
				_2075a814d_WriteStr(_205514_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1d859ec68:;
	};
	_2075a814d_WriteStr(_205514_s, _1dd711314_FmtInt(_205529_x, 10LL));
	if (_2080742ab_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2075a8406_WriteByte(_205514_s, 'L');
	};
	_2075a8406_WriteByte(_205514_s, 'L');
}



inline void _1d4bdc5b8_utoa(_20759e353_StrBuilder* _207214_s, jule::U64 _207229_x) {
	{
		
		if ((_207229_x == jule::MAX_U64)) {
			_case_begin_1d85a2023:;
			{
				_2075a814d_WriteStr(_207214_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1d85a1dd0:;
	};
	_2075a814d_WriteStr(_207214_s, _1dd710e4b_FmtUint(_207229_x, 10LL));
	if (_2080742ab_Is64Bit(jule::Str::lit("arm64", 5))) {
		_2075a8406_WriteByte(_207214_s, 'L');
	};
	_2075a814d_WriteStr(_207214_s, jule::Str::lit("LU", 2));
}



inline void _1d4bdcc17_operatorOverloadingBinary(_20759e353_StrBuilder* _208635_buf, jule::Ptr<_1c665865d_StructIns>* _208657_s, jule::Str* _208673_l, jule::Str* _20873_r, jule::U64 _208711_op, jule::Str _208724_kind) {
	;
	jule::Ptr<_1c666d4ec_FnIns> _20896_f = static_cast<jule::Ptr<_1c666d4ec_FnIns>>(nullptr);;
	if ((_208711_op == static_cast<jule::U64>(51LLU))) {
		_20896_f=_1c73be390_FindOperator(_208657_s, static_cast<jule::U64>(50LLU), false);
		_2075a8406_WriteByte(_208635_buf, '!');
	} else {
		_20896_f=_1c73be390_FindOperator(_208657_s, _208711_op, false);
	};
	if ((_20896_f == nullptr)) {
		if (((_208711_op == static_cast<jule::U64>(50LLU)) || (_208711_op == static_cast<jule::U64>(51LLU)))) {
			static__1d4be3c95_structureIns(_208635_buf, _208657_s);
			_2075a814d_WriteStr(_208635_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1d85a5a2c;
		};
		__jule_panic_s(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2103:3"));;
	};
	static__1d4be30e6_funcIns(_208635_buf, &(_20896_f));
	_julec_label_1d85a5a2c:;
	_2075a814d_WriteStr(_208635_buf, jule::Str::lit("(&", 2));
	_2075a814d_WriteStr(_208635_buf, (*(_208673_l)));
	_2075a814d_WriteStr(_208635_buf, jule::Str::lit(", ", 2));
	_2075a814d_WriteStr(_208635_buf, (*(_20873_r)));
	_2075a8406_WriteByte(_208635_buf, ')');
}



inline jule::Slice<jule::U8> _1d4cb1071_concatAllParts(jule::Slice<jule::Ptr<_1c661e327_Token>> _124719_parts) {
	jule::I64 _12486_n = 0LL;;
	{
		auto expr = &(_124719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8948e36:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_12499_part = it;
			{
				_12486_n+=(*((*(_12499_part))))._field_Kind.len();
			}
			_iter_next_1d8948e36:;
			++it;
			goto _iter_begin_1d8948e36;
		}
		_iter_end_1d8948e36:;
	};
	if ((_12486_n == 0LL)) {
		return nullptr;;
	};
	_20759e353_StrBuilder _12556_s = static__2075a7c41_New(_12486_n);;
	{
		auto expr = &(_124719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8947d36:;
		if (it != expr_end) {
			jule::Ptr<_1c661e327_Token> *_12569_p = it;
			{
				_2075a814d_WriteStr(&_12556_s, (*((*(_12569_p))))._field_Kind);
			}
			_iter_next_1d8947d36:;
			++it;
			goto _iter_begin_1d8947d36;
		}
		_iter_end_1d8947d36:;
	};
	return _2075a93e6_Buf(&_12556_s);;
}



inline jule::Bool _1d4cb137e_isHeadDecl(jule::Ptr<_1c666a51b_Fn>* _126320_m) {
	if ((((*((*(_126320_m))))._field_Generics.len() > 0LL) || ((*((*(_126320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1c73bb4e1_IsOpMethod(_126320_m)) {
		return true;;
	};
	jule::Ptr<_1c666d4ec_FnIns> _12706_mi = (*((*(_126320_m))))._field_Instances[0LL];;
	;
	return static__1c672c3ad_Dispose(_1c6659708_FindMethod((*(_12706_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1d4cb1648_defaultEq(jule::Ptr<_1c665865d_StructIns>* _127615_s) {
	return ((*((*(_127615_s))))._field_Comparable && ((*((*(_127615_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1d4cc0811_ableToInit(jule::Ptr<_1c67bb8d1_TypeKind>* _46620_t) {
	return (!(_1c67bc77d_Binded((*(_46620_t)).ptr())));;
}



inline jule::Bool _1d4cc0adb_shouldInitialized(jule::Ptr<_1c67bb8d1_TypeKind>* _47327_t) {
	if ((!(_1d4cc0811_ableToInit(_47327_t)))) {
		return false;;
	};
	jule::Ptr<_1c67c49e9_Prim> _4772_prim = _1c67be087_Prim((*(_47327_t)).ptr());;
	if ((_4772_prim != nullptr)) {
		return ((!(_1c67c824a_IsAny(_4772_prim))) && (!(_1c67c7eb4_IsStr(_4772_prim))));;
	};
	{
		
		if ((_1c67be31d_Sptr((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab0d6c:;
			{
				return false;;
			}
		}
		else if ((_1c67c0b27_Map((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab1ae8:;
			{
				return false;;
			}
		}
		else if ((_1c67c00dd_Slc((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab0e05:;
			{
				return false;;
			}
		}
		else if ((_1c67c0891_Trait((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab0e6b:;
			{
				return false;;
			}
		}
		else if ((_1c67c0374_Fn((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab1c80:;
			{
				return false;;
			}
		}
		else if ((_1c67bed57_Arr((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab1ce6:;
			{
				jule::Ptr<_1c67cb319_Arr> _4937_arr = _1c67bed57_Arr((*(_47327_t)).ptr());;
				return _1d4cc0811_ableToInit(&((*(_4937_arr))._field_Elem));;
			}
		}
		else if ((_1c67c060a_Struct((*(_47327_t)).ptr()) != nullptr)) {
			_case_begin_1d8ab1d5c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1d8ab0c6d:;
			{
				return true;;
			}
		}
		_match_end_1d8ab1158:;
	};
}



inline void _20882bc0b_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_1d508560e_toStr(_3022_msg));
}



inline void _20882be81_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _20882ba30_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_20882ba30_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b594dc:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1d8b594dc:;
			++it;
			goto _iter_begin_1d8b594dc;
		}
		_iter_end_1d8b594dc:;
	};
	_20759e353_StrBuilder _496_s = static__2075a7c41_New(32LL);;
	;
	{
		auto expr = &(_20882ba30_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b5a5cb:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_2075a814d_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_2075a814d_WriteStr(&_496_s, _208768cd0_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_2075a814d_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_2075a8406_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1d8b5a5cb:;
			++it;
			_516_i++;
			goto _iter_begin_1d8b5a5cb;
		}
		_iter_end_1d8b5a5cb:;
	};
	jule::outln(_1d8b5b599_toStr(_496_s));
}



inline void _20882c1b2_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(_1d508560e_toStr(jule::Str::lit("jule0.0.16 @master", 18)));
}



inline void _20882c3c1_toolDistos(void) {
	jule::out(_1d508560e_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::out(_1d8b6321b_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::out(_1d508560e_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1d8b6321b_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::out(_1d508560e_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1d8b6321b_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::outln(_1d508560e_toStr(jule::Str()));
}



inline void _20882c536_toolDistarch(void) {
	jule::out(_1d508560e_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::out(_1d8b6a333_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::out(_1d508560e_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1d8b6a333_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::out(_1d508560e_toStr(jule::Str::lit(" ", 1)));
	jule::out(_1d8b6a333_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::outln(_1d508560e_toStr(jule::Str()));
}



inline void _20882c734_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(_1d508560e_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1d8b739ce:;
			{
				_20882c3c1_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1d8b721d6:;
			{
				_20882c536_toolDistarch();
			}
		}
		else {
			_case_begin_1d8b71ed8:;
			{
				_20882bc0b_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1d8b720b5:;
	};
}



inline void _20882c965_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(_1d508560e_toStr(jule::Str::lit("julec version: jule0.0.16 @master", 33)));
	jule::outln(_1d508560e_toStr(jule::Str::lit("architecture: arm64", 19)));
	jule::outln(_1d508560e_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::outln(_1d508560e_toStr((jule::Str::lit("default compiler: ", 18) + _208827b3b_Compiler)));
	jule::outln(_1d508560e_toStr((jule::Str::lit("default C++ standard: ", 22) + _208829401_CppStd)));
}



inline void _20882cca6_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(_1d508560e_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1d8b774a5:;
			{
				({
					auto except = static__238adabb0_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_20882bc0b_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1d8b767e5:;
			{
				_20882bc0b_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1d8b76e11:;
	};
}



inline jule::Bool _20882cee8_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1d8b7894b:;
			{
				_20882be81_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1d8b789b2:;
			{
				_20882c1b2_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1d8b78a28:;
			{
				_20882c734_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1d8b78220:;
			{
				_20882c965_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1d8b78286:;
			{
				_20882cca6_mod(_15320_args);
			}
		}
		else {
			_case_begin_1d8b77087:;
			{
				return false;;
			}
		}
		_match_end_1d8b77a5a:;
	};
	return true;;
}



inline void _20882d191_showInfo(void) {
	jule::outln(_1d508560e_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _2075d5a1b_Args();;
	if ((_1896_args.len() < 2LL)) {
		_20882d191_showInfo();
		return;;
	};
	if (_20882cee8_processCommand(&(_1896_args))) {
		return;;
	};
	_1d4d40b8e_compileCommand(&(_1896_args));
}



inline void _20882dbb9_enableVtp(void) {
	jule::Uintptr _192_hOut = _2210a0ad8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_2210a315c_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_2210a3767_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _20882dd84_init(void) {
	_20882dbb9_enableVtp();
}



inline void _1d4d3caae_init(void) {
	_208827b3b_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_238ad9d35_File> _1d4d3cd78_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _2087752c5_Dir((*(_4316_path)));;
	({
		auto except = static__208776abd_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__208775e30_Create(_442_dir);
				if (!except.ok()) {
					_1c753d90a_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__238ada550_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c753d90a_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1d4d3d021_clearObjects(void) {
	({
		auto except = static__238addab4_Remove(_1d4d3e176_getCompilePath());
		if (!except.ok()) {
			jule::outln(_1d508560e_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__208776161_Remove(_1d4d3c383_OutDir);
}



inline void _1d4d3d32e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_208819a0c_Cmd> _736_cmd = static__208819e4c_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_20876d2e0_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _20881a14a_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1d8b81118:;
					{
						static__1c7539cd0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1d8b8117e:;
					{
						static__1c7539cd0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1d8b80aeb:;
					{
						static__1c7539cd0_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1d8b80c0b:;
			};
			_1c753d90a_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _20881a5ce_Wait(_736_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _208827b3b_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c7539cd0_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1c753d90a_Throw(jule::Str());
	};
	_1d4d3d021_clearObjects();
}



inline jule::Bool _1d4d3d5e8_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _20876bd9e_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _20806262e_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1d4d3d829_pushCompCmdClang(_20759e353_StrBuilder* _10726_cmd) {
	_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _208829401_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1d8b8432a:;
			{
				_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1d8b8501d:;
			{
				_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d8b85084:;
			{
				_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1d8b84dec:;
	};
	_2075a8406_WriteByte(_10726_cmd, ' ');
	if (_20882a523_Production) {
		_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2075a814d_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1d4d3da5a_pushCompCmdGcc(_20759e353_StrBuilder* _13324_cmd) {
	_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _208829401_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1d8b864c5:;
			{
				_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1d8b8653b:;
			{
				_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d8b88054:;
			{
				_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1d8b87e33:;
	};
	_2075a8406_WriteByte(_13324_cmd, ' ');
	if (_20882a523_Production) {
		_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_2075a814d_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1d4d3dede_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c73b4d7a_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_2088291e2_CompilerPath);;
	_20759e353_StrBuilder _1616_cmd = static__2075a7c41_New(64LL);;
	{
		auto &_match_expr{ _208827b3b_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1d8b8b145:;
			{
				_1d4d3da5a_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1d8b8b277:;
			{
				_1d4d3d829_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1d8b8ac38:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b8b530:;
		if (it != expr_end) {
			jule::Ptr<_1c66d63cd_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1d4d3d5e8_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_2075a814d_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_2075a8406_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1d8b8b530:;
			++it;
			goto _iter_begin_1d8b8b530;
		}
		_iter_end_1d8b8b530:;
	};
	if (!(_1d4d3c905_Out).empty()) {
		_2075a814d_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_2075a814d_WriteStr(&_1616_cmd, _1d4d3c905_Out);
		_2075a8406_WriteByte(&_1616_cmd, ' ');
	};
	_2075a814d_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8b8e0c1:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_2075a8406_WriteByte(&_1616_cmd, ' ');
				_2075a814d_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1d8b8e0c1:;
			++it;
			goto _iter_begin_1d8b8e0c1;
		}
		_iter_end_1d8b8e0c1:;
	};
	if ((_208822a9d_Os == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		_2075a814d_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _2075a8945_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1d4d3e176_getCompilePath(void) {
	return _2087745d2_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1d4d3c383_OutDir; (*it++) = _1d4d3c64c_OutName; __jule_collection; }));;
}



inline void _1d4d3e3a7_applyTargetIndependentOptimizations(jule::Ptr<_1c73b4d7a_IR>* _20545_ir) {
	jule::Ptr<_1c751499c_Optimizer> _2066_opt = static__1c7514e53_New(_20545_ir);;
	_1c751653c_Optimize(_2066_opt.ptr());
}



inline void _1d4d3e550_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _208827b3b_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1d8b91887:;
			{
				_1c753d90a_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1d8b917bb:;
			{
				if ((_2088291e2_CompilerPath).empty()) {
					_2088291e2_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1d8b9147a:;
			{
				if ((_2088291e2_CompilerPath).empty()) {
					_2088291e2_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1d8b9049b:;
			{
				_1c753d90a_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _208827b3b_Compiler));
			}
		}
		_match_end_1d8b912b0:;
	};
}



inline void _1d4d3e75e_checkTargetArch(jule::Str _22720_arch) {
	if ((((_22720_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_22720_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1c753d90a_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1d4d3e990_checkTargetOs(jule::Str _23518_os) {
	if ((((_23518_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_23518_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1c753d90a_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1d4d3ebc1_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c753d90a_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _20876d2e0_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1c753d90a_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1d4d3e990_checkTargetOs(_2532_os);
		_208822a9d_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1d4d3e75e_checkTargetArch(_2536_arch);
		_208822d56_Arch=_2536_arch;
	};
	_1dd715bdc_UpdateTarget();
}



inline void _1d4d3ee02_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c753d90a_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1d8b987e5:;
			{
				goto _match_end_1d8b98163;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1d8b9888e:;
			{
				_1c73d8684_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1d8b97eba:;
			{
				_1c753d90a_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1d8b98163:;
	};
}



inline void _1d4d402ba_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _208829401_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1d8b996a3:;
			{
				goto _match_end_1d8b99175;
			}
		}
		else {
			_case_begin_1d8b981c9:;
			{
				_1c753d90a_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _208829401_CppStd));
			}
		}
		_match_end_1d8b99175:;
	};
}



inline jule::Slice<jule::Str> _1d4d40485_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1d4d373d3_FlagSet> _2966_fs = static__1d4d37702_New();;
	_1d8b9b0ab_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1d8b9b0ab_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1d8b9b0ab_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1d4d3c905_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_208829610_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_2088298a7_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1d8b9b0ab_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_208827b3b_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1d8b9b0ab_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2088291e2_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_20882a523_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_208829e18_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_20882a2d1_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_20882a7ba_AtomicRC)))), jule::Str::lit("atomic-rc", 9), 0LL, jule::Str::lit("Atomic reference counting", 25));
	_1d8b9b0ab_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_208829401_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d5d68_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d6165_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d641d_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d671a_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d69c3_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d6c7b_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d7034_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d73ec_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d763e_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d78d6_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d7b8e_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d7e47_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d8200_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1d8ba51c5_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c73d84a8_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3256_content = ({
		auto except = _1d4d385c1_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1c753d90a_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1d4d3e550_checkCompilerFlag();
	_1d4d402ba_checkCppStdFlag();
	_1d4d3ebc1_checkTargetFlag(&(_2946_target));
	_1d4d3ee02_checkOptFlag(&(_2936_opt));
	return _3256_content;;
}



inline void _1d4d40694_setupSemaFlags(jule::I64* _33824_flags) {
	if (_208829610_Shadowing) {
		(*(_33824_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c73b4d7a_IR> _1d4d4095d_buildIr(jule::Slice<jule::Str>* _34413_args) {
	jule::Slice<jule::Str> _3452_content = _1d4d40485_checkFlags(_34413_args);;
	jule::I64 _3476_semaFlags = static_cast<jule::I64>(0LL);;
	_1d4d40694_setupSemaFlags(&(_3476_semaFlags));
	if ((_3452_content.len() == 0LL)) {
		_1c753d90a_Throw(_20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3452_content.len() > 1LL)) {
		_1c753d90a_Throw((jule::Str::lit("undefined content: ", 19) + _3452_content[1LL]));
	};
	jule::Str _3556_path;
	jule::Bool _35512_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _208774b32_Abs(_3452_content[0LL]);
		_3556_path = __jule_assign_result.__jule_result_arg0;
		_35512_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35512_ok))) {
		_1c753d90a_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_238adbe69_Status> _3612_inf = ({
		auto except = static__208776abd_Of(_208821eed_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c753d90a_Throw(_20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_238adbe69_Status>(nullptr);});
	});;
	if ((!(_238adc376_IsDir(_3612_inf.ptr())))) {
		_1c753d90a_Throw(_20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c73b4d7a_IR> _3696_ir;
	jule::Slice<_20806e73a_Log> _36910_logs;
	({
		__jule_tuple_x_1c73b4d7a_IR__jule_tuple_s_20806e73a_Log __jule_assign_result = static__1c73b5353_Build(_3556_path, _3476_semaFlags);
		_3696_ir = __jule_assign_result.__jule_result_arg0;
		_36910_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3696_ir == nullptr) && (_36910_logs == nullptr))) {
		_1c753d90a_Throw(_20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3556_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36910_logs != nullptr)) {
		static__1c753ce7b_PrintLogs(&(_36910_logs));
		_1c753d90a_Throw(jule::Str());
	};
	return _3696_ir;;
}



inline void _1d4d40b8e_compileCommand(jule::Slice<jule::Str>* _38424_args) {
	((*(_38424_args))).mut_slice(1LL);;
	if ((*(_38424_args))[0LL].equal("test", 4)) {
		_208829b60_Test=true;
		((*(_38424_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1c73b4d7a_IR> _3906_ir = _1d4d4095d_buildIr(_38424_args);;
	;
	if ((!(_208829b60_Test))) {
		jule::Ptr<_1c666a51b_Fn> _3957_main = _1c66da8bb_FindFn((*(_3906_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3957_main == nullptr)) {
			_1c753d90a_Throw(_20806eb9c_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1d4d3e3a7_applyTargetIndependentOptimizations(&(_3906_ir));
	_1c73b63ba_Order(_3906_ir);
	jule::Str _4062_compPath = _1d4d3e176_getCompilePath();;
	jule::Str _4072_compiler;
	jule::Str _40712_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1d4d3dede_genCompileCmd(_4062_compPath, &(_3906_ir));
		_4072_compiler = __jule_assign_result.__jule_result_arg0;
		_40712_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1d4ca3c9a_ObjectCoder> _4096_oc = static__1d4ca41c9_New(&(_3906_ir), _1d4ca1eeb_SerializationInfo{._field_Compiler=_4072_compiler, ._field_CompilerCommand=_40712_compilerCmd});;
	if (_208829b60_Test) {
		jule::Ptr<_1d4bddc5c_TestCoder> _4147_tc = static__1d4bde213_New(&(_4096_oc));;
		_1d4be0588_Serialize(_4147_tc);
	} else {
		_1d4cb0bdb_Serialize(_4096_oc);
	};
	jule::Ptr<_238ad9d35_File> _4206_file = _1d4d3cd78_openOutput(&(_4062_compPath));;
	({
		auto except = _238ade048_Write(_4206_file.ptr(), _2075a93e6_Buf(&(*(_4096_oc))._field_Buf));
		if (!except.ok()) {
			_1c753d90a_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _238adb3ec_Close(_4206_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:424:2"));
	});
	if ((!(_2088298a7_Transpilation))) {
		_1d4d3d32e_compileIr(_4072_compiler, _40712_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_208822e99_init();
	_1dd715d63_init();
	_20882dd84_init();
	_1d4d3caae_init();

}

inline jule::Bool __jule_anon1c5407562(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666c474_ParamIns> _24921_p1, jule::Ptr<_1c666c474_ParamIns> _24936_p2) {
	if (((*((*(_24921_p1))._field_Decl))._field_Mutable != (*(*(_24936_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1c6669196_IsSelf((*(_24921_p1))._field_Decl)) {
		if ((!(_1c6669196_IsSelf((*(_24936_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1c666942c_IsRef((*(_24921_p1))._field_Decl) != _1c666942c_IsRef((*(_24936_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24921_p1))._field_Decl.alloc)._field_Reference != (*(*(_24936_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24921_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24936_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1c67bc11d_Equal((*_24921_p1.alloc)._field_Kind, (*(_24936_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1d676d28a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1d676d28a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d676d28a_ctx>();
	return ((!(_1c667d496_isImplicitImport(_49935_spkg))) && ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path));;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d67d9d84(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _6521_e, jule::Ptr<_1c663c961_FnCallExpr>* _6536_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d67d9d84_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d67d9d84_ctx>();
	return _1c668704e__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d67dbd0e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _7221_e, jule::Ptr<_1c663c961_FnCallExpr>* _7236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d67dbd0e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d67dbd0e_ctx>();
	return _1c668744a__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6803be4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _17821_e, jule::Ptr<_1c663c961_FnCallExpr>* _17836_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6803be4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6803be4_ctx>();
	return _1c668a272__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6805b6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _18521_e, jule::Ptr<_1c663c961_FnCallExpr>* _18536_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6805b6e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6805b6e_ctx>();
	return _1c668a66d__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6817103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _28321_e, jule::Ptr<_1c663c961_FnCallExpr>* _28336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6817103_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6817103_ctx>();
	return _1c668d484__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d682d955(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _40221_e, jule::Ptr<_1c663c961_FnCallExpr>* _40236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d682d955_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d682d955_ctx>();
	return _1c66912bc__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68308d0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _40921_e, jule::Ptr<_1c663c961_FnCallExpr>* _40936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68308d0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68308d0_ctx>();
	return _1c6691ab4__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d683285a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _41621_e, jule::Ptr<_1c663c961_FnCallExpr>* _41636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d683285a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d683285a_ctx>();
	return _1c66916b8__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d10ce(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _97421_e, jule::Ptr<_1c663c961_FnCallExpr>* _97436_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68d10ce_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68d10ce_ctx>();
	return _1c6696525__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d3059(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98121_e, jule::Ptr<_1c663c961_FnCallExpr>* _98136_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68d3059_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68d3059_ctx>();
	return _1c6696921__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d4ed4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _98821_e, jule::Ptr<_1c663c961_FnCallExpr>* _98836_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68d4ed4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68d4ed4_ctx>();
	return _1c6697218__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d6e5e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _99521_e, jule::Ptr<_1c663c961_FnCallExpr>* _99536_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68d6e5e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68d6e5e_ctx>();
	return _1c6697614__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68d8dd9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _100221_e, jule::Ptr<_1c663c961_FnCallExpr>* _100236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68d8dd9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68d8dd9_ctx>();
	return _1c6697a10__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dad64(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _100921_e, jule::Ptr<_1c663c961_FnCallExpr>* _100936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68dad64_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68dad64_ctx>();
	return _1c6697e0b__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dccde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _101621_e, jule::Ptr<_1c663c961_FnCallExpr>* _101636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68dccde_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68dccde_ctx>();
	return _1c6698307__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68dec69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _102321_e, jule::Ptr<_1c663c961_FnCallExpr>* _102336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68dec69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68dec69_ctx>();
	return _1c6698703__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e1e69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _103021_e, jule::Ptr<_1c663c961_FnCallExpr>* _103036_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68e1e69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68e1e69_ctx>();
	return _1c6698aee__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e3de4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _103721_e, jule::Ptr<_1c663c961_FnCallExpr>* _103736_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68e3de4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68e3de4_ctx>();
	return _1c669b1c8__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e5d6e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _104421_e, jule::Ptr<_1c663c961_FnCallExpr>* _104436_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68e5d6e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68e5d6e_ctx>();
	return _1c669a0d9__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e7ce9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _105121_e, jule::Ptr<_1c663c961_FnCallExpr>* _105136_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68e7ce9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68e7ce9_ctx>();
	return _1c6698eea__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68e9c74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _105821_e, jule::Ptr<_1c663c961_FnCallExpr>* _105836_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68e9c74_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68e9c74_ctx>();
	return _1c66993e6__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68ebbee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _106521_e, jule::Ptr<_1c663c961_FnCallExpr>* _106536_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68ebbee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68ebbee_ctx>();
	return _1c66997e2__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d68edb79(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _107221_e, jule::Ptr<_1c663c961_FnCallExpr>* _107236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d68edb79_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d68edb79_ctx>();
	return _1c6699bdd__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6900b04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _107921_e, jule::Ptr<_1c663c961_FnCallExpr>* _107936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6900b04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6900b04_ctx>();
	return _1c669a4d5__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6902a7e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _108621_e, jule::Ptr<_1c663c961_FnCallExpr>* _108636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6902a7e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6902a7e_ctx>();
	return _1c669a8d1__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6904a09(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _109321_e, jule::Ptr<_1c663c961_FnCallExpr>* _109336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6904a09_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6904a09_ctx>();
	return _1c669accc__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6906984(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _110021_e, jule::Ptr<_1c663c961_FnCallExpr>* _110036_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6906984_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6906984_ctx>();
	return _1c6696d1c__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6932ecc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _126221_e, jule::Ptr<_1c663c961_FnCallExpr>* _126236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6932ecc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6932ecc_ctx>();
	return _1c669c54d__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6934e57(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _126921_e, jule::Ptr<_1c663c961_FnCallExpr>* _126936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6934e57_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6934e57_ctx>();
	return _1c669c949__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6936dd2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _127621_e, jule::Ptr<_1c663c961_FnCallExpr>* _127636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6936dd2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6936dd2_ctx>();
	return _1c669cd45__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6938d5c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _128321_e, jule::Ptr<_1c663c961_FnCallExpr>* _128336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6938d5c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6938d5c_ctx>();
	return _1c669d241__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693acd7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _129021_e, jule::Ptr<_1c663c961_FnCallExpr>* _129036_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d693acd7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d693acd7_ctx>();
	return _1c669d63c__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693cc62(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _129721_e, jule::Ptr<_1c663c961_FnCallExpr>* _129736_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d693cc62_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d693cc62_ctx>();
	return _1c669da38__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d693ebdc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _130421_e, jule::Ptr<_1c663c961_FnCallExpr>* _130436_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d693ebdc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d693ebdc_ctx>();
	return _1c669de34__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d6954927(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _142921_e, jule::Ptr<_1c663c961_FnCallExpr>* _142936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d6954927_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6954927_ctx>();
	return _1c66a1bd4__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69568a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _143621_e, jule::Ptr<_1c663c961_FnCallExpr>* _143636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69568a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69568a2_ctx>();
	return _1c66a20d0__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d695882c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _144321_e, jule::Ptr<_1c663c961_FnCallExpr>* _144336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d695882c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d695882c_ctx>();
	return _1c66a24cb__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c1103(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _194921_e, jule::Ptr<_1c663c961_FnCallExpr>* _194936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69c1103_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69c1103_ctx>();
	return _1c66a5e2a__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c307d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _195621_e, jule::Ptr<_1c663c961_FnCallExpr>* _195636_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69c307d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69c307d_ctx>();
	return _1c66a6326__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c5008(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _196321_e, jule::Ptr<_1c663c961_FnCallExpr>* _196336_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69c5008_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69c5008_ctx>();
	return _1c66a6722__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c6e83(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _197021_e, jule::Ptr<_1c663c961_FnCallExpr>* _197036_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69c6e83_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69c6e83_ctx>();
	return _1c66a6b1d__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69c8e0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _197721_e, jule::Ptr<_1c663c961_FnCallExpr>* _197736_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69c8e0d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69c8e0d_ctx>();
	return _1c66a7019__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69cad88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _198421_e, jule::Ptr<_1c663c961_FnCallExpr>* _198436_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69cad88_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69cad88_ctx>();
	return _1c66a7415__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69ccd13(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _199121_e, jule::Ptr<_1c663c961_FnCallExpr>* _199136_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69ccd13_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69ccd13_ctx>();
	return _1c66a7811__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69cec8d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _199821_e, jule::Ptr<_1c663c961_FnCallExpr>* _199836_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69cec8d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69cec8d_ctx>();
	return _1c66a7c0c__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d1e8d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _200521_e, jule::Ptr<_1c663c961_FnCallExpr>* _200536_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69d1e8d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69d1e8d_ctx>();
	return _1c66a8108__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d3e18(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _201221_e, jule::Ptr<_1c663c961_FnCallExpr>* _201236_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69d3e18_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69d3e18_ctx>();
	return _1c66a8504__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1c6788b56_Data> __jule_anon_1d69d5d93(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678a87d_eval>* _201921_e, jule::Ptr<_1c663c961_FnCallExpr>* _201936_fc, jule::Ptr<_1c6788b56_Data>* ) {
	jule::Ptr<__jule_anon_1d69d5d93_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69d5d93_ctx>();
	return _1c66a8900__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1d69e2168(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _6415_sema, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1d69e2168_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d69e2168_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d69e3224:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1c6641b0d_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1c67b9eea_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1d69e3224;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c67bb8d1_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1d69e5eb3:;
					if (it != expr_end) {
						jule::Ptr<_1c6634903_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1c67bb8d1_TypeKind> _7310_kind = _1c670e6d1_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1c67dc083_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1d69e7d1c:;
										{
											jule::Ptr<_1c663500d_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1c663500d_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1c66ad41b_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1d69e8548;
											};
										}
									}
									_match_end_1d69e7c95:;
								};
								return false;;
							};
							_julec_label_1d69e8548:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c67bb8d1_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1d69e5eb3:;
						++it;
						goto _iter_begin_1d69e5eb3;
					}
					_iter_end_1d69e5eb3:;
				};
			}
			_iter_next_1d69e3224:;
			++it;
			_659_i++;
			goto _iter_begin_1d69e3224;
		}
		_iter_end_1d69e3224:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1d6dbb61e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _103742_sema) {
	jule::Ptr<__jule_anon_1d6dbb61e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6dbb61e_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_103047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6dbc620:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _103916_p = *it;
			{
				if ((!(_1c6669196_IsSelf((*(_103916_p))._field_Decl.ptr())))) {
					(*_103916_p.alloc)._field_Kind=_1c67140a9_buildNonGenericTypeKind((*(_103742_sema)), &((*((*(*(_103916_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
					__jule_func_result=(__jule_func_result && ((*_103916_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1d6dbc620:;
			++it;
			goto _iter_begin_1d6dbc620;
		}
		_iter_end_1d6dbc620:;
	};
	if ((!(_1c666a9c2_IsVoid((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result=_1c67140a9_buildNonGenericTypeKind((*(_103742_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_103047_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(__jule_closure_ctx.alloc->_103111_generics), __jule_closure_ctx.alloc->_103063_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_103047_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1d6dd45e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _114042_sema) {
	jule::Ptr<__jule_anon_1d6dd45e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6dd45e3_ctx>();
	return __jule_closure_ctx.alloc->_113346_algo(_114042_sema, &(__jule_closure_ctx.alloc->_11387_generics));;
}

inline jule::Bool __jule_anon_1d6dd8dcd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c670684e_sema>* _115637_sema, jule::Slice<jule::Ptr<_1c67baade_TypeAlias>>* _115655_generics) {
	jule::Ptr<__jule_anon_1d6dd8dcd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d6dd8dcd_ctx>();
	jule::Bool _11578_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d6dda374:;
		if (it != expr_end) {
			jule::Ptr<_1c666c474_ParamIns> _115816_p = *it;
			{
				if (_1c6669196_IsSelf((*(_115816_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1d6dda374;
					};
					if (_1c666942c_IsRef((*(_115816_p))._field_Decl)) {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)});
					} else {
						(*_115816_p.alloc)._field_Kind=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Owner, (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data0)});
					};
				} else {
					(*(_115816_p))._field_Kind=_1c6710d31_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*_115816_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
					if (((*_115816_p.alloc)._field_Kind != nullptr)) {
						_1c6715d03_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_115816_p));
					} else {
						_11578_ok=false;
					};
				};
			}
			_iter_next_1d6dda374:;
			++it;
			goto _iter_begin_1d6dda374;
		}
		_iter_end_1d6dda374:;
	};
	if ((!(_1c666a9c2_IsVoid((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result=_1c6710d31_buildTypeWithGenerics((*(_115637_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_115237_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_115655_generics)), (*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Refers);
		_11578_ok=(((*__jule_closure_ctx.alloc->_115237_f.alloc)._field_Result != nullptr) && _11578_ok);
	};
	return _11578_ok;;
}

inline jule::Bool __jule_anon_1d746c719(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _191543_imp) {
	jule::Ptr<__jule_anon_1d746c719_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d746c719_ctx>();
	if ((((*__jule_closure_ctx.alloc->_191335_s.alloc)._field_Ns.len() == 1LL) && ((*(_191543_imp))._field_Alias == __jule_closure_ctx.alloc->_19143_path))) {
		return true;;
	};
	return (((*_191543_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_19143_path) && _1c66d9029_isAccessibleViaSelection(_191543_imp));;
}

inline jule::Str __jule_anon1d77ae8c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _87319_def) {
	{
		auto &_match_expr{ (*(_87319_def)) };
		
		if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1d77b09c4:;
			{
				return (*((*(_87319_def)).cast_ptr<_1c67baade_TypeAlias>(&__jule_any_type27)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1d77b07e8:;
			{
				return (*((*(_87319_def)).cast_ptr<_1c6655803_Struct>(&__jule_any_type23)))._field_Ident;;
			}
		}
		else {
			_case_begin_1d77b03a8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1d77b0342:;
	};
}

inline jule::Bool __jule_anon_1d7844690(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _156043_imp) {
	jule::Ptr<__jule_anon_1d7844690_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d7844690_ctx>();
	if ((((*__jule_closure_ctx.alloc->_155836_decl.alloc)._field_Idents.len() == 1LL) && ((*(_156043_imp))._field_Alias == __jule_closure_ctx.alloc->_15593_path))) {
		return true;;
	};
	return (((*_156043_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15593_path) && _1c66d9029_isAccessibleViaSelection(_156043_imp));;
}

inline void __jule_anon_1d806b34a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _22131_file) {
	jule::Ptr<__jule_anon_1d806b34a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d806b34a_ctx>();
	{
		auto expr = &((*((*(_22131_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d806bcb8:;
		if (it != expr_end) {
			jule::Ptr<_1c672acb3_Var> _22216_v = *it;
			{
				if (_1c73bd0a3_HasDirective(&((*(_22216_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1d8061ede_isLive(__jule_closure_ctx.alloc->_self_, &(_22216_v))))) {
						_1d8062396_pushLive(__jule_closure_ctx.alloc->_self_, _22216_v);
						_1c750b257_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_22216_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1d806bcb8:;
			++it;
			goto _iter_begin_1d806bcb8;
		}
		_iter_end_1d806bcb8:;
	};
	{
		auto expr = &((*((*(_22131_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d806de52:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _23016_f = *it;
			{
				if (_1c73bd0a3_HasDirective(&((*(_23016_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_23016_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1d806e749:;
						if (it != expr_end) {
							jule::Ptr<_1c666d4ec_FnIns> _23218_ins = *it;
							{
								if ((!(_1d8030188_isLive(__jule_closure_ctx.alloc->_self_, &(_23218_ins))))) {
									_1d8030595_pushLive(__jule_closure_ctx.alloc->_self_, _23218_ins);
									_1c750b257_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_23218_ins))._field_Refers));
								};
							}
							_iter_next_1d806e749:;
							++it;
							goto _iter_begin_1d806e749;
						}
						_iter_end_1d806e749:;
					};
				};
			}
			_iter_next_1d806de52:;
			++it;
			goto _iter_begin_1d806de52;
		}
		_iter_end_1d806de52:;
	};
}

inline void __jule_anon_1d80c43e7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1d80c43e7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d80c43e7_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d80c4d43:;
			{
				jule::Ptr<_1c665e9e9_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1c750e9a8_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d80c4b89:;
			{
				jule::Ptr<_1c6660830_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1c6660830_AnonFnExprModel>(&__jule_any_type103);;
				_1c7512417_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1d80c4cbb:;
	};
}

inline void __jule_anon_1d827b1c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _56447_m) {
	jule::Ptr<__jule_anon_1d827b1c5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d827b1c5_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_56447_m));
	};
	{
		auto &_match_expr{ (*(_56447_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1d827ba55:;
			{
				{
					_1c73ca7b9_binary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c665ca19_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1d827bca8:;
			{
				{
					_1c73caa72_unary(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c665cde3_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1d827babb:;
			{
				{
					_1c73cad2a_structureLit(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c665d7b7_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1d827bb32:;
			{
				{
					_1c73cb0d3_casting(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c665e147_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1d827bb98:;
			{
				{
					_1c73cb9a7_funcCall(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c665e9e9_FnCallExprModel>(&__jule_any_type41));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1d827c4b2:;
			{
				{
					_1c73cbc60_indexing(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c6660379_IndexingExprModel>(&__jule_any_type53));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1d827c528:;
			{
				{
					_1c73cc018_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_56447_m)).cast_ptr<_1c6660830_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1d827b956:;
	};
}

inline void __jule_anon_1d843a41c(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d843a41c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d843a41c_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1d843de26(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d843de26_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d843de26_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1d845e4a7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d845e4a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d845e4a7_ctx>();
	_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, (jule::Str::lit("*", 1) + __jule_closure_ctx.alloc->_2167_resultKey));
}

inline void __jule_anon_1d8461a2b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d8461a2b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d8461a2b_ctx>();
	_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, (jule::Str::lit("*", 1) + __jule_closure_ctx.alloc->_2177_resultVal));
}

inline void __jule_anon_1d847aa78(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d847aa78_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d847aa78_ctx>();
	_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1d85186a4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d85186a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d85186a4_ctx>();
	_1d4ca4482_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1d85199d5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1d85199d5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d85199d5_ctx>();
	_1d4bd0864_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_76930_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1d858a3a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c672acb3_Var> _114567_v) {
	jule::Ptr<__jule_anon_1d858a3a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d858a3a2_ctx>();
	return _1d4bc863c_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_113934_m), &(_114567_v));;
}

inline void __jule_anon_1c6438e11(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _75538_pkg) {
	jule::Ptr<__jule_anon_1c6438e11_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6438e11_ctx>();
	_1c73b7a3c_IterFiles(_75538_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1c6439d46, jule::Ptr<__jule_anon_1c6439d46_ctx>::make(__jule_anon_1c6439d46_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c6439d46_ctx_handler));
}

inline void __jule_anon_1c643a42e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _76836_m) {
	jule::Ptr<__jule_anon_1c643a42e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c643a42e_ctx>();
	jule::Ptr<_1c666d4ec_FnIns> _7698_ins = (*((*(_76836_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_7698_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c643d61e:;
		if (it != expr_end) {
			jule::I64 _7709_i = it - expr.begin();
			jule::Ptr<_1c666c474_ParamIns> _77016_ip = *it;
			{
				if (_1c6621ec8_IsAnonIdent((*((*(_77016_ip))._field_Decl))._field_Ident)) {
					(*(*(_77016_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1dd7115cd_Itoa(_7709_i));
				};
			}
			_iter_next_1c643d61e:;
			++it;
			_7709_i++;
			goto _iter_begin_1c643d61e;
		}
		_iter_end_1c643d61e:;
	};
	_1d4ca61a9_pushResult(__jule_closure_ctx.alloc->_self_, _76836_m);
	_1d4ca9d8e_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _76836_m);
}

inline void __jule_anon_1c6440ab6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _78138_pkg) {
	jule::Ptr<__jule_anon_1c6440ab6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6440ab6_ctx>();
	_1c73b7a3c_IterFiles(_78138_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1c64419c9, jule::Ptr<__jule_anon_1c64419c9_ctx>::make(__jule_anon_1c64419c9_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c64419c9_ctx_handler));
}

inline void __jule_anon_1c6451269(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6451269_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6451269_ctx>();
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1d4bd9bc0_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_84824_v))._field_Value))._field_Data.alloc)._field_Model);
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c6453359(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6453359_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6453359_ctx>();
	_1d4bd0864_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_84824_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c6455a65(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6455a65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6455a65_ctx>();
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c6456c0e(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6456c0e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6456c0e_ctx>();
	_1d4bdad8b_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_84824_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1c6474b50(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _99038_pkg) {
	jule::Ptr<__jule_anon_1c6474b50_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6474b50_ctx>();
	_1c73b7a3c_IterFiles(_99038_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1c6475a52, jule::Ptr<__jule_anon_1c6475a52_ctx>::make(__jule_anon_1c6475a52_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c6475a52_ctx_handler));
}

inline void __jule_anon_1c6475ec5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _100536_m) {
	jule::Ptr<__jule_anon_1c6475ec5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6475ec5_ctx>();
	_1d4ca4d34_indent(__jule_closure_ctx.alloc->_self_);
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1d4be2d0a_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _100536_m);
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1c666d4ec_FnIns> _10104_mepf;
	jule::Bool _101010_exist;
	({
		__jule_tuple_x_1c666d4ec_FnIns__jule_tuple_bool __jule_assign_result = _1d4cac7cb_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _100536_m);
		_10104_mepf = __jule_assign_result.__jule_result_arg0;
		_101010_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_101010_exist))) {
		__jule_panic_s(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1012:5"));;
	};
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10104_mepf)), 15LL));
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, _1dd710e4b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_100449_s)), 15LL));
	_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1c6483983(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _104238_pkg) {
	jule::Ptr<__jule_anon_1c6483983_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6483983_ctx>();
	_1c73b7a3c_IterFiles(_104238_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1c6484896, jule::Ptr<__jule_anon_1c6484896_ctx>::make(__jule_anon_1c6484896_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c6484896_ctx_handler));
}

inline void __jule_anon_1d8a942e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _111438_pkg) {
	jule::Ptr<__jule_anon_1d8a942e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d8a942e5_ctx>();
	_1c73b7a3c_IterFiles(_111438_pkg, jule::__new_closure<void,jule::Ptr<_1c678348b_SymbolTable>*>((void*)__jule_anon_1d8a95208, jule::Ptr<__jule_anon_1d8a95208_ctx>::make(__jule_anon_1d8a95208_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1d8a95208_ctx_handler));
}

inline void __jule_anon_1d8a957be(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _113031_file) {
	jule::Ptr<__jule_anon_1d8a957be_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d8a957be_ctx>();
	{
		auto expr = &((*((*(_113031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a9889e:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _113116_f = *it;
			{
				if ((*(_113116_f))._field_Ident.equal("init", 4)) {
					_1d4ca4d34_indent(__jule_closure_ctx.alloc->_self_);
					static__1d4be2d0a_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_113116_f));
					_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1d8a9889e:;
			++it;
			goto _iter_begin_1d8a9889e;
		}
		_iter_end_1d8a9889e:;
	};
}

inline void __jule_anon_1d8aa09d8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d9304_Package>* _116938_pkg) {
	jule::Ptr<__jule_anon_1d8aa09d8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d8aa09d8_ctx>();
	_1d4caeb85_pushInit(__jule_closure_ctx.alloc->_self_, _116938_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1d8b363ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1dd6eec5e_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1d8b3e02c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1dd6ee7a8_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1d67cd6a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c66d63cd_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1c6439d46(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _75632_file) {
	jule::Ptr<__jule_anon_1c6439d46_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6439d46_ctx>();
	{
		auto expr = &((*((*(_75632_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c643a7e7:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _75717_f = *it;
			{
				if (((!((*(_75717_f))._field_Binded)) && ((*_75717_f.alloc)._field_Token != nullptr))) {
					_1d4ca61a9_pushResult(__jule_closure_ctx.alloc->_self_, &(_75717_f));
					_1d4ca9ad6_funcDecl(__jule_closure_ctx.alloc->_self_, &(_75717_f), false);
				};
			}
			_iter_next_1c643a7e7:;
			++it;
			goto _iter_begin_1c643a7e7;
		}
		_iter_end_1c643a7e7:;
	};
}

inline void __jule_anon_1c64419c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _78232_file) {
	jule::Ptr<__jule_anon_1c64419c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c64419c9_ctx>();
	{
		auto expr = &((*((*(_78232_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6442458:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _78317_t = *it;
			{
				if (((*(_78317_t))._field_Token == nullptr)) {
					goto _iter_next_1c6442458;
				};
				_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1d4be33d2_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _78317_t);
				_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1d4ca4938_addIndent(__jule_closure_ctx.alloc->_self_);
				_1d4ca4d34_indent(__jule_closure_ctx.alloc->_self_);
				_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1d4caa345_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_78317_t));
				_1d4ca4b36_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1d4ca4d34_indent(__jule_closure_ctx.alloc->_self_);
				_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c6442458:;
			++it;
			goto _iter_begin_1c6442458;
		}
		_iter_end_1c6442458:;
	};
}

inline void __jule_anon_1c6475a52(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _99132_file) {
	jule::Ptr<__jule_anon_1c6475a52_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6475a52_ctx>();
	{
		auto expr = &((*((*(_99132_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64764d1:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _99217_t = *it;
			{
				if (((*(_99217_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1c64764d1;
				};
				_1c73b85a9_IterTraitMethods(&(_99217_t), jule::__new_closure<void,jule::Ptr<_1c666a51b_Fn>*>((void*)__jule_anon_1c6477a43, jule::Ptr<__jule_anon_1c6477a43_ctx>::make(__jule_anon_1c6477a43_ctx{._self_=__jule_closure_ctx.alloc->_self_,._99217_t=_99217_t}).as<jule::Uintptr>(), __jule_anon_1c6477a43_ctx_handler));
			}
			_iter_next_1c64764d1:;
			++it;
			goto _iter_begin_1c64764d1;
		}
		_iter_end_1c64764d1:;
	};
}

inline void __jule_anon_1c6484896(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _104332_file) {
	jule::Ptr<__jule_anon_1c6484896_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6484896_ctx>();
	{
		auto expr = &((*((*(_104332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6485325:;
		if (it != expr_end) {
			jule::Ptr<_1c667de9c_Trait> _104417_t = *it;
			{
				jule::I64 _104510_i = 0LL;;
				{
					auto expr = &((*(_104417_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c648615b:;
					if (it != expr_end) {
						jule::Ptr<_1c6655803_Struct> _104618_s = *it;
						{
							{
								auto expr = &((*(_104618_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c6486a0d:;
								if (it != expr_end) {
									jule::Ptr<_1c665865d_StructIns> _104719_ins = *it;
									{
										_1d4cad5bd_traitData(__jule_closure_ctx.alloc->_self_, &(_104417_t), _104510_i, &(_104719_ins));
										(_104510_i)++;
									}
									_iter_next_1c6486a0d:;
									++it;
									goto _iter_begin_1c6486a0d;
								}
								_iter_end_1c6486a0d:;
							};
						}
						_iter_next_1c648615b:;
						++it;
						goto _iter_begin_1c648615b;
					}
					_iter_end_1c648615b:;
				};
			}
			_iter_next_1c6485325:;
			++it;
			goto _iter_begin_1c6485325;
		}
		_iter_end_1c6485325:;
	};
}

inline void __jule_anon_1d8a95208(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c678348b_SymbolTable>* _111532_file) {
	jule::Ptr<__jule_anon_1d8a95208_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1d8a95208_ctx>();
	{
		auto expr = &((*((*(_111532_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d8a95b87:;
		if (it != expr_end) {
			jule::Ptr<_1c666a51b_Fn> _111617_f = *it;
			{
				if (((!(_208829b60_Test)) && _1c73bd0a3_HasDirective(&((*(_111617_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1d8a95b87;
				};
				if (((!((*_111617_f.alloc)._field_Binded)) && ((*_111617_f.alloc)._field_Token != nullptr))) {
					_1d4cac127_func(__jule_closure_ctx.alloc->_self_, &(_111617_f));
					_1d4ca4482_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1d8a95b87:;
			++it;
			goto _iter_begin_1d8a95b87;
		}
		_iter_end_1d8a95b87:;
	};
}

inline void __jule_anon_1c6477a43(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c666a51b_Fn>* _99639_m) {
	jule::Ptr<__jule_anon_1c6477a43_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6477a43_ctx>();
	_1d4cacb3e_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_99217_t), _99639_m);
}

int main(int argc, char *argv[], char *envp[]) {

_20882ba30_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1d4d3c383_OutDir = jule::Str::lit("dist", 4);
	_1d4d3c64c_OutName = jule::Str::lit("ir.cpp", 6);
	_1d4d3c905_Out = jule::Str();
	_2210a02d0_STDIN = _2210a0ad8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
	_2210a0577_STDOUT = _2210a0ad8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
	_2210a0874_STDERR = _2210a0ad8_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
	_2066ad6c7_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_2066ae123_acceptRanges = ({ auto __jule_collection = jule::Array<_2066adc7c_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _2066adc7c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _2066adc7c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _2066adc7c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _2066adc7c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _2066adc7c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _2066adc7c_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_238a14aa6__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_238a1514a__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_2086b33bc__L = jule::new_ptr<_20872553e_RangeTable>(_20872553e_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_208724a8d_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _208724a8d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _208724a8d_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _208724a8d_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2087250bb_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _2087250bb_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _2087250bb_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _2087250bb_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _2087250bb_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _2087250bb_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_2086b42d0__LU = jule::new_ptr<_20872553e_RangeTable>(_20872553e_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_208724a8d_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _208724a8d_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _208724a8d_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _208724a8d_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _208724a8d_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _208724a8d_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2087250bb_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _2087250bb_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2087250bb_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _2087250bb_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_2086ba2b4_Letter = _2086b33bc__L;
	_2086c1584_Upper = _2086b42d0__LU;
	_20871e060__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_20805ece1_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_208061aa1_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_208061cb0_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_208821eed_PathStdlib = jule::Str();
	_208822240_PathExec = jule::Str();
	_2088224e8_PathWd = jule::Str();
	_2088227e5_PathApi = jule::Str();
	_208822a9d_Os = jule::Str::lit("windows", 7);
	_208822d56_Arch = jule::Str::lit("arm64", 5);
	_208827b3b_Compiler = jule::Str();
	_2088291e2_CompilerPath = jule::Str();
	_208829401_CppStd = jule::Str::lit("cpp17", 5);
	_208829610_Shadowing = false;
	_2088298a7_Transpilation = false;
	_208829b60_Test = false;
	_208829e18_RC = true;
	_20882a2d1_Safety = true;
	_20882a523_Production = false;
	_20882a7ba_AtomicRC = false;
	_1dd6e89b1_f32info = _1dd6e85b5_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1dd6e8cad_f64info = _1dd6e85b5_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1dd701788_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1dd70359d_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1dd70415e_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1dd70448e_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1dd7076e5_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1dd70b8b4_leftCheats = ({ auto __jule_collection = jule::Slice<_1dd70b485_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1dd70b485_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1dd70b485_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1dd70b485_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1dd70b485_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1dd70b485_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1dd70b485_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1dd70b485_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1dd70b485_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1dd70b485_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1dd70b485_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1dd70b485_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1dd70b485_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1dd70b485_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1dd70b485_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1dd70b485_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1dd70b485_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1dd70b485_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1dd70b485_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1dd70b485_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1dd70b485_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1dd70b485_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1dd70b485_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1dd70b485_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1dd70b485_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1dd70b485_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1dd70b485_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1dd70b485_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1dd70b485_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1dd70b485_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1dd70b485_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1dd70b485_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1dd70b485_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1dd70b485_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1dd70b485_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1dd70b485_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1dd70b485_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1dd70b485_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1dd70b485_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1dd70b485_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1dd70b485_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1dd70b485_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1dd70b485_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1dd70b485_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1dd70b485_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1dd70b485_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1dd70b485_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1dd70b485_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1dd70b485_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1dd70b485_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1dd70b485_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1dd70b485_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1dd70b485_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1dd70b485_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1dd70b485_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1dd70b485_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1dd70b485_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1dd70b485_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1dd70b485_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1dd70b485_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1dd70b485_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1dd70b485_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1dd712ba6_BitSize = 0LL;
	_1dd712ea3_SysInt = jule::Str();
	_1dd71325b_SysUint = jule::Str();
	_1c65703ee_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1c65706da_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1c6618233_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1c661880a_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1c6618ae6_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1c6627143_keywords = ({ auto __jule_collection = jule::Array<_1c6626c14_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1c6627473_basicOps = ({ auto __jule_collection = jule::Array<_1c6626c14_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1c6626c14_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1c66ab150_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1c68a1114_primNil = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1c68a1411_primVoid = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a16b9_primAny = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a19b6_primStr = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a1c6e_primBool = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a2027_primUintptr = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a22d0_primUint = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a2698_primInt = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a28da_primI8 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a2b82_primI16 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a2e3a_primI32 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a31e3_primI64 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a349b_primU8 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a3754_primU16 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a3a0c_primU32 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a3ee6_primU64 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a4238_primF32 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c68a4447_primF64 = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c67d924a_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)});
	_1c73d0dda_emptyData = jule::new_ptr<_1c73d17d1_data>(_1c73d17d1_data{._field_boundary=jule::Ptr<_1c73d31c8_boundary>(nullptr), ._field_nils=jule::Ptr<_1c68bb096_nils>(nullptr), ._field_dynamic=jule::Ptr<_1c73cdb52_dynamic>(nullptr)});
	_1c73d5d68_Copy = false;
	_1c73d6165_Deadcode = false;
	_1c73d641d_Append = false;
	_1c73d671a_Math = false;
	_1c73d69c3_Access = false;
	_1c73d6c7b_Inline = false;
	_1c73d7034_Ptr = false;
	_1c73d73ec_Cond = false;
	_1c73d763e_Str = false;
	_1c73d78d6_Slice = false;
	_1c73d7b8e_Assign = false;
	_1c73d7e47_Exceptional = false;
	_1c73d8200_Iter = false;
	_1c73d84a8_Dynamic = false;
	_1c751456d_exprEnabled = false;
	_1c75147b0_scopeEnabled = false;
	_1d4c97200_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1d4bbe1b0_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1d4ca1c32_generalGCPtr = jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c8525_Sptr>(_1c67c8525_Sptr{._field_Elem=jule::new_ptr<_1c67bb8d1_TypeKind>(_1c67bb8d1_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c67c49e9_Prim>(_1c67c49e9_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1c67bb42a_Kind_mptr_data23)});
	
	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}