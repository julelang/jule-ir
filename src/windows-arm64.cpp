// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 9/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _21d800912_acceptRange;
struct _238b51e24_StrBuilder;
struct _20599ea41_Range16;
struct _2059a006e_Range32;
struct _2059a04e2_RangeTable;
struct _2059ecb38_lazyBuff;
struct _239654b57_DirEntry;
struct _239654ddd_Directory;
struct _2396560dc_File;
struct _239658221_Status;
struct _205b58b95_cmdAttrs;
struct _205a977d7_Log;
struct _1dc51dd15_floatInfo;
struct _1dc51e992_decimalSlice;
struct _1dc531bd5_leftCheat;
struct _1dc5326ec_decimal;
struct _1dc54537a_Const;
struct _1c486c19d_Token;
struct _1c4872934_File;
struct _1c4874a8a_kindPair;
struct _1c487aa6e_lex;
struct _1c48807bb_AST;
struct _1c4881778_Node;
struct _1c4881b96_Directive;
struct _1c4882779_TypeDecl;
struct _1c4882d84_IdentTypeDecl;
struct _1c488314d_SubIdentTypeDecl;
struct _1c4883527_NamespaceTypeDecl;
struct _1c4883824_SptrTypeDecl;
struct _1c4883ba9_SlcTypeDecl;
struct _1c4883ea6_TupleTypeDecl;
struct _1c48842a3_PtrTypeDecl;
struct _1c4884a45_ArrTypeDecl;
struct _1c4885293_MapTypeDecl;
struct _1c488566c_RetTypeDecl;
struct _1c4886aad_Expr;
struct _1c4886d77_RangeExpr;
struct _1c4887482_UseExpr;
struct _1c48876a2_TupleExpr;
struct _1c4887a48_LitExpr;
struct _1c4887e22_UnsafeExpr;
struct _1c48883c8_IdentExpr;
struct _1c4888b6a_UnaryExpr;
struct _1c4889044_VariadicExpr;
struct _1c488941d_CastExpr;
struct _1c48897e7_NsSelectionExpr;
struct _1c4889bc1_SubIdentExpr;
struct _1c488a177_BinaryExpr;
struct _1c488a7d7_FnCallExpr;
struct _1c488b2cc_FieldExprPair;
struct _1c488bb07_StructLit;
struct _1c488c0ad_BraceLit;
struct _1c488c8d8_KeyValPair;
struct _1c488d114_SliceExpr;
struct _1c488da71_IndexingExpr;
struct _1c488e1d1_SlicingExpr;
struct _1c488e4cd_Constraint;
struct _1c488e984_GenericDecl;
struct _1c488ed5d_LabelSt;
struct _1c4890237_GotoSt;
struct _1c4890534_FallSt;
struct _1c4890b94_AssignLeft;
struct _1c4891227_AssignSt;
struct _1c489213a_Stmt;
struct _1c489279a_ScopeTree;
struct _1c4892ed7_ParamDecl;
struct _1c4894439_FnDecl;
struct _1c48955e4_VarDecl;
struct _1c48959bd_RetSt;
struct _1c489623d_Iter;
struct _1c4896a68_WhileKind;
struct _1c4897470_RangeKind;
struct _1c4897849_BreakSt;
struct _1c4897c23_ContSt;
struct _1c48981c9_If;
struct _1c48985a3_Else;
struct _1c4898a59_Conditional;
struct _1c4899296_TypeAliasDecl;
struct _1c489974c_Case;
struct _1c489a066_MatchCase;
struct _1c489a880_UseDecl;
struct _1c489ad36_EnumItemDecl;
struct _1c489b8e7_EnumDecl;
struct _1c489c222_TypeEnumItemDecl;
struct _1c489c882_TypeEnumDecl;
struct _1c489cb4b_FieldDecl;
struct _1c489d542_StructDecl;
struct _1c489dc7e_TraitDecl;
struct _1c489e3de_Impl;
struct _1c48a0753_Field;
struct _1c48a2766_Operators;
struct _1c48a3679_Struct;
struct _1c48a5857_FieldIns;
struct _1c48a6407_StructIns;
struct _1c48aa362_OperandExprModel;
struct _1c48aa85c_BinaryExprModel;
struct _1c48aac36_UnaryExprModel;
struct _1c48ab264_StructArgExprModel;
struct _1c48ab60a_StructLitExprModel;
struct _1c48ab907_AllocStructLitExprModel;
struct _1c48abe8a_CastingExprModel;
struct _1c48ac83c_FnCallExprModel;
struct _1c48acc16_SliceExprModel;
struct _1c48ad1bc_IndexingExprModel;
struct _1c48ad673_AnonFnExprModel;
struct _1c48ada4c_KeyValPairExprModel;
struct _1c48ae003_MapExprModel;
struct _1c48ae586_SlicingExprModel;
struct _1c48aeb19_TraitSubIdentExprModel;
struct _1c48b04aa_StructSubIdentExprModel;
struct _1c48b0851_StructStaticIdentExprModel;
struct _1c48b0c2a_ArrayExprModel;
struct _1c48b1027_TupleExprModel;
struct _1c48b1401_BuiltinOutCallExprModel;
struct _1c48b17ca_BuiltinOutlnCallExprModel;
struct _1c48b1ba4_BuiltinNewCallExprModel;
struct _1c48b207d_BuiltinPanicCallExprModel;
struct _1c48b2534_BuiltinAssertCallExprModel;
struct _1c48b29da_BuiltinMakeCallExprModel;
struct _1c48b2db4_BuiltinAppendCallExprModel;
struct _1c48b31b1_BuiltinLenCallExprModel;
struct _1c48b34ad_BuiltinCapCallExprModel;
struct _1c48b3887_BuiltinDeleteCallExprModel;
struct _1c48b3c61_BuiltinCopyCallExprModel;
struct _1c48b413a_BuiltinErrorCallExprModel;
struct _1c48b47de_SizeofExprModel;
struct _1c48b49cb_AlignofExprModel;
struct _1c48b4c73_RuneExprModel;
struct _1c48b5070_IntegratedToStrExprModel;
struct _1c48b5449_BackendEmitExprModel;
struct _1c48b5746_FreeExprModel;
struct _1c48b6549_RetType;
struct _1c48b6c64_Param;
struct _1c48b8738_Fn;
struct _1c48ba691_ParamIns;
struct _1c48bb719_FnIns;
struct _1c48be8a4_ReferenceStack;
struct _1c48c0db1_Pass;
struct _1c48c5866_symbolBuilder;
struct _1c48cc1b9_Trait;
struct _1c48cdd58_EnumItem;
struct _1c48ce8c5_Enum;
struct _1c48d0a08_TypeEnumItem;
struct _1c48d10d0_TypeEnum;
struct _1c48d42c0_comptimeRange;
struct _1c48d4c93_comptimeStructField;
struct _1c48d6954_comptimeStructFields;
struct _1c48d804e_comptimeStatic;
struct _1c48d9c10_comptimeStatics;
struct _1c48db30a_comptimeEnumField;
struct _1c48dc6a2_comptimeEnumFields;
struct _1c48ddc9c_comptimeParam;
struct _1c48e0e36_comptimeParams;
struct _1c48e24ed_comptimeTypeInfos;
struct _1c48e3ae8_comptimeTypeInfo;
struct _1c48ea10a_comptimeValue;
struct _1c48ec959_comptimeFiles;
struct _1c48ee054_comptimeFile;
struct _1c49034cb_constraintChecker;
struct _1c4905830_Impl;
struct _1c490ac86_Scope;
struct _1c490b1a4_If;
struct _1c490b4a1_Else;
struct _1c490b8be_Conditional;
struct _1c490bbbb_InfIter;
struct _1c490c172_WhileIter;
struct _1c490cabd_RangeIter;
struct _1c490ce53_ContSt;
struct _1c490d32c_BreakSt;
struct _1c490d629_Label;
struct _1c490da03_GotoSt;
struct _1c490ddcc_Postfix;
struct _1c490e383_Assign;
struct _1c490e839_MultiAssign;
struct _1c490ee99_Match;
struct _1c49109c2_Case;
struct _1c49111ba_FallSt;
struct _1c4911561_RetSt;
struct _1c4911bc1_scopeLabel;
struct _1c4912254_scopeGoto;
struct _1c4913244_scopeChecker;
struct _1c4926873_directiveChecker;
struct _1c492cd1e_ImportInfo;
struct _1c4930c45_Package;
struct _1c494c668_commonSemaMeta;
struct _1c494d290_sema;
struct _1c496d359_missingRetChecker;
struct _1c49715b0_Var;
struct _1c4972649_FuncPattern;
struct _1c49b0d80_typeCompatibilityChecker;
struct _1c49b798b_assignTypeChecker;
struct _1c49b9361_dynamicTypeAnnotation;
struct _1c49be1bd_fnCallArgChecker;
struct _1c49c2105_structLitChecker;
struct _1c49c3dd7_rangeChecker;
struct _1c49c6648_retTypeChecker;
struct _1c49c8bab_SymbolTable;
struct _1c49ce024_Data;
struct _1c49d019b_Value;
struct _1c49d0c4b_eval;
struct _1c49ee473_unaryEval;
struct _1c4a0140e_binaryEval;
struct _1c4a0d828_InsGeneric;
struct _1c4a0e41c_TypeAlias;
struct _1c4a1020e_TypeKind;
struct _1c4a173d1_TypeSymbol;
struct _1c4a17cd8_Prim;
struct _1c4a1b814_Sptr;
struct _1c4a1c2d7_Slc;
struct _1c4a1cdcb_Tuple;
struct _1c4a1d97b_Map;
struct _1c4a1e608_Arr;
struct _1c4a200cb_Ptr;
struct _1c4a210cc_referencer;
struct _1c4a220bc_typeChecker;
struct _1c4a29c73_identTypeLookup;
struct _1c5635e77_FileInfo;
struct _1c567bbd2_stmt;
struct _1c567c573_scopeParser;
struct _1c5689edc_exprBuilder;
struct _1c5697703_assignInfo;
struct _1c569ab02_parser;
struct _1c56acc24_typeBuilder;
struct _1c4c838e4_CompileInfo;
struct _1c4c84dbd_directiveEval;
struct _1c56b1d5a_JuleImporter;
struct _1c56b8867_ExprInspector;
struct _1c56c4ac6_OrderedDefines;
struct _1c57e050a_liveTable;
struct _1c57e0928_ObjectDeadCode;
struct _1c57e4575_scopeDeadCode;
struct _1c57e8c1c_exprDeadCode;
struct _21dde173e_ExceptionalForwardingExprModel;
struct _21dde1ac4_SwapExprModel;
struct _21dde1e9d_EmptyCompareExprModel;
struct _21dde2322_RefExprModel;
struct _21dde2795_StrCompExprModel;
struct _21dde2d28_MutSlicingExprModel;
struct _21dde3125_UnsafeBinaryExprModel;
struct _21dde34aa_UnsafeIndexingExprModel;
struct _21dde3884_PushToSliceExprModel;
struct _21dde3c5d_AppendToSliceExprModel;
struct _21dde4137_StrRuneIter;
struct _21dde4434_UnsafeDerefExprModel;
struct _21dde4731_UnsafeCastingExprModel;
struct _21dde5413_nilVar;
struct _21dde5754_nils;
struct _1c56c637a_scopeOptimizer;
struct _1c56ccd76_exprOptimizer;
struct _1c56d3266_dynamicVar;
struct _1c56d35a7_dynamic;
struct _1c56d6236_data;
struct _1c56d7875_boundaryVar;
struct _1c56d7bb6_boundary;
struct _1c57e9d3e_Optimizer;
struct _1c58212e9_AnsiEscape;
struct _1c58228a0_Logger;
struct _1a97d00d7_AbsTime;
struct _1a97d07ad_Time;
struct _1a9706daa_scopeCoder;
struct _1a97136ad_exprCoder;
struct _1a97260a5_TestCoder;
struct _1a9729031_identCoder;
struct _1a97d9344_SerializationInfo;
struct _1a97d9762_traitCast;
struct _1a97d9b3b_anonHash;
struct _1a97db0e3_ObjectCoder;
struct _1a97ea168_customType;
struct _1a97eaca1_typeCoder;
struct _1a980388b_resultCoder;
struct _1ad018223_Flag;
struct _1ad01bcc6_Flag;
struct _1ad020439_Flag;
struct _1ad023ae1_Flag;
struct _1ad027254_Flag;
struct _1c520226e_FlagSet;
struct _1c5ccb9c4_argParser;
struct _205b5494e_Cmd;
struct _1c56d5c3b_dataCheckpoint;
struct _1c56b4830_IR;
struct _21d800912_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
	

};
inline jule::Bool _21d800912_acceptRange_eq(_21d800912_acceptRange *_self_, _21d800912_acceptRange _other_);


struct _238b51e24_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	

};
struct _20599ea41_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
	

};
inline jule::Bool _20599ea41_Range16_eq(_20599ea41_Range16 *_self_, _20599ea41_Range16 _other_);


struct _2059a006e_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
	

};
inline jule::Bool _2059a006e_Range32_eq(_2059a006e_Range32 *_self_, _2059a006e_Range32 _other_);


struct _2059a04e2_RangeTable {
	jule::Slice<_20599ea41_Range16> _field_R16;
	jule::Slice<_2059a006e_Range32> _field_R32;
	jule::I64 _field_LatinOffset;
	

};
struct _2059ecb38_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen;
	

};
struct _239654b57_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_239658221_Status> _field_Stat;
	

};
inline jule::Bool _239654b57_DirEntry_eq(_239654b57_DirEntry *_self_, _239654b57_DirEntry _other_);


struct _239654ddd_Directory {
	

};
inline jule::Bool _239654ddd_Directory_eq(_239654ddd_Directory *_self_, _239654ddd_Directory _other_);


struct _2396560dc_File {
	jule::Uintptr _field_handle;
	

};
inline jule::Bool _2396560dc_File_eq(_2396560dc_File *_self_, _2396560dc_File _other_);


struct _239658221_Status {
	jule::I64 _field_mode;
	jule::U64 _field_size;
	

};
inline jule::Bool _239658221_Status_eq(_239658221_Status *_self_, _239658221_Status _other_);


struct _205b58b95_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
	

};
inline jule::Bool _205b58b95_cmdAttrs_eq(_205b58b95_cmdAttrs *_self_, _205b58b95_cmdAttrs _other_);


struct _205a977d7_Log {
	jule::I64 _field_Kind;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

};
inline jule::Bool _205a977d7_Log_eq(_205a977d7_Log *_self_, _205a977d7_Log _other_);


struct _1dc51dd15_floatInfo {
	jule::U64 _field_mantbits;
	jule::U64 _field_expbits;
	jule::I64 _field_bias;
	

};
inline jule::Bool _1dc51dd15_floatInfo_eq(_1dc51dd15_floatInfo *_self_, _1dc51dd15_floatInfo _other_);


struct _1dc51e992_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	

};
struct _1dc531bd5_leftCheat {
	jule::I64 _field_delta;
	jule::Str _field_cutoff;
	

};
inline jule::Bool _1dc531bd5_leftCheat_eq(_1dc531bd5_leftCheat *_self_, _1dc531bd5_leftCheat _other_);


struct _1dc5326ec_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I64 _field_nd;
	jule::I64 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
	

};
inline jule::Bool _1dc5326ec_decimal_eq(_1dc5326ec_decimal *_self_, _1dc5326ec_decimal _other_);


inline jule::Bool _1dc54ae63_Eq(_1dc54537a_Const* _self_, _1dc54537a_Const _26014_x);
inline jule::Bool _1dc54b2a4_Lt(_1dc54537a_Const* _self_, _1dc54537a_Const _28714_x);
inline jule::Bool _1dc54b5e5_LtEq(_1dc54537a_Const* _self_, _1dc54537a_Const _31016_x);
inline jule::Bool _1dc54b936_Gt(_1dc54537a_Const* _self_, _1dc54537a_Const _33314_x);
inline jule::Bool _1dc54bc77_GtEq(_1dc54537a_Const* _self_, _1dc54537a_Const _35616_x);
struct _1dc54537a_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

};
struct _1c486c19d_Token {
	jule::Ptr<_1c4872934_File> _field_File;
	jule::I64 _field_Row;
	jule::I64 _field_Column;
	jule::Str _field_Kind;
	jule::U64 _field_Id;
	

};
inline jule::Bool _1c486c19d_Token_eq(_1c486c19d_Token *_self_, _1c486c19d_Token _other_);


struct _1c4872934_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Tokens;
	

};
struct _1c4874a8a_kindPair {
	jule::Str _field_kind;
	jule::U64 _field_id;
	

};
inline jule::Bool _1c4874a8a_kindPair_eq(_1c4874a8a_kindPair *_self_, _1c4874a8a_kindPair _other_);


struct _1c487aa6e_lex {
	jule::I64 _field_mode;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_tokens;
	jule::Ptr<_1c4872934_File> _field_file;
	jule::I64 _field_pos;
	jule::I64 _field_column;
	jule::I64 _field_row;
	jule::Slice<_205a977d7_Log> _field_errors;
	

};
struct _1c48807bb_AST {
	jule::Ptr<_1c4872934_File> _field_File;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1c489a880_UseDecl>> _field_UseDecls;
	jule::Slice<_1c4881778_Node> _field_Nodes;
	

};
struct _1c4881778_Node {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1c4881778_Node_eq(_1c4881778_Node *_self_, _1c4881778_Node _other_);


struct _1c4881b96_Directive {
	jule::Ptr<_1c486c19d_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Args;
	

};
struct _1c4882779_TypeDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1c4882779_TypeDecl_eq(_1c4882779_TypeDecl *_self_, _1c4882779_TypeDecl _other_);


struct _1c4882d84_IdentTypeDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _field_Generics;
	

};
struct _1c488314d_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>> _field_Idents;
	

};
struct _1c4883527_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Idents;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	

};
struct _1c4883824_SptrTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c4883824_SptrTypeDecl_eq(_1c4883824_SptrTypeDecl *_self_, _1c4883824_SptrTypeDecl _other_);


struct _1c4883ba9_SlcTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c4883ba9_SlcTypeDecl_eq(_1c4883ba9_SlcTypeDecl *_self_, _1c4883ba9_SlcTypeDecl _other_);


struct _1c4883ea6_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _field_Types;
	

};
struct _1c48842a3_PtrTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Elem;
	

};
inline jule::Bool _1c48842a3_PtrTypeDecl_eq(_1c48842a3_PtrTypeDecl *_self_, _1c48842a3_PtrTypeDecl _other_);


struct _1c4884a45_ArrTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Elem;
	jule::Ptr<_1c4886aad_Expr> _field_Size;
	

};
inline jule::Bool _1c4884a45_ArrTypeDecl_eq(_1c4884a45_ArrTypeDecl *_self_, _1c4884a45_ArrTypeDecl _other_);


struct _1c4885293_MapTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Key;
	jule::Ptr<_1c4882779_TypeDecl> _field_Val;
	

};
inline jule::Bool _1c4885293_MapTypeDecl_eq(_1c4885293_MapTypeDecl *_self_, _1c4885293_MapTypeDecl _other_);


struct _1c488566c_RetTypeDecl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Idents;
	

};
struct _1c4886aad_Expr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Any _field_Kind;
	

};
inline jule::Bool _1c4886aad_Expr_eq(_1c4886aad_Expr *_self_, _1c4886aad_Expr _other_);


struct _1c4886d77_RangeExpr {
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4886d77_RangeExpr_eq(_1c4886d77_RangeExpr *_self_, _1c4886d77_RangeExpr _other_);


struct _1c4887482_UseExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4887482_UseExpr_eq(_1c4887482_UseExpr *_self_, _1c4887482_UseExpr _other_);


struct _1c48876a2_TupleExpr {
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Expr;
	

};
struct _1c4887a48_LitExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Value;
	

};
inline jule::Bool _1c4887a48_LitExpr_eq(_1c4887a48_LitExpr *_self_, _1c4887a48_LitExpr _other_);


struct _1c4887e22_UnsafeExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4887e22_UnsafeExpr_eq(_1c4887e22_UnsafeExpr *_self_, _1c4887e22_UnsafeExpr _other_);


struct _1c48883c8_IdentExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	

};
inline jule::Bool _1c48883c8_IdentExpr_eq(_1c48883c8_IdentExpr *_self_, _1c48883c8_IdentExpr _other_);


struct _1c4888b6a_UnaryExpr {
	jule::Ptr<_1c486c19d_Token> _field_Op;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4888b6a_UnaryExpr_eq(_1c4888b6a_UnaryExpr *_self_, _1c4888b6a_UnaryExpr _other_);


struct _1c4889044_VariadicExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4889044_VariadicExpr_eq(_1c4889044_VariadicExpr *_self_, _1c4889044_VariadicExpr _other_);


struct _1c488941d_CastExpr {
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c488941d_CastExpr_eq(_1c488941d_CastExpr *_self_, _1c488941d_CastExpr _other_);


struct _1c48897e7_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Ns;
	jule::Ptr<_1c486c19d_Token> _field_Ident;
	

};
struct _1c4889bc1_SubIdentExpr {
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c486c19d_Token> _field_Ident;
	

};
inline jule::Bool _1c4889bc1_SubIdentExpr_eq(_1c4889bc1_SubIdentExpr *_self_, _1c4889bc1_SubIdentExpr _other_);


struct _1c488a177_BinaryExpr {
	jule::Ptr<_1c4886aad_Expr> _field_Left;
	jule::Ptr<_1c4886aad_Expr> _field_Right;
	jule::Ptr<_1c486c19d_Token> _field_Op;
	

};
inline jule::Bool _1c488a177_BinaryExpr_eq(_1c488a177_BinaryExpr *_self_, _1c488a177_BinaryExpr _other_);


struct _1c488a7d7_FnCallExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Args;
	jule::Ptr<_1c489279a_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
	

};
struct _1c488b2cc_FieldExprPair {
	jule::Ptr<_1c486c19d_Token> _field_Field;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c488b2cc_FieldExprPair_eq(_1c488b2cc_FieldExprPair *_self_, _1c488b2cc_FieldExprPair _other_);


struct _1c488bb07_StructLit {
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Exprs;
	

};
struct _1c488c0ad_BraceLit {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Exprs;
	

};
struct _1c488c8d8_KeyValPair {
	jule::Ptr<_1c4886aad_Expr> _field_Key;
	jule::Ptr<_1c4886aad_Expr> _field_Val;
	jule::Ptr<_1c486c19d_Token> _field_Colon;
	

};
inline jule::Bool _1c488c8d8_KeyValPair_eq(_1c488c8d8_KeyValPair *_self_, _1c488c8d8_KeyValPair _other_);


struct _1c488d114_SliceExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Exprs;
	

};
struct _1c488da71_IndexingExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c4886aad_Expr> _field_Index;
	

};
inline jule::Bool _1c488da71_IndexingExpr_eq(_1c488da71_IndexingExpr *_self_, _1c488da71_IndexingExpr _other_);


struct _1c488e1d1_SlicingExpr {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c4886aad_Expr> _field_Start;
	jule::Ptr<_1c4886aad_Expr> _field_To;
	

};
inline jule::Bool _1c488e1d1_SlicingExpr_eq(_1c488e1d1_SlicingExpr *_self_, _1c488e1d1_SlicingExpr _other_);


struct _1c488e4cd_Constraint {
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _field_Mask;
	

};
struct _1c488e984_GenericDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c488e4cd_Constraint> _field_Constraint;
	

};
inline jule::Bool _1c488e984_GenericDecl_eq(_1c488e984_GenericDecl *_self_, _1c488e984_GenericDecl _other_);


struct _1c488ed5d_LabelSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c488ed5d_LabelSt_eq(_1c488ed5d_LabelSt *_self_, _1c488ed5d_LabelSt _other_);


struct _1c4890237_GotoSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_Label;
	

};
inline jule::Bool _1c4890237_GotoSt_eq(_1c4890237_GotoSt *_self_, _1c4890237_GotoSt _other_);


struct _1c4890534_FallSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	

};
inline jule::Bool _1c4890534_FallSt_eq(_1c4890534_FallSt *_self_, _1c4890534_FallSt _other_);


struct _1c4890b94_AssignLeft {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c4890b94_AssignLeft_eq(_1c4890b94_AssignLeft *_self_, _1c4890b94_AssignLeft _other_);


struct _1c4891227_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1c486c19d_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> _field_Left;
	jule::Ptr<_1c4886aad_Expr> _field_Right;
	

};
struct _1c489213a_Stmt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Data;
	

};
inline jule::Bool _1c489213a_Stmt_eq(_1c489213a_Stmt *_self_, _1c489213a_Stmt _other_);


struct _1c489279a_ScopeTree {
	jule::Ptr<_1c489279a_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1c489213a_Stmt> _field_Stmts;
	jule::Ptr<_1c486c19d_Token> _field_End;
	

};
struct _1c4892ed7_ParamDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c4892ed7_ParamDecl_eq(_1c4892ed7_ParamDecl *_self_, _1c4892ed7_ParamDecl _other_);


struct _1c4894439_FnDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_Generics;
	jule::Ptr<_1c488566c_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> _field_Params;
	

};
struct _1c48955e4_VarDecl {
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
struct _1c48959bd_RetSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c48959bd_RetSt_eq(_1c48959bd_RetSt *_self_, _1c48959bd_RetSt _other_);


struct _1c489623d_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c489623d_Iter_eq(_1c489623d_Iter *_self_, _1c489623d_Iter _other_);


struct _1c4896a68_WhileKind {
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1c486c19d_Token> _field_NextToken;
	

};
inline jule::Bool _1c4896a68_WhileKind_eq(_1c4896a68_WhileKind *_self_, _1c4896a68_WhileKind _other_);


struct _1c4897470_RangeKind {
	jule::Ptr<_1c486c19d_Token> _field_InToken;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c48955e4_VarDecl> _field_KeyA;
	jule::Ptr<_1c48955e4_VarDecl> _field_KeyB;
	

};
inline jule::Bool _1c4897470_RangeKind_eq(_1c4897470_RangeKind *_self_, _1c4897470_RangeKind _other_);


struct _1c4897849_BreakSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_Label;
	

};
inline jule::Bool _1c4897849_BreakSt_eq(_1c4897849_BreakSt *_self_, _1c4897849_BreakSt _other_);


struct _1c4897c23_ContSt {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_Label;
	

};
inline jule::Bool _1c4897c23_ContSt_eq(_1c4897c23_ContSt *_self_, _1c4897c23_ContSt _other_);


struct _1c48981c9_If {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c48981c9_If_eq(_1c48981c9_If *_self_, _1c48981c9_If _other_);


struct _1c48985a3_Else {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	

};
inline jule::Bool _1c48985a3_Else_eq(_1c48985a3_Else *_self_, _1c48985a3_Else _other_);


struct _1c4898a59_Conditional {
	jule::Ptr<_1c48981c9_If> _field_Head;
	jule::Slice<jule::Ptr<_1c48981c9_If>> _field_Tail;
	jule::Ptr<_1c48985a3_Else> _field_Default;
	

};
struct _1c4899296_TypeAliasDecl {
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1c4899296_TypeAliasDecl_eq(_1c4899296_TypeAliasDecl *_self_, _1c4899296_TypeAliasDecl _other_);


struct _1c489974c_Case {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_Exprs;
	

};
struct _1c489a066_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1c489974c_Case>> _field_Cases;
	jule::Ptr<_1c48985a3_Else> _field_Default;
	

};
struct _1c489a880_UseDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Selected;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	

};
struct _1c489ad36_EnumItemDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	

};
inline jule::Bool _1c489ad36_EnumItemDecl_eq(_1c489ad36_EnumItemDecl *_self_, _1c489ad36_EnumItemDecl _other_);


struct _1c489b8e7_EnumDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c486c19d_Token> _field_End;
	

};
struct _1c489c222_TypeEnumItemDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	

};
inline jule::Bool _1c489c222_TypeEnumItemDecl_eq(_1c489c222_TypeEnumItemDecl *_self_, _1c489c222_TypeEnumItemDecl _other_);


struct _1c489c882_TypeEnumDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c486c19d_Token> _field_End;
	

};
struct _1c489cb4b_FieldDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1c4882779_TypeDecl> _field_Kind;
	jule::Ptr<_1c4886aad_Expr> _field_Default;
	

};
inline jule::Bool _1c489cb4b_FieldDecl_eq(_1c489cb4b_FieldDecl *_self_, _1c489cb4b_FieldDecl _other_);


struct _1c489d542_StructDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_Generics;
	

};
struct _1c489dc7e_TraitDecl {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c4894439_FnDecl>> _field_Methods;
	

};
struct _1c489e3de_Impl {
	jule::Ptr<_1c486c19d_Token> _field_End;
	jule::Ptr<_1c4882779_TypeDecl> _field_Base;
	jule::Ptr<_1c4882779_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c4894439_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _field_Statics;
	

};
struct _1c48a0753_Field {
	jule::Ptr<_1c48a3679_Struct> _field_Owner;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Ptr<_1c4886aad_Expr> _field_Default;
	

};
inline jule::Bool _1c48a0753_Field_eq(_1c48a0753_Field *_self_, _1c48a0753_Field _other_);


struct _1c48a2766_Operators {
	jule::Ptr<_1c48bb719_FnIns> _field_Eq;
	jule::Ptr<_1c48bb719_FnIns> _field_Gt;
	jule::Ptr<_1c48bb719_FnIns> _field_GtEq;
	jule::Ptr<_1c48bb719_FnIns> _field_Lt;
	jule::Ptr<_1c48bb719_FnIns> _field_LtEq;
	jule::Ptr<_1c48bb719_FnIns> _field_Shl;
	jule::Ptr<_1c48bb719_FnIns> _field_Shr;
	jule::Ptr<_1c48bb719_FnIns> _field_Add;
	jule::Ptr<_1c48bb719_FnIns> _field_Sub;
	jule::Ptr<_1c48bb719_FnIns> _field_Div;
	jule::Ptr<_1c48bb719_FnIns> _field_Mul;
	jule::Ptr<_1c48bb719_FnIns> _field_Mod;
	jule::Ptr<_1c48bb719_FnIns> _field_BitAnd;
	jule::Ptr<_1c48bb719_FnIns> _field_BitOr;
	jule::Ptr<_1c48bb719_FnIns> _field_BitXor;
	jule::Ptr<_1c48bb719_FnIns> _field_Neg;
	jule::Ptr<_1c48bb719_FnIns> _field_Pos;
	jule::Ptr<_1c48bb719_FnIns> _field_BitNot;
	jule::Ptr<_1c48bb719_FnIns> _field_AddAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_SubAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_DivAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_MulAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_ModAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_ShlAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_ShrAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_BitOrAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_BitAndAssign;
	jule::Ptr<_1c48bb719_FnIns> _field_BitXorAssign;
	

};
inline jule::Bool _1c48a2766_Operators_eq(_1c48a2766_Operators *_self_, _1c48a2766_Operators _other_);


struct _1c48a3679_Struct {
	jule::Ptr<_1c494d290_sema> _field_sema;
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _field_Uses;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c48a0753_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1c48cc1b9_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1c48a6407_StructIns>> _field_Instances;
	

};
struct _1c48a5857_FieldIns {
	jule::Ptr<_1c48a0753_Field> _field_Decl;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Ptr<_1c49ce024_Data> _field_Default;
	

};
inline jule::Bool _1c48a5857_FieldIns_eq(_1c48a5857_FieldIns *_self_, _1c48a5857_FieldIns _other_);


struct _1c48a6407_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1c48a3679_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c48a5857_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1c48be8a4_ReferenceStack> _field_Refers;
	_1c48a2766_Operators _field_Operators;
	

};
struct _1c48aa362_OperandExprModel {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Any _field_Model;
	

};
inline jule::Bool _1c48aa362_OperandExprModel_eq(_1c48aa362_OperandExprModel *_self_, _1c48aa362_OperandExprModel _other_);


struct _1c48aa85c_BinaryExprModel {
	jule::Ptr<_1c48aa362_OperandExprModel> _field_Left;
	jule::Ptr<_1c48aa362_OperandExprModel> _field_Right;
	jule::Ptr<_1c486c19d_Token> _field_Op;
	

};
inline jule::Bool _1c48aa85c_BinaryExprModel_eq(_1c48aa85c_BinaryExprModel *_self_, _1c48aa85c_BinaryExprModel _other_);


struct _1c48aac36_UnaryExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c486c19d_Token> _field_Op;
	

};
inline jule::Bool _1c48aac36_UnaryExprModel_eq(_1c48aac36_UnaryExprModel *_self_, _1c48aac36_UnaryExprModel _other_);


struct _1c48ab264_StructArgExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c48a5857_FieldIns> _field_Field;
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	

};
inline jule::Bool _1c48ab264_StructArgExprModel_eq(_1c48ab264_StructArgExprModel *_self_, _1c48ab264_StructArgExprModel _other_);


struct _1c48ab60a_StructLitExprModel {
	jule::Ptr<_1c48a6407_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1c48ab264_StructArgExprModel>> _field_Args;
	

};
struct _1c48ab907_AllocStructLitExprModel {
	jule::Ptr<_1c48ab60a_StructLitExprModel> _field_Lit;
	

};
inline jule::Bool _1c48ab907_AllocStructLitExprModel_eq(_1c48ab907_AllocStructLitExprModel *_self_, _1c48ab907_AllocStructLitExprModel _other_);


struct _1c48abe8a_CastingExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Ptr<_1c4a1020e_TypeKind> _field_ExprKind;
	

};
inline jule::Bool _1c48abe8a_CastingExprModel_eq(_1c48abe8a_CastingExprModel *_self_, _1c48abe8a_CastingExprModel _other_);


struct _1c48ac83c_FnCallExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c48bb719_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1c490ac86_Scope> _field_Except;
	jule::Bool _field_Assigned;
	

};
struct _1c48acc16_SliceExprModel {
	jule::Ptr<_1c4a1020e_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1c48ad1bc_IndexingExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c49ce024_Data> _field_Index;
	

};
inline jule::Bool _1c48ad1bc_IndexingExprModel_eq(_1c48ad1bc_IndexingExprModel *_self_, _1c48ad1bc_IndexingExprModel _other_);


struct _1c48ad673_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Captured;
	jule::Ptr<_1c48bb719_FnIns> _field_Func;
	jule::Bool _field_Global;
	

};
struct _1c48ada4c_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
	

};
inline jule::Bool _1c48ada4c_KeyValPairExprModel_eq(_1c48ada4c_KeyValPairExprModel *_self_, _1c48ada4c_KeyValPairExprModel _other_);


struct _1c48ae003_MapExprModel {
	jule::Ptr<_1c4a1020e_TypeKind> _field_KeyKind;
	jule::Ptr<_1c4a1020e_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1c48ada4c_KeyValPairExprModel>> _field_Entries;
	

};
struct _1c48ae586_SlicingExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _1c48ae586_SlicingExprModel_eq(_1c48ae586_SlicingExprModel *_self_, _1c48ae586_SlicingExprModel _other_);


struct _1c48aeb19_TraitSubIdentExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1c48b8738_Fn> _field_Method;
	jule::Ptr<_1c48cc1b9_Trait> _field_Trt;
	

};
inline jule::Bool _1c48aeb19_TraitSubIdentExprModel_eq(_1c48aeb19_TraitSubIdentExprModel *_self_, _1c48aeb19_TraitSubIdentExprModel _other_);


struct _1c48b04aa_StructSubIdentExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c48bb719_FnIns> _field_Method;
	jule::Ptr<_1c48a5857_FieldIns> _field_Field;
	jule::Ptr<_1c48a6407_StructIns> _field_Owner;
	

};
inline jule::Bool _1c48b04aa_StructSubIdentExprModel_eq(_1c48b04aa_StructSubIdentExprModel *_self_, _1c48b04aa_StructSubIdentExprModel _other_);


struct _1c48b0851_StructStaticIdentExprModel {
	jule::Ptr<_1c48a6407_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1c48bb719_FnIns> _field_Method;
	

};
inline jule::Bool _1c48b0851_StructStaticIdentExprModel_eq(_1c48b0851_StructStaticIdentExprModel *_self_, _1c48b0851_StructStaticIdentExprModel _other_);


struct _1c48b0c2a_ArrayExprModel {
	jule::Ptr<_1c4a1e608_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

};
struct _1c48b1027_TupleExprModel {
	jule::Slice<jule::Ptr<_1c49ce024_Data>> _field_Datas;
	

};
struct _1c48b1401_BuiltinOutCallExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1c48b1401_BuiltinOutCallExprModel_eq(_1c48b1401_BuiltinOutCallExprModel *_self_, _1c48b1401_BuiltinOutCallExprModel _other_);


struct _1c48b17ca_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Debug;
	

};
inline jule::Bool _1c48b17ca_BuiltinOutlnCallExprModel_eq(_1c48b17ca_BuiltinOutlnCallExprModel *_self_, _1c48b17ca_BuiltinOutlnCallExprModel _other_);


struct _1c48b1ba4_BuiltinNewCallExprModel {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Any _field_Init;
	

};
inline jule::Bool _1c48b1ba4_BuiltinNewCallExprModel_eq(_1c48b1ba4_BuiltinNewCallExprModel *_self_, _1c48b1ba4_BuiltinNewCallExprModel _other_);


struct _1c48b207d_BuiltinPanicCallExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c48b207d_BuiltinPanicCallExprModel_eq(_1c48b207d_BuiltinPanicCallExprModel *_self_, _1c48b207d_BuiltinPanicCallExprModel _other_);


struct _1c48b2534_BuiltinAssertCallExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Str _field_Log;
	

};
inline jule::Bool _1c48b2534_BuiltinAssertCallExprModel_eq(_1c48b2534_BuiltinAssertCallExprModel *_self_, _1c48b2534_BuiltinAssertCallExprModel _other_);


struct _1c48b29da_BuiltinMakeCallExprModel {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Any _field_Len;
	jule::Any _field_Cap;
	

};
inline jule::Bool _1c48b29da_BuiltinMakeCallExprModel_eq(_1c48b29da_BuiltinMakeCallExprModel *_self_, _1c48b29da_BuiltinMakeCallExprModel _other_);


struct _1c48b2db4_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
	

};
inline jule::Bool _1c48b2db4_BuiltinAppendCallExprModel_eq(_1c48b2db4_BuiltinAppendCallExprModel *_self_, _1c48b2db4_BuiltinAppendCallExprModel _other_);


struct _1c48b31b1_BuiltinLenCallExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	

};
inline jule::Bool _1c48b31b1_BuiltinLenCallExprModel_eq(_1c48b31b1_BuiltinLenCallExprModel *_self_, _1c48b31b1_BuiltinLenCallExprModel _other_);


struct _1c48b34ad_BuiltinCapCallExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	

};
inline jule::Bool _1c48b34ad_BuiltinCapCallExprModel_eq(_1c48b34ad_BuiltinCapCallExprModel *_self_, _1c48b34ad_BuiltinCapCallExprModel _other_);


struct _1c48b3887_BuiltinDeleteCallExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Dest;
	jule::Ptr<_1c49ce024_Data> _field_Key;
	

};
inline jule::Bool _1c48b3887_BuiltinDeleteCallExprModel_eq(_1c48b3887_BuiltinDeleteCallExprModel *_self_, _1c48b3887_BuiltinDeleteCallExprModel _other_);


struct _1c48b3c61_BuiltinCopyCallExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Dest;
	jule::Ptr<_1c49ce024_Data> _field_Src;
	

};
inline jule::Bool _1c48b3c61_BuiltinCopyCallExprModel_eq(_1c48b3c61_BuiltinCopyCallExprModel *_self_, _1c48b3c61_BuiltinCopyCallExprModel _other_);


struct _1c48b413a_BuiltinErrorCallExprModel {
	jule::Ptr<_1c48bb719_FnIns> _field_Func;
	jule::Ptr<_1c49ce024_Data> _field_Err;
	

};
inline jule::Bool _1c48b413a_BuiltinErrorCallExprModel_eq(_1c48b413a_BuiltinErrorCallExprModel *_self_, _1c48b413a_BuiltinErrorCallExprModel _other_);


struct _1c48b47de_SizeofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c48b47de_SizeofExprModel_eq(_1c48b47de_SizeofExprModel *_self_, _1c48b47de_SizeofExprModel _other_);


struct _1c48b49cb_AlignofExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c48b49cb_AlignofExprModel_eq(_1c48b49cb_AlignofExprModel *_self_, _1c48b49cb_AlignofExprModel _other_);


struct _1c48b4c73_RuneExprModel {
	jule::I32 _field_Code;
	

};
inline jule::Bool _1c48b4c73_RuneExprModel_eq(_1c48b4c73_RuneExprModel *_self_, _1c48b4c73_RuneExprModel _other_);


struct _1c48b5070_IntegratedToStrExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c48b5070_IntegratedToStrExprModel_eq(_1c48b5070_IntegratedToStrExprModel *_self_, _1c48b5070_IntegratedToStrExprModel _other_);


struct _1c48b5449_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

};
struct _1c48b5746_FreeExprModel {
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c48b5746_FreeExprModel_eq(_1c48b5746_FreeExprModel *_self_, _1c48b5746_FreeExprModel _other_);


struct _1c48b6549_RetType {
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Idents;
	

};
struct _1c48b6c64_Param {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c48b6c64_Param_eq(_1c48b6c64_Param *_self_, _1c48b6c64_Param _other_);


struct _1c48b8738_Fn {
	jule::Ptr<_1c494d290_sema> _field_sema;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_Generics;
	jule::Ptr<_1c48b6549_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1c48b6c64_Param>> _field_Params;
	jule::Ptr<_1c48a3679_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1c48bb719_FnIns>> _field_Instances;
	

};
struct _1c48ba691_ParamIns {
	jule::Ptr<_1c48b6c64_Param> _field_Decl;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	

};
inline jule::Bool _1c48ba691_ParamIns_eq(_1c48ba691_ParamIns *_self_, _1c48ba691_ParamIns _other_);


struct _1c48bb719_FnIns {
	jule::Ptr<_1c48a6407_StructIns> _field_Owner;
	jule::Ptr<_1c48b8738_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _field_Params;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Result;
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	jule::Ptr<_1c48be8a4_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*> _field_caller;
	jule::Bool _field_reloaded;
	

};
struct _1c48be8a4_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

};
struct _1c48c0db1_Pass {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Text;
	

};
inline jule::Bool _1c48c0db1_Pass_eq(_1c48c0db1_Pass *_self_, _1c48c0db1_Pass _other_);


struct _1c48c5866_symbolBuilder {
	jule::Ptr<_1c48c5866_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_205a977d7_Log> _field_errors;
	jule::Ptr<_1c48807bb_AST> _field_ast;
	jule::Ptr<_1c49c8bab_SymbolTable> _field_table;
	

};
struct _1c48cc1b9_Trait {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _field_Implemented;
	

};
struct _1c48cdd58_EnumItem {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c49d019b_Value> _field_Value;
	

};
inline jule::Bool _1c48cdd58_EnumItem_eq(_1c48cdd58_EnumItem *_self_, _1c48cdd58_EnumItem _other_);


struct _1c48ce8c5_Enum {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _field_Items;
	

};
struct _1c48d0a08_TypeEnumItem {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	

};
inline jule::Bool _1c48d0a08_TypeEnumItem_eq(_1c48d0a08_TypeEnumItem *_self_, _1c48d0a08_TypeEnumItem _other_);


struct _1c48d10d0_TypeEnum {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _field_Items;
	

};
struct _1c48d42c0_comptimeRange {
	jule::Trait _field_kind;
	

};
inline jule::Bool _1c48d42c0_comptimeRange_eq(_1c48d42c0_comptimeRange *_self_, _1c48d42c0_comptimeRange _other_);


struct _1c48d4c93_comptimeStructField {
	jule::Ptr<_1c48a5857_FieldIns> _field_field;
	

};
inline jule::Bool _1c48d4c93_comptimeStructField_eq(_1c48d4c93_comptimeStructField *_self_, _1c48d4c93_comptimeStructField _other_);


struct _1c48d6954_comptimeStructFields {
	jule::Slice<jule::Ptr<_1c48a5857_FieldIns>> _field_fields;
	

};
struct _1c48d804e_comptimeStatic {
	jule::Ptr<_1c49715b0_Var> _field_field;
	

};
inline jule::Bool _1c48d804e_comptimeStatic_eq(_1c48d804e_comptimeStatic *_self_, _1c48d804e_comptimeStatic _other_);


struct _1c48d9c10_comptimeStatics {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_fields;
	

};
struct _1c48db30a_comptimeEnumField {
	jule::Ptr<_1c48cdd58_EnumItem> _field_field;
	

};
inline jule::Bool _1c48db30a_comptimeEnumField_eq(_1c48db30a_comptimeEnumField *_self_, _1c48db30a_comptimeEnumField _other_);


struct _1c48dc6a2_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _field_fields;
	

};
struct _1c48ddc9c_comptimeParam {
	jule::Ptr<_1c48ba691_ParamIns> _field_param;
	

};
inline jule::Bool _1c48ddc9c_comptimeParam_eq(_1c48ddc9c_comptimeParam *_self_, _1c48ddc9c_comptimeParam _other_);


struct _1c48e0e36_comptimeParams {
	jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _field_params;
	

};
struct _1c48e24ed_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>> _field_types;
	

};
struct _1c48e3ae8_comptimeTypeInfo {
	jule::Ptr<_1c4a1020e_TypeKind> _field_base;
	

};
inline jule::Bool _1c48e3ae8_comptimeTypeInfo_eq(_1c48e3ae8_comptimeTypeInfo *_self_, _1c48e3ae8_comptimeTypeInfo _other_);


struct _1c48ea10a_comptimeValue {
	jule::Ptr<_1c49ce024_Data> _field_data;
	

};
inline jule::Bool _1c48ea10a_comptimeValue_eq(_1c48ea10a_comptimeValue *_self_, _1c48ea10a_comptimeValue _other_);


struct _1c48ec959_comptimeFiles {
	jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>> _field_files;
	

};
struct _1c48ee054_comptimeFile {
	jule::Ptr<_1c49c8bab_SymbolTable> _field_file;
	

};
inline jule::Bool _1c48ee054_comptimeFile_eq(_1c48ee054_comptimeFile *_self_, _1c48ee054_comptimeFile _other_);


struct _1c49034cb_constraintChecker {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _field_genericsA;
	jule::Ptr<_1c48bb719_FnIns> _field_fi;
	jule::Ptr<_1c48a6407_StructIns> _field_si;
	jule::Ptr<_1c486c19d_Token> _field_et;
	jule::Bool _field_uniq;
	

};
struct _1c4905830_Impl {
	jule::Ptr<_1c4882779_TypeDecl> _field_Base;
	jule::Ptr<_1c4882779_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Statics;
	

};
struct _1c490ac86_Scope {
	jule::Ptr<_1c490ac86_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	

};
struct _1c490b1a4_If {
	jule::Any _field_Expr;
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	

};
inline jule::Bool _1c490b1a4_If_eq(_1c490b1a4_If *_self_, _1c490b1a4_If _other_);


struct _1c490b4a1_Else {
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	

};
inline jule::Bool _1c490b4a1_Else_eq(_1c490b4a1_Else *_self_, _1c490b4a1_Else _other_);


struct _1c490b8be_Conditional {
	jule::Slice<jule::Ptr<_1c490b1a4_If>> _field_Elifs;
	jule::Ptr<_1c490b4a1_Else> _field_Default;
	

};
struct _1c490bbbb_InfIter {
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	

};
inline jule::Bool _1c490bbbb_InfIter_eq(_1c490bbbb_InfIter *_self_, _1c490bbbb_InfIter _other_);


struct _1c490c172_WhileIter {
	jule::Any _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	

};
inline jule::Bool _1c490c172_WhileIter_eq(_1c490c172_WhileIter *_self_, _1c490c172_WhileIter _other_);


struct _1c490cabd_RangeIter {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	jule::Ptr<_1c49715b0_Var> _field_KeyA;
	jule::Ptr<_1c49715b0_Var> _field_KeyB;
	

};
inline jule::Bool _1c490cabd_RangeIter_eq(_1c490cabd_RangeIter *_self_, _1c490cabd_RangeIter _other_);


struct _1c490ce53_ContSt {
	jule::Uintptr _field_It;
	

};
inline jule::Bool _1c490ce53_ContSt_eq(_1c490ce53_ContSt *_self_, _1c490ce53_ContSt _other_);


struct _1c490d32c_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
	

};
inline jule::Bool _1c490d32c_BreakSt_eq(_1c490d32c_BreakSt *_self_, _1c490d32c_BreakSt _other_);


struct _1c490d629_Label {
	jule::Str _field_Ident;
	

};
inline jule::Bool _1c490d629_Label_eq(_1c490d629_Label *_self_, _1c490d629_Label _other_);


struct _1c490da03_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1c490d629_Label> _field_Label;
	

};
inline jule::Bool _1c490da03_GotoSt_eq(_1c490da03_GotoSt *_self_, _1c490da03_GotoSt _other_);


struct _1c490ddcc_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
	

};
inline jule::Bool _1c490ddcc_Postfix_eq(_1c490ddcc_Postfix *_self_, _1c490ddcc_Postfix _other_);


struct _1c490e383_Assign {
	jule::Ptr<_1c48aa362_OperandExprModel> _field_Left;
	jule::Ptr<_1c48aa362_OperandExprModel> _field_Right;
	jule::Ptr<_1c486c19d_Token> _field_Op;
	

};
inline jule::Bool _1c490e383_Assign_eq(_1c490e383_Assign *_self_, _1c490e383_Assign _other_);


struct _1c490e839_MultiAssign {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1c49ce024_Data>> _field_Left;
	jule::Any _field_Right;
	

};
struct _1c490ee99_Match {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1c49109c2_Case>> _field_Cases;
	jule::Ptr<_1c49109c2_Case> _field_Default;
	

};
struct _1c49109c2_Case {
	jule::Ptr<_1c490ee99_Match> _field_Owner;
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1c49ce024_Data>> _field_Exprs;
	jule::Ptr<_1c49109c2_Case> _field_Next;
	

};
struct _1c49111ba_FallSt {
	jule::Uintptr _field_DestCase;
	

};
inline jule::Bool _1c49111ba_FallSt_eq(_1c49111ba_FallSt *_self_, _1c49111ba_FallSt _other_);


struct _1c4911561_RetSt {
	jule::Ptr<_1c48bb719_FnIns> _field_Func;
	jule::Any _field_Expr;
	

};
inline jule::Bool _1c4911561_RetSt_eq(_1c4911561_RetSt *_self_, _1c4911561_RetSt _other_);


struct _1c4911bc1_scopeLabel {
	jule::Ptr<_1c486c19d_Token> _field_token;
	jule::Ptr<_1c490d629_Label> _field_label;
	jule::I64 _field_pos;
	jule::Ptr<_1c4913244_scopeChecker> _field_scope;
	jule::Bool _field_used;
	

};
inline jule::Bool _1c4911bc1_scopeLabel_eq(_1c4911bc1_scopeLabel *_self_, _1c4911bc1_scopeLabel _other_);


struct _1c4912254_scopeGoto {
	jule::Ptr<_1c490da03_GotoSt> _field_st;
	jule::Ptr<_1c4890237_GotoSt> _field_gt;
	jule::Ptr<_1c4913244_scopeChecker> _field_scope;
	jule::I64 _field_pos;
	

};
inline jule::Bool _1c4912254_scopeGoto_eq(_1c4912254_scopeGoto *_self_, _1c4912254_scopeGoto _other_);


struct _1c4913244_scopeChecker {
	jule::Ptr<_1c486c19d_Token> _field_calledFrom;
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Ptr<_1c48bb719_FnIns> _field_owner;
	jule::Ptr<_1c4913244_scopeChecker> _field_parent;
	jule::I64 _field_childIndex;
	jule::Ptr<_1c49c8bab_SymbolTable> _field_table;
	jule::Ptr<_1c490ac86_Scope> _field_scope;
	jule::Ptr<_1c489279a_ScopeTree> _field_tree;
	jule::Ptr<_1c48bb719_FnIns> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1c49715b0_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4911bc1_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4912254_scopeGoto>>> _field_gotos;
	jule::I64 _field_i;
	

};
inline jule::Bool _1c4913244_scopeChecker_eq(_1c4913244_scopeChecker *_self_, _1c4913244_scopeChecker _other_);


struct _1c4926873_directiveChecker {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1c4881b96_Directive>>> _field_d;
	jule::Any _field_o;
	

};
inline jule::Bool _1c4926873_directiveChecker_eq(_1c4926873_directiveChecker *_self_, _1c4926873_directiveChecker _other_);


struct _1c492cd1e_ImportInfo {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Bool _field_ImportAll;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_Selected;
	jule::Ptr<_1c4930c45_Package> _field_Package;
	jule::I64 _field_ModId;
	

};
struct _1c4930c45_Package {
	jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>> _field_Files;
	

};
struct _1c494c668_commonSemaMeta {
	jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1c492cd1e_ImportInfo> _field_runtime;
	

};
struct _1c494d290_sema {
	jule::Slice<_205a977d7_Log> _field_errors;
	jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>> _field_files;
	jule::Ptr<_1c49c8bab_SymbolTable> _field_file;
	jule::I64 _field_flags;
	jule::Ptr<_1c494c668_commonSemaMeta> _field_meta;
	

};
struct _1c496d359_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
	

};
struct _1c49715b0_Var {
	jule::Ptr<_1c490ac86_Scope> _field_Scope;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Ptr<_1c49d019b_Value> _field_Value;
	jule::Ptr<_1c48be8a4_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_Directives;
	jule::I64 _field_RetOrder;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Depends;
	

};
struct _1c4972649_FuncPattern {
	

};
struct _1c49b0d80_typeCompatibilityChecker {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Ptr<_1c4a1020e_TypeKind> _field_dest;
	jule::Ptr<_1c4a1020e_TypeKind> _field_src;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	

};
inline jule::Bool _1c49b0d80_typeCompatibilityChecker_eq(_1c49b0d80_typeCompatibilityChecker *_self_, _1c49b0d80_typeCompatibilityChecker _other_);


struct _1c49b798b_assignTypeChecker {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Ptr<_1c4a1020e_TypeKind> _field_dest;
	jule::Ptr<_1c49ce024_Data> _field_d;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	

};
inline jule::Bool _1c49b798b_assignTypeChecker_eq(_1c49b798b_assignTypeChecker *_self_, _1c49b798b_assignTypeChecker _other_);


struct _1c49b9361_dynamicTypeAnnotation {
	jule::Ptr<_1c49d0c4b_eval> _field_e;
	jule::Ptr<_1c48bb719_FnIns> _field_f;
	jule::Ptr<_1c48ba691_ParamIns> _field_p;
	jule::Ptr<_1c49ce024_Data> _field_a;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	jule::Ptr<_1c4a1020e_TypeKind>* _field_k;
	jule::Ptr<_1c4882779_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_ignored;
	

};
struct _1c49be1bd_fnCallArgChecker {
	jule::Ptr<_1c49d0c4b_eval> _field_e;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_args;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	jule::Ptr<_1c48bb719_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_ignored;
	

};
struct _1c49c2105_structLitChecker {
	jule::Ptr<_1c49d0c4b_eval> _field_e;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	jule::Ptr<_1c48a6407_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1c48ab264_StructArgExprModel>> _field_args;
	

};
struct _1c49c3dd7_rangeChecker {
	jule::Ptr<_1c4913244_scopeChecker> _field_sc;
	jule::Ptr<_1c4897470_RangeKind> _field_rang;
	jule::Ptr<_1c490cabd_RangeIter> _field_Kind;
	jule::Ptr<_1c49ce024_Data> _field_d;
	

};
inline jule::Bool _1c49c3dd7_rangeChecker_eq(_1c49c3dd7_rangeChecker *_self_, _1c49c3dd7_rangeChecker _other_);


struct _1c49c6648_retTypeChecker {
	jule::Ptr<_1c4913244_scopeChecker> _field_sc;
	jule::Ptr<_1c48bb719_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _field_exprs;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	jule::Any _field_model;
	

};
struct _1c49c8bab_SymbolTable {
	jule::Ptr<_1c4872934_File> _field_File;
	jule::Slice<_1c48c0db1_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1c48cc1b9_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1c48ce8c5_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1c4905830_Impl>> _field_Impls;
	

};
struct _1c49ce024_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1dc54537a_Const> _field_Constant;
	

};
inline jule::Bool _1c49ce024_Data_eq(_1c49ce024_Data *_self_, _1c49ce024_Data _other_);


struct _1c49d019b_Value {
	jule::Ptr<_1c4886aad_Expr> _field_Expr;
	jule::Ptr<_1c49ce024_Data> _field_Data;
	

};
inline jule::Bool _1c49d019b_Value_eq(_1c49d019b_Value *_self_, _1c49d019b_Value _other_);


struct _1c49d0c4b_eval {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1c4a1020e_TypeKind> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_immutable;
	jule::Bool _field_ignored;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1c49715b0_Var> _field_owner;
	jule::Ptr<_1c48a5857_FieldIns> _field_field;
	jule::Bool _field_arg;
	

};
inline jule::Bool _1c49d0c4b_eval_eq(_1c49d0c4b_eval *_self_, _1c49d0c4b_eval _other_);


struct _1c49ee473_unaryEval {
	jule::Ptr<_1c49d0c4b_eval> _field_e;
	jule::Ptr<_1c49ce024_Data> _field_d;
	jule::Ptr<_1c4888b6a_UnaryExpr> _field_u;
	

};
inline jule::Bool _1c49ee473_unaryEval_eq(_1c49ee473_unaryEval *_self_, _1c49ee473_unaryEval _other_);


struct _1c4a0140e_binaryEval {
	jule::Ptr<_1c49d0c4b_eval> _field_e;
	jule::Ptr<_1c49ce024_Data> _field_l;
	jule::Ptr<_1c49ce024_Data> _field_r;
	jule::Ptr<_1c486c19d_Token> _field_op;
	

};
inline jule::Bool _1c4a0140e_binaryEval_eq(_1c4a0140e_binaryEval *_self_, _1c4a0140e_binaryEval _other_);


struct _1c4a0d828_InsGeneric {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_Constraint;
	

};
struct _1c4a0e41c_TypeAlias {
	jule::Ptr<_1c489279a_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1c4a173d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _field_Generics;
	

};
struct _1c4a1020e_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
	

};
inline jule::Bool _1c4a1020e_TypeKind_eq(_1c4a1020e_TypeKind *_self_, _1c4a1020e_TypeKind _other_);


struct _1c4a173d1_TypeSymbol {
	jule::Ptr<_1c4882779_TypeDecl> _field_Decl;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Kind;
	

};
inline jule::Bool _1c4a173d1_TypeSymbol_eq(_1c4a173d1_TypeSymbol *_self_, _1c4a173d1_TypeSymbol _other_);


struct _1c4a17cd8_Prim {
	jule::Str _field_Kind;
	

};
inline jule::Bool _1c4a17cd8_Prim_eq(_1c4a17cd8_Prim *_self_, _1c4a17cd8_Prim _other_);


struct _1c4a1b814_Sptr {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c4a1b814_Sptr_eq(_1c4a1b814_Sptr *_self_, _1c4a1b814_Sptr _other_);


struct _1c4a1c2d7_Slc {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c4a1c2d7_Slc_eq(_1c4a1c2d7_Slc *_self_, _1c4a1c2d7_Slc _other_);


struct _1c4a1cdcb_Tuple {
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_Types;
	

};
struct _1c4a1d97b_Map {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Key;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Val;
	

};
inline jule::Bool _1c4a1d97b_Map_eq(_1c4a1d97b_Map *_self_, _1c4a1d97b_Map _other_);


struct _1c4a1e608_Arr {
	jule::Bool _field_Auto;
	jule::I64 _field_N;
	jule::Ptr<_1c4a1020e_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c4a1e608_Arr_eq(_1c4a1e608_Arr *_self_, _1c4a1e608_Arr _other_);


struct _1c4a200cb_Ptr {
	jule::Ptr<_1c4a1020e_TypeKind> _field_Elem;
	

};
inline jule::Bool _1c4a200cb_Ptr_eq(_1c4a200cb_Ptr *_self_, _1c4a200cb_Ptr _other_);


struct _1c4a210cc_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
	

};
inline jule::Bool _1c4a210cc_referencer_eq(_1c4a210cc_referencer *_self_, _1c4a210cc_referencer _other_);


struct _1c4a220bc_typeChecker {
	jule::Ptr<_1c494d290_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1c4a210cc_referencer> _field_referencer;
	jule::Ptr<_1c48be8a4_ReferenceStack> _field_refers;
	jule::Ptr<_1c486c19d_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1c4a0e41c_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
	

};
struct _1c4a29c73_identTypeLookup {
	

};
inline jule::Bool _1c4a29c73_identTypeLookup_eq(_1c4a29c73_identTypeLookup *_self_, _1c4a29c73_identTypeLookup _other_);


struct _1c5635e77_FileInfo {
	jule::Ptr<_1c48807bb_AST> _field_Ast;
	jule::Slice<_205a977d7_Log> _field_Errors;
	

};
struct _1c567bbd2_stmt {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_tokens;
	jule::Bool _field_terminated;
	

};
struct _1c567c573_scopeParser {
	jule::Ptr<_1c569ab02_parser> _field_p;
	jule::Ptr<_1c489279a_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _field_stmts;
	jule::I64 _field_pos;
	

};
struct _1c5689edc_exprBuilder {
	jule::Ptr<_1c569ab02_parser> _field_p;
	

};
inline jule::Bool _1c5689edc_exprBuilder_eq(_1c5689edc_exprBuilder *_self_, _1c5689edc_exprBuilder _other_);


struct _1c5697703_assignInfo {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_r;
	jule::Ptr<_1c486c19d_Token> _field_setter;
	jule::Bool _field_ok;
	

};
struct _1c569ab02_parser {
	jule::Ptr<_1c48807bb_AST> _field_ast;
	jule::Slice<jule::Ptr<_1c4881b96_Directive>> _field_directives;
	jule::Slice<_205a977d7_Log> _field_errors;
	jule::Ptr<_1c5689edc_exprBuilder> _field_ep;
	

};
struct _1c56acc24_typeBuilder {
	jule::Ptr<_1c569ab02_parser> _field_p;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _field_tokens;
	jule::I64* _field_i;
	jule::Bool _field_err;
	

};
struct _1c4c838e4_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
	

};
inline jule::Bool _1c4c838e4_CompileInfo_eq(_1c4c838e4_CompileInfo *_self_, _1c4c838e4_CompileInfo _other_);


struct _1c4c84dbd_directiveEval {
	jule::Slice<_205a977d7_Log> _field_logs;
	jule::Ptr<_1c4881b96_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1c56b1d5a_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

};
struct _1c56b8867_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
	

};
struct _1c56c4ac6_OrderedDefines {
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_Globals;
	

};
struct _1c57e050a_liveTable {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1c48bb719_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1c48a6407_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1c48cc1b9_Trait>> _field_traits;
	

};
struct _1c57e0928_ObjectDeadCode {
	_1c57e050a_liveTable _field_live;
	jule::Ptr<_1c56b4830_IR> _field_ir;
	

};
struct _1c57e4575_scopeDeadCode {
	jule::Ptr<_1c57e4575_scopeDeadCode> _field_parent;
	jule::Ptr<_1c490ac86_Scope> _field_s;
	jule::I64 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1c490d629_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1c490da03_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
	

};
inline jule::Bool _1c57e4575_scopeDeadCode_eq(_1c57e4575_scopeDeadCode *_self_, _1c57e4575_scopeDeadCode _other_);


struct _1c57e8c1c_exprDeadCode {
	jule::Ptr<_1c57e4575_scopeDeadCode> _field_s;
	

};
inline jule::Bool _1c57e8c1c_exprDeadCode_eq(_1c57e8c1c_exprDeadCode *_self_, _1c57e8c1c_exprDeadCode _other_);


struct _21dde173e_ExceptionalForwardingExprModel {
	jule::Ptr<_1c48ac83c_FnCallExprModel> _field_Expr;
	

};
inline jule::Bool _21dde173e_ExceptionalForwardingExprModel_eq(_21dde173e_ExceptionalForwardingExprModel *_self_, _21dde173e_ExceptionalForwardingExprModel _other_);


struct _21dde1ac4_SwapExprModel {
	jule::Ptr<_1c49ce024_Data> _field_Left;
	jule::Ptr<_1c49ce024_Data> _field_Right;
	

};
inline jule::Bool _21dde1ac4_SwapExprModel_eq(_21dde1ac4_SwapExprModel *_self_, _21dde1ac4_SwapExprModel _other_);


struct _21dde1e9d_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
	

};
inline jule::Bool _21dde1e9d_EmptyCompareExprModel_eq(_21dde1e9d_EmptyCompareExprModel *_self_, _21dde1e9d_EmptyCompareExprModel _other_);


struct _21dde2322_RefExprModel {
	jule::Ptr<_1c49715b0_Var> _field_Var;
	

};
inline jule::Bool _21dde2322_RefExprModel_eq(_21dde2322_RefExprModel *_self_, _21dde2322_RefExprModel _other_);


struct _21dde2795_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1dc54537a_Const> _field_Right;
	jule::Bool _field_NotEq;
	

};
inline jule::Bool _21dde2795_StrCompExprModel_eq(_21dde2795_StrCompExprModel *_self_, _21dde2795_StrCompExprModel _other_);


struct _21dde2d28_MutSlicingExprModel {
	jule::Ptr<_1c486c19d_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
	

};
inline jule::Bool _21dde2d28_MutSlicingExprModel_eq(_21dde2d28_MutSlicingExprModel *_self_, _21dde2d28_MutSlicingExprModel _other_);


struct _21dde3125_UnsafeBinaryExprModel {
	jule::Ptr<_1c48aa85c_BinaryExprModel> _field_Node;
	

};
inline jule::Bool _21dde3125_UnsafeBinaryExprModel_eq(_21dde3125_UnsafeBinaryExprModel *_self_, _21dde3125_UnsafeBinaryExprModel _other_);


struct _21dde34aa_UnsafeIndexingExprModel {
	jule::Ptr<_1c48ad1bc_IndexingExprModel> _field_Node;
	

};
inline jule::Bool _21dde34aa_UnsafeIndexingExprModel_eq(_21dde34aa_UnsafeIndexingExprModel *_self_, _21dde34aa_UnsafeIndexingExprModel _other_);


struct _21dde3884_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1c48acc16_SliceExprModel> _field_Elems;
	

};
inline jule::Bool _21dde3884_PushToSliceExprModel_eq(_21dde3884_PushToSliceExprModel *_self_, _21dde3884_PushToSliceExprModel _other_);


struct _21dde3c5d_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
	

};
inline jule::Bool _21dde3c5d_AppendToSliceExprModel_eq(_21dde3c5d_AppendToSliceExprModel *_self_, _21dde3c5d_AppendToSliceExprModel _other_);


struct _21dde4137_StrRuneIter {
	jule::Ptr<_1c49ce024_Data> _field_Expr;
	jule::Ptr<_1c490cabd_RangeIter> _field_Base;
	

};
inline jule::Bool _21dde4137_StrRuneIter_eq(_21dde4137_StrRuneIter *_self_, _21dde4137_StrRuneIter _other_);


struct _21dde4434_UnsafeDerefExprModel {
	jule::Ptr<_1c48aac36_UnaryExprModel> _field_Base;
	

};
inline jule::Bool _21dde4434_UnsafeDerefExprModel_eq(_21dde4434_UnsafeDerefExprModel *_self_, _21dde4434_UnsafeDerefExprModel _other_);


struct _21dde4731_UnsafeCastingExprModel {
	jule::Ptr<_1c48abe8a_CastingExprModel> _field_Base;
	

};
inline jule::Bool _21dde4731_UnsafeCastingExprModel_eq(_21dde4731_UnsafeCastingExprModel *_self_, _21dde4731_UnsafeCastingExprModel _other_);


struct _21dde5413_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
	

};
inline jule::Bool _21dde5413_nilVar_eq(_21dde5413_nilVar *_self_, _21dde5413_nilVar _other_);


struct _21dde5754_nils {
	jule::Slice<_21dde5413_nilVar> _field_vars;
	

};
struct _1c56c637a_scopeOptimizer {
	jule::Ptr<_1c56c637a_scopeOptimizer> _field_parent;
	jule::I64 _field_i;
	jule::Ptr<_1c490ac86_Scope> _field_scope;
	jule::Ptr<_1c56d6236_data> _field_data;
	

};
inline jule::Bool _1c56c637a_scopeOptimizer_eq(_1c56c637a_scopeOptimizer *_self_, _1c56c637a_scopeOptimizer _other_);


struct _1c56ccd76_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1c56d6236_data> _field_data;
	jule::Ptr<_1c56b8867_ExprInspector> _field_inspector;
	

};
inline jule::Bool _1c56ccd76_exprOptimizer_eq(_1c56ccd76_exprOptimizer *_self_, _1c56ccd76_exprOptimizer _other_);


struct _1c56d3266_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1c4a1020e_TypeKind> _field_kind;
	

};
inline jule::Bool _1c56d3266_dynamicVar_eq(_1c56d3266_dynamicVar *_self_, _1c56d3266_dynamicVar _other_);


struct _1c56d35a7_dynamic {
	jule::Slice<_1c56d3266_dynamicVar> _field_vars;
	

};
struct _1c56d6236_data {
	jule::Ptr<_1c56d7bb6_boundary> _field_boundary;
	jule::Ptr<_21dde5754_nils> _field_nils;
	jule::Ptr<_1c56d35a7_dynamic> _field_dynamic;
	

};
inline jule::Bool _1c56d6236_data_eq(_1c56d6236_data *_self_, _1c56d6236_data _other_);


struct _1c56d7875_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
	

};
struct _1c56d7bb6_boundary {
	jule::Slice<_1c56d7875_boundaryVar> _field_vars;
	

};
struct _1c57e9d3e_Optimizer {
	jule::Ptr<_1c56b4830_IR> _field_ir;
	

};
inline jule::Bool _1c57e9d3e_Optimizer_eq(_1c57e9d3e_Optimizer *_self_, _1c57e9d3e_Optimizer _other_);


struct _1c58212e9_AnsiEscape {
	

};
inline jule::Bool _1c58212e9_AnsiEscape_eq(_1c58212e9_AnsiEscape *_self_, _1c58212e9_AnsiEscape _other_);


struct _1c58228a0_Logger {
	

};
inline jule::Bool _1c58228a0_Logger_eq(_1c58228a0_Logger *_self_, _1c58228a0_Logger _other_);


struct _1a97d00d7_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
	

};
inline jule::Bool _1a97d00d7_AbsTime_eq(_1a97d00d7_AbsTime *_self_, _1a97d00d7_AbsTime _other_);


struct _1a97d07ad_Time {
	jule::U64 _field_sec;
	

};
inline jule::Bool _1a97d07ad_Time_eq(_1a97d07ad_Time *_self_, _1a97d07ad_Time _other_);


struct _1a9706daa_scopeCoder {
	jule::Ptr<_1a97db0e3_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a9706daa_scopeCoder_eq(_1a9706daa_scopeCoder *_self_, _1a9706daa_scopeCoder _other_);


struct _1a97136ad_exprCoder {
	jule::Ptr<_1a97db0e3_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c49715b0_Var>>> _field_varPrefixes;
	

};
struct _1a97260a5_TestCoder {
	jule::Ptr<_1c48a6407_StructIns> _field_t;
	jule::Ptr<_1c48b8738_Fn> _field_tmReset;
	jule::Ptr<_1c48b8738_Fn> _field_tmFailed;
	jule::Ptr<_1c48b8738_Fn> _field_tmSkipped;
	jule::Ptr<_1a97db0e3_ObjectCoder> _field_oc;
	

};
inline jule::Bool _1a97260a5_TestCoder_eq(_1a97260a5_TestCoder *_self_, _1a97260a5_TestCoder _other_);


struct _1a9729031_identCoder {
	

};
inline jule::Bool _1a9729031_identCoder_eq(_1a9729031_identCoder *_self_, _1a9729031_identCoder _other_);


struct _1a97d9344_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

};
inline jule::Bool _1a97d9344_SerializationInfo_eq(_1a97d9344_SerializationInfo *_self_, _1a97d9344_SerializationInfo _other_);


struct _1a97d9762_traitCast {
	jule::Ptr<_1c48cc1b9_Trait> _field_t1;
	jule::Ptr<_1c48cc1b9_Trait> _field_t2;
	

};
inline jule::Bool _1a97d9762_traitCast_eq(_1a97d9762_traitCast *_self_, _1a97d9762_traitCast _other_);


struct _1a97d9b3b_anonHash {
	jule::Ptr<_1c48ad673_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

};
inline jule::Bool _1a97d9b3b_anonHash_eq(_1a97d9b3b_anonHash *_self_, _1a97d9b3b_anonHash _other_);


struct _1a97db0e3_ObjectCoder {
	_238b51e24_StrBuilder _field_Buf;
	_238b51e24_StrBuilder _field_resultDecls;
	_238b51e24_StrBuilder _field_anyObj;
	_238b51e24_StrBuilder _field_anonObj;
	_238b51e24_StrBuilder _field_deallocObj;
	jule::Ptr<_1c56b4830_IR> _field_ir;
	_1a97d9344_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a97d9b3b_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a97d9762_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1c48bb719_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1a97136ad_exprCoder> _field_ec;
	jule::Ptr<_1a9706daa_scopeCoder> _field_sc;
	jule::Ptr<_1a97eaca1_typeCoder> _field_tc;
	jule::I64 _field_headPos;
	jule::I64 _field_declPos;
	jule::I64 _field_wrapPos;
	

};
struct _1a97ea168_customType {
	jule::Str _field_kind;
	

};
inline jule::Bool _1a97ea168_customType_eq(_1a97ea168_customType *_self_, _1a97ea168_customType _other_);


struct _1a97eaca1_typeCoder {
	jule::Ptr<_1a97db0e3_ObjectCoder> _field_oc;
	jule::Ptr<_1a980388b_resultCoder> _field_rc;
	

};
inline jule::Bool _1a97eaca1_typeCoder_eq(_1a97eaca1_typeCoder *_self_, _1a97eaca1_typeCoder _other_);


struct _1a980388b_resultCoder {
	jule::Ptr<_1a97eaca1_typeCoder> _field_tc;
	

};
inline jule::Bool _1a980388b_resultCoder_eq(_1a980388b_resultCoder *_self_, _1a980388b_resultCoder _other_);


struct _1ad018223_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

};
inline jule::Bool _1ad018223_Flag_eq(_1ad018223_Flag *_self_, _1ad018223_Flag _other_);

struct _1ad01bcc6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

};
inline jule::Bool _1ad01bcc6_Flag_eq(_1ad01bcc6_Flag *_self_, _1ad01bcc6_Flag _other_);

struct _1ad020439_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

};
inline jule::Bool _1ad020439_Flag_eq(_1ad020439_Flag *_self_, _1ad020439_Flag _other_);

struct _1ad023ae1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

};
inline jule::Bool _1ad023ae1_Flag_eq(_1ad023ae1_Flag *_self_, _1ad023ae1_Flag _other_);

struct _1ad027254_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

};
inline jule::Bool _1ad027254_Flag_eq(_1ad027254_Flag *_self_, _1ad027254_Flag _other_);


struct _1c520226e_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	

};
struct _1c5ccb9c4_argParser {
	_1c520226e_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i;
	

};
struct _205b5494e_Cmd {
	_205b58b95_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

};
struct _1c56d5c3b_dataCheckpoint {
	_1c56d7bb6_boundary _field_boundary;
	_21dde5754_nils _field_nils;
	_1c56d35a7_dynamic _field_dynamic;
	

};
struct _1c56b4830_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1c4930c45_Package> _field_Main;
	jule::Ptr<_1c492cd1e_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _field_Used;
	_1c56c4ac6_OrderedDefines _field_Ordered;
	

};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c49ce024_Data__jule_tuple_x_1c49ce024_Data {
	jule::Ptr<_1c49ce024_Data> __jule_result_arg0;
	jule::Ptr<_1c49ce024_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1c49ce024_Data__jule_tuple_bool {
	jule::Ptr<_1c49ce024_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c4886aad_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c489974c_Case__jule_tuple_bool {
	jule::Ptr<_1c489974c_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c489974c_Case__jule_tuple_x_1c48985a3_Else {
	jule::Slice<jule::Ptr<_1c489974c_Case>> __jule_result_arg0;
	jule::Ptr<_1c48985a3_Else> __jule_result_arg1;
};
struct __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c4891227_AssignSt__jule_tuple_bool {
	jule::Ptr<_1c4891227_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1c4882779_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1c488566c_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log {
	jule::Slice<jule::Ptr<_1c48807bb_AST>> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_205a977d7_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool {
	jule::Ptr<_1c48bb719_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c56b4830_IR__jule_tuple_s_205a977d7_Log {
	jule::Ptr<_1c56b4830_IR> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log {
	jule::Ptr<_1c49c8bab_SymbolTable> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log {
	jule::Ptr<_1c4930c45_Package> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1c48807bb_AST__jule_tuple_s_205a977d7_Log {
	jule::Ptr<_1c48807bb_AST> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c486c19d_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c486c19d_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> __jule_result_arg0;
	jule::Slice<_205a977d7_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _238b51e24_StrBuilder static__238b52375_New(jule::I64 _1516_cap);
inline void _238b5262d_Write(_238b51e24_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b);
inline void _238b528d6_WriteStr(_238b51e24_StrBuilder* _self_, jule::Str _3024_s);
inline void _238b52b8e_WriteByte(_238b51e24_StrBuilder* _self_, jule::U8 _3525_b);
inline jule::Str _238b531cd_Str(_238b51e24_StrBuilder* _self_);
inline void _238b533cb_Clear(_238b51e24_StrBuilder* _self_);
inline jule::I64 _238b53662_Len(_238b51e24_StrBuilder* _self_);
inline jule::Slice<jule::U8> _238b53b7e_Buf(_238b51e24_StrBuilder* _self_);
inline void _238b53e37_SetBuf(_238b51e24_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf);
inline jule::U8 _2059ed100_index(_2059ecb38_lazyBuff* _self_, jule::I64 _5521_i);
inline void _2059ed3a8_append(_2059ecb38_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _2059ed63e_string(_2059ecb38_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_239654b57_DirEntry>>> static__205a00a09_Read(jule::Str _1517_path);
inline jule::VoidExceptional static__205a00c3a_Create(jule::Str _3919_path);
inline jule::VoidExceptional static__205a00e6b_Remove(jule::Str _5319_path);
inline jule::Ptr<_2396560dc_File> static__23965653d_New(jule::Uintptr _4516_handle);
inline jule::Exceptional<jule::Ptr<_2396560dc_File>> static__239656807_Create(jule::Str _5519_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__239656ac1_Read(jule::Str _6717_path);
inline jule::VoidExceptional static__239656e67_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm);
inline jule::VoidExceptional _2396576a4_Close(_2396560dc_File* _self_);
inline jule::Exceptional<jule::Ptr<_2396560dc_File>> static__21d80b654_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode);
inline jule::VoidExceptional static__21d80b885_Remove(jule::Str _3519_path);
inline jule::Exceptional<jule::I64> _21d80bc09_Write(_2396560dc_File* _self_, jule::Slice<jule::U8> _5021_buf);
inline jule::Exceptional<jule::I64> _21d80c04a_Read(_2396560dc_File* _self_, jule::Slice<jule::U8> _8124_buf);
inline jule::Bool _23965862d_IsDir(_239658221_Status* _self_);
inline jule::Bool _2396588b4_IsReg(_239658221_Status* _self_);
inline jule::U64 _239658b4a_Size(_239658221_Status* _self_);
inline jule::Exceptional<jule::Ptr<_239658221_Status>> static__205a018c8_Of(jule::Str _1215_path);
inline jule::Bool _1dc529161_set(_1dc5326ec_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1dc5294a2_floatBits(_1dc5326ec_decimal* _self_, _1dc51dd15_floatInfo* _33226_flt);
inline void _1dc532ad7_assign(_1dc5326ec_decimal* _self_, jule::U64 _15126_v);
inline void _1dc532d90_shift(_1dc5326ec_decimal* _self_, jule::I64 _17625_k);
inline void _1dc533148_roundDown(_1dc5326ec_decimal* _self_, jule::I64 _19625_nd);
inline void _1dc533401_roundUp(_1dc5326ec_decimal* _self_, jule::I64 _20523_nd);
inline void _1dc5336a9_round(_1dc5326ec_decimal* _self_, jule::I64 _23221_nd);
inline jule::U64 _1dc533940_roundedInteger(_1dc5326ec_decimal* _self_);
inline jule::Ptr<_1dc54537a_Const> static__1dc5457ed_NewI64(jule::I64 _1619_x);
inline jule::Ptr<_1dc54537a_Const> static__1dc545ab7_NewU64(jule::U64 _1919_x);
inline jule::Ptr<_1dc54537a_Const> static__1dc545d81_NewBool(jule::Bool _2220_x);
inline jule::Ptr<_1dc54537a_Const> static__1dc54614a_NewStr(jule::Str _2519_x);
inline jule::Ptr<_1dc54537a_Const> static__1dc546414_NewF64(jule::F64 _2819_x);
inline jule::Ptr<_1dc54537a_Const> static__1dc546623_NewNil(void);
inline jule::I64 _1dc546c83_ReadI64(_1dc54537a_Const* _self_);
inline jule::U64 _1dc547019_ReadU64(_1dc54537a_Const* _self_);
inline jule::Bool _1dc5472a0_ReadBool(_1dc54537a_Const* _self_);
inline jule::Str _1dc547536_ReadStr(_1dc54537a_Const* _self_);
inline jule::F64 _1dc5477bc_ReadF64(_1dc54537a_Const* _self_);
inline jule::I64 _1dc547a53_AsI64(_1dc54537a_Const* _self_);
inline jule::U64 _1dc547cd9_AsU64(_1dc54537a_Const* _self_);
inline jule::F64 _1dc548070_AsF64(_1dc54537a_Const* _self_);
inline void _1dc548328_SetI64(_1dc54537a_Const* _self_, jule::I64 _13822_x);
inline void _1dc5485d1_SetU64(_1dc54537a_Const* _self_, jule::U64 _14122_x);
inline void _1dc548889_SetBool(_1dc54537a_Const* _self_, jule::Bool _14423_x);
inline void _1dc548b42_SetStr(_1dc54537a_Const* _self_, jule::Str _14722_x);
inline void _1dc548dea_SetF64(_1dc54537a_Const* _self_, jule::F64 _15022_x);
inline jule::Bool _1dc54937e_IsI64(_1dc54537a_Const* _self_);
inline jule::Bool _1dc549615_IsU64(_1dc54537a_Const* _self_);
inline jule::Bool _1dc54989b_IsBool(_1dc54537a_Const* _self_);
inline jule::Bool _1dc549b32_IsStr(_1dc54537a_Const* _self_);
inline jule::Bool _1dc549db8_IsF64(_1dc54537a_Const* _self_);
inline jule::Bool _1dc54a14e_IsNil(_1dc54537a_Const* _self_);
inline jule::Bool _1dc54a7d1_And(_1dc54537a_Const* _self_, _1dc54537a_Const _23815_x);
inline jule::Bool _1dc54ab22_Or(_1dc54537a_Const* _self_, _1dc54537a_Const _24914_x);
inline jule::Bool _1dc54c0b8_Add(_1dc54537a_Const* _self_, _1dc54537a_Const _37719_x);
inline jule::Bool _1dc54c409_Sub(_1dc54537a_Const* _self_, _1dc54537a_Const _40619_x);
inline jule::Bool _1dc54c74a_Mul(_1dc54537a_Const* _self_, _1dc54537a_Const _43019_x);
inline jule::Bool _1dc54ca8b_Div(_1dc54537a_Const* _self_, _1dc54537a_Const _45819_x);
inline jule::Bool _1dc54cdcc_Mod(_1dc54537a_Const* _self_, _1dc54537a_Const _48719_x);
inline jule::Bool _1dc54d21d_BitwiseAnd(_1dc54537a_Const* _self_, _1dc54537a_Const _50926_x);
inline jule::Bool _1dc54d55e_BitwiseOr(_1dc54537a_Const* _self_, _1dc54537a_Const _52325_x);
inline jule::Bool _1dc54d8a0_Xor(_1dc54537a_Const* _self_, _1dc54537a_Const _53719_x);
inline jule::Bool _1dc54dbe1_Lshift(_1dc54537a_Const* _self_, _1dc54537a_Const _55122_x);
inline jule::Bool _1dc54e032_Rshift(_1dc54537a_Const* _self_, _1dc54537a_Const _57122_x);
inline jule::U8 _1c486c555_Prec(_1c486c19d_Token* _self_);
inline void _1c4872d85_Fill(_1c4872934_File* _self_, jule::Slice<jule::U8> _1724_data);
inline jule::Str _1c487311b_Dir(_1c4872934_File* _self_);
inline jule::Str _1c48733a2_Name(_1c4872934_File* _self_);
inline jule::Str _1c4873979_GetRow(_1c4872934_File* _self_, jule::I64 _3818_row);
inline void _1c487b135_pushErr(_1c487aa6e_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args);
inline void _1c487b696_lex(_1c487aa6e_lex* _self_);
inline jule::Str _1c487b9d7_id(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _47119_ln);
inline jule::Slice<jule::U8> _1c487bc6d_resume(_1c487aa6e_lex* _self_);
inline void _1c487c026_lexLineComment(_1c487aa6e_lex* _self_, jule::Ptr<_1c486c19d_Token>* _52135_token);
inline void _1c487c2ce_lexRangeComment(_1c487aa6e_lex* _self_, jule::Ptr<_1c486c19d_Token>* _53636_token);
inline jule::Str _1c487c620_num(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _56420_txt);
inline jule::Str _1c487c961_escapeSeq(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _58626_txt);
inline jule::Str _1c487cd5c_getRune(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw);
inline jule::Str _1c487d19d_lexRune(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _62524_txt);
inline jule::Str _1c487d434_lexStr(_1c487aa6e_lex* _self_);
inline void _1c487d8b8_newLine(_1c487aa6e_lex* _self_);
inline jule::Bool _1c487de29_isOp(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c486c19d_Token>* _70763_t);
inline jule::Bool _1c487e325_lexBasicOps(_1c487aa6e_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c486c19d_Token>* _71745_tok);
inline jule::Bool _1c487e721_lexId(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c486c19d_Token>* _72640_t);
inline jule::Bool _1c487eb1c_lexNum(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c486c19d_Token>* _73641_t);
inline jule::Ptr<_1c486c19d_Token> _1c487eda3_token(_1c487aa6e_lex* _self_);
inline jule::Bool _1c4884649_IsUnsafe(_1c48842a3_PtrTypeDecl* _self_);
inline jule::Bool _1c4884ddb_AutoSized(_1c4884a45_ArrTypeDecl* _self_);
inline jule::Bool _1c488ab8e_Unhandled(_1c488a7d7_FnCallExpr* _self_);
inline jule::Bool _1c488ae25_Ignored(_1c488a7d7_FnCallExpr* _self_);
inline jule::Bool _1c489338e_IsSelf(_1c4892ed7_ParamDecl* _self_);
inline jule::Bool _1c48947d0_IsAnon(_1c4894439_FnDecl* _self_);
inline jule::Bool _1c48965d4_IsInf(_1c489623d_Iter* _self_);
inline jule::Bool _1c4896e0e_IsWhileNext(_1c4896a68_WhileKind* _self_);
inline jule::Ptr<_1c48a5857_FieldIns> _1c48a0b3d_instance(jule::Ptr<_1c48a0753_Field> _self_);
inline jule::Ptr<_1c48a6407_StructIns> _1c48a3b1e_instance(jule::Ptr<_1c48a3679_Struct> _self_);
inline jule::Ptr<_1c48a6407_StructIns> _1c48a3e2c_appendInstance(_1c48a3679_Struct* _self_, jule::Ptr<_1c48a6407_StructIns>* _13435_ins);
inline jule::Ptr<_1c48b8738_Fn> _1c48a4328_FindMethod(_1c48a3679_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically);
inline jule::Ptr<_1c49715b0_Var> _1c48a4669_FindStatic(_1c48a3679_Struct* _self_, jule::Str _16326_ident);
inline jule::Ptr<_1c48a0753_Field> _1c48a49aa_FindField(_1c48a3679_Struct* _self_, jule::Str _17425_ident);
inline jule::Bool _1c48a4ceb_IsImplements(_1c48a3679_Struct* _self_, jule::Ptr<_1c48cc1b9_Trait> _18424_t);
inline jule::Bool _1c48a513c_IsUses(_1c48a3679_Struct* _self_, jule::Ptr<_1c48a3679_Struct> _19418_s);
inline jule::Str _1c48a67ae_Str(_1c48a6407_StructIns* _self_);
inline jule::Bool _1c48a6b00_Equal(jule::Ptr<_1c48a6407_StructIns> _self_, jule::Ptr<_1c4a1020e_TypeKind> _25518_other);
inline jule::Bool _1c48a70a6_Same(_1c48a6407_StructIns* _self_, jule::Ptr<_1c48a6407_StructIns> _28316_s);
inline jule::Ptr<_1c48b8738_Fn> _1c48a74a2_FindMethod(_1c48a6407_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically);
inline jule::Ptr<_1c48a5857_FieldIns> _1c48a77e3_FindField(_1c48a6407_StructIns* _self_, jule::Str _30925_ident);
inline jule::Ptr<_1c49715b0_Var> _1c48a7b34_FindStatic(_1c48a6407_StructIns* _self_, jule::Str _32026_ident);
inline jule::Ptr<_1c48ba691_ParamIns> _1c48b712c_instance(jule::Ptr<_1c48b6c64_Param> _self_);
inline jule::Bool _1c48b73b3_IsSelf(_1c48b6c64_Param* _self_);
inline jule::Bool _1c48b7649_IsRef(_1c48b6c64_Param* _self_);
inline jule::Bool _1c48b8bde_IsVoid(_1c48b8738_Fn* _self_);
inline jule::Bool _1c48b8e75_IsMethod(_1c48b8738_Fn* _self_);
inline jule::Bool _1c48b920b_IsEntryPoint(_1c48b8738_Fn* _self_);
inline jule::Bool _1c48b9492_IsInit(_1c48b8738_Fn* _self_);
inline jule::Bool _1c48b9728_IsAnon(_1c48b8738_Fn* _self_);
inline jule::Bool _1c48b99ae_AnyVar(_1c48b8738_Fn* _self_);
inline jule::Ptr<_1c48bb719_FnIns> _1c48b9c45_instanceForce(jule::Ptr<_1c48b8738_Fn> _self_);
inline jule::Ptr<_1c48bb719_FnIns> _1c48b9ecb_instance(jule::Ptr<_1c48b8738_Fn> _self_);
inline jule::Ptr<_1c48bb719_FnIns> _1c48ba2d9_appendInstance(_1c48b8738_Fn* _self_, jule::Ptr<_1c48bb719_FnIns>* _12935_ins);
inline jule::Str _1c48baa37_Str(_1c48ba691_ParamIns* _self_);
inline jule::Str _1c48bba8d_Str(_1c48bb719_FnIns* _self_);
inline jule::Bool _1c48bbdce_Equal(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c4a1020e_TypeKind> _21918_other);
inline jule::Bool _1c48bc374_EqualFn(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c48bb719_FnIns>* _23021_f);
inline jule::Bool _1c48bc6b5_equalTrait(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c48bb719_FnIns>* _28924_other);
inline jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _1c48bc94b_Types(_1c48bb719_FnIns* _self_);
inline jule::Bool _1c48bcbd2_IsBuiltin(_1c48bb719_FnIns* _self_);
inline jule::Bool _1c48bce68_IsAnon(_1c48bb719_FnIns* _self_);
inline jule::Bool _1c48bd2a9_Same(_1c48bb719_FnIns* _self_, jule::Ptr<_1c48bb719_FnIns> _33216_f);
inline jule::Str _1c48bd5ea_GetKindStr(_1c48bb719_FnIns* _self_, jule::Bool _34922_ident);
inline jule::Ptr<_1c48be8a4_ReferenceStack> static__1c48bebc3_new(void);
inline jule::I64 _1c48c00be_Len(_1c48be8a4_ReferenceStack* _self_);
inline jule::Any _1c48c0410_At(_1c48be8a4_ReferenceStack* _self_, jule::I64 _6818_i);
inline void _1c48c06b8_Push(_1c48be8a4_ReferenceStack* _self_, jule::Any _7324_ref);
inline jule::Bool _1aab0bca3_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48bb719_FnIns> _7820_t);
inline jule::Bool _1aab22bdc_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c49715b0_Var> _7820_t);
inline jule::Bool _1abcc32ba_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48a6407_StructIns> _7820_t);
inline jule::Bool _1ab92665a_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48cc1b9_Trait> _7820_t);
inline void _1c48c635b_pushErr(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c486c19d_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args);
inline void _1c48c6adc_pushSuggestion(_1c48c5866_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args);
inline jule::Bool _1c48c6ed8_checkCppUseDeclPath(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _34536_decl, jule::Str* _34553_path);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c72e6_buildCppHeaderImport(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _36541_decl);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7637_buildStdImport(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _39335_decl);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7978_buildIdentImport(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _43338_decl);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7cb9_buildImport(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _48733_decl);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c810a_findUseDecl(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _49828_pkg);
inline __jule_tuple_bool__jule_tuple_bool _1c48c844b_checkDuplicateUseDecl(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _50542_pkg);
inline void _1c48c87ae_implImportSelections(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _52441_imp, jule::Ptr<_1c489a880_UseDecl>* _52464_decl);
inline jule::Str _1c48c8b00_getAsLinkPath(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Str _53934_path);
inline void _1c48c901d_pushCycleError(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c48c5866_symbolBuilder>* _55332_sb, jule::Str _55352_path, _238b51e24_StrBuilder* _55368_message);
inline void _1c48c943b_pushCrossCycleError(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c48c5866_symbolBuilder>* _56637_target, jule::Ptr<_1c492cd1e_ImportInfo>* _56662_imp, jule::Ptr<_1c486c19d_Token>* _56681_errorToken);
inline jule::Bool _1c48c9837_checkImportCycles(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c492cd1e_ImportInfo> _58934_imp, jule::Ptr<_1c489a880_UseDecl>* _58953_decl);
inline void _1c48c9c55_checkPackageAccessibility(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _62042_decl, jule::Str* _62059_mod, jule::Str* _62070_path);
inline jule::Bool _1c48ca151_importPackage(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _62635_imp, jule::Ptr<_1c489a880_UseDecl>* _62658_decl);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48ca492_importUseDecl(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _67335_decl);
inline void _1c48ca690_importUseDecls(jule::Ptr<_1c48c5866_symbolBuilder> _self_);
inline void _1c48ca948_appendNode(_1c48c5866_symbolBuilder* _self_, _1c4881778_Node* _71031_node);
inline void _1c48cab46_appendNodes(_1c48c5866_symbolBuilder* _self_);
inline void _1c48cadee_pushDirectivePass(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c4881b96_Directive>* _74638_d);
inline void _1c48cb0ec_appendTopDirectives(_1c48c5866_symbolBuilder* _self_);
inline void _1c48cb2ea_build(jule::Ptr<_1c48c5866_symbolBuilder> _self_);
inline jule::Str _1c48cc5b5_Str(_1c48cc1b9_Trait* _self_);
inline jule::Bool _1c48cc906_Equal(jule::Ptr<_1c48cc1b9_Trait> _self_, jule::Ptr<_1c4a1020e_TypeKind> _2518_other);
inline jule::Ptr<_1c48b8738_Fn> _1c48ccd9b_FindMethod(_1c48cc1b9_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1c48b8738_Fn> _1c48cd52d_findMethodInherit(_1c48cc1b9_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1c48ce243_AutoExpr(_1c48cdd58_EnumItem* _self_);
inline jule::Str _1c48cec7c_Str(_1c48ce8c5_Enum* _self_);
inline jule::Bool _1c48d00bd_Equal(jule::Ptr<_1c48ce8c5_Enum> _self_, jule::Ptr<_1c4a1020e_TypeKind> _3818_other);
inline jule::Ptr<_1c48cdd58_EnumItem> _1c48d04ec_FindItem(_1c48ce8c5_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1c48d1454_Str(_1c48d10d0_TypeEnum* _self_);
inline jule::Bool _1c48d1795_Equal(jule::Ptr<_1c48d10d0_TypeEnum> _self_, jule::Ptr<_1c4a1020e_TypeKind> _8018_other);
inline jule::Ptr<_1c48d0a08_TypeEnumItem> _1c48d1bc4_FindItem(_1c48d10d0_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1c48d4677_Str(_1c48d42c0_comptimeRange* _self_);
inline jule::Bool _1c48d49b8_Equal(jule::Ptr<_1c48d42c0_comptimeRange> _self_, jule::Ptr<_1c4a1020e_TypeKind> _3618_other);
inline jule::Str _1c48d518e_Str(_1c48d4c93_comptimeStructField* _self_);
inline jule::Bool _1c48d54d0_Equal(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c4a1020e_TypeKind> _4618_other);
inline jule::Ptr<_1c49ce024_Data> _1c48d5a74__Name(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _5023_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _5038_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d5e70__Type(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _6327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _6342_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d636b__Public(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _7129_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _7144_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d6679_subIdent(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Str* _8426_ident);
inline jule::Str _1c48d6d0b_Str(_1c48d6954_comptimeStructFields* _self_);
inline jule::Bool _1c48d714c_Equal(jule::Ptr<_1c48d6954_comptimeStructFields> _self_, jule::Ptr<_1c4a1020e_TypeKind> _12018_other);
inline void _1c48d75c0_ready(_1c48d6954_comptimeStructFields* _self_, jule::Ptr<_1c49715b0_Var>* _12426_keyA, jule::Ptr<_1c49715b0_Var>* _12443_keyB);
inline void _1c48d79dd_step(_1c48d6954_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1c49715b0_Var>* _14533_keyA, jule::Ptr<_1c49715b0_Var>* _14550_keyB);
inline jule::I64 _1c48d7c74_len(_1c48d6954_comptimeStructFields* _self_);
inline jule::Str _1c48d8406_Str(_1c48d804e_comptimeStatic* _self_);
inline jule::Bool _1c48d8747_Equal(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c4a1020e_TypeKind> _16918_other);
inline jule::Ptr<_1c49ce024_Data> _1c48d8d74__Name(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _17323_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _17338_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d9270__Type(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _18627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _18642_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d966b__Public(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _19429_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _19444_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48d99ac_subIdent(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Str* _20726_ident);
inline jule::Str _1c48da0b7_Str(_1c48d9c10_comptimeStatics* _self_);
inline jule::Bool _1c48da408_Equal(jule::Ptr<_1c48d9c10_comptimeStatics> _self_, jule::Ptr<_1c4a1020e_TypeKind> _24318_other);
inline void _1c48da87b_ready(_1c48d9c10_comptimeStatics* _self_, jule::Ptr<_1c49715b0_Var>* _24726_keyA, jule::Ptr<_1c49715b0_Var>* _24743_keyB);
inline void _1c48dac99_step(_1c48d9c10_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1c49715b0_Var>* _26833_keyA, jule::Ptr<_1c49715b0_Var>* _26850_keyB);
inline jule::I64 _1c48db030_len(_1c48d9c10_comptimeStatics* _self_);
inline jule::Str _1c48db7c2_Str(_1c48db30a_comptimeEnumField* _self_);
inline jule::Bool _1c48dbb13_Equal(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Ptr<_1c4a1020e_TypeKind> _29218_other);
inline jule::Ptr<_1c49ce024_Data> _1c48dc086__Name(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Ptr<_1c49d0c4b_eval>* _29623_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _29638_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48dc3c7_subIdent(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Str* _30926_ident);
inline jule::Str _1c48dca59_Str(_1c48dc6a2_comptimeEnumFields* _self_);
inline jule::Bool _1c48dcd9a_Equal(jule::Ptr<_1c48dc6a2_comptimeEnumFields> _self_, jule::Ptr<_1c4a1020e_TypeKind> _33118_other);
inline void _1c48dd31d_ready(_1c48dc6a2_comptimeEnumFields* _self_, jule::Ptr<_1c49715b0_Var>* _33526_keyA, jule::Ptr<_1c49715b0_Var>* _33543_keyB);
inline void _1c48dd73b_step(_1c48dc6a2_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1c49715b0_Var>* _35633_keyA, jule::Ptr<_1c49715b0_Var>* _35650_keyB);
inline jule::I64 _1c48dd9c2_len(_1c48dc6a2_comptimeEnumFields* _self_);
inline jule::Str _1c48de154_Str(_1c48ddc9c_comptimeParam* _self_);
inline jule::Bool _1c48de495_Equal(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c4a1020e_TypeKind> _38018_other);
inline jule::Ptr<_1c49ce024_Data> _1c48dec04__Name(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _38423_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _38438_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e0100__Type(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _39727_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _39742_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e04eb__Variadic(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _40531_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _40546_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e08e7__Reference(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _41832_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _41847_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e0c38_subIdent(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Str* _43126_ident);
inline jule::Str _1c48e12aa_Str(_1c48e0e36_comptimeParams* _self_);
inline jule::Bool _1c48e15eb_Equal(jule::Ptr<_1c48e0e36_comptimeParams> _self_, jule::Ptr<_1c4a1020e_TypeKind> _47418_other);
inline void _1c48e1a6e_ready(_1c48e0e36_comptimeParams* _self_, jule::Ptr<_1c49715b0_Var>* _47826_keyA, jule::Ptr<_1c49715b0_Var>* _47843_keyB);
inline void _1c48e1e8c_step(_1c48e0e36_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1c49715b0_Var>* _49933_keyA, jule::Ptr<_1c49715b0_Var>* _49950_keyB);
inline jule::I64 _1c48e2223_len(_1c48e0e36_comptimeParams* _self_);
inline jule::Str _1c48e28a5_Str(_1c48e24ed_comptimeTypeInfos* _self_);
inline jule::Bool _1c48e2be6_Equal(jule::Ptr<_1c48e24ed_comptimeTypeInfos> _self_, jule::Ptr<_1c4a1020e_TypeKind> _52318_other);
inline void _1c48e3169_ready(_1c48e24ed_comptimeTypeInfos* _self_, jule::Ptr<_1c49715b0_Var>* _52726_keyA, jule::Ptr<_1c49715b0_Var>* _52743_keyB);
inline void _1c48e3587_step(_1c48e24ed_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1c49715b0_Var>* _54833_keyA, jule::Ptr<_1c49715b0_Var>* _54850_keyB);
inline jule::I64 _1c48e381d_len(_1c48e24ed_comptimeTypeInfos* _self_);
inline jule::Str _1c48e3ea0_Str(_1c48e3ae8_comptimeTypeInfo* _self_);
inline jule::Bool _1c48e42e1_Equal(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c4a1020e_TypeKind> _57218_other);
inline jule::Ptr<_1c49ce024_Data> _1c48e4940__Str(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _57622_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _57637_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e4d3b__Kind(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _58927_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _58942_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e5237__Bits(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _66727_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _66742_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e5633__Elem(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _69027_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _69042_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e5a2e__Size(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _72327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _72342_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e5e2a__Key(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _74126_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _74141_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e6326__Value(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _75428_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _75443_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e6722__Fields(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _76729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _76744_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e6b1d__Statics(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _79630_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _79645_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e7019__Public(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _81529_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _81544_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e7415__Binded(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _84229_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _84244_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e7811__Ordered(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _85526_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _85541_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e7c0c__Comparable(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _86829_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _86844_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e8108__Mutable(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _88126_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _88141_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e8504__Types(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _89428_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _89443_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e8900__Exceptional(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _91734_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _91749_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e8ceb__CanNil(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _93529_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _93544_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e91e7__RC(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _94825_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _94840_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e95e3__Result(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _96129_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _96144_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e99de__Params(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _97729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _97744_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48e9d30_subIdent(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Str* _99426_ident);
inline jule::Str _1c48ea4b2_Str(_1c48ea10a_comptimeValue* _self_);
inline jule::Bool _1c48ea803_Equal(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c4a1020e_TypeKind> _114918_other);
inline jule::Ptr<_1c49ce024_Data> _1c48ead53__Unwrap(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _115329_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _115344_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48eb24e__Type(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _116127_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _116142_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48eb64a__Lvalue(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _116929_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _116944_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48eba46__Mutable(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _118230_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _118245_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48ebe42__Const(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _119528_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _119543_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48ec33d__Field(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _120828_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _120843_fc);
inline jule::Ptr<_1c49ce024_Data> _1c48ec67e_subIdent(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Str* _124326_ident);
inline jule::Str _1c48ecd11_Str(_1c48ec959_comptimeFiles* _self_);
inline jule::Bool _1c48ed152_Equal(jule::Ptr<_1c48ec959_comptimeFiles> _self_, jule::Ptr<_1c4a1020e_TypeKind> _130018_other);
inline void _1c48ed5c5_ready(_1c48ec959_comptimeFiles* _self_, jule::Ptr<_1c49715b0_Var>* _130426_keyA, jule::Ptr<_1c49715b0_Var>* _130443_keyB);
inline void _1c48ed9e3_step(_1c48ec959_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1c49715b0_Var>* _132533_keyA, jule::Ptr<_1c49715b0_Var>* _132550_keyB);
inline jule::I64 _1c48edc79_len(_1c48ec959_comptimeFiles* _self_);
inline jule::Str _1c48ee63c_Str(_1c48ee054_comptimeFile* _self_);
inline jule::Bool _1c48ee97d_Equal(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c4a1020e_TypeKind> _134918_other);
inline jule::Ptr<_1c49ce024_Data> _1c48eed8a__Path(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _135327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _135342_fc);
inline jule::Ptr<_1c49ce024_Data> _1c4900286__Name(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _136627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _136642_fc);
inline jule::Ptr<_1c49ce024_Data> _1c4900682__Dir(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _137926_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _137941_fc);
inline jule::Ptr<_1c49ce024_Data> _1c49009c3_subIdent(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Str* _139226_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*> _1c490390a_readyFn(jule::Ptr<_1c49034cb_constraintChecker> _self_);
inline jule::Bool _1c4903b91_readyFi(jule::Ptr<_1c49034cb_constraintChecker> _self_);
inline jule::Bool _1c4903e27_readySi(jule::Ptr<_1c49034cb_constraintChecker> _self_);
inline jule::Bool _1c49041ad_ready(jule::Ptr<_1c49034cb_constraintChecker> _self_);
inline jule::Bool _1c4904444_check(jule::Ptr<_1c49034cb_constraintChecker> _self_);
inline jule::Bool _1c4905c2b_IsTraitImpl(_1c4905830_Impl* _self_);
inline jule::Bool _1c4905eb2_IsStructImpl(_1c4905830_Impl* _self_);
inline jule::Bool _1c490c518_IsWhileNext(_1c490c172_WhileIter* _self_);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c491371c_SelectPackage(_1c4913244_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _46029_selector);
inline jule::Ptr<_1c49715b0_Var> _1c4913b18_FindVar(_1c4913244_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c4914014_FindTypeAlias(_1c4913244_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded);
inline jule::Ptr<_1c48a3679_Struct> _1c4914410_FindStruct(_1c4913244_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded);
inline jule::Ptr<_1c48b8738_Fn> _1c491480b_FindFn(_1c4913244_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded);
inline jule::Ptr<_1c48cc1b9_Trait> _1c4914b4c_FindTrait(_1c4913244_scopeChecker* _self_, jule::Str _53125_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c4914e8d_FindEnum(_1c4913244_scopeChecker* _self_, jule::Str _54024_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c49152ce_FindTypeEnum(_1c4913244_scopeChecker* _self_, jule::Str _54928_ident);
inline jule::Bool _1c4915631_isUnsafe(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline jule::Bool _1c49158b7_isRoot(_1c4913244_scopeChecker* _self_);
inline void _1c4915ab5_stop(_1c4913244_scopeChecker* _self_);
inline jule::Bool _1c4915d4b_stopped(_1c4913244_scopeChecker* _self_);
inline jule::Bool _1c49160d2_isDeferred(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline void _1c491638a_pushCaptured(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49715b0_Var>* _61134_v);
inline jule::Ptr<_1c4913244_scopeChecker> _1c4916621_getRoot(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline jule::Ptr<_1c4913244_scopeChecker> _1c49168a7_getHardRoot(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline jule::Ptr<_1c49715b0_Var> _1c4916be8_findVar(_1c4913244_scopeChecker* _self_, jule::Str _65423_ident);
inline jule::Ptr<_1c490d629_Label> _1c4917039_findLabel(_1c4913244_scopeChecker* _self_, jule::Str* _67526_ident);
inline jule::Ptr<_1c4911bc1_scopeLabel> _1c491737a_findLabelScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Str* _69132_ident);
inline jule::Ptr<_1c4911bc1_scopeLabel> _1c49176bb_findLabelAll(_1c4913244_scopeChecker* _self_, jule::Str* _70329_ident);
inline jule::Bool _1c4917ab7_isDuplicatedIdent(_1c4913244_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident);
inline void _1c4917d70_checkVarDecl(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48955e4_VarDecl> _73533_decl);
inline void _1c4918128_checkTypeAlias(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _76636_ta);
inline void _1c49183d1_checkTypeAliasDecl(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4899296_TypeAliasDecl> _78239_decl);
inline jule::Ptr<_1c490ac86_Scope> _1c4918667_getChild(_1c4913244_scopeChecker* _self_);
inline void _1c4918a85_checkChildSsc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _79335_tree, jule::Ptr<_1c490ac86_Scope>* _79358_s, jule::Ptr<_1c4913244_scopeChecker>* _79374_ssc);
inline jule::Ptr<_1c490ac86_Scope> _1c4918e81_checkChildSc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _79834_tree, jule::Ptr<_1c4913244_scopeChecker>* _79857_ssc);
inline jule::Ptr<_1c490ac86_Scope> _1c49192c2_checkChild(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _80432_tree);
inline void _1c491957a_checkAnonScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree> _80935_tree);
inline void _1c49198dd_processErrorCall(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1c486c19d_Token> _81469_err);
inline void _1c4919b96_checkExpr(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4886aad_Expr> _82730_expr);
inline jule::Ptr<_1c490b1a4_If> _1c4919ed7_checkIf(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48981c9_If> _85828_i);
inline jule::Ptr<_1c490b4a1_Else> _1c491a328_checkElse(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48985a3_Else> _87830_e);
inline void _1c491a5d1_checkConditional(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4898a59_Conditional> _88437_conditional);
inline void _1c491aaa9_checkIterScopeSsc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1c489279a_ScopeTree> _90051_tree, jule::Ptr<_1c490ac86_Scope>* _90074_s, jule::Ptr<_1c4913244_scopeChecker> _90089_ssc);
inline jule::Ptr<_1c490ac86_Scope> _1c491b060_checkIterScopeSc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1c489279a_ScopeTree> _90550_tree, jule::Ptr<_1c4913244_scopeChecker> _90572_ssc);
inline jule::Ptr<_1c490ac86_Scope> _1c491b45b_checkIterScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1c489279a_ScopeTree>* _91149_tree);
inline void _1c491b714_checkInfIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _91634_it);
inline void _1c491b9bc_checkWhileIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _92236_it);
inline void _1c491bdda_checkComptimeRangeIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _97244_it, jule::Ptr<_1c490cabd_RangeIter>* _97260_kind, jule::Ptr<_1c49ce024_Data>* _97283_d);
inline void _1c491c193_checkRangeIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _102936_it);
inline void _1c491c44b_checkIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter> _108930_it);
inline jule::Bool _1c491c78c_checkValidContLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _111336_it);
inline jule::Bool _1c491cacd_checkValidBreakLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _112937_ptr);
inline jule::Ptr<_1c490ce53_ContSt> _1c491ce1e_checkContValidScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897c23_ContSt> _115236_c);
inline void _1c491d1c7_checkCont(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897c23_ContSt> _117626_c);
inline void _1c491d480_checkLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c488ed5d_LabelSt> _122331_l);
inline void _1c491d738_pushGoto(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4890237_GotoSt> _124229_gt);
inline void _1c491d9e1_checkPostfix(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt> _125633_a);
inline jule::Bool _1c491dd32_isNewAssignIdent(_1c4913244_scopeChecker* _self_, jule::Str _128932_ident);
inline void _1c491e0da_removeInteriorMutRisk(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49ce024_Data>* _130243_d);
inline jule::Bool _1c491e591_checkStructureAssignOp(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48a6407_StructIns>* _131644_s, jule::Ptr<_1c4891227_AssignSt>* _131664_a, jule::Ptr<_1c49ce024_Data>* _131683_r);
inline void _1c491e849_checkSingleAssign(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt>* _135539_a);
inline void _1c491edcc_processEndPartOfMultiAssign(_1c4913244_scopeChecker* _self_, jule::Ptr<_1c490e839_MultiAssign>* _143348_st, jule::Ptr<_1c4891227_AssignSt>* _14348_a, jule::Ptr<_1c4890b94_AssignLeft>* _143427_lexpr, jule::Ptr<_1c49ce024_Data>* _143452_l, jule::Ptr<_1c49ce024_Data>* _143467_r);
inline void _1c4920185_checkMultiAssign(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt>* _151438_a);
inline void _1c492043d_checkAssignSt(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt> _157534_a);
inline jule::Ptr<_1c490ac86_Scope> _1c4920839_checkCaseScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49109c2_Case>* _158632_c, jule::Ptr<_1c489279a_ScopeTree>* _158647_tree);
inline jule::Ptr<_1c49109c2_Case> _1c4920d9a_checkCase(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match> _159230_m, jule::I64 _159241_i, jule::Ptr<_1c489974c_Case> _159253_c, jule::Ptr<_1c49ce024_Data> _159272_expr);
inline void _1c49212b8_checkCases(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _166732_m, jule::Ptr<_1c490ee99_Match> _166751_rm, jule::Ptr<_1c49ce024_Data> _166767_expr);
inline jule::Ptr<_1c49109c2_Case> _1c49216b4_checkDefault(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match> _168833_m, jule::Ptr<_1c48985a3_Else> _168848_d);
inline void _1c4921a27_checkComptimePanic(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c486c19d_Token> _169639_callToken, jule::Ptr<_1c490ac86_Scope>* _169659_s);
inline void _1c4921d8a_processConstMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match>* _172839_tm, jule::Ptr<_1c489a066_MatchCase>* _172856_m);
inline void _1c4922143_checkTypeMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _175736_m);
inline void _1c49223eb_checkCommonMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _179938_m);
inline void _1c49226a4_checkMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase> _184931_m);
inline void _1c492295c_checkFall(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4890534_FallSt> _185726_f);
inline jule::Ptr<_1c490d32c_BreakSt> _1c4922c9d_checkBreakWithLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _188036_b);
inline jule::Ptr<_1c490d32c_BreakSt> _1c49230de_checkPlainBreak(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _193832_b);
inline void _1c4923397_checkBreak(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _196027_b);
inline void _1c4923650_checkRet(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48959bd_RetSt> _197129_r);
inline void _1c4923908_checkUseExpr(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4887482_UseExpr> _199629_ue);
inline void _1c4923bb1_checkNode(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Any* _201231_node);
inline void _1c4923dae_checkResult(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline void _1c49240ac_checkTree(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline void _1c4924420_checkGoto(_1c4913244_scopeChecker* _self_, jule::Ptr<_1c4912254_scopeGoto>* _211430_gt, jule::Ptr<_1c4911bc1_scopeLabel>* _211451_label);
inline void _1c492461d_checkGotos(_1c4913244_scopeChecker* _self_);
inline void _1c492481b_checkLabels(_1c4913244_scopeChecker* _self_);
inline void _1c4924a19_checkVars(_1c4913244_scopeChecker* _self_);
inline void _1c4924c17_checkAliases(_1c4913244_scopeChecker* _self_);
inline void _1c492507a_check(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _219227_tree, jule::Ptr<_1c490ac86_Scope>* _219250_s);
inline jule::Ptr<_1c4913244_scopeChecker> _1c4925311_newChildChecker(jule::Ptr<_1c4913244_scopeChecker> _self_);
inline void _1c4926cb3_checkCdef(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _1626_d);
inline void _1c492706b_checkTypedef(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _3229_d);
inline void _1c4927324_checkNamespace(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _4835_d);
inline void _1c49275cc_checkDeprecated(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _9936_d);
inline void _1c4927885_checkTest(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _13926_d);
inline void _1c4927b3d_checkDirective(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _16035_d);
inline void _1c4927d3b_check(_1c4926873_directiveChecker* _self_);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c492d33b_SelectPackage(_1c492cd1e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> );
inline jule::Ptr<_1c49715b0_Var> _1c492d737_FindVar(_1c492cd1e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c492db33_FindTypeAlias(_1c492cd1e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1c48a3679_Struct> _1c492e02e_FindStruct(_1c492cd1e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1c48b8738_Fn> _1c492e42a_FindFn(_1c492cd1e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1c48cc1b9_Trait> _1c492e76b_FindTrait(_1c492cd1e_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c492eaac_FindEnum(_1c492cd1e_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c492eded_FindTypeEnum(_1c492cd1e_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1c4930393_isLookupable(_1c492cd1e_ImportInfo* _self_, jule::Str* _26725_ident);
inline jule::Bool _1c49306d4_existIdent(_1c492cd1e_ImportInfo* _self_, jule::Str _28722_ident);
inline jule::Bool _1c493096a_isAccessibleViaSelection(_1c492cd1e_ImportInfo* _self_);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c493121d_SelectPackage(_1c4930c45_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> );
inline jule::Ptr<_1c49715b0_Var> _1c4931619_FindVar(_1c4930c45_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c4931a15_FindTypeAlias(_1c4930c45_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded);
inline jule::Ptr<_1c48a3679_Struct> _1c4931e11_FindStruct(_1c4930c45_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded);
inline jule::Ptr<_1c48b8738_Fn> _1c493230c_FindFn(_1c4930c45_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded);
inline jule::Ptr<_1c48cc1b9_Trait> _1c493264d_FindTrait(_1c4930c45_Package* _self_, jule::Str _33825_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c493298e_FindEnum(_1c4930c45_Package* _self_, jule::Str _34424_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4932cd0_FindTypeEnum(_1c4930c45_Package* _self_, jule::Str _35028_ident);
inline jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _1c494cb0d_pushComptimeTypeInfo(_1c494c668_commonSemaMeta* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _21541_t);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c494d768_SelectPackage(_1c494d290_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _24429_selector);
inline jule::Ptr<_1c49715b0_Var> _1c494db64_FindVar(_1c494d290_sema* _self_, jule::Str _25423_ident, jule::Bool _25435_binded);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c494e060_FindTypeAlias(_1c494d290_sema* _self_, jule::Str _28629_ident, jule::Bool _28641_binded);
inline jule::Ptr<_1c48a3679_Struct> _1c494e45b_FindStruct(_1c494d290_sema* _self_, jule::Str _31826_ident, jule::Bool _31838_binded);
inline jule::Ptr<_1c48b8738_Fn> _1c494e857_FindFn(_1c494d290_sema* _self_, jule::Str _34922_ident, jule::Bool _34934_binded);
inline jule::Ptr<_1c48cc1b9_Trait> _1c494eb98_FindTrait(_1c494d290_sema* _self_, jule::Str _38125_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c494eed9_FindEnum(_1c494d290_sema* _self_, jule::Str _41324_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c495032a_FindTypeEnum(_1c494d290_sema* _self_, jule::Str _44528_ident);
inline jule::Bool _1c4950737_isFlag(_1c494d290_sema* _self_, jule::I64 _47418_flags);
inline void _1c49509e0_setCurrentFile(_1c494d290_sema* _self_, jule::Ptr<_1c49c8bab_SymbolTable> _47634_f);
inline void _1c4950e0d_pushErr(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token> _47823_token, jule::Str _47838_fmt, jule::Slice<jule::Any> _47851_args);
inline void _1c4951271_pushSuggestion(_1c494d290_sema* _self_, jule::Str _48330_fmt, jule::Slice<jule::Any> _48343_args);
inline jule::Bool _1c495166c_isAccessibleDefine(_1c494d290_sema* _self_, jule::Bool _48830_public, jule::Ptr<_1c486c19d_Token> _48844_token);
inline jule::Bool _1c4951b23_isDuplicatedIdent(_1c494d290_sema* _self_, jule::Uintptr _49529_itself, jule::Str* _49547_ident, jule::Bool _49559_binded);
inline void _1c4951e86_checkDirectives(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _51237_d, jule::Any _51263_o);
inline jule::Bool _1c495243c_checkGenericQuantity(_1c494d290_sema* _self_, jule::I64 _52136_required, jule::I64 _52151_given, jule::Ptr<_1c486c19d_Token> _52163_token);
inline jule::Bool _1c4952838_isDuplicatedImportSelection(_1c494d290_sema* _self_, jule::Uintptr _54039_itself, jule::Str* _54057_ident);
inline jule::Any _1c4952c34_getImportDef(_1c494d290_sema* _self_, jule::Str* _55325_ident, jule::Ptr<_1c492cd1e_ImportInfo>* _55342_imp);
inline jule::Bool _1ab719b35_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c49715b0_Var>* _56856_s);
inline jule::Bool _1ab71de03_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c4a0e41c_TypeAlias>* _56856_s);
inline jule::Bool _1ab72317c_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48a3679_Struct>* _56856_s);
inline jule::Bool _1ab7276e2_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48cc1b9_Trait>* _56856_s);
inline jule::Bool _1ab72b98d_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48ce8c5_Enum>* _56856_s);
inline jule::Bool _1ab730c39_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48d10d0_TypeEnum>* _56856_s);
inline jule::Bool _1ab734eb3_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48b8738_Fn>* _56856_s);
inline jule::Bool _1c4953471_checkImportSelectedSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _58250_imp);
inline jule::Bool _1ab73977b_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab73ae0e_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab73d609_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab73e5e9_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab7434ee_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab745b94_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48ce8c5_Enum>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1ab748339_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et);
inline jule::Bool _1c4953bad_checkImportAllSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _64141_imp);
inline jule::Bool _1c4953eee_checkImportSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _65542_imp);
inline jule::Bool _1c4954340_isUseAliasDuplication(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _66438_imp);
inline jule::Bool _1c4954681_checkImport(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _68032_imp);
inline void _1c495487e_checkImports(_1c494d290_sema* _self_);
inline void _1c4954a7c_implFileImpls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4954c7a_implImpls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4954e78_checkEnums(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4955176_checkFileInherits(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4955374_checkInherits(jule::Ptr<_1c494d290_sema> _self_);
inline _1c4a220bc_typeChecker _1c495582a_typeChecker(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _76932_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _76947_generics, jule::Ptr<_1c4a210cc_referencer> _7707_referencer);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c4955d8b_buildTypeWithRefers(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _79641_t, jule::Trait _79664_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _7977_generics, jule::Ptr<_1c4a210cc_referencer> _79735_referencer);
inline jule::Bool _1c49563ec_checkTypeWithRefers(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a173d1_TypeSymbol>* _80341_t, jule::Trait _80361_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _8047_generics, jule::Ptr<_1c4a210cc_referencer> _80435_referencer);
inline jule::Ptr<_1c49034cb_constraintChecker> _1c4956683_constraintChecker(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Bool _1c4956a7e_checkType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a173d1_TypeSymbol>* _81831_t, jule::Trait _81851_l);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c4957035_buildTypeWithGenerics(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _82443_t, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _8257_generics, jule::Ptr<_1c48be8a4_ReferenceStack> _82535_refers);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c49576b7_selectType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _84232_t);
inline jule::Ptr<_1c49d0c4b_eval> _1c4957b6d_evalpd(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _85427_l, jule::Ptr<_1c4a1020e_TypeKind> _85442_p, jule::Ptr<_1c49715b0_Var> _85460_owner);
inline jule::Ptr<_1c49d0c4b_eval> _1c4958069_evalp(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _86926_l, jule::Ptr<_1c4a1020e_TypeKind> _86941_p);
inline jule::Ptr<_1c49d0c4b_eval> _1c49583aa_eval(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _87425_l);
inline jule::Bool _1c495891b_checkAssignType(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _87832_destIsRef, jule::Ptr<_1c4a1020e_TypeKind>* _87854_dest, jule::Ptr<_1c49ce024_Data>* _8798_d, jule::Ptr<_1c486c19d_Token> _87922_errorToken);
inline jule::Bool _1c4958dc2__checkTypeCompatibility(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _92045_dest, jule::Ptr<_1c4a1020e_TypeKind>* _92067_src, jule::Ptr<_1c486c19d_Token> _9217_errorToken);
inline jule::Bool _1c4959378_checkTypeCompatibility(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _93844_dest, jule::Ptr<_1c4a1020e_TypeKind>* _9398_src, jule::Ptr<_1c486c19d_Token>* _93929_errorToken);
inline void _1c4959796_pushCompatiblityError(_1c494d290_sema* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _94742_dest, jule::Ptr<_1c49ce024_Data>* _94764_src, jule::Ptr<_1c486c19d_Token>* _9488_errorToken);
inline jule::Bool _1c4959c4c_checkTypeCompatibility1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _96545_dest, jule::Ptr<_1c49ce024_Data>* _96567_src, jule::Ptr<_1c486c19d_Token>* _9668_errorToken);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c495a203_buildNonGenericTypeKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _98045_ast, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _9818_generics, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>* _98144_ignored);
inline jule::Bool _1c495a5ee_buildFnNonGenericTypeKinds(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _99248_f, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>* _99264_ignored);
inline jule::Ptr<_1c48bb719_FnIns> _1c495a940_getTraitCheckFnKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _101441_f);
inline jule::Bool _1c495ade6_checkConstraintsFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _104340_f, jule::Ptr<_1c486c19d_Token>* _104356_et, jule::Ptr<_1c48bb719_FnIns> _104372_exist);
inline jule::Bool _1c495b39c_checkConstraintsStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _105744_s, jule::Ptr<_1c486c19d_Token>* _105764_et, jule::Ptr<_1c48a6407_StructIns> _105780_exist);
inline jule::Bool _1c495b798_fnEnvironment(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _107435_f, jule::Fn<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*> _107446_algo);
inline void _1c495ba51_checkFnParamKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ba691_ParamIns>* _110138_p);
inline jule::Bool _1c495bd92_reloadFnInsTypes(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns> _110837_f);
inline jule::Bool _1c495c348_checkRefValidityForInitExpr(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _114444_leftMut, jule::Ptr<_1c49ce024_Data>* _114464_d, jule::Ptr<_1c486c19d_Token>* _114479_errorToken);
inline jule::Bool _1c495c689_isMutRiskyStruct(_1c494d290_sema* _self_, jule::Ptr<_1c48a6407_StructIns>* _116129_s);
inline jule::Bool _1c495cca5_checkValidityForInitExpr(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _118841_leftMut, jule::Bool _118856_leftRef, jule::Ptr<_1c4a1020e_TypeKind>* _11894_leftKind, jule::Ptr<_1c49ce024_Data>* _118930_d, jule::Ptr<_1c486c19d_Token>* _118945_errorToken);
inline jule::Bool _1c495d1a1_checkTypeAliasDeclKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _121644_ta, jule::Trait _121664_l);
inline void _1c495d514_checkTypeAliasDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _123940_ta, jule::Trait _123960_l);
inline void _1c495d7bc_checkTypeAliasDeclDup(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _124743_ta);
inline jule::Bool _1c495da53_checkTypeAliasDecls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1ab7eb9b4_checkEnumItemsDup(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _127136_items);
inline void _1ab808cbd_checkEnumItemsDup(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _127136_items);
inline void _1c495e0b4_checkEnumItemsStr(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _129139_e);
inline void _1ab7cc434_checkEnumItemInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49d0c4b_eval>* _131743_eval, jule::Ptr<_1c48ce8c5_Enum>* _131761_e, jule::Ptr<_1c4a17cd8_Prim>* _131772_prim, jule::Ptr<_1c48cdd58_EnumItem>* _131790_item, jule::U64* _1317112_n);
inline void _1ab7dc488_checkEnumItemInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49d0c4b_eval>* _131743_eval, jule::Ptr<_1c48ce8c5_Enum>* _131761_e, jule::Ptr<_1c4a17cd8_Prim>* _131772_prim, jule::Ptr<_1c48cdd58_EnumItem>* _131790_item, jule::I64* _1317112_n);
inline void _1ab7c85c8_checkEnumItemsInt1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a17cd8_Prim>* _135241_prim, jule::Ptr<_1c48ce8c5_Enum>* _135259_e);
inline void _1ab7c88b4_checkEnumItemsInt1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a17cd8_Prim>* _135241_prim, jule::Ptr<_1c48ce8c5_Enum>* _135259_e);
inline void _1c495ec63_checkEnumItemsInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _138739_e);
inline void _1c496001b_checkEnumDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _139735_e);
inline void _1c49602c4_checkTypeEnumDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48d10d0_TypeEnum>* _143839_e);
inline jule::Bool _1c496055a_checkEnumDecls(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Bool _1c49607e1_checkTypeEnumDecls(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Bool _1c4960b32_checkDeclGenerics(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _150134_generics);
inline jule::Bool _1c4960e73_checkFnDeclParamsDup(_1c494d290_sema* _self_, jule::Ptr<_1c48b8738_Fn>* _152837_f);
inline jule::Bool _1c49612b4_checkFnDeclResultDup(_1c494d290_sema* _self_, jule::Ptr<_1c48b8738_Fn>* _156537_f);
inline jule::Bool _1c4961605_checkFnVariadicParam(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _161042_f);
inline void _1c49618ad_checkFnDeclPrototype(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _162342_f);
inline jule::Bool _1c4961d64_catchTraitInheritCycle(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait> _164539_t1, jule::Ptr<_1c48cc1b9_Trait> _164555_t2, _238b51e24_StrBuilder* _164572_message);
inline jule::Bool _1c49621a5__checkTraitDeclInherits(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _166445_t);
inline void _1c496245d_checkTraitDeclInherits(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _170544_t);
inline void _1c4962716_checkTraitDeclMethod(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _173042_f);
inline void _1c49629be_checkTraitDeclMethods(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _174443_t);
inline void _1c4962c77_checkTraitDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _178036_t);
inline jule::Bool _1c496300d_checkTraitDecls(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Bool _1c4963409_checkTraitImplMethods(_1c494d290_sema* _self_, jule::Ptr<_1c48cc1b9_Trait>* _180442_base, jule::Ptr<_1c4905830_Impl>* _180457_ipl);
inline jule::Bool _1c4963805_implToStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _181534_dest, jule::Ptr<_1c4905830_Impl>* _181554_ipl);
inline void _1c4963aad_implTrait(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _185731_decl);
inline void _1c4963d66_implStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _190032_decl);
inline void _1c496411e_implImpl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _192430_decl);
inline void _1c4964482_checkVarDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _193534_decl, jule::Trait _193550_l);
inline void _1c496473a_checkGlobalVarDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _197240_decl);
inline jule::Bool _1c49649c1_checkGlobalDecls(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Bool _1c4964dbc_checkStructTraitImpl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _200042_strct, jule::Ptr<_1c48cc1b9_Trait>* _200063_trt);
inline jule::Bool _1c496520d_checkStructImpls(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _202638_s);
inline jule::Bool _1c496554e_checkStructFields(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _203439_st);
inline void _1c4965807_checkStructDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _205137_s);
inline jule::Bool _1c4965a8d_checkStructDecls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4965d46_checkAnonFuncDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _208139_f);
inline void _1c49660ee_checkFuncDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _208635_f);
inline jule::Bool _1c4966440_checkFuncDeclsBy(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _210838_funcs);
inline jule::Bool _1c49666c6_checkFuncDecls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c4966ae4_pushCycleError(_1c494d290_sema* _self_, jule::Str* _212427_st1, jule::Str* _212438_st2, _238b51e24_StrBuilder* _212453_message);
inline void _1c4967298_checkPackageDecls(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496760b_checkDataForTypeInference(_1c494d290_sema* _self_, jule::Ptr<_1c49ce024_Data>* _218442_d, jule::Ptr<_1c486c19d_Token>* _218453_err_token);
inline void _1c49678b4_checkVarValue(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _219635_v);
inline void _1c4967c27_evalVarValue(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _224934_decl, jule::Trait _224950_l);
inline void _1c496808a_checkVar(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _226630_decl, jule::Trait _226646_l);
inline void _1c4968288_checkGlobals(jule::Ptr<_1c494d290_sema> _self_);
inline jule::Ptr<_1c48bb719_FnIns> _1c4968684_readyToCheckFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _229036_s, jule::Ptr<_1c48b8738_Fn>* _229056_f);
inline __jule_tuple_bool__jule_tuple_bool _1c4968a80_checkGenericFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _230636_f, jule::Ptr<_1c486c19d_Token>* _230652_et);
inline void _1c4968de3_checkTypeMethod(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _232937_s, jule::Ptr<_1c48b8738_Fn>* _232957_f);
inline jule::Ptr<_1c48bb719_FnIns> _1c4969399_checkStructInsOp(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _234238_s, jule::Ptr<_1c48b8738_Fn>* _234258_f, jule::Fn<jule::Bool,jule::Ptr<_1c48b8738_Fn>> _234266_p);
inline jule::Bool _1c4969795_checkStructEnv(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _235236_s, jule::Ptr<_1c486c19d_Token> _235255_errorToken);
inline jule::Bool _1c4969b91_precheckStructIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _244939_s, jule::Ptr<_1c486c19d_Token> _244958_errorToken);
inline void _1c4969e49_checkStructIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _248536_s);
inline void _1c496a202_checkTypeStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _249137_s);
inline void _1c496a400_checkStructTypes(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496a6a8_checkStructInsOperators(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns> _251544_s);
inline void _1c496a961_precheckStructType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _257940_s);
inline void _1c496ab5e_precheckStructTypes(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496ae17_checkRets(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _260530_f);
inline void _1c496b27a_checkFnInsSc(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _261633_f, jule::Ptr<_1c4913244_scopeChecker>* _261649_sc);
inline void _1c496b5dd_checkFnInsCaller(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _262938_f, jule::Ptr<_1c486c19d_Token> _262953_caller);
inline void _1c496b896_checkFnIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _265132_f);
inline void _1c496bb4e_checkFunc(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _265531_f);
inline void _1c496be07_checkTestFn(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _267032_f);
inline void _1c496c1b0_precheckFunc(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _270334_f);
inline void _1c496c3ad_precheckFuncs(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496c5ab_checkFuncs(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496c7a9_checkPackageTypes(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496c9a7_setFileSemaFields(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496cba5_setSemaFields(jule::Ptr<_1c494d290_sema> _self_);
inline void _1c496ce5d_check(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _278127_files);
inline _1c496d359_missingRetChecker static__1c496d755_new(void);
inline jule::Bool _1c496da63_checkConditional(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490b8be_Conditional> _282932_c);
inline jule::Bool _1c496dda4_checkMatch(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ee99_Match> _284126_m);
inline jule::Bool _1c496e2a0_checkInfIter(_1c496d359_missingRetChecker* _self_, jule::Uintptr _286724_it, jule::Ptr<_1c490ac86_Scope>* _286742_s);
inline jule::Bool _1c496e5e1_checkScope(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ac86_Scope> _288526_s);
inline jule::Bool _1c496e932_check(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ac86_Scope> _294021_s);
inline jule::Bool _1c49719bc_IsInitialized(_1c49715b0_Var* _self_);
inline jule::Bool _1c4971c53_IsTypeInferred(_1c49715b0_Var* _self_);
inline jule::Bool _1c4971ed9_untypedConstant(_1c49715b0_Var* _self_);
inline jule::Bool static__1c4972baa_Dispose(jule::Ptr<_1c48b8738_Fn> _1020_f);
inline jule::Bool static__1c4972e74_Str(jule::Ptr<_1c48b8738_Fn> _2416_f);
inline jule::Bool static__1c49732e8_logical(jule::Ptr<_1c48b8738_Fn>* _4621_f, jule::Str _4629_ident);
inline jule::Bool static__1c49735b2_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _7215_f);
inline jule::Bool static__1c497387b_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _7715_f);
inline jule::Bool static__1c4973b45_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _8217_f);
inline jule::Bool static__1c4973e0e_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _8715_f);
inline jule::Bool static__1c49741c8_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _9217_f);
inline jule::Bool static__1c497454c_result(jule::Ptr<_1c48b8738_Fn>* _9620_f, jule::Str _9628_ident);
inline jule::Bool static__1c4974816_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _11816_f);
inline jule::Bool static__1c4974ad0_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _12316_f);
inline jule::Bool static__1c4974d99_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _12816_f);
inline jule::Bool static__1c4975163_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _13316_f);
inline jule::Bool static__1c497542c_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _13816_f);
inline jule::Bool static__1c49756e6_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _14316_f);
inline jule::Bool static__1c49759b0_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _14816_f);
inline jule::Bool static__1c4975c79_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _15319_f);
inline jule::Bool static__1c4976043_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _15818_f);
inline jule::Bool static__1c497630c_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _16319_f);
inline jule::Bool static__1c4976681_unary(jule::Ptr<_1c48b8738_Fn>* _16719_f, jule::Str _16727_ident);
inline jule::Bool static__1c497694a_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _18716_f);
inline jule::Bool static__1c4976c14_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _19216_f);
inline jule::Bool static__1c4976ecd_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _19719_f);
inline jule::Bool static__1c4977352_assign(jule::Ptr<_1c48b8738_Fn>* _20120_f, jule::Str _20128_ident);
inline jule::Bool static__1c497761b_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _22122_f);
inline jule::Bool static__1c49778d5_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _22622_f);
inline jule::Bool static__1c4977b9e_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _23122_f);
inline jule::Bool static__1c4977e68_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _23622_f);
inline jule::Bool static__1c4978232_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _24122_f);
inline jule::Bool static__1c49784eb_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _24622_f);
inline jule::Bool static__1c49787b5_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _25122_f);
inline jule::Bool static__1c4978a7e_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _25624_f);
inline jule::Bool static__1c4978d48_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _26125_f);
inline jule::Bool static__1c4979112_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _26625_f);
inline void _1c49b13ad_pushErr(_1c49b0d80_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args);
inline jule::Bool _1c49b1644_checkTrait(_1c49b0d80_typeCompatibilityChecker* _self_);
inline jule::Bool _1c49b18ca_checkPtr(_1c49b0d80_typeCompatibilityChecker* _self_);
inline jule::Bool _1c49b1b61_checkPrim(_1c49b0d80_typeCompatibilityChecker* _self_);
inline jule::Bool _1c49b6db9_typeEnum(_1c49b0d80_typeCompatibilityChecker* _self_, jule::Ptr<_1c48d10d0_TypeEnum>* _19925_e, jule::Ptr<_1c4a1020e_TypeKind>* _19944_t2);
inline jule::Bool _1c49b7150_checkTypeEnum(_1c49b0d80_typeCompatibilityChecker* _self_);
inline jule::Bool _1c49b73d6_check(_1c49b0d80_typeCompatibilityChecker* _self_);
inline void _1c49b7e53_pushErr(_1c49b798b_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args);
inline jule::Bool _1c49b81d9_checkValidity(_1c49b798b_assignTypeChecker* _self_);
inline jule::Bool _1c49b8470_checkConst(_1c49b798b_assignTypeChecker* _self_);
inline jule::Bool _1c49b8706_checkCompatibility(_1c49b798b_assignTypeChecker* _self_);
inline jule::Bool _1c49b898c_check(_1c49b798b_assignTypeChecker* _self_);
inline jule::Bool _1abb1eb50_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k);
inline jule::Bool _1abb1e501_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k);
inline jule::Bool _1abb21679_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k);
inline jule::Bool _1abb28b37_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k);
inline jule::Bool _1c49b9c8a_annotateConstraintMap(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _37742_k);
inline jule::Bool _1c49ba0cb_annotateConstraintTup(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _39242_k);
inline jule::Bool _1c49ba41c_annotateConstraintFn(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _40941_k);
inline jule::Bool _1c49ba75d_annotateConstraintIdent(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _43044_k);
inline jule::Bool _1c49baa9e_annotateConstraint(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _45939_k);
inline void _1c49bae12_pushGeneric(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _48432_k, jule::I64 _48446_i);
inline jule::Bool _1c49bb253_annotatePrim(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _49940_k);
inline jule::Bool _1c49bb594_annotateArr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _50339_k);
inline jule::Bool _1c49bb8d5_annotateSlc(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _51339_k);
inline jule::Bool _1c49bbcd1_checkMapKey(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _52338_k, jule::Ptr<_1c4a1020e_TypeKind>* _52358_ck);
inline jule::Bool _1c49bc122_annotateMap(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _53139_k);
inline jule::Bool _1c49bc463_annotateFn(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _54138_k);
inline jule::Bool _1c49bc7a4_annotatePtr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _57039_k);
inline jule::Bool _1c49bcae5_annotateSptr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _58040_k);
inline jule::Bool _1c49bce36_annotateStruct(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _59042_k);
inline jule::Bool _1c49bd277_annotateAny(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _61239_k);
inline jule::Bool _1c49bd5b8_annotateKind(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _63340_k);
inline jule::Bool _1c49bd84e_annotate(_1c49b9361_dynamicTypeAnnotation* _self_);
inline void _1c49be762_pushErrToken(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c486c19d_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args);
inline void _1c49beac5_pushErr(_1c49be1bd_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args);
inline jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _1c49bed5b_getParams(_1c49be1bd_fnCallArgChecker* _self_);
inline jule::Bool _1c49c019c_checkCounts(_1c49be1bd_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>* _69528_params);
inline jule::Bool _1c49c0653_checkArg(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _72729_p, jule::Ptr<_1c49ce024_Data>* _72748_arg, jule::Ptr<_1c486c19d_Token>* _72765_errorToken);
inline jule::Bool _1c49c0a4e_push(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _75625_p, jule::Ptr<_1c4886aad_Expr> _75643_arg);
inline jule::Bool _1c49c0e4a_pushVariadic(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _78033_p, jule::I64 _78051_i);
inline jule::Bool _1c49c128b_checkArgs(_1c49be1bd_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>* _86130_params);
inline jule::Bool _1c49c1522_checkDynamicTypeAnnotation(_1c49be1bd_fnCallArgChecker* _self_);
inline jule::Bool _1c49c17a8_check(_1c49be1bd_fnCallArgChecker* _self_);
inline void _1c49c2688_pushErr(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c486c19d_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args);
inline void _1c49c29eb_pushSuggestion(_1c49c2105_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args);
inline void _1c49c2e19_pushMatch(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c48a5857_FieldIns>* _95030_f, jule::Ptr<_1c49ce024_Data>* _95049_d, jule::Ptr<_1c486c19d_Token>* _95064_errorToken);
inline void _1c49c327c_checkPair(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c488b2cc_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _96957_exprs);
inline jule::Bool _1c49c35bd_readyExprs(_1c49c2105_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _100831_exprs);
inline void _1c49c3876_check(_1c49c2105_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _103226_exprs);
inline jule::Ptr<_1c49715b0_Var> _1c49c4404_buildVar(_1c49c3dd7_rangeChecker* _self_, jule::Ptr<_1c48955e4_VarDecl>* _110825_decl);
inline void _1c49c4602_setSizeKey(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c4a20_checkRangeExprValidity(_1c49c3dd7_rangeChecker* _self_, jule::Ptr<_1c49ce024_Data>* _112743_d, jule::Ptr<_1c49715b0_Var>* _112754_key, jule::Ptr<_1c4a1020e_TypeKind>* _112770_k);
inline void _1c49c4c1d_checkSlice(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c4e1b_checkArray(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c5119_checkMapKeyA(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c5317_checkMapKeyB(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c5515_checkMap(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c5713_checkStr(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c5911_checkComptime(_1c49c3dd7_rangeChecker* _self_);
inline jule::Bool _1c49c5b97_checkComptimeRange(_1c49c3dd7_rangeChecker* _self_);
inline jule::Bool _1c49c5e2d_check(_1c49c3dd7_rangeChecker* _self_);
inline void _1c49c6aaa_prepareTypes(_1c49c6648_retTypeChecker* _self_);
inline void _1c49c6d63_prepareExprs(_1c49c6648_retTypeChecker* _self_, jule::Ptr<_1c4886aad_Expr>* _128533_e);
inline void _1c49c7061_checkExprs(_1c49c6648_retTypeChecker* _self_);
inline jule::Bool _1c49c72e7_tryFuncMultiRetForward(_1c49c6648_retTypeChecker* _self_);
inline jule::Bool _1c49c7638_check(_1c49c6648_retTypeChecker* _self_, jule::Ptr<_1c4886aad_Expr>* _138426_e);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c49c91c8_SelectPackage(_1c49c8bab_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _2729_selector);
inline jule::Ptr<_1c49715b0_Var> _1c49c95c4_FindVar(_1c49c8bab_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c49c99c0_FindTypeAlias(_1c49c8bab_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1c48a3679_Struct> _1c49c9dbb_FindStruct(_1c49c8bab_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1c48b8738_Fn> _1c49ca2b7_FindFn(_1c49c8bab_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1c48cc1b9_Trait> _1c49ca608_FindTrait(_1c49c8bab_SymbolTable* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c49ca949_FindEnum(_1c49c8bab_SymbolTable* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c49cac8a_FindTypeEnum(_1c49c8bab_SymbolTable* _self_, jule::Str _9728_ident);
inline jule::Ptr<_1c49715b0_Var> _1c49cb3a6_findVar(_1c49c8bab_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c49cb85c_findTypeAlias(_1c49c8bab_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse);
inline jule::Any _1c49cbc58_defByIdent(_1c49c8bab_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded);
inline jule::Bool _1c49cc20e_isDuplicatedIdent(_1c49c8bab_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded);
inline jule::Bool _1c49ce442_IsNil(_1c49ce024_Data* _self_);
inline jule::Bool _1c49ce6c8_IsVoid(_1c49ce024_Data* _self_);
inline jule::Bool _1c49ce95e_IsConst(_1c49ce024_Data* _self_);
inline jule::Bool _1c49ceca0_GoodOperand(_1c49ce024_Data* _self_, jule::Ptr<_1c49ce024_Data>* _10528_other);
inline void _1c49d12ce_pushErr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args);
inline void _1c49d1642_pushSuggestion(_1c49d0c4b_eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args);
inline void _1c49d1840_allowBuiltin(_1c49d0c4b_eval* _self_);
inline void _1c49d1a3d_disallowBuiltin(_1c49d0c4b_eval* _self_);
inline jule::Bool _1c49d1cc4_isUnsafe(_1c49d0c4b_eval* _self_);
inline jule::Bool _1c49d205a_isGlobal(_1c49d0c4b_eval* _self_);
inline jule::Bool _1c49d2368_applyNumericPrefix(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _16839_d);
inline jule::Ptr<_1c49ce024_Data> _1c49d26a9_litStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _20319_l);
inline jule::Ptr<_1c49ce024_Data> _1c49d29ea_litRune(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _22020_l);
inline jule::Ptr<_1c49ce024_Data> _1c49d2d3b_litFloat(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _23921_l);
inline jule::Ptr<_1c49ce024_Data> _1c49d317c_litInt(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _25123_l);
inline jule::Ptr<_1c49ce024_Data> _1c49d34bd_litNum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _30623_l);
inline jule::Ptr<_1c49ce024_Data> _1c49d380e_evalLit(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr> _31523_lit);
inline jule::Any _1c49d3b50_findBuiltins(_1c49d0c4b_eval* _self_, jule::Str* _32829_ident);
inline jule::Any _1c49d404b_getDef(_1c49d0c4b_eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded);
inline jule::Ptr<_1c48be8a4_ReferenceStack> _1c49d42d2_getOwnerRefers(_1c49d0c4b_eval* _self_);
inline void _1aab0990a_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _41037_ref);
inline void _1aab208bb_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _41037_ref);
inline void _1abcc0dde_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns>* _41037_ref);
inline jule::Ptr<_1c49ce024_Data> _1c49d48cb__evalEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _41725_enm);
inline jule::Ptr<_1c49ce024_Data> _1c49d4cc7_evalEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _42628_enm, jule::Ptr<_1c486c19d_Token> _42640_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d5118__evalTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _43529_enm);
inline jule::Ptr<_1c49ce024_Data> _1c49d5514_evalTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _44432_enm, jule::Ptr<_1c486c19d_Token> _44448_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d5855__evalStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _45327_s);
inline jule::Ptr<_1c49ce024_Data> _1c49d5c51_evalStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _46730_s, jule::Ptr<_1c486c19d_Token> _46745_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d6092_evalFnIns(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns> _47725_f);
inline void _1c49d6405_checkDeprecated(_1c49d0c4b_eval* _self_, jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _48636_directives, jule::Ptr<_1c486c19d_Token> _48667_tok);
inline jule::Ptr<_1c49ce024_Data> _1c49d6801_evalFn(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48b8738_Fn> _50226_f, jule::Ptr<_1c486c19d_Token> _50234_errorToken);
inline void _1c49d6c1e_pushIllegalCycleError(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _51638_v1, jule::Ptr<_1c49715b0_Var>* _51649_v2, _238b51e24_StrBuilder* _51664_message);
inline jule::Bool _1c49d711a_checkCrossCycle(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _52632_v, _238b51e24_StrBuilder* _52646_message);
inline jule::Bool _1c49d7516_checkIllegalCycles(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _54339_v, jule::Ptr<_1c486c19d_Token> _54348_declToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d7912_evalVar(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var> _57127_v, jule::Ptr<_1c486c19d_Token> _57136_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d7d0d_evalTypeAlias(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a0e41c_TypeAlias> _67033_ta, jule::Ptr<_1c486c19d_Token> _67049_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49d8209_evalDef(_1c49d0c4b_eval* _self_, jule::Any* _70628_def, jule::Ptr<_1c486c19d_Token> _70638_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49d854a_evalIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48883c8_IdentExpr> _73025_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49d888b_evalUnary(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4888b6a_UnaryExpr> _73530_u);
inline jule::Ptr<_1c49ce024_Data> _1c49d8bcc_evalVariadic(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889044_VariadicExpr> _74033_v);
inline jule::Ptr<_1c49ce024_Data> _1c49d901d_evalUnsafe(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4887e22_UnsafeExpr> _76231_u);
inline jule::Ptr<_1c49ce024_Data> _1c49d935e_evalArr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _77028_s);
inline jule::Ptr<_1c49ce024_Data> _1c49d9815_evalExpSlc(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _84731_s, jule::Ptr<_1c4a1020e_TypeKind> _84750_t, jule::Any _84768_first);
inline jule::Ptr<_1c49ce024_Data> _1c49d9b56_evalSliceExpr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _88534_s);
inline void _1c49d9eb9_checkIntegerIndexingByData(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _92047_d, jule::Ptr<_1c486c19d_Token> _92061_token);
inline void _1c49da3d7_indexingPtr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _93232_d, jule::Ptr<_1c49ce024_Data>* _93247_index, jule::Ptr<_1c488da71_IndexingExpr>* _93266_i);
inline void _1c49da805_indexingArr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _94832_d, jule::Ptr<_1c49ce024_Data>* _94847_index, jule::Ptr<_1c488da71_IndexingExpr>* _94866_i);
inline void _1c49dac23_indexingSlc(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _95832_d, jule::Ptr<_1c49ce024_Data>* _95847_index, jule::Ptr<_1c488da71_IndexingExpr>* _95866_i);
inline void _1c49db141_indexingMap(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _98132_d, jule::Ptr<_1c49ce024_Data>* _98147_index, jule::Ptr<_1c488da71_IndexingExpr>* _98166_i);
inline void _1c49db55e_indexingStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _99732_d, jule::Ptr<_1c49ce024_Data>* _99747_index, jule::Ptr<_1c488da71_IndexingExpr>* _99766_i);
inline void _1c49db97c_toIndexing(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _102631_d, jule::Ptr<_1c49ce024_Data>* _102646_index, jule::Ptr<_1c488da71_IndexingExpr>* _102665_i);
inline jule::Bool _1c49dbe33_pushGenericsFromExprSubIdent(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889bc1_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _10528_generics, jule::Ptr<_1c4886aad_Expr>* _105236_expr);
inline jule::Bool _1c49dc32e_pushGenericsFromData(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _106242_generics, jule::Ptr<_1c4886aad_Expr>* _106270_expr);
inline void _1c49dc692_evalIdentDeclFromIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c49ce024_Data>* _113247_d, jule::Ptr<_1c488da71_IndexingExpr>* _113262_i);
inline __jule_tuple_bool__jule_tuple_bool _1c49dcb48_checkGenericFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48bb719_FnIns>* _117536_f, jule::Ptr<_1c486c19d_Token>* _117552_et, jule::Any* _117569_model);
inline void _1c49dceab_evalFnGenericFromIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c49ce024_Data>* _119147_d, jule::Ptr<_1c488da71_IndexingExpr>* _119162_i);
inline jule::Ptr<_1c49ce024_Data> _1c49dd2ec_evalIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488da71_IndexingExpr> _123133_i);
inline __jule_tuple_x_1c49ce024_Data__jule_tuple_x_1c49ce024_Data _1c49dd63d_evalSlicingExprs(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488e1d1_SlicingExpr>* _128538_s);
inline void _1c49dd8e6_slicingArr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _132127_d);
inline void _1c49ddd14_slicingStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _133627_d, jule::Ptr<_1c49ce024_Data>* _133638_l, jule::Ptr<_1c49ce024_Data>* _133649_r);
inline void _1c49de2dc_checkSlicing(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _137433_d, jule::Ptr<_1c49ce024_Data>* _137444_l, jule::Ptr<_1c49ce024_Data>* _137455_r, jule::Ptr<_1c488e1d1_SlicingExpr>* _137466_s);
inline jule::Ptr<_1c49ce024_Data> _1c49de62d_evalSlicing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488e1d1_SlicingExpr> _139332_s);
inline void _1c49dea4b_castPtr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _143027_t, jule::Ptr<_1c49ce024_Data> _143045_d, jule::Ptr<_1c486c19d_Token> _143055_errorToken);
inline void _1c49dee69_castStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _145230_t, jule::Ptr<_1c49ce024_Data> _145248_d, jule::Ptr<_1c486c19d_Token> _145258_errorToken);
inline void _1c49e0387_castRef(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _146927_t, jule::Ptr<_1c49ce024_Data> _146945_d, jule::Ptr<_1c486c19d_Token> _146955_errorToken);
inline void _1c49e07a5_castSlc(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _149227_t, jule::Ptr<_1c49ce024_Data> _149245_d, jule::Ptr<_1c486c19d_Token> _149255_errorToken);
inline void _1c49e0b18_castStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _154727_d, jule::Ptr<_1c486c19d_Token> _154737_errorToken);
inline void _1c49e1036_castInt(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _159427_t, jule::Ptr<_1c49ce024_Data> _159445_d, jule::Ptr<_1c486c19d_Token> _159455_errorToken);
inline void _1c49e1454_castNum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _164027_t, jule::Ptr<_1c49ce024_Data> _164045_d, jule::Ptr<_1c486c19d_Token> _164055_errorToken);
inline void _1c49e1872_castPrim(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _167128_t, jule::Ptr<_1c49ce024_Data> _167146_d, jule::Ptr<_1c486c19d_Token> _167156_errorToken);
inline void _1c49e1bd5_castConstant(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _168933_t, jule::Ptr<_1c49ce024_Data>* _168952_d);
inline void _1c49e2103_castTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _169833_t, jule::Ptr<_1c49ce024_Data>* _169852_d, jule::Ptr<_1c486c19d_Token>* _169867_errorToken);
inline void _1c49e2521_castTypeEnumT(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _170834_t, jule::Ptr<_1c49ce024_Data>* _170853_d, jule::Ptr<_1c486c19d_Token>* _170868_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49e29c7_evalCastByTypeNData(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _171839_t, jule::Ptr<_1c49ce024_Data> _171857_d, jule::Ptr<_1c486c19d_Token> _171871_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49e2e7d_evalCastT(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _179131_t, jule::Ptr<_1c4886aad_Expr>* _179150_e, jule::Ptr<_1c486c19d_Token>* _179165_et);
inline jule::Ptr<_1c49ce024_Data> _1c49e32be_evalCast(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488941d_CastExpr> _180829_c);
inline jule::Ptr<_1c49ce024_Data> _1c49e3610_evalNsSelection(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48897e7_NsSelectionExpr> _181731_s);
inline jule::Ptr<_1c49ce024_Data> _1c49e3ab6_evalStructLitExplicit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48a6407_StructIns> _184342_s, jule::Slice<jule::Ptr<_1c4886aad_Expr>> _18447_exprs, jule::Ptr<_1c486c19d_Token> _184427_errorToken);
inline jule::Ptr<_1c49ce024_Data> _1c49e3e07_evalStructLit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488bb07_StructLit> _188134_lit);
inline _1c4a220bc_typeChecker _1c49e418d_typeChecker(_1c49d0c4b_eval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c49e44ce_evalType(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4882779_TypeDecl> _191328_t);
inline void _1c49e4842_callTypeFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _192632_fc, jule::Ptr<_1c49ce024_Data>* _192654_d);
inline void _1c49e4ba5_callBuiltinFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _195235_fc, jule::Ptr<_1c49ce024_Data>* _195257_d);
inline void _1c49e5018_checkFnOfConcurrentCall(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _196440_f, jule::Ptr<_1c486c19d_Token> _196451_errorToken);
inline void _1c49e5436_processExceptionalHandler(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _198346_f, jule::Ptr<_1c488a7d7_FnCallExpr>* _198362_fc, jule::Ptr<_1c49ce024_Data>* _198384_d);
inline void _1c49e5799_callFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _201028_fc, jule::Ptr<_1c49ce024_Data>* _201050_d);
inline jule::Ptr<_1c49ce024_Data> _1c49e5ada_evalFnCall(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr> _216331_fc);
inline jule::Ptr<_1c49ce024_Data> _1c49e5ed6_evalEnumStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _219634_enm, jule::Ptr<_1c486c19d_Token> _219650_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e63d2_evalTypeEnumStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _220438_enm, jule::Ptr<_1c486c19d_Token> _220454_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e67cd_evalStructStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _222736_s, jule::Ptr<_1c486c19d_Token> _222751_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e6c84_evalTraitSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _226237_d, jule::Ptr<_1c48cc1b9_Trait> _226251_trt, jule::Ptr<_1c486c19d_Token> _226268_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e72e5_evalStructSubIdentField(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _228244_d, jule::Ptr<_1c48a6407_StructIns>* _228259_s, jule::Ptr<_1c486c19d_Token>* _228279_tok, jule::Ptr<_1c48a5857_FieldIns>* _228297_f);
inline jule::Ptr<_1c49ce024_Data> _1c49e7856_evalStructSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _230538_d, jule::Ptr<_1c48a6407_StructIns> _230552_s, jule::Ptr<_1c4889bc1_SubIdentExpr> _230571_si, jule::Bool _230590_ref);
inline jule::Ptr<_1c49ce024_Data> _1c49e7b97_evalIntTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _234633_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e7ed8_evalUintTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _237334_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e8329_evalI8TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _239132_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e866a_evalI16TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _242033_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e89ab_evalI32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _244933_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e8cec_evalI64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _247833_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e913d_evalU8TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _250732_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e947e_evalU16TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _252633_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e97c0_evalU32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _254533_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e9b11_evalU64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _256433_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49e9e52_evalF32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _258333_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49ea293_evalF64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _262233_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49ea68e_evalPrimStatic(_1c49d0c4b_eval* _self_, jule::Str _266130_kind, jule::Ptr<_1c486c19d_Token> _266141_ident);
inline jule::Ptr<_1c49ce024_Data> _1c49eaa8a_evalTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _269334_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _269348_si);
inline jule::Ptr<_1c49ce024_Data> _1abdeae1a_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48e3ae8_comptimeTypeInfo>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe0056d_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d4c93_comptimeStructField>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe04b7c_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48db30a_comptimeEnumField>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe092d0_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ddc9c_comptimeParam>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe0da32_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d804e_comptimeStatic>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe13141_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ea10a_comptimeValue>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline jule::Ptr<_1c49ce024_Data> _1abe17750_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ee054_comptimeFile>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si);
inline __jule_tuple_x_1c49ce024_Data__jule_tuple_bool _1c49eb43c_tryComptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _271743_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _271757_si);
inline jule::Ptr<_1c49ce024_Data> _1c49eb838_evalObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _274535_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _274549_si);
inline jule::Ptr<_1c49ce024_Data> _1c49ebb79_evalSubIdent(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889bc1_SubIdentExpr> _278933_si);
inline jule::Ptr<_1c49ce024_Data> _1c49ebeba_evalTuple(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48876a2_TupleExpr> _280330_tup);
inline jule::Ptr<_1c49ce024_Data> _1c49ec3b6_evalMap(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4a1d97b_Map> _283228_m, jule::Ptr<_1c488c0ad_BraceLit> _283241_lit);
inline jule::Ptr<_1c49ce024_Data> _1c49ec707_evalBraceLit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488c0ad_BraceLit> _288133_lit);
inline jule::Ptr<_1c49ce024_Data> _1c49eca48_evalAnonFunc(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4894439_FnDecl> _289633_decl);
inline jule::Ptr<_1c49ce024_Data> _1c49ecd89_evalBinary(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a177_BinaryExpr> _293431_op);
inline jule::Ptr<_1c49ce024_Data> _1c49ed1ca_evalExprKind(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Any _294933_kind);
inline jule::Ptr<_1c49ce024_Data> _1c49ed51b_eval1(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _299726_expr);
inline jule::Ptr<_1c49ce024_Data> _1c49ed85c_eval(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _302525_expr);
inline jule::Ptr<_1c49ce024_Data> _1c49edb9d_evalExpr1(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _304030_expr);
inline jule::Ptr<_1c49ce024_Data> _1c49edede_evalExpr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _305629_expr);
inline _1c49ee473_unaryEval static__1c49ee8e6_new(jule::Ptr<_1c49d0c4b_eval> _307720_e);
inline void _1c49eeae4_minus(_1c49ee473_unaryEval* _self_);
inline void _1c49eece2_plus(_1c49ee473_unaryEval* _self_);
inline void _1c49eeee0_caret(_1c49ee473_unaryEval* _self_);
inline void _1c4a001dd_excl(_1c49ee473_unaryEval* _self_);
inline void _1c4a003db_star(_1c49ee473_unaryEval* _self_);
inline void _1c4a005d9_amper(_1c49ee473_unaryEval* _self_);
inline void _1c4a007d7_typeDecl(_1c49ee473_unaryEval* _self_);
inline void _1c4a009d5_evalData(_1c49ee473_unaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a00d26_eval(_1c49ee473_unaryEval* _self_, jule::Ptr<_1c4888b6a_UnaryExpr> _333724_u);
inline _1c4a0140e_binaryEval static__1c4a019d6_newPlain(jule::Ptr<_1c49d0c4b_eval> _338525_e);
inline _1c4a0140e_binaryEval static__1c4a01d5a_new(jule::Ptr<_1c49d0c4b_eval> _339120_e, jule::Ptr<_1c486c19d_Token> _339134_op);
inline jule::Bool _1c4a020e1_checkTypeCompatibility(_1c4a0140e_binaryEval* _self_);
inline jule::Bool _1c4a02377_checkStructCommonOperatorCompatibility(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a0260d_evalComptimeTypeInfo(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a02894_evalNil(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a02b2a_evalEnum(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a02db1_evalTypeEnum(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a03147_evalSptr(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a033cd_evalPtr(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a03664_evalArr(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a038ea_evalStruct(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a03b81_evalTrait(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a03e17_evalAny(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a0419d_evalBool(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a04434_evalStr(_1c4a0140e_binaryEval* _self_);
inline void _1c4a04632_setTypeToGreater(_1c4a0140e_binaryEval* _self_);
inline void _1c4a048da_checkModData(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _380433_d);
inline void _1c4a04ad8_mod(_1c4a0140e_binaryEval* _self_);
inline jule::Bool _1c4a04ed4_numbersAreCompatibile(_1c4a0140e_binaryEval* _self_, jule::Str* _382634_lk, jule::Str* _382644_rk);
inline jule::Ptr<_1c49ce024_Data> _1c4a0526a_evalFloat(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a05501_evalInt(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a05787_evalPrim(_1c4a0140e_binaryEval* _self_);
inline jule::Bool _1c4a05a1d_checkSpecialCases(_1c4a0140e_binaryEval* _self_);
inline jule::Ptr<_1c49ce024_Data> _1c4a05ca4_evalOp(_1c4a0140e_binaryEval* _self_);
inline void _1c4a0605c_evalConst(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _406930_d);
inline void _1c4a06315_checkData(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _414730_d);
inline void _1c4a06513_checkDatas(_1c4a0140e_binaryEval* _self_);
inline void _1c4a067bb_setModel(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _415929_d);
inline void _1c4a06a74_postEval(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _418629_d);
inline jule::Ptr<_1c49ce024_Data> _1c4a06e70_solveExplicit(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _419134_l, jule::Ptr<_1c49ce024_Data>* _419149_r);
inline jule::Ptr<_1c49ce024_Data> _1c4a072b1_eval(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c488a177_BinaryExpr>* _421125_op);
inline jule::Str _1c4a1060a_Str(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a1094b_Equal(jule::Ptr<_1c4a1020e_TypeKind> _self_, jule::Ptr<_1c4a1020e_TypeKind> _9018_other);
inline jule::Bool _1c4a11089_Binded(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a11320_IsNil(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a115a6_Void(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a1183c_Comparable(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a11ac3_Mutable(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a11d59_Ordered(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a120e0_NilCompatible(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a12376_PerformsRC(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a1260c_Variadicable(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a17cd8_Prim> _1c4a12893_Prim(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a1b814_Sptr> _1c4a12b29_Sptr(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a200cb_Ptr> _1c4a12db0_Ptr(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48ce8c5_Enum> _1c4a13146_Enum(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4a133cc_TypeEnum(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a1e608_Arr> _1c4a13663_Arr(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a1c2d7_Slc> _1c4a138e9_Slc(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48bb719_FnIns> _1c4a13b80_Fn(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48a6407_StructIns> _1c4a13e16_Struct(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48cc1b9_Trait> _1c4a1419c_Trait(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a1d97b_Map> _1c4a14433_Map(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c4a1cdcb_Tuple> _1c4a146b9_Tup(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a14950_comptime(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d6954_comptimeStructFields> _1c4a14bd6_comptimeStructFields(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d4c93_comptimeStructField> _1c4a14e6c_comptimeStructField(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48dc6a2_comptimeEnumFields> _1c4a15203_comptimeEnumFields(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48db30a_comptimeEnumField> _1c4a15489_comptimeEnumField(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48e0e36_comptimeParams> _1c4a15720_comptimeParams(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48ddc9c_comptimeParam> _1c4a159a6_comptimeParam(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d42c0_comptimeRange> _1c4a15c3c_comptimeRange(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48e24ed_comptimeTypeInfos> _1c4a15ec3_comptimeTypeInfos(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _1c4a16259_comptimeTypeInfo(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d9c10_comptimeStatics> _1c4a164e0_comptimeStatics(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48d804e_comptimeStatic> _1c4a16776_comptimeStatic(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48ea10a_comptimeValue> _1c4a16a0c_comptimeValue(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48ee054_comptimeFile> _1c4a16c93_comptimeFile(_1c4a1020e_TypeKind* _self_);
inline jule::Ptr<_1c48ec959_comptimeFiles> _1c4a17029_comptimeFiles(_1c4a1020e_TypeKind* _self_);
inline jule::Bool _1c4a17788_checked(_1c4a173d1_TypeSymbol* _self_);
inline jule::Str _1c4a1815c_Str(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1849d_Equal(jule::Ptr<_1c4a17cd8_Prim> _self_, jule::Ptr<_1c4a1020e_TypeKind> _51118_other);
inline jule::Bool _1c4a18943_IsConstraint(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a18bc9_IsI8(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a18e60_IsI16(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a191e6_IsI32(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1947c_IsI64(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a19713_IsU8(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a19999_IsU16(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a19c30_IsU32(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a19eb6_IsU64(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1a24c_IsF32(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1a4d3_IsF64(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1a769_IsInt(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1aa00_IsUint(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1ac86_IsUintptr(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1b01c_IsBool(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1b2a3_IsStr(_1c4a17cd8_Prim* _self_);
inline jule::Bool _1c4a1b539_IsAny(_1c4a17cd8_Prim* _self_);
inline jule::Str _1c4a1bbbb_Str(_1c4a1b814_Sptr* _self_);
inline jule::Bool _1c4a1c00c_Equal(jule::Ptr<_1c4a1b814_Sptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _58818_other);
inline jule::Str _1c4a1c79e_Str(_1c4a1c2d7_Slc* _self_);
inline jule::Bool _1c4a1cae0_Equal(jule::Ptr<_1c4a1c2d7_Slc> _self_, jule::Ptr<_1c4a1020e_TypeKind> _60718_other);
inline jule::Str _1c4a1d283_Str(_1c4a1cdcb_Tuple* _self_);
inline jule::Bool _1c4a1d5c4_Equal(jule::Ptr<_1c4a1cdcb_Tuple> _self_, jule::Ptr<_1c4a1020e_TypeKind> _63618_other);
inline jule::Str _1c4a1dd33_Str(_1c4a1d97b_Map* _self_);
inline jule::Bool _1c4a1e174_Equal(jule::Ptr<_1c4a1d97b_Map> _self_, jule::Ptr<_1c4a1020e_TypeKind> _67318_other);
inline jule::Str _1c4a1e9b0_Str(_1c4a1e608_Arr* _self_);
inline jule::Bool _1c4a1ed01_Equal(jule::Ptr<_1c4a1e608_Arr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _70118_other);
inline jule::Str _1c4a20483_Str(_1c4a200cb_Ptr* _self_);
inline jule::Bool _1c4a207c4_Equal(jule::Ptr<_1c4a200cb_Ptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _72518_other);
inline jule::Bool _1c4a20b48_IsUnsafe(_1c4a200cb_Ptr* _self_);
inline void _1c4a2283c_pushErr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c486c19d_Token> _81523_token, jule::Str _81538_fmt, jule::Slice<jule::Any> _81551_args);
inline void _1c4a22a3a_allowBuiltin(_1c4a220bc_typeChecker* _self_);
inline void _1c4a22c38_disallowBuiltin(_1c4a220bc_typeChecker* _self_);
inline void _1ab921ee6_pushReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a6407_StructIns>* _82737_t);
inline void _1ab9248bc_pushReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48cc1b9_Trait>* _82737_t);
inline void _1c4a23299_pushReferenceByKind(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _83740_k);
inline void _1c4a236b7_pushCycleError(_1c4a220bc_typeChecker* _self_, jule::Any _84826_def1, jule::Any _84837_def2, _238b51e24_StrBuilder* _84853_message);
inline jule::Bool _1c4a23ab3_checkCrossCycle(_1c4a220bc_typeChecker* _self_, jule::Any _87027_decl, _238b51e24_StrBuilder* _87043_message);
inline jule::Bool _1c4a23eae_checkIllegalCycles(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _90435_ident, jule::Any _90462_decl);
inline jule::Trait _1c4a243aa_fromTypeAlias(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _95430_decl, jule::Ptr<_1c4a0e41c_TypeAlias>* _95457_ta);
inline jule::Ptr<_1c48ce8c5_Enum> _1c4a247a6_fromEnum(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _103125_decl, jule::Ptr<_1c48ce8c5_Enum>* _103152_e);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4a24ba2_fromTypeEnum(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _104329_decl, jule::Ptr<_1c48d10d0_TypeEnum>* _104356_e);
inline jule::Ptr<_1c48cc1b9_Trait> _1c4a2509d_fromTrait(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _105526_decl, jule::Ptr<_1c48cc1b9_Trait>* _105553_t);
inline jule::Bool _1c4a25499_checkStructIns(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a6407_StructIns>* _106835_ins, jule::Ptr<_1c486c19d_Token>* _106857_errorToken);
inline void _1c4a25752_appendUsedStructReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a3679_Struct>* _108946_s);
inline jule::Ptr<_1c48a6407_StructIns> _1c4a25b4d_buildStructInstance(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _110240_decl, jule::Ptr<_1c48a3679_Struct>* _110267_s);
inline jule::Ptr<_1c48a6407_StructIns> _1c4a26049_fromStruct(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _115031_decl, jule::Ptr<_1c48a3679_Struct>* _115058_s);
inline jule::Trait _1c4a2638a_getDef(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _120827_decl);
inline jule::Trait _1c4a266cb_buildIdent(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl> _126930_decl);
inline jule::Trait _1c4a26a1c_buildSubIdent(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c488314d_SubIdentTypeDecl> _127333_decl);
inline jule::Ptr<_1c4a1b814_Sptr> _1c4a26d5d_buildSptrFromType(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _130738_elem);
inline jule::Ptr<_1c4a1b814_Sptr> _1c4a2719e_buildSptr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883824_SptrTypeDecl> _132729_decl);
inline jule::Ptr<_1c4a200cb_Ptr> _1c4a274e0_buildPtrFromType(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _133637_elem);
inline jule::Ptr<_1c4a200cb_Ptr> _1c4a27831_buildPtr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48842a3_PtrTypeDecl> _135128_decl);
inline jule::Ptr<_1c4a1c2d7_Slc> _1c4a27b72_buildSlc(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883ba9_SlcTypeDecl> _136828_decl);
inline jule::Ptr<_1c4a1e608_Arr> _1c4a27eb3_buildArr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4884a45_ArrTypeDecl> _138928_decl);
inline jule::Ptr<_1c4a1d97b_Map> _1c4a28304_buildMap(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4885293_MapTypeDecl> _143828_decl);
inline jule::Ptr<_1c4a1cdcb_Tuple> _1c4a28645_buildTuple(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883ea6_TupleTypeDecl> _146230_decl);
inline jule::Bool _1c4a28986_checkFuncTypes(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48bb719_FnIns>* _147535_f);
inline jule::Ptr<_1c48bb719_FnIns> _1c4a28cc7_buildFunc(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4894439_FnDecl> _149329_decl);
inline jule::Trait _1c4a29118_buildByNamespace(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883527_NamespaceTypeDecl> _152336_decl);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c4a29459_build(_1c4a220bc_typeChecker* _self_, jule::Any* _154726_declKind);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c4a2979a_checkDecl(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882779_TypeDecl>* _163530_decl);
inline jule::Bool static__1c4a2a1e6_prim(jule::Str* _166218_ident, jule::Ptr<_1c4a17cd8_Prim> _166230_t);
inline jule::Bool static__1c4a2a56a_exist(jule::Str* _166619_ident, jule::Ptr<_1c4a1020e_TypeKind>* _166636_k);
inline void _1c567cc27_stop(_1c567c573_scopeParser* _self_);
inline jule::Bool _1c567cead_stopped(_1c567c573_scopeParser* _self_);
inline jule::Bool _1c567d244_finished(_1c567c573_scopeParser* _self_);
inline jule::Bool _1c567d4ca_isLastSt(_1c567c573_scopeParser* _self_);
inline void _1c567d83d_pushErr(_1c567c573_scopeParser* _self_, jule::Ptr<_1c486c19d_Token> _18823_token, jule::Str _18838_fmt);
inline void _1c567dba1_pushSuggestion(_1c567c573_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args);
inline void _1c567de59_insertAsNext(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _19733_tokens);
inline jule::Ptr<_1c567bbd2_stmt> _1c567e1e0_next(_1c567c573_scopeParser* _self_);
inline jule::Ptr<_1c489279a_ScopeTree> _1c567e5db_buildScope(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _20731_tokens, jule::Ptr<_1c486c19d_Token> _20753_end);
inline jule::Ptr<_1c48955e4_VarDecl> _1c567e92c_buildVarSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _21831_tokens);
inline jule::Ptr<_1c48959bd_RetSt> _1c567ec6d_buildRetSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _22630_tokens);
inline jule::Ptr<_1c489623d_Iter> _1c56800ae_buildWhileNextIter(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _23739_s);
inline jule::Ptr<_1c4896a68_WhileKind> _1c5680400_buildWhileIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28239_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5680741_getRangeKindKeysTokens(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28843_toks);
inline jule::Ptr<_1c48955e4_VarDecl> _1c5680a82_buildRangeKindKey(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _29438_tokens);
inline jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _1c5680dc3_buildRangeKindKeys(_1c567c573_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _32039_parts);
inline void _1c5681236_setupRangeKindKeysPlain(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _32866_tokens);
inline void _1c5681599_setupRangeKindKeysExplicit(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _34369_tokens);
inline void _1c568190c_setupRangeKindKeys(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _35261_tokens);
inline jule::Ptr<_1c4897470_RangeKind> _1c5681db3_buildRangeIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _3618_exprTokens, jule::Ptr<_1c486c19d_Token>* _36135_inToken);
inline jule::Any _1c56822ae_buildCommonIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37640_tokens, jule::Ptr<_1c486c19d_Token>* _37659_err_tok);
inline jule::Ptr<_1c489623d_Iter> _1c5682600_buildCommonIter(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _40335_tokens);
inline jule::Ptr<_1c489623d_Iter> _1c5682941_buildIterSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _43332_st);
inline jule::Ptr<_1c4897849_BreakSt> _1c5682c82_buildBreakSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _44033_tokens);
inline jule::Ptr<_1c4897c23_ContSt> _1c56830c3_buildContSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _45832_tokens);
inline jule::Ptr<_1c48981c9_If> _1c5683414_buildIf(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _47628_tokens);
inline jule::Ptr<_1c48985a3_Else> _1c5683755_buildElse(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _50930_tokens);
inline jule::Ptr<_1c4898a59_Conditional> _1c5683a96_buildIfElseChain(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _53336_tokens);
inline jule::Ptr<_1c4886aad_Expr> _1c5683dd7_buildCoCallSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _55633_tokens);
inline jule::Ptr<_1c4890237_GotoSt> _1c5684228_buildGotoSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _57232_tokens);
inline jule::Ptr<_1c4890534_FallSt> _1c5684569_buildFallSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _59232_tokens);
inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c56848aa_buildTypeAliasSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _60237_tokens);
inline void _1c5684d83_pushCaseExpr(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _60832_tokens, jule::Ptr<_1c486c19d_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _60925_exprs);
inline __jule_tuple_sx_1c4886aad_Expr__jule_tuple_bool _1c5685339_buildCaseExprs(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _63135_tokens, jule::Ptr<_1c486c19d_Token>* _63158_colon, jule::Bool _63173_typeMatch);
inline jule::Ptr<_1c489279a_ScopeTree> _1c568567a_buildCaseScope(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _67335_tokens);
inline __jule_tuple_x_1c489974c_Case__jule_tuple_bool _1c5685a76_buildCase(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70030_tokens, jule::Bool _70048_typeMatch);
inline __jule_tuple_sx_1c489974c_Case__jule_tuple_x_1c48985a3_Else _1c5685e72_buildCases(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _71530_tokens, jule::Bool _71548_typeMatch);
inline jule::Ptr<_1c489a066_MatchCase> _1c56862b3_buildMatchCase(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _74934_tokens);
inline jule::Ptr<_1c489279a_ScopeTree> _1c5686604_buildScopeSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _78232_tokens);
inline jule::Ptr<_1c488ed5d_LabelSt> _1c5686945_buildLabelSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _82533_tokens);
inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5686c86_buildIdSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _84030_tokens);
inline jule::Ptr<_1c5697703_assignInfo> _1c56870c7_buildAssignInfo(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _85436_tokens);
inline jule::Ptr<_1c4890b94_AssignLeft> _1c5687418_buildAssignL(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _89933_tokens);
inline jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> _1c5687759_buildAssignLs(_1c567c573_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _91034_parts);
inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5687a9a_buildPlainAssign(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _91937_tokens);
inline jule::Bool _1c5687e96_buildDeclAssign1(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _96937_lefts, jule::Ptr<_1c4891227_AssignSt>* _96959_assign);
inline __jule_tuple_x_1c4891227_AssignSt__jule_tuple_bool _1c56882d7_buildDeclAssign(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _101435_tokens);
inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5688628_buildAssignSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _104834_tokens);
inline jule::Ptr<_1c4887482_UseExpr> _1c5688969_buildUseExpr(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _106133_tokens);
inline jule::Any _1c5688caa_buildConstSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _107433_st);
inline jule::Any _1c56890eb_buildSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _109928_st);
inline void _1c568945e_build(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _116326_tokens, jule::Ptr<_1c489279a_ScopeTree>* _116349_s);
inline void _1c568a7b2_pushErr(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args);
inline void _1c568ab25_pushSuggestion(_1c5689edc_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args);
inline jule::Ptr<_1c48876a2_TupleExpr> _1c568ae66_buildTuple(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _5431_parts);
inline jule::Ptr<_1c4887a48_LitExpr> _1c568b2a7_buildLit(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _6424_token);
inline jule::Any _1c568b939_buildSingle(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _7531_token);
inline jule::Ptr<_1c48883c8_IdentExpr> _1c568bc7a_buildBindIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _9235_tokens);
inline jule::Ptr<_1c4888b6a_UnaryExpr> _1c568c0bb_buildUnary(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _11130_tokens);
inline jule::Ptr<_1c4889bc1_SubIdentExpr> _1c568c40c_buildObjSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _13236_tokens);
inline jule::Ptr<_1c48897e7_NsSelectionExpr> _1c568c74d_buildNsSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _14736_tokens);
inline jule::Ptr<_1c4882779_TypeDecl> _1c568ca8e_buildType(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _17230_tokens);
inline jule::Any _1c568cdd0_buildSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _18634_tokens);
inline jule::Ptr<_1c4889044_VariadicExpr> _1c568d221_buildVariadic(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _20833_tokens);
inline jule::Ptr<_1c4886d77_RangeExpr> _1c568d562_buildBetweenParentheses(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _21743_tokens);
inline jule::Ptr<_1c488941d_CastExpr> _1c568d8a3_tryBuildCast(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _22933_tokens);
inline void _1c568dcc1_pushArg(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c486c19d_Token>> _30347_tokens, jule::Ptr<_1c486c19d_Token> _30365_err_token);
inline jule::Slice<jule::Ptr<_1c4886aad_Expr>> _1c568e112_buildArgs(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _31229_tokens);
inline jule::Ptr<_1c488a7d7_FnCallExpr> _1c568e909_buildFnCall(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token>* _37832_token, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37873_args);
inline jule::Any _1c568ec4a_buildParenthesesRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _38642_tokens);
inline jule::Ptr<_1c4887e22_UnsafeExpr> _1c569008b_buildUnsafeExpr(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _40835_tokens);
inline jule::Ptr<_1c4894439_FnDecl> _1c56903cc_buildAnonFn(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _42332_tokens);
inline jule::Any _1c569071d_buildUnsafe(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _43232_tokens);
inline void _1c5690b3b_pushRangeLitPart(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _44236_part, jule::Ptr<_1c486c19d_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _44328_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5690e7c_getBraceRangeLitExprParts(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _45345_tokens);
inline jule::Ptr<_1c488b2cc_FieldExprPair> _1c56912bd_buildFieldExprPair(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _49538_tokens);
inline jule::Ptr<_1c4886aad_Expr> _1c569160e_buildStructLitExpr(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _50839_tokens);
inline jule::Slice<jule::Ptr<_1c4886aad_Expr>> _1c5691950_buildStructLitExprs(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _52340_tokens);
inline jule::Ptr<_1c488bb07_StructLit> _1c5691c91_buildTypedStructLiteral(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _53643_tokens);
inline jule::Ptr<_1c4886aad_Expr> _1c56920d2_buildBraceLitPart(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _56038_tokens);
inline jule::Ptr<_1c488c0ad_BraceLit> _1c5692423_buildBraceLit(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _57734_tokens);
inline jule::Any _1c5692764_buildBraceRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _59636_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5692aa5_getEnumerableParts(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _64838_tokens);
inline jule::Ptr<_1c488d114_SliceExpr> _1c5692de6_buildSlice(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _65530_tokens);
inline jule::Ptr<_1c488da71_IndexingExpr> _1c569339c_buildIndexing(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c486c19d_Token>> _6787_tokens, jule::Ptr<_1c486c19d_Token> _67829_errorToken);
inline jule::Ptr<_1c488e1d1_SlicingExpr> _1c56939b8_buildSlicing(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _7028_to, jule::Ptr<_1c486c19d_Token>* _70227_errorToken, jule::Ptr<_1c486c19d_Token> _70251_end);
inline jule::Any _1c5693d09_buildBracketRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _71737_tokens);
inline jule::Any _1c569414a_buildExclRight(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _74235_tokens);
inline jule::Any _1c569448b_buildData(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _76030_tokens);
inline jule::Any _1c5694887_buildBinary(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _82932_tokens, jule::I64 _82950_i);
inline jule::Any _1c5694bc8_build(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _85426_tokens);
inline jule::Any _1c5695019_buildKind(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _86530_tokens);
inline jule::Ptr<_1c4886aad_Expr> _1c569535a_buildFromTokens(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _87635_tokens);
inline void _1c569ae32_stop(_1c569ab02_parser* _self_);
inline jule::Bool _1c569b1b8_stopped(_1c569ab02_parser* _self_);
inline void _1c569b5d6_pushErr(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args);
inline void _1c569b949_pushSuggestion(_1c569ab02_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args);
inline jule::Ptr<_1c4886aad_Expr> _1c569bc8a_buildExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _21731_tokens);
inline jule::Ptr<_1c4881b96_Directive> _1c569c0cb_buildDirective(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _22134_tokens);
inline void _1c569c384_pushDirective(_1c569ab02_parser* _self_, jule::Ptr<_1c4881b96_Directive> _23633_d);
inline jule::Ptr<_1c489279a_ScopeTree> _1c569c780_buildScope(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _24932_tokens, jule::Ptr<_1c486c19d_Token> _24954_end);
inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c569cc36__buildType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err);
inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c569d1dc_buildType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err);
inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c569d52d_buildTypeAliasDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28140_tokens);
inline void _1c569d891_buildVarTypeAndExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c48955e4_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _32159_tokens);
inline void _1c569dc04_buildVarCommon(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c48955e4_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c486c19d_Token>> _35453_tokens);
inline void _1c569e067_buildVarBegin(_1c569ab02_parser* _self_, jule::Ptr<_1c48955e4_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37052_tokens);
inline jule::Ptr<_1c48955e4_VarDecl> _1c569e3a8_buildVar(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _39829_tokens);
inline jule::Ptr<_1c488e984_GenericDecl> _1c569e6e9_buildGeneric(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _41734_tokens);
inline jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _1c569eae5_buildGenerics(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _45435_tokens, jule::Ptr<_1c486c19d_Token>* _45454_errorToken);
inline jule::Ptr<_1c4892ed7_ParamDecl> _1c569ee36_buildSelfParam(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _47434_tokens);
inline void _1c56a0354_paramTypeBegin(_1c569ab02_parser* _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _51468_tokens);
inline void _1c56a06b7_buildParamType(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _52960_tokens);
inline void _1c56a0a2a_buildParamBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c486c19d_Token>> _54259_tokens);
inline jule::Ptr<_1c4892ed7_ParamDecl> _1c56a0d6b_buildParam(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _56231_tokens);
inline void _1c56a1124_checkParams(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>>* _60532_params);
inline jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> _1c56a1520_buildParams(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _62533_tokens, jule::Bool _62551_method);
inline __jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool _1c56a191b_buildMultiRetType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _65539_tokens, jule::I64* _65562_i);
inline __jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool _1c56a1d17_buildRetType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _72634_tokens, jule::I64* _72657_i);
inline jule::Ptr<_1c4894439_FnDecl> _1c56a22bd_buildFnPrototype(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method);
inline jule::Ptr<_1c4894439_FnDecl> _1c56a2774_buildFn(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype);
inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c56a2ab5_getUseDeclSelectors(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _87639_tokens);
inline void _1c56a2e28_buildBindUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _90154_tokens);
inline jule::Str _1c56a3269_useDeclTokstoa(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _91431_tokens);
inline void _1c56a35cc_buildStdUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _92956_tokens);
inline void _1c56a3940_buildIdentUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _98758_tokens);
inline void _1c56a3ca3_parseUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _103553_tokens);
inline jule::Ptr<_1c489a880_UseDecl> _1c56a419e_buildUseDecl(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _106932_tokens, jule::Bool _106950_binded);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56a459a_buildTypeEnumItemKind(jule::Ptr<_1c569ab02_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _108356_tokens);
inline jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>> _1c56a48db_buildTypeEnumItems(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _112040_tokens);
inline jule::Ptr<_1c489c882_TypeEnumDecl> _1c56a4c2c_buildTypeEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _114439_tokens);
inline jule::Ptr<_1c4886aad_Expr> _1c56a5128_buildEnumItemExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _117152_tokens);
inline jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> _1c56a5469_buildEnumItems(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _120336_tokens);
inline jule::Ptr<_1c489b8e7_EnumDecl> _1c56a57aa_buildEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _124035_tokens);
inline jule::Any _1c56a5aeb_buildNodeEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _128539_tokens);
inline jule::Ptr<_1c489cb4b_FieldDecl> _1c56a5e3c_buildField(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _129431_tokens);
inline jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>> _1c56a627d_buildStructDeclFields(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _134342_tokens);
inline jule::Ptr<_1c489d542_StructDecl> _1c56a65be_buildStructDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _135437_tokens);
inline void _1c56a6877_checkMethodReceiver(_1c569ab02_parser* _self_, jule::Ptr<_1c4894439_FnDecl>* _140236_f);
inline void _1c56a6bda_buildTraitBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489dc7e_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c486c19d_Token>> _142155_tokens);
inline jule::Ptr<_1c489dc7e_TraitDecl> _1c56a702b_buildTraitDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _145336_tokens);
inline jule::Ptr<_1c4894439_FnDecl> _1c56a736c_buildBindFn(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _148332_tokens);
inline jule::Ptr<_1c48955e4_VarDecl> _1c56a76ad_buildBindVar(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _149333_tokens);
inline jule::Ptr<_1c489d542_StructDecl> _1c56a79ee_buildBindStruct(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _150636_tokens);
inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c56a7d40_buildBindTypeAlias(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _152039_tokens);
inline jule::Ptr<_1c489a880_UseDecl> _1c56a8181_buildBindUse(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _153033_tokens);
inline jule::Any _1c56a84c2_buildBind(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _154131_tokens);
inline jule::Ptr<_1c4894439_FnDecl> _1c56a8813_getMethod(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _156531_tokens);
inline void _1c56a8b76_parseImplBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489e3de_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _159452_tokens);
inline jule::Ptr<_1c489e3de_Impl> _1c56a8eb7_buildImpl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _162730_tokens);
inline jule::Any _1c56a9308_buildNodeData(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _169835_tokens);
inline void _1c56a95b1_applyFnMeta(_1c569ab02_parser* _self_, jule::Ptr<_1c4894439_FnDecl>* _173132_f);
inline void _1c56a9869_applyMeta(_1c569ab02_parser* _self_, _1c4881778_Node* _173630_node);
inline void _1c56a9b22_pushUseDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489a880_UseDecl>* _176133_decl);
inline jule::Bool _1c56a9e63_pushMetaNodes(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _176935_tokens);
inline _1c4881778_Node _1c56aa2a4_parseNode(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _178931_st);
inline void _1c56aa55c_appendNode(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _181332_st);
inline void _1c56aaa35_removeRange(_1c569ab02_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges);
inline void _1c56aae53_pushWrongOrderCloseErr(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token>* _183539_t, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges);
inline void _1c56ab42b_pushRangeClose(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges);
inline void _1c56ab6d4_checkRanges(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _186428_tokens);
inline void _1c56ab98c_parse(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4872934_File>* _189527_f);
inline void _1c56ad2eb_pushErr(_1c56acc24_typeBuilder* _self_, jule::Ptr<_1c486c19d_Token> _4123_token, jule::Str _4138_fmt);
inline void _1c56ad65e_pushSuggestion(_1c56acc24_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ad8e5_buildNamespace(_1c56acc24_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _1c56adb7b_buildGenerics(_1c56acc24_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c56ade12_identGenerics(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae198_buildIdent(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae42e_buildCppLink(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae6b5_buildFn(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae94b_buildPtr(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56aebd2_buildSptr(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56aee68_buildSlc(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56b01ee_buildArr(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56b0485_buildMap(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56b071b_buildEnumerable(_1c56acc24_typeBuilder* _self_);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56b09a2_step(_1c56acc24_typeBuilder* _self_);
inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c56b0c38_build(_1c56acc24_typeBuilder* _self_);
inline void _1c4c85451_pushErr(_1c4c84dbd_directiveEval* _self_, jule::Ptr<_1c486c19d_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c4c8584c_splitOperans(_1c4c84dbd_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _3346_tokens);
inline jule::Bool _1c4c85b8d_evalDirectiveIdent(_1c4c84dbd_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1c4c85ece_evalDirectivePart(_1c4c84dbd_directiveEval* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _7837_part);
inline jule::Bool _1c4c86265_eval(_1c4c84dbd_directiveEval* _self_);
inline jule::Ptr<_1c56b1d5a_JuleImporter> static__1c56b2289_New(_1c4c838e4_CompileInfo _5816_info);
inline jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _1c56b2520_AllPackages(_1c56b1d5a_JuleImporter* _self_);
inline void _1c56b2960_SetModPath(_1c56b1d5a_JuleImporter* _self_, jule::Str _7526_path);
inline jule::Str _1c56b2be6_GetModPath(_1c56b1d5a_JuleImporter* _self_);
inline jule::Str _1c56b3037_ModById(_1c56b1d5a_JuleImporter* _self_, jule::I64 _8319_id);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c56b3378_GetImport(_1c56b1d5a_JuleImporter* _self_, jule::Str _8725_path);
inline __jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log _1c56b3774_ImportPackage(_1c56b1d5a_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod);
inline void _1c56b3a2c_Imported(_1c56b1d5a_JuleImporter* _self_, jule::Ptr<_1c492cd1e_ImportInfo> _15328_imp);
inline __jule_tuple_bool__jule_tuple_s_205a977d7_Log _1c56b3e5b_isPassBuildDirectives(_1c56b1d5a_JuleImporter* _self_, jule::Ptr<_1c48807bb_AST>* _17942_file);
inline jule::Ptr<_1c56b8867_ExprInspector> static__1c56b8c0d_New(void);
inline void _1c56b8eb6_args(_1c56b8867_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args);
inline void _1c56b926e_inspect(_1c56b8867_ExprInspector* _self_, jule::Any* _6328_m);
inline void _1c56b95d2_Inspect(_1c56b8867_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f);
inline jule::Ptr<_1c57e0928_ObjectDeadCode> static__1c57e0e01_new(jule::Ptr<_1c56b4830_IR>* _3621_ir);
inline jule::Bool _1ac7ea297_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48cc1b9_Trait>* _4227_t);
inline jule::Bool _1ac800be8_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48bb719_FnIns>* _4227_t);
inline jule::Bool _1ac806a45_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48a6407_StructIns>* _4227_t);
inline jule::Bool _1ac80dc8e_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49715b0_Var>* _4227_t);
inline void _1ac7ea63d_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48cc1b9_Trait> _6232_t);
inline void _1ac80108e_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48bb719_FnIns> _6232_t);
inline void _1ac8070ea_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48a6407_StructIns> _6232_t);
inline void _1ac80e135_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49715b0_Var> _6232_t);
inline void _1c57e17a3_setReferencesAsLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48be8a4_ReferenceStack>* _7541_rs);
inline void _1c57e1a5b_inits(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _17627_pkg);
inline void _1c57e1d14_collectLivePackage(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _18840_pkg);
inline void _1c57e2012_collectLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_);
inline void _1c57e22ba_removeDeadGlobals(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _22139_vars);
inline void _1c57e2573_removeDeadFns(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _23335_funcs);
inline void _1c57e282b_removeDeadStructs(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _25439_structs);
inline void _1c57e2ad4_removeDeadTraits(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>* _27638_traits);
inline void _1c57e2d8c_removeDeadsFile(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49c8bab_SymbolTable>* _29737_file);
inline void _1c57e3145_removeDeadsPackage(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _30440_pkg);
inline void _1c57e3343_removeDeads(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_);
inline void _1c57e3541_elimanate(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_);
inline void _1c57e4a92_optimizeChild(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _3935_s);
inline void _1c57e4d4a_optimizeBodyChildExceptional(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _4950_s);
inline void _1c57e5103_optimizeBodyChild(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _5939_s);
inline void _1c57e53ab_optimizeExprModel(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Any* _6839_model);
inline void _1c57e55a9_eliminateFollowed(_1c57e4575_scopeDeadCode* _self_);
inline void _1c57e5862_pushGoto(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490da03_GotoSt> _8929_gt);
inline void _1c57e5b1a_pushLabel(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490d629_Label> _9930_l);
inline void _1c57e5dc3_optimizeRangeIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490cabd_RangeIter> _11238_it);
inline void _1c57e617b_optimizeWhileIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490c172_WhileIter> _11738_it);
inline void _1c57e6434_optimizeInfIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490bbbb_InfIter> _12536_it);
inline void _1c57e66dc_optimizeConditional(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490b8be_Conditional> _12940_c);
inline void _1c57e6995_optimizeMatch(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ee99_Match> _14734_m);
inline void _1c57e6c4d_optimizeAssign(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490e383_Assign> _16535_assign);
inline void _1c57e7006_optimizeMultiAssign(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490e839_MultiAssign> _17040_assign);
inline void _1c57e72ae_optimizeStmt(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Any _17933_st);
inline void _1c57e74ac_optimizeStmts(jule::Ptr<_1c57e4575_scopeDeadCode> _self_);
inline _1c57e8c1c_exprDeadCode static__1c57e90d5_new(jule::Ptr<_1c57e4575_scopeDeadCode>* _1821_s);
inline void _1c57e938d_optimize(_1c57e8c1c_exprDeadCode* _self_, jule::Any* _2425_model);
inline void _21dde5be9_pushVar(_21dde5754_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe);
inline jule::Bool _21dde603a_removeVar(_21dde5754_nils* _self_, jule::Uintptr _5225_var);
inline jule::Bool _21dde637b_isSafe(_21dde5754_nils* _self_, jule::Uintptr _6622_var);
inline jule::Ptr<_1c56c637a_scopeOptimizer> static__1c56c6930_new(jule::Ptr<_1c490ac86_Scope> _5120_scope);
inline void _1c56c6bd8_setCurrentStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Any _6335_stmt);
inline void _1c56c6dd6_removeCurrent(jule::Ptr<_1c56c637a_scopeOptimizer> _self_);
inline jule::Bool _1c56c716c_isLastStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_);
inline jule::Bool _1c56c7403_isIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_);
inline void _1c56c76ab_optimizeData(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49ce024_Data> _9533_d);
inline void _1c56c7964_optimizeVar(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49715b0_Var> _12132_v);
inline void _1c56c7c1c_optimizeConditional(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490b8be_Conditional> _14240_c);
inline void _1c56c813a_buildDefaultConstantTrueCase(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49109c2_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1c490ee99_Match>* _21680_m);
inline void _1c56c83e3_optimizeMatch(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ee99_Match> _24234_m);
inline void _1c56c869b_optimizeRangeIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490cabd_RangeIter> _32438_it);
inline void _1c56c8954_optimizeWhileIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490c172_WhileIter> _36938_it);
inline jule::Bool _1c56c8c95_substr(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _37527_a);
inline jule::Bool _1c56c90d6_strAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _39530_a);
inline jule::Bool _1c56c9427_sliceAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _40632_a);
inline void _1c56c96d0_optimizePostfix(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ddcc_Postfix> _41436_postfix);
inline void _1c56c9988_optimizeAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _42135_assign);
inline jule::Bool _1c56c9cc9_tryOptimizeSwap(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e839_MultiAssign>* _53037_assign);
inline void _1c56ca082_optimizeMultiAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e839_MultiAssign> _56740_assign);
inline void _1c56ca33a_optimizeRet(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c4911561_RetSt> _61332_r);
inline void _1c56ca5e3_optimizeStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Any _63733_stmt);
inline void _1c56ca89b_optimizeChild(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ac86_Scope> _66634_child);
inline void _1c56caa99_optimize(jule::Ptr<_1c56c637a_scopeOptimizer> _self_);
inline void static__1c56cd34e_optimize(jule::Any* _3626_model);
inline void static__1c56cd63a_optimizeData(jule::Any* _4030_model, jule::Ptr<_1c56d6236_data>* _4053_d);
inline jule::Bool _1c56cd97b_selfCmpCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _5228_m);
inline jule::Bool _1c56cdcbc_boolCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _7625_m);
inline jule::Bool _1c56ce10d_strCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _12923_m);
inline jule::Bool _1c56ce5b4_tryNeutralElement1(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _18635_m, jule::Ptr<_1dc54537a_Const> _18660_c, jule::Ptr<_1c48aa362_OperandExprModel>* _18672_nc);
inline jule::Bool _1c56ce905_tryNeutralElement(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _23034_m);
inline void _1c56cebad_checkBinaryForBoundary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _24539_m);
inline void _1c56cee66_checkBinaryForNil(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _29734_m);
inline void _1c56d021e_binary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _32922_m);
inline void _1c56d04c7_unary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aac36_UnaryExprModel> _41421_m);
inline void _1c56d0780_structureLit(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ab60a_StructLitExprModel> _45728_m);
inline void _1c56d0a38_casting(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48abe8a_CastingExprModel> _47323_m);
inline void _1c56d0d9b_args(_1c56ccd76_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args);
inline void _1c56d1154_scope(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c490ac86_Scope>* _50922_s);
inline void _1c56d140c_funcCall(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ac83c_FnCallExprModel> _51524_m);
inline void _1c56d16b5_indexing(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ad1bc_IndexingExprModel> _52224_m);
inline void _1c56d196d_anonFunc(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _54624_m);
inline void _1c56d1b6b_do(_1c56ccd76_exprOptimizer* _self_);
inline void _1c56d3a4c_pushVar(jule::Ptr<_1c56d35a7_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1c4a1020e_TypeKind> _3242_kind);
inline jule::Bool _1c56d3d8d_removeVar(_1c56d35a7_dynamic* _self_, jule::Uintptr _5525_var);
inline jule::Bool _1c56d4289_isFits(_1c56d35a7_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1c4a1020e_TypeKind> _6936_kind);
inline _1c56d5c3b_dataCheckpoint _1c56d65dd_getCheckpoint(_1c56d6236_data* _self_);
inline void _1c56d6896_loadCheckpoint(_1c56d6236_data* _self_, _1c56d5c3b_dataCheckpoint* _3535_c);
inline void _1c56d815b_pushVar(_1c56d7bb6_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1c56d8898_fitsMaxSize(_1c56d7bb6_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1c57e9d3e_Optimizer> static__1c57ea2e5_New(jule::Ptr<_1c56b4830_IR>* _2621_ir);
inline void _1c57ea59d_optimizeGlobal(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c49715b0_Var>* _3235_v);
inline void _1c57ea856_optimizeFunction(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c48b8738_Fn>* _3837_func);
inline void _1c57eab0e_optimizeStruct(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c48a3679_Struct>* _4835_s);
inline void _1c57eadb7_optimizeGlobals(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _6436_p);
inline void _1c57eb170_optimizeFunctions(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _7238_p);
inline void _1c57eb428_optimizeStructs(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _8036_p);
inline void _1c57eb6d1_optimizePackage(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _8836_p);
inline void _1c57eb8ce_Optimize(_1c57e9d3e_Optimizer* _self_);
inline void static__1c57ec0e9_Reset(void);
inline void static__1c5820172_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1c5822b7a_LogFlat(_205a977d7_Log* _1421_l);
inline void static__1c5822dab_LogError(_205a977d7_Log* _1922_l);
inline void static__1c58230dc_Log(_205a977d7_Log* _6417_l);
inline void static__1c582331d_PrintLogs(jule::Slice<_205a977d7_Log>* _7423_logs);
inline _1a97d07ad_Time static__1a97d0b98_Unix(jule::U64 _9117_sec);
inline _1a97d07ad_Time static__1a97d0da7_Now(void);
inline _1a97d00d7_AbsTime _1a97d2590_Abs(_1a97d07ad_Time* _self_);
inline jule::Ptr<_1a9706daa_scopeCoder> static__1a9707581_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _7321_oc);
inline void _1aca1cbc3_iterHead(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin);
inline void _1a9707c57_rangeIndexIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _12936_it);
inline void _1a9708010_rangeHashmapIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _19638_it);
inline void _1a97082b8_strRuneIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde4137_StrRuneIter> _24332_it);
inline void _1a9708571_ifCase(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490b1a4_If> _35127_i);
inline void _1a9708829_conditional(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490b8be_Conditional> _36032_c);
inline void _1a9708ad2_infIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490bbbb_InfIter> _38028_it);
inline void _1a9708d8a_whileIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490c172_WhileIter> _39730_it);
inline void _1a9709143_rangeIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter> _43630_it);
inline void _1a97093eb_cont(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ce53_ContSt> _44921_c);
inline void _1a97096a4_label(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490d629_Label> _45422_l);
inline void _1a970995c_gotoSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490da03_GotoSt> _45923_gt);
inline void _1a9709c15_postfix(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ddcc_Postfix> _46428_p);
inline void _1a9709ebd_assignLeft(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Any* _47132_model);
inline void _1a970a276_divByZeroAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e383_Assign> _49036_a);
inline void _1a970a74e_operatorOverloadingAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _49647_s, jule::Ptr<_1c48aa362_OperandExprModel>* _49673_l, jule::Ptr<_1c48aa362_OperandExprModel>* _4978_r, jule::U64 _49736_op);
inline void _1a970aa07_assign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e383_Assign> _51127_a);
inline void _1a970acb0_mapLookupAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _53237_a);
inline void _1a970b068_multiAssignTup(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _55536_a);
inline void _1a970b321_multiAssignFn(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _60435_a);
inline void _1a970b5c9_multiAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign> _66332_a);
inline jule::Fn<void> _1a970b91a_matchExpr(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _68930_m);
inline void _1a970bc7d_case(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _69925_m, jule::Ptr<_1c49109c2_Case> _69940_c);
inline void _1a970c036_matchSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _76928_m);
inline void _1a970c2de_fallSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c49111ba_FallSt> _82423_f);
inline void _1a970c597_breakSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490d32c_BreakSt> _82924_b);
inline void _1a970c850_setResult(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c4911561_RetSt> _83830_r);
inline void _1a970cb08_retSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c4911561_RetSt> _86626_r);
inline void _1a970cdb1_var(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c49715b0_Var> _90224_v);
inline void _1a970d169_mutSlicing(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde2d28_MutSlicingExprModel> _90831_m);
inline void _1a970d422_swap(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde1ac4_SwapExprModel> _92525_m);
inline void _1a970d6ca_exceptionalForwarding(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde173e_ExceptionalForwardingExprModel> _93342_m);
inline void _1a970d983_st(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Any _93923_st);
inline void _1a970dc3b_scopeStmts(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ac86_Scope>* _99532_s);
inline void _1a970dee4_scope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ac86_Scope> _100426_s);
inline void _1a970e29c_commonFuncScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _101937_f);
inline void _1a970e610_anonFuncScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _105934_m, jule::Str _105955_ident);
inline void _1a970e8b8_funcScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _109130_f);
inline jule::Ptr<_1a97136ad_exprCoder> static__1a9713aa9_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _12021_oc);
inline void _1a9713d62_string(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _12624_c);
inline void _1a971411a_boolean(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Bool _14124_b);
inline void _1a9714318_nilLit(jule::Ptr<_1a97136ad_exprCoder> _self_);
inline jule::Bool _1a9714659_ftoaSpecialCases(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::F64* _15334_x);
inline void _1a9714912_float32(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _16725_c);
inline void _1a9714bba_float64(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _18625_c);
inline void _1a9714e73_constant(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const> _20429_c);
inline void _1a9715391_operatorOverloadingUnary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _22846_s, jule::U64 _22861_op, jule::Any _22878_e);
inline void _1a97157ae_divByZeroBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c486c19d_Token>* _24033_op, jule::Ptr<_1c48aa362_OperandExprModel>* _24050_l, jule::Ptr<_1c48aa362_OperandExprModel>* _24077_r);
inline void _1a9715ea7__unsafeBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, _238b51e24_StrBuilder* _26235_buf, jule::Str* _26253_l, jule::Str* _26262_r, jule::Ptr<_1c4a1020e_TypeKind>* _2638_lk, jule::Ptr<_1c4a1020e_TypeKind>* _26328_rk, jule::U64 _26343_op, jule::Str _26356_kind);
inline void _1a9716260_unsafeBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _32133_m);
inline void _1a9716518_binary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _33327_m);
inline void _1a97167c1_var(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c49715b0_Var> _34524_m);
inline void _1a9716a79_structureIns(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns> _36133_m);
inline void _1a9716d32_unary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aac36_UnaryExprModel> _36526_m);
inline void _1a97170da_structureLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ab60a_StructLitExprModel> _39633_m);
inline void _1a9717393_allocStructure(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ab907_AllocStructLitExprModel> _43635_m);
inline void _1a971764b_possibleRefExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _44432_expr);
inline void _1a9717a69_castTraitFromTrait(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48abe8a_CastingExprModel>* _45840_m, jule::Ptr<_1c48cc1b9_Trait> _45866_t1, jule::Ptr<_1c48cc1b9_Trait> _45882_t2);
inline void _1a9717d22_casting(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48abe8a_CastingExprModel> _47128_m);
inline void _1a9718383_args(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _59926_m);
inline void _1a971863b_modelForCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _63033_expr);
inline void _1a97188e4_pushCallInf(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _64529_m);
inline jule::Bool _1a9718c35_isWrapped(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _66831_m);
inline jule::Bool _1a9719076_writeReceiver(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _69234_m);
inline void _1a971932e_pureFuncCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _70534_m);
inline void _1a97195d7_coFuncCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _79532_m);
inline void _1a971994a_writeUseExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _84634_f, jule::Ptr<_1c49ce024_Data> _84649_d);
inline void _1a9719c03_funcCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel> _86729_m);
inline void _1a9719eab_slice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48acc16_SliceExprModel> _94026_m);
inline void _1a971a264_indexing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ad1bc_IndexingExprModel> _96929_m);
inline void _1a971a51c_unsafeIndexing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde34aa_UnsafeIndexingExprModel> _104235_m);
inline void _1a971a7c5_anonFunc(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _105929_m);
inline void _1a971aa7d_mapExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ae003_MapExprModel> _109028_m);
inline void _1a971ad36_slicing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ae586_SlicingExprModel> _111128_m);
inline void _1a971b0de_traitSub(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aeb19_TraitSubIdentExprModel> _112729_m);
inline void _1a971b397_structureSub(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _114333_m);
inline void _1a971b650_array(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b0c2a_ArrayExprModel> _115226_m);
inline void _1a971b908_funcInsCommon(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _120234_m);
inline void _1a971bbb1_funcIns(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _120928_m);
inline void _1a971be69_tuple(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1027_TupleExprModel> _122026_m);
inline void _1a971c222_newCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1ba4_BuiltinNewCallExprModel> _123128_m);
inline void _1a971c4ca_outCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1401_BuiltinOutCallExprModel> _124328_m);
inline void _1a971c783_outlnCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b17ca_BuiltinOutlnCallExprModel> _125230_m);
inline void _1a971ca3b_panicCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b207d_BuiltinPanicCallExprModel> _126130_m);
inline void _1a971cce4_assertCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b2534_BuiltinAssertCallExprModel> _126931_m);
inline void _1a971d09c_errorCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> _128230_m);
inline void _1a971d355_copyCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b3c61_BuiltinCopyCallExprModel> _131429_m);
inline void _1a971d60d_lenCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> _132228_m);
inline void _1a971d8b6_capCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b34ad_BuiltinCapCallExprModel> _132728_m);
inline void _1a971db6e_deleteCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b3887_BuiltinDeleteCallExprModel> _133231_m);
inline void _1a971de27_makeCallSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel>* _134335_m);
inline void _1a971e1d0_makeCallStr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel>* _136733_m);
inline void _1a971e488_makeCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel> _137829_m);
inline void _1a971e741_pushToSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde3884_PushToSliceExprModel> _138632_m);
inline void _1a971e9e9_appendToSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde3c5d_AppendToSliceExprModel> _144634_m);
inline void _1a971eca2_appendCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b2db4_BuiltinAppendCallExprModel> _145431_m);
inline void _1a972005a_sizeof(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b47de_SizeofExprModel> _146227_m);
inline void _1a9720313_alignof(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b49cb_AlignofExprModel> _146828_m);
inline void _1a97205bb_runeLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b4c73_RuneExprModel> _147424_m);
inline void _1a9720874_structureStatic(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b0851_StructStaticIdentExprModel> _148836_m);
inline void _1a9720b2c_integratedToStr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5070_IntegratedToStrExprModel> _149236_m);
inline void _1a9720dd5_backendEmit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5449_BackendEmitExprModel> _149832_m);
inline void _1a972118d_free(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5746_FreeExprModel> _151425_m);
inline void _1a9721446_strComp(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde2795_StrCompExprModel> _152328_m);
inline void _1a97216ee_emptyCompare(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde1e9d_EmptyCompareExprModel> _153933_m);
inline void _1a97219a7_unsafeDeref(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde4434_UnsafeDerefExprModel> _154832_m);
inline void _1a9721c60_unsafeCasting(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde4731_UnsafeCastingExprModel> _155934_m);
inline void _1a9722018_model(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _157626_m);
inline jule::Bool _1a9722359_handleFieldByDefault(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a5857_FieldIns>* _168042_f);
inline void _1a9722612_initStructLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _170135_s);
inline void _1a97228ba_fillCollectionByDefault(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _172345_elem);
inline void _1a9722b73_initCollection(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _173836_elem);
inline void _1a9722e2b_initArray(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1e608_Arr>* _175231_arr);
inline void _1a97231d4_initExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _176629_t);
inline jule::Ptr<_1a97260a5_TestCoder> static__1a972655b_New(jule::Ptr<_1a97db0e3_ObjectCoder>* _2921_oc);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1a97267e2_findTestingPackage(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void _1a9726a9a_appendTest(jule::Ptr<_1a97260a5_TestCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _4431_f);
inline void _1a9726d53_appendPackageTests(jule::Ptr<_1a97260a5_TestCoder> _self_, jule::Ptr<_1c4930c45_Package>* _5940_p);
inline jule::Bool _1a97270d9_readyTestingPackage(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void _1a97272d7_callTmReset(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void _1a97274d5_callTmFailed(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void _1a97276d3_callTmSkipped(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void _1a97278d1_Serialize(jule::Ptr<_1a97260a5_TestCoder> _self_);
inline void static__1a9729570_writeIdentTo(_238b51e24_StrBuilder* _3530_buf, jule::Str* _3548_ident);
inline void static__1a9729916_toOut(_238b51e24_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr);
inline void static__1a9729d67_toLocal(_238b51e24_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident);
inline void static__1a972a153_func(_238b51e24_StrBuilder* _8622_buf, jule::Ptr<_1c48b8738_Fn>* _8640_f);
inline void static__1a972a43e_funcIns(_238b51e24_StrBuilder* _10225_buf, jule::Ptr<_1c48bb719_FnIns>* _10243_f);
inline void static__1a972a72a_traitDecl(_238b51e24_StrBuilder* _11727_buf, jule::Ptr<_1c48cc1b9_Trait> _11744_t);
inline void static__1a972aa16_param(_238b51e24_StrBuilder* _12123_buf, jule::Ptr<_1c48b6c64_Param>* _12141_p);
inline void static__1a972ad02_structure(_238b51e24_StrBuilder* _13627_buf, jule::Ptr<_1c48a3679_Struct>* _13645_s);
inline void static__1a972b0dd_structureIns(_238b51e24_StrBuilder* _14730_buf, jule::Ptr<_1c48a6407_StructIns>* _14748_s);
inline void static__1a972b3c9_field(_238b51e24_StrBuilder* _15523_buf, jule::Ptr<_1c48a0753_Field>* _15541_f);
inline void static__1a972b6b5_var(_238b51e24_StrBuilder* _16521_buf, jule::Ptr<_1c49715b0_Var> _16542_v);
inline void static__1a972b9a1_iterBegin(_238b51e24_StrBuilder* _18727_buf, jule::Uintptr _18744_it);
inline void static__1a972bc8c_iterEnd(_238b51e24_StrBuilder* _19225_buf, jule::Uintptr _19242_it);
inline void static__1a972c078_iterNext(_238b51e24_StrBuilder* _19726_buf, jule::Uintptr _19743_it);
inline void static__1a972c364_label(_238b51e24_StrBuilder* _20223_buf, jule::Uintptr _20240_u);
inline void static__1a972c650_matchEnd(_238b51e24_StrBuilder* _20726_buf, jule::Uintptr _20743_m);
inline void static__1a972c93b_caseBegin(_238b51e24_StrBuilder* _21227_buf, jule::Uintptr _21244_c);
inline jule::Ptr<_1a97db0e3_ObjectCoder> static__1a97db522_New(jule::Ptr<_1c56b4830_IR>* _11721_ir, _1a97d9344_SerializationInfo _11730_info);
inline void _1a97db7ca_write(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Str _12822_s);
inline void _1a97dba83_writeBytes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b);
inline void _1a97dbc81_addIndent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97dbe7e_doneIndent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97dc17c_indent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline jule::I64 _1a97dc4bd_findAnyType(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _15133_t);
inline jule::I64 _1a97dc80e_pushDealloc(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _16032_t);
inline jule::Str _1a97dcb50_pushAnonFn(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _17632_m);
inline jule::I64 _1a97dce91_pushAnyType(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _21632_t);
inline void _1a97dd249_pushResultIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _32235_f);
inline void _1a97dd502_pushResult(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _34332_f);
inline void _1a97dd865_pushAndWriteMaskMapper(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait> _35643_t1, jule::Ptr<_1c48cc1b9_Trait> _35659_t2);
inline void _1a97ddb1d_locInfo(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c486c19d_Token>* _40725_t);
inline void _1a97ddd1b_head(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97de019_links(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97de2c2_prepareStructure(_1a97db0e3_ObjectCoder* _self_, jule::Ptr<_1c48a3679_Struct>* _48837_s);
inline void _1a97de4c0_prepareStructures(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97de778_structurePlainDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _51940_s);
inline void _1a97de976_structurePlainDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97dec2e_fieldDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a5857_FieldIns>* _53531_f);
inline void _1a97deed7_structureDestructor(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _54241_s);
inline void _1a97e0405_structureOperatorEq(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Str _55836_ident, jule::Ptr<_1c48a6407_StructIns>* _55853_s, jule::Bool _55868_decl);
inline void _1a97e0768_structureOperators(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _62640_s, jule::Bool _62655_decl);
inline void _1a97e0a21_structureInsDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _63538_s);
inline void _1a97e0cc9_structureDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _66535_s);
inline void _1a97e0ec7_structureDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e11c5_structureMethodDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e169d_funcHead(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _69930_buf, jule::Ptr<_1c48bb719_FnIns>* _69952_f, jule::Bool _69963_ptr, jule::Str _69974_ident);
inline void _1a97e1a11_funcDeclIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _71833_f, jule::Bool _71844_ptr);
inline void _1a97e1d74_funcDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _72530_f, jule::Bool _72538_ptr);
inline void _1a97e212c_funcDeclTrait(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _73135_f);
inline void _1a97e232a_funcDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e25d3_traitDataTypeMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _75342_t);
inline void _1a97e27d1_traitDataTypes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e2b44_paramIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _78930_buf, jule::Ptr<_1c48ba691_ParamIns>* _78952_p);
inline void _1a97e2ea7_paramsIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _79531_buf, jule::Ptr<_1c48bb719_FnIns>* _79553_f);
inline void _1a97e331a_varInitExpr(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c49715b0_Var>* _81633_v, jule::Fn<void> _81642_init);
inline void _1a97e35c3_var(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c49715b0_Var> _83424_v);
inline void _1a97e3936_anonFuncInsDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _86537_m, jule::Str _86558_ident);
inline void _1a97e3c99_anonFuncIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _87133_m, jule::Str _87154_ident);
inline void _1a97e410c_funcIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _88129_f, jule::Str _88140_ident);
inline void _1a97e43b5_func(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _89126_f);
inline void _1a97e4728_funcTrait(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _89727_s, jule::Ptr<_1c48bb719_FnIns>* _89747_f);
inline __jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool _1a97e4a69_findTraitMetMap(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _91237_m);
inline void _1a97e4dcc_traitWrapper(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _92434_t, jule::Ptr<_1c48b8738_Fn>* _92450_m);
inline void _1a97e50ca_traitWrappers(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e543d_traitDataMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _99038_t, jule::Ptr<_1c48a6407_StructIns> _99049_s);
inline void _1a97e585b_traitData(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _100731_t, jule::I64 _100742_i, jule::Ptr<_1c48a6407_StructIns>* _100755_s);
inline void _1a97e5a59_traitDatas(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e5c57_globalDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e5e55_decls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e620d_structureMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _107038_s);
inline void _1a97e64b6_structureOstream(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _107738_s);
inline void _1a97e676e_structureIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _112834_s);
inline void _1a97e6a27_structure(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _113631_s);
inline void _1a97e6c25_structures(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e6e23_funcs(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e71cb_pushInit(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4930c45_Package>* _116830_pkg);
inline void _1a97e73c9_anonHashes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e75c7_initGlobals(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e77c5_initCaller(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e79c3_end(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e7d36_insertBuf(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _123731_buf, jule::I64 _123748_pos);
inline void _1a97e8034_serializeHead(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline void _1a97e8232_Serialize(jule::Ptr<_1a97db0e3_ObjectCoder> _self_);
inline jule::Str _1a97ea564_Str(_1a97ea168_customType* _self_);
inline jule::Bool _1a97ea8a5_Equal(jule::Ptr<_1a97ea168_customType> _self_, jule::Ptr<_1c4a1020e_TypeKind> _4418_k);
inline jule::Ptr<_1a97eaca1_typeCoder> static__1a97eb301_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _6921_oc);
inline void _1a97eb664_toType(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _7627_buf, jule::Str _7648_id);
inline void _1a97eb9c7_prim(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _9025_buf, jule::Ptr<_1c4a17cd8_Prim> _9042_p);
inline void _1a97ebd3a_tuple(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _9526_buf, jule::Ptr<_1c4a1cdcb_Tuple> _9547_t);
inline void _1a97ec19d_asSptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem);
inline void _1a97ec511_sptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _11425_buf, jule::Ptr<_1c4a1b814_Sptr> _11446_sptr);
inline void _1a97ec874_ptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _12124_buf, jule::Ptr<_1c4a200cb_Ptr> _12145_p);
inline void _1a97ecbd7_enumDecl(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _13229_buf, jule::Ptr<_1c48ce8c5_Enum> _13250_e);
inline void _1a97ed04a_typeEnumDecl(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _13733_buf, jule::Ptr<_1c48d10d0_TypeEnum> _13754_e);
inline void _1a97ed3ad_asSlice(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _14128_buf, jule::Ptr<_1c4a1020e_TypeKind> _14149_elem);
inline void _1a97ed721_slice(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _14826_buf, jule::Ptr<_1c4a1c2d7_Slc> _14847_s);
inline void _1a97eda84_mapType(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _15328_buf, jule::Ptr<_1c4a1d97b_Map> _15349_m);
inline void _1a97ee25a_structureIns(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _16733_buf, jule::Ptr<_1c48a6407_StructIns> _16754_s);
inline void _1a97ee5bd_array(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _19126_buf, jule::Ptr<_1c4a1e608_Arr> _19147_a);
inline void _1a97eec94_paramIns(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _21429_buf, jule::Ptr<_1c48ba691_ParamIns>* _21451_p);
inline void _1a980046a_funcInsResult(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _24634_s, jule::Ptr<_1c48bb719_FnIns>* _24654_f);
inline void _1a98007cd_anonFunc(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _26429_buf, jule::Ptr<_1c48bb719_FnIns> _26450_f);
inline void _1a9800b41_func(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _28525_buf, jule::Ptr<_1c48bb719_FnIns> _28546_f);
inline void _1a9800ea4_kind(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _29225_buf, jule::Ptr<_1c4a1020e_TypeKind> _29246_k);
inline jule::Ptr<_1a980388b_resultCoder> static__1a9803d97_new(jule::Ptr<_1a97eaca1_typeCoder>* _35921_tc);
inline void _1a980420a_ptr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _36324_s, jule::Ptr<_1c4a200cb_Ptr> _36343_p);
inline void _1a980456d_sptr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _36825_s, jule::Ptr<_1c4a1b814_Sptr> _36844_p);
inline void _1a98048d1_mapType(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _37328_s, jule::Ptr<_1c4a1d97b_Map> _37347_p);
inline void _1a9804c44_slice(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _37926_s, jule::Ptr<_1c4a1c2d7_Slc> _37945_slc);
inline void _1a98050a7_arr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _38424_s, jule::Ptr<_1c4a1e608_Arr> _38443_arr);
inline void _1a980541a_func(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _39025_s, jule::Ptr<_1c48bb719_FnIns> _39044_f);
inline void _1a980577d_tup(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _40324_s, jule::Ptr<_1c4a1cdcb_Tuple> _40343_tup);
inline void _1a9805ae1_codeMut(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _41028_s, jule::Ptr<_1c4a1020e_TypeKind>* _41048_t);
inline void _1a9805e54_codeMut1(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _44529_s, jule::Ptr<_1c4a1020e_TypeKind>* _44549_t);
inline jule::Slice<jule::U8> _1a9806262_code(_1a980388b_resultCoder* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _45425_t);
inline jule::Str _1ad018641_Name(_1ad018223_Flag* _self_);
inline jule::Str _1ad018795_What(_1ad018223_Flag* _self_);
inline void _1ad0188e9_Reset(_1ad018223_Flag* _self_);
inline jule::I32 _1ad018a4d_Short(_1ad018223_Flag* _self_);
inline jule::Str _1ad01b952_Name(_1ad01bcc6_Flag* _self_);
inline jule::Str _1ad01c0b2_What(_1ad01bcc6_Flag* _self_);
inline void _1ad01c205_Reset(_1ad01bcc6_Flag* _self_);
inline jule::I32 _1ad01c348_Short(_1ad01bcc6_Flag* _self_);
inline jule::Str _1ad0200b5_Name(_1ad020439_Flag* _self_);
inline jule::Str _1ad020725_What(_1ad020439_Flag* _self_);
inline void _1ad020868_Reset(_1ad020439_Flag* _self_);
inline jule::I32 _1ad0209ab_Short(_1ad020439_Flag* _self_);
inline jule::Str _1ad02376c_Name(_1ad023ae1_Flag* _self_);
inline jule::Str _1ad023dcc_What(_1ad023ae1_Flag* _self_);
inline void _1ad024020_Reset(_1ad023ae1_Flag* _self_);
inline jule::I32 _1ad024163_Short(_1ad023ae1_Flag* _self_);
inline jule::Str _1ad026dd0_Name(_1ad027254_Flag* _self_);
inline jule::Str _1ad027540_What(_1ad027254_Flag* _self_);
inline void _1ad027683_Reset(_1ad027254_Flag* _self_);
inline jule::I32 _1ad0277c6_Short(_1ad027254_Flag* _self_);
inline jule::Ptr<_1c520226e_FlagSet> static__1c520258d_New(void);
inline jule::Trait _1c5202a44_FindFlag(_1c520226e_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1c5310b52_FindFlagShort(_1c520226e_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1c53111c4_Parse(_1c520226e_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1ad027254_Flag> _1ad097648_addFlagCommon(_1c520226e_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1ad023ae1_Flag> _1ad09e94c_addFlagCommon(_1c520226e_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1ad094e3c_AddVar(_1c520226e_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1ad09c285_AddVar(_1c520226e_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1ad03ed3d_parseInteger(_1c5ccb9c4_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1ad047719_parseInteger(_1c5ccb9c4_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser);
inline jule::Str _1c5ccc277_getData(_1c5ccb9c4_argParser* _self_);
inline jule::VoidExceptional _1c5ccc530_processFlag(_1c5ccb9c4_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1c5ccc7d8_singleDash(_1c5ccb9c4_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1c5ccca91_doubleDash(_1c5ccb9c4_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1c5cccc8e_tryArg(_1c5ccb9c4_argParser* _self_);
inline jule::VoidExceptional _1c5ccce8c_parse(_1c5ccb9c4_argParser* _self_);
inline jule::Ptr<_205b5494e_Cmd> static__205b54d7d_New(jule::Str _2616_path);
inline jule::VoidExceptional _205b5507b_Spawn(_205b5494e_Cmd* _self_);
inline jule::Exceptional<jule::I64> _205b55510_Wait(_205b5494e_Cmd* _self_);
inline jule::VoidExceptional _205b5904c_spawn(_205b5494e_Cmd* _self_);
inline jule::Exceptional<jule::I64> _205b594d1_wait(_205b5494e_Cmd* _self_);
inline __jule_tuple_x_1c56b4830_IR__jule_tuple_s_205a977d7_Log static__1c56b4d08_Build(jule::Str _2918_path, jule::I64 _2929_flags);
inline void _1c56b52e2_appendStructs(_1c56b4830_IR* _self_, jule::Ptr<_1c4930c45_Package>* _6630_p, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _6654_buffer);
inline jule::Slice<jule::Ptr<_1c48a3679_Struct>> _1c56b5578_GetAllStructures(_1c56b4830_IR* _self_);
inline void _1c56b58db_appendGlobals(_1c56b4830_IR* _self_, jule::Ptr<_1c4930c45_Package>* _8930_p, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _8954_buffer);
inline jule::Slice<jule::Ptr<_1c49715b0_Var>> _1c56b5b72_GetAllGlobals(_1c56b4830_IR* _self_);
inline void _1c56b5d70_Order(_1c56b4830_IR* _self_);
inline jule::Bool _1a98c0936_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n);
inline jule::Bool _1aa85c020_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n);
inline jule::I32 _239612670_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _239612939_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _239612c7a_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _239613011_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _239613385_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _2396135d8_UTF16FromStr(jule::Str _1417_s);
inline jule::Str _2396138e6_UTF16ToStr(jule::Slice<jule::U16> _3415_s);
inline jule::Str _239613bb0_U16PtrToStr(jule::U16* _5023_s);
inline jule::I64 _239405b28_GetLastErrno(void);
inline jule::Uintptr _23963c39d_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _23963c667_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I64 _23963c9db_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I64 _23963ce1a_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode);
inline jule::U32 _23963d129_GetLastError(void);
inline jule::U32 _23963d49d_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _23963da31_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _23963dcea_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _23963e0b4_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _23963e59d_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname);
inline jule::Bool _23963e922_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode);
inline jule::Bool _23964002c_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode);
inline jule::Bool _23964057c_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved);
inline jule::Bool _239640a66_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed);
inline jule::Uintptr _2396410e9_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I64 _23964146d_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I64 _239641737_FindClose(jule::Uintptr _15414_h);
inline jule::I64 _239643816_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n);
inline jule::I64 _239643be0_Close(jule::I64 _2510_handle);
inline jule::I64 _239644097_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n);
inline void _2396442c8_Exit(jule::I64 _339_code);
inline __jule_tuple_i32__jule_tuple_int _21d8015e4_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _21d801935_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _21d801e85_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I64 _21d80224e_RuneLen(jule::I32 _35212_r);
inline jule::I64 _21d8026d3_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _21d8029d0_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _21d802d54_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I64 _21d8033d7_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _21d8036a1_RuneStart(jule::U8 _51714_b);
inline void _21d80aa1b_handleRW(jule::Slice<jule::U8>* _514_b);
inline void _21d80b148_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _238b44ce6_Str(jule::U8* _108_b, jule::I64 _1018_n);
inline jule::Slice<jule::U8> _1a98b5ec0_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap);
inline jule::Slice<jule::U8> _238b51198_StrBytes(jule::Str _4013_s);
inline jule::Str _238b5142e_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _238b516e8_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I64 _21d87dc48_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _21d87ecc1_Args(void);
inline jule::Exceptional<jule::Str> _21d880233_WorkingDir(void);
inline jule::Exceptional<jule::Str> _21d880b7e_getwd(void);
inline jule::Bool _20593b291_IsLetter(jule::I32 _7613_r);
inline jule::Bool _2059a17ce_is16(jule::Slice<_20599ea41_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _2059a1b53_is32(jule::Slice<_2059a006e_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _2059a245b_isExcludingLatin(jule::Ptr<_2059a04e2_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _2059a269d_IsUpper(jule::I32 _29512_r);
inline jule::I64 _2059e2ed5_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I64 _2059e3612_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I64 _2059e3986_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _2059e3c83_Repeat(jule::Str _1111_s, jule::I64 _1123_n);
inline jule::Bool _2059e414b_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _2059e44c0_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I64 _2059e4976_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i);
inline jule::I64 _2059e4cb7_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I64 _2059e51e6_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i);
inline jule::I64 _2059e556a_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I64 _2059e6d52_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I64 _2059e71c6_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I64 _2059e7b00_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _2059e8293_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n);
inline jule::Bool _2059e8617_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _2059e9184_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I64 _2059e9508_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _2059e99e2_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n);
inline jule::Str _2059ea76d_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _2059eaae2_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _2059eae66_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _238b54960_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _238b54c6d_isSlash(jule::U8 _5312_c);
inline jule::U8 _238b55037_toUpper(jule::U8 _5512_c);
inline jule::I64 _238b5560e_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _238b558c8_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _238b55b92_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _238b5606b_abs(jule::Str _14612_path);
inline jule::Str _238b562ad_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _2059ed9c4_Clean(jule::Str _10914_path);
inline jule::Str _2059ee09b_FromSlash(jule::Str _21214_path);
inline jule::Str _2059ee3dc_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _2059ee673_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _2059ee93c_Abs(jule::Str _2468_path);
inline jule::Str _2059eec06_Base(jule::Str _25213_path);
inline jule::Str _205a000d0_Dir(jule::Str _2838_path);
inline jule::Str _205a00322_VolumeName(jule::Str _30115_path);
inline jule::I64 _239654508_getLastFsError(void);
inline jule::Bool _21d80c38b_isConsoleHandle(jule::Uintptr _11620_handle);
inline void _205b59855_appendEscapeArg(_238b51e24_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _205b59b1e_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _205b59ee8_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I64 _205b5aee9_processErrorFromCode(jule::I64 _1125_code);
inline jule::I64 _205b5b219_getLastProcessError(void);
inline void _205b5ba33_Exit(jule::I64 _129_code);
inline jule::Str _205b5bc42_Executable(void);
inline jule::Bool _205a8a1c0_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _205a8a49a_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _205a8a764_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _205a97c49_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _205a98057_argToStr(jule::Any _32713_arg);
inline jule::I64 _205a98321_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _205a986d9_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _205a99542_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _205a9a961_IsWindows(jule::Str _3714_os);
inline jule::Bool _205a9ac6e_IsDarwin(jule::Str _4013_os);
inline jule::Bool _205a9b038_IsLinux(jule::Str _4312_os);
inline jule::Bool _205a9b379_IsI386(jule::Str _4611_arch);
inline jule::Bool _205a9b610_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _205a9b8c9_IsArm64(jule::Str _5212_arch);
inline jule::Bool _205a9bb93_IsUnix(jule::Str _5511_os);
inline jule::Bool _205a9c06c_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _205a9c2ae_Is64Bit(jule::Str _6112_arch);
inline void _205b5cec9_init(void);
inline jule::I64 _1dc4c9023_LeadingZeros64(jule::U64 _6119_x);
inline jule::I64 _1dc4c9e69_TrailingZeros(jule::U64 _8318_x);
inline jule::I64 _1dc4ca84e_TrailingZeros32(jule::U32 _10520_x);
inline jule::I64 _1dc4cab18_TrailingZeros64(jule::U64 _11420_x);
inline jule::I64 _1dc4d15e1_Len32(jule::U32 _35214_x);
inline jule::I64 _1dc4d18aa_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1dc4d2647_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1dc4d3e51_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1dc3d5c32_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1dc3d6040_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1dc3d6309_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1dc3d664a_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1dc3d8bad_Frexp(jule::F64 _4714_f);
inline jule::F64 _1dc4db08a_NaN(void);
inline jule::Bool _1dc4db398_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1dc4db662_Inf(jule::I64 _618_sign);
inline jule::Bool _1dc4dba2a_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1dc4dbce4_normalize(jule::F64 _8214_x);
inline jule::F64 _1dc4dd7b8_Log(jule::F64 _1118_x);
inline jule::F64 _1dc4de19d_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1dc4e5c76_Modf(jule::F64 _449_f);
inline jule::F64 _1dc4e657e_Log2(jule::F64 _449_x);
inline jule::Str _1dc520025_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize);
inline jule::Slice<jule::U8> _1dc52060d_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize);
inline jule::Slice<jule::U8> _1dc520d17_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1dc51dd15_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1dc5214dd_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1dc51e992_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt);
inline void _1dc52190b_roundShortest(_1dc5326ec_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1dc51dd15_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1dc521ea0_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1dc51e992_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1dc522489_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1dc51e992_decimalSlice _45637_d, jule::I64 _45654_prec);
inline jule::Slice<jule::U8> _1dc522b3d_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1dc51dd15_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1dc5232c0_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1dc51dd15_floatInfo* _51232_flt);
inline jule::I64 _1dc523644_min(jule::I64 _5968_a, jule::I64 _59616_b);
inline jule::I64 _1dc5239b8_max(jule::I64 _6038_a, jule::I64 _60316_b);
inline jule::U8 _1dc524656_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError _1dc524ac9_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1dc525008_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1dc5254ae_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1dc52616e_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1dc5265e2_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg);
inline jule::I64 _1dc5283c4_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc5286d2_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc52899b_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1dc52a4e7_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1dc52a926_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError _1dc52aeba_atofHex(_1dc51dd15_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b394_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b5d6_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b95a_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1dc52bcce_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize);
inline void _1dc52c65e_ryuFtoaFixed32(_1dc51e992_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec);
inline void _1dc52cb04_ryuFtoaFixed64(_1dc51e992_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec);
inline void _1dc52d440_formatDecimal(_1dc51e992_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec);
inline void _1dc52d918_ryuFtoaShortest(_1dc51e992_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dc51dd15_floatInfo* _26168_flt);
inline jule::I64 _1dc52db9e_mulByLog2Log10(jule::I64 _37719_x);
inline jule::I64 _1dc52de68_mulByLog10Log2(jule::I64 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc52e397_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dc51dd15_floatInfo* _3963_flt);
inline void _1dc52e9e6_ryuDigits(_1dc51e992_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1dc530167_ryuDigits32(_1dc51e992_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc530596_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc5309c5_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q);
inline jule::Bool _1dc530d49_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1dc531113_divmod1e9(jule::U64 _60214_x);
inline void _1dc53404a_trim(_1dc5326ec_decimal* _27414_a);
inline void _1dc534336_rightShift(_1dc5326ec_decimal* _28420_a, jule::U64 _28432_k);
inline jule::Bool _1dc5347dc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s);
inline void _1dc534a95_leftShift(_1dc5326ec_decimal* _35219_a, jule::U64 _35231_k);
inline jule::Bool _1dc534e19_shouldRoundUp(_1dc5326ec_decimal* _39919_a, jule::I64 _39931_nd);
inline jule::Str _1dc53669b_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base);
inline jule::Str _1dc536a64_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base);
inline jule::Str _1dc536d2d_Itoa(jule::I64 _819_i);
inline jule::Str _1dc53716e_small(jule::I64 _8610_i);
inline jule::Bool _1dc537405_isPowerOfTwo(jule::I64 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1dc537999_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1dc538e95_RealKindOf(jule::Str _4515_kind);
inline jule::I64 _1dc53925e_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1dc5395a0_IntFromBits(jule::I64 _8716_bits);
inline jule::Str _1dc539836_UintFromBits(jule::I64 _10517_bits);
inline jule::Str _1dc539b00_FloatFromBits(jule::I64 _12318_bits);
inline jule::Bool _1dc53a705_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit);
inline jule::I64 _1dc53a9be_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I64 _1dc53ac88_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I64 _1dc53b052_BitsizeOfUint(jule::U64 _19718_x);
inline void _1dc53b1ea_UpdateTarget(void);
inline void _1dc53b371_init(void);
inline jule::I64 _1dc53eece_MinI(jule::Str _6113_k);
inline jule::I64 _1dc5402dc_MaxI(jule::Str _7913_k);
inline jule::U64 _1dc5405a6_MaxU(jule::Str _9713_k);
inline jule::F64 _1dc5408e7_Min(jule::Str _11512_k);
inline jule::F64 _1dc540b7d_Max(jule::Str _13312_k);
inline jule::Bool _1dc541134_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1dc541442_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1dc54170b_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1dc541a4c_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1dc541cd3_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1dc54209c_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1dc542366_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1dc542740_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1dc542a3c_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1dc543ba3_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1dc543eb1_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1dc54427a_IsInt(jule::Str _4610_k);
inline jule::Bool _1dc5445bb_IsFloat(jule::Str _5112_k);
inline jule::Bool _1dc544852_IsNum(jule::Str _5610_k);
inline jule::Bool _1dc544b1b_IsSigNum(jule::Str _6113_k);
inline void _1dc54e395_lshiftUnsig(_1dc54537a_Const* _59021_c, _1dc54537a_Const* _59032_x);
inline void _1dc54e6c5_rshiftUnsig(_1dc54537a_Const* _59621_c, _1dc54537a_Const* _59632_x);
inline jule::Bool _1c486c8da_IsUnaryOp(jule::U64 _33414_id);
inline jule::Bool _1c486cbe8_IsBinOp(jule::U64 _34412_id);
inline jule::Bool _1c486d303_IsStr(jule::Str _36410_k);
inline jule::Bool _1c486d589_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1c486d853_IsRune(jule::Str _37111_k);
inline jule::Bool _1c486e238_IsFloat(jule::Str _38012_k);
inline jule::Bool _1c486e502_IsNum(jule::Str _38810_k);
inline jule::Bool _1c486ea85_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1c486ed4e_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1c48703d2_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1c48708cc_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1c4870d50_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1c4871119_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1c48713d3_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1c487169c_IsHex(jule::U8 _45810_b);
inline jule::Bool _1c4871966_IsAssign(jule::U64 _47313_id);
inline jule::Bool _1c4871c30_IsPostfixOp(jule::U64 _48516_id);
inline jule::Bool _1c4871ee9_IsAssignOp(jule::U64 _49515_id);
inline jule::Ptr<_1c4872934_File> _1c4873d0e_NewFileSet(jule::Str _5715_path);
inline _205a977d7_Log _1c4875838_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c4872934_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1c4875c01_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1c4876075_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i);
inline jule::Str _1c487643d_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i);
inline jule::Str _1c48767b2_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i);
inline jule::Str _1c4876b36_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i);
inline jule::Str _1c4876eaa_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i);
inline jule::Str _1c487743e_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i);
inline jule::Str _1c4877681_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1c487794a_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1c4877cbe_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i);
inline jule::Bool _1c4878143_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i);
inline jule::Bool _1c48784b7_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i);
inline jule::Bool _1c487883b_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i);
inline jule::Bool _1c4878bb0_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i);
inline jule::Str _1c48791aa_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1c4879386_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1c48796d8_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n);
inline jule::Str _1c48799a2_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1c4879c6b_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1c487a035_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1c487a2ee_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_205a977d7_Log> _1c48802e3_Lex(jule::Ptr<_1c4872934_File> _80612_f, jule::I64 _80622_mode);
inline jule::Bool _1c49493ac_FindModuleFile(jule::Slice<jule::Ptr<_239654b57_DirEntry>>* _1320_dirents);
inline jule::Str _1c4949665_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_205a977d7_Log> _1c494992e_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1c494a27b_IsPub(jule::Str _910_ident);
inline jule::Bool _1c4993071_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1c49ad19b_ToRune(jule::Str _2015_lit);
inline jule::Str _1c49ad3aa_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1c49ad6eb_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1c49ad982_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1c49add06_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i);
inline void _1c49ae19c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i);
inline jule::I64 _21ddcab8a_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i);
inline jule::Slice<jule::U8> _21ddcaeba_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _21ddcb2a6_FmtByDefault(_238b51e24_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _21ddcb6c4_applyFmtByDefault(_238b51e24_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _21ddcbae2_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _238b51e24_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _21ddcbe66_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _21ddce034_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1c48b8738_Fn> _1dc55071a_runtimeFindFn(jule::Ptr<_1c492cd1e_ImportInfo>* _923_runtime, jule::Str _945_ident);
inline jule::Bool _1c48bd9e6_parameterUsesGenerics(jule::Ptr<_1c48ba691_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1c4a173d1_TypeSymbol> _1c48c1224_buildType(jule::Ptr<_1c4882779_TypeDecl> _9418_t);
inline jule::Ptr<_1c49d019b_Value> _1c48c1532_buildExpr(jule::Ptr<_1c4886aad_Expr> _10318_expr);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c48c17eb_buildTypeAlias(jule::Ptr<_1c4899296_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1c48a0753_Field> _1c48c1b3c_buildField(jule::Ptr<_1c489cb4b_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1c48a0753_Field>> _1c48c1dc3_buildFields(jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1c48a3679_Struct> _1c48c218c_buildStruct(jule::Ptr<_1c489d542_StructDecl> _14220_decl);
inline jule::Ptr<_1c48b6c64_Param> _1c48c2456_buildParam(jule::Ptr<_1c4892ed7_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1c48b6c64_Param>> _1c48c2830_buildParams(jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1c48b6549_RetType> _1c48c2a72_buildRetType(jule::Ptr<_1c488566c_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1c48b8738_Fn> _1c48c2d3b_buildFunc(jule::Ptr<_1c4894439_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1c48b8738_Fn>> _1c48c3105_buildMethods(jule::Slice<jule::Ptr<_1c4894439_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>> _1c48c33be_buildTraitInherits(jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1c48cc1b9_Trait> _1c48c3688_buildTrait(jule::Ptr<_1c489dc7e_TraitDecl> _21719_decl);
inline jule::Ptr<_1c48cdd58_EnumItem> _1c48c3952_buildEnumItem(jule::Ptr<_1c489ad36_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _1c48c3c1b_buildEnumItems(jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1c48ce8c5_Enum> _1c48c4216_buildEnum(jule::Ptr<_1c489b8e7_EnumDecl> _24318_decl);
inline jule::Ptr<_1c48d0a08_TypeEnumItem> _1c48c43e2_buildTypeEnumItem(jule::Ptr<_1c489c222_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _1c48c4689_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c48c4953_buildTypeEnum(jule::Ptr<_1c489c882_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1c49715b0_Var> _1c48c4c1c_buildVar(jule::Ptr<_1c48955e4_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1c49715b0_Var>> _1c48c4ed6_buildVars(jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _29518_decls);
inline jule::Ptr<_1c4905830_Impl> _1c48c52a0_buildImpl(jule::Ptr<_1c489e3de_Impl> _30318_decl);
inline jule::Bool _1c48cb6b3_isImplicitImport(jule::Ptr<_1c492cd1e_ImportInfo> _80421_imp);
inline jule::Ptr<_1c49ce024_Data> _1c4900d14_buildAsComptimeMethodData(jule::Ptr<_1c48bb719_FnIns>* _142135_f);
inline jule::Ptr<_1c492cd1e_ImportInfo> _1c4901122_findComptimePackage(jule::Ptr<_1c494d290_sema>* _142929_s);
inline jule::Ptr<_1c49ce024_Data> _1c4901496_buildComptimeTypeInfoData(jule::Ptr<_1c494d290_sema>* _143535_s, jule::Ptr<_1c4a1020e_TypeKind>* _143550_t);
inline jule::Ptr<_1c49ce024_Data> _1c49017d7_buildComptimeValue(jule::Ptr<_1c49ce024_Data>* _144328_d);
inline jule::Str _1c49047c9_toStrConstraints(jule::Ptr<_1c4a0d828_InsGeneric> _14321_g);
inline jule::Bool _1c4904b92_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1c4a1020e_TypeKind>* _15434_g);
inline jule::Bool _1c4904e5b_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1c4913244_scopeChecker> _1c4907a63_newScopeCheckerBase(jule::Ptr<_1c494d290_sema>* _5829_s, jule::Ptr<_1c48bb719_FnIns> _5843_owner);
inline jule::Ptr<_1c4913244_scopeChecker> _1c4907e2b_newScopeChecker(jule::Ptr<_1c494d290_sema>* _6625_s, jule::Ptr<_1c48bb719_FnIns> _6639_owner);
inline jule::Ptr<_1c4911bc1_scopeLabel> _1c49082a0_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c4913244_scopeChecker> _7637_scope);
inline jule::Bool _1c4908668_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c490ac86_Scope>* _9034_sc);
inline jule::Bool _1c49089dc_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c490ac86_Scope>* _10434_sc);
inline jule::I64 _1c4908d61_countMatchType(jule::Ptr<_1c490ee99_Match>* _14720_m, jule::Ptr<_1c4a1020e_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1c49ce024_Data>> _1c490912a_getDatasFromTupleData(jule::Ptr<_1c49ce024_Data>* _17131_d);
inline jule::Bool _1c4909966_checkMut(jule::Ptr<_1c494d290_sema>* _20618_s, jule::Ptr<_1c49ce024_Data>* _20629_left, jule::Ptr<_1c49ce024_Data> _20646_right, jule::Ptr<_1c486c19d_Token> _20660_op);
inline jule::Bool _1c4909e50_checkAssign(jule::Ptr<_1c494d290_sema>* _22521_s, jule::Ptr<_1c49ce024_Data>* _22536_left, jule::Ptr<_1c49ce024_Data> _22553_right, jule::Ptr<_1c486c19d_Token> _22567_op);
inline jule::Bool _1c490a219_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1c490a4d3_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1c490a79c_stmtIsDef(jule::Any* _27615_st);
inline jule::U64 _1c4925652_removeEqFromOp(jule::U64 _222519_op);
inline void _1c4925883_makeComptimeRange(jule::Ptr<_1c49ce024_Data>* _225427_d);
inline jule::Bool _1c4925d7d_canComptimeMatch(jule::Ptr<_1c49ce024_Data>* _227526_d);
inline jule::Ptr<_1c49715b0_Var> _1c492a305_findVarInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c492a778_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1c48a3679_Struct> _1c492aba7_findStructInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1c48b8738_Fn> _1c492b15d_findFnInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1c48cc1b9_Trait> _1c492b49e_findTraitInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1c48ce8c5_Enum> _1c492b823_findEnumInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1c48d10d0_TypeEnum> _1c492bb97_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1c492c1d6_defByIdentPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1c4933220_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1c494a853_isValidModelForRef(jule::Any* _1328_m);
inline _205a977d7_Log _1c494ad09_compilerErr(jule::Ptr<_1c486c19d_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1c494b17d_impIsLookupable(jule::Ptr<_1c492cd1e_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1c494b4ad_appendRetVars(jule::Slice<jule::Ptr<_1c49715b0_Var>>* _6823_dest, jule::Ptr<_1c48bb719_FnIns>* _6842_f);
inline void _1c494b799_appendParamVars(jule::Slice<jule::Ptr<_1c49715b0_Var>>* _9825_dest, jule::Ptr<_1c48bb719_FnIns>* _9844_f);
inline void _1c494ba85_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _15834_dest, jule::Ptr<_1c48bb719_FnIns>* _15859_f);
inline jule::Ptr<_1c49c8bab_SymbolTable> _1c494be09_findFile(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _19618_files, jule::Ptr<_1c4872934_File>* _19642_handler);
inline void _1c494c3b0_pushSuggestion(_205a977d7_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1c496ec95_pushImplemented(jule::Ptr<_1c48cc1b9_Trait> _294524_t, jule::Ptr<_1c48a3679_Struct>* _294540_d);
inline void _1c4970081_pushImplements(jule::Ptr<_1c48a3679_Struct>* _296324_s, jule::Ptr<_1c48cc1b9_Trait> _296340_t);
inline jule::Bool _1c49ae950_traitHasReferenceReceiver(jule::Ptr<_1c48cc1b9_Trait>* _2831_t);
inline jule::Bool _1c49aecd5_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1c49ce024_Data>* _4333_d);
inline jule::Bool _1c49b0159_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1c49ce024_Data>* _4830_d);
inline jule::Bool _1c49b0522_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1c49ce024_Data>* _7132_d);
inline jule::Bool _1c49b0896_intAssignable(jule::Str _10018_kind, jule::Ptr<_1c49ce024_Data>* _10030_d);
inline void _1c49c1b1b_checkMutRiskOfStructLit(jule::Ptr<_1c494d290_sema>* _92033_s, jule::Ptr<_1c48ab60a_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c49c7957_lenKind(void);
inline jule::Bool _1c49c7ca9_isGoodValueToInfer(jule::Ptr<_1c49ce024_Data>* _142124_d);
inline jule::Ptr<_1c4881b96_Directive> _1c4a076ac_findDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _424523_directives, jule::Str _424554_d);
inline jule::Any _1c4a07a75_findBuiltinsImport(jule::Str* _425424_ident, jule::Ptr<_1c492cd1e_ImportInfo> _425436_imp);
inline void _1c4a07ca6_fitBitsize(jule::Ptr<_1c49ce024_Data>* _426320_d);
inline void _1c4a080d6_makeStructLitAlloc(jule::Ptr<_1c49ce024_Data>* _429228_d, jule::Ptr<_1c48ab60a_StructLitExprModel>* _429243_lit);
inline jule::Ptr<_1c49715b0_Var> _1c4a0845a_buildErrorVar(jule::Ptr<_1c490ac86_Scope>* _430323_s, jule::Ptr<_1c488a7d7_FnCallExpr>* _430339_fc);
inline jule::Any _1c4a087ce_findBuiltinsSema(jule::Str* _431822_ident, jule::Ptr<_1c494d290_sema> _431838_s);
inline jule::Bool _1c4a08a98_isOkForShifting(jule::Ptr<_1c49ce024_Data>* _434325_d);
inline jule::Bool _1c4a08e72_isInstancedStruct(jule::Ptr<_1c48a6407_StructIns> _436022_s);
inline jule::Bool _1c4a0926e_isPtrArithmeticCompatible(jule::Ptr<_1c49ce024_Data>* _436435_l, jule::Ptr<_1c49ce024_Data>* _436450_r);
inline void _1c4a09615_applyCastKindModel(jule::Ptr<_1c49ce024_Data>* _438528_d, jule::Ptr<_1c4a1020e_TypeKind>* _438543_t, jule::Ptr<_1c486c19d_Token>* _438562_token);
inline void _1c4a099ab_applyCastKind(jule::Ptr<_1c49ce024_Data>* _439423_d, jule::Ptr<_1c4a1020e_TypeKind>* _439438_t, jule::Ptr<_1c486c19d_Token>* _439457_token);
inline jule::Ptr<_1c49ce024_Data> _1c4a09bba_buildVoidData(void);
inline jule::Str _1c4a0a03e_checkDataForIntegerIndexing(jule::Ptr<_1c49ce024_Data>* _440537_d, jule::Ptr<_1c486c19d_Token>* _440552_token);
inline void _1c4a0a3d5_applyCastModelByEnum(jule::Ptr<_1c49ce024_Data>* _443030_d, jule::Ptr<_1c48ce8c5_Enum> _443044_e, jule::Ptr<_1c486c19d_Token>* _443059_token);
inline void _1c4a0a6c1_castConstByType(jule::Str* _444121_t, jule::Ptr<_1c49ce024_Data>* _444134_d);
inline void _1c4a0abdd_updateModelToGenericIns(jule::Any* _447533_m, jule::Ptr<_1c48bb719_FnIns>* _447552_f);
inline jule::Bool _1c4a0ae52_pushSubIdentFromExpr(jule::Any _448629_expr, jule::Ptr<_1c488314d_SubIdentTypeDecl>* _448650_t);
inline jule::Str _1c4a0b21b_constoa(jule::Ptr<_1dc54537a_Const>* _450913_c);
inline jule::Ptr<_1c49ce024_Data> _1c4a0b64a_evalEnumStatic(jule::Ptr<_1c48ce8c5_Enum>* _452024_enm, jule::Ptr<_1c48cdd58_EnumItem>* _452041_item, jule::Ptr<_1c486c19d_Token>* _452063_token);
inline jule::Ptr<_1c48ab60a_StructLitExprModel> _1c4a0b914_isLitBased(jule::Any* _453720_m);
inline void _1c4a0bc00_makeImplicitDeref(jule::Ptr<_1c49ce024_Data>* _455427_d, jule::Ptr<_1c486c19d_Token> _455441_baseToken);
inline void _1abc8a9d0_updateRefer(jule::Ptr<_1c48be8a4_ReferenceStack> _456523_ref, jule::Ptr<_1c48bb719_FnIns>* _456546_old, jule::Ptr<_1c48bb719_FnIns>* _456559_new);
inline void _1c4a0c382_makeVariadic(jule::Ptr<_1c49ce024_Data>* _457322_d, jule::Ptr<_1c4a1020e_TypeKind> _457336_elem);
inline jule::Bool _1c4a0c7b1_isVarCaptured(jule::Ptr<_1c4913244_scopeChecker> _458718_r, jule::Ptr<_1c4913244_scopeChecker> _458740_s, jule::Ptr<_1c49715b0_Var> _458758_v);
inline jule::Bool _1c4a2a966_kindUsesGenerics(jule::Ptr<_1c4a1020e_TypeKind>* _172226_k, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _172241_generics);
inline jule::Bool _1c4a2ad2e_hasDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _173222_directives, jule::Str _173253_tag);
inline jule::Bool _1c4a2b0e8_canGetPtr(jule::Ptr<_1c49ce024_Data>* _174119_d);
inline jule::Bool _1c4a2b439_isValidForSptrType(jule::Ptr<_1c4a1020e_TypeKind>* _175328_t);
inline jule::Bool _1c4a2b6c0_isValidForRef(jule::Ptr<_1c4a1020e_TypeKind>* _176223_t);
inline jule::Bool _1c4a2b989_isBuiltinStrConvertable(jule::Ptr<_1c4a1020e_TypeKind>* _176533_t);
inline jule::Str _1c4a2bc53_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _176927_tokens);
inline jule::Ptr<_1c4a17cd8_Prim> _1c4a2c12c_buildPrimType(jule::Str _178818_kind);
inline void _1c4a2c715_applyImplicitCast(jule::Ptr<_1c4a1020e_TypeKind>* _181627_dest, jule::Ptr<_1c49ce024_Data>* _181649_d, jule::Ptr<_1c486c19d_Token>* _181664_token);
inline jule::Bool _1c4a2c9ce_validTypeForXof(jule::Ptr<_1c4a1020e_TypeKind>* _184425_t);
inline __jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log _1c4a30ae2_buildSymbols(jule::Ptr<_1c48807bb_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1c48c5866_symbolBuilder> _1662_owner);
inline void _1c4a30e22_collectImplicitImports(jule::Ptr<_1c494d290_sema>* _3132_s, jule::Ptr<_1c49c8bab_SymbolTable>* _3147_file);
inline __jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log _1c4a31351_analyzePackage(jule::Slice<jule::Ptr<_1c48807bb_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags);
inline __jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log _1c4a31807_AnalyzePackage(jule::Slice<jule::Ptr<_1c48807bb_AST>> _9423_files, jule::Trait _9442_importer, jule::I64 _9462_flags);
inline jule::Ptr<_1c48bb719_FnIns> _21ddcea3a_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _21ddced48_primTypeAlias(jule::Ptr<_1c4a1020e_TypeKind>* _6623_k);
inline jule::Ptr<_1c49715b0_Var> _21ddd36ed_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1c4a0e41c_TypeAlias> _21ddd3a3e_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _21ddd3cc5_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _21ddd408e_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _21ddd4358_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _21ddd4732_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _21ddd4974_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _21ddd4ce8_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1c49ce024_Data> _21ddd516c_builtinCallerError(jule::Ptr<_1c49d0c4b_eval>* _30028_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1c49ce024_Data> _21ddd559b_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _32226_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _32241_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21ddd59ca_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _34628_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _34643_fc, jule::Ptr<_1c49ce024_Data>* _34665_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd5e09_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _35826_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _35841_fc, jule::Ptr<_1c49ce024_Data>* _35863_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd6338_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _42028_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _42043_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21ddd6998_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44642_fc, jule::Ptr<_1c49ce024_Data>* _44664_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd6cb7_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _49729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _49744_fc, jule::Ptr<_1c49ce024_Data>* _49766_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd72a1_callerCopySlice(jule::Ptr<_1c49ce024_Data>* _60625_dest, jule::Ptr<_1c49d0c4b_eval>* _60643_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _60658_fc, jule::Ptr<_1c49ce024_Data>* _60680_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd76d0_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _64027_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _64042_fc, jule::Ptr<_1c49ce024_Data>* _64064_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd7a54_callerLenSlice(jule::Ptr<_1c49ce024_Data>* _66524_expr, jule::Ptr<_1c49ce024_Data>* _66542_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd7dc8_callerLenMap(jule::Ptr<_1c49ce024_Data>* _67322_expr, jule::Ptr<_1c49ce024_Data>* _67340_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd824c_callerLenArr(jule::Ptr<_1c49ce024_Data>* _68122_expr, jule::Ptr<_1c49ce024_Data>* _68140_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd85c1_callerLenStr(jule::Ptr<_1c49ce024_Data>* _68822_expr, jule::Ptr<_1c49ce024_Data>* _68840_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd8945_callerLenComptime(jule::Ptr<_1c49ce024_Data>* _70127_d, jule::I64 _70137_n);
inline jule::Ptr<_1c49ce024_Data> _21ddd8d74_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _70826_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _70841_fc, jule::Ptr<_1c49ce024_Data>* _70863_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd91e8_callerCapSlice(jule::Ptr<_1c49ce024_Data>* _74624_expr, jule::Ptr<_1c49ce024_Data>* _74642_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd9627_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _75426_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _75441_fc, jule::Ptr<_1c49ce024_Data>* _75463_d);
inline jule::Ptr<_1c49ce024_Data> _21ddd9b11_callerDeleteMap(jule::Ptr<_1c49d0c4b_eval>* _77725_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _77740_fc, jule::Ptr<_1c49ce024_Data>* _77762_expr, jule::Ptr<_1c49ce024_Data>* _77780_d);
inline jule::Ptr<_1c49ce024_Data> _21ddda040_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _80629_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _80644_fc, jule::Ptr<_1c49ce024_Data>* _80666_d);
inline jule::Ptr<_1c49ce024_Data> _21ddda46e_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _82929_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _82944_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21ddda89d_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _87340_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _87355_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddb01e_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _90941_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _90956_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddb44d_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _92938_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _92953_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddb87c_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _94138_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _94153_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddbcab_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _95439_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _95454_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddc1da_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _96743_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _96758_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddc619_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _102735_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _102750_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddca48_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _105236_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _105251_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddce77_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _107733_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _107748_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddd3a6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _110045_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _110060_fc, jule::Ptr<_1c49ce024_Data>* );
inline jule::Ptr<_1c49ce024_Data> _21dddd7d5_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _112744_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _112759_fc, jule::Ptr<_1c49ce024_Data>* _112781_d);
inline jule::Ptr<_1c49ce024_Data> _21ddddc14_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _117834_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _117849_fc, jule::Ptr<_1c49ce024_Data>* _117871_d);
inline jule::Ptr<_1c49ce024_Data> _21ddde143_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _118736_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _118751_fc, jule::Ptr<_1c49ce024_Data>* _118773_d);
inline jule::Ptr<_1c5635e77_FileInfo> _1c5679927_ParseFile(jule::Ptr<_1c4872934_File> _2318_f);
inline __jule_tuple_x_1c48807bb_AST__jule_tuple_s_205a977d7_Log _1c5679ebb_parseFileset(jule::Ptr<_1c4872934_File> _5521_f);
inline jule::Ptr<_1c489279a_ScopeTree> _1c567a98e_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1c567ace1_isSt(jule::Ptr<_1c486c19d_Token> _499_current, jule::Ptr<_1c486c19d_Token> _4926_prev);
inline jule::Bool _1c567b165_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _5526_tokens, jule::I64* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1c567b52d_nextStPos(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _6815_tokens, jule::I64 _6833_start);
inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_bool _1c567b8a2_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c486c19d_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _1c567c089_splitStmts(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _15120_tokens);
inline jule::Bool _1c56956e0_isTypeOp(jule::U64* _89314_id);
inline jule::Bool _1c56959ed_isTypeRange(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c5695cb7_getBlockExpr(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _93322_tokens);
inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token _1c5696180_splitDelim(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _96520_tokens, jule::U64 _96538_delim);
inline jule::I64 _1c5696449_findLowestPrecOp(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _100422_tokens);
inline jule::Ptr<_1c48883c8_IdentExpr> _1c5696713_buildIdentExpr(jule::Ptr<_1c486c19d_Token>* _106924_token);
inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_int _1c56969cc_getRangeExprTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _107728_tokens);
inline jule::Bool _1c5696da6_isAnonFnHead(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _110018_tokens);
inline jule::Bool _1c5697aaa_checkAssignTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _1623_tokens);
inline _205a977d7_Log _1c5698c76_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c4872934_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c56992a4_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _6959_tokens);
inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token _1c569956d_rangeLast(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log _1c5699a24_parts(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust);
inline jule::U64 _1c5699caa_getCloseOfBrace(jule::U64 _16720_left);
inline _205a977d7_Log _1c569a1d9_compilerErr(jule::Ptr<_1c486c19d_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1c569a580_pushSuggestion(_205a977d7_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1c4882779_TypeDecl> _1c56ac493_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1c3ac9a6b_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1c4c826c3_checkArch(jule::Str _2814_arg);
inline jule::Bool _1c4c8297b_isPassFileAnnotation(jule::Str _5029_p);
inline void _1c4c83c13_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1c4c83e88_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1c4c84274_initVars(jule::Slice<jule::Str>* _5518_vars, _1c4c838e4_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1c56b1563_readBuff(jule::Str _3013_path);
inline _205a977d7_Log _1c56b1871_flatCompilerErr(jule::Str _4120_text);
inline jule::Ptr<_1c48b8738_Fn> _1c4754ae1_RuntimeFindFn(jule::Ptr<_1c492cd1e_ImportInfo>* _1123_runtime, jule::Str _1145_ident);
inline void _1c56b61d3_pushPasses(jule::Ptr<_1c4930c45_Package>* _12120_p, jule::Slice<jule::Str>* _12144_passes);
inline jule::Slice<jule::Str> _1c56b659b_getAllUniquePasses(jule::Ptr<_1c4930c45_Package>* _13828_pkg, jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _13853_uses);
inline _1c4c838e4_CompileInfo _1c56b67aa_buildCompileInfo(void);
inline void _1c56b6a63_pushRuntimeToAST(jule::Ptr<_1c48807bb_AST>* _17726_f);
inline void _1c56b725b_IterPackages(jule::Ptr<_1c56b4830_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1c4930c45_Package>*> _731_f);
inline void _1c56b758b_IterFiles(jule::Ptr<_1c4930c45_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1c49c8bab_SymbolTable>*> _1634_f);
inline void _1c56b7932_iterTraitInheritMethods(jule::Ptr<_1c48cc1b9_Trait>* _2233_base, jule::Ptr<_1c48cc1b9_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _2263_f);
inline void _1c56b7d50_iterTraitInheritMethods1(jule::Ptr<_1c48cc1b9_Trait>* _3134_base, jule::Ptr<_1c48cc1b9_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _3164_f);
inline void _1c56b8108_IterTraitMethods(jule::Ptr<_1c48cc1b9_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _3937_f);
inline jule::Bool _1c56c0495_IsForwarded(jule::Ptr<_1c490ac86_Scope>* _2417_s);
inline jule::Bool _1c56c07a3_IsExprComesFromBind(jule::Ptr<_1c49ce024_Data>* _4025_d);
inline jule::Bool _1c56c0a6c_IsAny(jule::Ptr<_1c4a1020e_TypeKind>* _5215_t);
inline jule::Bool _1c56c0dad_IsClosure(jule::Ptr<_1c48ad673_AnonFnExprModel>* _6115_m);
inline jule::Bool _1c56c1144_IsOpMethod(jule::Ptr<_1c48b8738_Fn>* _6416_m);
inline jule::Bool _1c56c14b8_IsTraitMethod(jule::Ptr<_1c48a6407_StructIns>* _8023_owner, jule::Ptr<_1c48bb719_FnIns>* _8043_f);
inline jule::Bool _1c56c183c_IsStdPackage(jule::Str* _9318_f, jule::Str _9326_p);
inline jule::Bool _1c56c1c16_IsImplicitImport(jule::Ptr<_1c492cd1e_ImportInfo> _10121_imp);
inline jule::Ptr<_1c4881b96_Directive> _1c56c283d_FindDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1c56c2c06_HasDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::Bool _1c56c307a_ContainsTraitMethod(jule::Ptr<_1c48cc1b9_Trait>* _2629_t, jule::Str* _2641_ident);
inline jule::I64 _1c56c3740_FindTraitTypeOffsetS(jule::Ptr<_1c48cc1b9_Trait> _3925_t, jule::Ptr<_1c48a6407_StructIns> _3940_s);
inline jule::I64 _1c56c3ab4_FindTraitTypeOffset(jule::Ptr<_1c48cc1b9_Trait> _6224_t, jule::Ptr<_1c4a1020e_TypeKind> _6239_k);
inline jule::Ptr<_1c48bb719_FnIns> _1c56c3ee3_FindOperator(jule::Ptr<_1c48a6407_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary);
inline jule::Ptr<_1c48bb719_FnIns> _1c56c4367_FindGenericInstance(jule::Ptr<_1c48b8738_Fn>* _14729_f, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _14737_generics);
inline jule::Bool _1ac776e8d_isOrdered(jule::Ptr<_1c49715b0_Var>* _1418_t, jule::Slice<jule::Ptr<_1c49715b0_Var>> _1425_s);
inline jule::Bool _1ac77db21_isOrdered(jule::Ptr<_1c48a3679_Struct>* _1418_t, jule::Slice<jule::Ptr<_1c48a3679_Struct>> _1425_s);
inline void _1ac774661_order(jule::Slice<jule::Ptr<_1c49715b0_Var>> _3717_s);
inline void _1ac77b39e_order(jule::Slice<jule::Ptr<_1c48a3679_Struct>> _3717_s);
inline void _1c57e383d_EliminateDefines(jule::Ptr<_1c56b4830_IR>* _32626_ir);
inline void _1c57e77a9_eliminateDeadCodeOfScope(jule::Ptr<_1c490ac86_Scope> _23833_s);
inline void _1c57e7a2e_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _25033_funcs);
inline void _1c57e7c60_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _25937_structs);
inline void _1c57e8018_eliminateFunctionsScopePackage(jule::Ptr<_1c4930c45_Package>* _26740_pkg);
inline void _1c57e8216_eliminateScopePackage(jule::Ptr<_1c4930c45_Package>* _27431_pkg);
inline void _1c57e8447_EliminateScopes(jule::Ptr<_1c56b4830_IR>* _27925_ir);
inline jule::Uintptr _21ddde495_typeData(jule::Any* _1714_m);
inline jule::Bool _21ddde85d_equalConst(jule::Ptr<_1dc54537a_Const> _2115_l, jule::Ptr<_1dc54537a_Const> _2126_r);
inline jule::Bool _21dddebd2_equalCasting(jule::Ptr<_1c48abe8a_CastingExprModel> _4017_l, jule::Ptr<_1c48abe8a_CastingExprModel> _4039_r);
inline jule::Bool _21dde009a_equalUnary(jule::Ptr<_1c48aac36_UnaryExprModel> _4715_l, jule::Ptr<_1c48aac36_UnaryExprModel> _4735_r);
inline jule::Bool _21dde041e_equalIndexing(jule::Ptr<_1c48ad1bc_IndexingExprModel> _5418_l, jule::Ptr<_1c48ad1bc_IndexingExprModel> _5441_r);
inline jule::Bool _21dde0793_equalBinary(jule::Ptr<_1c48aa85c_BinaryExprModel> _5916_l, jule::Ptr<_1c48aa85c_BinaryExprModel> _5937_r);
inline jule::Bool _21dde0b17_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _21dde6733_possibleNilRemove(jule::Ptr<_21dde5754_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _21dde6aeb_isGuaranteedNonNilExpr(jule::Ptr<_21dde5754_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _21dde6db5_isNilValidType(jule::Ptr<_1c4a1020e_TypeKind> _9223_t);
inline jule::Uintptr _21dde7206_getNilVar(jule::Any _9414_m);
inline jule::Bool _1c56cae2e_isConstantValidConditionalCase(jule::Ptr<_1c490b1a4_If>* _68236_i);
inline jule::Bool _1c56cb23c_isUnreachableExpr(jule::Any* _69123_expr);
inline jule::Bool _1c56cb506_isConstantValidMatchCase(jule::Ptr<_1c49109c2_Case>* _70630_case);
inline jule::Bool _1c56cb847_isUnreachableConditionalCase(jule::Ptr<_1c490b1a4_If>* _71534_i);
inline jule::Bool _1c56cbacd_isUnreachableMatchCase(jule::Ptr<_1c49109c2_Case>* _71928_case);
inline __jule_tuple_bool__jule_tuple_u64 _1c56d20ab_checkForBitShiftOpt(jule::Ptr<_1c48aa362_OperandExprModel>* _58325_l, jule::Ptr<_1c48aa362_OperandExprModel>* _58348_r);
inline jule::Bool _1c56d2474_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r);
inline void _1c56d4641_possibleDynamicRemove(jule::Ptr<_1c56d35a7_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1c56d494e_isDynamicValidType(jule::Ptr<_1c4a1020e_TypeKind> _8727_t);
inline jule::Ptr<_1c4a1020e_TypeKind> _1c56d4d7d_isTypeGuaranteedDynamicData(jule::Ptr<_1c56d35a7_dynamic>* _8937_dy, jule::Ptr<_1c4a1020e_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1c56d51be_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1c56d8c2d_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I64 _1c56d90e6_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1c56d946a_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1c56d979a_possibleBoundaryRemove(jule::Ptr<_1c56d7bb6_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1c56d9a64_isBoundaryRiskyType(jule::Ptr<_1c4a1020e_TypeKind> _13628_t);
inline jule::Bool _1c56d9d2d_isBoundaryValidType(jule::Ptr<_1c4a1020e_TypeKind> _14128_t);
inline jule::Uintptr _1c56da0e7_getBoundaryVar(jule::Any _14319_m);
inline void _1c56dd172_PushOptLevel(jule::I64 _3217_level);
inline void _1c57ebb43_detectEnabled(void);
inline void _1c5823c9c_Throw(jule::Str _910_msg);
inline jule::U64 _1a97d289d_unix(void);
inline jule::Bool _1a970ec4d_isCopyOptimizable(jule::Ptr<_1c49ce024_Data>* _110423_expr);
inline jule::Bool _1a9710116_isIterCopyOptimizable(jule::Ptr<_1c49ce024_Data>* _111527_expr, jule::Ptr<_1c49715b0_Var>* _111541_v);
inline jule::Bool _1a9710545_captureVarHandling(jule::Ptr<_1a97db0e3_ObjectCoder>* _112228_oc, jule::Ptr<_1c48ad673_AnonFnExprModel>* _112251_m, jule::Ptr<_1c49715b0_Var>* _112277_v);
inline jule::Str _1a9723569_decomposeCommonEsq(jule::U8 _182623_b);
inline jule::Str _1a9723877_sbtoa(jule::U8 _185310_b);
inline void _1a9723b63_cstrBytes(_238b51e24_StrBuilder* _187319_s, jule::Str _187334_ctx);
inline void _1a9723e93_cstrLit(_238b51e24_StrBuilder* _187917_s, jule::Str _187932_ctx);
inline void _1a9724339_ftoa(_238b51e24_StrBuilder* _188514_s, jule::F64 _188529_f, jule::I64 _188537_bitsize);
inline void _1a9724625_itoa(_238b51e24_StrBuilder* _190314_s, jule::I64 _190329_x);
inline void _1a9724911_utoa(_238b51e24_StrBuilder* _192014_s, jule::U64 _192029_x);
inline void _1a9725060_operatorOverloadingBinary(_238b51e24_StrBuilder* _193435_buf, jule::Ptr<_1c48a6407_StructIns>* _193457_s, jule::Str* _193473_l, jule::Str* _19353_r, jule::U64 _193511_op, jule::Str _193524_kind);
inline jule::Slice<jule::U8> _1a97e85b7_concatAllParts(jule::Slice<jule::Ptr<_1c486c19d_Token>> _128319_parts);
inline jule::Bool _1a97e88c5_isHeadDecl(jule::Ptr<_1c48b8738_Fn>* _129920_m);
inline jule::Bool _1a97e8b8e_defaultEq(jule::Ptr<_1c48a6407_StructIns>* _131215_s);
inline jule::Bool _1a9807a8d_ableToInit(jule::Ptr<_1c4a1020e_TypeKind>* _46220_t);
inline jule::Bool _1a9807d68_shouldInitialized(jule::Ptr<_1c4a1020e_TypeKind>* _46927_t);
inline void _205b663bc_printErrorMessage(jule::Str _3022_msg);
inline void _205b66642_help(jule::Slice<jule::Str>* _3510_args);
inline void _205b66873_version(jule::Slice<jule::Str>* _6313_args);
inline void _205b66a82_toolDistos(void);
inline void _205b66be7_toolDistarch(void);
inline void _205b66de5_tool(jule::Slice<jule::Str>* _9410_args);
inline void _205b67126_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _205b67467_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _205b676a9_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _205b67852_showInfo(void);
void entry_point(void);
inline void _205b6837a_enableVtp(void);
inline void _205b68545_init(void);
inline void _1c520358e_init(void);
inline jule::Ptr<_2396560dc_File> _1c5203858_openOutput(jule::Str* _4316_path);
inline void _1c5203a01_clearObjects(void);
inline void _1c5203d0e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1c52040c8_isCppSourceFile(jule::Str _9920_path);
inline void _1c5204309_pushCompCmdClang(_238b51e24_StrBuilder* _10726_cmd);
inline void _1c520453a_pushCompCmdGcc(_238b51e24_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1c52049be_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c56b4830_IR>* _15936_ir);
inline jule::Str _1c5204b56_getCompilePath(void);
inline void _1c5204d87_applyTargetIndependentOptimizations(jule::Ptr<_1c56b4830_IR>* _20545_ir);
inline void _1c5205030_checkCompilerFlag(void);
inline void _1c520523e_checkTargetArch(jule::Str _22720_arch);
inline void _1c5205470_checkTargetOs(jule::Str _23518_os);
inline void _1c52056a1_checkTargetFlag(jule::Str* _24321_target);
inline void _1c52058d2_checkOptFlag(jule::Str* _26618_opt);
inline void _1c5205c9a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1c5205e65_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1c5206174_setupSemaFlags(jule::I64* _33724_flags);
inline jule::Ptr<_1c56b4830_IR> _1c520643d_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1c520666e_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1c48d40a0_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1c48d3797_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB);
	void(*_1c48d3bb5_step)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB);
	jule::I64(*_1c48d3e4b_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1c4929e09_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1c4928bd8_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1c4928e6e_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1c49292b0_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id);
	jule::Ptr<_1c492cd1e_ImportInfo>(*_1c4929601_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log(*_1c49299ec_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod);
	void(*_1c4929ca5_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c492cd1e_ImportInfo> _4128__0);
};

struct _1c4a0ec58_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1c4a0e7b3_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1c4a0eb04_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other);
};

struct _1c4a2ed00_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1c492cd1e_ImportInfo>(*_1c4a2d0d9_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector);
	jule::Ptr<_1c49715b0_Var>(*_1c4a2d4d5_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1c4a0e41c_TypeAlias>(*_1c4a2d8d1_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1c48a3679_Struct>(*_1c4a2dccc_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1c48b8738_Fn>(*_1c4a2e1c8_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1c48cc1b9_Trait>(*_1c4a2e519_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1c48ce8c5_Enum>(*_1c4a2e85a_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1c48d10d0_TypeEnum>(*_1c4a2eb9b_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1c520069b_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1c51eed2c_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1c52000b3_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1c5200349_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1c5200547_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d6954_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d9c10_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48dc6a2_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48e0e36_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48e24ed_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ec959_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c56b1d5a_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48a6407_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48bb719_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48cc1b9_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ce8c5_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d10d0_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d42c0_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d4c93_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48d804e_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48db30a_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ddc9c_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48e3ae8_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ea10a_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ee054_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1020e_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a17cd8_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1b814_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1c2d7_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1cdcb_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1d97b_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a1e608_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a200cb_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a97ea168_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4913244_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c492cd1e_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4930c45_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c494d290_sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c49c8bab_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad018223_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad01bcc6_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad020439_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad023ae1_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad027254_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c49715b0_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489e3de_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4899296_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489d542_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4894439_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489dc7e_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48955e4_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489b8e7_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489c882_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1dc54537a_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490d629_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490ac86_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b413a_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c49ce024_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b5449_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b2db4_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b1401_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b17ca_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b207d_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b2534_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b3c61_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b3887_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b5746_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ac83c_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490b8be_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490bbbb_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4896a68_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490c172_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4897470_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490cabd_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490ce53_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490da03_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490ddcc_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490e383_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48883c8_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ad1bc_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490e839_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490ee99_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c49111ba_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c490d32c_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4911561_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489279a_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4886aad_Expr>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4898a59_Conditional>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489623d_Iter>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4897c23_ContSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488ed5d_LabelSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4890237_GotoSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4891227_AssignSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c489a066_MatchCase>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4890534_FallSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4897849_BreakSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48959bd_RetSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4887482_UseExpr>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b8738_Fn>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48a3679_Struct>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4a0e41c_TypeAlias>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4884a45_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4883ba9_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48842a3_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4883824_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4885293_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4883ea6_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4882d84_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4889044_VariadicExpr>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48acc16_SliceExprModel>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488b2cc_FieldExprPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488c8d8_KeyValPair>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48876a2_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b1027_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488a7d7_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b4c73_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b0c2a_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4889bc1_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488314d_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4888b6a_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4882779_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48897e7_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4883527_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ae586_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48abe8a_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488d114_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ab60a_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b0851_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48aeb19_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b04aa_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ae003_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ad673_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4886d77_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4887a48_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4887e22_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488da71_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488e1d1_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488941d_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488bb07_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488c0ad_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c488a177_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48aac36_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48aa85c_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ab907_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b1ba4_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b29da_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b31b1_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b34ad_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b47de_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b49cb_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48b5070_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde173e_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde4137_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde2d28_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde3125_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde3884_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde3c5d_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde1ac4_SwapExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde1e9d_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde2795_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde4434_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde2322_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c48ab264_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde4731_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21dde34aa_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1aac92972_1ab3120ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48d75c0_ready(_self_.as<_1c48d6954_comptimeStructFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac92972_1aa8714c9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48da87b_ready(_self_.as<_1c48d9c10_comptimeStatics>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac92972_1ab318525(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48dd31d_ready(_self_.as<_1c48dc6a2_comptimeEnumFields>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac92972_1ab31d838(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48e1a6e_ready(_self_.as<_1c48e0e36_comptimeParams>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac92972_1ab326bc6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48e3169_ready(_self_.as<_1c48e24ed_comptimeTypeInfos>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac92972_1aac71bc6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c49715b0_Var>* _2426_keyA, jule::Ptr<_1c49715b0_Var>* _2443_keyB) {
	_1c48ed5c5_ready(_self_.as<_1c48ec959_comptimeFiles>().alloc, _2426_keyA, _2443_keyB);
}
inline void __jule_trait_method_1aac930b0_1ab3120ce(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48d79dd_step(_self_.as<_1c48d6954_comptimeStructFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aac930b0_1aa8714c9(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48dac99_step(_self_.as<_1c48d9c10_comptimeStatics>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aac930b0_1ab318525(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48dd73b_step(_self_.as<_1c48dc6a2_comptimeEnumFields>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aac930b0_1ab31d838(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48e1e8c_step(_self_.as<_1c48e0e36_comptimeParams>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aac930b0_1ab326bc6(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48e3587_step(_self_.as<_1c48e24ed_comptimeTypeInfos>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline void __jule_trait_method_1aac930b0_1aac71bc6(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2520_i, jule::Ptr<_1c49715b0_Var>* _2533_keyA, jule::Ptr<_1c49715b0_Var>* _2550_keyB) {
	_1c48ed9e3_step(_self_.as<_1c48ec959_comptimeFiles>().alloc, _2520_i, _2533_keyA, _2550_keyB);
}
inline jule::I64 __jule_trait_method_1aac937ec_1ab3120ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d7c74_len(_self_.as<_1c48d6954_comptimeStructFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aac937ec_1aa8714c9(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48db030_len(_self_.as<_1c48d9c10_comptimeStatics>().alloc);
}
inline jule::I64 __jule_trait_method_1aac937ec_1ab318525(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48dd9c2_len(_self_.as<_1c48dc6a2_comptimeEnumFields>().alloc);
}
inline jule::I64 __jule_trait_method_1aac937ec_1ab31d838(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48e2223_len(_self_.as<_1c48e0e36_comptimeParams>().alloc);
}
inline jule::I64 __jule_trait_method_1aac937ec_1ab326bc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48e381d_len(_self_.as<_1c48e24ed_comptimeTypeInfos>().alloc);
}
inline jule::I64 __jule_trait_method_1aac937ec_1aac71bc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48edc79_len(_self_.as<_1c48ec959_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1aac93c70_1ac70754a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1c56b2960_SetModPath(_self_.as<_1c56b1d5a_JuleImporter>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1aac94226_1ac70754a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c56b2be6_GetModPath(_self_.as<_1c56b1d5a_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1aac94688_1ac70754a(jule::Ptr<jule::Uintptr> _self_, jule::I64 _2519_id) {
	return _1c56b3037_ModById(_self_.as<_1c56b1d5a_JuleImporter>().alloc, _2519_id);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac94ba5_1ac70754a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1c56b3378_GetImport(_self_.as<_1c56b1d5a_JuleImporter>().alloc, _3125_path);
}
inline __jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_trait_method_1aac95238_1ac70754a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_update_mod) {
	return _1c56b3774_ImportPackage(_self_.as<_1c56b1d5a_JuleImporter>().alloc, _3729_path, _3740_update_mod);
}
inline void __jule_trait_method_1aac95b73_1ac70754a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c492cd1e_ImportInfo> _4128__0) {
	_1c56b3a2c_Imported(_self_.as<_1c56b1d5a_JuleImporter>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1e559a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48a67ae_Str(_self_.as<_1c48a6407_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1e4a3e(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48bba8d_Str(_self_.as<_1c48bb719_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab20c2d7(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48cc5b5_Str(_self_.as<_1c48cc1b9_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1d88ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48cec7c_Str(_self_.as<_1c48ce8c5_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1ddc7a(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d1454_Str(_self_.as<_1c48d10d0_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab325532(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d4677_Str(_self_.as<_1c48d42c0_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab314c19(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d518e_Str(_self_.as<_1c48d4c93_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab3120ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d6d0b_Str(_self_.as<_1c48d6954_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aa874158(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48d8406_Str(_self_.as<_1c48d804e_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aa8714c9(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48da0b7_Str(_self_.as<_1c48d9c10_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab31b160(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48db7c2_Str(_self_.as<_1c48db30a_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab318525(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48dca59_Str(_self_.as<_1c48dc6a2_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab32140c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48de154_Str(_self_.as<_1c48ddc9c_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab31d838(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48e12aa_Str(_self_.as<_1c48e0e36_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab326bc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48e28a5_Str(_self_.as<_1c48e24ed_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab21e0eb(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48e3ea0_Str(_self_.as<_1c48e3ae8_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aa877942(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48ea4b2_Str(_self_.as<_1c48ea10a_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aac71bc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48ecd11_Str(_self_.as<_1c48ec959_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aac6d376(jule::Ptr<jule::Uintptr> _self_) {
	return _1c48ee63c_Str(_self_.as<_1c48ee054_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1c834c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1060a_Str(_self_.as<_1c4a1020e_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1cdc9d(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1815c_Str(_self_.as<_1c4a17cd8_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1d5436(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1bbbb_Str(_self_.as<_1c4a1b814_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1e3213(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1c79e_Str(_self_.as<_1c4a1c2d7_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab257b5c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1d283_Str(_self_.as<_1c4a1cdcb_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab256144(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1dd33_Str(_self_.as<_1c4a1d97b_Map>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1e182c(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a1e9b0_Str(_self_.as<_1c4a1e608_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1ab1d6ba7(jule::Ptr<jule::Uintptr> _self_) {
	return _1c4a20483_Str(_self_.as<_1c4a200cb_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1aac961b2_1aca14d1e(jule::Ptr<jule::Uintptr> _self_) {
	return _1a97ea564_Str(_self_.as<_1a97ea168_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1e559a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48a6b00_Equal(_self_.as<_1c48a6407_StructIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1e4a3e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48bbdce_Equal(_self_.as<_1c48bb719_FnIns>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab20c2d7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48cc906_Equal(_self_.as<_1c48cc1b9_Trait>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1d88ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d00bd_Equal(_self_.as<_1c48ce8c5_Enum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1ddc7a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d1795_Equal(_self_.as<_1c48d10d0_TypeEnum>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab325532(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d49b8_Equal(_self_.as<_1c48d42c0_comptimeRange>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab314c19(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d54d0_Equal(_self_.as<_1c48d4c93_comptimeStructField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab3120ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d714c_Equal(_self_.as<_1c48d6954_comptimeStructFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aa874158(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48d8747_Equal(_self_.as<_1c48d804e_comptimeStatic>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aa8714c9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48da408_Equal(_self_.as<_1c48d9c10_comptimeStatics>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab31b160(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48dbb13_Equal(_self_.as<_1c48db30a_comptimeEnumField>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab318525(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48dcd9a_Equal(_self_.as<_1c48dc6a2_comptimeEnumFields>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab32140c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48de495_Equal(_self_.as<_1c48ddc9c_comptimeParam>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab31d838(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48e15eb_Equal(_self_.as<_1c48e0e36_comptimeParams>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab326bc6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48e2be6_Equal(_self_.as<_1c48e24ed_comptimeTypeInfos>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab21e0eb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48e42e1_Equal(_self_.as<_1c48e3ae8_comptimeTypeInfo>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aa877942(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48ea803_Equal(_self_.as<_1c48ea10a_comptimeValue>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aac71bc6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48ed152_Equal(_self_.as<_1c48ec959_comptimeFiles>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aac6d376(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c48ee97d_Equal(_self_.as<_1c48ee054_comptimeFile>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1c834c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1094b_Equal(_self_.as<_1c4a1020e_TypeKind>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1cdc9d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1849d_Equal(_self_.as<_1c4a17cd8_Prim>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1d5436(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1c00c_Equal(_self_.as<_1c4a1b814_Sptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1e3213(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1cae0_Equal(_self_.as<_1c4a1c2d7_Slc>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab257b5c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1d5c4_Equal(_self_.as<_1c4a1cdcb_Tuple>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab256144(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1e174_Equal(_self_.as<_1c4a1d97b_Map>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1e182c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a1ed01_Equal(_self_.as<_1c4a1e608_Arr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1ab1d6ba7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1c4a207c4_Equal(_self_.as<_1c4a200cb_Ptr>(), _5618_other);
}
inline jule::Bool __jule_trait_method_1aac96668_1aca14d1e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _5618_other) {
	return _1a97ea8a5_Equal(_self_.as<_1a97ea168_customType>(), _5618_other);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac96d1c_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector) {
	return _1c491371c_SelectPackage(_self_.as<_1c4913244_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac96d1c_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector) {
	return _1c492d33b_SelectPackage(_self_.as<_1c492cd1e_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac96d1c_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector) {
	return _1c493121d_SelectPackage(_self_.as<_1c4930c45_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac96d1c_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector) {
	return _1c494d768_SelectPackage(_self_.as<_1c494d290_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1c492cd1e_ImportInfo> __jule_trait_method_1aac96d1c_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _929_selector) {
	return _1c49c91c8_SelectPackage(_self_.as<_1c49c8bab_SymbolTable>().alloc, _929_selector);
}
inline jule::Ptr<_1c49715b0_Var> __jule_trait_method_1aac97aba_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c4913b18_FindVar(_self_.as<_1c4913244_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c49715b0_Var> __jule_trait_method_1aac97aba_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c492d737_FindVar(_self_.as<_1c492cd1e_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c49715b0_Var> __jule_trait_method_1aac97aba_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c4931619_FindVar(_self_.as<_1c4930c45_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c49715b0_Var> __jule_trait_method_1aac97aba_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c494db64_FindVar(_self_.as<_1c494d290_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c49715b0_Var> __jule_trait_method_1aac97aba_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1c49c95c4_FindVar(_self_.as<_1c49c8bab_SymbolTable>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1c4a0e41c_TypeAlias> __jule_trait_method_1aac981e7_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c4914014_FindTypeAlias(_self_.as<_1c4913244_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c4a0e41c_TypeAlias> __jule_trait_method_1aac981e7_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c492db33_FindTypeAlias(_self_.as<_1c492cd1e_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c4a0e41c_TypeAlias> __jule_trait_method_1aac981e7_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c4931a15_FindTypeAlias(_self_.as<_1c4930c45_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c4a0e41c_TypeAlias> __jule_trait_method_1aac981e7_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c494e060_FindTypeAlias(_self_.as<_1c494d290_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c4a0e41c_TypeAlias> __jule_trait_method_1aac981e7_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1c49c99c0_FindTypeAlias(_self_.as<_1c49c8bab_SymbolTable>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1c48a3679_Struct> __jule_trait_method_1aac98879_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c4914410_FindStruct(_self_.as<_1c4913244_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c48a3679_Struct> __jule_trait_method_1aac98879_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c492e02e_FindStruct(_self_.as<_1c492cd1e_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c48a3679_Struct> __jule_trait_method_1aac98879_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c4931e11_FindStruct(_self_.as<_1c4930c45_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c48a3679_Struct> __jule_trait_method_1aac98879_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c494e45b_FindStruct(_self_.as<_1c494d290_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c48a3679_Struct> __jule_trait_method_1aac98879_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1c49c9dbb_FindStruct(_self_.as<_1c49c8bab_SymbolTable>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1c48b8738_Fn> __jule_trait_method_1aac9900b_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c491480b_FindFn(_self_.as<_1c4913244_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c48b8738_Fn> __jule_trait_method_1aac9900b_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c492e42a_FindFn(_self_.as<_1c492cd1e_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c48b8738_Fn> __jule_trait_method_1aac9900b_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c493230c_FindFn(_self_.as<_1c4930c45_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c48b8738_Fn> __jule_trait_method_1aac9900b_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c494e857_FindFn(_self_.as<_1c494d290_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c48b8738_Fn> __jule_trait_method_1aac9900b_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1c49ca2b7_FindFn(_self_.as<_1c49c8bab_SymbolTable>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1c48cc1b9_Trait> __jule_trait_method_1aac9966b_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c4914b4c_FindTrait(_self_.as<_1c4913244_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1c48cc1b9_Trait> __jule_trait_method_1aac9966b_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c492e76b_FindTrait(_self_.as<_1c492cd1e_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1c48cc1b9_Trait> __jule_trait_method_1aac9966b_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c493264d_FindTrait(_self_.as<_1c4930c45_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1c48cc1b9_Trait> __jule_trait_method_1aac9966b_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c494eb98_FindTrait(_self_.as<_1c494d290_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1c48cc1b9_Trait> __jule_trait_method_1aac9966b_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1c49ca608_FindTrait(_self_.as<_1c49c8bab_SymbolTable>().alloc, _2925_ident);
}
inline jule::Ptr<_1c48ce8c5_Enum> __jule_trait_method_1aac99c21_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c4914e8d_FindEnum(_self_.as<_1c4913244_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1c48ce8c5_Enum> __jule_trait_method_1aac99c21_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c492eaac_FindEnum(_self_.as<_1c492cd1e_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1c48ce8c5_Enum> __jule_trait_method_1aac99c21_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c493298e_FindEnum(_self_.as<_1c4930c45_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1c48ce8c5_Enum> __jule_trait_method_1aac99c21_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c494eed9_FindEnum(_self_.as<_1c494d290_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1c48ce8c5_Enum> __jule_trait_method_1aac99c21_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1c49ca949_FindEnum(_self_.as<_1c49c8bab_SymbolTable>().alloc, _3324_ident);
}
inline jule::Ptr<_1c48d10d0_TypeEnum> __jule_trait_method_1aac9a2e8_1ab2bc908(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c49152ce_FindTypeEnum(_self_.as<_1c4913244_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1c48d10d0_TypeEnum> __jule_trait_method_1aac9a2e8_1ab1e8c1e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c492eded_FindTypeEnum(_self_.as<_1c492cd1e_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1c48d10d0_TypeEnum> __jule_trait_method_1aac9a2e8_1ab1e9cdb(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c4932cd0_FindTypeEnum(_self_.as<_1c4930c45_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1c48d10d0_TypeEnum> __jule_trait_method_1aac9a2e8_1ab1e6c0b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c495032a_FindTypeEnum(_self_.as<_1c494d290_sema>().alloc, _3728_ident);
}
inline jule::Ptr<_1c48d10d0_TypeEnum> __jule_trait_method_1aac9a2e8_1ab1e769b(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1c49cac8a_FindTypeEnum(_self_.as<_1c49c8bab_SymbolTable>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1ad029168_1ad018223(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad018641_Name(_self_.as<_1ad018223_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad029168_1ad01bcc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad01b952_Name(_self_.as<_1ad01bcc6_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad029168_1ad020439(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad0200b5_Name(_self_.as<_1ad020439_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad029168_1ad023ae1(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad02376c_Name(_self_.as<_1ad023ae1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad029168_1ad027254(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad026dd0_Name(_self_.as<_1ad027254_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad02a8b7_1ad018223(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad018a4d_Short(_self_.as<_1ad018223_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad02a8b7_1ad01bcc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad01c348_Short(_self_.as<_1ad01bcc6_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad02a8b7_1ad020439(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad0209ab_Short(_self_.as<_1ad020439_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad02a8b7_1ad023ae1(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad024163_Short(_self_.as<_1ad023ae1_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1ad02a8b7_1ad027254(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad0277c6_Short(_self_.as<_1ad027254_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad02acc4_1ad018223(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad018795_What(_self_.as<_1ad018223_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad02acc4_1ad01bcc6(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad01c0b2_What(_self_.as<_1ad01bcc6_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad02acc4_1ad020439(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad020725_What(_self_.as<_1ad020439_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad02acc4_1ad023ae1(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad023dcc_What(_self_.as<_1ad023ae1_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1ad02acc4_1ad027254(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad027540_What(_self_.as<_1ad027254_Flag>().alloc);
}
inline void __jule_trait_method_1ad02b225_1ad018223(jule::Ptr<jule::Uintptr> _self_) {
	_1ad0188e9_Reset(_self_.as<_1ad018223_Flag>().alloc);
}
inline void __jule_trait_method_1ad02b225_1ad01bcc6(jule::Ptr<jule::Uintptr> _self_) {
	_1ad01c205_Reset(_self_.as<_1ad01bcc6_Flag>().alloc);
}
inline void __jule_trait_method_1ad02b225_1ad020439(jule::Ptr<jule::Uintptr> _self_) {
	_1ad020868_Reset(_self_.as<_1ad020439_Flag>().alloc);
}
inline void __jule_trait_method_1ad02b225_1ad023ae1(jule::Ptr<jule::Uintptr> _self_) {
	_1ad024020_Reset(_self_.as<_1ad023ae1_Flag>().alloc);
}
inline void __jule_trait_method_1ad02b225_1ad027254(jule::Ptr<jule::Uintptr> _self_) {
	_1ad027683_Reset(_self_.as<_1ad027254_Flag>().alloc);
}


static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1ab3120ce,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1ab3120ce,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1ab3120ce,
};
static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1aa8714c9,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1aa8714c9,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1aa8714c9,
};
static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1ab318525,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1ab318525,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1ab318525,
};
static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1ab31d838,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1ab31d838,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1ab31d838,
};
static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1ab326bc6,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1ab326bc6,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1ab326bc6,
};
static _1c48d40a0_comptimeRangeKindMptrData _1c48d40a0_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1c48d3797_ready=__jule_trait_method_1aac92972_1aac71bc6,
	._1c48d3bb5_step=__jule_trait_method_1aac930b0_1aac71bc6,
	._1c48d3e4b_len=__jule_trait_method_1aac937ec_1aac71bc6,
};
static _1c4929e09_ImporterMptrData _1c4929e09_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1c4928bd8_SetModPath=__jule_trait_method_1aac93c70_1ac70754a,
	._1c4928e6e_GetModPath=__jule_trait_method_1aac94226_1ac70754a,
	._1c49292b0_ModById=__jule_trait_method_1aac94688_1ac70754a,
	._1c4929601_GetImport=__jule_trait_method_1aac94ba5_1ac70754a,
	._1c49299ec_ImportPackage=__jule_trait_method_1aac95238_1ac70754a,
	._1c4929ca5_Imported=__jule_trait_method_1aac95b73_1ac70754a,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1e559a,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1e559a,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1e4a3e,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1e4a3e,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab20c2d7,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab20c2d7,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1d88ce,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1d88ce,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1ddc7a,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1ddc7a,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab325532,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab325532,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab314c19,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab314c19,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab3120ce,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab3120ce,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aa874158,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aa874158,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aa8714c9,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aa8714c9,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab31b160,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab31b160,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab318525,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab318525,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab32140c,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab32140c,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab31d838,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab31d838,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab326bc6,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab326bc6,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab21e0eb,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab21e0eb,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aa877942,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aa877942,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aac71bc6,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aac71bc6,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aac6d376,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aac6d376,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1c834c,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1c834c,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1cdc9d,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1cdc9d,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1d5436,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1d5436,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1e3213,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1e3213,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab257b5c,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab257b5c,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab256144,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab256144,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1e182c,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1e182c,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1ab1d6ba7,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1ab1d6ba7,
};
static _1c4a0ec58_KindMptrData _1c4a0ec58_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1c4a0e7b3_Str=__jule_trait_method_1aac961b2_1aca14d1e,
	._1c4a0eb04_Equal=__jule_trait_method_1aac96668_1aca14d1e,
};
static _1c4a2ed00_LookupMptrData _1c4a2ed00_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1c4a2d0d9_SelectPackage=__jule_trait_method_1aac96d1c_1ab2bc908,
	._1c4a2d4d5_FindVar=__jule_trait_method_1aac97aba_1ab2bc908,
	._1c4a2d8d1_FindTypeAlias=__jule_trait_method_1aac981e7_1ab2bc908,
	._1c4a2dccc_FindStruct=__jule_trait_method_1aac98879_1ab2bc908,
	._1c4a2e1c8_FindFn=__jule_trait_method_1aac9900b_1ab2bc908,
	._1c4a2e519_FindTrait=__jule_trait_method_1aac9966b_1ab2bc908,
	._1c4a2e85a_FindEnum=__jule_trait_method_1aac99c21_1ab2bc908,
	._1c4a2eb9b_FindTypeEnum=__jule_trait_method_1aac9a2e8_1ab2bc908,
};
static _1c4a2ed00_LookupMptrData _1c4a2ed00_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1c4a2d0d9_SelectPackage=__jule_trait_method_1aac96d1c_1ab1e8c1e,
	._1c4a2d4d5_FindVar=__jule_trait_method_1aac97aba_1ab1e8c1e,
	._1c4a2d8d1_FindTypeAlias=__jule_trait_method_1aac981e7_1ab1e8c1e,
	._1c4a2dccc_FindStruct=__jule_trait_method_1aac98879_1ab1e8c1e,
	._1c4a2e1c8_FindFn=__jule_trait_method_1aac9900b_1ab1e8c1e,
	._1c4a2e519_FindTrait=__jule_trait_method_1aac9966b_1ab1e8c1e,
	._1c4a2e85a_FindEnum=__jule_trait_method_1aac99c21_1ab1e8c1e,
	._1c4a2eb9b_FindTypeEnum=__jule_trait_method_1aac9a2e8_1ab1e8c1e,
};
static _1c4a2ed00_LookupMptrData _1c4a2ed00_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1c4a2d0d9_SelectPackage=__jule_trait_method_1aac96d1c_1ab1e9cdb,
	._1c4a2d4d5_FindVar=__jule_trait_method_1aac97aba_1ab1e9cdb,
	._1c4a2d8d1_FindTypeAlias=__jule_trait_method_1aac981e7_1ab1e9cdb,
	._1c4a2dccc_FindStruct=__jule_trait_method_1aac98879_1ab1e9cdb,
	._1c4a2e1c8_FindFn=__jule_trait_method_1aac9900b_1ab1e9cdb,
	._1c4a2e519_FindTrait=__jule_trait_method_1aac9966b_1ab1e9cdb,
	._1c4a2e85a_FindEnum=__jule_trait_method_1aac99c21_1ab1e9cdb,
	._1c4a2eb9b_FindTypeEnum=__jule_trait_method_1aac9a2e8_1ab1e9cdb,
};
static _1c4a2ed00_LookupMptrData _1c4a2ed00_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1c4a2d0d9_SelectPackage=__jule_trait_method_1aac96d1c_1ab1e6c0b,
	._1c4a2d4d5_FindVar=__jule_trait_method_1aac97aba_1ab1e6c0b,
	._1c4a2d8d1_FindTypeAlias=__jule_trait_method_1aac981e7_1ab1e6c0b,
	._1c4a2dccc_FindStruct=__jule_trait_method_1aac98879_1ab1e6c0b,
	._1c4a2e1c8_FindFn=__jule_trait_method_1aac9900b_1ab1e6c0b,
	._1c4a2e519_FindTrait=__jule_trait_method_1aac9966b_1ab1e6c0b,
	._1c4a2e85a_FindEnum=__jule_trait_method_1aac99c21_1ab1e6c0b,
	._1c4a2eb9b_FindTypeEnum=__jule_trait_method_1aac9a2e8_1ab1e6c0b,
};
static _1c4a2ed00_LookupMptrData _1c4a2ed00_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1c4a2d0d9_SelectPackage=__jule_trait_method_1aac96d1c_1ab1e769b,
	._1c4a2d4d5_FindVar=__jule_trait_method_1aac97aba_1ab1e769b,
	._1c4a2d8d1_FindTypeAlias=__jule_trait_method_1aac981e7_1ab1e769b,
	._1c4a2dccc_FindStruct=__jule_trait_method_1aac98879_1ab1e769b,
	._1c4a2e1c8_FindFn=__jule_trait_method_1aac9900b_1ab1e769b,
	._1c4a2e519_FindTrait=__jule_trait_method_1aac9966b_1ab1e769b,
	._1c4a2e85a_FindEnum=__jule_trait_method_1aac99c21_1ab1e769b,
	._1c4a2eb9b_FindTypeEnum=__jule_trait_method_1aac9a2e8_1ab1e769b,
};
static _1c520069b_CommonFlagMptrData _1c520069b_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1c51eed2c_Name=__jule_trait_method_1ad029168_1ad018223,
	._1c52000b3_Short=__jule_trait_method_1ad02a8b7_1ad018223,
	._1c5200349_What=__jule_trait_method_1ad02acc4_1ad018223,
	._1c5200547_Reset=__jule_trait_method_1ad02b225_1ad018223,
};
static _1c520069b_CommonFlagMptrData _1c520069b_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1c51eed2c_Name=__jule_trait_method_1ad029168_1ad01bcc6,
	._1c52000b3_Short=__jule_trait_method_1ad02a8b7_1ad01bcc6,
	._1c5200349_What=__jule_trait_method_1ad02acc4_1ad01bcc6,
	._1c5200547_Reset=__jule_trait_method_1ad02b225_1ad01bcc6,
};
static _1c520069b_CommonFlagMptrData _1c520069b_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1c51eed2c_Name=__jule_trait_method_1ad029168_1ad020439,
	._1c52000b3_Short=__jule_trait_method_1ad02a8b7_1ad020439,
	._1c5200349_What=__jule_trait_method_1ad02acc4_1ad020439,
	._1c5200547_Reset=__jule_trait_method_1ad02b225_1ad020439,
};
static _1c520069b_CommonFlagMptrData _1c520069b_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1c51eed2c_Name=__jule_trait_method_1ad029168_1ad023ae1,
	._1c52000b3_Short=__jule_trait_method_1ad02a8b7_1ad023ae1,
	._1c5200349_What=__jule_trait_method_1ad02acc4_1ad023ae1,
	._1c5200547_Reset=__jule_trait_method_1ad02b225_1ad023ae1,
};
static _1c520069b_CommonFlagMptrData _1c520069b_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1c51eed2c_Name=__jule_trait_method_1ad029168_1ad027254,
	._1c52000b3_Short=__jule_trait_method_1ad02a8b7_1ad027254,
	._1c5200349_What=__jule_trait_method_1ad02acc4_1ad027254,
	._1c5200547_Reset=__jule_trait_method_1ad02b225_1ad027254,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1c48bb719_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1c49715b0_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1c48a6407_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1c48cc1b9_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1c489e3de_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1c4899296_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1c489d542_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1c4894439_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1c489dc7e_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1c48955e4_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1c489b8e7_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1c489c882_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1dc54537a_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1c490d629_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1c490ac86_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1c49ce024_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1c48b5449_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1c48b2db4_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1c48b1401_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1c48b17ca_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1c48b207d_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1c48b2534_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1c48b3c61_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1c48b3887_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1c48b5746_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1c48ac83c_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1c490b8be_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1c490bbbb_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1c4896a68_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1c490c172_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1c4897470_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1c490cabd_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1c490ce53_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1c490da03_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1c490ddcc_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1c490e383_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1c48883c8_IdentExpr> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1c48ad1bc_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1c490e839_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1c490ee99_Match> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1c49111ba_FallSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1c490d32c_BreakSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1c4911561_RetSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1c489279a_ScopeTree> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1c4886aad_Expr> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1c4898a59_Conditional> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1c489623d_Iter> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1c4897c23_ContSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1c488ed5d_LabelSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1c4890237_GotoSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1c4891227_AssignSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1c489a066_MatchCase> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1c4890534_FallSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1c4897849_BreakSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1c48959bd_RetSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1c4887482_UseExpr> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1c48b8738_Fn> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1c48a3679_Struct> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1c4a0e41c_TypeAlias> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1c48ce8c5_Enum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1c48d10d0_TypeEnum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1c4884a45_ArrTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1c4883ba9_SlcTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1c48842a3_PtrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1c4883824_SptrTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1c4885293_MapTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1c4883ea6_TupleTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1c4882d84_IdentTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1c4889044_VariadicExpr> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1c48acc16_SliceExprModel> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1c488b2cc_FieldExprPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1c488c8d8_KeyValPair> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1c48876a2_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1c48b1027_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1c488a7d7_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1c48b4c73_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1c4a1020e_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1c48b0c2a_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1c4889bc1_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1c488314d_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1c4888b6a_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1c4882779_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1c48897e7_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1c4883527_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1c48ae586_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1c48abe8a_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1c488d114_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1c48ab60a_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1c48b0851_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1c48aeb19_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1c48b04aa_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1c48ae003_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1c48ad673_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1c4886d77_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1c4887a48_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1c4887e22_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1c488da71_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1c488e1d1_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1c488941d_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1c488bb07_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1c488c0ad_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1c488a177_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1c48aac36_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1c48aa85c_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1c48ab907_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1c48b1ba4_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1c48b34ad_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1c48b47de_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1c48b49cb_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1c48b5070_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_21dde173e_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_21dde4137_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_21dde2d28_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_21dde3125_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_21dde3884_PushToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_21dde3c5d_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_21dde1ac4_SwapExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_21dde1e9d_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_21dde2795_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_21dde4434_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_21dde2322_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1c48ab264_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_21dde4731_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_21dde34aa_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator43, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type134 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1aadab162(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48ba691_ParamIns> _24021_p1, jule::Ptr<_1c48ba691_ParamIns> _24036_p2);
struct __jule_anon_1aadeda01_ctx{
	jule::Ptr<_1c492cd1e_ImportInfo> *_49828_pkg;
};
static void __jule_anon_1aadeda01_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aadeda01_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aadeda01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _49935_spkg);
struct __jule_anon_1aae4c863_ctx{
	jule::Ptr<_1c48d4c93_comptimeStructField> _self_;
};
static void __jule_anon_1aae4c863_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aae4c863_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae4c863(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _8821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _8836_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aae4e7bb_ctx{
	jule::Ptr<_1c48d4c93_comptimeStructField> _self_;
};
static void __jule_anon_1aae4e7bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aae4e7bb_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae4e7bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _9521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _9536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aae51724_ctx{
	jule::Ptr<_1c48d4c93_comptimeStructField> _self_;
};
static void __jule_anon_1aae51724_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aae51724_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae51724(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _10221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _10236_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aa9e220a_ctx{
	jule::Ptr<_1c48d804e_comptimeStatic> _self_;
};
static void __jule_anon_1aa9e220a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa9e220a_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e220a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _21121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _21136_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aa9e41a7_ctx{
	jule::Ptr<_1c48d804e_comptimeStatic> _self_;
};
static void __jule_anon_1aa9e41a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa9e41a7_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e41a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _21821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _21836_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aa9e6110_ctx{
	jule::Ptr<_1c48d804e_comptimeStatic> _self_;
};
static void __jule_anon_1aa9e6110_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aa9e6110_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e6110(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _22521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _22536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaa02e96_ctx{
	jule::Ptr<_1c48db30a_comptimeEnumField> _self_;
};
static void __jule_anon_1aaa02e96_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaa02e96_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa02e96(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _31321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _31336_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaa17a16_ctx{
	jule::Ptr<_1c48ddc9c_comptimeParam> _self_;
};
static void __jule_anon_1aaa17a16_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaa17a16_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa17a16(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _43521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _43536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaa1996e_ctx{
	jule::Ptr<_1c48ddc9c_comptimeParam> _self_;
};
static void __jule_anon_1aaa1996e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaa1996e_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1996e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44236_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaa1b8c7_ctx{
	jule::Ptr<_1c48ddc9c_comptimeParam> _self_;
};
static void __jule_anon_1aaa1b8c7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaa1b8c7_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1b8c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44936_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaa1d830_ctx{
	jule::Ptr<_1c48ddc9c_comptimeParam> _self_;
};
static void __jule_anon_1aaa1d830_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaa1d830_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1d830(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _45621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _45636_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaa0e9a_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaa0e9a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaa0e9a_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa0e9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _99821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _99836_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaa2e03_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaa2e03_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaa2e03_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa2e03(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _100521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _100536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaa4d5b_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaa4d5b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaa4d5b_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa4d5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _101221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _101236_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaa6cb4_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaa6cb4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaa6cb4_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa6cb4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _101921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _101936_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaa8c1c_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaa8c1c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaa8c1c_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa8c1c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _102621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _102636_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1aaaaab75_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1aaaaab75_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aaaaab75_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaaab75(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _103321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _103336_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab406bc9_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab406bc9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab406bc9_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab406bc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _104021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _104036_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab408a99_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab408a99_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab408a99_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab408a99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _104721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _104736_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab40ac77_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab40ac77_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab40ac77_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40ac77(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _105421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _105436_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab40cbd0_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab40cbd0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab40cbd0_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40cbd0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _106121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _106136_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab40eb38_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab40eb38_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab40eb38_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40eb38(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _106821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _106836_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab411a91_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab411a91_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab411a91_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab411a91(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _107521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _107536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab4139e9_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab4139e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab4139e9_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4139e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _108221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _108236_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab415952_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab415952_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab415952_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab415952(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _108921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _108936_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab4178aa_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab4178aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab4178aa_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4178aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _109621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _109636_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab419813_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab419813_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab419813_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab419813(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _110321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _110336_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab41b76b_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab41b76b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab41b76b_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab41b76b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _111021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _111036_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab41d6c4_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab41d6c4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab41d6c4_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab41d6c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _111721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _111736_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab42062c_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab42062c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab42062c_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab42062c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _112421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _112436_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab422585_ctx{
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_;
};
static void __jule_anon_1ab422585_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab422585_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab422585(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _113121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _113136_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab43c77b_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab43c77b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab43c77b_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab43c77b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _124721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _124736_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab43e6d4_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab43e6d4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab43e6d4_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab43e6d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _125421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _125436_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab44163c_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab44163c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab44163c_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab44163c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _126121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _126136_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab443595_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab443595_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab443595_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab443595(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _126821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _126836_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab4454ed_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab4454ed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab4454ed_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4454ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _127521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _127536_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab447456_ctx{
	jule::Ptr<_1c48ea10a_comptimeValue> _self_;
};
static void __jule_anon_1ab447456_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab447456_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab447456(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _128221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _128236_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab459e4c_ctx{
	jule::Ptr<_1c48ee054_comptimeFile> _self_;
};
static void __jule_anon_1ab459e4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab459e4c_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab459e4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _139621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _139636_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab45bda5_ctx{
	jule::Ptr<_1c48ee054_comptimeFile> _self_;
};
static void __jule_anon_1ab45bda5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab45bda5_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab45bda5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _140321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _140336_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab45dd0d_ctx{
	jule::Ptr<_1c48ee054_comptimeFile> _self_;
};
static void __jule_anon_1ab45dd0d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab45dd0d_ctx>().dealloc(); }
inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab45dd0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _141021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _141036_fc, jule::Ptr<_1c49ce024_Data>* );
struct __jule_anon_1ab469841_ctx{
	jule::Ptr<_1c49034cb_constraintChecker> _self_;
};
static void __jule_anon_1ab469841_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab469841_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab469841(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c494d290_sema>* _6415_sema, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _6433_generics);
struct __jule_anon_1ab7a287c_ctx{
	jule::Ptr<_1c48bb719_FnIns> _110837_f;
	jule::Ptr<_1c494d290_sema> _self_;
};
static void __jule_anon_1ab7a287c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ab7a287c_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ab7a287c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c494d290_sema>* _111237_sema, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _111255_generics);
struct __jule_anon_1abd333e6_ctx{
	jule::Ptr<_1c48897e7_NsSelectionExpr> _181731_s;
	jule::Str _18183_path;
};
static void __jule_anon_1abd333e6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1abd333e6_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1abd333e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _181943_imp);
inline jule::Str __jule_anon1ab928959(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85019_def);
struct __jule_anon_1ac038e04_ctx{
	jule::Ptr<_1c4883527_NamespaceTypeDecl> _152336_decl;
	jule::Str _15243_path;
};
static void __jule_anon_1ac038e04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac038e04_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ac038e04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _152543_imp);
struct __jule_anon_1ac88a7ee_ctx{
	_1c57e8c1c_exprDeadCode *_self_;
};
static void __jule_anon_1ac88a7ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac88a7ee_ctx>().dealloc(); }
inline void __jule_anon_1ac88a7ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr);
struct __jule_anon_1ac4c092e_ctx{
	_1c56ccd76_exprOptimizer *_self_;
};
static void __jule_anon_1ac4c092e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac4c092e_ctx>().dealloc(); }
inline void __jule_anon_1ac4c092e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m);
struct __jule_anon_1aca2d6a6_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
	jule::Bool _1377_ref;
};
static void __jule_anon_1aca2d6a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca2d6a6_ctx>().dealloc(); }
inline void __jule_anon_1aca2d6a6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aca3216b_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
	jule::Ptr<_1c490cabd_RangeIter> *_12936_it;
};
static void __jule_anon_1aca3216b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca3216b_ctx>().dealloc(); }
inline void __jule_anon_1aca3216b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aca41642_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
};
static void __jule_anon_1aca41642_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca41642_ctx>().dealloc(); }
inline void __jule_anon_1aca41642(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aca43ab7_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
};
static void __jule_anon_1aca43ab7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca43ab7_ctx>().dealloc(); }
inline void __jule_anon_1aca43ab7(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1aca5c7e5_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
};
static void __jule_anon_1aca5c7e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aca5c7e5_ctx>().dealloc(); }
inline void __jule_anon_1aca5c7e5(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac99c339_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
};
static void __jule_anon_1ac99c339_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac99c339_ctx>().dealloc(); }
inline void __jule_anon_1ac99c339(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ac99d648_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
	jule::Ptr<_1c490ee99_Match> _68930_m;
};
static void __jule_anon_1ac99d648_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ac99d648_ctx>().dealloc(); }
inline void __jule_anon_1ac99d648(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1acaae35d_ctx{
	jule::Ptr<_1a9706daa_scopeCoder> _self_;
	jule::Ptr<_1c48ad673_AnonFnExprModel> _105934_m;
};
static void __jule_anon_1acaae35d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1acaae35d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1acaae35d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49715b0_Var> _106567_v);
struct __jule_anon_1ace3643d_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace3643d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace3643d_ctx>().dealloc(); }
inline void __jule_anon_1ace3643d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _74138_pkg);
struct __jule_anon_1ace3794a_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace3794a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace3794a_ctx>().dealloc(); }
inline void __jule_anon_1ace3794a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _75436_m);
struct __jule_anon_1ace3d06b_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace3d06b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace3d06b_ctx>().dealloc(); }
inline void __jule_anon_1ace3d06b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _76738_pkg);
struct __jule_anon_1ace4d653_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
	jule::Ptr<_1c49715b0_Var> _83424_v;
};
static void __jule_anon_1ace4d653_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace4d653_ctx>().dealloc(); }
inline void __jule_anon_1ace4d653(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ace50721_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
	jule::Ptr<_1c49715b0_Var> _83424_v;
};
static void __jule_anon_1ace50721_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace50721_ctx>().dealloc(); }
inline void __jule_anon_1ace50721(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ace52e0a_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace52e0a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace52e0a_ctx>().dealloc(); }
inline void __jule_anon_1ace52e0a(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ace54082_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
	jule::Ptr<_1c49715b0_Var> _83424_v;
};
static void __jule_anon_1ace54082_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace54082_ctx>().dealloc(); }
inline void __jule_anon_1ace54082(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1ace722c0_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace722c0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace722c0_ctx>().dealloc(); }
inline void __jule_anon_1ace722c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _97638_pkg);
struct __jule_anon_1ace73656_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
	jule::Ptr<_1c48a6407_StructIns> _99049_s;
};
static void __jule_anon_1ace73656_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace73656_ctx>().dealloc(); }
inline void __jule_anon_1ace73656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _99136_m);
struct __jule_anon_1ace8108c_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace8108c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace8108c_ctx>().dealloc(); }
inline void __jule_anon_1ace8108c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _102838_pkg);
struct __jule_anon_1ace9d8a1_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace9d8a1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace9d8a1_ctx>().dealloc(); }
inline void __jule_anon_1ace9d8a1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _115338_pkg);
struct __jule_anon_1ace9ed69_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace9ed69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace9ed69_ctx>().dealloc(); }
inline void __jule_anon_1ace9ed69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _116931_file);
struct __jule_anon_1aceaa638_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1aceaa638_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aceaa638_ctx>().dealloc(); }
inline void __jule_anon_1aceaa638(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _120838_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad0400d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad049980(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base);
inline jule::Bool __jule_anon1aae40c63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _143025_pkg);
struct __jule_anon_1ace37362_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace37362_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace37362_ctx>().dealloc(); }
inline void __jule_anon_1ace37362(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _74232_file);
struct __jule_anon_1ace3de6d_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace3de6d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace3de6d_ctx>().dealloc(); }
inline void __jule_anon_1ace3de6d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _76832_file);
struct __jule_anon_1ace731c2_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace731c2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace731c2_ctx>().dealloc(); }
inline void __jule_anon_1ace731c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _97732_file);
struct __jule_anon_1ace81e8e_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace81e8e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace81e8e_ctx>().dealloc(); }
inline void __jule_anon_1ace81e8e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _102932_file);
struct __jule_anon_1ace9e7a3_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
};
static void __jule_anon_1ace9e7a3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace9e7a3_ctx>().dealloc(); }
inline void __jule_anon_1ace9e7a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _115432_file);
struct __jule_anon_1ace7516e_ctx{
	jule::Ptr<_1a97db0e3_ObjectCoder> _self_;
	jule::Ptr<_1c48cc1b9_Trait> _97817_t;
};
static void __jule_anon_1ace7516e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ace7516e_ctx>().dealloc(); }
inline void __jule_anon_1ace7516e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _98239_m);
jule::Array<jule::Array<jule::Str,2>,5> _205b661e1_HelpMap;jule::Str _1c5202deb_OutDir;jule::Str _1c520313d_OutName;jule::Str _1c52033d5_Out;jule::Uintptr _23963ba95_STDIN;jule::Uintptr _23963bd3c_STDOUT;jule::Uintptr _23963c139_STDERR;jule::Array<jule::U8,256> _21d80035c_first;jule::Array<_21d800912_acceptRange,16> _21d800ca8_acceptRanges;jule::Ptr<_2059a04e2_RangeTable> _20593d370__L;jule::Ptr<_2059a04e2_RangeTable> _20593e283__LU;jule::Ptr<_2059a04e2_RangeTable> _205945267_Letter;jule::Ptr<_2059a04e2_RangeTable> _20594b537_Upper;jule::Array<jule::U8,256> _205999013__PROPERTIES;jule::Array<jule::Str,4> _205a02302_CppHeaderExts;jule::Array<jule::Str,3> _205a03666_CppExts;jule::Array<jule::Str,1> _205a88454_ObjectiveCppExts;jule::Str _205b5c072_PathStdlib;jule::Str _205b5c281_PathExec;jule::Str _205b5c528_PathWd;jule::Str _205b5c825_PathApi;jule::Str _205b5cacd_Os;jule::Str _205b5cd86_Arch;jule::Str _205b627b4_Compiler;jule::Str _205b63bb1_CompilerPath;jule::Str _205b63dc0_CppStd;jule::Bool _205b64101_Shadowing;jule::Bool _205b643a9_Transpilation;jule::Bool _205b64662_Test;jule::Bool _205b6491a_RC;jule::Bool _205b64cd3_Safety;jule::Bool _205b65025_Production;jule::Array<jule::U8,32> _1dc4c9661__DE_BRUIJN32_TAB;jule::Array<jule::U8,64> _1dc4c9c05__DE_BRUIJN64_TAB;_1dc51dd15_floatInfo _1dc51e211_f32info;_1dc51dd15_floatInfo _1dc51e50d_f64info;jule::Array<jule::Array<jule::U64,2>,696> _1dc526ed8_detailedPowsOfTen;jule::Slice<jule::I64> _1dc528ced_powtab;jule::Slice<jule::F64> _1dc5298ae_f64pow10;jule::Slice<jule::F32> _1dc529bde_f32pow10;jule::Array<jule::U64,20> _1dc52ce45_u64pow10;jule::Slice<_1dc531bd5_leftCheat> _1dc532114_leftCheats;jule::I64 _1dc5381b4_BitSize;jule::Str _1dc5384b1_SysInt;jule::Str _1dc538769_SysUint;jule::Array<jule::I32,5> _1c34c9317_Spaces;jule::Array<jule::U64,6> _1c34c9603_UnaryOps;jule::Array<jule::U64,18> _1c48660a9_BinOps;jule::Array<jule::U64,2> _1c4866681_PostfixOps;jule::Array<jule::U64,11> _1c486696c_AssignOps;jule::Array<_1c4874a8a_kindPair,28> _1c4874eb9_keywords;jule::Array<_1c4874a8a_kindPair,46> _1c48752e9_basicOps;jule::Slice<jule::Str> _1c4902b90_builtinConstraints;jule::Ptr<_1c4a1020e_TypeKind> _21ddd0156_primNil;jule::Ptr<_1c4a1020e_TypeKind> _21ddd0453_primVoid;jule::Ptr<_1c4a1020e_TypeKind> _21ddd070b_primAny;jule::Ptr<_1c4a1020e_TypeKind> _21ddd0a08_primStr;jule::Ptr<_1c4a1020e_TypeKind> _21ddd0cb1_primBool;jule::Ptr<_1c4a1020e_TypeKind> _21ddd1069_primUintptr;jule::Ptr<_1c4a1020e_TypeKind> _21ddd1322_primUint;jule::Ptr<_1c4a1020e_TypeKind> _21ddd16da_primInt;jule::Ptr<_1c4a1020e_TypeKind> _21ddd192c_primI8;jule::Ptr<_1c4a1020e_TypeKind> _21ddd1bc4_primI16;jule::Ptr<_1c4a1020e_TypeKind> _21ddd1e7c_primI32;jule::Ptr<_1c4a1020e_TypeKind> _21ddd2235_primI64;jule::Ptr<_1c4a1020e_TypeKind> _21ddd24dd_primU8;jule::Ptr<_1c4a1020e_TypeKind> _21ddd2796_primU16;jule::Ptr<_1c4a1020e_TypeKind> _21ddd2a4e_primU32;jule::Ptr<_1c4a1020e_TypeKind> _21ddd3038_primU64;jule::Ptr<_1c4a1020e_TypeKind> _21ddd327a_primF32;jule::Ptr<_1c4a1020e_TypeKind> _21ddd3489_primF64;jule::Ptr<_1c56d6236_data> _1c56d5840_emptyData;jule::Bool _1c56da856_Copy;jule::Bool _1c56dab53_Deadcode;jule::Bool _1c56dae0b_Append;jule::Bool _1c56db208_Math;jule::Bool _1c56db4b1_Access;jule::Bool _1c56db769_Inline;jule::Bool _1c56dba22_Ptr;jule::Bool _1c56dbdda_Cond;jule::Bool _1c56dc12c_Str;jule::Bool _1c56dc3c4_Slice;jule::Bool _1c56dc67c_Assign;jule::Bool _1c56dc935_Exceptional;jule::Bool _1c56dcbdd_Iter;jule::Bool _1c56dce96_Dynamic;jule::Bool _1c57e9910_exprEnabled;jule::Bool _1c57e9b52_scopeEnabled;jule::Array<jule::U64,12> _1a97ce548_mdays;jule::Str _1a970664b_assignArgName;jule::Ptr<_1c4a1020e_TypeKind> _1a97d907a_generalGCPtr;

inline jule::Bool _21d800912_acceptRange_eq(_21d800912_acceptRange *_self_, _21d800912_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}



std::ostream &operator<<(std::ostream &_Stream, _21d800912_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _238b51e24_StrBuilder static__238b52375_New(jule::I64 _1516_cap) {
	if ((_1516_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:4"));;
	};
	return _238b51e24_StrBuilder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1516_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline void _238b5262d_Write(_238b51e24_StrBuilder* _self_, jule::Slice<jule::U8> _2521_b) {
	((*(_self_))._field_buf).append(_2521_b);;
}



inline void _238b528d6_WriteStr(_238b51e24_StrBuilder* _self_, jule::Str _3024_s) {
	((*(_self_))._field_buf).append(_3024_s);;
}



inline void _238b52b8e_WriteByte(_238b51e24_StrBuilder* _self_, jule::U8 _3525_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3525_b); };
}



inline jule::Str _238b531cd_Str(_238b51e24_StrBuilder* _self_) {
	jule::Str _507_s = _238b516e8_StrFromBytes((*(_self_))._field_buf);;
	_238b533cb_Clear(_self_);
	return _507_s;;
}



inline void _238b533cb_Clear(_238b51e24_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I64 _238b53662_Len(_238b51e24_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _238b53b7e_Buf(_238b51e24_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _238b53e37_SetBuf(_238b51e24_StrBuilder* _self_, jule::Slice<jule::U8> _7733_buf) {
	(*(_self_))._field_buf=_7733_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _238b51e24_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _20599ea41_Range16_eq(_20599ea41_Range16 *_self_, _20599ea41_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _20599ea41_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _2059a006e_Range32_eq(_2059a006e_Range32 *_self_, _2059a006e_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}



std::ostream &operator<<(std::ostream &_Stream, _2059a006e_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _2059a04e2_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2059ed100_index(_2059ecb38_lazyBuff* _self_, jule::I64 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _2059ed3a8_append(_2059ecb38_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _2059ed63e_string(_2059ecb38_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _238b5142e_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _2059ecb38_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _239654b57_DirEntry_eq(_239654b57_DirEntry *_self_, _239654b57_DirEntry _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		(_self_->_field_Stat == _self_->_field_Stat);
}



std::ostream &operator<<(std::ostream &_Stream, _239654b57_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _239654ddd_Directory_eq(_239654ddd_Directory *_self_, _239654ddd_Directory _other_) { return true; }

inline jule::Exceptional<jule::Slice<jule::Ptr<_239654b57_DirEntry>>> static__205a00a09_Read(jule::Str _1517_path) {
	jule::Slice<jule::Ptr<_239654b57_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _163_utf16Path = _2396135d8_UTF16FromStr(_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _177_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _183_handle = _2396410e9_FindFirstFile((&(_163_utf16Path[0LL])), (&(_177_data)));;
	if ((_183_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_239654b57_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_239654b57_DirEntry> _238_entry = jule::new_ptr<_239654b57_DirEntry>(_239654b57_DirEntry{._field_Name=_239613bb0_U16PtrToStr(((jule::U16*)(_177_data.cFileName))), ._field_Stat=jule::Ptr<_239658221_Status>(nullptr)});;
			(*(_238_entry))._field_Stat=({
				auto except = static__205a018c8_Of(_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1517_path; (*it++) = (*_238_entry.alloc)._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_239654b57_DirEntry>>>{.error=except.error};
				} jule::Ptr<_239658221_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_239654b57_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_238_entry); };
			if ((_23964146d_FindNextFile(_183_handle, (&(_177_data))) == 0LL)) {
				goto _iter_end_1aa41e891;
			};
		}
	_iter_next_1aa41e891:;
	}
	_iter_end_1aa41e891:;;
	_239641737_FindClose(_183_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_239654b57_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__205a00c3a_Create(jule::Str _3919_path) {
	jule::Slice<jule::U16> _443_utf16Path = _2396135d8_UTF16FromStr(_3919_path);;
	if ((!(_23963dcea_CreateDirectory((&(_443_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__205a00e6b_Remove(jule::Str _5319_path) {
	jule::Slice<jule::U16> _543_utf16Path = _2396135d8_UTF16FromStr(_5319_path);;
	if ((!(_23963e0b4_RemoveDirectory((&(_543_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _239654ddd_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _2396560dc_File_eq(_2396560dc_File *_self_, _2396560dc_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_2396560dc_File> static__23965653d_New(jule::Uintptr _4516_handle) {
	return jule::new_ptr<_2396560dc_File>(_2396560dc_File{._field_handle=_4516_handle});;
}



inline jule::Exceptional<jule::Ptr<_2396560dc_File>> static__239656807_Create(jule::Str _5519_path) {
	return static__21d80b654_Open(_5519_path, static_cast<jule::I64>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__239656ac1_Read(jule::Str _6717_path) {
	jule::Ptr<_239658221_Status> _683_s = ({
		auto except = static__205a018c8_Of(_6717_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_239658221_Status>(nullptr);});
	});;
	if ((!(_2396588b4_IsReg(_683_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0)};
	};
	jule::I64 _737_sz = static_cast<jule::I64>(_239658b4a_Size(_683_s));;
	if ((_737_sz != static_cast<jule::I64>(_239658b4a_Size(_683_s)))) {
		_737_sz=0LL;
	};
	if ((_737_sz < 512LLU)) {
		_737_sz=512LLU;
	};
	jule::Ptr<_2396560dc_File> _867_f = ({
		auto except = static__21d80b654_Open(_6717_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_2396560dc_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _877_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_737_sz, _737_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _887_n = 0LL;;
	while ((_887_n < _737_sz)) {
		{
			jule::I64 _904_rn = ({
				auto except = _21d80c04a_Read(_867_f.ptr(), _877_buf.slice(_887_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_904_rn == 0LL)) {
				goto _iter_end_1aa426304;
			};
			_887_n+=_904_rn;
		}
	_iter_next_1aa426304:;
	}
	_iter_end_1aa426304:;;
	({
		auto except = _2396576a4_Close(_867_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_877_buf.slice(0LL, _887_n)};;
}



inline jule::VoidExceptional static__239656e67_Write(jule::Str _10518_path, jule::Slice<jule::U8> _10529_data, jule::I64 _10543_perm) {
	jule::Ptr<_2396560dc_File> _1067_f = ({
		auto except = static__21d80b654_Open(_10518_path, static_cast<jule::I64>(769LL), _10543_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_2396560dc_File>(nullptr);});
	});;
	jule::I64 _1077_n = 0LL;;
	while ((_1077_n < _10529_data.len())) {
		{
			_1077_n+=({
				auto except = _21d80bc09_Write(_1067_f.ptr(), _10529_data.slice(_1077_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1aa42b161:;
	}
	_iter_end_1aa42b161:;;
	return _2396576a4_Close(_1067_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _2396576a4_Close(_2396560dc_File* _self_) {
	if ((_239643be0_Close(static_cast<jule::I64>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_2396560dc_File>> static__21d80b654_Open(jule::Str _2217_path, jule::I64 _2228_flag, jule::I64 _2241_mode) {
	jule::Slice<jule::U16> _233_utf16Path = _2396135d8_UTF16FromStr(_2217_path);;
	jule::I64 _243_handle = _23963ce1a_Wopen((&(_233_utf16Path[0LL])), _2228_flag, _2241_mode);;
	if ((_243_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_2396560dc_File>>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_2396560dc_File>>{.result=static__23965653d_New(static_cast<jule::Uintptr>(_243_handle))};;
}



inline jule::VoidExceptional static__21d80b885_Remove(jule::Str _3519_path) {
	jule::Slice<jule::U16> _363_utf16Path = _2396135d8_UTF16FromStr(_3519_path);;
	if ((!(_23963da31_DeleteFile((&(_363_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _21d80bc09_Write(_2396560dc_File* _self_, jule::Slice<jule::U8> _5021_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_5021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21d80c38b_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _564_utf16Buf = _2396135d8_UTF16FromStr(static_cast<jule::Str>(_5021_buf));;
		jule::Bool _574_ok = _23964057c_WriteConsole((*(_self_))._field_handle, (&(_564_utf16Buf[0LL])), _564_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_574_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21d80b148_HandleRW(&(_5021_buf));
	__jule_func_result=_239644097_Write(static_cast<jule::I64>((*(_self_))._field_handle), (&(_5021_buf[0LL])), static_cast<jule::U64>(_5021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I64> _21d80c04a_Read(_2396560dc_File* _self_, jule::Slice<jule::U8> _8124_buf) {
	jule::I64 __jule_func_result = 0;
	if ((_8124_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	if (_21d80c38b_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _878_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_8124_buf.len(), _8124_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		jule::Bool _884_ok = _239640a66_ReadConsole((*(_self_))._field_handle, (&(_878_codepage[0LL])), _8124_buf.len(), &(__jule_func_result));;
		if ((!(_884_ok))) {
			return jule::Exceptional<jule::I64>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _934_runes = _239613011_Decode(_878_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_934_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa4380d5:;
			if (it != expr_end) {
				jule::I32 *_9511_r = it;
				{
					jule::I64 _965_size = _21d80224e_RuneLen((*(_9511_r)));;
					if (((__jule_func_result + _965_size) > _8124_buf.len())) {
						goto _iter_end_1aa4380d5;
					};
					_21d8026d3_EncodeRune(_8124_buf.slice(__jule_func_result), (*(_9511_r)));
					__jule_func_result+=_965_size;
				}
				_iter_next_1aa4380d5:;
				++it;
				goto _iter_begin_1aa4380d5;
			}
			_iter_end_1aa4380d5:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
	};
	_21d80b148_HandleRW(&(_8124_buf));
	__jule_func_result=_239643816_Read(static_cast<jule::I64>((*(_self_))._field_handle), (&(_8124_buf[0LL])), static_cast<jule::U64>(_8124_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _2396560dc_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _239658221_Status_eq(_239658221_Status *_self_, _239658221_Status _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _23965862d_IsDir(_239658221_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _2396588b4_IsReg(_239658221_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _239658b4a_Size(_239658221_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_239658221_Status>> static__205a018c8_Of(jule::Str _1215_path) {
	if ((_1215_path).empty()) {
		return jule::Exceptional<jule::Ptr<_239658221_Status>>{.error=jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _163_utf16Path = _2396135d8_UTF16FromStr(_1215_path);;
	struct _stat _177_handle = (struct _stat){};;
	jule::I64 _183_code = _23963c9db_Wstat((&(_163_utf16Path[0LL])), (&(_177_handle)));;
	if ((_183_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_239658221_Status>>{.error=jule::Any(_239654508_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_239658221_Status> _227_stat = jule::new_ptr<_239658221_Status>(_239658221_Status{._field_mode=0LL, ._field_size=0});;
	(*_227_stat.alloc)._field_size=_177_handle.st_size;
	if (((_177_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_177_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_227_stat.alloc)._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_239658221_Status>>{.result=_227_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _239658221_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _205b58b95_cmdAttrs_eq(_205b58b95_cmdAttrs *_self_, _205b58b95_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}



std::ostream &operator<<(std::ostream &_Stream, _205b58b95_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _205a977d7_Log_eq(_205a977d7_Log *_self_, _205a977d7_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}



std::ostream &operator<<(std::ostream &_Stream, _205a977d7_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1dc51dd15_floatInfo_eq(_1dc51dd15_floatInfo *_self_, _1dc51dd15_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}



std::ostream &operator<<(std::ostream &_Stream, _1dc51dd15_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc51e992_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1dc531bd5_leftCheat_eq(_1dc531bd5_leftCheat *_self_, _1dc531bd5_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}



std::ostream &operator<<(std::ostream &_Stream, _1dc531bd5_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1dc5326ec_decimal_eq(_1dc5326ec_decimal *_self_, _1dc5326ec_decimal _other_) {
	return 
		_1aa85c020_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1dc529161_set(_1dc5326ec_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1aa61c1ed:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1aa61c3a7:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1aa61c066:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1aa61dc9e:;
					{
						goto _iter_next_1aa61d650;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1aa61dd48:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aa61d650;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1aa61ddae:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aa61d650;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aa61d650;
					}
				}
				_match_end_1aa61db7d:;
			};
			goto _iter_end_1aa61d650;
		}
	_iter_next_1aa61d650:;
	}
	_iter_end_1aa61d650:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1dc524656_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1aa62426b;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I64>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1aa62426b:;
		}
		_iter_end_1aa62426b:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1dc5294a2_floatBits(_1dc5326ec_decimal* _self_, _1dc51dd15_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aa634aa6;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aa632466;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1aa634aa6;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1dc528ced_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1dc528ced_powtab[(*(_self_))._field_dp];
			};
			_1dc532d90_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1aa62a89e:;
	}
	_iter_end_1aa62a89e:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1dc528ced_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1dc528ced_powtab[(-((*(_self_))._field_dp))];
			};
			_1dc532d90_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1aa62b2d9:;
	}
	_iter_end_1aa62b2d9:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I64 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1dc532d90_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1aa632466;
	};
	_1dc532d90_shift(_self_, static_cast<jule::I64>((1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1dc533940_roundedInteger(_self_);
	if ((_3347_mant == (2LLU << (*(_33226_flt))._field_mantbits))) {
		_3347_mant>>=1LLU;
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1aa632466;
		};
	};
	if (((_3347_mant & (1LLU << (*(_33226_flt))._field_mantbits)) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1aa634aa6;
	_julec_label_1aa632466:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33226_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aa634aa6:;
	jule::U64 _4227_bits = (_3347_mant & ((1LLU << (*(_33226_flt))._field_mantbits) - 1LLU));;
	_4227_bits|=(static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33226_flt))._field_expbits) - 1LL)))) << (*(_33226_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_4227_bits|=((1LLU << (*(_33226_flt))._field_mantbits) << (*(_33226_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1dc532ad7_assign(_1dc5326ec_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1aa637a32:;
	}
	_iter_end_1aa637a32:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aa63867b:;
	}
	_iter_end_1aa63867b:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1dc53404a_trim(_self_);
}



inline void _1dc532d90_shift(_1dc5326ec_decimal* _self_, jule::I64 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aa63a5e5:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1aa63a68e:;
			{
				while ((_17625_k > 60LL)) {
					{
						_1dc534a95_leftShift(_self_, 60LLU);
						_17625_k-=60LL;
					}
				_iter_next_1aa63b261:;
				}
				_iter_end_1aa63b261:;;
				_1dc534a95_leftShift(_self_, static_cast<jule::U64>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1aa63a705:;
			{
				while ((_17625_k < -60LL)) {
					{
						_1dc534336_rightShift(_self_, 60LLU);
						_17625_k+=60LL;
					}
				_iter_next_1aa63b184:;
				}
				_iter_end_1aa63b184:;;
				_1dc534336_rightShift(_self_, static_cast<jule::U64>((-(_17625_k))));
			}
		}
		_match_end_1aa63a491:;
	};
}



inline void _1dc533148_roundDown(_1dc5326ec_decimal* _self_, jule::I64 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1dc53404a_trim(_self_);
}



inline void _1dc533401_roundUp(_1dc5326ec_decimal* _self_, jule::I64 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1aa63e6c6:;
	}
	_iter_end_1aa63e6c6:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1dc5336a9_round(_1dc5326ec_decimal* _self_, jule::I64 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1dc534e19_shouldRoundUp(_self_, _23221_nd)) {
		_1dc533401_roundUp(_self_, _23221_nd);
	} else {
		_1dc533148_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1dc533940_roundedInteger(_1dc5326ec_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=((_2507_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1aa6425b9:;
	}
	_iter_end_1aa6425b9:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1aa6445ee:;
	}
	_iter_end_1aa6445ee:;;
	if (_1dc534e19_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc5326ec_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc5457ed_NewI64(jule::I64 _1619_x) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1619_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc545ab7_NewU64(jule::U64 _1919_x) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1919_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc545d81_NewBool(jule::Bool _2220_x) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2220_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc54614a_NewStr(jule::Str _2519_x) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2519_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc546414_NewF64(jule::F64 _2819_x) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2819_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1dc54537a_Const> static__1dc546623_NewNil(void) {
	return jule::new_ptr<_1dc54537a_Const>(_1dc54537a_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1dc546c83_ReadI64(_1dc54537a_Const* _self_) {
	if ((!(_1dc54937e_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1dc547019_ReadU64(_1dc54537a_Const* _self_) {
	if ((!(_1dc549615_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1dc5472a0_ReadBool(_1dc54537a_Const* _self_) {
	if ((!(_1dc54989b_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1dc547536_ReadStr(_1dc54537a_Const* _self_) {
	if ((!(_1dc549b32_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1dc5477bc_ReadF64(_1dc54537a_Const* _self_) {
	if ((!(_1dc549db8_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1dc547a53_AsI64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab004860:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab00462e:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab004695:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab0041ab:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab004013:;
	};
}



inline jule::U64 _1dc547cd9_AsU64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab005102:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab005e27:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab005e8d:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ab004387:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab004332:;
	};
}



inline jule::F64 _1dc548070_AsF64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab007951:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab0068ea:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab007720:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ab005c6d:;
			{
				return 0LL;;
			}
		}
		_match_end_1ab005c18:;
	};
}



inline void _1dc548328_SetI64(_1dc54537a_Const* _self_, jule::I64 _13822_x) {
	(*(_self_))._field_data=jule::Any(_13822_x, &__jule_any_type1);
}



inline void _1dc5485d1_SetU64(_1dc54537a_Const* _self_, jule::U64 _14122_x) {
	(*(_self_))._field_data=jule::Any(_14122_x, &__jule_any_type2);
}



inline void _1dc548889_SetBool(_1dc54537a_Const* _self_, jule::Bool _14423_x) {
	(*(_self_))._field_data=jule::Any(_14423_x, &__jule_any_type3);
}



inline void _1dc548b42_SetStr(_1dc54537a_Const* _self_, jule::Str _14722_x) {
	(*(_self_))._field_data=jule::Any(_14722_x, &__jule_any_type4);
}



inline void _1dc548dea_SetF64(_1dc54537a_Const* _self_, jule::F64 _15022_x) {
	(*(_self_))._field_data=jule::Any(_15022_x, &__jule_any_type5);
}



inline jule::Bool _1dc54937e_IsI64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab00b2c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab00b537:;
			{
				return false;;
			}
		}
		_match_end_1ab00b4d2:;
	};
}



inline jule::Bool _1dc549615_IsU64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab00be83:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab00b78a:;
			{
				return false;;
			}
		}
		_match_end_1ab00b735:;
	};
}



inline jule::Bool _1dc54989b_IsBool(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab00c8ce:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab00c24c:;
			{
				return false;;
			}
		}
		_match_end_1ab00c1e7:;
	};
}



inline jule::Bool _1dc549b32_IsStr(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab00d32a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab00cb98:;
			{
				return false;;
			}
		}
		_match_end_1ab00cb43:;
	};
}



inline jule::Bool _1dc549db8_IsF64(_1dc54537a_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab00dc76:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab00d5e4:;
			{
				return false;;
			}
		}
		_match_end_1ab00d58e:;
	};
}



inline jule::Bool _1dc54a14e_IsNil(_1dc54537a_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1dc54a7d1_And(_1dc54537a_Const* _self_, _1dc54537a_Const _23815_x) {
	{
		
		if ((_1dc54989b_IsBool(_self_) && _1dc54989b_IsBool(&_23815_x))) {
			_case_begin_1ab012ede:;
			{
				return (_1dc5472a0_ReadBool(_self_) && _1dc5472a0_ReadBool(&_23815_x));;
			}
		}
		else {
			_case_begin_1ab012e78:;
			{
				return false;;
			}
		}
		_match_end_1ab012a8d:;
	};
}



inline jule::Bool _1dc54ab22_Or(_1dc54537a_Const* _self_, _1dc54537a_Const _24914_x) {
	{
		
		if ((_1dc54989b_IsBool(_self_) && _1dc54989b_IsBool(&_24914_x))) {
			_case_begin_1ab0142a9:;
			{
				return (_1dc5472a0_ReadBool(_self_) || _1dc5472a0_ReadBool(&_24914_x));;
			}
		}
		else {
			_case_begin_1ab013990:;
			{
				return false;;
			}
		}
		_match_end_1ab0138b3:;
	};
}



inline jule::Bool _1dc54ae63_Eq(_1dc54537a_Const* _self_, _1dc54537a_Const _26014_x) {
	{
		
		if (_1dc54a14e_IsNil(_self_)) {
			_case_begin_1ab0155da:;
			{
				return _1dc54a14e_IsNil(&_26014_x);;
			}
		}
		else if (_1dc54989b_IsBool(_self_)) {
			_case_begin_1ab015651:;
			{
				return (_1dc54989b_IsBool(&_26014_x) && (_1dc5472a0_ReadBool(_self_) == _1dc5472a0_ReadBool(&_26014_x)));;
			}
		}
		else if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab0156b7:;
			{
				return (_1dc549b32_IsStr(&_26014_x) && (_1dc547536_ReadStr(_self_) == _1dc547536_ReadStr(&_26014_x)));;
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab01573e:;
			{
				return (_1dc546c83_ReadI64(_self_) == _1dc547a53_AsI64(&_26014_x));;
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab0157b6:;
			{
				return (_1dc547019_ReadU64(_self_) == _1dc547cd9_AsU64(&_26014_x));;
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab01593c:;
			{
				return (_1dc5477bc_ReadF64(_self_) == _1dc548070_AsF64(&_26014_x));;
			}
		}
		else {
			_case_begin_1ab014c49:;
			{
				return false;;
			}
		}
		_match_end_1ab014b6c:;
	};
}



inline jule::Bool _1dc54b2a4_Lt(_1dc54537a_Const* _self_, _1dc54537a_Const _28714_x) {
	{
		
		if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab01927b:;
			{
				return (_1dc549b32_IsStr(&_28714_x) && (_1dc547536_ReadStr(_self_) < _1dc547536_ReadStr(&_28714_x)));;
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab0192e2:;
			{
				return (_1dc546c83_ReadI64(_self_) < _1dc547a53_AsI64(&_28714_x));;
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab019358:;
			{
				return (_1dc547019_ReadU64(_self_) < _1dc547cd9_AsU64(&_28714_x));;
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab0193d0:;
			{
				return (_1dc5477bc_ReadF64(_self_) < _1dc548070_AsF64(&_28714_x));;
			}
		}
		else {
			_case_begin_1ab016069:;
			{
				return false;;
			}
		}
		_match_end_1ab015e9d:;
	};
}



inline jule::Bool _1dc54b5e5_LtEq(_1dc54537a_Const* _self_, _1dc54537a_Const _31016_x) {
	{
		
		if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab01be1b:;
			{
				return (_1dc549b32_IsStr(&_31016_x) && (_1dc547536_ReadStr(_self_) <= _1dc547536_ReadStr(&_31016_x)));;
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab01be82:;
			{
				return (_1dc546c83_ReadI64(_self_) <= _1dc547a53_AsI64(&_31016_x));;
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab01bee8:;
			{
				return (_1dc547019_ReadU64(_self_) <= _1dc547cd9_AsU64(&_31016_x));;
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab01c070:;
			{
				return (_1dc5477bc_ReadF64(_self_) <= _1dc548070_AsF64(&_31016_x));;
			}
		}
		else {
			_case_begin_1ab019b0b:;
			{
				return false;;
			}
		}
		_match_end_1ab019a40:;
	};
}



inline jule::Bool _1dc54b936_Gt(_1dc54537a_Const* _self_, _1dc54537a_Const _33314_x) {
	{
		
		if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab01eaab:;
			{
				return (_1dc549b32_IsStr(&_33314_x) && (_1dc547536_ReadStr(_self_) > _1dc547536_ReadStr(&_33314_x)));;
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab01eb22:;
			{
				return (_1dc546c83_ReadI64(_self_) > _1dc547a53_AsI64(&_33314_x));;
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab01eb88:;
			{
				return (_1dc547019_ReadU64(_self_) > _1dc547cd9_AsU64(&_33314_x));;
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab01ec10:;
			{
				return (_1dc5477bc_ReadF64(_self_) > _1dc548070_AsF64(&_33314_x));;
			}
		}
		else {
			_case_begin_1ab01c79b:;
			{
				return false;;
			}
		}
		_match_end_1ab01c6d0:;
	};
}



inline jule::Bool _1dc54bc77_GtEq(_1dc54537a_Const* _self_, _1dc54537a_Const _35616_x) {
	{
		
		if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab02274b:;
			{
				return (_1dc549b32_IsStr(&_35616_x) && (_1dc547536_ReadStr(_self_) >= _1dc547536_ReadStr(&_35616_x)));;
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab0227b2:;
			{
				return (_1dc546c83_ReadI64(_self_) >= _1dc547a53_AsI64(&_35616_x));;
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab022828:;
			{
				return (_1dc547019_ReadU64(_self_) >= _1dc547cd9_AsU64(&_35616_x));;
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab0228a0:;
			{
				return (_1dc5477bc_ReadF64(_self_) >= _1dc548070_AsF64(&_35616_x));;
			}
		}
		else {
			_case_begin_1ab02043b:;
			{
				return false;;
			}
		}
		_match_end_1ab020370:;
	};
}



inline jule::Bool _1dc54c0b8_Add(_1dc54537a_Const* _self_, _1dc54537a_Const _37719_x) {
	{
		
		if (_1dc549b32_IsStr(_self_)) {
			_case_begin_1ab0253db:;
			{
				if ((!(_1dc549b32_IsStr(&_37719_x)))) {
					return false;;
				};
				_1dc548b42_SetStr(_self_, (_1dc547536_ReadStr(_self_) + _1dc547536_ReadStr(&_37719_x)));
			}
		}
		else if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab025452:;
			{
				_1dc548dea_SetF64(_self_, (_1dc5477bc_ReadF64(_self_) + _1dc548070_AsF64(&_37719_x)));
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab0254b8:;
			{
				if (_1dc549db8_IsF64(&_37719_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) + _1dc5477bc_ReadF64(&_37719_x)));
				} else {
					_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) + _1dc547a53_AsI64(&_37719_x)));
				};
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab025540:;
			{
				if (_1dc549db8_IsF64(&_37719_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) + _1dc5477bc_ReadF64(&_37719_x)));
				} else {
					_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) + _1dc547cd9_AsU64(&_37719_x)));
				};
			}
		}
		else {
			_case_begin_1ab0230cb:;
			{
				return false;;
			}
		}
		_match_end_1ab023010:;
	};
	return true;;
}



inline jule::Bool _1dc54c409_Sub(_1dc54537a_Const* _self_, _1dc54537a_Const _40619_x) {
	{
		
		if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab02a116:;
			{
				_1dc548dea_SetF64(_self_, (_1dc5477bc_ReadF64(_self_) - _1dc548070_AsF64(&_40619_x)));
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab02a1b0:;
			{
				if (_1dc549db8_IsF64(&_40619_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) - _1dc5477bc_ReadF64(&_40619_x)));
				} else {
					_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) - _1dc547a53_AsI64(&_40619_x)));
				};
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab02a237:;
			{
				if (_1dc549db8_IsF64(&_40619_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) - _1dc5477bc_ReadF64(&_40619_x)));
				} else {
					_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) - _1dc547cd9_AsU64(&_40619_x)));
				};
			}
		}
		else {
			_case_begin_1ab029874:;
			{
				return false;;
			}
		}
		_match_end_1ab029797:;
	};
	return true;;
}



inline jule::Bool _1dc54c74a_Mul(_1dc54537a_Const* _self_, _1dc54537a_Const _43019_x) {
	{
		
		if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab02de61:;
			{
				_1dc548dea_SetF64(_self_, (_1dc5477bc_ReadF64(_self_) * _1dc548070_AsF64(&_43019_x)));
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab02e00a:;
			{
				if (_1dc549db8_IsF64(&_43019_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) * _1dc5477bc_ReadF64(&_43019_x)));
				} else {
					_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) * _1dc547a53_AsI64(&_43019_x)));
				};
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab02e082:;
			{
				if (_1dc549db8_IsF64(&_43019_x)) {
					_1dc548dea_SetF64(_self_, (_1dc548070_AsF64(_self_) * _1dc5477bc_ReadF64(&_43019_x)));
				} else {
					_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) * _1dc547cd9_AsU64(&_43019_x)));
				};
			}
		}
		else {
			_case_begin_1ab02d59d:;
			{
				return false;;
			}
		}
		_match_end_1ab02d4b0:;
	};
	return true;;
}



inline jule::Bool _1dc54ca8b_Div(_1dc54537a_Const* _self_, _1dc54537a_Const _45819_x) {
	{
		
		if (_1dc549db8_IsF64(_self_)) {
			_case_begin_1ab032cbc:;
			{
				jule::F64 _4614_l = _1dc548070_AsF64(&_45819_x);;
				if ((_4614_l == 0LL)) {
					return false;;
				};
				_1dc548dea_SetF64(_self_, jule::div(_1dc5477bc_ReadF64(_self_),_4614_l));
			}
		}
		else if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab032d66:;
			{
				jule::F64 _4674_l = _1dc548070_AsF64(&_45819_x);;
				if ((_4674_l == 0LL)) {
					return false;;
				};
				_1dc548dea_SetF64(_self_, jule::div(_1dc548070_AsF64(_self_),_4674_l));
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab032ddd:;
			{
				jule::F64 _4734_l = _1dc548070_AsF64(&_45819_x);;
				if ((_4734_l == 0LL)) {
					return false;;
				};
				_1dc548dea_SetF64(_self_, jule::div(_1dc548070_AsF64(_self_),_4734_l));
			}
		}
		else {
			_case_begin_1ab032409:;
			{
				return false;;
			}
		}
		_match_end_1ab03231b:;
	};
	return true;;
}



inline jule::Bool _1dc54cdcc_Mod(_1dc54537a_Const* _self_, _1dc54537a_Const _48719_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab036c9e:;
			{
				jule::I64 _4904_l = _1dc547a53_AsI64(&_48719_x);;
				if ((_4904_l == 0LL)) {
					return false;;
				};
				_1dc548328_SetI64(_self_, jule::mod(_1dc546c83_ReadI64(_self_),_4904_l));
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab03719a:;
			{
				jule::U64 _4964_l = _1dc547cd9_AsU64(&_48719_x);;
				if ((_4964_l == 0LLU)) {
					return false;;
				};
				_1dc5485d1_SetU64(_self_, jule::mod(_1dc547019_ReadU64(_self_),_4964_l));
			}
		}
		else {
			_case_begin_1ab036c27:;
			{
				return false;;
			}
		}
		_match_end_1ab036b28:;
	};
	return true;;
}



inline jule::Bool _1dc54d21d_BitwiseAnd(_1dc54537a_Const* _self_, _1dc54537a_Const _50926_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab039aa4:;
			{
				_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) & _1dc547a53_AsI64(&_50926_x)));
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab039ea0:;
			{
				_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) & _1dc547cd9_AsU64(&_50926_x)));
			}
		}
		else {
			_case_begin_1ab039a2c:;
			{
				return false;;
			}
		}
		_match_end_1ab03992d:;
	};
	return true;;
}



inline jule::Bool _1dc54d55e_BitwiseOr(_1dc54537a_Const* _self_, _1dc54537a_Const _52325_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab03b831:;
			{
				_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) | _1dc547a53_AsI64(&_52325_x)));
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab03bc2c:;
			{
				_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) | _1dc547cd9_AsU64(&_52325_x)));
			}
		}
		else {
			_case_begin_1ab03b7a9:;
			{
				return false;;
			}
		}
		_match_end_1ab03b6aa:;
	};
	return true;;
}



inline jule::Bool _1dc54d8a0_Xor(_1dc54537a_Const* _self_, _1dc54537a_Const _53719_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab03d5ad:;
			{
				_1dc548328_SetI64(_self_, (_1dc546c83_ReadI64(_self_) ^ _1dc547a53_AsI64(&_53719_x)));
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab03d9a9:;
			{
				_1dc5485d1_SetU64(_self_, (_1dc547019_ReadU64(_self_) ^ _1dc547cd9_AsU64(&_53719_x)));
			}
		}
		else {
			_case_begin_1ab03d536:;
			{
				return false;;
			}
		}
		_match_end_1ab03d437:;
	};
	return true;;
}



inline jule::Bool _1dc54dbe1_Lshift(_1dc54537a_Const* _self_, _1dc54537a_Const _55122_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab04033a:;
			{
				jule::I64 _5544_l = _1dc547a53_AsI64(_self_);;
				if ((_5544_l < 0LL)) {
					jule::U64 _5565_r = _1dc547cd9_AsU64(&_55122_x);;
					_1dc548328_SetI64(_self_, (_5544_l << _5565_r));
				} else {
					_1dc54e395_lshiftUnsig(_self_, &(_55122_x));
				};
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab040736:;
			{
				_1dc54e395_lshiftUnsig(_self_, &(_55122_x));
			}
		}
		else {
			_case_begin_1ab0402b3:;
			{
				return false;;
			}
		}
		_match_end_1ab0401b4:;
	};
	return true;;
}



inline jule::Bool _1dc54e032_Rshift(_1dc54537a_Const* _self_, _1dc54537a_Const _57122_x) {
	{
		
		if (_1dc54937e_IsI64(_self_)) {
			_case_begin_1ab042859:;
			{
				jule::I64 _5744_l = _1dc547a53_AsI64(_self_);;
				if ((_5744_l < 0LL)) {
					jule::U64 _5765_r = _1dc547cd9_AsU64(&_57122_x);;
					_1dc548328_SetI64(_self_, (_5744_l >> _5765_r));
				} else {
					_1dc54e6c5_rshiftUnsig(_self_, &(_57122_x));
				};
			}
		}
		else if (_1dc549615_IsU64(_self_)) {
			_case_begin_1ab042c55:;
			{
				_1dc54e6c5_rshiftUnsig(_self_, &(_57122_x));
			}
		}
		else {
			_case_begin_1ab0427d2:;
			{
				return false;;
			}
		}
		_match_end_1ab0426d3:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1dc54537a_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c486c19d_Token_eq(_1c486c19d_Token *_self_, _1c486c19d_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1c486c555_Prec(_1c486c19d_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab09da3b:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab09d530:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab09d5a7:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab09dad5:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab09db5c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ab09d035:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ab09d453:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c486c19d_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c4872d85_Fill(_1c4872934_File* _self_, jule::Slice<jule::U8> _1724_data) {
	(*(_self_))._field_Data=_1724_data;
}



inline jule::Str _1c487311b_Dir(_1c4872934_File* _self_) {
	return _205a000d0_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c48733a2_Name(_1c4872934_File* _self_) {
	return _2059eec06_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c4873979_GetRow(_1c4872934_File* _self_, jule::I64 _3818_row) {
	jule::I64 _397_n = 0LL;;
	jule::I64 _407_lineStart = 0LL;;
	jule::I64 _417_i = 0LL;;
	for (; (_417_i < (*(_self_))._field_Data.len()); (_417_i)++) {
		{
			if (((*(_self_))._field_Data[_417_i] != '\n')) {
				goto _iter_next_1ab0a426c;
			};
			(_397_n)++;
			if ((_397_n == _3818_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_407_lineStart, _417_i));;
			};
			_407_lineStart=(_417_i + 1LL);
		}
	_iter_next_1ab0a426c:;
	}
	_iter_end_1ab0a426c:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4872934_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4874a8a_kindPair_eq(_1c4874a8a_kindPair *_self_, _1c4874a8a_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4874a8a_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c487b135_pushErr(_1c487aa6e_lex* _self_, jule::Str _44723_fmt, jule::Slice<jule::Any> _44736_args) {
	{ jule::Slice<_205a977d7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c4875838_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44723_fmt, _44736_args)); };
}



inline void _1c487b696_lex(_1c487aa6e_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c487d8b8_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1c486c19d_Token> _4628_token = _1c487eda3_token(_self_);;
			if (((*(_4628_token))._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c486c19d_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4628_token); };
			};
		}
	_iter_next_1ab0d3378:;
	}
	_iter_end_1ab0d3378:;;
}



inline jule::Str _1c487b9d7_id(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _47119_ln) {
	if (((*(_47119_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4753_r;
	jule::I64 _47510_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune((*(_47119_ln)));
		_4753_r = __jule_assign_result.__jule_result_arg0;
		_47510_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4753_r != '_') && (!(_1c48708cc_IsLetter(_4753_r))))) {
		return jule::Str();;
	};
	while ((_47510_i < (*(_47119_ln)).len())) {
		{
			jule::I32 _4814_pr;
			jule::I64 _4818_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune((*(_47119_ln)).slice(_47510_i));
				_4814_pr = __jule_assign_result.__jule_result_arg0;
				_4818_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4814_pr != '_') && (!(_1c4870d50_IsDecimal(static_cast<jule::U8>(_4814_pr))))) && (!(_1c48708cc_IsLetter(_4814_pr))))) {
				(*(_self_))._field_pos+=_47510_i;
				return static_cast<jule::Str>((*(_47119_ln)).slice(0LL, _47510_i));;
			};
			_47510_i+=_4818_n;
		}
	_iter_next_1ab0d6788:;
	}
	_iter_end_1ab0d6788:;;
	(*(_self_))._field_pos+=(*(_47119_ln)).len();
	return static_cast<jule::Str>((*(_47119_ln)));;
}



inline jule::Slice<jule::U8> _1c487bc6d_resume(_1c487aa6e_lex* _self_) {
	jule::I64 _4967_i = (*(_self_))._field_pos;;
	for (; (_4967_i < (*((*(_self_))._field_file))._field_Data.len()); (_4967_i)++) {
		{
			jule::I32 _4984_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_Data[_4967_i]);;
			if (_1c48703d2_IsSpace(_4984_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4984_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ab0daa34:;
						{
							_1c487d8b8_newLine(_self_);
						}
					}
					else {
						_case_begin_1ab0da32a:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ab0da605:;
				};
				goto _iter_next_1ab0d91d6;
			};
			jule::I64 _5108_j = _4967_i;;
			for (; (_5108_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_5108_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_5108_j] == '\n')) {
						goto _iter_end_1ab0d97be;
					};
				}
			_iter_next_1ab0d97be:;
			}
			_iter_end_1ab0d97be:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_4967_i, _5108_j);;
		}
	_iter_next_1ab0d91d6:;
	}
	_iter_end_1ab0d91d6:;;
	return nullptr;;
}



inline void _1c487c026_lexLineComment(_1c487aa6e_lex* _self_, jule::Ptr<_1c486c19d_Token>* _52135_token) {
	jule::I64 _5223_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5254_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if (((_5254_r == '\n') || (_5254_r == '\r'))) {
				goto _iter_end_1ab0dd0ca;
			};
		}
	_iter_next_1ab0dd0ca:;
	}
	_iter_end_1ab0dd0ca:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*((*(_52135_token))))._field_Id=static_cast<jule::U64>(15LLU);
		(*((*(_52135_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5223_start, (*(_self_))._field_pos));
	};
}



inline void _1c487c2ce_lexRangeComment(_1c487aa6e_lex* _self_, jule::Ptr<_1c486c19d_Token>* _53636_token) {
	jule::I64 _5373_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5404_r = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_5404_r == '\r')) {
				goto _iter_next_1ab0e173d;
			};
			if ((_5404_r == '\n')) {
				_1c487d8b8_newLine(_self_);
				goto _iter_next_1ab0e173d;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_5404_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*((*(_53636_token))))._field_Id=static_cast<jule::U64>(15LLU);
					(*((*(_53636_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5373_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ab0e173d:;
	}
	_iter_end_1ab0e173d:;;
	_1c487b135_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c487c620_num(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _56420_txt) {
	jule::Str __jule_func_result;
	if (((*(_56420_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c4879386_hexNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab0e9180;
	};
	__jule_func_result=_1c48791aa_octalNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab0e9180;
	};
	__jule_func_result=_1c487794a_binaryNum(_56420_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1ab0e9180;
	};
	__jule_func_result=_1c4877681_commonNum(_56420_txt);
	_julec_label_1ab0e9180:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c487c961_escapeSeq(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _58626_txt) {
	jule::Str _5877_seq = jule::Str();;
	if (((*(_58626_txt)).len() < 2LL)) {
		goto _julec_label_1ab0ece20;
	};
	{
		auto &_match_expr{ (*(_58626_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ab0eb050:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58626_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab0eb1b5:;
			{
				_5877_seq=_1c48799a2_bigUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ab0eac86:;
			{
				_5877_seq=_1c4879c6b_littleUnicodePointEscape(_58626_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab0eacec:;
			{
				_5877_seq=_1c487a035_hexByteEscape(_58626_txt);
			}
		}
		else {
			_case_begin_1ab0ea648:;
			{
				_5877_seq=_1c487a2ee_byteEscape(_58626_txt);
			}
		}
		_match_end_1ab0eab21:;
	};
	_julec_label_1ab0ece20:;
	if ((_5877_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1c487b135_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5877_seq.len();
	return _5877_seq;;
}



inline jule::Str _1c487cd5c_getRune(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _61624_txt, jule::Bool _61637_raw) {
	if (((!(_61637_raw)) && ((*(_61624_txt))[0LL] == '\\'))) {
		return _1c487c961_escapeSeq(_self_, _61624_txt);;
	};
	jule::I32 _6203_r;
	jule::I64 _6206_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune((*(_61624_txt)));
		_6203_r = __jule_assign_result.__jule_result_arg0;
		_6206_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6206_n;
	return jule::Str::from_rune(_6203_r);;
}



inline jule::Str _1c487d19d_lexRune(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _62524_txt) {
	_238b51e24_StrBuilder _6267_run = static__238b52375_New(8LL);;
	_238b52b8e_WriteByte(&_6267_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _6297_n = 0LL;;
	jule::I64 _6307_i = 1LL;;
	for (; (_6307_i < (*(_62524_txt)).len()); (_6307_i)++) {
		{
			if (((*(_62524_txt))[_6307_i] == '\r')) {
				goto _iter_next_1ab1022ed;
			};
			if (((*(_62524_txt))[_6307_i] == '\n')) {
				_1c487b135_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c487d8b8_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6424_part = (*(_62524_txt)).slice(_6307_i);;
			jule::Str _6434_r = _1c487cd5c_getRune(_self_, &(_6424_part), false);;
			_238b528d6_WriteStr(&_6267_run, _6434_r);
			(*(_self_))._field_column+=_21d8033d7_RuneCountStr(_6434_r);
			if (_6434_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1ab1022ed;
			};
			if ((_6434_r.len() > 1LL)) {
				_6307_i+=(_6434_r.len() - 1LL);
			};
			(_6297_n)++;
		}
	_iter_next_1ab1022ed:;
	}
	_iter_end_1ab1022ed:;;
	if ((_6297_n == 0LL)) {
		_1c487b135_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_6297_n > 1LL)) {
		_1c487b135_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _238b531cd_Str(&_6267_run);;
}



inline jule::Str _1c487d434_lexStr(_1c487aa6e_lex* _self_) {
	_238b51e24_StrBuilder _6667_s = static__238b52375_New(16LL);;
	jule::U8 _6673_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6693_raw = (_6673_mark == '`');;
	_238b52b8e_WriteByte(&_6667_s, _6673_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _6744_ch = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
			if ((_6744_ch == '\r')) {
				goto _iter_next_1ab107633;
			};
			if ((_6744_ch == '\n')) {
				_1c487d8b8_newLine(_self_);
				if ((!(_6693_raw))) {
					_1c487b135_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6868_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _6874_r = _1c487cd5c_getRune(_self_, &(_6868_part), _6693_raw);;
			_238b528d6_WriteStr(&_6667_s, _6874_r);
			(*(_self_))._field_column+=_21d8033d7_RuneCountStr(_6874_r);
			if ((_6744_ch == _6673_mark)) {
				goto _iter_end_1ab107633;
			};
		}
	_iter_next_1ab107633:;
	}
	_iter_end_1ab107633:;;
	return _238b531cd_Str(&_6667_s);;
}



inline void _1c487d8b8_newLine(_1c487aa6e_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c487de29_isOp(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _70721_txt, jule::Str _70734_kind, jule::U64 _70745_id, jule::Ptr<_1c486c19d_Token>* _70763_t) {
	if ((!(_1c4875c01_bytesHasPrefix(_70721_txt, _70734_kind)))) {
		return false;;
	};
	(*((*(_70763_t))))._field_Kind=_70734_kind;
	(*((*(_70763_t))))._field_Id=_70745_id;
	(*(_self_))._field_pos+=_70734_kind.len();
	return true;;
}



inline jule::Bool _1c487e325_lexBasicOps(_1c487aa6e_lex* _self_, jule::Slice<jule::U8> _71727_txt, jule::Ptr<_1c486c19d_Token>* _71745_tok) {
	{
		auto expr = &(_1c48752e9_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab10e41a:;
		if (it != expr_end) {
			_1c4874a8a_kindPair *_71810_pair = it;
			{
				if (_1c487de29_isOp(_self_, &(_71727_txt), (*(_71810_pair))._field_kind, (*(_71810_pair))._field_id, _71745_tok)) {
					return true;;
				};
			}
			_iter_next_1ab10e41a:;
			++it;
			goto _iter_begin_1ab10e41a;
		}
		_iter_end_1ab10e41a:;
	};
	return false;;
}



inline jule::Bool _1c487e721_lexId(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _72622_txt, jule::Ptr<_1c486c19d_Token>* _72640_t) {
	jule::Str _7273_lex = _1c487b9d7_id(_self_, _72622_txt);;
	if ((_7273_lex).empty()) {
		return false;;
	};
	(*((*(_72640_t))))._field_Kind=_7273_lex;
	(*((*(_72640_t))))._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1c487eb1c_lexNum(_1c487aa6e_lex* _self_, jule::Slice<jule::U8>* _73623_txt, jule::Ptr<_1c486c19d_Token>* _73641_t) {
	jule::Str _7373_lex = _1c487c620_num(_self_, _73623_txt);;
	if ((_7373_lex).empty()) {
		return false;;
	};
	(*((*(_73641_t))))._field_Kind=_7373_lex;
	(*((*(_73641_t))))._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1c486c19d_Token> _1c487eda3_token(_1c487aa6e_lex* _self_) {
	jule::Ptr<_1c486c19d_Token> _7487_t = jule::new_ptr<_1c486c19d_Token>(_1c486c19d_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _7533_txt = _1c487bc6d_resume(_self_);;
	if ((_7533_txt == nullptr)) {
		return _7487_t;;
	};
	(*(_7487_t))._field_Column=(*(_self_))._field_column;
	(*_7487_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c487eb1c_lexNum(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ab116488:;
			{
				goto _match_end_1ab114453;
			}
		}
		else if ((_7533_txt[0LL] == '\'')) {
			_case_begin_1ab116576:;
			{
				(*_7487_t.alloc)._field_Kind=_1c487d19d_lexRune(_self_, &(_7533_txt));
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (((_7533_txt[0LL] == '\"') || (_7533_txt[0LL] == '`'))) {
			_case_begin_1ab1165dc:;
			{
				(*_7487_t.alloc)._field_Kind=_1c487d434_lexStr(_self_);
				(*_7487_t.alloc)._field_Id=static_cast<jule::U64>(4LLU);
				return _7487_t;;
			}
		}
		else if (_1c4875c01_bytesHasPrefix(&(_7533_txt), jule::Str::lit("//", 2))) {
			_case_begin_1ab116653:;
			{
				_1c487c026_lexLineComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1c4875c01_bytesHasPrefix(&(_7533_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1ab11508b:;
			{
				_1c487c2ce_lexRangeComment(_self_, &(_7487_t));
				return _7487_t;;
			}
		}
		else if (_1c487e325_lexBasicOps(_self_, _7533_txt, &(_7487_t))) {
			_case_begin_1ab115102:;
			{
				goto _match_end_1ab114453;
			}
		}
		else if (_1c487e721_lexId(_self_, &(_7533_txt), &(_7487_t))) {
			_case_begin_1ab115168:;
			{
				{
					auto expr = &(_1c4874eb9_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab118127:;
					if (it != expr_end) {
						_1c4874a8a_kindPair *_78511_pair = it;
						{
							if (((*(_78511_pair))._field_kind == (*_7487_t.alloc)._field_Kind)) {
								(*_7487_t.alloc)._field_Id=(*(_78511_pair))._field_id;
								goto _iter_end_1ab118127;
							};
						}
						_iter_next_1ab118127:;
						++it;
						goto _iter_begin_1ab118127;
					}
					_iter_end_1ab118127:;
				};
			}
		}
		else {
			_case_begin_1ab115025:;
			{
				jule::I32 _7924_r;
				jule::I64 _7927_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune(_7533_txt);
					_7924_r = __jule_assign_result.__jule_result_arg0;
					_7927_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c487b135_pushErr(_self_, jule::Str::lit("undefined token: @", 18), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7924_r, &__jule_any_type6); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7927_sz;
				return _7487_t;;
			}
		}
		_match_end_1ab114453:;
	};
	(*(_self_))._field_column+=_21d8033d7_RuneCountStr((*_7487_t.alloc)._field_Kind);
	return _7487_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c487aa6e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48807bb_AST _Src) {
	_Stream << "AST{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4881778_Node_eq(_1c4881778_Node *_self_, _1c4881778_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4881778_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4881b96_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4882779_TypeDecl_eq(_1c4882779_TypeDecl *_self_, _1c4882779_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4882779_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4882d84_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488314d_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4883527_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4883824_SptrTypeDecl_eq(_1c4883824_SptrTypeDecl *_self_, _1c4883824_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4883824_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4883ba9_SlcTypeDecl_eq(_1c4883ba9_SlcTypeDecl *_self_, _1c4883ba9_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4883ba9_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4883ea6_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48842a3_PtrTypeDecl_eq(_1c48842a3_PtrTypeDecl *_self_, _1c48842a3_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1c4884649_IsUnsafe(_1c48842a3_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48842a3_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4884a45_ArrTypeDecl_eq(_1c4884a45_ArrTypeDecl *_self_, _1c4884a45_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1c4884ddb_AutoSized(_1c4884a45_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4884a45_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4885293_MapTypeDecl_eq(_1c4885293_MapTypeDecl *_self_, _1c4885293_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4885293_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488566c_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4886aad_Expr_eq(_1c4886aad_Expr *_self_, _1c4886aad_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4886aad_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4886d77_RangeExpr_eq(_1c4886d77_RangeExpr *_self_, _1c4886d77_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4886d77_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4887482_UseExpr_eq(_1c4887482_UseExpr *_self_, _1c4887482_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4887482_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48876a2_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4887a48_LitExpr_eq(_1c4887a48_LitExpr *_self_, _1c4887a48_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4887a48_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4887e22_UnsafeExpr_eq(_1c4887e22_UnsafeExpr *_self_, _1c4887e22_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4887e22_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48883c8_IdentExpr_eq(_1c48883c8_IdentExpr *_self_, _1c48883c8_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48883c8_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4888b6a_UnaryExpr_eq(_1c4888b6a_UnaryExpr *_self_, _1c4888b6a_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4888b6a_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4889044_VariadicExpr_eq(_1c4889044_VariadicExpr *_self_, _1c4889044_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4889044_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488941d_CastExpr_eq(_1c488941d_CastExpr *_self_, _1c488941d_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488941d_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48897e7_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4889bc1_SubIdentExpr_eq(_1c4889bc1_SubIdentExpr *_self_, _1c4889bc1_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4889bc1_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488a177_BinaryExpr_eq(_1c488a177_BinaryExpr *_self_, _1c488a177_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488a177_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c488ab8e_Unhandled(_1c488a7d7_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1c488ae25_Ignored(_1c488a7d7_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488a7d7_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488b2cc_FieldExprPair_eq(_1c488b2cc_FieldExprPair *_self_, _1c488b2cc_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488b2cc_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488bb07_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488c0ad_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488c8d8_KeyValPair_eq(_1c488c8d8_KeyValPair *_self_, _1c488c8d8_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488c8d8_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488d114_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488da71_IndexingExpr_eq(_1c488da71_IndexingExpr *_self_, _1c488da71_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488da71_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488e1d1_SlicingExpr_eq(_1c488e1d1_SlicingExpr *_self_, _1c488e1d1_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488e1d1_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c488e4cd_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488e984_GenericDecl_eq(_1c488e984_GenericDecl *_self_, _1c488e984_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488e984_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c488ed5d_LabelSt_eq(_1c488ed5d_LabelSt *_self_, _1c488ed5d_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1c488ed5d_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4890237_GotoSt_eq(_1c4890237_GotoSt *_self_, _1c4890237_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4890237_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4890534_FallSt_eq(_1c4890534_FallSt *_self_, _1c4890534_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4890534_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4890b94_AssignLeft_eq(_1c4890b94_AssignLeft *_self_, _1c4890b94_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4890b94_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4891227_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c489213a_Stmt_eq(_1c489213a_Stmt *_self_, _1c489213a_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1c489213a_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489279a_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4892ed7_ParamDecl_eq(_1c4892ed7_ParamDecl *_self_, _1c4892ed7_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1c489338e_IsSelf(_1c4892ed7_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4892ed7_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c48947d0_IsAnon(_1c4894439_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4894439_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48955e4_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48959bd_RetSt_eq(_1c48959bd_RetSt *_self_, _1c48959bd_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48959bd_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c489623d_Iter_eq(_1c489623d_Iter *_self_, _1c489623d_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1c48965d4_IsInf(_1c489623d_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489623d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4896a68_WhileKind_eq(_1c4896a68_WhileKind *_self_, _1c4896a68_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1c4896e0e_IsWhileNext(_1c4896a68_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4896a68_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4897470_RangeKind_eq(_1c4897470_RangeKind *_self_, _1c4897470_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4897470_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4897849_BreakSt_eq(_1c4897849_BreakSt *_self_, _1c4897849_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4897849_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4897c23_ContSt_eq(_1c4897c23_ContSt *_self_, _1c4897c23_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4897c23_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48981c9_If_eq(_1c48981c9_If *_self_, _1c48981c9_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48981c9_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48985a3_Else_eq(_1c48985a3_Else *_self_, _1c48985a3_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48985a3_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4898a59_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4899296_TypeAliasDecl_eq(_1c4899296_TypeAliasDecl *_self_, _1c4899296_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4899296_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489974c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489a066_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489a880_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c489ad36_EnumItemDecl_eq(_1c489ad36_EnumItemDecl *_self_, _1c489ad36_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c489ad36_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489b8e7_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c489c222_TypeEnumItemDecl_eq(_1c489c222_TypeEnumItemDecl *_self_, _1c489c222_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c489c222_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489c882_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c489cb4b_FieldDecl_eq(_1c489cb4b_FieldDecl *_self_, _1c489cb4b_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1c489cb4b_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489d542_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489dc7e_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c489e3de_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48a0753_Field_eq(_1c48a0753_Field *_self_, _1c48a0753_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1c48a5857_FieldIns> _1c48a0b3d_instance(jule::Ptr<_1c48a0753_Field> _self_) {
	return jule::new_ptr<_1c48a5857_FieldIns>(_1c48a5857_FieldIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Default=jule::Ptr<_1c49ce024_Data>(nullptr)});;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48a0753_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48a2766_Operators_eq(_1c48a2766_Operators *_self_, _1c48a2766_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48a2766_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c48a6407_StructIns> _1c48a3b1e_instance(jule::Ptr<_1c48a3679_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1c48a6407_StructIns> _1007_ins = jule::new_ptr<_1c48a6407_StructIns>(_1c48a6407_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a5857_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48a5857_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49715b0_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1c48b8738_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1c48bebc3_new(), ._field_Operators=_1c48a2766_Operators{._field_Eq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Add=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Div=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa87d9c0:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _10715_s = *it;
			{
				(*(_1007_ins))._field_Statics=jule::append((*_1007_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c49715b0_Var>((*(_10715_s))); __jule_collection; }));
			}
			_iter_next_1aa87d9c0:;
			++it;
			goto _iter_begin_1aa87d9c0;
		}
		_iter_end_1aa87d9c0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa87e806:;
		if (it != expr_end) {
			jule::Ptr<_1c48a0753_Field> _11115_f = *it;
			{
				(*_1007_ins.alloc)._field_Fields=jule::append((*_1007_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a5857_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c48a0b3d_instance(_11115_f); __jule_collection; }));
				if ((((!((*_11115_f.alloc)._field_Mutable)) && ((*((*_11115_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1c4a11ac3_Mutable((*((*(_11115_f))._field_Kind))._field_Kind))) {
					(*_1007_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1aa87e806:;
			++it;
			goto _iter_begin_1aa87e806;
		}
		_iter_end_1aa87e806:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_1007_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_1007_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48b8738_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48b8738_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa88351e:;
			if (it != expr_end) {
				jule::Ptr<_1c48b8738_Fn> _12216_f = *it;
				{
					jule::Ptr<_1c48b8738_Fn> _1239_fins = jule::new_ptr<_1c48b8738_Fn>((*(_12216_f)));;
					(*_1239_fins.alloc)._field_Instances=nullptr;
					(*_1007_ins.alloc)._field_Methods=jule::append((*_1007_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48b8738_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1239_fins; __jule_collection; }));
				}
				_iter_next_1aa88351e:;
				++it;
				goto _iter_begin_1aa88351e;
			}
			_iter_end_1aa88351e:;
		};
	};
	return _1007_ins;;
}



inline jule::Ptr<_1c48a6407_StructIns> _1c48a3e2c_appendInstance(_1c48a3679_Struct* _self_, jule::Ptr<_1c48a6407_StructIns>* _13435_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8838b5:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _14015_ains = *it;
			{
				if (_1c48a70a6_Same(_14015_ains.ptr(), (*(_13435_ins)))) {
					return _14015_ains;;
				};
			}
			_iter_next_1aa8838b5:;
			++it;
			goto _iter_begin_1aa8838b5;
		}
		_iter_end_1aa8838b5:;
	};
	{ jule::Slice<jule::Ptr<_1c48a6407_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13435_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1c48b8738_Fn> _1c48a4328_FindMethod(_1c48a3679_Struct* _self_, jule::Str _15226_ident, jule::Bool _15238_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa885cc4:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _15315_f = *it;
			{
				if ((((*(_15315_f))._field_Statically == _15238_statically) && ((*_15315_f.alloc)._field_Ident == _15226_ident))) {
					return _15315_f;;
				};
			}
			_iter_next_1aa885cc4:;
			++it;
			goto _iter_begin_1aa885cc4;
		}
		_iter_end_1aa885cc4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c48a4669_FindStatic(_1c48a3679_Struct* _self_, jule::Str _16326_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8881d3:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _16415_v = *it;
			{
				if (((*(_16415_v))._field_Ident == _16326_ident)) {
					return _16415_v;;
				};
			}
			_iter_next_1aa8881d3:;
			++it;
			goto _iter_begin_1aa8881d3;
		}
		_iter_end_1aa8881d3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48a0753_Field> _1c48a49aa_FindField(_1c48a3679_Struct* _self_, jule::Str _17425_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8891b2:;
		if (it != expr_end) {
			jule::Ptr<_1c48a0753_Field> _17515_f = *it;
			{
				if (((*(_17515_f))._field_Ident == _17425_ident)) {
					return _17515_f;;
				};
			}
			_iter_next_1aa8891b2:;
			++it;
			goto _iter_begin_1aa8891b2;
		}
		_iter_end_1aa8891b2:;
	};
	return nullptr;;
}



inline jule::Bool _1c48a4ceb_IsImplements(_1c48a3679_Struct* _self_, jule::Ptr<_1c48cc1b9_Trait> _18424_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa88a180:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> *_18510_it = it;
			{
				if ((_18424_t == (*(_18510_it)))) {
					return true;;
				};
			}
			_iter_next_1aa88a180:;
			++it;
			goto _iter_begin_1aa88a180;
		}
		_iter_end_1aa88a180:;
	};
	return false;;
}



inline jule::Bool _1c48a513c_IsUses(_1c48a3679_Struct* _self_, jule::Ptr<_1c48a3679_Struct> _19418_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad8ed27:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> *_19510_u = it;
			{
				while ((_19418_s == (*(_19510_u)))) {
					{
						return true;;
					}
				_iter_next_1aad90465:;
				}
				_iter_end_1aad90465:;;
			}
			_iter_next_1aad8ed27:;
			++it;
			goto _iter_begin_1aad8ed27;
		}
		_iter_end_1aad8ed27:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48a3679_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48a5857_FieldIns_eq(_1c48a5857_FieldIns *_self_, _1c48a5857_FieldIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48a5857_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c48a67ae_Str(_1c48a6407_StructIns* _self_) {
	_238b51e24_StrBuilder _2397_kind = static__238b52375_New(32LL);;
	_238b528d6_WriteStr(&_2397_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_238b52b8e_WriteByte(&_2397_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aad9337a:;
			if (it != expr_end) {
				jule::I64 _2438_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> *_24311_g = it;
				{
					_238b528d6_WriteStr(&_2397_kind, _1c4a1060a_Str((*((*(_24311_g))))._field_Kind.ptr()));
					if ((_2438_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_238b52b8e_WriteByte(&_2397_kind, ',');
					};
				}
				_iter_next_1aad9337a:;
				++it;
				_2438_i++;
				goto _iter_begin_1aad9337a;
			}
			_iter_end_1aad9337a:;
		};
		_238b52b8e_WriteByte(&_2397_kind, ']');
	};
	return _238b531cd_Str(&_2397_kind);;
}



inline jule::Bool _1c48a6b00_Equal(jule::Ptr<_1c48a6407_StructIns> _self_, jule::Ptr<_1c4a1020e_TypeKind> _25518_other) {
	jule::Ptr<_1c48a6407_StructIns> _2563_s = _1c4a13e16_Struct(_25518_other.ptr());;
	if ((_2563_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2563_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2563_s))._field_Generics.len())) {
		return false;;
	};
	jule::I64 _2697_i = 0LL;;
	for (; (_2697_i < (*_self_.alloc)._field_Generics.len()); (_2697_i)++) {
		{
			if ((!(_1c4a1094b_Equal((*((*(_self_))._field_Generics[_2697_i]))._field_Kind, (*((*(_2563_s))._field_Generics[_2697_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1aa88b071:;
	}
	_iter_end_1aa88b071:;;
	return true;;
}



inline jule::Bool _1c48a70a6_Same(_1c48a6407_StructIns* _self_, jule::Ptr<_1c48a6407_StructIns> _28316_s) {
	if ((((*(_self_))._field_Decl != (*(_28316_s))._field_Decl) || ((*_28316_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa88e0b8:;
		if (it != expr_end) {
			jule::I64 _2877_i = it - expr->begin();
			jule::Ptr<_1c4a0d828_InsGeneric> *_28710_g = it;
			{
				jule::Ptr<_1c4a0d828_InsGeneric> _2884_g2 = (*(_28316_s))._field_Generics[_2877_i];;
				if ((((*((*((*(_28710_g))))._field_Kind))._field_BindIdent != (*(*(_2884_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c4a1094b_Equal((*((*(_28710_g))))._field_Kind, (*(_2884_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aa88e0b8:;
			++it;
			_2877_i++;
			goto _iter_begin_1aa88e0b8;
		}
		_iter_end_1aa88e0b8:;
	};
	return true;;
}



inline jule::Ptr<_1c48b8738_Fn> _1c48a74a2_FindMethod(_1c48a6407_StructIns* _self_, jule::Str _29826_ident, jule::Bool _29838_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa892363:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _29915_f = *it;
			{
				if ((((*(_29915_f))._field_Statically == _29838_statically) && ((*_29915_f.alloc)._field_Ident == _29826_ident))) {
					return _29915_f;;
				};
			}
			_iter_next_1aa892363:;
			++it;
			goto _iter_begin_1aa892363;
		}
		_iter_end_1aa892363:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48a5857_FieldIns> _1c48a77e3_FindField(_1c48a6407_StructIns* _self_, jule::Str _30925_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa893672:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> _31015_f = *it;
			{
				if (((*((*(_31015_f))._field_Decl))._field_Ident == _30925_ident)) {
					return _31015_f;;
				};
			}
			_iter_next_1aa893672:;
			++it;
			goto _iter_begin_1aa893672;
		}
		_iter_end_1aa893672:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c48a7b34_FindStatic(_1c48a6407_StructIns* _self_, jule::Str _32026_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa893e25:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _32115_v = *it;
			{
				if (((*(_32115_v))._field_Ident == _32026_ident)) {
					return _32115_v;;
				};
			}
			_iter_next_1aa893e25:;
			++it;
			goto _iter_begin_1aa893e25;
		}
		_iter_end_1aa893e25:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48a6407_StructIns _Src) {
	_Stream << _1c48a67ae_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48aa362_OperandExprModel_eq(_1c48aa362_OperandExprModel *_self_, _1c48aa362_OperandExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Model == _self_->_field_Model);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48aa362_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48aa85c_BinaryExprModel_eq(_1c48aa85c_BinaryExprModel *_self_, _1c48aa85c_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48aa85c_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48aac36_UnaryExprModel_eq(_1c48aac36_UnaryExprModel *_self_, _1c48aac36_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48aac36_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ab264_StructArgExprModel_eq(_1c48ab264_StructArgExprModel *_self_, _1c48ab264_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48ab264_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ab60a_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ab907_AllocStructLitExprModel_eq(_1c48ab907_AllocStructLitExprModel *_self_, _1c48ab907_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48ab907_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48abe8a_CastingExprModel_eq(_1c48abe8a_CastingExprModel *_self_, _1c48abe8a_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_ExprKind == _self_->_field_ExprKind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48abe8a_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ac83c_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48acc16_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ad1bc_IndexingExprModel_eq(_1c48ad1bc_IndexingExprModel *_self_, _1c48ad1bc_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48ad1bc_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ad673_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ada4c_KeyValPairExprModel_eq(_1c48ada4c_KeyValPairExprModel *_self_, _1c48ada4c_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48ada4c_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ae003_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ae586_SlicingExprModel_eq(_1c48ae586_SlicingExprModel *_self_, _1c48ae586_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48ae586_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48aeb19_TraitSubIdentExprModel_eq(_1c48aeb19_TraitSubIdentExprModel *_self_, _1c48aeb19_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48aeb19_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b04aa_StructSubIdentExprModel_eq(_1c48b04aa_StructSubIdentExprModel *_self_, _1c48b04aa_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b04aa_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b0851_StructStaticIdentExprModel_eq(_1c48b0851_StructStaticIdentExprModel *_self_, _1c48b0851_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b0851_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b0c2a_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b1027_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b1401_BuiltinOutCallExprModel_eq(_1c48b1401_BuiltinOutCallExprModel *_self_, _1c48b1401_BuiltinOutCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b1401_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b17ca_BuiltinOutlnCallExprModel_eq(_1c48b17ca_BuiltinOutlnCallExprModel *_self_, _1c48b17ca_BuiltinOutlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Debug == _self_->_field_Debug);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b17ca_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b1ba4_BuiltinNewCallExprModel_eq(_1c48b1ba4_BuiltinNewCallExprModel *_self_, _1c48b1ba4_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Init == _self_->_field_Init);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b1ba4_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b207d_BuiltinPanicCallExprModel_eq(_1c48b207d_BuiltinPanicCallExprModel *_self_, _1c48b207d_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b207d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b2534_BuiltinAssertCallExprModel_eq(_1c48b2534_BuiltinAssertCallExprModel *_self_, _1c48b2534_BuiltinAssertCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Log == _self_->_field_Log);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b2534_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b29da_BuiltinMakeCallExprModel_eq(_1c48b29da_BuiltinMakeCallExprModel *_self_, _1c48b29da_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b29da_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b2db4_BuiltinAppendCallExprModel_eq(_1c48b2db4_BuiltinAppendCallExprModel *_self_, _1c48b2db4_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b2db4_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b31b1_BuiltinLenCallExprModel_eq(_1c48b31b1_BuiltinLenCallExprModel *_self_, _1c48b31b1_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b31b1_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b34ad_BuiltinCapCallExprModel_eq(_1c48b34ad_BuiltinCapCallExprModel *_self_, _1c48b34ad_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b34ad_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b3887_BuiltinDeleteCallExprModel_eq(_1c48b3887_BuiltinDeleteCallExprModel *_self_, _1c48b3887_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b3887_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b3c61_BuiltinCopyCallExprModel_eq(_1c48b3c61_BuiltinCopyCallExprModel *_self_, _1c48b3c61_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b3c61_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b413a_BuiltinErrorCallExprModel_eq(_1c48b413a_BuiltinErrorCallExprModel *_self_, _1c48b413a_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b413a_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b47de_SizeofExprModel_eq(_1c48b47de_SizeofExprModel *_self_, _1c48b47de_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b47de_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b49cb_AlignofExprModel_eq(_1c48b49cb_AlignofExprModel *_self_, _1c48b49cb_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b49cb_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b4c73_RuneExprModel_eq(_1c48b4c73_RuneExprModel *_self_, _1c48b4c73_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b4c73_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b5070_IntegratedToStrExprModel_eq(_1c48b5070_IntegratedToStrExprModel *_self_, _1c48b5070_IntegratedToStrExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b5070_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b5449_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b5746_FreeExprModel_eq(_1c48b5746_FreeExprModel *_self_, _1c48b5746_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48b5746_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b6549_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48b6c64_Param_eq(_1c48b6c64_Param *_self_, _1c48b6c64_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1c48ba691_ParamIns> _1c48b712c_instance(jule::Ptr<_1c48b6c64_Param> _self_) {
	return jule::new_ptr<_1c48ba691_ParamIns>(_1c48ba691_ParamIns{._field_Decl=_self_, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)});;
}



inline jule::Bool _1c48b73b3_IsSelf(_1c48b6c64_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1c48b7649_IsRef(_1c48b6c64_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b6c64_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c48b8bde_IsVoid(_1c48b8738_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1c48b8e75_IsMethod(_1c48b8738_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1c48b920b_IsEntryPoint(_1c48b8738_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1c48b9492_IsInit(_1c48b8738_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1c48b9728_IsAnon(_1c48b8738_Fn* _self_) {
	return _1c486ed4e_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1c48b99ae_AnyVar(_1c48b8738_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c48b9c45_instanceForce(jule::Ptr<_1c48b8738_Fn> _self_) {
	jule::Ptr<_1c48bb719_FnIns> _1017_ins = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::new_ptr<_1c490ac86_Scope>(_1c490ac86_Scope{._field_Parent=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr)}), ._field_Refers=static__1c48bebc3_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1017_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48ba691_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad9abac:;
		if (it != expr_end) {
			jule::Ptr<_1c48b6c64_Param> _10815_p = *it;
			{
				(*_1017_ins.alloc)._field_Params=jule::append((*_1017_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c48b712c_instance(_10815_p); __jule_collection; }));
			}
			_iter_next_1aad9abac:;
			++it;
			goto _iter_begin_1aad9abac;
		}
		_iter_end_1aad9abac:;
	};
	if (((*((*_1017_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1017_ins.alloc)._field_Result=(*((*(*((*(_1017_ins))._field_Decl))._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _1017_ins;;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c48b9ecb_instance(jule::Ptr<_1c48b8738_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1c48b9c45_instanceForce(_self_);;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c48ba2d9_appendInstance(_1c48b8738_Fn* _self_, jule::Ptr<_1c48bb719_FnIns>* _12935_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1c48bb719_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1c48bb719_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aada0b4b:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _14515_ains = *it;
			{
				if (_1c48bd2a9_Same(_14515_ains.ptr(), (*(_12935_ins)))) {
					return _14515_ains;;
				};
			}
			_iter_next_1aada0b4b:;
			++it;
			goto _iter_begin_1aada0b4b;
		}
		_iter_end_1aada0b4b:;
	};
	{ jule::Slice<jule::Ptr<_1c48bb719_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12935_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48b8738_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48ba691_ParamIns_eq(_1c48ba691_ParamIns *_self_, _1c48ba691_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1c48baa37_Str(_1c48ba691_ParamIns* _self_) {
	_238b51e24_StrBuilder _1677_s = static__238b52375_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_238b528d6_WriteStr(&_1677_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_238b528d6_WriteStr(&_1677_s, jule::Str::lit("&_:", 3));
	};
	if (_1c48b73b3_IsSelf((*(_self_))._field_Decl)) {
		if (_1c48b7649_IsRef((*(_self_))._field_Decl)) {
			_238b52b8e_WriteByte(&_1677_s, '&');
		};
		_238b528d6_WriteStr(&_1677_s, jule::Str::lit("self", 4));
		return _238b531cd_Str(&_1677_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_238b528d6_WriteStr(&_1677_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_238b528d6_WriteStr(&_1677_s, _1c4a1060a_Str((*(_self_))._field_Kind));
	};
	return _238b531cd_Str(&_1677_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ba691_ParamIns _Src) {
	_Stream << _1c48baa37_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48bba8d_Str(_1c48bb719_FnIns* _self_) {
	;
	return _1c48bd5ea_GetKindStr(_self_, false);;
}



inline jule::Bool _1c48bbdce_Equal(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c4a1020e_TypeKind> _21918_other) {
	jule::Ptr<_1c48bb719_FnIns> _2203_f = _1c4a13b80_Fn(_21918_other.ptr());;
	if ((_2203_f == nullptr)) {
		return false;;
	};
	return _1c48bc374_EqualFn(_self_, &(_2203_f));;
}



inline jule::Bool _1c48bc374_EqualFn(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c48bb719_FnIns>* _23021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_23021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1c48b8bde_IsVoid((*(_self_))._field_Decl) != _1c48b8bde_IsVoid((*((*(_23021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1c48ba691_ParamIns>,jule::Ptr<_1c48ba691_ParamIns>> _2403_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1c48ba691_ParamIns>,jule::Ptr<_1c48ba691_ParamIns>>((void*)__jule_anon1aadab162, nullptr, nullptr);;
	if (((*((*(_23021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I64 _2727_i = 0LL;;
	for (; (_2727_i < (*_self_.alloc)._field_Params.len()); (_2727_i)++) {
		{
			if ((!(_2403_checkParams((*(_self_))._field_Params[_2727_i], (*((*(_23021_f))))._field_Params[_2727_i])))) {
				return false;;
			};
		}
	_iter_next_1aadb180a:;
	}
	_iter_end_1aadb180a:;;
	if ((!(_1c48b8bde_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1c4a1094b_Equal((*_self_.alloc)._field_Result, (*((*(_23021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1c48bc6b5_equalTrait(jule::Ptr<_1c48bb719_FnIns> _self_, jule::Ptr<_1c48bb719_FnIns>* _28924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1c48bc374_EqualFn(_self_, _28924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _1c48bc94b_Types(_1c48bb719_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1aadb7a31:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4a146b9_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1aadb7a97:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1aadb75be:;
			{
				return (*(_1c4a146b9_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1aadb74c0:;
	};
}



inline jule::Bool _1c48bcbd2_IsBuiltin(_1c48bb719_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1c48bce68_IsAnon(_1c48bb719_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1c48b9728_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1c48bd2a9_Same(_1c48bb719_FnIns* _self_, jule::Ptr<_1c48bb719_FnIns> _33216_f) {
	if ((((*(_self_))._field_Decl != (*(_33216_f))._field_Decl) || ((*_33216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadba715:;
		if (it != expr_end) {
			jule::I64 _3377_i = it - expr->begin();
			jule::Ptr<_1c4a0d828_InsGeneric> *_33710_g = it;
			{
				jule::Ptr<_1c4a0d828_InsGeneric> _3384_g2 = (*(_33216_f))._field_Generics[_3377_i];;
				if ((((*((*((*(_33710_g))))._field_Kind))._field_BindIdent != (*(*(_3384_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1c4a1094b_Equal((*((*(_33710_g))))._field_Kind, (*(_3384_g2))._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1aadba715:;
			++it;
			_3377_i++;
			goto _iter_begin_1aadba715;
		}
		_iter_end_1aadba715:;
	};
	return true;;
}



inline jule::Str _1c48bd5ea_GetKindStr(_1c48bb719_FnIns* _self_, jule::Bool _34922_ident) {
	_238b51e24_StrBuilder _3507_s = static__238b52375_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_238b528d6_WriteStr(&_3507_s, jule::Str::lit("unsafe ", 7));
	};
	_238b528d6_WriteStr(&_3507_s, jule::Str::lit("fn", 2));
	if ((_34922_ident && ((*(_self_))._field_Decl != nullptr))) {
		_238b52b8e_WriteByte(&_3507_s, ' ');
		_238b528d6_WriteStr(&_3507_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_238b52b8e_WriteByte(&_3507_s, '(');
	jule::I64 _3643_n = (*(_self_))._field_Params.len();;
	if ((_3643_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aadc12dc:;
			if (it != expr_end) {
				jule::I64 _3668_i = it - expr->begin();
				jule::Ptr<_1c48ba691_ParamIns> *_36611_p = it;
				{
					_238b528d6_WriteStr(&_3507_s, _1c48baa37_Str((*(_36611_p)).ptr()));
					if ((_3668_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_238b52b8e_WriteByte(&_3507_s, ',');
					};
				}
				_iter_next_1aadc12dc:;
				++it;
				_3668_i++;
				goto _iter_begin_1aadc12dc;
			}
			_iter_end_1aadc12dc:;
		};
	};
	_238b52b8e_WriteByte(&_3507_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_238b52b8e_WriteByte(&_3507_s, '!');
	};
	if ((!(_1c48b8bde_IsVoid((*(_self_))._field_Decl)))) {
		_238b52b8e_WriteByte(&_3507_s, ':');
		_238b528d6_WriteStr(&_3507_s, _1c4a1060a_Str((*(_self_))._field_Result.ptr()));
	};
	return _238b531cd_Str(&_3507_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48bb719_FnIns _Src) {
	_Stream << _1c48bba8d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c48be8a4_ReferenceStack> static__1c48bebc3_new(void) {
	return jule::new_ptr<_1c48be8a4_ReferenceStack>(_1c48be8a4_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I64 _1c48c00be_Len(_1c48be8a4_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1c48c0410_At(_1c48be8a4_ReferenceStack* _self_, jule::I64 _6818_i) {
	return (*(_self_))._field_buffer[_6818_i];;
}



inline void _1c48c06b8_Push(_1c48be8a4_ReferenceStack* _self_, jule::Any _7324_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7324_ref); };
}



inline jule::Bool _1aab0bca3_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48bb719_FnIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab0d128:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1aab0d128:;
			++it;
			goto _iter_begin_1aab0d128;
		}
		_iter_end_1aab0d128:;
	};
	return false;;
}

inline jule::Bool _1aab22bdc_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c49715b0_Var> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab2401d:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1aab2401d:;
			++it;
			goto _iter_begin_1aab2401d;
		}
		_iter_end_1aab2401d:;
	};
	return false;;
}

inline jule::Bool _1abcc32ba_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48a6407_StructIns> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abcc4684:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1abcc4684:;
			++it;
			goto _iter_begin_1abcc4684;
		}
		_iter_end_1abcc4684:;
	};
	return false;;
}

inline jule::Bool _1ab92665a_Exist(_1c48be8a4_ReferenceStack* _self_, jule::Ptr<_1c48cc1b9_Trait> _7820_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab927958:;
		if (it != expr_end) {
			jule::Any *_7910_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7910_ref)), _7820_t))) {
					return true;;
				};
			}
			_iter_next_1ab927958:;
			++it;
			goto _iter_begin_1ab927958;
		}
		_iter_end_1ab927958:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48be8a4_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c48c0db1_Pass_eq(_1c48c0db1_Pass *_self_, _1c48c0db1_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48c0db1_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1c48c635b_pushErr(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c486c19d_Token>* _33224_token, jule::Str _33239_fmt, jule::Slice<jule::Any> _33252_args) {
	{ jule::Slice<_205a977d7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c494ad09_compilerErr(_33224_token, true, _33239_fmt, _33252_args)); };
}



inline void _1c48c6adc_pushSuggestion(_1c48c5866_symbolBuilder* _self_, jule::Str _34130_fmt, jule::Slice<jule::Any> _34143_args) {
	{
		_1c494c3b0_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34130_fmt, _34143_args);
	};
}



inline jule::Bool _1c48c6ed8_checkCppUseDeclPath(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _34536_decl, jule::Str* _34553_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3463_ext = _2059ee673_Ext((*(_34553_path)));;
	if (((!(_205a8a49a_IsValidHeaderExt(_3463_ext))) && (!(_205a8a764_IsValidCppExt(_3463_ext))))) {
		_1c48c635b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3463_ext, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_239658221_Status> _3533_info = ({
		auto except = static__205a018c8_Of((*(_34553_path)));
		(except.ok()) ? (except.result) : ({{
			_1c48c635b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_239658221_Status>(nullptr);});
	});;
	if (_23965862d_IsDir(_3533_info.ptr())) {
		_1c48c635b_pushErr(_self_, &((*((*(_34536_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_34536_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c72e6_buildCppHeaderImport(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _36541_decl) {
	jule::Str _3667_path = (*((*(_36541_decl))))._field_LinkPath;;
	if ((!(_205a8a1c0_IsStdHeaderPath((*((*(_36541_decl))))._field_LinkPath)))) {
		_3667_path=_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1c487311b_Dir((*((*((*(_36541_decl))))._field_Token))._field_File.ptr()); (*it++) = (*((*(_36541_decl))))._field_LinkPath; __jule_collection; }));
		jule::Bool _3708_ok = _1c48c6ed8_checkCppUseDeclPath(_self_, _36541_decl, &(_3667_path));;
		if ((!(_3708_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2059ee93c_Abs(_3667_path);
			_3667_path = __jule_assign_result.__jule_result_arg0;
			_3708_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3708_ok))) {
			_1c48c635b_pushErr(_self_, &((*((*(_36541_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_36541_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1c492cd1e_ImportInfo>(_1c492cd1e_ImportInfo{._field_Token=(*((*(_36541_decl))))._field_Token, ._field_Path=_3667_path, ._field_LinkPath=(*((*(_36541_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_ImportAll=false, ._field_Selected=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7637_buildStdImport(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _39335_decl) {
	jule::Str _3957_path = (*((*(_39335_decl))))._field_LinkPath.slice(5LL);;
	_3957_path=_2059e99e2_Replace(_3957_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_3957_path=_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _205b5c072_PathStdlib; (*it++) = _3957_path; __jule_collection; }));
	jule::Bool _3989_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2059ee93c_Abs(_3957_path);
		_3957_path = __jule_assign_result.__jule_result_arg0;
		_3989_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_3989_ok))) {
		_1c48c635b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_239658221_Status> _4053_info = ({
		auto except = static__205a018c8_Of(_3957_path);
		(except.ok()) ? (except.result) : ({{
			_1c48c635b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_239658221_Status>(nullptr);});
	});;
	if ((!(_23965862d_IsDir(_4053_info.ptr())))) {
		_1c48c635b_pushErr(_self_, &((*((*(_39335_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_39335_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4153_i = (_2059e556a_FindLast((*((*(_39335_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4163_ident = (*((*(_39335_decl))))._field_LinkPath.slice(_4153_i);;
	return jule::new_ptr<_1c492cd1e_ImportInfo>(_1c492cd1e_ImportInfo{._field_Token=(*((*(_39335_decl))))._field_Token, ._field_Path=_3957_path, ._field_LinkPath=(*((*(_39335_decl))))._field_LinkPath, ._field_Ident=_4163_ident, ._field_Alias=(*((*(_39335_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39335_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Package=jule::new_ptr<_1c4930c45_Package>(_1c4930c45_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7978_buildIdentImport(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _43338_decl) {
	if ((((*((*(_43338_decl))))._field_LinkPath.equal("_", 1) || (_2059e4cb7_Find((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _2059e44c0_HasSuffix((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1c48c635b_pushErr(_self_.ptr(), &((*((*(_43338_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4413_modPath = ((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928e6e_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4413_modPath.len() == 0LL)) {
		_1c48c635b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1c48c6adc_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4487_path = (*((*(_43338_decl))))._field_LinkPath;;
	_4487_path=_2059e99e2_Replace(_4487_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_4487_path=_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _4413_modPath; (*it++) = _4487_path; __jule_collection; }));
	jule::Bool _4529_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2059ee93c_Abs(_4487_path);
		_4487_path = __jule_assign_result.__jule_result_arg0;
		_4529_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_4529_ok))) {
		_1c48c635b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_239658221_Status> _4593_info = ({
		auto except = static__205a018c8_Of(_4487_path);
		(except.ok()) ? (except.result) : ({{
			_1c48c635b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		} jule::Ptr<_239658221_Status>(nullptr);});
	});;
	if ((!(_23965862d_IsDir(_4593_info.ptr())))) {
		_1c48c635b_pushErr(_self_, &((*((*(_43338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_43338_decl))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _4693_i = (_2059e556a_FindLast((*((*(_43338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4703_ident = (*((*(_43338_decl))))._field_LinkPath.slice(_4693_i);;
	return jule::new_ptr<_1c492cd1e_ImportInfo>(_1c492cd1e_ImportInfo{._field_Token=(*((*(_43338_decl))))._field_Token, ._field_Path=_4487_path, ._field_LinkPath=(*((*(_43338_decl))))._field_LinkPath, ._field_Ident=_4703_ident, ._field_Alias=(*((*(_43338_decl))))._field_Alias, ._field_Duplicate=false, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43338_decl))))._field_Full, ._field_Selected=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Package=jule::new_ptr<_1c4930c45_Package>(_1c4930c45_Package{._field_Files=nullptr}), ._field_ModId=0});;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c7cb9_buildImport(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _48733_decl) {
	{
		
		if ((*((*(_48733_decl))))._field_Binded) {
			_case_begin_1aadeb6e1:;
			{
				return _1c48c72e6_buildCppHeaderImport(_self_.ptr(), _48733_decl);;
			}
		}
		else if ((*((*(_48733_decl))))._field_Std) {
			_case_begin_1aadebadc:;
			{
				return _1c48c7637_buildStdImport(_self_.ptr(), _48733_decl);;
			}
		}
		else {
			_case_begin_1aadeb67a:;
			{
				return _1c48c7978_buildIdentImport(_self_, _48733_decl);;
			}
		}
		_match_end_1aadeb57b:;
	};
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48c810a_findUseDecl(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _49828_pkg) {
	return _1c49c91c8_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>>((void*)__jule_anon_1aadeda01, jule::Ptr<__jule_anon_1aadeda01_ctx>::make(__jule_anon_1aadeda01_ctx{._49828_pkg=_49828_pkg}).as<jule::Uintptr>(), __jule_anon_1aadeda01_ctx_handler));;
}



inline __jule_tuple_bool__jule_tuple_bool _1c48c844b_checkDuplicateUseDecl(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _50542_pkg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c492cd1e_ImportInfo> _5067_lpkg = _1c48c810a_findUseDecl(_self_, _50542_pkg);;
	if ((_5067_lpkg == nullptr)) {
		__jule_func_result.__jule_result_arg0 = true;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if (_1c48cb6b3_isImplicitImport(_5067_lpkg)) {
		(*(_5067_lpkg))._field_Token=(*((*(_50542_pkg))))._field_Token;
		__jule_func_result.__jule_result_arg0 = true;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	_1c48c635b_pushErr(_self_, &((*((*(_50542_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50542_pkg))))._field_LinkPath, &__jule_any_type4); __jule_collection; }));
	_1c48c6adc_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1c48c87ae_implImportSelections(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _52441_imp, jule::Ptr<_1c489a880_UseDecl>* _52464_decl) {
	(*((*(_52441_imp))))._field_Selected=(*((*(_52464_decl))))._field_Selected;
	{
		auto expr = &((*((*(_52441_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae02c47:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> _52610_item = *it;
			{
				{
					auto expr = &((*((*(_52441_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aae0363d:;
					if (it != expr_end) {
						jule::Ptr<_1c486c19d_Token> _52711_citem = *it;
						{
							if ((_52610_item == _52711_citem)) {
								goto _iter_end_1aae0363d;
							} else if (((*(_52610_item))._field_Kind == (*(_52711_citem))._field_Kind)) {
								_1c48c635b_pushErr(_self_, &(_52610_item), jule::Str::lit("duplicated selection: @ is already selected", 43), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_52610_item.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
								_1c48c6adc_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1aae0363d;
							};
						}
						_iter_next_1aae0363d:;
						++it;
						goto _iter_begin_1aae0363d;
					}
					_iter_end_1aae0363d:;
				};
			}
			_iter_next_1aae02c47:;
			++it;
			goto _iter_begin_1aae02c47;
		}
		_iter_end_1aae02c47:;
	};
}



inline jule::Str _1c48c8b00_getAsLinkPath(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Str _53934_path) {
	if (_2059e414b_HasPrefix(_53934_path, _205b5c072_PathStdlib)) {
		(_53934_path).mut_slice(_205b5c072_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _2059e99e2_Replace(_53934_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5453_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2059ee93c_Abs(((_1c4929e09_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c4928e6e_GetModPath((*(_self_))._field_importer.data));
		_5453_root = __jule_assign_result.__jule_result_arg0;
	});
	(_53934_path).mut_slice(_5453_root.len());;
	if ((_53934_path[0LL] == 92LLU)) {
		(_53934_path).mut_slice(1LL);;
	};
	return _2059e99e2_Replace(_53934_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1c48c901d_pushCycleError(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c48c5866_symbolBuilder>* _55332_sb, jule::Str _55352_path, _238b51e24_StrBuilder* _55368_message) {
	;
	jule::Str _5553_refersTo = _205a97c49_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c48c8b00_getAsLinkPath(_self_, _1c487311b_Dir((*((*((*(_55332_sb))))._field_table))._field_File.ptr())), &__jule_any_type4); (*it++) = jule::Any(_1c48c8b00_getAsLinkPath(_self_, _55352_path), &__jule_any_type4); __jule_collection; }));;
	jule::Str _5593_m = _238b531cd_Str(_55368_message);;
	_238b528d6_WriteStr(_55368_message, _2059e3c83_Repeat(jule::Str::lit(" ", 1), 7LL));
	_238b528d6_WriteStr(_55368_message, _5553_refersTo);
	_238b52b8e_WriteByte(_55368_message, '\n');
	_238b528d6_WriteStr(_55368_message, _5593_m);
}



inline void _1c48c943b_pushCrossCycleError(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c48c5866_symbolBuilder>* _56637_target, jule::Ptr<_1c492cd1e_ImportInfo>* _56662_imp, jule::Ptr<_1c486c19d_Token>* _56681_errorToken) {
	_238b51e24_StrBuilder _5677_message = static__238b52375_New(32LL);;
	_1c48c901d_pushCycleError(_self_, &(_self_), (*((*(_56662_imp))))._field_Path, &(_5677_message));
	jule::Ptr<_1c48c5866_symbolBuilder> _5717_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1c48c5866_symbolBuilder> _5727_old = _self_;;
	while (((*(_5717_owner))._field_owner != nullptr)) {
		{
			_1c48c901d_pushCycleError(_self_, &((*_5727_old.alloc)._field_owner), _1c487311b_Dir((*((*_5727_old.alloc)._field_table))._field_File.ptr()), &(_5677_message));
			if (((*_5717_owner.alloc)._field_owner == (*(_56637_target)))) {
				_1c48c901d_pushCycleError(_self_, _56637_target, _1c487311b_Dir((*((*(_5717_owner))._field_table))._field_File), &(_5677_message));
				goto _iter_end_1aae0c290;
			};
			_5727_old=_5717_owner;
			_5717_owner=(*_5717_owner.alloc)._field_owner;
		}
	_iter_next_1aae0c290:;
	}
	_iter_end_1aae0c290:;;
	_1c48c635b_pushErr(_self_, _56681_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_238b531cd_Str(&_5677_message), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c48c9837_checkImportCycles(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c492cd1e_ImportInfo> _58934_imp, jule::Ptr<_1c489a880_UseDecl>* _58953_decl) {
	if (((*(_58934_imp))._field_Path == _1c487311b_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1c48c635b_pushErr(_self_, &((*((*(_58953_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c48c8b00_getAsLinkPath(_self_, (*_58934_imp.alloc)._field_Path), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c48c5866_symbolBuilder> _5997_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1aae12b8b:;
	if ((_1c487311b_Dir((*((*(_5997_owner))._field_table))._field_File) == (*_58934_imp.alloc)._field_Path)) {
		_1c48c943b_pushCrossCycleError(_self_, &(_5997_owner), &(_58934_imp), &((*((*(_58953_decl))))._field_Token));
		return false;;
	};
	if (((*(_5997_owner))._field_owner != nullptr)) {
		_5997_owner=(*_5997_owner.alloc)._field_owner;
		goto _julec_label_1aae12b8b;
	};
	return true;;
}



inline void _1c48c9c55_checkPackageAccessibility(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c489a880_UseDecl>* _62042_decl, jule::Str* _62059_mod, jule::Str* _62070_path) {
	if (((((_1c4929e09_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c4928e6e_GetModPath((*(_self_))._field_importer.data) != (*(_62059_mod))) && _2059e8617_Contains((*(_62070_path)), jule::Str::lit("internal", 8)))) {
		_1c48c635b_pushErr(_self_, &((*((*(_62042_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c48ca151_importPackage(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _62635_imp, jule::Ptr<_1c489a880_UseDecl>* _62658_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62635_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c492cd1e_ImportInfo> _6317_port = ((_1c4929e09_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1c4929601_GetImport((*(_self_))._field_importer.data, (*((*(_62635_imp))))._field_Path);;
	if ((_6317_port != nullptr)) {
		(*((*(_62635_imp))))._field_Package=(*_6317_port.alloc)._field_Package;
		(*((*(_62635_imp))))._field_Duplicate=true;
		jule::Str _6364_oldMod = ((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928e6e_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928bd8_SetModPath((*_self_.alloc)._field_importer.data, ((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c49292b0_ModById((*_self_.alloc)._field_importer.data, (*((*(_62635_imp))))._field_ModId));
		_1c48c9c55_checkPackageAccessibility(_self_, _62658_decl, &(_6364_oldMod), &((*_6317_port.alloc)._field_Path));
		((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928bd8_SetModPath((*_self_.alloc)._field_importer.data, _6364_oldMod);
	} else {
		if ((!(_1c48c9837_checkImportCycles(_self_, (*(_62635_imp)), _62658_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6454_oldMod = ((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928e6e_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928bd8_SetModPath((*_self_.alloc)._field_importer.data, _6454_oldMod);
		});;
		if ((*((*(_62635_imp))))._field_Std) {
			((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4928bd8_SetModPath((*_self_.alloc)._field_importer.data, _205b5c072_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1c48807bb_AST>> _6508_asts;
		jule::Slice<_205a977d7_Log> _65018_errors;
		({
			__jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_assign_result = ((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c49299ec_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62635_imp))))._field_Path, (!((*((*(_62635_imp))))._field_Std)));
			_6508_asts = __jule_assign_result.__jule_result_arg0;
			_65018_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_65018_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_65018_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1c48c9c55_checkPackageAccessibility(_self_, _62658_decl, &(_6454_oldMod), &((*((*(_62635_imp))))._field_Path));
		{
			auto expr = &(_6508_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aae1e0a4:;
			if (it != expr_end) {
				jule::Ptr<_1c48807bb_AST> _65816_ast = *it;
				{
					jule::Ptr<_1c49c8bab_SymbolTable> _65913_table = nullptr;;
					({
						__jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c4a30ae2_buildSymbols(&(_65816_ast), &((*_self_.alloc)._field_importer), _self_);
						_65913_table = __jule_assign_result.__jule_result_arg0;
						_65018_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_65018_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_65018_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62635_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62635_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _65913_table; __jule_collection; }));
				}
				_iter_next_1aae1e0a4:;
				++it;
				goto _iter_begin_1aae1e0a4;
			}
			_iter_end_1aae1e0a4:;
		};
	};
	_1c48c87ae_implImportSelections(_self_, _62635_imp, _62658_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c48ca492_importUseDecl(jule::Ptr<_1c48c5866_symbolBuilder> _self_, jule::Ptr<_1c489a880_UseDecl>* _67335_decl) {
	jule::Ptr<_1c492cd1e_ImportInfo> _6747_imp = _1c48c7cb9_buildImport(_self_, _67335_decl);;
	if ((_6747_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6807_ok;
	jule::Bool _68011_implicit;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c48c844b_checkDuplicateUseDecl(_self_, &(_6747_imp));
		_6807_ok = __jule_assign_result.__jule_result_arg0;
		_68011_implicit = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_6807_ok))) {
		return nullptr;;
	};
	_6807_ok=_1c48ca151_importPackage(_self_, &(_6747_imp), _67335_decl);
	if ((!(_68011_implicit))) {
		(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6747_imp; __jule_collection; }));
	};
	if (_6807_ok) {
		((_1c4929e09_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1c4929ca5_Imported((*_self_.alloc)._field_importer.data, _6747_imp);
		return _6747_imp;;
	};
	return nullptr;;
}



inline void _1c48ca690_importUseDecls(jule::Ptr<_1c48c5866_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ada11:;
		if (it != expr_end) {
			jule::Ptr<_1c489a880_UseDecl> _70115_decl = *it;
			{
				_1c48ca492_importUseDecl(_self_, &(_70115_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1aa8ada11;
				};
			}
			_iter_next_1aa8ada11:;
			++it;
			goto _iter_begin_1aa8ada11;
		}
		_iter_end_1aa8ada11:;
	};
}



inline void _1c48ca948_appendNode(_1c48c5866_symbolBuilder* _self_, _1c4881778_Node* _71031_node) {
	{
		auto &_match_expr{ (*(_71031_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1aa8ae02d:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4905830_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c48c52a0_buildImpl((*(_71031_node))._field_Data.cast_ptr<_1c489e3de_Impl>(&__jule_any_type11)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1aa8b0073:;
			{
				jule::Ptr<_1c4a0e41c_TypeAlias> _7158_ta = _1c48c17eb_buildTypeAlias((*(_71031_node))._field_Data.cast_ptr<_1c4899296_TypeAliasDecl>(&__jule_any_type12));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7158_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aa8b00d9:;
			{
				jule::Ptr<_1c48a3679_Struct> _7188_srct = _1c48c218c_buildStruct((*(_71031_node))._field_Data.cast_ptr<_1c489d542_StructDecl>(&__jule_any_type13));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a3679_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7188_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aa8b0150:;
			{
				jule::Ptr<_1c48b8738_Fn> _7218_f = _1c48c2d3b_buildFunc((*(_71031_node))._field_Data.cast_ptr<_1c4894439_FnDecl>(&__jule_any_type14));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48b8738_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7218_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aa8b01b6:;
			{
				jule::Ptr<_1c48cc1b9_Trait> _7248_t = _1c48c3688_buildTrait((*(_71031_node))._field_Data.cast_ptr<_1c489dc7e_TraitDecl>(&__jule_any_type15));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7248_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aa8b022c:;
			{
				jule::Ptr<_1c49715b0_Var> _7278_v = _1c48c4c1c_buildVar((*(_71031_node))._field_Data.cast_ptr<_1c48955e4_VarDecl>(&__jule_any_type16));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7278_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1aa8b086a:;
			{
				jule::Ptr<_1c48ce8c5_Enum> _7308_e = _1c48c4216_buildEnum((*(_71031_node))._field_Data.cast_ptr<_1c489b8e7_EnumDecl>(&__jule_any_type17));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48ce8c5_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7308_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1aa8b08d1:;
			{
				jule::Ptr<_1c48d10d0_TypeEnum> _7338_e = _1c48c4953_buildTypeEnum((*(_71031_node))._field_Data.cast_ptr<_1c489c882_TypeEnumDecl>(&__jule_any_type18));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7338_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1aa8aee63:;
			{
				_1c48c635b_pushErr(_self_, &((*(_71031_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa8aee0d:;
	};
}



inline void _1c48cab46_appendNodes(_1c48c5866_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae29279:;
		if (it != expr_end) {
			_1c4881778_Node _74115_node = *it;
			{
				_1c48ca948_appendNode(_self_, &(_74115_node));
			}
			_iter_next_1aae29279:;
			++it;
			goto _iter_begin_1aae29279;
		}
		_iter_end_1aae29279:;
	};
}



inline void _1c48cadee_pushDirectivePass(_1c48c5866_symbolBuilder* _self_, jule::Ptr<_1c4881b96_Directive>* _74638_d) {
	if (((*((*(_74638_d))))._field_Args.len() == 0LL)) {
		_1c48c635b_pushErr(_self_, &((*((*(_74638_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_74638_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1c486c19d_Token> _7514_arg = (*((*(_74638_d))))._field_Args[1LL];;
		_1c48c635b_pushErr(_self_, &(_7514_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_74638_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c486c19d_Token> _7553_arg = (*((*(_74638_d))))._field_Args[0LL];;
	if (((*(_7553_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c48c635b_pushErr(_self_, &(_7553_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7553_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c48c635b_pushErr(_self_, &(_7553_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1c48c0db1_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c48c0db1_Pass{._field_Token=(*((*(_74638_d))))._field_Tag, ._field_Text=(*_7553_arg.alloc)._field_Kind.slice(1LL, ((*_7553_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1c48cb0ec_appendTopDirectives(_1c48c5866_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae2e911:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _77315_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_77315_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1aae313b3:;
						{
							_1c48cadee_pushDirectivePass(_self_, &(_77315_d));
						}
					}
					_match_end_1aae312e7:;
				};
			}
			_iter_next_1aae2e911:;
			++it;
			goto _iter_begin_1aae2e911;
		}
		_iter_end_1aae2e911:;
	};
}



inline void _1c48cb2ea_build(jule::Ptr<_1c48c5866_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1c49c8bab_SymbolTable>(_1c49c8bab_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1c48c0db1_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1c48b8738_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1c48ce8c5_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1c4905830_Impl>>(nullptr)});
	_1c48cb0ec_appendTopDirectives(_self_);
	_1c48ca690_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1c48cab46_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48c5866_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c48cc5b5_Str(_1c48cc1b9_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c48cc906_Equal(jule::Ptr<_1c48cc1b9_Trait> _self_, jule::Ptr<_1c4a1020e_TypeKind> _2518_other) {
	jule::Ptr<_1c48cc1b9_Trait> _263_trt = _1c4a1419c_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1c48b8738_Fn> _1c48ccd9b_FindMethod(_1c48cc1b9_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae34c8a:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1aae34c8a:;
			++it;
			goto _iter_begin_1aae34c8a;
		}
		_iter_end_1aae34c8a:;
	};
	return _1c48cd52d_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1c48b8738_Fn> _1c48cd52d_findMethodInherit(_1c48cc1b9_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae36eac:;
		if (it != expr_end) {
			jule::Ptr<_1c4a173d1_TypeSymbol> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Kind == nullptr)) {
					goto _iter_next_1aae36eac;
				};
				jule::Ptr<_1c48cc1b9_Trait> _608_t = _1c4a1419c_Trait((*_5615_i.alloc)._field_Kind.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1c48b8738_Fn> _629_f2 = _1c48ccd9b_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1aae36eac:;
			++it;
			goto _iter_begin_1aae36eac;
		}
		_iter_end_1aae36eac:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48cc1b9_Trait _Src) {
	_Stream << _1c48cc5b5_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48cdd58_EnumItem_eq(_1c48cdd58_EnumItem *_self_, _1c48cdd58_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1c48ce243_AutoExpr(_1c48cdd58_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48cdd58_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c48cec7c_Str(_1c48ce8c5_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c48d00bd_Equal(jule::Ptr<_1c48ce8c5_Enum> _self_, jule::Ptr<_1c4a1020e_TypeKind> _3818_other) {
	jule::Ptr<_1c48ce8c5_Enum> _393_enm = _1c4a13146_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1c48cdd58_EnumItem> _1c48d04ec_FindItem(_1c48ce8c5_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae3b6ba:;
		if (it != expr_end) {
			jule::Ptr<_1c48cdd58_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1aae3b6ba:;
			++it;
			goto _iter_begin_1aae3b6ba;
		}
		_iter_end_1aae3b6ba:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ce8c5_Enum _Src) {
	_Stream << _1c48cec7c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48d0a08_TypeEnumItem_eq(_1c48d0a08_TypeEnumItem *_self_, _1c48d0a08_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c48d0a08_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1c48d1454_Str(_1c48d10d0_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1c48d1795_Equal(jule::Ptr<_1c48d10d0_TypeEnum> _self_, jule::Ptr<_1c4a1020e_TypeKind> _8018_other) {
	jule::Ptr<_1c48d10d0_TypeEnum> _813_tenm = _1c4a133cc_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1c48d0a08_TypeEnumItem> _1c48d1bc4_FindItem(_1c48d10d0_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae3d942:;
		if (it != expr_end) {
			jule::Ptr<_1c48d0a08_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1aae3d942:;
			++it;
			goto _iter_begin_1aae3d942;
		}
		_iter_end_1aae3d942:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d10d0_TypeEnum _Src) {
	_Stream << _1c48d1454_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48d42c0_comptimeRange_eq(_1c48d42c0_comptimeRange *_self_, _1c48d42c0_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1c48d4677_Str(_1c48d42c0_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1c48d49b8_Equal(jule::Ptr<_1c48d42c0_comptimeRange> _self_, jule::Ptr<_1c4a1020e_TypeKind> _3618_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d42c0_comptimeRange _Src) {
	_Stream << _1c48d4677_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48d4c93_comptimeStructField_eq(_1c48d4c93_comptimeStructField *_self_, _1c48d4c93_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c48d518e_Str(_1c48d4c93_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1c48d54d0_Equal(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c4a1020e_TypeKind> _4618_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d5a74__Name(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _5023_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _5038_fc) {
	if (((*((*(_5038_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_5023_e)).ptr(), (*((*((*(_5038_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _557_constant = static__1dc54614a_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_557_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_557_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d5e70__Type(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _6327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _6342_fc) {
	if (((*((*(_6342_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_6327_e)).ptr(), (*((*((*(_6342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_6327_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d636b__Public(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Ptr<_1c49d0c4b_eval>* _7129_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _7144_fc) {
	if (((*((*(_7144_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_7129_e)).ptr(), (*((*((*(_7144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _767_constant = static__1dc545d81_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_767_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_767_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d6679_subIdent(jule::Ptr<_1c48d4c93_comptimeStructField> _self_, jule::Str* _8426_ident) {
	{
		auto &_match_expr{ (*(_8426_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aae4b576:;
			{
				jule::Ptr<_1c48bb719_FnIns> _878_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aae4c863, jule::Ptr<__jule_anon_1aae4c863_ctx>::make(__jule_anon_1aae4c863_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aae4c863_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aae4b620:;
			{
				jule::Ptr<_1c48bb719_FnIns> _948_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aae4e7bb, jule::Ptr<__jule_anon_1aae4e7bb_ctx>::make(__jule_anon_1aae4e7bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aae4e7bb_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aae4b697:;
			{
				jule::Ptr<_1c48bb719_FnIns> _1018_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aae51724, jule::Ptr<__jule_anon_1aae51724_ctx>::make(__jule_anon_1aae51724_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aae51724_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_1018_method));;
			}
		}
		else {
			_case_begin_1aae4b28a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aae4b411:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d4c93_comptimeStructField _Src) {
	_Stream << _1c48d518e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48d6d0b_Str(_1c48d6954_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1c48d714c_Equal(jule::Ptr<_1c48d6954_comptimeStructFields> _self_, jule::Ptr<_1c4a1020e_TypeKind> _12018_other) {
	return false;;
}



inline void _1c48d75c0_ready(_1c48d6954_comptimeStructFields* _self_, jule::Ptr<_1c49715b0_Var>* _12426_keyA, jule::Ptr<_1c49715b0_Var>* _12443_keyB) {
	if (((*(_12426_keyA)) != nullptr)) {
		(*((*(_12426_keyA))))._field_Constant=true;
		(*((*(_12426_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_12426_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12443_keyB)) != nullptr)) {
		(*((*(_12443_keyB))))._field_Constant=true;
		(*((*(_12443_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_12443_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d4c93_comptimeStructField>(_1c48d4c93_comptimeStructField{._field_field=jule::Ptr<_1c48a5857_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data6)})});
	};
}



inline void _1c48d79dd_step(_1c48d6954_comptimeStructFields* _self_, jule::I64 _14520_i, jule::Ptr<_1c49715b0_Var>* _14533_keyA, jule::Ptr<_1c49715b0_Var>* _14550_keyB) {
	if (((*(_14533_keyA)) != nullptr)) {
		(*((*((*((*(_14533_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_14520_i));
		(*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_14533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14550_keyB)) != nullptr)) {
		(*(_1c4a14e6c_comptimeStructField((*((*((*(_14550_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14520_i];
	};
}



inline jule::I64 _1c48d7c74_len(_1c48d6954_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d6954_comptimeStructFields _Src) {
	_Stream << _1c48d6d0b_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48d804e_comptimeStatic_eq(_1c48d804e_comptimeStatic *_self_, _1c48d804e_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c48d8406_Str(_1c48d804e_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1c48d8747_Equal(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c4a1020e_TypeKind> _16918_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d8d74__Name(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _17323_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _17338_fc) {
	if (((*((*(_17338_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_17323_e)).ptr(), (*((*((*(_17338_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _1787_constant = static__1dc54614a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1787_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_1787_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d9270__Type(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _18627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _18642_fc) {
	if (((*((*(_18642_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_18627_e)).ptr(), (*((*((*(_18642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_18627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d966b__Public(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Ptr<_1c49d0c4b_eval>* _19429_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _19444_fc) {
	if (((*((*(_19444_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_19429_e)).ptr(), (*((*((*(_19444_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _1997_constant = static__1dc545d81_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1997_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_1997_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48d99ac_subIdent(jule::Ptr<_1c48d804e_comptimeStatic> _self_, jule::Str* _20726_ident) {
	{
		auto &_match_expr{ (*(_20726_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aa9e0deb:;
			{
				jule::Ptr<_1c48bb719_FnIns> _2108_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aa9e220a, jule::Ptr<__jule_anon_1aa9e220a_ctx>::make(__jule_anon_1aa9e220a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa9e220a_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_2108_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aa9e0e95:;
			{
				jule::Ptr<_1c48bb719_FnIns> _2178_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aa9e41a7, jule::Ptr<__jule_anon_1aa9e41a7_ctx>::make(__jule_anon_1aa9e41a7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa9e41a7_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_2178_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aa9e101c:;
			{
				jule::Ptr<_1c48bb719_FnIns> _2248_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aa9e6110, jule::Ptr<__jule_anon_1aa9e6110_ctx>::make(__jule_anon_1aa9e6110_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aa9e6110_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_2248_method));;
			}
		}
		else {
			_case_begin_1aa9e0b10:;
			{
				return nullptr;;
			}
		}
		_match_end_1aa9e0c86:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d804e_comptimeStatic _Src) {
	_Stream << _1c48d8406_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48da0b7_Str(_1c48d9c10_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1c48da408_Equal(jule::Ptr<_1c48d9c10_comptimeStatics> _self_, jule::Ptr<_1c4a1020e_TypeKind> _24318_other) {
	return false;;
}



inline void _1c48da87b_ready(_1c48d9c10_comptimeStatics* _self_, jule::Ptr<_1c49715b0_Var>* _24726_keyA, jule::Ptr<_1c49715b0_Var>* _24743_keyB) {
	if (((*(_24726_keyA)) != nullptr)) {
		(*((*(_24726_keyA))))._field_Constant=true;
		(*((*(_24726_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_24726_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24743_keyB)) != nullptr)) {
		(*((*(_24743_keyB))))._field_Constant=true;
		(*((*(_24743_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_24743_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d804e_comptimeStatic>(_1c48d804e_comptimeStatic{._field_field=jule::Ptr<_1c49715b0_Var>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data8)})});
	};
}



inline void _1c48dac99_step(_1c48d9c10_comptimeStatics* _self_, jule::I64 _26820_i, jule::Ptr<_1c49715b0_Var>* _26833_keyA, jule::Ptr<_1c49715b0_Var>* _26850_keyB) {
	if (((*(_26833_keyA)) != nullptr)) {
		(*((*((*((*(_26833_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_26820_i));
		(*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_26833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26850_keyB)) != nullptr)) {
		(*(_1c4a16776_comptimeStatic((*((*((*(_26850_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26820_i];
	};
}



inline jule::I64 _1c48db030_len(_1c48d9c10_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48d9c10_comptimeStatics _Src) {
	_Stream << _1c48da0b7_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48db30a_comptimeEnumField_eq(_1c48db30a_comptimeEnumField *_self_, _1c48db30a_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1c48db7c2_Str(_1c48db30a_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1c48dbb13_Equal(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Ptr<_1c4a1020e_TypeKind> _29218_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48dc086__Name(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Ptr<_1c49d0c4b_eval>* _29623_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _29638_fc) {
	if (((*((*(_29638_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_29623_e)).ptr(), (*((*((*(_29638_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _3017_constant = static__1dc54614a_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3017_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_3017_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48dc3c7_subIdent(jule::Ptr<_1c48db30a_comptimeEnumField> _self_, jule::Str* _30926_ident) {
	{
		auto &_match_expr{ (*(_30926_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aaa01cb9:;
			{
				jule::Ptr<_1c48bb719_FnIns> _3128_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaa02e96, jule::Ptr<__jule_anon_1aaa02e96_ctx>::make(__jule_anon_1aaa02e96_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaa02e96_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_3128_method));;
			}
		}
		else {
			_case_begin_1aaa019de:;
			{
				return nullptr;;
			}
		}
		_match_end_1aaa01b65:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48db30a_comptimeEnumField _Src) {
	_Stream << _1c48db7c2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48dca59_Str(_1c48dc6a2_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1c48dcd9a_Equal(jule::Ptr<_1c48dc6a2_comptimeEnumFields> _self_, jule::Ptr<_1c4a1020e_TypeKind> _33118_other) {
	return false;;
}



inline void _1c48dd31d_ready(_1c48dc6a2_comptimeEnumFields* _self_, jule::Ptr<_1c49715b0_Var>* _33526_keyA, jule::Ptr<_1c49715b0_Var>* _33543_keyB) {
	if (((*(_33526_keyA)) != nullptr)) {
		(*((*(_33526_keyA))))._field_Constant=true;
		(*((*(_33526_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_33526_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33543_keyB)) != nullptr)) {
		(*((*(_33543_keyB))))._field_Constant=true;
		(*((*(_33543_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_33543_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48db30a_comptimeEnumField>(_1c48db30a_comptimeEnumField{._field_field=jule::Ptr<_1c48cdd58_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data10)})});
	};
}



inline void _1c48dd73b_step(_1c48dc6a2_comptimeEnumFields* _self_, jule::I64 _35620_i, jule::Ptr<_1c49715b0_Var>* _35633_keyA, jule::Ptr<_1c49715b0_Var>* _35650_keyB) {
	if (((*(_35633_keyA)) != nullptr)) {
		(*((*((*((*(_35633_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_35620_i));
		(*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_35633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35650_keyB)) != nullptr)) {
		(*(_1c4a15489_comptimeEnumField((*((*((*(_35650_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35620_i];
	};
}



inline jule::I64 _1c48dd9c2_len(_1c48dc6a2_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48dc6a2_comptimeEnumFields _Src) {
	_Stream << _1c48dca59_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48ddc9c_comptimeParam_eq(_1c48ddc9c_comptimeParam *_self_, _1c48ddc9c_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1c48de154_Str(_1c48ddc9c_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1c48de495_Equal(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c4a1020e_TypeKind> _38018_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48dec04__Name(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _38423_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _38438_fc) {
	if (((*((*(_38438_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_38423_e)).ptr(), (*((*((*(_38438_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _3897_constant = static__1dc54614a_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3897_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_3897_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e0100__Type(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _39727_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _39742_fc) {
	if (((*((*(_39742_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_39727_e)).ptr(), (*((*((*(_39742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_39727_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e04eb__Variadic(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _40531_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _40546_fc) {
	if (((*((*(_40546_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_40531_e)).ptr(), (*((*((*(_40546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _4107_constant = static__1dc545d81_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4107_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_4107_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e08e7__Reference(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Ptr<_1c49d0c4b_eval>* _41832_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _41847_fc) {
	if (((*((*(_41847_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_41832_e)).ptr(), (*((*((*(_41847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _4237_constant = static__1dc545d81_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4237_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_4237_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e0c38_subIdent(jule::Ptr<_1c48ddc9c_comptimeParam> _self_, jule::Str* _43126_ident) {
	{
		auto &_match_expr{ (*(_43126_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1aaa166d5:;
			{
				jule::Ptr<_1c48bb719_FnIns> _4348_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaa17a16, jule::Ptr<__jule_anon_1aaa17a16_ctx>::make(__jule_anon_1aaa17a16_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaa17a16_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_4348_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1aaa1674b:;
			{
				jule::Ptr<_1c48bb719_FnIns> _4418_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaa1996e, jule::Ptr<__jule_anon_1aaa1996e_ctx>::make(__jule_anon_1aaa1996e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaa1996e_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_4418_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1aaa167c3:;
			{
				jule::Ptr<_1c48bb719_FnIns> _4488_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaa1b8c7, jule::Ptr<__jule_anon_1aaa1b8c7_ctx>::make(__jule_anon_1aaa1b8c7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaa1b8c7_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_4488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1aaa1684a:;
			{
				jule::Ptr<_1c48bb719_FnIns> _4558_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaa1d830, jule::Ptr<__jule_anon_1aaa1d830_ctx>::make(__jule_anon_1aaa1d830_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaa1d830_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_4558_method));;
			}
		}
		else {
			_case_begin_1aaa163a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1aaa1652b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ddc9c_comptimeParam _Src) {
	_Stream << _1c48de154_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48e12aa_Str(_1c48e0e36_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1c48e15eb_Equal(jule::Ptr<_1c48e0e36_comptimeParams> _self_, jule::Ptr<_1c4a1020e_TypeKind> _47418_other) {
	return false;;
}



inline void _1c48e1a6e_ready(_1c48e0e36_comptimeParams* _self_, jule::Ptr<_1c49715b0_Var>* _47826_keyA, jule::Ptr<_1c49715b0_Var>* _47843_keyB) {
	if (((*(_47826_keyA)) != nullptr)) {
		(*((*(_47826_keyA))))._field_Constant=true;
		(*((*(_47826_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_47826_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47843_keyB)) != nullptr)) {
		(*((*(_47843_keyB))))._field_Constant=true;
		(*((*(_47843_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_47843_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48ddc9c_comptimeParam>(_1c48ddc9c_comptimeParam{._field_param=jule::Ptr<_1c48ba691_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data12)})});
	};
}



inline void _1c48e1e8c_step(_1c48e0e36_comptimeParams* _self_, jule::I64 _49920_i, jule::Ptr<_1c49715b0_Var>* _49933_keyA, jule::Ptr<_1c49715b0_Var>* _49950_keyB) {
	if (((*(_49933_keyA)) != nullptr)) {
		(*((*((*((*(_49933_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_49920_i));
		(*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_49933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49950_keyB)) != nullptr)) {
		(*(_1c4a159a6_comptimeParam((*((*((*(_49950_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49920_i];
	};
}



inline jule::I64 _1c48e2223_len(_1c48e0e36_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48e0e36_comptimeParams _Src) {
	_Stream << _1c48e12aa_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48e28a5_Str(_1c48e24ed_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1c48e2be6_Equal(jule::Ptr<_1c48e24ed_comptimeTypeInfos> _self_, jule::Ptr<_1c4a1020e_TypeKind> _52318_other) {
	return false;;
}



inline void _1c48e3169_ready(_1c48e24ed_comptimeTypeInfos* _self_, jule::Ptr<_1c49715b0_Var>* _52726_keyA, jule::Ptr<_1c49715b0_Var>* _52743_keyB) {
	if (((*(_52726_keyA)) != nullptr)) {
		(*((*(_52726_keyA))))._field_Constant=true;
		(*((*(_52726_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_52726_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52743_keyB)) != nullptr)) {
		(*((*(_52743_keyB))))._field_Constant=true;
		(*((*(_52743_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_52743_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48e3ae8_comptimeTypeInfo>(_1c48e3ae8_comptimeTypeInfo{._field_base=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data15)})});
	};
}



inline void _1c48e3587_step(_1c48e24ed_comptimeTypeInfos* _self_, jule::I64 _54820_i, jule::Ptr<_1c49715b0_Var>* _54833_keyA, jule::Ptr<_1c49715b0_Var>* _54850_keyB) {
	if (((*(_54833_keyA)) != nullptr)) {
		(*((*((*((*(_54833_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_54820_i));
		(*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_54833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54850_keyB)) != nullptr)) {
		(*((*((*((*(_54850_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54820_i], (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data15);
	};
}



inline jule::I64 _1c48e381d_len(_1c48e24ed_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48e24ed_comptimeTypeInfos _Src) {
	_Stream << _1c48e28a5_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48e3ae8_comptimeTypeInfo_eq(_1c48e3ae8_comptimeTypeInfo *_self_, _1c48e3ae8_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1c48e3ea0_Str(_1c48e3ae8_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1c4a1060a_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1c48e42e1_Equal(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c4a1020e_TypeKind> _57218_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e4940__Str(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _57622_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _57637_fc) {
	if (((*((*(_57637_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_57622_e)).ptr(), (*((*((*(_57637_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _5817_constant = static__1dc54614a_NewStr(_1c4a1060a_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5817_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_5817_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e4d3b__Kind(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _58927_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _58942_fc) {
	if (((*((*(_58942_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_58927_e)).ptr(), (*((*((*(_58942_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48ce8c5_Enum> _5947_enm = _1c492eaac_FindEnum(_1c4901122_findComptimePackage(&((*((*(_58927_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1c48cdd58_EnumItem> _59511_item = nullptr;;
	{
		
		if (_1c4a115a6_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1aaa34109:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1c4a13e16_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa3401b:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1c4a1419c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa33bca:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1c4a12db0_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa33c41:;
			{
				if (_1c4a20b48_IsUnsafe(_1c4a12db0_Ptr((*(_self_))._field_base).ptr())) {
					_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1c4a12b29_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa33ca7:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1c4a13146_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa33d1d:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1c4a14433_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa34868:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1c4a138e9_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa348ce:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1c4a13663_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa34945:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1c4a13b80_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa349ab:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1c4a146b9_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa34a22:;
			{
				_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1c4a12893_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa34a99:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _6244_prim = _1c4a12893_Prim((*(_self_))._field_base);;
				{
					
					if (_1c4a1b539_IsAny(_6244_prim.ptr())) {
						_case_begin_1aaa40b0a:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1c4a1b01c_IsBool(_6244_prim.ptr())) {
						_case_begin_1aaa40a1c:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1c4a1b2a3_IsStr(_6244_prim.ptr())) {
						_case_begin_1aaa4080d:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1c4a1a24c_IsF32(_6244_prim.ptr())) {
						_case_begin_1aaa40874:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1c4a1a4d3_IsF64(_6244_prim.ptr())) {
						_case_begin_1aaa408da:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1c4a18bc9_IsI8(_6244_prim.ptr())) {
						_case_begin_1aaa40951:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1c4a18e60_IsI16(_6244_prim.ptr())) {
						_case_begin_1aaa41369:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1c4a191e6_IsI32(_6244_prim.ptr())) {
						_case_begin_1aaa413e1:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1c4a1947c_IsI64(_6244_prim.ptr())) {
						_case_begin_1aaa41468:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1c4a19713_IsU8(_6244_prim.ptr())) {
						_case_begin_1aaa414e0:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1c4a19999_IsU16(_6244_prim.ptr())) {
						_case_begin_1aaa41567:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1c4a19c30_IsU32(_6244_prim.ptr())) {
						_case_begin_1aaa415de:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1c4a19eb6_IsU64(_6244_prim.ptr())) {
						_case_begin_1aaa41666:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1c4a1a769_IsInt(_6244_prim.ptr())) {
						_case_begin_1aaa416dd:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1c4a1aa00_IsUint(_6244_prim.ptr())) {
						_case_begin_1aaa41765:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1c4a1ac86_IsUintptr(_6244_prim.ptr())) {
						_case_begin_1aaa417dc:;
						{
							_59511_item=_1c48d04ec_FindItem(_5947_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1aaa40665:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c4a1060a_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:5"));;
						}
					}
					_match_end_1aaa405ee:;
				};
			}
		}
		else {
			_case_begin_1aaa33b64:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1c4a1060a_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:4"));;
			}
		}
		_match_end_1aaa33aba:;
	};
	return _1c4a0b64a_evalEnumStatic(&(_5947_enm), &(_59511_item), &((*((*(_58942_fc))))._field_Token));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e5237__Bits(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _66727_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _66742_fc) {
	if (((*((*(_66742_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_66727_e)).ptr(), (*((*((*(_66742_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _6723_prim = _1c4a12893_Prim((*(_self_))._field_base.ptr());;
	if ((_6723_prim == nullptr)) {
		_1c49d12ce_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _6773_n = _1dc53925e_BitsizeOf((*(_6723_prim))._field_Kind);;
	if ((_6773_n == -1LL)) {
		_1c49d12ce_pushErr((*(_66727_e)).ptr(), (*((*(_66742_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _6827_constant = static__1dc5457ed_NewI64(static_cast<jule::I64>(_6773_n));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_6827_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_6827_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e5633__Elem(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _69027_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _69042_fc) {
	if (((*((*(_69042_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_69027_e)).ptr(), (*((*((*(_69042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a200cb_Ptr> _6957_ptr = _1c4a12db0_Ptr((*(_self_))._field_base.ptr());;
	if ((_6957_ptr != nullptr)) {
		if (_1c4a20b48_IsUnsafe(_6957_ptr)) {
			_1c49d12ce_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_6957_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c4a1b814_Sptr> _7037_sptr = _1c4a12b29_Sptr((*(_self_))._field_base);;
	if ((_7037_sptr != nullptr)) {
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7037_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _7077_slice = _1c4a138e9_Slc((*(_self_))._field_base);;
	if ((_7077_slice != nullptr)) {
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7077_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1c4a1e608_Arr> _7117_array = _1c4a13663_Arr((*(_self_))._field_base);;
	if ((_7117_array != nullptr)) {
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*_7117_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1c48ce8c5_Enum> _7157_enm = _1c4a13146_Enum((*(_self_))._field_base);;
	if ((_7157_enm != nullptr)) {
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_69027_e))))._field_s), &((*((*_7157_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1c49d12ce_pushErr((*(_69027_e)).ptr(), (*((*(_69042_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e5a2e__Size(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _72327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _72342_fc) {
	if (((*((*(_72342_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_72327_e)).ptr(), (*((*((*(_72342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a1e608_Arr> _7287_arr = _1c4a13663_Arr((*(_self_))._field_base.ptr());;
	if ((_7287_arr == nullptr)) {
		_1c49d12ce_pushErr((*(_72327_e)).ptr(), (*((*(_72342_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _7337_constant = static__1dc5457ed_NewI64(static_cast<jule::I64>((*(_7287_arr))._field_N));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd16da_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7337_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_7337_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e5e2a__Key(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _74126_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _74141_fc) {
	if (((*((*(_74141_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_74126_e)).ptr(), (*((*((*(_74141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a1d97b_Map> _7467_m = _1c4a14433_Map((*(_self_))._field_base.ptr());;
	if ((_7467_m == nullptr)) {
		_1c49d12ce_pushErr((*(_74126_e)).ptr(), (*((*(_74141_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_74126_e))))._field_s), &((*(_7467_m))._field_Key));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e6326__Value(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _75428_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _75443_fc) {
	if (((*((*(_75443_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_75428_e)).ptr(), (*((*((*(_75443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a1d97b_Map> _7597_m = _1c4a14433_Map((*(_self_))._field_base.ptr());;
	if ((_7597_m == nullptr)) {
		_1c49d12ce_pushErr((*(_75428_e)).ptr(), (*((*(_75443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_75428_e))))._field_s), &((*(_7597_m))._field_Val));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e6722__Fields(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _76729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _76744_fc) {
	if (((*((*(_76744_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_76729_e)).ptr(), (*((*((*(_76744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48a6407_StructIns> _7727_s = _1c4a13e16_Struct((*(_self_))._field_base.ptr());;
	if ((_7727_s != nullptr)) {
		return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d6954_comptimeStructFields>(_1c48d6954_comptimeStructFields{._field_fields=(*_7727_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	};
	jule::Ptr<_1c48ce8c5_Enum> _7827_enm = _1c4a13146_Enum((*(_self_))._field_base);;
	if ((_7827_enm != nullptr)) {
		return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48dc6a2_comptimeEnumFields>(_1c48dc6a2_comptimeEnumFields{._field_fields=(*_7827_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	};
	_1c49d12ce_pushErr((*(_76729_e)).ptr(), (*((*(_76744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e6b1d__Statics(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _79630_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _79645_fc) {
	if (((*((*(_79645_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_79630_e)).ptr(), (*((*((*(_79645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48a6407_StructIns> _8017_s = _1c4a13e16_Struct((*(_self_))._field_base.ptr());;
	if ((_8017_s == nullptr)) {
		_1c49d12ce_pushErr((*(_79630_e)).ptr(), (*((*(_79645_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d9c10_comptimeStatics>(_1c48d9c10_comptimeStatics{._field_fields=(*(_8017_s))._field_Statics}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e7019__Public(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _81529_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _81544_fc) {
	if (((*((*(_81544_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_81529_e)).ptr(), (*((*((*(_81544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _8207_public = false;;
	{
		
		if ((_1c4a13e16_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa73d3b:;
			{
				_8207_public=(*((*(_1c4a13e16_Struct((*(_self_))._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1c4a1419c_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa74e2a:;
			{
				_8207_public=(*(_1c4a1419c_Trait((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1c4a13146_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa74e91:;
			{
				_8207_public=(*(_1c4a13146_Enum((*(_self_))._field_base)))._field_Public;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1aaa73a72:;
			{
				_8207_public=(*(_1c4a133cc_TypeEnum((*(_self_))._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1aaa73a0b:;
			{
				_1c49d12ce_pushErr((*(_81529_e)).ptr(), (*((*(_81544_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1aaa738c9:;
	};
	jule::Ptr<_1dc54537a_Const> _8347_constant = static__1dc545d81_NewBool(_8207_public);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8347_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_8347_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e7415__Binded(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _84229_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _84244_fc) {
	if (((*((*(_84244_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_84229_e)).ptr(), (*((*((*(_84244_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _8477_constant = static__1dc545d81_NewBool(_1c4a11089_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8477_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_8477_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e7811__Ordered(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _85526_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _85541_fc) {
	if (((*((*(_85541_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_85526_e)).ptr(), (*((*((*(_85541_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _8607_constant = static__1dc545d81_NewBool(_1c4a11d59_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8607_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_8607_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e7c0c__Comparable(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _86829_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _86844_fc) {
	if (((*((*(_86844_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_86829_e)).ptr(), (*((*((*(_86844_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _8737_constant = static__1dc545d81_NewBool(_1c4a1183c_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8737_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_8737_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e8108__Mutable(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _88126_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _88141_fc) {
	if (((*((*(_88141_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_88126_e)).ptr(), (*((*((*(_88141_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _8867_constant = static__1dc545d81_NewBool(_1c4a11ac3_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8867_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_8867_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e8504__Types(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _89428_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _89443_fc) {
	if (((*((*(_89443_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_89428_e)).ptr(), (*((*((*(_89443_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4a1cdcb_Tuple> _8997_tup = _1c4a146b9_Tup((*(_self_))._field_base.ptr());;
	if ((_8997_tup == nullptr)) {
		_1c49d12ce_pushErr((*(_89428_e)).ptr(), (*((*(_89443_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48e24ed_comptimeTypeInfos> _9047_infos = jule::new_ptr<_1c48e24ed_comptimeTypeInfos>(_1c48e24ed_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>>::alloc(0LL, (*(_8997_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48e3ae8_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8997_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaa8945b:;
		if (it != expr_end) {
			jule::Ptr<_1c4a1020e_TypeKind> _90715_t = *it;
			{
				(*(_9047_infos))._field_types=jule::append((*_9047_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c494cb0d_pushComptimeTypeInfo((*((*((*(_89428_e))))._field_s))._field_meta.ptr(), &(_90715_t)); __jule_collection; }));
			}
			_iter_next_1aaa8945b:;
			++it;
			goto _iter_begin_1aaa8945b;
		}
		_iter_end_1aaa8945b:;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9047_infos, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e8900__Exceptional(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _91734_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _91749_fc) {
	if (((*((*(_91749_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_91734_e)).ptr(), (*((*((*(_91749_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48bb719_FnIns> _9227_f = _1c4a13b80_Fn((*(_self_))._field_base.ptr());;
	if ((_9227_f == nullptr)) {
		_1c49d12ce_pushErr((*(_91734_e)).ptr(), (*((*(_91749_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _9277_constant = static__1dc545d81_NewBool((((*(_9227_f))._field_Decl != nullptr) && (*(*(_9227_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9277_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_9277_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e8ceb__CanNil(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _93529_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _93544_fc) {
	if (((*((*(_93544_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_93529_e)).ptr(), (*((*((*(_93544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _9407_constant = static__1dc545d81_NewBool(_1c4a120e0_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9407_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_9407_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e91e7__RC(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _94825_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _94840_fc) {
	if (((*((*(_94840_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_94825_e)).ptr(), (*((*((*(_94840_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _9537_constant = static__1dc545d81_NewBool(_1c4a12376_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9537_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_9537_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e95e3__Result(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _96129_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _96144_fc) {
	if (((*((*(_96144_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_96129_e)).ptr(), (*((*((*(_96144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48bb719_FnIns> _9667_f = _1c4a13b80_Fn((*(_self_))._field_base.ptr());;
	if ((_9667_f == nullptr)) {
		_1c49d12ce_pushErr((*(_96129_e)).ptr(), (*((*(_96144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9667_f))._field_Result == nullptr)) {
		return _1c4901496_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &(_21ddd0453_primVoid));;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_96129_e))))._field_s), &((*(_9667_f))._field_Result));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e99de__Params(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Ptr<_1c49d0c4b_eval>* _97729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _97744_fc) {
	if (((*((*(_97744_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_97729_e)).ptr(), (*((*((*(_97744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48bb719_FnIns> _9827_f = _1c4a13b80_Fn((*(_self_))._field_base.ptr());;
	if ((_9827_f == nullptr)) {
		_1c49d12ce_pushErr((*(_97729_e)).ptr(), (*((*(_97744_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_self_))._field_base), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48e0e36_comptimeParams>(_1c48e0e36_comptimeParams{._field_params=(*(_9827_f))._field_Params}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48e9d30_subIdent(jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _self_, jule::Str* _99426_ident) {
	{
		auto &_match_expr{ (*(_99426_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1aaa9e5d6:;
			{
				jule::Ptr<_1c48bb719_FnIns> _9978_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaa0e9a, jule::Ptr<__jule_anon_1aaaa0e9a_ctx>::make(__jule_anon_1aaaa0e9a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaa0e9a_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_9978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1aaa9e394:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10048_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaa2e03, jule::Ptr<__jule_anon_1aaaa2e03_ctx>::make(__jule_anon_1aaaa2e03_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaa2e03_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1aaa9e40a:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10118_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaa4d5b, jule::Ptr<__jule_anon_1aaaa4d5b_ctx>::make(__jule_anon_1aaaa4d5b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaa4d5b_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1aaa9e64c:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10188_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaa6cb4, jule::Ptr<__jule_anon_1aaaa6cb4_ctx>::make(__jule_anon_1aaaa6cb4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaa6cb4_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10188_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1aaa9e6b3:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10258_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaa8c1c, jule::Ptr<__jule_anon_1aaaa8c1c_ctx>::make(__jule_anon_1aaaa8c1c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaa8c1c_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10258_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1aaa9e729:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10328_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1aaaaab75, jule::Ptr<__jule_anon_1aaaaab75_ctx>::make(__jule_anon_1aaaaab75_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aaaaab75_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10328_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1aaa9e790:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10398_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab406bc9, jule::Ptr<__jule_anon_1ab406bc9_ctx>::make(__jule_anon_1ab406bc9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab406bc9_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10398_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1aaa9e86c:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10468_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab408a99, jule::Ptr<__jule_anon_1ab408a99_ctx>::make(__jule_anon_1ab408a99_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab408a99_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1aaa9e8d3:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10538_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab40ac77, jule::Ptr<__jule_anon_1ab40ac77_ctx>::make(__jule_anon_1ab40ac77_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab40ac77_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1aaa9e949:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10608_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab40cbd0, jule::Ptr<__jule_anon_1ab40cbd0_ctx>::make(__jule_anon_1ab40cbd0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab40cbd0_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1aaa9e9c1:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10678_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab40eb38, jule::Ptr<__jule_anon_1ab40eb38_ctx>::make(__jule_anon_1ab40eb38_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab40eb38_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1aaa9ea48:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10748_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab411a91, jule::Ptr<__jule_anon_1ab411a91_ctx>::make(__jule_anon_1ab411a91_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab411a91_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1aaa9eac0:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10818_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab4139e9, jule::Ptr<__jule_anon_1ab4139e9_ctx>::make(__jule_anon_1ab4139e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab4139e9_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10818_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1aaa9eb47:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10888_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab415952, jule::Ptr<__jule_anon_1ab415952_ctx>::make(__jule_anon_1ab415952_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab415952_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10888_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1aaa9ebbe:;
			{
				jule::Ptr<_1c48bb719_FnIns> _10958_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab4178aa, jule::Ptr<__jule_anon_1ab4178aa_ctx>::make(__jule_anon_1ab4178aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab4178aa_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_10958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1aaa9ec46:;
			{
				jule::Ptr<_1c48bb719_FnIns> _11028_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab419813, jule::Ptr<__jule_anon_1ab419813_ctx>::make(__jule_anon_1ab419813_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab419813_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_11028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1aaa9ecbd:;
			{
				jule::Ptr<_1c48bb719_FnIns> _11098_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab41b76b, jule::Ptr<__jule_anon_1ab41b76b_ctx>::make(__jule_anon_1ab41b76b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab41b76b_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_11098_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1aaa9ed45:;
			{
				jule::Ptr<_1c48bb719_FnIns> _11168_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab41d6c4, jule::Ptr<__jule_anon_1ab41d6c4_ctx>::make(__jule_anon_1ab41d6c4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab41d6c4_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_11168_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1aaa9edbc:;
			{
				jule::Ptr<_1c48bb719_FnIns> _11238_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab42062c, jule::Ptr<__jule_anon_1ab42062c_ctx>::make(__jule_anon_1ab42062c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab42062c_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_11238_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1aaa9ee44:;
			{
				jule::Ptr<_1c48bb719_FnIns> _11308_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab422585, jule::Ptr<__jule_anon_1ab422585_ctx>::make(__jule_anon_1ab422585_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab422585_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_11308_method));;
			}
		}
		else {
			_case_begin_1aaa9d41a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aaa9e174:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48e3ae8_comptimeTypeInfo _Src) {
	_Stream << _1c48e3ea0_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48ea10a_comptimeValue_eq(_1c48ea10a_comptimeValue *_self_, _1c48ea10a_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1c48ea4b2_Str(_1c48ea10a_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1c48ea803_Equal(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c4a1020e_TypeKind> _114918_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48ead53__Unwrap(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _115329_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _115344_fc) {
	if (((*((*(_115344_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_115329_e)).ptr(), (*((*((*(_115344_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48eb24e__Type(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _116127_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _116142_fc) {
	if (((*((*(_116142_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_116127_e)).ptr(), (*((*((*(_116142_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_116127_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48eb64a__Lvalue(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _116929_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _116944_fc) {
	if (((*((*(_116944_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_116929_e)).ptr(), (*((*((*(_116944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _11747_constant = static__1dc545d81_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11747_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_11747_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48eba46__Mutable(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _118230_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _118245_fc) {
	if (((*((*(_118245_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_118230_e)).ptr(), (*((*((*(_118245_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _11877_constant = static__1dc545d81_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11877_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_11877_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48ebe42__Const(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _119528_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _119543_fc) {
	if (((*((*(_119543_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_119528_e)).ptr(), (*((*((*(_119543_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _12007_constant = static__1dc545d81_NewBool(_1c49ce95e_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_12007_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_12007_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c48ec33d__Field(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Ptr<_1c49d0c4b_eval>* _120828_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _120843_fc) {
	if (((*((*(_120843_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_120828_e)).ptr(), (*((*((*(_120843_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48a6407_StructIns> _12137_s = _1c4a13e16_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_12137_s == nullptr)) {
		_1c49d12ce_pushErr((*(_120828_e)).ptr(), (*((*(_120843_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_data))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c4886aad_Expr> _12187_arg = (*((*(_120843_fc))))._field_Args[0LL];;
	jule::Ptr<_1c49ce024_Data> _12197_d = _1c49edede_evalExpr((*(_120828_e)), _12187_arg);;
	if ((_12197_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c49ce95e_IsConst(_12197_d.ptr())))) {
		_1c49d12ce_pushErr((*(_120828_e)).ptr(), (*(_12187_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _12273_prim = _1c4a12893_Prim((*(_12197_d))._field_Kind);;
	if (((_12273_prim == nullptr) || (!(_1c4a1b2a3_IsStr(_12273_prim.ptr()))))) {
		_1c49d12ce_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_12197_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12323_ident = _1dc547536_ReadStr((*(_12197_d))._field_Constant.ptr());;
	jule::Ptr<_1c48a5857_FieldIns> _12337_f = _1c48a77e3_FindField(_12137_s.ptr(), _12323_ident);;
	if ((_12337_f == nullptr)) {
		_1c49d12ce_pushErr((*(_120828_e)).ptr(), (*_12187_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12137_s))._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_12323_ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_12197_d=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_data.alloc));
	_12197_d=_1c49e72e5_evalStructSubIdentField((*(_120828_e)).ptr(), &(_12197_d), &(_12137_s), &((*_12187_arg.alloc)._field_Token), &(_12337_f));
	return _1c49017d7_buildComptimeValue(&(_12197_d));;
}



inline jule::Ptr<_1c49ce024_Data> _1c48ec67e_subIdent(jule::Ptr<_1c48ea10a_comptimeValue> _self_, jule::Str* _124326_ident) {
	{
		auto &_match_expr{ (*(_124326_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1ab43b36d:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12468_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab43c77b, jule::Ptr<__jule_anon_1ab43c77b_ctx>::make(__jule_anon_1ab43c77b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab43c77b_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12468_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1ab43b3d4:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12538_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab43e6d4, jule::Ptr<__jule_anon_1ab43e6d4_ctx>::make(__jule_anon_1ab43e6d4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab43e6d4_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12538_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1ab43b44a:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12608_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab44163c, jule::Ptr<__jule_anon_1ab44163c_ctx>::make(__jule_anon_1ab44163c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab44163c_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12608_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ab43b4c2:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12678_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab443595, jule::Ptr<__jule_anon_1ab443595_ctx>::make(__jule_anon_1ab443595_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab443595_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12678_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1ab43b549:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12748_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab4454ed, jule::Ptr<__jule_anon_1ab4454ed_ctx>::make(__jule_anon_1ab4454ed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab4454ed_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12748_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1ab43b6c0:;
			{
				jule::Ptr<_1c48bb719_FnIns> _12818_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab447456, jule::Ptr<__jule_anon_1ab447456_ctx>::make(__jule_anon_1ab447456_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab447456_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_12818_method));;
			}
		}
		else {
			_case_begin_1ab43b11a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab43b24c:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ea10a_comptimeValue _Src) {
	_Stream << _1c48ea4b2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c48ecd11_Str(_1c48ec959_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1c48ed152_Equal(jule::Ptr<_1c48ec959_comptimeFiles> _self_, jule::Ptr<_1c4a1020e_TypeKind> _130018_other) {
	return false;;
}



inline void _1c48ed5c5_ready(_1c48ec959_comptimeFiles* _self_, jule::Ptr<_1c49715b0_Var>* _130426_keyA, jule::Ptr<_1c49715b0_Var>* _130443_keyB) {
	if (((*(_130426_keyA)) != nullptr)) {
		(*((*(_130426_keyA))))._field_Constant=true;
		(*((*(_130426_keyA))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_130426_keyA))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130443_keyB)) != nullptr)) {
		(*((*(_130443_keyB))))._field_Constant=true;
		(*((*(_130443_keyB))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		(*((*(_130443_keyB))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48ee054_comptimeFile>(_1c48ee054_comptimeFile{._field_file=jule::Ptr<_1c49c8bab_SymbolTable>(nullptr)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data18)})});
	};
}



inline void _1c48ed9e3_step(_1c48ec959_comptimeFiles* _self_, jule::I64 _132520_i, jule::Ptr<_1c49715b0_Var>* _132533_keyA, jule::Ptr<_1c49715b0_Var>* _132550_keyB) {
	if (((*(_132533_keyA)) != nullptr)) {
		(*((*((*((*(_132533_keyA))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_132520_i));
		(*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_132533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132550_keyB)) != nullptr)) {
		(*((*((*((*((*(_132550_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1c48ee054_comptimeFile>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132520_i];
	};
}



inline jule::I64 _1c48edc79_len(_1c48ec959_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ec959_comptimeFiles _Src) {
	_Stream << _1c48ecd11_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c48ee054_comptimeFile_eq(_1c48ee054_comptimeFile *_self_, _1c48ee054_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1c48ee63c_Str(_1c48ee054_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1c48ee97d_Equal(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c4a1020e_TypeKind> _134918_other) {
	return false;;
}



inline jule::Ptr<_1c49ce024_Data> _1c48eed8a__Path(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _135327_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _135342_fc) {
	if (((*((*(_135342_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_135327_e)).ptr(), (*((*((*(_135342_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _13587_constant = static__1dc54614a_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13587_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_13587_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c4900286__Name(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _136627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _136642_fc) {
	if (((*((*(_136642_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_136627_e)).ptr(), (*((*((*(_136642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _13717_constant = static__1dc54614a_NewStr(_1c48733a2_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13717_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_13717_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c4900682__Dir(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Ptr<_1c49d0c4b_eval>* _137926_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _137941_fc) {
	if (((*((*(_137941_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_137926_e)).ptr(), (*((*((*(_137941_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1dc54537a_Const> _13847_constant = static__1dc54614a_NewStr(_1c487311b_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13847_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_13847_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49009c3_subIdent(jule::Ptr<_1c48ee054_comptimeFile> _self_, jule::Str* _139226_ident) {
	{
		auto &_match_expr{ (*(_139226_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1ab458b60:;
			{
				jule::Ptr<_1c48bb719_FnIns> _13958_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab459e4c, jule::Ptr<__jule_anon_1ab459e4c_ctx>::make(__jule_anon_1ab459e4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab459e4c_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_13958_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ab458c09:;
			{
				jule::Ptr<_1c48bb719_FnIns> _14028_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab45bda5, jule::Ptr<__jule_anon_1ab45bda5_ctx>::make(__jule_anon_1ab45bda5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab45bda5_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_14028_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1ab458c81:;
			{
				jule::Ptr<_1c48bb719_FnIns> _14098_method = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::__new_closure<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>((void*)__jule_anon_1ab45dd0d, jule::Ptr<__jule_anon_1ab45dd0d_ctx>::make(__jule_anon_1ab45dd0d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab45dd0d_ctx_handler), ._field_reloaded=false});;
				return _1c4900d14_buildAsComptimeMethodData(&(_14098_method));;
			}
		}
		else {
			_case_begin_1ab458874:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab4589ea:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c48ee054_comptimeFile _Src) {
	_Stream << _1c48ee63c_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*> _1c490390a_readyFn(jule::Ptr<_1c49034cb_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*>((void*)__jule_anon_1ab469841, jule::Ptr<__jule_anon_1ab469841_ctx>::make(__jule_anon_1ab469841_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab469841_ctx_handler);;
}



inline jule::Bool _1c4903b91_readyFi(jule::Ptr<_1c49034cb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c495b798_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1c490390a_readyFn(_self_)));;
}



inline jule::Bool _1c4903e27_readySi(jule::Ptr<_1c49034cb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1c490390a_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1c49041ad_ready(jule::Ptr<_1c49034cb_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1c4903b91_readyFi(_self_);;
	};
	return _1c4903e27_readySi(_self_);;
}



inline jule::Bool _1c4904444_check(jule::Ptr<_1c49034cb_constraintChecker> _self_) {
	if ((!(_1c49041ad_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ab479015:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4798d9:;
		if (it != expr_end) {
			jule::I64 _1208_i = it - expr->begin();
			jule::Ptr<_1c4a0d828_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ab4798d9;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab47aac7:;
					if (it != expr_end) {
						jule::Ptr<_1c4a1020e_TypeKind> _12416_c2 = *it;
						{
							jule::Ptr<_1c4a17cd8_Prim> _1259_prim = _1c4a12893_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1c4a18943_IsConstraint(_1259_prim))) {
								if (_1c4904b92_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Kind))) {
									goto _iter_next_1ab4798d9;
								};
								goto _iter_next_1ab47aac7;
							};
							if (_1c4a1094b_Equal(_12416_c2, (*_12015_g.alloc)._field_Kind)) {
								goto _iter_next_1ab4798d9;
							};
						}
						_iter_next_1ab47aac7:;
						++it;
						goto _iter_begin_1ab47aac7;
					}
					_iter_end_1ab47aac7:;
				};
				_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*_12015_g.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c49047c9_toStrConstraints(_12015_g), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
			_iter_next_1ab4798d9:;
			++it;
			_1208_i++;
			goto _iter_begin_1ab4798d9;
		}
		_iter_end_1ab4798d9:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49034cb_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4905c2b_IsTraitImpl(_1c4905830_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1c4905eb2_IsStructImpl(_1c4905830_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4905830_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c490ac86_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490b1a4_If_eq(_1c490b1a4_If *_self_, _1c490b1a4_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490b1a4_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490b4a1_Else_eq(_1c490b4a1_Else *_self_, _1c490b4a1_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490b4a1_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c490b8be_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490bbbb_InfIter_eq(_1c490bbbb_InfIter *_self_, _1c490bbbb_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490bbbb_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490c172_WhileIter_eq(_1c490c172_WhileIter *_self_, _1c490c172_WhileIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1c490c518_IsWhileNext(_1c490c172_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c490c172_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490cabd_RangeIter_eq(_1c490cabd_RangeIter *_self_, _1c490cabd_RangeIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490cabd_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490ce53_ContSt_eq(_1c490ce53_ContSt *_self_, _1c490ce53_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490ce53_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490d32c_BreakSt_eq(_1c490d32c_BreakSt *_self_, _1c490d32c_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490d32c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490d629_Label_eq(_1c490d629_Label *_self_, _1c490d629_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490d629_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490da03_GotoSt_eq(_1c490da03_GotoSt *_self_, _1c490da03_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Label == _self_->_field_Label);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490da03_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490ddcc_Postfix_eq(_1c490ddcc_Postfix *_self_, _1c490ddcc_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490ddcc_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c490e383_Assign_eq(_1c490e383_Assign *_self_, _1c490e383_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}



std::ostream &operator<<(std::ostream &_Stream, _1c490e383_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c490e839_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c490ee99_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49109c2_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49111ba_FallSt_eq(_1c49111ba_FallSt *_self_, _1c49111ba_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}



std::ostream &operator<<(std::ostream &_Stream, _1c49111ba_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4911561_RetSt_eq(_1c4911561_RetSt *_self_, _1c4911561_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4911561_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4911bc1_scopeLabel_eq(_1c4911bc1_scopeLabel *_self_, _1c4911bc1_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_label == _self_->_field_label) &&
		(_self_->_field_pos == _self_->_field_pos) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_used == _self_->_field_used);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4911bc1_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4912254_scopeGoto_eq(_1c4912254_scopeGoto *_self_, _1c4912254_scopeGoto _other_) {
	return 
		(_self_->_field_st == _other_._field_st) &&
		(_self_->_field_gt == _self_->_field_gt) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_pos == _self_->_field_pos);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4912254_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4913244_scopeChecker_eq(_1c4913244_scopeChecker *_self_, _1c4913244_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1c492cd1e_ImportInfo> _1c491371c_SelectPackage(_1c4913244_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _46029_selector) {
	return _1c494d768_SelectPackage((*(_self_))._field_s.ptr(), _46029_selector);;
}



inline jule::Ptr<_1c49715b0_Var> _1c4913b18_FindVar(_1c4913244_scopeChecker* _self_, jule::Str _47123_ident, jule::Bool _47135_binded) {
	if ((!(_47135_binded))) {
		jule::Ptr<_1c49715b0_Var> _4738_v = _1c4916be8_findVar(_self_, _47123_ident);;
		if ((_4738_v != nullptr)) {
			return _4738_v;;
		};
	};
	return _1c494db64_FindVar((*(_self_))._field_s.ptr(), _47123_ident, _47135_binded);;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c4914014_FindTypeAlias(_1c4913244_scopeChecker* _self_, jule::Str _48829_ident, jule::Bool _48841_binded) {
	;
	jule::Ptr<_1c4a0e41c_TypeAlias> _4917_ta = _1c49cb85c_findTypeAlias((*(_self_))._field_table.ptr(), &(_48829_ident), _48841_binded, true);;
	if ((_4917_ta != nullptr)) {
		return _4917_ta;;
	};
	jule::Ptr<_1c4913244_scopeChecker> _4967_parent = (*(_self_))._field_parent;;
	while ((_4967_parent != nullptr)) {
		{
			_4917_ta=_1c49cb85c_findTypeAlias((*(_4967_parent))._field_table, &(_48829_ident), _48841_binded, true);
			if ((_4917_ta != nullptr)) {
				return _4917_ta;;
			};
			_4967_parent=(*_4967_parent.alloc)._field_parent;
		}
	_iter_next_1ab4b972b:;
	}
	_iter_end_1ab4b972b:;;
	return _1c494e060_FindTypeAlias((*(_self_))._field_s.ptr(), _48829_ident, _48841_binded);;
}



inline jule::Ptr<_1c48a3679_Struct> _1c4914410_FindStruct(_1c4913244_scopeChecker* _self_, jule::Str _51326_ident, jule::Bool _51338_binded) {
	return _1c494e45b_FindStruct((*(_self_))._field_s.ptr(), _51326_ident, _51338_binded);;
}



inline jule::Ptr<_1c48b8738_Fn> _1c491480b_FindFn(_1c4913244_scopeChecker* _self_, jule::Str _52222_ident, jule::Bool _52234_binded) {
	return _1c494e857_FindFn((*(_self_))._field_s.ptr(), _52222_ident, _52234_binded);;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c4914b4c_FindTrait(_1c4913244_scopeChecker* _self_, jule::Str _53125_ident) {
	return _1c494eb98_FindTrait((*(_self_))._field_s.ptr(), _53125_ident);;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c4914e8d_FindEnum(_1c4913244_scopeChecker* _self_, jule::Str _54024_ident) {
	return _1c494eed9_FindEnum((*(_self_))._field_s.ptr(), _54024_ident);;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c49152ce_FindTypeEnum(_1c4913244_scopeChecker* _self_, jule::Str _54928_ident) {
	return _1c495032a_FindTypeEnum((*(_self_))._field_s.ptr(), _54928_ident);;
}



inline jule::Bool _1c4915631_isUnsafe(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	jule::Ptr<_1c4913244_scopeChecker> _5577_scope = _self_;;
	_julec_label_1ab4be852:;
	if ((*((*(_5577_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_5577_scope.alloc)._field_parent != nullptr)) {
		_5577_scope=(*_5577_scope.alloc)._field_parent;
		goto _julec_label_1ab4be852;
	};
	return false;;
}



inline jule::Bool _1c49158b7_isRoot(_1c4913244_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1c4915ab5_stop(_1c4913244_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1c4915d4b_stopped(_1c4913244_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1c49160d2_isDeferred(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	jule::Ptr<_1c4913244_scopeChecker> _5907_scope = _self_;;
	_julec_label_1ab4c2b96:;
	if ((*((*(_5907_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_5907_scope.alloc)._field_parent != nullptr)) {
		_5907_scope=(*_5907_scope.alloc)._field_parent;
		goto _julec_label_1ab4c2b96;
	};
	return false;;
}



inline void _1c491638a_pushCaptured(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49715b0_Var>* _61134_v) {
	jule::Ptr<_1c4913244_scopeChecker> _6127_sc = _self_;;
	for (;;) {
		{
			if (((*(_6127_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_6127_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab4c5ade:;
					if (it != expr_end) {
						jule::Ptr<_1c49715b0_Var> _61512_cv = *it;
						{
							if ((_61512_cv == (*(_61134_v)))) {
								goto _julec_label_1ab4c722d;
							};
						}
						_iter_next_1ab4c5ade:;
						++it;
						goto _iter_begin_1ab4c5ade;
					}
					_iter_end_1ab4c5ade:;
				};
				(*(*(_6127_sc))._field_captured.alloc)=jule::append((*(*(_6127_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_61134_v)); __jule_collection; }));
				_julec_label_1ab4c722d:;
			};
			if (((*_6127_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1ab4c3999;
			};
			_6127_sc=(*_6127_sc.alloc)._field_parent;
			if ((!(_1c4a0c7b1_isVarCaptured(_6127_sc, _6127_sc, (*(_61134_v)))))) {
				goto _iter_end_1ab4c3999;
			};
		}
	_iter_next_1ab4c3999:;
	}
	_iter_end_1ab4c3999:;;
}



inline jule::Ptr<_1c4913244_scopeChecker> _1c4916621_getRoot(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	jule::Ptr<_1c4913244_scopeChecker> _6367_root = _self_;;
	while ((((*(_6367_root))._field_parent != nullptr) && ((*_6367_root.alloc)._field_owner == nullptr))) {
		{
			_6367_root=(*_6367_root.alloc)._field_parent;
		}
	_iter_next_1ab4c8c9b:;
	}
	_iter_end_1ab4c8c9b:;;
	return _6367_root;;
}



inline jule::Ptr<_1c4913244_scopeChecker> _1c49168a7_getHardRoot(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	jule::Ptr<_1c4913244_scopeChecker> _6467_root = _self_;;
	while (((*(_6467_root))._field_parent != nullptr)) {
		{
			_6467_root=(*_6467_root.alloc)._field_parent;
		}
	_iter_next_1ab4ca0cc:;
	}
	_iter_end_1ab4ca0cc:;;
	return _6467_root;;
}



inline jule::Ptr<_1c49715b0_Var> _1c4916be8_findVar(_1c4913244_scopeChecker* _self_, jule::Str _65423_ident) {
	;
	;
	jule::Ptr<_1c49715b0_Var> _6577_v = _1c49cb3a6_findVar((*(_self_))._field_table.ptr(), &(_65423_ident), false, true);;
	if ((_6577_v != nullptr)) {
		return _6577_v;;
	};
	jule::Ptr<_1c4913244_scopeChecker> _6617_parent = (*(_self_))._field_parent;;
	while ((_6617_parent != nullptr)) {
		{
			_6577_v=_1c49cb3a6_findVar((*(_6617_parent))._field_table, &(_65423_ident), false, true);
			if ((_6577_v != nullptr)) {
				return _6577_v;;
			};
			_6617_parent=(*_6617_parent.alloc)._field_parent;
		}
	_iter_next_1ab4cc08a:;
	}
	_iter_end_1ab4cc08a:;;
	return nullptr;;
}



inline jule::Ptr<_1c490d629_Label> _1c4917039_findLabel(_1c4913244_scopeChecker* _self_, jule::Str* _67526_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4ce0c0:;
		if (it != expr_end) {
			jule::Any _67615_st = *it;
			{
				{
					auto &_match_expr{ _67615_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1ab4ce895:;
						{
							jule::Ptr<_1c490d629_Label> _6799_label = _67615_st.unsafe_cast_ptr<_1c490d629_Label>();;
							if (((*(_6799_label))._field_Ident == (*(_67526_ident)))) {
								return _6799_label;;
							};
						}
					}
					_match_end_1ab4ce840:;
				};
			}
			_iter_next_1ab4ce0c0:;
			++it;
			goto _iter_begin_1ab4ce0c0;
		}
		_iter_end_1ab4ce0c0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4911bc1_scopeLabel> _1c491737a_findLabelScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Str* _69132_ident) {
	jule::Ptr<_1c4911bc1_scopeLabel> _6927_label = _1c49176bb_findLabelAll(_self_.ptr(), _69132_ident);;
	if (((_6927_label != nullptr) && ((*_6927_label.alloc)._field_scope == _self_))) {
		return _6927_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4911bc1_scopeLabel> _1c49176bb_findLabelAll(_1c4913244_scopeChecker* _self_, jule::Str* _70329_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4d1e80:;
		if (it != expr_end) {
			jule::Ptr<_1c4911bc1_scopeLabel> _70415_lbl = *it;
			{
				if (((*((*(_70415_lbl))._field_label))._field_Ident == (*(_70329_ident)))) {
					return _70415_lbl;;
				};
			}
			_iter_next_1ab4d1e80:;
			++it;
			goto _iter_begin_1ab4d1e80;
		}
		_iter_end_1ab4d1e80:;
	};
	return nullptr;;
}



inline jule::Bool _1c4917ab7_isDuplicatedIdent(_1c4913244_scopeChecker* _self_, jule::Uintptr _71533_itself, jule::Str* _71551_ident) {
	jule::Ptr<_1c49715b0_Var> _7163_v = _1c4913b18_FindVar(_self_, (*(_71551_ident)), false);;
	if (((_7163_v != nullptr) && (static_cast<jule::Uintptr>(_7163_v) != _71533_itself))) {
		if (((*_7163_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7163_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1c4950737_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1c4a0e41c_TypeAlias> _7243_ta = _1c4914014_FindTypeAlias(_self_, (*(_71551_ident)), false);;
	if (((_7243_ta != nullptr) && (static_cast<jule::Uintptr>(_7243_ta) != _71533_itself))) {
		if (((*_7243_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7243_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1c4950737_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1c4917d70_checkVarDecl(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48955e4_VarDecl> _73533_decl) {
	jule::Ptr<_1c49715b0_Var> _7367_v = _1c48c4c1c_buildVar(_73533_decl);;
	(*(_7367_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7367_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7367_v, &__jule_any_type8); __jule_collection; }));
	});;
	if (_1c4917ab7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_7367_v), &((*_7367_v.alloc)._field_Ident))) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_7367_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_7367_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c4915ab5_stop(_self_);
		return;;
	};
	_1c4964482_checkVarDecl((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));
	if (((!(_1c4971c53_IsTypeInferred(_7367_v))) && (((*_7367_v.alloc)._field_Kind == nullptr) || ((*((*_7367_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1c4967c27_evalVarValue((*(_self_))._field_s, &(_7367_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));
	if (((!(_1c49719bc_IsInitialized(_7367_v))) || ((*((*_7367_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1c491e0da_removeInteriorMutRisk(_self_, &((*(*(_7367_v))._field_Value.alloc)._field_Data));
	_1c49678b4_checkVarValue((*(_self_))._field_s, &(_7367_v));
}



inline void _1c4918128_checkTypeAlias(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _76636_ta) {
	if (_1c4917ab7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76636_ta))), &((*((*(_76636_ta))))._field_Ident))) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76636_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_76636_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1c4915ab5_stop(_self_);
		return;;
	};
	_1c495d514_checkTypeAliasDecl((*(_self_))._field_s, _76636_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_76636_ta)); __jule_collection; }));
	if (((*((*((*(_76636_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1c4915ab5_stop(_self_);
	};
}



inline void _1c49183d1_checkTypeAliasDecl(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4899296_TypeAliasDecl> _78239_decl) {
	jule::Ptr<_1c4a0e41c_TypeAlias> _7837_ta = _1c48c17eb_buildTypeAlias(_78239_decl);;
	_1c4918128_checkTypeAlias(_self_, &(_7837_ta));
}



inline jule::Ptr<_1c490ac86_Scope> _1c4918667_getChild(_1c4913244_scopeChecker* _self_) {
	return jule::new_ptr<_1c490ac86_Scope>(_1c490ac86_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr)});;
}



inline void _1c4918a85_checkChildSsc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _79335_tree, jule::Ptr<_1c490ac86_Scope>* _79358_s, jule::Ptr<_1c4913244_scopeChecker>* _79374_ssc) {
	(*((*(_79374_ssc))))._field_parent=_self_;
	_1c492507a_check((*(_79374_ssc)), _79335_tree, _79358_s);
}



inline jule::Ptr<_1c490ac86_Scope> _1c4918e81_checkChildSc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _79834_tree, jule::Ptr<_1c4913244_scopeChecker>* _79857_ssc) {
	jule::Ptr<_1c490ac86_Scope> _7997_s = _1c4918667_getChild(_self_.ptr());;
	_1c4918a85_checkChildSsc(_self_, _79834_tree, &(_7997_s), _79857_ssc);
	return _7997_s;;
}



inline jule::Ptr<_1c490ac86_Scope> _1c49192c2_checkChild(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _80432_tree) {
	jule::Ptr<_1c4913244_scopeChecker> _8057_ssc = _1c4925311_newChildChecker(_self_);;
	return _1c4918e81_checkChildSc(_self_, _80432_tree, &(_8057_ssc));;
}



inline void _1c491957a_checkAnonScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree> _80935_tree) {
	jule::Ptr<_1c490ac86_Scope> _8107_s = _1c49192c2_checkChild(_self_, &(_80935_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8107_s, &__jule_any_type21); __jule_collection; }));
}



inline void _1c49198dd_processErrorCall(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel>* _81438_m, jule::Ptr<_1c486c19d_Token> _81469_err) {
	if (_1c49160d2_isDeferred(_self_)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), _81469_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c4913244_scopeChecker> _8197_root = _1c4916621_getRoot(_self_);;
	if ((!((*((*((*(_8197_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1c4950e0d_pushErr((*(_self_))._field_s, _81469_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81438_m))))._field_Func=(*_8197_root.alloc)._field_owner;
}



inline void _1c4919b96_checkExpr(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4886aad_Expr> _82730_expr) {
	jule::Ptr<_1c49d0c4b_eval> _8287_eval = _1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
	(*(_8287_eval))._field_ignored=true;
	jule::Ptr<_1c49ce024_Data> _8307_d = _1c49edede_evalExpr(_8287_eval, _82730_expr);;
	if (((_8307_d == nullptr) || ((*(_8307_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_8307_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab4ee81b:;
			{
				jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> _8398_m = (*(_8307_d))._field_Model.unsafe_cast_ptr<_1c48b413a_BuiltinErrorCallExprModel>();;
				_1c49198dd_processErrorCall(_self_, &(_8398_m), (*(_82730_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8307_d, &__jule_any_type23); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1ab4eee26:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8307_d, &__jule_any_type23); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ab4eedb0:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s, (*(_82730_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab4eed5a:;
	};
}



inline jule::Ptr<_1c490b1a4_If> _1c4919ed7_checkIf(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48981c9_If> _85828_i) {
	jule::Ptr<_1c490ac86_Scope> _8597_s = _1c49192c2_checkChild(_self_, &((*(_85828_i))._field_Scope));;
	jule::Ptr<_1c49ce024_Data> _8617_d = _1c49edede_evalExpr(_1c49583aa_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*_85828_i.alloc)._field_Expr);;
	if ((_8617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _8667_prim = _1c4a12893_Prim((*(_8617_d))._field_Kind.ptr());;
	if (((_8667_prim == nullptr) || (!(_1c4a1b01c_IsBool(_8667_prim.ptr()))))) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*_85828_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c490b1a4_If>(_1c490b1a4_If{._field_Expr=(*(_8617_d))._field_Model, ._field_Scope=_8597_s});;
}



inline jule::Ptr<_1c490b4a1_Else> _1c491a328_checkElse(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48985a3_Else> _87830_e) {
	return jule::new_ptr<_1c490b4a1_Else>(_1c490b4a1_Else{._field_Scope=_1c49192c2_checkChild(_self_, &((*(_87830_e))._field_Scope))});;
}



inline void _1c491a5d1_checkConditional(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4898a59_Conditional> _88437_conditional) {
	jule::Ptr<_1c490b8be_Conditional> _8857_c = jule::new_ptr<_1c490b8be_Conditional>(_1c490b8be_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1c490b1a4_If>>(nullptr), ._field_Default=jule::Ptr<_1c490b4a1_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8857_c, &__jule_any_type34); __jule_collection; }));
	(*_8857_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490b1a4_If>>::alloc(0LL, ((*(_88437_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c490b1a4_If>(nullptr); __jule_collection; });
	(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490b1a4_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c4919ed7_checkIf(_self_, (*_88437_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_88437_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab50b570:;
		if (it != expr_end) {
			jule::Ptr<_1c48981c9_If> _89115_elif = *it;
			{
				(*_8857_c.alloc)._field_Elifs=jule::append((*_8857_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490b1a4_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c4919ed7_checkIf(_self_, _89115_elif); __jule_collection; }));
			}
			_iter_next_1ab50b570:;
			++it;
			goto _iter_begin_1ab50b570;
		}
		_iter_end_1ab50b570:;
	};
	if (((*_88437_conditional.alloc)._field_Default != nullptr)) {
		(*_8857_c.alloc)._field_Default=_1c491a328_checkElse(_self_, (*_88437_conditional.alloc)._field_Default);
	};
}



inline void _1c491aaa9_checkIterScopeSsc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _90034_it, jule::Ptr<_1c489279a_ScopeTree> _90051_tree, jule::Ptr<_1c490ac86_Scope>* _90074_s, jule::Ptr<_1c4913244_scopeChecker> _90089_ssc) {
	(*(_90089_ssc))._field_it=_90034_it;
	_1c4918a85_checkChildSsc(_self_, &(_90051_tree), _90074_s, &(_90089_ssc));
}



inline jule::Ptr<_1c490ac86_Scope> _1c491b060_checkIterScopeSc(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _90533_it, jule::Ptr<_1c489279a_ScopeTree> _90550_tree, jule::Ptr<_1c4913244_scopeChecker> _90572_ssc) {
	jule::Ptr<_1c490ac86_Scope> _9067_scope = _1c4918667_getChild(_self_.ptr());;
	_1c491aaa9_checkIterScopeSsc(_self_, _90533_it, _90550_tree, &(_9067_scope), _90572_ssc);
	return _9067_scope;;
}



inline jule::Ptr<_1c490ac86_Scope> _1c491b45b_checkIterScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _91131_it, jule::Ptr<_1c489279a_ScopeTree>* _91149_tree) {
	jule::Ptr<_1c4913244_scopeChecker> _9127_ssc = _1c4925311_newChildChecker(_self_);;
	return _1c491b060_checkIterScopeSc(_self_, _91131_it, (*(_91149_tree)), _9127_ssc);;
}



inline void _1c491b714_checkInfIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _91634_it) {
	jule::Ptr<_1c490bbbb_InfIter> _9177_kind = jule::new_ptr<_1c490bbbb_InfIter>(_1c490bbbb_InfIter{._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9177_kind, &__jule_any_type35); __jule_collection; }));
	(*_9177_kind.alloc)._field_Scope=_1c491b45b_checkIterScope(_self_, static_cast<jule::Uintptr>(_9177_kind), &((*((*(_91634_it))))._field_Scope));
}



inline void _1c491b9bc_checkWhileIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _92236_it) {
	jule::Ptr<_1c4896a68_WhileKind> _9237_wh = (*((*(_92236_it))))._field_Kind.cast_ptr<_1c4896a68_WhileKind>(&__jule_any_type36);;
	if ((((*(_9237_wh))._field_Expr == nullptr) && ((*_9237_wh.alloc)._field_Next == nullptr))) {
		_1c491b714_checkInfIter(_self_, _92236_it);
		return;;
	};
	jule::Ptr<_1c490c172_WhileIter> _9297_kind = jule::new_ptr<_1c490c172_WhileIter>(_1c490c172_WhileIter{._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9297_kind, &__jule_any_type37); __jule_collection; }));
	(*_9297_kind.alloc)._field_Scope=_1c491b45b_checkIterScope(_self_, static_cast<jule::Uintptr>(_9297_kind), &((*((*(_92236_it))))._field_Scope));
	if (((*_9237_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1c49ce024_Data> _9348_d = _1c49edede_evalExpr(_1c49583aa_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*_9237_wh.alloc)._field_Expr);;
		if ((_9348_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1c4a17cd8_Prim> _9394_prim = _1c4a12893_Prim((*(_9348_d))._field_Kind.ptr());;
		if ((_9394_prim == nullptr)) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1c4a1b01c_IsBool(_9394_prim.ptr())))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_92236_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_9297_kind.alloc)._field_Expr=(*(_9348_d))._field_Model;
	};
	if (_1c4896e0e_IsWhileNext(_9237_wh)) {
		if ((!(_1c490a219_isValidAstStForNextSt(&((*_9237_wh.alloc)._field_Next))))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _9594_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1c4923bb1_checkNode(_self_, &((*_9237_wh.alloc)._field_Next));
		if ((_9594_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _9629_st = (*((*(_self_))._field_scope))._field_Stmts[_9594_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _9594_n);;
			if ((!(_1c490a4d3_isValidStForNextSt(&(_9629_st))))) {
				_1c4950e0d_pushErr((*(_self_))._field_s, (*_9237_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_9297_kind.alloc)._field_Next=_9629_st;
		};
	};
}



inline void _1c491bdda_checkComptimeRangeIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _97244_it, jule::Ptr<_1c490cabd_RangeIter>* _97260_kind, jule::Ptr<_1c49ce024_Data>* _97283_d) {
	if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
		if (((!(_1c4950737_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1c4917ab7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
		if (((!(_1c4950737_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c4917ab7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1c4897470_RangeKind> _9867_rang = (*((*(_97244_it))))._field_Kind.cast_ptr<_1c4897470_RangeKind>(&__jule_any_type38);;
	_1c4925883_makeComptimeRange(_97283_d);
	if ((*((*(_97283_d))))._field_Decl) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_9867_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_97283_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1c49c3dd7_rangeChecker _9937_rc = _1c49c3dd7_rangeChecker{._field_sc=_self_, ._field_rang=_9867_rang, ._field_Kind=(*(_97260_kind)), ._field_d=(*(_97283_d))};;
	jule::Bool _9993_ok = _1c49c5e2d_check(&_9937_rc);;
	if ((!(_9993_ok))) {
		return;;
	};
	jule::Ptr<_1c48d42c0_comptimeRange> _10047_comptime = _1c4a15c3c_comptimeRange((*((*(_97283_d))))._field_Kind);;
	((_1c48d40a0_comptimeRangeKindMptrData*)(*(_10047_comptime))._field_kind.safe_type())->_1c48d3797_ready((*(_10047_comptime))._field_kind.data, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
	jule::I64 _10067_i = 0LL;;
	jule::I64 _10073_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_10067_i < ((_1c48d40a0_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1c48d3e4b_len((*_10047_comptime.alloc)._field_kind.data)); (_10067_i)++) {
		{
			jule::Ptr<_1c4913244_scopeChecker> _10098_ssc = _1c4925311_newChildChecker(_self_);;
			jule::Ptr<_1c490ac86_Scope> _10108_scope = _1c4918667_getChild(_self_);;
			if (((*((*(_97260_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyA.alloc)._field_Scope=_10108_scope;
				(*((*(_10098_ssc))._field_table))._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_97260_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_97260_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97260_kind))))._field_KeyB.alloc)._field_Scope=_10108_scope;
				(*(*(_10098_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10098_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_97260_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1c48d40a0_comptimeRangeKindMptrData*)(*_10047_comptime.alloc)._field_kind.safe_type())->_1c48d3bb5_step((*_10047_comptime.alloc)._field_kind.data, _10067_i, &((*((*(_97260_kind))))._field_KeyA), &((*((*(_97260_kind))))._field_KeyB));
			_1c4918a85_checkChildSsc(_self_, &((*((*(_97244_it))))._field_Scope), &(_10108_scope), &(_10098_ssc));
			if ((_10073_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1ab52c2d8;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10108_scope, &__jule_any_type21); __jule_collection; }));
		}
	_iter_next_1ab52c2d8:;
	}
	_iter_end_1ab52c2d8:;;
}



inline void _1c491c193_checkRangeIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter>* _102936_it) {
	jule::Ptr<_1c4897470_RangeKind> _10307_rang = (*((*(_102936_it))))._field_Kind.cast_ptr<_1c4897470_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1c49ce024_Data> _10327_d = _1c49edb9d_evalExpr1(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*(_10307_rang))._field_Expr);;
	if ((_10327_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1c490cabd_RangeIter> _10377_kind = jule::new_ptr<_1c490cabd_RangeIter>(_1c490cabd_RangeIter{._field_Expr=_10327_d, ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_KeyA=jule::Ptr<_1c49715b0_Var>(nullptr), ._field_KeyB=jule::Ptr<_1c49715b0_Var>(nullptr)});;
	if ((*((*(_102936_it))))._field_Comptime) {
		_1c491bdda_checkComptimeRangeIter(_self_, _102936_it, &(_10377_kind), &(_10327_d));
		return;;
	};
	if (_1c4a14950_comptime((*(_10327_d))._field_Kind.ptr())) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*_10307_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1c49c3dd7_rangeChecker _10517_rc = _1c49c3dd7_rangeChecker{._field_sc=_self_, ._field_rang=_10307_rang, ._field_Kind=_10377_kind, ._field_d=_10327_d};;
	jule::Bool _10573_ok = _1c49c5e2d_check(&_10517_rc);;
	if ((!(_10573_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10377_kind, &__jule_any_type39); __jule_collection; }));
	jule::Ptr<_1c4913244_scopeChecker> _10647_ssc = _1c4925311_newChildChecker(_self_);;
	jule::Ptr<_1c490ac86_Scope> _10657_scope = _1c4918667_getChild(_self_);;
	if (((*(_10377_kind))._field_KeyA != nullptr)) {
		if (((!(_1c4950737_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c4917ab7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_10377_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyA.alloc)._field_Scope=_10657_scope;
		(*((*(_10647_ssc))._field_table))._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_10377_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_10377_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1c4950737_isFlag((*(_self_))._field_s, static_cast<jule::I64>(1LL)))) && _1c4917ab7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*(*(_10377_kind))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_10377_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*(_10377_kind))._field_KeyB.alloc)._field_Scope=_10657_scope;
		(*(*(_10647_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_10647_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_10377_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1c491aaa9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_10377_kind), (*((*(_102936_it))))._field_Scope, &(_10657_scope), _10647_ssc);
	(*_10377_kind.alloc)._field_Scope=_10657_scope;
}



inline void _1c491c44b_checkIter(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489623d_Iter> _108930_it) {
	if (_1c48965d4_IsInf(_108930_it.ptr())) {
		if ((*_108930_it.alloc)._field_Comptime) {
			_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1c491b714_checkInfIter(_self_, &(_108930_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108930_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab54529b:;
			{
				if ((*_108930_it.alloc)._field_Comptime) {
					_1c4950e0d_pushErr((*(_self_))._field_s, (*_108930_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1c491b9bc_checkWhileIter(_self_, &(_108930_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab546797:;
			{
				_1c491c193_checkRangeIter(_self_, &(_108930_it));
			}
		}
		else {
			_case_begin_1ab54629c:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ab546247:;
	};
}



inline jule::Bool _1c491c78c_checkValidContLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _111336_it) {
	jule::Ptr<_1c4913244_scopeChecker> _11147_scope = _self_;;
	_julec_label_1ab548788:;
	if (((*(_11147_scope))._field_it == _111336_it)) {
		return true;;
	};
	if (((*_11147_scope.alloc)._field_parent != nullptr)) {
		_11147_scope=(*_11147_scope.alloc)._field_parent;
		goto _julec_label_1ab548788;
	};
	return false;;
}



inline jule::Bool _1c491cacd_checkValidBreakLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Uintptr _112937_ptr) {
	jule::Ptr<_1c4913244_scopeChecker> _11307_scope = _self_;;
	_julec_label_1ab54a834:;
	if (((*(_11307_scope))._field_it == _112937_ptr)) {
		return true;;
	};
	if (((*_11307_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _11384_mtch = static_cast<jule::Uintptr>((*(((_1c49109c2_Case*)((*_11307_scope.alloc)._field_cse))))._field_Owner);;
		if ((_11384_mtch == _112937_ptr)) {
			return true;;
		};
	};
	if (((*_11307_scope.alloc)._field_parent != nullptr)) {
		_11307_scope=(*_11307_scope.alloc)._field_parent;
		goto _julec_label_1ab54a834;
	};
	return false;;
}



inline jule::Ptr<_1c490ce53_ContSt> _1c491ce1e_checkContValidScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897c23_ContSt> _115236_c) {
	if (_1c49160d2_isDeferred(_self_)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115236_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115236_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1c490ce53_ContSt>(_1c490ce53_ContSt{._field_It=0});;
	};
	jule::Ptr<_1c4913244_scopeChecker> _11627_scope = _self_;;
	_julec_label_1ab54ecbc:;
	{
		
		if (((((*_11627_scope.alloc)._field_it == 0LLU) && ((*_11627_scope.alloc)._field_parent != nullptr)) && ((*_11627_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab550581:;
			{
				_11627_scope=(*_11627_scope.alloc)._field_parent;
				goto _julec_label_1ab54ecbc;
			}
		}
		else if (((*_11627_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab550619:;
			{
				return jule::new_ptr<_1c490ce53_ContSt>(_1c490ce53_ContSt{._field_It=(*_11627_scope.alloc)._field_it});;
			}
		}
		_match_end_1ab5504d7:;
	};
	_1c4950e0d_pushErr((*(_self_))._field_s, (*_115236_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c491d1c7_checkCont(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897c23_ContSt> _117626_c) {
	jule::Ptr<_1c490ce53_ContSt> _11777_cont = _1c491ce1e_checkContValidScope(_self_, _117626_c);;
	if ((_11777_cont == nullptr)) {
		return;;
	};
	if (((*(_117626_c))._field_Label != nullptr)) {
		jule::Ptr<_1c4911bc1_scopeLabel> _11838_label = _1c49082a0_findLabelParent(&((*(*(_117626_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_11838_label == nullptr)) {
			_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_117626_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		(*(_11838_label))._field_used=true;
		if ((((*(_11838_label))._field_pos + 1LL) >= (*((*((*(_11838_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			return;;
		};
		jule::I64 _11964_i = ((*(_11838_label))._field_pos + 1LL);;
		if ((_11964_i >= (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _12009_st = (*(*((*(_11838_label))._field_scope))._field_scope.alloc)._field_Stmts[_11964_i];;
			{
				auto &_match_expr{ _12009_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1ab55add8:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1c490bbbb_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1ab55b0b4:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1c490cabd_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1ab55b12a:;
					{
						(*(_11777_cont))._field_It=static_cast<jule::Uintptr>(_12009_st.unsafe_cast_ptr<_1c490c172_WhileIter>());
					}
				}
				else {
					_case_begin_1ab55b04d:;
					{
						_1c4950e0d_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					}
				}
				_match_end_1ab55aee8:;
			};
		};
	};
	if (((*(_11777_cont))._field_It != 0LLU)) {
		if ((!(_1c491c78c_checkValidContLabel(_self_, (*(_11777_cont))._field_It)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_117626_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_117626_c))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11777_cont, &__jule_any_type40); __jule_collection; }));
}



inline void _1c491d480_checkLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c488ed5d_LabelSt> _122331_l) {
	if ((_1c4917039_findLabel(_self_.ptr(), &((*(_122331_l))._field_Ident)) != nullptr)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_122331_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_122331_l.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c490d629_Label> _12297_label = jule::new_ptr<_1c490d629_Label>(_1c490d629_Label{._field_Ident=(*_122331_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12297_label, &__jule_any_type20); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4911bc1_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4911bc1_scopeLabel>(_1c4911bc1_scopeLabel{._field_token=(*_122331_l.alloc)._field_Token, ._field_label=_12297_label, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, ._field_used=false}); __jule_collection; }));
}



inline void _1c491d738_pushGoto(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4890237_GotoSt> _124229_gt) {
	jule::Ptr<_1c490da03_GotoSt> _12437_st = jule::new_ptr<_1c490da03_GotoSt>(_1c490da03_GotoSt{._field_Ident=(*((*(_124229_gt))._field_Label))._field_Kind, ._field_Label=jule::Ptr<_1c490d629_Label>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12437_st, &__jule_any_type41); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4912254_scopeGoto>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4912254_scopeGoto>(_1c4912254_scopeGoto{._field_st=_12437_st, ._field_gt=_124229_gt, ._field_scope=_self_, ._field_pos=((*(*(_self_))._field_scope.alloc)._field_Stmts.len() - 1LL)}); __jule_collection; }));
}



inline void _1c491d9e1_checkPostfix(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt> _125633_a) {
	if (((*(_125633_a))._field_Left.len() > 1LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_125633_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4886aad_Expr> _12627_expr = (*((*(_125633_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1c49ce024_Data> _12637_d = _1c49edede_evalExpr(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), _12627_expr);;
	if ((_12637_d == nullptr)) {
		return;;
	};
	_1c4909e50_checkAssign(&((*_self_.alloc)._field_s), &(_12637_d), nullptr, (*_125633_a.alloc)._field_Setter);
	if ((_1c4a12db0_Ptr((*(_12637_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c4a200cb_Ptr> _12718_ptr = _1c4a12db0_Ptr((*(_12637_d))._field_Kind);;
		if (_1c4a20b48_IsUnsafe(_12718_ptr.ptr())) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_12637_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1c4a12893_Prim((*(_12637_d))._field_Kind.ptr()) == nullptr) || (!(_1dc544852_IsNum((*(_1c4a12893_Prim((*(_12637_d))._field_Kind)))._field_Kind))))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_125633_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_125633_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_12637_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c490ddcc_Postfix>(_1c490ddcc_Postfix{._field_Expr=(*(_12637_d))._field_Model, ._field_Op=(*((*_125633_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42); __jule_collection; }));
}



inline jule::Bool _1c491dd32_isNewAssignIdent(_1c4913244_scopeChecker* _self_, jule::Str _128932_ident) {
	if ((_1c486ea85_IsIgnoreIdent(_128932_ident) || (_128932_ident).empty())) {
		return false;;
	};
	return (_1c49cbc58_defByIdent((*(_self_))._field_table.ptr(), &(_128932_ident), false) == nullptr);;
}



inline void _1c491e0da_removeInteriorMutRisk(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49ce024_Data>* _130243_d) {
	jule::Ptr<_1c48a6407_StructIns> _13033_s = _1c4a13e16_Struct((*((*(_130243_d))))._field_Kind.ptr());;
	if ((_13033_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4913244_scopeChecker> _13073_root = _1c49168a7_getHardRoot(_self_);;
	if (((*((*(_13073_root))._field_owner))._field_Owner != _13033_s)) {
		return;;
	};
	(*((*(_130243_d))))._field_Mutable=true;
}



inline jule::Bool _1c491e591_checkStructureAssignOp(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48a6407_StructIns>* _131644_s, jule::Ptr<_1c4891227_AssignSt>* _131664_a, jule::Ptr<_1c49ce024_Data>* _131683_r) {
	jule::Ptr<_1c48bb719_FnIns> _131911_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131664_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab57c338:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab57bee7:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab57c05d:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab57c0c4:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab57c13a:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab57c1a1:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab57c217:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab57d889:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab57d900:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab57d966:;
			{
				_131911_overload=(*((*(_131644_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ab57b7bb:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c48a67ae_Str((*(_131644_s)).ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1ab57be81:;
	};
	if ((_131911_overload == nullptr)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_131664_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_131664_a))))._field_Setter))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c48a67ae_Str((*(_131644_s)).ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1c48ba691_ParamIns> _13517_p = (*(_131911_overload))._field_Params[1LL];;
	return _1c495891b_checkAssignType((*(_self_))._field_s, (*((*(_13517_p))._field_Decl))._field_Reference, &((*_13517_p.alloc)._field_Kind), _131683_r, (*((*(_131664_a))))._field_Setter);;
}



inline void _1c491e849_checkSingleAssign(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt>* _135539_a) {
	jule::Ptr<_1c49ce024_Data> _135611_l = nullptr;;
	if ((!(_1c486ea85_IsIgnoreIdent((*((*((*(_135539_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1c4886aad_Expr> _13598_expr = (*((*((*(_135539_a))))._field_Left[0LL]))._field_Expr;;
		_135611_l=_1c49edede_evalExpr(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), _13598_expr);
		if ((_135611_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1c49d0c4b_eval> _13667_eval = static_cast<jule::Ptr<_1c49d0c4b_eval>>(nullptr);;
	if ((_135611_l != nullptr)) {
		_13667_eval=_1c4958069_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0), (*(_135611_l))._field_Kind);
	} else {
		_13667_eval=_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));
	};
	(*(_13667_eval))._field_unsafety=_1c4915631_isUnsafe(_self_);
	jule::Ptr<_1c49ce024_Data> _13737_r = _1c49edede_evalExpr(_13667_eval, (*((*(_135539_a))))._field_Right);;
	if ((_13737_r == nullptr)) {
		return;;
	};
	_1c491e0da_removeInteriorMutRisk(_self_, &(_13737_r));
	if ((_135611_l == nullptr)) {
		if (_1c4a115a6_Void((*(_13737_r))._field_Kind.ptr())) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*((*(_135539_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_13737_r, &__jule_any_type23); __jule_collection; }));
		return;;
	};
	if ((!(_1c4909e50_checkAssign(&((*_self_.alloc)._field_s), &(_135611_l), _13737_r, (*((*(_135539_a))))._field_Setter)))) {
		return;;
	};
	if ((_1c4a146b9_Tup((*(_13737_r))._field_Kind) != nullptr)) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_135539_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c48aa362_OperandExprModel> _13977_lm = jule::new_ptr<_1c48aa362_OperandExprModel>(_1c48aa362_OperandExprModel{._field_Kind=(*(_135611_l))._field_Kind, ._field_Model=(*(_135611_l))._field_Model});;
	jule::Ptr<_1c48aa362_OperandExprModel> _14017_rm = jule::new_ptr<_1c48aa362_OperandExprModel>(_1c48aa362_OperandExprModel{._field_Kind=(*(_13737_r))._field_Kind, ._field_Model=(*(_13737_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c490e383_Assign>(_1c490e383_Assign{._field_Left=_13977_lm, ._field_Right=_14017_rm, ._field_Op=(*((*(_135539_a))))._field_Setter}), &__jule_any_type43); __jule_collection; }));
	if (((*((*((*(_135539_a))))._field_Setter))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c49b798b_assignTypeChecker _14088_checker = _1c49b798b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135611_l))._field_Kind, ._field_d=_13737_r, ._field_errorToken=(*((*(_135539_a))))._field_Setter};;
		if (_1c49b898c_check(&_14088_checker)) {
			(*(_14017_rm))._field_Model=(*(_13737_r))._field_Model;
			(*(_13977_lm))._field_Model=(*(_135611_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _14207_strct = _1c4a13e16_Struct((*(_135611_l))._field_Kind);;
	if ((_14207_strct != nullptr)) {
		_1c491e591_checkStructureAssignOp(_self_, &(_14207_strct), _135539_a, &(_13737_r));
		return;;
	};
	jule::U64 _14253_id = (*(*((*(_135539_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_1c4925652_removeEqFromOp((*(*((*(_135539_a))))._field_Setter.alloc)._field_Id);
	_1c4a0140e_binaryEval _14277_solver = static__1c4a01d5a_new(_13667_eval, (*((*(_135539_a))))._field_Setter);;
	({
		jule::Ptr<_1c49ce024_Data> ___jule_assign_arg = _135611_l;
		jule::Ptr<_1c49ce024_Data> _1___jule_assign_arg = _13737_r;
		_14277_solver._field_l = ___jule_assign_arg;
		_14277_solver._field_r = _1___jule_assign_arg;
	});
	_1c4a05ca4_evalOp(&_14277_solver);
	(*(*((*(_135539_a))))._field_Setter.alloc)._field_Id=_14253_id;
}



inline void _1c491edcc_processEndPartOfMultiAssign(_1c4913244_scopeChecker* _self_, jule::Ptr<_1c490e839_MultiAssign>* _143348_st, jule::Ptr<_1c4891227_AssignSt>* _14348_a, jule::Ptr<_1c4890b94_AssignLeft>* _143427_lexpr, jule::Ptr<_1c49ce024_Data>* _143452_l, jule::Ptr<_1c49ce024_Data>* _143467_r) {
	if (((!((*((*(_143427_lexpr))))._field_Reference)) && _1c486ea85_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident))) {
		if (_1c4a115a6_Void((*((*(_143467_r))))._field_Kind.ptr())) {
			_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_14348_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1c49ce024_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_14348_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_143427_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1ab59ce3b:;
				{
					if ((!(_1c491dd32_isNewAssignIdent(_self_, (*((*(_143427_lexpr))))._field_Ident)))) {
						goto _julec_label_1ab599a4d;
					};
				}
			}
			else {
				_case_begin_1ab59baa5:;
				{
					if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
						_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1ab599a4d;
				}
			}
			_match_end_1ab59ba50:;
		};
		if (_1c4917ab7_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143427_lexpr))))._field_Ident))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1c4915ab5_stop(_self_);
			return;;
		};
		if (_1c486ea85_IsIgnoreIdent((*((*(_143427_lexpr))))._field_Ident)) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c49715b0_Var> _14668_v = jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143427_lexpr))))._field_Token, ._field_Ident=(*((*(_143427_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_143427_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_143427_lexpr))))._field_Reference, ._field_Kind=jule::Ptr<_1c4a173d1_TypeSymbol>(nullptr), ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=(*((*(_14348_a))))._field_Right, ._field_Data=(*(_143467_r))}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
		_1c49678b4_checkVarValue((*(_self_))._field_s, &(_14668_v));
		{ jule::Slice<jule::Ptr<_1c49ce024_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*((*_14668_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_14668_v.alloc)._field_Mutable, ._field_Reference=(*_14668_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_14668_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_14668_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*((*(_143348_st))))._field_Decls; __jule_push_dest.push(_14668_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14668_v; __jule_collection; }));
		return;;
	};
	_julec_label_1ab599a4d:;
	if (((*((*(_143427_lexpr))))._field_Mutable || (*((*(_143427_lexpr))))._field_Reference)) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_143427_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143427_lexpr))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1c4909e50_checkAssign(&((*(_self_))._field_s), _143452_l, (*(_143467_r)), (*((*(_143427_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1c495cca5_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143452_l))))._field_Mutable, false, &((*((*(_143452_l))))._field_Kind), _143467_r, &((*((*(_14348_a))))._field_Setter));
	_1c49b798b_assignTypeChecker _15047_checker = _1c49b798b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143452_l))))._field_Kind, ._field_d=(*(_143467_r)), ._field_errorToken=(*((*(_14348_a))))._field_Setter};;
	_1c49b898c_check(&_15047_checker);
	{ jule::Slice<jule::Ptr<_1c49ce024_Data>> &__jule_push_dest = (*((*(_143348_st))))._field_Left; __jule_push_dest.push((*(_143452_l))); };
}



inline void _1c4920185_checkMultiAssign(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt>* _151438_a) {
	jule::Ptr<_1c49ce024_Data> _15157_rd = _1c49edede_evalExpr(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*((*(_151438_a))))._field_Right);;
	if ((_15157_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c49ce024_Data>> _15197_right = _1c490912a_getDatasFromTupleData(&(_15157_rd));;
	if ((_15197_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_15197_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ab5ace29:;
				{
					jule::Ptr<_1c48ad1bc_IndexingExprModel> _15239_iem = (*(_15197_right[0LL]))._field_Model.unsafe_cast_ptr<_1c48ad1bc_IndexingExprModel>();;
					if ((_1c4a14433_Map((*((*(_15239_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_15197_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*(_1c4a14433_Map((*((*(_15239_iem))._field_Expr))._field_Kind)))._field_Val, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)}); (*it++) = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1ab5acd80:;
		};
	};
	{
		
		if (((*((*(_151438_a))))._field_Left.len() > _15197_right.len())) {
			_case_begin_1ab5ad48a:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_151438_a))))._field_Left.len() < _15197_right.len())) {
			_case_begin_1ab5ac6ba:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_151438_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab5acec3:;
	};
	jule::Ptr<_1c490e839_MultiAssign> _15427_st = jule::new_ptr<_1c490e839_MultiAssign>(_1c490e839_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1c49ce024_Data>>(nullptr), ._field_Right=(*(_15157_rd))._field_Model});;
	{
		auto expr = &((*((*(_151438_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5b2deb:;
		if (it != expr_end) {
			jule::I64 _15457_i = it - expr->begin();
			{
				jule::Ptr<_1c4890b94_AssignLeft> _15468_lexpr = (*((*(_151438_a))))._field_Left[_15457_i];;
				jule::Ptr<_1c49ce024_Data> _154712_l = nullptr;;
				if ((!(_1c486ea85_IsIgnoreIdent((*(_15468_lexpr))._field_Ident)))) {
					if ((!((*((*(_151438_a))))._field_Declarative))) {
						goto _julec_label_1ab5b7043;
					};
					if (((*_15468_lexpr.alloc)._field_Mutable && (*_15468_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1ab5b75d7;
					};
					{
						auto &_match_expr{ (*((*(_15468_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type44) {
							_case_begin_1ab5b6042:;
							{
								if (_1c491dd32_isNewAssignIdent(_self_, (*_15468_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1ab5b75d7;
								};
							}
						}
						_match_end_1ab5b5ecb:;
					};
					_julec_label_1ab5b7043:;
					_154712_l=_1c49edede_evalExpr(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*_15468_lexpr.alloc)._field_Expr);
					if ((_154712_l == nullptr)) {
						goto _iter_next_1ab5b2deb;
					};
					_julec_label_1ab5b75d7:;
				};
				jule::Ptr<_1c49ce024_Data> _15688_r = _15197_right[_15457_i];;
				_1c491e0da_removeInteriorMutRisk(_self_, &(_15688_r));
				_1c491edcc_processEndPartOfMultiAssign(_self_, &(_15427_st), _151438_a, &(_15468_lexpr), &(_154712_l), &(_15688_r));
			}
			_iter_next_1ab5b2deb:;
			++it;
			_15457_i++;
			goto _iter_begin_1ab5b2deb;
		}
		_iter_end_1ab5b2deb:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15427_st, &__jule_any_type46); __jule_collection; }));
}



inline void _1c492043d_checkAssignSt(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4891227_AssignSt> _157534_a) {
	{
		
		if (_1c4871c30_IsPostfixOp((*((*(_157534_a))._field_Setter))._field_Id)) {
			_case_begin_1ab5baeae:;
			{
				_1c491d9e1_checkPostfix(_self_, _157534_a);
			}
		}
		else if (((*(_157534_a))._field_Left.len() == 1LL)) {
			_case_begin_1ab5bab6d:;
			{
				_1c491e849_checkSingleAssign(_self_, &(_157534_a));
			}
		}
		else {
			_case_begin_1ab5bab07:;
			{
				_1c4920185_checkMultiAssign(_self_, &(_157534_a));
			}
		}
		_match_end_1ab5baa08:;
	};
}



inline jule::Ptr<_1c490ac86_Scope> _1c4920839_checkCaseScope(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c49109c2_Case>* _158632_c, jule::Ptr<_1c489279a_ScopeTree>* _158647_tree) {
	jule::Ptr<_1c4913244_scopeChecker> _15877_ssc = _1c4925311_newChildChecker(_self_);;
	(*(_15877_ssc))._field_cse=static_cast<jule::Uintptr>((*(_158632_c)));
	return _1c4918e81_checkChildSc(_self_, _158647_tree, &(_15877_ssc));;
}



inline jule::Ptr<_1c49109c2_Case> _1c4920d9a_checkCase(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match> _159230_m, jule::I64 _159241_i, jule::Ptr<_1c489974c_Case> _159253_c, jule::Ptr<_1c49ce024_Data> _159272_expr) {
	jule::Ptr<_1c49109c2_Case> _15937_case = (*(_159230_m))._field_Cases[_159241_i];;
	(*(_15937_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(0LL, (*(_159253_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49ce024_Data>(nullptr); __jule_collection; });
	jule::Bool _15957_constMatched = false;;
	jule::Ptr<_1c49d0c4b_eval> _15967_eval = _1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
	{
		auto expr = &((*_159253_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5c1734:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _159715_e = *it;
			{
				jule::Ptr<_1c49ce024_Data> _15988_d = _1c49ed1ca_evalExprKind(_15967_eval, (*(_159715_e))._field_Kind);;
				if ((_15988_d == nullptr)) {
					goto _iter_next_1ab5c1734;
				};
				if ((*_159230_m.alloc)._field_TypeMatch) {
					(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15988_d; __jule_collection; }));
					if ((_1c4908d61_countMatchType(&(_159230_m), &((*(_15988_d))._field_Kind)) > 1LL)) {
						_1c4950e0d_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_15988_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
					};
					if ((*_159230_m.alloc)._field_Comptime) {
						_15957_constMatched=(_15957_constMatched || _1c4a1094b_Equal((*(_159272_expr))._field_Kind, (*(_15988_d))._field_Kind));
					} else {
						if ((_1c4a133cc_TypeEnum((*(_159272_expr))._field_Kind) != nullptr)) {
							_1c4959378_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1c48cc1b9_Trait> _16177_trt = _1c4a1419c_Trait((*(_159272_expr))._field_Kind);;
							if ((_16177_trt != nullptr)) {
								_1c4959378_checkTypeCompatibility((*(_self_))._field_s, &((*(_159272_expr))._field_Kind), &((*(_15988_d))._field_Kind), &((*_159715_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1ab5c1734;
				};
				if ((*(_15988_d))._field_Decl) {
					_1c4950e0d_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ab5c1734;
				};
				if ((*_159230_m.alloc)._field_Comptime) {
					if (((!(_1c49ce95e_IsConst(_15988_d.ptr()))) && (_1c4a16259_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
						_1c4950e0d_pushErr((*(_self_))._field_s, (*_159715_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1ab5c1734;
					};
					if ((!(_15957_constMatched))) {
						if (_1c49ce95e_IsConst(_15988_d.ptr())) {
							_15957_constMatched=(_1c49ce95e_IsConst(_159272_expr.ptr()) && _1dc54ae63_Eq((*(_15988_d))._field_Constant.ptr(), (*((*(_159272_expr))._field_Constant))));
						} else {
							jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _16427_exprCti = _1c4a16259_comptimeTypeInfo((*(_159272_expr))._field_Kind);;
							_15957_constMatched=((_16427_exprCti != nullptr) && _1c4a1094b_Equal((*(_1c4a16259_comptimeTypeInfo((*(_15988_d))._field_Kind)))._field_base, (*_16427_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15937_case.alloc)._field_Exprs=jule::append((*_15937_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15988_d; __jule_collection; }));
				if ((((!((*_159230_m.alloc)._field_Comptime)) || (_1c4a16259_comptimeTypeInfo((*(_159272_expr))._field_Kind) == nullptr)) || (_1c4a16259_comptimeTypeInfo((*(_15988_d))._field_Kind) == nullptr))) {
					_1c49b798b_assignTypeChecker _16529_checker = _1c49b798b_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_159272_expr))._field_Kind, ._field_d=_15988_d, ._field_errorToken=(*_159715_e.alloc)._field_Token};;
					_1c49b898c_check(&_16529_checker);
				};
			}
			_iter_next_1ab5c1734:;
			++it;
			goto _iter_begin_1ab5c1734;
		}
		_iter_end_1ab5c1734:;
	};
	if (((!((*_159230_m.alloc)._field_Comptime)) || _15957_constMatched)) {
		(*_15937_case.alloc)._field_Scope=_1c4920839_checkCaseScope(_self_, &(_15937_case), &((*_159253_c.alloc)._field_Scope));
	};
	return _15937_case;;
}



inline void _1c49212b8_checkCases(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _166732_m, jule::Ptr<_1c490ee99_Match> _166751_rm, jule::Ptr<_1c49ce024_Data> _166767_expr) {
	(*(_166751_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49109c2_Case>>::alloc(0LL, (*((*(_166732_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49109c2_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d3e72:;
		if (it != expr_end) {
			jule::I64 _16697_i = it - expr->begin();
			{
				jule::Ptr<_1c49109c2_Case> _16708_case = jule::new_ptr<_1c49109c2_Case>(_1c49109c2_Case{._field_Owner=_166751_rm, ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c49ce024_Data>>(nullptr), ._field_Next=jule::Ptr<_1c49109c2_Case>(nullptr)});;
				if ((_16697_i > 0LL)) {
					(*((*_166751_rm.alloc)._field_Cases[(_16697_i - 1LL)]))._field_Next=_16708_case;
				};
				(*_166751_rm.alloc)._field_Cases=jule::append((*_166751_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49109c2_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16708_case; __jule_collection; }));
			}
			_iter_next_1ab5d3e72:;
			++it;
			_16697_i++;
			goto _iter_begin_1ab5d3e72;
		}
		_iter_end_1ab5d3e72:;
	};
	if ((((*_166751_rm.alloc)._field_Default != nullptr) && ((*((*(_166732_m))))._field_Cases.len() > 0LL))) {
		(*((*_166751_rm.alloc)._field_Cases[((*_166751_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_166751_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_166732_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5d755d:;
		if (it != expr_end) {
			jule::I64 _16838_i = it - expr->begin();
			jule::Ptr<_1c489974c_Case> _168315_c = *it;
			{
				_1c4920d9a_checkCase(_self_, _166751_rm, _16838_i, _168315_c, _166767_expr);
			}
			_iter_next_1ab5d755d:;
			++it;
			_16838_i++;
			goto _iter_begin_1ab5d755d;
		}
		_iter_end_1ab5d755d:;
	};
}



inline jule::Ptr<_1c49109c2_Case> _1c49216b4_checkDefault(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match> _168833_m, jule::Ptr<_1c48985a3_Else> _168848_d) {
	jule::Ptr<_1c49109c2_Case> _16897_def = jule::new_ptr<_1c49109c2_Case>(_1c49109c2_Case{._field_Owner=_168833_m, ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c49ce024_Data>>(nullptr), ._field_Next=jule::Ptr<_1c49109c2_Case>(nullptr)});;
	(*(_16897_def))._field_Scope=_1c4920839_checkCaseScope(_self_, &(_16897_def), &((*(_168848_d))._field_Scope));
	return _16897_def;;
}



inline void _1c4921a27_checkComptimePanic(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c486c19d_Token> _169639_callToken, jule::Ptr<_1c490ac86_Scope>* _169659_s) {
	if (((*((*(_169659_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _17003_stmt = (*((*(_169659_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _17003_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab5dac59:;
			{
				jule::Ptr<_1c49ce024_Data> _17034_d = _17003_stmt.unsafe_cast_ptr<_1c49ce024_Data>();;
				{
					auto &_match_expr{ (*(_17034_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1ab5dbbd3:;
						{
							jule::Ptr<_1c48b207d_BuiltinPanicCallExprModel> _17069_m = (*(_17034_d))._field_Model.unsafe_cast_ptr<_1c48b207d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_17069_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1ab5dcd7c:;
									{
										jule::Ptr<_1dc54537a_Const> _17096_c = (*(_17069_m))._field_Expr.unsafe_cast_ptr<_1dc54537a_Const>();;
										if ((!(_1dc549b32_IsStr(_17096_c.ptr())))) {
											goto _match_end_1ab5dcd16;
										};
										if ((_169639_callToken == nullptr)) {
											jule::Ptr<_1c4913244_scopeChecker> _171411_root = _1c49168a7_getHardRoot(_self_);;
											if (((*(_171411_root))._field_calledFrom == nullptr)) {
												_169639_callToken=(*(_17069_m))._field_Token;
											} else {
												_169639_callToken=(*(_171411_root))._field_calledFrom;
											};
										};
										_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), _169639_callToken, jule::Str::lit("compile-time panic: @", 21), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1dc547536_ReadStr(_17096_c), &__jule_any_type4); __jule_collection; }));
										_1c4915ab5_stop(_self_);
									}
								}
								_match_end_1ab5dcd16:;
							};
						}
					}
					_match_end_1ab5dbb6c:;
				};
			}
		}
		_match_end_1ab5dac04:;
	};
}



inline void _1c4921d8a_processConstMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c490ee99_Match>* _172839_tm, jule::Ptr<_1c489a066_MatchCase>* _172856_m) {
	{
		auto expr = &((*((*(_172839_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab5dd1ce:;
		if (it != expr_end) {
			jule::I64 _17298_i = it - expr->begin();
			jule::Ptr<_1c49109c2_Case> _172915_c = *it;
			{
				if (((*(_172915_c))._field_Scope != nullptr)) {
					jule::Ptr<_1c486c19d_Token> _173113_token = nullptr;;
					if (((!((*((*(_172839_tm))))._field_TypeMatch)) && ((*(*(_172915_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_173113_token=(*((*((*((*(_172856_m))))._field_Cases[_17298_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1c4921a27_checkComptimePanic(_self_, _173113_token, &((*_172915_c.alloc)._field_Scope));
					(*((*(_172839_tm))))._field_Default=_172915_c;
					(*((*(_172839_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1ab5dd1ce:;
			++it;
			_17298_i++;
			goto _iter_begin_1ab5dd1ce;
		}
		_iter_end_1ab5dd1ce:;
	};
	if (((*((*(_172856_m))))._field_Default != nullptr)) {
		(*((*(_172839_tm))))._field_Cases=nullptr;
		(*((*(_172839_tm))))._field_Default=_1c49216b4_checkDefault(_self_, (*(_172839_tm)), (*((*(_172856_m))))._field_Default);
		if (((*((*(_172839_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1c486c19d_Token> _174513_token = nullptr;;
			if ((!((*((*(_172839_tm))))._field_TypeMatch))) {
				_174513_token=(*((*((*((*(_172856_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1c4921a27_checkComptimePanic(_self_, _174513_token, &((*(*((*(_172839_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_172839_tm))))._field_Cases=nullptr;
	};
}



inline void _1c4922143_checkTypeMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _175736_m) {
	jule::Ptr<_1c49ce024_Data> _17587_d = _1c49ed51b_eval1(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*((*(_175736_m))))._field_Expr);;
	if ((_17587_d == nullptr)) {
		return;;
	};
	if ((*((*(_175736_m))))._field_Comptime) {
		jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _17648_cti = _1c4a16259_comptimeTypeInfo((*(_17587_d))._field_Kind.ptr());;
		if ((_17648_cti == nullptr)) {
			if ((!((*(_17587_d))._field_Decl))) {
				_1c4950e0d_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_17587_d))._field_Kind=(*(_17648_cti))._field_base;
		};
	} else if (((*(_17587_d))._field_Decl || (!(((((_1c4a12893_Prim((*(_17587_d))._field_Kind.ptr()) != nullptr) && _1c4a1b539_IsAny(_1c4a12893_Prim((*(_17587_d))._field_Kind).ptr())) || (_1c4a1419c_Trait((*(_17587_d))._field_Kind) != nullptr)) || (_1c4a133cc_TypeEnum((*(_17587_d))._field_Kind) != nullptr)))))) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*((*((*(_175736_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c490ee99_Match> _17787_tm = jule::new_ptr<_1c490ee99_Match>(_1c490ee99_Match{._field_Expr=_17587_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_175736_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1c49109c2_Case>>(nullptr), ._field_Default=jule::Ptr<_1c49109c2_Case>(nullptr)});;
	if (((!((*(_17787_tm))._field_Comptime)) && ((*((*(_175736_m))))._field_Default != nullptr))) {
		(*_17787_tm.alloc)._field_Default=_1c49216b4_checkDefault(_self_, _17787_tm, (*((*(_175736_m))))._field_Default);
	};
	_1c49212b8_checkCases(_self_, _175736_m, _17787_tm, _17587_d);
	if ((*_17787_tm.alloc)._field_Comptime) {
		_1c4921d8a_processConstMatch(_self_, &(_17787_tm), _175736_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17787_tm, &__jule_any_type47); __jule_collection; }));
}



inline void _1c49223eb_checkCommonMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase>* _179938_m) {
	jule::Ptr<_1c49ce024_Data> _180011_d = nullptr;;
	if (((*((*(_179938_m))))._field_Expr == nullptr)) {
		_180011_d=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc545d81_NewBool(true)});
		(*(_180011_d))._field_Model=jule::Any((*_180011_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_180011_d=_1c49edb9d_evalExpr1(_1c49583aa_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*((*(_179938_m))))._field_Expr);
		if ((_180011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_179938_m))))._field_Comptime) {
		if ((!(_1c4925d7d_canComptimeMatch(&(_180011_d))))) {
			_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1c4a14950_comptime((*(_180011_d))._field_Kind.ptr())) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_179938_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c490ee99_Match> _18267_mc = jule::new_ptr<_1c490ee99_Match>(_1c490ee99_Match{._field_Expr=_180011_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_179938_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1c49109c2_Case>>(nullptr), ._field_Default=jule::Ptr<_1c49109c2_Case>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18267_mc, &__jule_any_type47); __jule_collection; }));
	if (((!((*(_18267_mc))._field_Comptime)) && ((*((*(_179938_m))))._field_Default != nullptr))) {
		(*_18267_mc.alloc)._field_Default=_1c49216b4_checkDefault(_self_, _18267_mc, (*((*(_179938_m))))._field_Default);
	};
	_1c49212b8_checkCases(_self_, _179938_m, _18267_mc, _180011_d);
	if ((*_18267_mc.alloc)._field_Comptime) {
		_1c4921d8a_processConstMatch(_self_, &(_18267_mc), _179938_m);
	};
}



inline void _1c49226a4_checkMatch(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489a066_MatchCase> _184931_m) {
	if ((*(_184931_m))._field_TypeMatch) {
		_1c4922143_checkTypeMatch(_self_, &(_184931_m));
		return;;
	};
	_1c49223eb_checkCommonMatch(_self_, &(_184931_m));
}



inline void _1c492295c_checkFall(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4890534_FallSt> _185726_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1c49160d2_isDeferred(_self_))) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185726_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1c49109c2_Case* _18657_case = ((_1c49109c2_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_18657_case))._field_Owner))._field_Comptime) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_18657_case))._field_Next == nullptr)) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_185726_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1c49111ba_FallSt>(_1c49111ba_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_18657_case))._field_Next)}), &__jule_any_type48); __jule_collection; }));
}



inline jule::Ptr<_1c490d32c_BreakSt> _1c4922c9d_checkBreakWithLabel(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _188036_b) {
	jule::Ptr<_1c490d32c_BreakSt> _18817_brk = _1c49230de_checkPlainBreak(_self_, _188036_b);;
	if ((_18817_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18817_brk))._field_It=0LLU;
	(*(_18817_brk))._field_Mtch=0LLU;
	jule::Ptr<_1c4911bc1_scopeLabel> _18917_label = _1c49082a0_findLabelParent(&((*((*(_188036_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18917_label == nullptr)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_188036_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*(_18917_label))._field_used=true;
	if ((((*(_18917_label))._field_pos + 1LL) >= (*((*((*(_18917_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::I64 _19043_i = ((*(_18917_label))._field_pos + 1LL);;
	if ((_19043_i >= (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts.len())) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	} else {
		jule::Any _19088_st = (*(*((*(_18917_label))._field_scope))._field_scope.alloc)._field_Stmts[_19043_i];;
		{
			auto &_match_expr{ _19088_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1ab61c31d:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1c490bbbb_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1ab61c4e9:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1c490cabd_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1ab61c560:;
				{
					(*(_18817_brk))._field_It=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1c490c172_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1ab61c5c6:;
				{
					(*(_18817_brk))._field_Mtch=static_cast<jule::Uintptr>(_19088_st.unsafe_cast_ptr<_1c490ee99_Match>());
				}
			}
			else {
				_case_begin_1ab61c483:;
				{
					_1c4950e0d_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				}
			}
			_match_end_1ab61c42d:;
		};
	};
	if (((*(_18817_brk))._field_It != 0LLU)) {
		if ((!(_1c491cacd_checkValidBreakLabel(_self_, (*(_18817_brk))._field_It)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	if (((*(_18817_brk))._field_Mtch != 0LLU)) {
		if ((!(_1c491cacd_checkValidBreakLabel(_self_, (*(_18817_brk))._field_Mtch)))) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*_188036_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188036_b))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
	};
	return _18817_brk;;
}



inline jule::Ptr<_1c490d32c_BreakSt> _1c49230de_checkPlainBreak(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _193832_b) {
	if (_1c49160d2_isDeferred(_self_)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_193832_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4913244_scopeChecker> _19447_scope = _self_;;
	_julec_label_1ab62517d:;
	{
		
		if ((((((*_19447_scope.alloc)._field_it == 0LLU) && ((*_19447_scope.alloc)._field_cse == 0LLU)) && ((*_19447_scope.alloc)._field_parent != nullptr)) && ((*_19447_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1ab625755:;
			{
				_19447_scope=(*_19447_scope.alloc)._field_parent;
				goto _julec_label_1ab62517d;
			}
		}
		else if (((*_19447_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1ab6257dd:;
			{
				return jule::new_ptr<_1c490d32c_BreakSt>(_1c490d32c_BreakSt{._field_It=(*_19447_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_19447_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1ab625854:;
			{
				return jule::new_ptr<_1c490d32c_BreakSt>(_1c490d32c_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1c49109c2_Case*)((*_19447_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1ab625667:;
	};
	_1c4950e0d_pushErr((*(_self_))._field_s, (*_193832_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1c4923397_checkBreak(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4897849_BreakSt> _196027_b) {
	if (((*(_196027_b))._field_Label != nullptr)) {
		jule::Ptr<_1c490d32c_BreakSt> _19628_brk = _1c4922c9d_checkBreakWithLabel(_self_, _196027_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19628_brk, &__jule_any_type49); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c490d32c_BreakSt> _19677_brk = _1c49230de_checkPlainBreak(_self_, _196027_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19677_brk, &__jule_any_type49); __jule_collection; }));
}



inline void _1c4923650_checkRet(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c48959bd_RetSt> _197129_r) {
	if (_1c49160d2_isDeferred(_self_)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197129_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c4911561_RetSt> _19767_rt = jule::new_ptr<_1c4911561_RetSt>(_1c4911561_RetSt{._field_Func=(*(_1c4916621_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19767_rt, &__jule_any_type50); __jule_collection; }));
	jule::Ptr<_1c49c6648_retTypeChecker> _19817_rtc = jule::new_ptr<_1c49c6648_retTypeChecker>(_1c49c6648_retTypeChecker{._field_sc=_self_, ._field_f=(*(_19767_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1c4886aad_Expr>>(nullptr), ._field_errorToken=(*_197129_r.alloc)._field_Token, ._field_model=jule::Any(nullptr)});;
	jule::Bool _19863_ok = _1c49c7638_check(_19817_rtc.ptr(), &((*_197129_r.alloc)._field_Expr));;
	if ((!(_19863_ok))) {
		return;;
	};
	if (((*_197129_r.alloc)._field_Expr != nullptr)) {
		(*_19767_rt.alloc)._field_Expr=(*_19817_rtc.alloc)._field_model;
	};
}



inline void _1c4923908_checkUseExpr(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c4887482_UseExpr> _199629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_199629_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1c49160d2_isDeferred(_self_)) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1c4950e0d_pushErr((*(_self_))._field_s, (*_199629_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1c4923bb1_checkNode(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Any* _201231_node) {
	{
		auto &_match_expr{ (*(_201231_node)) };
		
		if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1ab636436:;
			{
				_1c491957a_checkAnonScope(_self_, (*(_201231_node)).cast_ptr<_1c489279a_ScopeTree>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab635ca4:;
			{
				_1c4917d70_checkVarDecl(_self_, (*(_201231_node)).cast_ptr<_1c48955e4_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ab636106:;
			{
				_1c49183d1_checkTypeAliasDecl(_self_, (*(_201231_node)).cast_ptr<_1c4899296_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ab63616c:;
			{
				_1c4919b96_checkExpr(_self_, (*(_201231_node)).cast_ptr<_1c4886aad_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab6361d3:;
			{
				_1c491a5d1_checkConditional(_self_, (*(_201231_node)).cast_ptr<_1c4898a59_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ab636546:;
			{
				_1c491c44b_checkIter(_self_, (*(_201231_node)).cast_ptr<_1c489623d_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ab6365ac:;
			{
				_1c491d1c7_checkCont(_self_, (*(_201231_node)).cast_ptr<_1c4897c23_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ab636623:;
			{
				_1c491d480_checkLabel(_self_, (*(_201231_node)).cast_ptr<_1c488ed5d_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ab636689:;
			{
				_1c491d738_pushGoto(_self_, (*(_201231_node)).cast_ptr<_1c4890237_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ab636700:;
			{
				_1c492043d_checkAssignSt(_self_, (*(_201231_node)).cast_ptr<_1c4891227_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ab636766:;
			{
				_1c49226a4_checkMatch(_self_, (*(_201231_node)).cast_ptr<_1c489a066_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ab6367cc:;
			{
				_1c492295c_checkFall(_self_, (*(_201231_node)).cast_ptr<_1c4890534_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ab636843:;
			{
				_1c4923397_checkBreak(_self_, (*(_201231_node)).cast_ptr<_1c4897849_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ab6368ba:;
			{
				_1c4923650_checkRet(_self_, (*(_201231_node)).cast_ptr<_1c48959bd_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab636942:;
			{
				_1c4923908_checkUseExpr(_self_, (*(_201231_node)).cast_ptr<_1c4887482_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1ab635e6e:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ab635e19:;
	};
}



inline void _1c4923dae_checkResult(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	_1c489213a_Stmt _20507_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _20507_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ab640709:;
			{
				jule::Ptr<_1c4887482_UseExpr> _20538_ue = _20507_stmt._field_Data.unsafe_cast_ptr<_1c4887482_UseExpr>();;
				jule::Ptr<_1c49ce024_Data> _20548_d = _1c49edede_evalExpr(_1c49583aa_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), (*(_20538_ue))._field_Expr);;
				if ((_20548_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20548_d, &__jule_any_type23); __jule_collection; }));
				jule::Ptr<_1c49c6648_retTypeChecker> _20598_rtc = jule::new_ptr<_1c49c6648_retTypeChecker>(_1c49c6648_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_types=_1c48bc94b_Types((*_self_.alloc)._field_result.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1c4886aad_Expr>>(nullptr), ._field_errorToken=(*((*_20538_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr)});;
				_1c49c7638_check(_20598_rtc.ptr(), &((*_20538_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ab6412cb:;
			{
				jule::Ptr<_1c4886aad_Expr> _20668_expr = _20507_stmt._field_Data.unsafe_cast_ptr<_1c4886aad_Expr>();;
				jule::Ptr<_1c49ce024_Data> _20678_d = _1c49edede_evalExpr(_1c49583aa_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)), _20668_expr);;
				if ((_20678_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_20678_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ab646c1b:;
						{
							jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> _20739_m = (*(_20678_d))._field_Model.unsafe_cast_ptr<_1c48b413a_BuiltinErrorCallExprModel>();;
							_1c49198dd_processErrorCall(_self_, &(_20739_m), (*(_20668_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_20678_d, &__jule_any_type23); __jule_collection; }));
						}
					}
					else {
						_case_begin_1ab646d81:;
						{
							return;;
						}
					}
					_match_end_1ab646963:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1ab640990:;
			{
				_1c4923bb1_checkNode(_self_, &(_20507_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ab640929:;
			{
				_1c4923bb1_checkNode(_self_, &(_20507_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ab6408c4:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1c49240ac_checkTree(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I64 _20957_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20957_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20957_n); ((*_self_.alloc)._field_i)++) {
		{
			_1c489213a_Stmt _21038_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1c4923bb1_checkNode(_self_, &(_21038_stmt._field_Data));
			if (_1c4915d4b_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1ab64aeea:;
	}
	_iter_end_1ab64aeea:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1c4923dae_checkResult(_self_);
	};
}



inline void _1c4924420_checkGoto(_1c4913244_scopeChecker* _self_, jule::Ptr<_1c4912254_scopeGoto>* _211430_gt, jule::Ptr<_1c4911bc1_scopeLabel>* _211451_label) {
	jule::Ptr<_1c4913244_scopeChecker> _21157_gtsc = (*((*(_211430_gt))))._field_scope;;
	while ((((*(_21157_gtsc))._field_childIndex - 1LL) > (*((*((*(_211451_label))))._field_scope))._field_childIndex)) {
		{
			_21157_gtsc=(*_21157_gtsc.alloc)._field_parent;
		}
	_iter_next_1ab64e691:;
	}
	_iter_end_1ab64e691:;;
	jule::I64 _21207_n = 0LL;;
	if (((*_21157_gtsc.alloc)._field_scope == (*(*((*(_211451_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_211430_gt))))._field_pos > (*((*(_211451_label))))._field_pos)) {
			return;;
		};
		_21207_n=(*((*(_211430_gt))))._field_pos;
	};
	jule::I64 _21337_i = ((*((*(_211451_label))))._field_pos - 1LL);;
	if ((_21207_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_211451_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab652ce3:;
			if (it != expr_end) {
				jule::I64 _21368_j = it - expr->begin();
				jule::Any _213611_stmt = *it;
				{
					if (_1c49089dc_stmtIsGotoScope(&(_213611_stmt), &((*_21157_gtsc.alloc)._field_scope))) {
						_21207_n=_21368_j;
						goto _iter_end_1ab652ce3;
					};
				}
				_iter_next_1ab652ce3:;
				++it;
				_21368_j++;
				goto _iter_begin_1ab652ce3;
			}
			_iter_end_1ab652ce3:;
		};
	};
	for (; (_21337_i >= _21207_n); (_21337_i)--) {
		{
			jule::Any _21468_stmt = (*(*((*((*(_211451_label))))._field_scope))._field_scope.alloc)._field_Stmts[_21337_i];;
			if (_1c490a79c_stmtIsDef(&(_21468_stmt))) {
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_211430_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_211430_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return;;
			};
		}
	_iter_next_1ab653387:;
	}
	_iter_end_1ab653387:;;
}



inline void _1c492461d_checkGotos(_1c4913244_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab652496:;
		if (it != expr_end) {
			jule::Ptr<_1c4912254_scopeGoto> _215515_gt = *it;
			{
				jule::Ptr<_1c4911bc1_scopeLabel> _21568_label = _1c49176bb_findLabelAll(_self_, &((*((*((*(_215515_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_21568_label == nullptr)) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*(*(_215515_gt))._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_215515_gt))._field_gt))._field_Label.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					goto _iter_next_1ab652496;
				};
				(*((*_215515_gt.alloc)._field_st))._field_Label=(*(_21568_label))._field_label;
				(*(_21568_label))._field_used=true;
				_1c4924420_checkGoto(_self_, &(_215515_gt), &(_21568_label));
			}
			_iter_next_1ab652496:;
			++it;
			goto _iter_begin_1ab652496;
		}
		_iter_end_1ab652496:;
	};
}



inline void _1c492481b_checkLabels(_1c4913244_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6596bd:;
		if (it != expr_end) {
			jule::Ptr<_1c4911bc1_scopeLabel> _216810_l = *it;
			{
				if ((!((*(_216810_l))._field_used))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_216810_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_216810_l.alloc)._field_label))._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab6596bd:;
			++it;
			goto _iter_begin_1ab6596bd;
		}
		_iter_end_1ab6596bd:;
	};
}



inline void _1c4924a19_checkVars(_1c4913244_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab65b318:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _217610_v = *it;
			{
				if (((((!((*(_217610_v))._field_Used)) && (!((*_217610_v.alloc)._field_Constant))) && (!(_1c486ea85_IsIgnoreIdent((*_217610_v.alloc)._field_Ident)))) && (!(_1c486ed4e_IsAnonIdent((*_217610_v.alloc)._field_Ident))))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_217610_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_217610_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab65b318:;
			++it;
			goto _iter_begin_1ab65b318;
		}
		_iter_end_1ab65b318:;
	};
}



inline void _1c4924c17_checkAliases(_1c4913244_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab65d9be:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> _218410_a = *it;
			{
				if ((((!((*(_218410_a))._field_Used)) && (!(_1c486ea85_IsIgnoreIdent((*_218410_a.alloc)._field_Ident)))) && (!(_1c486ed4e_IsAnonIdent((*_218410_a.alloc)._field_Ident))))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_218410_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_218410_a.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab65d9be:;
			++it;
			goto _iter_begin_1ab65d9be;
		}
		_iter_end_1ab65d9be:;
	};
}



inline void _1c492507a_check(jule::Ptr<_1c4913244_scopeChecker> _self_, jule::Ptr<_1c489279a_ScopeTree>* _219227_tree, jule::Ptr<_1c490ac86_Scope>* _219250_s) {
	(*((*(_219250_s))))._field_Deferred=(*((*(_219227_tree))))._field_Deferred;
	(*((*(_219250_s))))._field_Unsafety=(*((*(_219227_tree))))._field_Unsafety;
	jule::I64 _21963_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_219227_tree));
	(*_self_.alloc)._field_scope=(*(_219250_s));
	_1c49240ac_checkTree(_self_);
	if ((_21963_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1c4924a19_checkVars(_self_);
		_1c4924c17_checkAliases(_self_);
		if (_1c49158b7_isRoot(_self_)) {
			_1c492461d_checkGotos(_self_);
			_1c492481b_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1c4913244_scopeChecker> _1c4925311_newChildChecker(jule::Ptr<_1c4913244_scopeChecker> _self_) {
	jule::Ptr<_1c4913244_scopeChecker> _22167_base = _1c4907a63_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_22167_base))._field_parent=_self_;
	(*_22167_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_22167_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_22167_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _22167_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4913244_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4926873_directiveChecker_eq(_1c4926873_directiveChecker *_self_, _1c4926873_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1c4926cb3_checkCdef(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab666752:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c48b8738_Fn>()))._field_Binded) {
					goto _match_end_1ab666983;
				};
				goto _case_begin_1ab6669d8;
			}
		}
		else {
			_case_begin_1ab6669d8:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab666983:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c492706b_checkTypedef(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab6696ab:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c48a3679_Struct>()))._field_Binded) {
					goto _match_end_1ab6698dc;
				};
				goto _case_begin_1ab669942;
			}
		}
		else {
			_case_begin_1ab669942:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab6698dc:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c4927324_checkNamespace(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab66c615:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c48a3679_Struct>()))._field_Binded))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab66c912:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c48b8738_Fn>()))._field_Binded))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab66c978:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1c49715b0_Var>()))._field_Binded))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ab66c89b:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab66c846:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c486c19d_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c4950e0d_pushErr((*(_self_))._field_s, _733_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab6783e0:;
			{
				if ((_1c4a076ac_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1c4881b96_Directive> _909_typedef = jule::new_ptr<_1c4881b96_Directive>(_1c4881b96_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr)});;
					(*((*(_909_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4881b96_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _909_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1ab678379:;
	};
}



inline void _1c49275cc_checkDeprecated(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _9936_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab67a5bd:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c48a3679_Struct>()))._field_Binded) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab67a821:;
			{
				jule::Ptr<_1c48b8738_Fn> _1068_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c48b8738_Fn>();;
				if ((((*(_1068_f))._field_Binded || _1c48b920b_IsEntryPoint(_1068_f)) || _1c48b9492_IsInit(_1068_f))) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab67a887:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1c49715b0_Var>()))._field_Binded) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1ab67a7aa:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab67a755:;
	};
	if (((*((*(_9936_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9936_d))))._field_Args.len() > 1LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_9936_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_9936_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c486c19d_Token> _1253_arg = (*((*(_9936_d))))._field_Args[0LL];;
	if (((*(_1253_arg))._field_Id != static_cast<jule::U64>(4LLU))) {
		_1c4950e0d_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1253_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1c4950e0d_pushErr((*(_self_))._field_s, _1253_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9936_d))))._field_Args[0LL]))._field_Kind=(*_1253_arg.alloc)._field_Kind.slice(1LL, ((*_1253_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1c4927885_checkTest(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _13926_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ab681e43:;
			{
				jule::Ptr<_1c48b8738_Fn> _1424_f = (*(_self_))._field_o.unsafe_cast_ptr<_1c48b8738_Fn>();;
				if ((((!((*(_1424_f))._field_Binded)) && (!(_1c48b9492_IsInit(_1424_f)))) && (!(_1c48b920b_IsEntryPoint(_1424_f))))) {
					goto _match_end_1ab6868e8;
				};
				if (_1c48b8e75_IsMethod(_1424_f)) {
					_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*_1424_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ab6868e8;
				};
				goto _case_begin_1ab68694d;
			}
		}
		else {
			_case_begin_1ab68694d:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_13926_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab6868e8:;
	};
	if (((*((*(_13926_d))))._field_Args.len() > 0LL)) {
		_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_13926_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c4927b3d_checkDirective(_1c4926873_directiveChecker* _self_, jule::Ptr<_1c4881b96_Directive>* _16035_d) {
	{
		auto &_match_expr{ (*((*((*(_16035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1ab68b5bd:;
			{
				_1c4926cb3_checkCdef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1ab68b634:;
			{
				_1c492706b_checkTypedef(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1ab68b69a:;
			{
				_1c4927324_checkNamespace(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1ab68b711:;
			{
				_1c49275cc_checkDeprecated(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1ab68b777:;
			{
				_1c4927885_checkTest(_self_, _16035_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1ab68b7dd:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1ab68b007:;
			{
				_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*((*(_16035_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16035_d))))._field_Tag))._field_Kind, &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1ab68b502:;
	};
}



inline void _1c4927d3b_check(_1c4926873_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69058e:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _18115_d = *it;
			{
				_1c4927b3d_checkDirective(_self_, &(_18115_d));
			}
			_iter_next_1ab69058e:;
			++it;
			goto _iter_begin_1ab69058e;
		}
		_iter_end_1ab69058e:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c4926873_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c492d33b_SelectPackage(_1c492cd1e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c492d737_FindVar(_1c492cd1e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1c4930393_isLookupable(_self_, &(_18923_ident))))) {
		return nullptr;;
	};
	return _1c492a305_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c492db33_FindTypeAlias(_1c492cd1e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1c4930393_isLookupable(_self_, &(_20129_ident))))) {
		return nullptr;;
	};
	return _1c492a778_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1c48a3679_Struct> _1c492e02e_FindStruct(_1c492cd1e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1c4930393_isLookupable(_self_, &(_21326_ident))))) {
		return nullptr;;
	};
	return _1c492aba7_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1c48b8738_Fn> _1c492e42a_FindFn(_1c492cd1e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1c4930393_isLookupable(_self_, &(_22522_ident))))) {
		return nullptr;;
	};
	return _1c492b15d_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c492e76b_FindTrait(_1c492cd1e_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1c4930393_isLookupable(_self_, &(_23625_ident))))) {
		return nullptr;;
	};
	return _1c492b49e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c492eaac_FindEnum(_1c492cd1e_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1c4930393_isLookupable(_self_, &(_24724_ident))))) {
		return nullptr;;
	};
	return _1c492b823_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c492eded_FindTypeEnum(_1c492cd1e_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1c4930393_isLookupable(_self_, &(_25828_ident))))) {
		return nullptr;;
	};
	return _1c492bb97_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1c4930393_isLookupable(_1c492cd1e_ImportInfo* _self_, jule::Str* _26725_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1c49306d4_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1c49306d4_existIdent(_self_, (*(_26725_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1c49306d4_existIdent(_1c492cd1e_ImportInfo* _self_, jule::Str _28722_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6a55a4:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_28810_sident = it;
			{
				if (((*((*(_28810_sident))))._field_Kind == _28722_ident)) {
					return true;;
				};
			}
			_iter_next_1ab6a55a4:;
			++it;
			goto _iter_begin_1ab6a55a4;
		}
		_iter_end_1ab6a55a4:;
	};
	return false;;
}



inline jule::Bool _1c493096a_isAccessibleViaSelection(_1c492cd1e_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1c49306d4_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c492cd1e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c493121d_SelectPackage(_1c4930c45_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c4931619_FindVar(_1c4930c45_Package* _self_, jule::Str _31423_ident, jule::Bool _31435_binded) {
	return _1c492a305_findVarInPackage(&((*(_self_))._field_Files), &(_31423_ident), _31435_binded);;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c4931a15_FindTypeAlias(_1c4930c45_Package* _self_, jule::Str _32029_ident, jule::Bool _32041_binded) {
	return _1c492a778_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32029_ident), _32041_binded);;
}



inline jule::Ptr<_1c48a3679_Struct> _1c4931e11_FindStruct(_1c4930c45_Package* _self_, jule::Str _32626_ident, jule::Bool _32638_binded) {
	return _1c492aba7_findStructInPackage(&((*(_self_))._field_Files), &(_32626_ident), _32638_binded);;
}



inline jule::Ptr<_1c48b8738_Fn> _1c493230c_FindFn(_1c4930c45_Package* _self_, jule::Str _33222_ident, jule::Bool _33234_binded) {
	return _1c492b15d_findFnInPackage(&((*(_self_))._field_Files), &(_33222_ident), _33234_binded);;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c493264d_FindTrait(_1c4930c45_Package* _self_, jule::Str _33825_ident) {
	return _1c492b49e_findTraitInPackage(&((*(_self_))._field_Files), &(_33825_ident));;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c493298e_FindEnum(_1c4930c45_Package* _self_, jule::Str _34424_ident) {
	return _1c492b823_findEnumInPackage(&((*(_self_))._field_Files), &(_34424_ident));;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4932cd0_FindTypeEnum(_1c4930c45_Package* _self_, jule::Str _35028_ident) {
	return _1c492bb97_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35028_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4930c45_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _1c494cb0d_pushComptimeTypeInfo(_1c494c668_commonSemaMeta* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _21541_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6dbd49:;
		if (it != expr_end) {
			jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _21615_t2 = *it;
			{
				if ((((*((*(_21615_t2))._field_base))._field_BindIdent == (*((*(_21541_t))))._field_BindIdent) && _1c4a1094b_Equal((*(_21615_t2))._field_base, (*(_21541_t))))) {
					return _21615_t2;;
				};
			}
			_iter_next_1ab6dbd49:;
			++it;
			goto _iter_begin_1ab6dbd49;
		}
		_iter_end_1ab6dbd49:;
	};
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _2217_t1 = jule::new_ptr<_1c48e3ae8_comptimeTypeInfo>(_1c48e3ae8_comptimeTypeInfo{._field_base=(*(_21541_t))});;
	{ jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2217_t1); };
	return _2217_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c494c668_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos << ", ";
	_Stream << "runtime:" << _Src._field_runtime;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c494d768_SelectPackage(_1c494d290_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _24429_selector) {
	return _1c49c91c8_SelectPackage((*(_self_))._field_file.ptr(), _24429_selector);;
}



inline jule::Ptr<_1c49715b0_Var> _1c494db64_FindVar(_1c494d290_sema* _self_, jule::Str _25423_ident, jule::Bool _25435_binded) {
	jule::Ptr<_1c49715b0_Var> _2567_v = _1c492a305_findVarInPackage(&((*(_self_))._field_files), &(_25423_ident), _25435_binded);;
	if ((_2567_v != nullptr)) {
		return _2567_v;;
	};
	if ((!(_1c494a27b_IsPub(_25423_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e0cb5:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _26715_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_26715_imp), &(_25423_ident))))) {
					goto _iter_next_1ab6e0cb5;
				};
				_2567_v=_1c492d737_FindVar(_26715_imp.ptr(), _25423_ident, _25435_binded);
				if (((_2567_v != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_2567_v.alloc)._field_Public, (*_2567_v.alloc)._field_Token))) {
					return _2567_v;;
				};
			}
			_iter_next_1ab6e0cb5:;
			++it;
			goto _iter_begin_1ab6e0cb5;
		}
		_iter_end_1ab6e0cb5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c494e060_FindTypeAlias(_1c494d290_sema* _self_, jule::Str _28629_ident, jule::Bool _28641_binded) {
	jule::Ptr<_1c4a0e41c_TypeAlias> _2887_ta = _1c492a778_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28629_ident), _28641_binded);;
	if ((_2887_ta != nullptr)) {
		return _2887_ta;;
	};
	if ((!(_1c494a27b_IsPub(_28629_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e3bb9:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _29915_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_29915_imp), &(_28629_ident))))) {
					goto _iter_next_1ab6e3bb9;
				};
				_2887_ta=_1c492db33_FindTypeAlias(_29915_imp.ptr(), _28629_ident, _28641_binded);
				if (((_2887_ta != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_2887_ta.alloc)._field_Public, (*_2887_ta.alloc)._field_Token))) {
					return _2887_ta;;
				};
			}
			_iter_next_1ab6e3bb9:;
			++it;
			goto _iter_begin_1ab6e3bb9;
		}
		_iter_end_1ab6e3bb9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48a3679_Struct> _1c494e45b_FindStruct(_1c494d290_sema* _self_, jule::Str _31826_ident, jule::Bool _31838_binded) {
	jule::Ptr<_1c48a3679_Struct> _3207_s = _1c492aba7_findStructInPackage(&((*(_self_))._field_files), &(_31826_ident), _31838_binded);;
	if ((_3207_s != nullptr)) {
		return _3207_s;;
	};
	if ((!(_1c494a27b_IsPub(_31826_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e6abd:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _33115_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_33115_imp), &(_31826_ident))))) {
					goto _iter_next_1ab6e6abd;
				};
				_3207_s=_1c492e02e_FindStruct(_33115_imp.ptr(), _31826_ident, _31838_binded);
				if (((_3207_s != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_3207_s.alloc)._field_Public, (*_3207_s.alloc)._field_Token))) {
					return _3207_s;;
				};
			}
			_iter_next_1ab6e6abd:;
			++it;
			goto _iter_begin_1ab6e6abd;
		}
		_iter_end_1ab6e6abd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48b8738_Fn> _1c494e857_FindFn(_1c494d290_sema* _self_, jule::Str _34922_ident, jule::Bool _34934_binded) {
	jule::Ptr<_1c48b8738_Fn> _3517_f = _1c492b15d_findFnInPackage(&((*(_self_))._field_files), &(_34922_ident), _34934_binded);;
	if ((_3517_f != nullptr)) {
		return _3517_f;;
	};
	if ((!(_1c494a27b_IsPub(_34922_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6e99c2:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _36215_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_36215_imp), &(_34922_ident))))) {
					goto _iter_next_1ab6e99c2;
				};
				_3517_f=_1c492e42a_FindFn(_36215_imp.ptr(), _34922_ident, _34934_binded);
				if (((_3517_f != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_3517_f.alloc)._field_Public, (*_3517_f.alloc)._field_Token))) {
					return _3517_f;;
				};
			}
			_iter_next_1ab6e99c2:;
			++it;
			goto _iter_begin_1ab6e99c2;
		}
		_iter_end_1ab6e99c2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c494eb98_FindTrait(_1c494d290_sema* _self_, jule::Str _38125_ident) {
	jule::Ptr<_1c48cc1b9_Trait> _3837_t = _1c492b49e_findTraitInPackage(&((*(_self_))._field_files), &(_38125_ident));;
	if ((_3837_t != nullptr)) {
		return _3837_t;;
	};
	if ((!(_1c494a27b_IsPub(_38125_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6ec684:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _39415_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_39415_imp), &(_38125_ident))))) {
					goto _iter_next_1ab6ec684;
				};
				_3837_t=_1c492e76b_FindTrait(_39415_imp.ptr(), _38125_ident);
				if (((_3837_t != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_3837_t.alloc)._field_Public, (*_3837_t.alloc)._field_Token))) {
					return _3837_t;;
				};
			}
			_iter_next_1ab6ec684:;
			++it;
			goto _iter_begin_1ab6ec684;
		}
		_iter_end_1ab6ec684:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c494eed9_FindEnum(_1c494d290_sema* _self_, jule::Str _41324_ident) {
	jule::Ptr<_1c48ce8c5_Enum> _4157_e = _1c492b823_findEnumInPackage(&((*(_self_))._field_files), &(_41324_ident));;
	if ((_4157_e != nullptr)) {
		return _4157_e;;
	};
	if ((!(_1c494a27b_IsPub(_41324_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab700346:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _42615_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_42615_imp), &(_41324_ident))))) {
					goto _iter_next_1ab700346;
				};
				_4157_e=_1c492eaac_FindEnum(_42615_imp.ptr(), _41324_ident);
				if (((_4157_e != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_4157_e.alloc)._field_Public, (*_4157_e.alloc)._field_Token))) {
					return _4157_e;;
				};
			}
			_iter_next_1ab700346:;
			++it;
			goto _iter_begin_1ab700346;
		}
		_iter_end_1ab700346:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c495032a_FindTypeEnum(_1c494d290_sema* _self_, jule::Str _44528_ident) {
	jule::Ptr<_1c48d10d0_TypeEnum> _4477_e = _1c492bb97_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44528_ident));;
	if ((_4477_e != nullptr)) {
		return _4477_e;;
	};
	if ((!(_1c494a27b_IsPub(_44528_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab703008:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _45815_imp = *it;
			{
				if ((!(_1c494b17d_impIsLookupable(&(_45815_imp), &(_44528_ident))))) {
					goto _iter_next_1ab703008;
				};
				_4477_e=_1c492eded_FindTypeEnum(_45815_imp.ptr(), _44528_ident);
				if (((_4477_e != nullptr) && _1c495166c_isAccessibleDefine(_self_, (*_4477_e.alloc)._field_Public, (*_4477_e.alloc)._field_Token))) {
					return _4477_e;;
				};
			}
			_iter_next_1ab703008:;
			++it;
			goto _iter_begin_1ab703008;
		}
		_iter_end_1ab703008:;
	};
	return nullptr;;
}



inline jule::Bool _1c4950737_isFlag(_1c494d290_sema* _self_, jule::I64 _47418_flags) {
	return (((*(_self_))._field_flags & _47418_flags) == _47418_flags);;
}



inline void _1c49509e0_setCurrentFile(_1c494d290_sema* _self_, jule::Ptr<_1c49c8bab_SymbolTable> _47634_f) {
	(*(_self_))._field_file=_47634_f;
}



inline void _1c4950e0d_pushErr(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token> _47823_token, jule::Str _47838_fmt, jule::Slice<jule::Any> _47851_args) {
	{ jule::Slice<_205a977d7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c494ad09_compilerErr(&(_47823_token), true, _47838_fmt, _47851_args)); };
}



inline void _1c4951271_pushSuggestion(_1c494d290_sema* _self_, jule::Str _48330_fmt, jule::Slice<jule::Any> _48343_args) {
	{
		_1c494c3b0_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48330_fmt, _48343_args);
	};
}



inline jule::Bool _1c495166c_isAccessibleDefine(_1c494d290_sema* _self_, jule::Bool _48830_public, jule::Ptr<_1c486c19d_Token> _48844_token) {
	return ((_48830_public || ((*(_48844_token))._field_File == nullptr)) || (_1c487311b_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1c487311b_Dir((*_48844_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1c4951b23_isDuplicatedIdent(_1c494d290_sema* _self_, jule::Uintptr _49529_itself, jule::Str* _49547_ident, jule::Bool _49559_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab709729:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> *_49610_f = it;
			{
				if (_1c49cc20e_isDuplicatedIdent((*(_49610_f)).ptr(), _49529_itself, _49547_ident, _49559_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49610_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab70a72a:;
					if (it != expr_end) {
						jule::Ptr<_1c492cd1e_ImportInfo> *_50111_imp = it;
						{
							{
								auto expr = &((*((*(_50111_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab70b121:;
								if (it != expr_end) {
									jule::Ptr<_1c486c19d_Token> *_50212_selected = it;
									{
										if (((*((*(_50212_selected))))._field_Kind == (*(_49547_ident)))) {
											return true;;
										};
									}
									_iter_next_1ab70b121:;
									++it;
									goto _iter_begin_1ab70b121;
								}
								_iter_end_1ab70b121:;
							};
						}
						_iter_next_1ab70a72a:;
						++it;
						goto _iter_begin_1ab70a72a;
					}
					_iter_end_1ab70a72a:;
				};
			}
			_iter_next_1ab709729:;
			++it;
			goto _iter_begin_1ab709729;
		}
		_iter_end_1ab709729:;
	};
	return false;;
}



inline void _1c4951e86_checkDirectives(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _51237_d, jule::Any _51263_o) {
	_1c4926873_directiveChecker _5137_dc = _1c4926873_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1c4881b96_Directive>>>)(_51237_d)), ._field_o=_51263_o};;
	_1c4927d3b_check(&_5137_dc);
}



inline jule::Bool _1c495243c_checkGenericQuantity(_1c494d290_sema* _self_, jule::I64 _52136_required, jule::I64 _52151_given, jule::Ptr<_1c486c19d_Token> _52163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52136_required == 0LL) && (_52151_given > 0LL))) {
			_case_begin_1ab70d60c:;
			{
				_1c4950e0d_pushErr(_self_, _52163_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52136_required > 0LL) && (_52151_given == 0LL))) {
			_case_begin_1ab70d684:;
			{
				_1c4950e0d_pushErr(_self_, _52163_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52136_required < _52151_given)) {
			_case_begin_1ab70d70b:;
			{
				_1c4950e0d_pushErr(_self_, _52163_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52136_required > _52151_given)) {
			_case_begin_1ab70d783:;
			{
				_1c4950e0d_pushErr(_self_, _52163_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab70d541:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab70d475:;
	};
}



inline jule::Bool _1c4952838_isDuplicatedImportSelection(_1c494d290_sema* _self_, jule::Uintptr _54039_itself, jule::Str* _54057_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab711478:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> *_54110_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54110_imp))) == _54039_itself)) {
					goto _iter_end_1ab711478;
				};
				if (_1c49306d4_existIdent((*(_54110_imp)).ptr(), (*(_54057_ident)))) {
					return true;;
				};
			}
			_iter_next_1ab711478:;
			++it;
			goto _iter_begin_1ab711478;
		}
		_iter_end_1ab711478:;
	};
	return false;;
}



inline jule::Any _1c4952c34_getImportDef(_1c494d290_sema* _self_, jule::Str* _55325_ident, jule::Ptr<_1c492cd1e_ImportInfo>* _55342_imp) {
	if ((_21ddd4ce8_findPackageBuiltinDef(&((*((*(_55342_imp))))._field_LinkPath), _55325_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55342_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7135ce:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _55715_f = *it;
			{
				;
				jule::Any _5608_def = _1c49cbc58_defByIdent(_55715_f.ptr(), _55325_ident, false);;
				if ((_5608_def != nullptr)) {
					return _5608_def;;
				};
			}
			_iter_next_1ab7135ce:;
			++it;
			goto _iter_begin_1ab7135ce;
		}
		_iter_end_1ab7135ce:;
	};
	return nullptr;;
}



inline jule::Bool _1ab719b35_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c49715b0_Var>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab71de03_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c4a0e41c_TypeAlias>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab72317c_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48a3679_Struct>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab7276e2_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48cc1b9_Trait>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab72b98d_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48ce8c5_Enum>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab730c39_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48d10d0_TypeEnum>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ab734eb3_checkImportSelection(_1c494d290_sema* _self_, jule::Ptr<_1c486c19d_Token>* _56840_ident, jule::Ptr<_1c48b8738_Fn>* _56856_s) {
	if ((!(_1c495166c_isAccessibleDefine(_self_, (*((*(_56856_s))))._field_Public, (*((*(_56856_s))))._field_Token)))) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56840_ident))))._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1c492c1d6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56856_s))))._field_Ident), false) != nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(_56840_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_56856_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	return true;;
}



inline jule::Bool _1c4953471_checkImportSelectedSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _58250_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58250_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab715218:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> _58410_ident = *it;
			{
				if ((*(_58410_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1ab715218;
				};
				if (_1c4952838_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58250_imp))), &((*(_58410_ident))._field_Kind))) {
					_1c4950e0d_pushErr(_self_, _58410_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_58410_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
					_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab715218;
				};
				jule::Any _5968_def = _1c4952c34_getImportDef(_self_, &((*_58410_ident.alloc)._field_Kind), _58250_imp);;
				{
					auto &_match_expr{ _5968_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1ab716318:;
						{
							goto _iter_next_1ab715218;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ab717bee:;
						{
							jule::Ptr<_1c49715b0_Var> _6029_v = _5968_def.unsafe_cast_ptr<_1c49715b0_Var>();;
							__jule_func_result=(_1ab719b35_checkImportSelection(_self_, &(_58410_ident), &(_6029_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ab717c65:;
						{
							jule::Ptr<_1c4a0e41c_TypeAlias> _6059_ta = _5968_def.unsafe_cast_ptr<_1c4a0e41c_TypeAlias>();;
							__jule_func_result=(_1ab71de03_checkImportSelection(_self_, &(_58410_ident), &(_6059_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ab717ccb:;
						{
							jule::Ptr<_1c48a3679_Struct> _6089_s = _5968_def.unsafe_cast_ptr<_1c48a3679_Struct>();;
							__jule_func_result=(_1ab72317c_checkImportSelection(_self_, &(_58410_ident), &(_6089_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ab717d42:;
						{
							jule::Ptr<_1c48cc1b9_Trait> _6119_t = _5968_def.unsafe_cast_ptr<_1c48cc1b9_Trait>();;
							__jule_func_result=(_1ab7276e2_checkImportSelection(_self_, &(_58410_ident), &(_6119_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ab717da8:;
						{
							jule::Ptr<_1c48ce8c5_Enum> _6149_e = _5968_def.unsafe_cast_ptr<_1c48ce8c5_Enum>();;
							__jule_func_result=(_1ab72b98d_checkImportSelection(_self_, &(_58410_ident), &(_6149_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ab7189be:;
						{
							jule::Ptr<_1c48d10d0_TypeEnum> _6179_e = _5968_def.unsafe_cast_ptr<_1c48d10d0_TypeEnum>();;
							__jule_func_result=(_1ab730c39_checkImportSelection(_self_, &(_58410_ident), &(_6179_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1ab718a35:;
						{
							jule::Ptr<_1c48b8738_Fn> _6209_f = _5968_def.unsafe_cast_ptr<_1c48b8738_Fn>();;
							__jule_func_result=(_1ab734eb3_checkImportSelection(_self_, &(_58410_ident), &(_6209_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ab717ade:;
						{
							_1c4950e0d_pushErr(_self_, _58410_ident, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_58410_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
							__jule_func_result=false;
							goto _iter_next_1ab715218;
						}
					}
					_match_end_1ab7158ab:;
				};
			}
			_iter_next_1ab715218:;
			++it;
			goto _iter_begin_1ab715218;
		}
		_iter_end_1ab715218:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab73977b_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73b4d6:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab719b35_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab73b4d6:;
			++it;
			goto _iter_begin_1ab73b4d6;
		}
		_iter_end_1ab73b4d6:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab73ae0e_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab73dbd1:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab71de03_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab73dbd1:;
			++it;
			goto _iter_begin_1ab73dbd1;
		}
		_iter_end_1ab73dbd1:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab73d609_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7413ba:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab72317c_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab7413ba:;
			++it;
			goto _iter_begin_1ab7413ba;
		}
		_iter_end_1ab7413ba:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab73e5e9_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab743ac6:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab734eb3_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab743ac6:;
			++it;
			goto _iter_begin_1ab743ac6;
		}
		_iter_end_1ab743ac6:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab7434ee_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab74626b:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab7276e2_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab74626b:;
			++it;
			goto _iter_begin_1ab74626b;
		}
		_iter_end_1ab74626b:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab745b94_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48ce8c5_Enum>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab748911:;
		if (it != expr_end) {
			jule::Ptr<_1c48ce8c5_Enum> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab72b98d_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab748911:;
			++it;
			goto _iter_begin_1ab748911;
		}
		_iter_end_1ab748911:;
	};
	return _6327_ok;;
}

inline jule::Bool _1ab748339_checkImportsAllSelectionsFromCollection(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>>* _63159_s, jule::Ptr<_1c486c19d_Token>* _63168_et) {
	jule::Bool _6327_ok = true;;
	{
		auto expr = _63159_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab74b13e:;
		if (it != expr_end) {
			jule::Ptr<_1c48d10d0_TypeEnum> *_63310_d = it;
			{
				if ((*((*(_63310_d))))._field_Public) {
					_6327_ok=(_1ab730c39_checkImportSelection(_self_, _63168_et, _63310_d) && _6327_ok);
				};
			}
			_iter_next_1ab74b13e:;
			++it;
			goto _iter_begin_1ab74b13e;
		}
		_iter_end_1ab74b13e:;
	};
	return _6327_ok;;
}



inline jule::Bool _1c4953bad_checkImportAllSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _64141_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64141_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab71558c:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> *_64310_file = it;
			{
				__jule_func_result=(_1ab73977b_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64310_file))))._field_Vars), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab73ae0e_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_TypeAliases), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab73d609_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Structs), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab73e5e9_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Funcs), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab7434ee_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Traits), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab745b94_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_Enums), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ab748339_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64310_file)).alloc)._field_TypeEnums), &((*((*(_64141_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1ab71558c:;
			++it;
			goto _iter_begin_1ab71558c;
		}
		_iter_end_1ab71558c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4953eee_checkImportSelections(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _65542_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65542_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1c4953471_checkImportSelectedSelections(_self_, _65542_imp);
		return __jule_func_result;;
	} else if ((*((*(_65542_imp))))._field_ImportAll) {
		__jule_func_result = _1c4953bad_checkImportAllSelections(_self_, _65542_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4954340_isUseAliasDuplication(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _66438_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab74d1c9:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _66515_imp2 = *it;
			{
				if ((_66515_imp2 == (*(_66438_imp)))) {
					goto _iter_end_1ab74d1c9;
				};
				if (((*(_66515_imp2))._field_Alias == (*((*(_66438_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66515_imp2.alloc)._field_Ident == (*_66515_imp2.alloc)._field_LinkPath) && ((*_66515_imp2.alloc)._field_Ident == (*((*(_66438_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ab74d1c9:;
			++it;
			goto _iter_begin_1ab74d1c9;
		}
		_iter_end_1ab74d1c9:;
	};
	return false;;
}



inline jule::Bool _1c4954681_checkImport(_1c494d290_sema* _self_, jule::Ptr<_1c492cd1e_ImportInfo>* _68032_imp) {
	if (((*((*(_68032_imp))))._field_Binded || ((*((*((*(_68032_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_68032_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_68032_imp))))._field_ImportAll || !((*((*(_68032_imp))))._field_Alias).empty()) || ((*((*(_68032_imp))))._field_Selected.len() > 0LL))) {
			_1c4950e0d_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (((*((*(_68032_imp))))._field_Alias.len() != 0LL)) {
		if (_1c486ea85_IsIgnoreIdent((*((*(_68032_imp))))._field_Alias)) {
			_1c4950e0d_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1c4954340_isUseAliasDuplication(_self_, _68032_imp)) {
			_1c4950e0d_pushErr(_self_, (*((*(_68032_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_68032_imp))))._field_Alias, &__jule_any_type4); __jule_collection; }));
			_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_68032_imp))))._field_Duplicate))) {
		jule::Ptr<_1c494d290_sema> _7038_sema = jule::new_ptr<_1c494d290_sema>(_1c494d290_sema{._field_errors=jule::Slice<_205a977d7_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1c49c8bab_SymbolTable>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1c496ce5d_check(_7038_sema, &((*(*((*(_68032_imp))))._field_Package.alloc)._field_Files));
		if (((*_7038_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_7038_sema.alloc)._field_errors);;
			(*_7038_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1c4953eee_checkImportSelections(_self_, _68032_imp);;
}



inline void _1c495487e_checkImports(_1c494d290_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75769a:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _71815_file = *it;
			{
				_1c49509e0_setCurrentFile(_self_, _71815_file);
				{
					auto expr = &((*(_71815_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab75838d:;
					if (it != expr_end) {
						jule::Ptr<_1c492cd1e_ImportInfo> _72016_imp = *it;
						{
							jule::Bool _7215_ok = _1c4954681_checkImport(_self_, &(_72016_imp));;
							if ((!(_7215_ok))) {
								return;;
							};
						}
						_iter_next_1ab75838d:;
						++it;
						goto _iter_begin_1ab75838d;
					}
					_iter_end_1ab75838d:;
				};
			}
			_iter_next_1ab75769a:;
			++it;
			goto _iter_begin_1ab75769a;
		}
		_iter_end_1ab75769a:;
	};
}



inline void _1c4954a7c_implFileImpls(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7587bc:;
		if (it != expr_end) {
			jule::Ptr<_1c4905830_Impl> _73115_imp = *it;
			{
				_1c496411e_implImpl(_self_, &(_73115_imp));
			}
			_iter_next_1ab7587bc:;
			++it;
			goto _iter_begin_1ab7587bc;
		}
		_iter_end_1ab7587bc:;
	};
}



inline void _1c4954c7a_implImpls(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75a1c5:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _73715_file = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _73715_file);
				_1c4954a7c_implFileImpls(_self_);
			}
			_iter_next_1ab75a1c5:;
			++it;
			goto _iter_begin_1ab75a1c5;
		}
		_iter_end_1ab75a1c5:;
	};
}



inline void _1c4954e78_checkEnums(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75b270:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _74415_file = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _74415_file);
				{
					
					if ((!(_1c496055a_checkEnumDecls(_self_)))) {
						_case_begin_1ab75b8ad:;
					}
					else if ((!(_1c49607e1_checkTypeEnumDecls(_self_)))) {
						_case_begin_1ab75be74:;
					}
					_match_end_1ab75bda8:;
				};
			}
			_iter_next_1ab75b270:;
			++it;
			goto _iter_begin_1ab75b270;
		}
		_iter_end_1ab75b270:;
	};
}



inline void _1c4955176_checkFileInherits(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75cccc:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _75415_t = *it;
			{
				jule::Bool _7554_ok = _1c49621a5__checkTraitDeclInherits(_self_, &(_75415_t));;
				if ((!(_7554_ok))) {
					return;;
				};
			}
			_iter_next_1ab75cccc:;
			++it;
			goto _iter_begin_1ab75cccc;
		}
		_iter_end_1ab75cccc:;
	};
}



inline void _1c4955374_checkInherits(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab75d34e:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _76315_file = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _76315_file);
				_1c4955176_checkFileInherits(_self_);
			}
			_iter_next_1ab75d34e:;
			++it;
			goto _iter_begin_1ab75d34e;
		}
		_iter_end_1ab75d34e:;
	};
}



inline _1c4a220bc_typeChecker _1c495582a_typeChecker(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _76932_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _76947_generics, jule::Ptr<_1c4a210cc_referencer> _7707_referencer) {
	_1c4a220bc_typeChecker _7717_tc = _1c4a220bc_typeChecker{._field_s=_self_, ._field_rootLookup=_76932_l, ._field_lookup=_76932_l, ._field_referencer=_7707_referencer, ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_76947_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _76932_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1ab760eab:;
			{
				jule::Ptr<_1c4913244_scopeChecker> _7808_hard = _1c49168a7_getHardRoot(_76932_l.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
				_7717_tc._field_refers=(*((*(_7808_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1ab760928:;
	};
	if (((_7707_referencer != nullptr) && ((*_7707_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_7707_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1ab76284d:;
				{
					_7717_tc._field_ownerAlias=(*(_7707_referencer))._field_owner.unsafe_cast_ptr<_1c4a0e41c_TypeAlias>();
				}
			}
			_match_end_1ab7627e8:;
		};
	};
	return _7717_tc;;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c4955d8b_buildTypeWithRefers(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _79641_t, jule::Trait _79664_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _7977_generics, jule::Ptr<_1c4a210cc_referencer> _79735_referencer) {
	return ({ auto _wrap_copy = _1c495582a_typeChecker(_self_, _79664_l, _7977_generics, _79735_referencer); _1c4a2979a_checkDecl(&_wrap_copy, _79641_t); });;
}



inline jule::Bool _1c49563ec_checkTypeWithRefers(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a173d1_TypeSymbol>* _80341_t, jule::Trait _80361_l, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _8047_generics, jule::Ptr<_1c4a210cc_referencer> _80435_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1c4a17788_checked((*(_80341_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80341_t))))._field_Kind=_1c4955d8b_buildTypeWithRefers(_self_, &((*((*(_80341_t))))._field_Decl), _80361_l, _8047_generics, _80435_referencer);
	__jule_func_result = _1c4a17788_checked((*(_80341_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1c49034cb_constraintChecker> _1c4956683_constraintChecker(jule::Ptr<_1c494d290_sema> _self_) {
	return jule::new_ptr<_1c49034cb_constraintChecker>(_1c49034cb_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_si=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_et=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1c4956a7e_checkType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a173d1_TypeSymbol>* _81831_t, jule::Trait _81851_l) {
	return _1c49563ec_checkTypeWithRefers(_self_, _81831_t, _81851_l, nullptr, nullptr);;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c4957035_buildTypeWithGenerics(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _82443_t, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _8257_generics, jule::Ptr<_1c48be8a4_ReferenceStack> _82535_refers) {
	jule::Ptr<_1c4a220bc_typeChecker> _8267_tc = jule::new_ptr<_1c4a220bc_typeChecker>(_1c4a220bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=_82535_refers, ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_8257_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c4a2979a_checkDecl(_8267_tc.ptr(), _82443_t);;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c49576b7_selectType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _84232_t) {
	jule::Ptr<_1c4a220bc_typeChecker> _8437_tc = jule::new_ptr<_1c4a220bc_typeChecker>(_1c4a220bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c4a2979a_checkDecl(_8437_tc.ptr(), _84232_t);;
}



inline jule::Ptr<_1c49d0c4b_eval> _1c4957b6d_evalpd(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _85427_l, jule::Ptr<_1c4a1020e_TypeKind> _85442_p, jule::Ptr<_1c49715b0_Var> _85460_owner) {
	jule::Ptr<_1c49d0c4b_eval> _8557_e = jule::new_ptr<_1c49d0c4b_eval>(_1c49d0c4b_eval{._field_s=_self_, ._field_lookup=_85427_l, ._field_prefix=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_unsafety=false, ._field_immutable=false, ._field_ignored=false, ._field_disBuiltin=false, ._field_owner=_85460_owner, ._field_field=jule::Ptr<_1c48a5857_FieldIns>(nullptr), ._field_arg=false});;
	{
		auto &_match_expr{ _85427_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1ab76bb21:;
			{
				(*(_8557_e))._field_unsafety=_1c4915631_isUnsafe(_85427_l.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));
			}
		}
		_match_end_1ab76b8ce:;
	};
	(*_8557_e.alloc)._field_prefix=_85442_p;
	return _8557_e;;
}



inline jule::Ptr<_1c49d0c4b_eval> _1c4958069_evalp(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _86926_l, jule::Ptr<_1c4a1020e_TypeKind> _86941_p) {
	return _1c4957b6d_evalpd(_self_, _86926_l, _86941_p, nullptr);;
}



inline jule::Ptr<_1c49d0c4b_eval> _1c49583aa_eval(jule::Ptr<_1c494d290_sema> _self_, jule::Trait _87425_l) {
	return _1c4958069_evalp(_self_, _87425_l, nullptr);;
}



inline jule::Bool _1c495891b_checkAssignType(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _87832_destIsRef, jule::Ptr<_1c4a1020e_TypeKind>* _87854_dest, jule::Ptr<_1c49ce024_Data>* _8798_d, jule::Ptr<_1c486c19d_Token> _87922_errorToken) {
	if ((*((*(_8798_d))))._field_Decl) {
		_1c4950e0d_pushErr(_self_.ptr(), _87922_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87832_destIsRef) {
		if ((!(_1c4a1094b_Equal((*(_87854_dest)), (*((*(_8798_d))))._field_Kind)))) {
			_1c4950e0d_pushErr(_self_, _87922_errorToken, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_87854_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_8798_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1c49b798b_assignTypeChecker> _8908_atc = jule::new_ptr<_1c49b798b_assignTypeChecker>(_1c49b798b_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87854_dest)), ._field_d=(*(_8798_d)), ._field_errorToken=_87922_errorToken});;
		jule::Bool _8964_ok = _1c49b898c_check(_8908_atc.ptr());;
		if ((!(_8964_ok))) {
			return false;;
		};
	};
	if (((!(_1c49ce95e_IsConst((*(_8798_d)).ptr()))) || (_1c4a12893_Prim((*(_87854_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _9067_kind = (*(_1c4a12893_Prim((*(_87854_dest)).ptr())))._field_Kind;;
	{
		
		if (_1dc543ba3_IsSigInt(_9067_kind)) {
			_case_begin_1ab774453:;
			{
				_1dc548328_SetI64((*((*(_8798_d))))._field_Constant.ptr(), _1dc547a53_AsI64((*((*(_8798_d))))._field_Constant));
			}
		}
		else if (_1dc543eb1_IsUnsigInt(_9067_kind)) {
			_case_begin_1ab7744ec:;
			{
				_1dc5485d1_SetU64((*((*(_8798_d))))._field_Constant.ptr(), _1dc547cd9_AsU64((*((*(_8798_d))))._field_Constant));
			}
		}
		else if (_1dc5445bb_IsFloat(_9067_kind)) {
			_case_begin_1ab774563:;
			{
				_1dc548dea_SetF64((*((*(_8798_d))))._field_Constant.ptr(), _1dc548070_AsF64((*((*(_8798_d))))._field_Constant));
			}
		}
		_match_end_1ab774387:;
	};
	return true;;
}



inline jule::Bool _1c4958dc2__checkTypeCompatibility(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _92045_dest, jule::Ptr<_1c4a1020e_TypeKind>* _92067_src, jule::Ptr<_1c486c19d_Token> _9217_errorToken) {
	if (((*(_92067_src)) == nullptr)) {
		return false;;
	};
	if ((_1c4a146b9_Tup((*(_92067_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1c49b0d80_typeCompatibilityChecker _9297_tcc = _1c49b0d80_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_92045_dest)), ._field_src=(*(_92067_src)), ._field_errorToken=_9217_errorToken};;
	return _1c49b73d6_check(&_9297_tcc);;
}



inline jule::Bool _1c4959378_checkTypeCompatibility(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _93844_dest, jule::Ptr<_1c4a1020e_TypeKind>* _9398_src, jule::Ptr<_1c486c19d_Token>* _93929_errorToken) {
	if (_1c4958dc2__checkTypeCompatibility(_self_, _93844_dest, _9398_src, (*(_93929_errorToken)))) {
		return true;;
	};
	_1c4950e0d_pushErr(_self_, (*(_93929_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_93844_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_9398_src)).ptr()), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline void _1c4959796_pushCompatiblityError(_1c494d290_sema* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _94742_dest, jule::Ptr<_1c49ce024_Data>* _94764_src, jule::Ptr<_1c486c19d_Token>* _9488_errorToken) {
	if ((*((*(_94764_src))))._field_untyped) {
		{
			
			if (_1dc54937e_IsI64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1ab77b9cc:;
				{
					_1c4950e0d_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_94742_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1dc549615_IsU64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1ab77ba76:;
				{
					_1c4950e0d_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_94742_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			else if (_1dc549db8_IsF64((*((*(_94764_src))))._field_Constant.ptr())) {
				_case_begin_1ab77badc:;
				{
					_1c4950e0d_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_94742_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4); __jule_collection; }));
					return;;
				}
			}
			_match_end_1ab77b8ab:;
		};
	};
	_1c4950e0d_pushErr(_self_, (*(_9488_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_94742_dest)).ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_94764_src))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c4959c4c_checkTypeCompatibility1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _96545_dest, jule::Ptr<_1c49ce024_Data>* _96567_src, jule::Ptr<_1c486c19d_Token>* _9668_errorToken) {
	if (_1c4958dc2__checkTypeCompatibility(_self_, _96545_dest, &((*((*(_96567_src))))._field_Kind), (*(_9668_errorToken)))) {
		return true;;
	};
	_1c4959796_pushCompatiblityError(_self_, _96545_dest, _96567_src, _9668_errorToken);
	return false;;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c495a203_buildNonGenericTypeKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4882779_TypeDecl>* _98045_ast, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _9818_generics, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>* _98144_ignored) {
	jule::Ptr<_1c4a220bc_typeChecker> _9827_tc = jule::new_ptr<_1c4a220bc_typeChecker>(_1c4a220bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=(*(_9818_generics)), ._field_ignoredGenerics=_98144_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1c4a2979a_checkDecl(_9827_tc.ptr(), _98045_ast);;
}



inline jule::Bool _1c495a5ee_buildFnNonGenericTypeKinds(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _99248_f, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>* _99264_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _99411_generics = nullptr;;
	if (_1c48b8e75_IsMethod((*((*(_99248_f))))._field_Decl.ptr())) {
		_99411_generics=jule::append((*(*((*(_99248_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99248_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99411_generics=(*((*((*(_99248_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99248_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab785d5a:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _100115_p = *it;
			{
				if ((!(_1c48b73b3_IsSelf((*(_100115_p))._field_Decl.ptr())))) {
					(*_100115_p.alloc)._field_Kind=_1c495a203_buildNonGenericTypeKind(_self_, &((*((*(*(_100115_p))._field_Decl.alloc)._field_Kind))._field_Decl), &(_99411_generics), _99264_ignored);
					__jule_func_result=(__jule_func_result && ((*_100115_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1ab785d5a:;
			++it;
			goto _iter_begin_1ab785d5a;
		}
		_iter_end_1ab785d5a:;
	};
	if ((!(_1c48b8bde_IsVoid((*((*(_99248_f))))._field_Decl.ptr())))) {
		(*((*(_99248_f))))._field_Result=_1c495a203_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99248_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99411_generics), _99264_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99248_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c495a940_getTraitCheckFnKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _101441_f) {
	if (((*((*(_101441_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101441_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1c48bb719_FnIns> _10187_ins = _1c48b9c45_instanceForce((*(_101441_f)));;
	jule::Ptr<_1c4a220bc_typeChecker> _10207_tc = jule::new_ptr<_1c4a220bc_typeChecker>(_1c4a220bc_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_10187_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab78be4e:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _102515_p = *it;
			{
				if ((!(_1c48b73b3_IsSelf((*(_102515_p))._field_Decl.ptr())))) {
					(*_102515_p.alloc)._field_Kind=_1c4a2979a_checkDecl(_10207_tc.ptr(), &((*((*(*(_102515_p))._field_Decl.alloc)._field_Kind))._field_Decl));
					if (((*_102515_p.alloc)._field_Kind == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1ab78be4e:;
			++it;
			goto _iter_begin_1ab78be4e;
		}
		_iter_end_1ab78be4e:;
	};
	if ((!(_1c48b8bde_IsVoid((*(_101441_f)).ptr())))) {
		(*_10187_ins.alloc)._field_Result=_1c4a2979a_checkDecl(_10207_tc, &((*((*((*((*(_101441_f))))._field_Result))._field_Kind))._field_Decl));
		if (((*_10187_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _10187_ins;;
}



inline jule::Bool _1c495ade6_checkConstraintsFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _104340_f, jule::Ptr<_1c486c19d_Token>* _104356_et, jule::Ptr<_1c48bb719_FnIns> _104372_exist) {
	jule::Ptr<_1c49034cb_constraintChecker> _10447_cc = _1c4956683_constraintChecker(_self_);;
	(*(_10447_cc))._field_et=(*(_104356_et));
	(*_10447_cc.alloc)._field_fi=(*(_104340_f));
	if ((_104372_exist != nullptr)) {
		{
			auto expr = &((*_104372_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab792042:;
			if (it != expr_end) {
				jule::I64 _10489_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> _104816_g = *it;
				{
					(*((*((*(_104340_f))))._field_Generics[_10489_i]))._field_Constraint=(*(_104816_g))._field_Constraint;
				}
				_iter_next_1ab792042:;
				++it;
				_10489_i++;
				goto _iter_begin_1ab792042;
			}
			_iter_end_1ab792042:;
		};
	} else {
		(*_10447_cc.alloc)._field_uniq=true;
	};
	return _1c4904444_check(_10447_cc);;
}



inline jule::Bool _1c495b39c_checkConstraintsStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _105744_s, jule::Ptr<_1c486c19d_Token>* _105764_et, jule::Ptr<_1c48a6407_StructIns> _105780_exist) {
	jule::Ptr<_1c49034cb_constraintChecker> _10587_cc = _1c4956683_constraintChecker(_self_);;
	(*(_10587_cc))._field_et=(*(_105764_et));
	(*_10587_cc.alloc)._field_si=(*(_105744_s));
	if ((_105780_exist != nullptr)) {
		{
			auto expr = &((*_105780_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab7951cc:;
			if (it != expr_end) {
				jule::I64 _10629_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> _106216_g = *it;
				{
					(*((*((*(_105744_s))))._field_Generics[_10629_i]))._field_Constraint=(*(_106216_g))._field_Constraint;
				}
				_iter_next_1ab7951cc:;
				++it;
				_10629_i++;
				goto _iter_begin_1ab7951cc;
			}
			_iter_end_1ab7951cc:;
		};
	} else {
		(*_10587_cc.alloc)._field_uniq=true;
	};
	return _1c4904444_check(_10587_cc);;
}



inline jule::Bool _1c495b798_fnEnvironment(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _107435_f, jule::Fn<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*> _107446_algo) {
	jule::Ptr<_1c494d290_sema> _10757_sema = (*((*((*(_107435_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1c49c8bab_SymbolTable> _10767_old = (*((*(*((*(_107435_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1c49509e0_setCurrentFile((*((*((*(_107435_f))))._field_Decl))._field_sema, _10767_old);
	});;
	jule::Ptr<_1c49c8bab_SymbolTable> _10787_file = _1c494be09_findFile(&((*(*((*((*(_107435_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_107435_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_10787_file != nullptr)) {
		_1c49509e0_setCurrentFile((*((*((*(_107435_f))))._field_Decl))._field_sema, _10787_file);
	};
	jule::I64 _10837_size = (*((*(_107435_f))))._field_Generics.len();;
	if ((((*((*(_107435_f))))._field_Decl != nullptr) && ((*(*((*(_107435_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_10837_size+=(*(*((*((*(_107435_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _10887_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>::alloc(0LL, _10837_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr); __jule_collection; });;
	_1c494ba85_appendGenericTypeAliases(&(_10887_generics), _107435_f);
	jule::Bool _10913_ok = _107446_algo(&(_10757_sema), &(_10887_generics));;
	if ((_10757_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_10757_sema))._field_errors);
		(*_10757_sema.alloc)._field_errors=nullptr;
	};
	return _10913_ok;;
}



inline void _1c495ba51_checkFnParamKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ba691_ParamIns>* _110138_p) {
	(*((*((*(_110138_p))))._field_Kind))._field_Variadic=(*((*((*(_110138_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_110138_p))))._field_Decl.alloc)._field_Reference && (!(_1c4a2b6c0_isValidForRef(&((*((*(_110138_p))))._field_Kind)))))) {
		_1c4950e0d_pushErr(_self_.ptr(), (*(*((*(_110138_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_110138_p))))._field_Kind), &__jule_any_type4); __jule_collection; }));
	};
}



inline jule::Bool _1c495bd92_reloadFnInsTypes(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns> _110837_f) {
	if ((_1c48bcbd2_IsBuiltin(_110837_f.ptr()) || _1c48bce68_IsAnon(_110837_f))) {
		return true;;
	};
	return _1c495b798_fnEnvironment(_self_, &(_110837_f), jule::__new_closure<jule::Bool,jule::Ptr<_1c494d290_sema>*,jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>*>((void*)__jule_anon_1ab7a287c, jule::Ptr<__jule_anon_1ab7a287c_ctx>::make(__jule_anon_1ab7a287c_ctx{._110837_f=_110837_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ab7a287c_ctx_handler));;
}



inline jule::Bool _1c495c348_checkRefValidityForInitExpr(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _114444_leftMut, jule::Ptr<_1c49ce024_Data>* _114464_d, jule::Ptr<_1c486c19d_Token>* _114479_errorToken) {
	if ((!(_1c494a853_isValidModelForRef(&((*((*(_114464_d))))._field_Model))))) {
		_1c4950e0d_pushErr(_self_.ptr(), (*(_114479_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_114444_leftMut && (!((*((*(_114464_d))))._field_Mutable)))) {
		_1c4950e0d_pushErr(_self_, (*(_114479_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1c495c689_isMutRiskyStruct(_1c494d290_sema* _self_, jule::Ptr<_1c48a6407_StructIns>* _116129_s) {
	{
		auto expr = &((*((*(_116129_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ac28d:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> *_116210_f = it;
			{
				if ((((*((*((*(_116210_f))))._field_Decl))._field_Mutable && _1c4a11ac3_Mutable((*(*(_116210_f)).alloc)._field_Kind.ptr())) && _1c495166c_isAccessibleDefine(_self_, (*(*((*(_116210_f))))._field_Decl.alloc)._field_Public, (*(*((*(_116210_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ab7ac28d:;
			++it;
			goto _iter_begin_1ab7ac28d;
		}
		_iter_end_1ab7ac28d:;
	};
	return false;;
}



inline jule::Bool _1c495cca5_checkValidityForInitExpr(jule::Ptr<_1c494d290_sema> _self_, jule::Bool _118841_leftMut, jule::Bool _118856_leftRef, jule::Ptr<_1c4a1020e_TypeKind>* _11894_leftKind, jule::Ptr<_1c49ce024_Data>* _118930_d, jule::Ptr<_1c486c19d_Token>* _118945_errorToken) {
	if ((_118841_leftMut && (!((*((*(_118930_d))))._field_Mutable)))) {
		if (_1c4a11ac3_Mutable((*((*(_118930_d))))._field_Kind.ptr())) {
			_1c4950e0d_pushErr(_self_.ptr(), (*(_118945_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_118930_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1c48a6407_StructIns> _11974_s = _1c4a13e16_Struct((*((*(_118930_d))))._field_Kind);;
		if (((_11974_s != nullptr) && _1c495c689_isMutRiskyStruct(_self_, &(_11974_s)))) {
			_1c4950e0d_pushErr(_self_, (*(_118945_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_118930_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return false;;
		};
	};
	if (_118856_leftRef) {
		if ((!(_1c495c348_checkRefValidityForInitExpr(_self_, _118841_leftMut, _118930_d, _118945_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1c49b798b_assignTypeChecker> _12087_atc = jule::new_ptr<_1c49b798b_assignTypeChecker>(_1c49b798b_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_d=(*(_118930_d)), ._field_errorToken=(*(_118945_errorToken))});;
	return _1c49b81d9_checkValidity(_12087_atc.ptr());;
}



inline jule::Bool _1c495d1a1_checkTypeAliasDeclKind(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _121644_ta, jule::Trait _121664_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c49c8bab_SymbolTable> _12177_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c49509e0_setCurrentFile(_self_, _12177_old);
	});;
	if (((*((*(_121644_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1c49c8bab_SymbolTable> _12228_file = _1c494be09_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_121644_ta))))._field_Token.alloc)._field_File));;
		if ((_12228_file != nullptr)) {
			_1c49509e0_setCurrentFile(_self_, _12228_file);
		};
	};
	__jule_func_result=_1c49563ec_checkTypeWithRefers(_self_, &((*((*(_121644_ta))))._field_Kind), _121664_l, nullptr, jule::new_ptr<_1c4a210cc_referencer>(_1c4a210cc_referencer{._field_ident=(*((*(_121644_ta))))._field_Ident, ._field_owner=jule::Any((*(_121644_ta)), &__jule_any_type66), ._field_refs=(&((*((*(_121644_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1c4a13663_Arr((*((*((*(_121644_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1c4a13663_Arr((*((*((*(_121644_ta))))._field_Kind))._field_Kind)))._field_Auto)) {
		_1c4950e0d_pushErr(_self_, (*((*(*((*(_121644_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1c495d514_checkTypeAliasDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _123940_ta, jule::Trait _123960_l) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_123940_ta))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_123940_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1c495d1a1_checkTypeAliasDeclKind(_self_, _123940_ta, _123960_l);
}



inline void _1c495d7bc_checkTypeAliasDeclDup(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a0e41c_TypeAlias>* _124743_ta) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_124743_ta))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_124743_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c4951b23_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124743_ta))), &((*((*(_124743_ta))))._field_Ident), (*((*(_124743_ta))))._field_Binded)) {
		_1c4950e0d_pushErr(_self_, (*((*(_124743_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124743_ta))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c495d1a1_checkTypeAliasDeclKind(_self_, _124743_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
}



inline jule::Bool _1c495da53_checkTypeAliasDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7bee4e:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> _126015_ta = *it;
			{
				_1c495d7bc_checkTypeAliasDeclDup(_self_, &(_126015_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7bee4e:;
			++it;
			goto _iter_begin_1ab7bee4e;
		}
		_iter_end_1ab7bee4e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab7eb9b4_checkEnumItemsDup(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _127136_items) {
	{
		auto expr = &(_127136_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ecda0:;
		if (it != expr_end) {
			jule::Ptr<_1c48cdd58_EnumItem> *_127210_item = it;
			{
				if (((*((*(_127210_item))))._field_Ident).empty()) {
					goto _iter_next_1ab7ecda0;
				} else if (_1c486ea85_IsIgnoreIdent((*((*(_127210_item))))._field_Ident)) {
					_1c4950e0d_pushErr(_self_, (*(*(_127210_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_127136_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab7ee8c9:;
						if (it != expr_end) {
							jule::Ptr<_1c48cdd58_EnumItem> *_127812_citem = it;
							{
								if (((*(_127210_item)) == (*(_127812_citem)))) {
									goto _iter_end_1ab7ee8c9;
								} else if (((*((*(_127210_item))))._field_Ident == (*((*(_127812_citem))))._field_Ident)) {
									_1c4950e0d_pushErr(_self_, (*(*(_127210_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_127210_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab7ee8c9;
								};
							}
							_iter_next_1ab7ee8c9:;
							++it;
							goto _iter_begin_1ab7ee8c9;
						}
						_iter_end_1ab7ee8c9:;
					};
				};
			}
			_iter_next_1ab7ecda0:;
			++it;
			goto _iter_begin_1ab7ecda0;
		}
		_iter_end_1ab7ecda0:;
	};
}

inline void _1ab808cbd_checkEnumItemsDup(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _127136_items) {
	{
		auto expr = &(_127136_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80a187:;
		if (it != expr_end) {
			jule::Ptr<_1c48d0a08_TypeEnumItem> *_127210_item = it;
			{
				if (((*((*(_127210_item))))._field_Ident).empty()) {
					goto _iter_next_1ab80a187;
				} else if (_1c486ea85_IsIgnoreIdent((*((*(_127210_item))))._field_Ident)) {
					_1c4950e0d_pushErr(_self_, (*(*(_127210_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_127136_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab80bbb1:;
						if (it != expr_end) {
							jule::Ptr<_1c48d0a08_TypeEnumItem> *_127812_citem = it;
							{
								if (((*(_127210_item)) == (*(_127812_citem)))) {
									goto _iter_end_1ab80bbb1;
								} else if (((*((*(_127210_item))))._field_Ident == (*((*(_127812_citem))))._field_Ident)) {
									_1c4950e0d_pushErr(_self_, (*(*(_127210_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_127210_item)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
									_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab80bbb1;
								};
							}
							_iter_next_1ab80bbb1:;
							++it;
							goto _iter_begin_1ab80bbb1;
						}
						_iter_end_1ab80bbb1:;
					};
				};
			}
			_iter_next_1ab80a187:;
			++it;
			goto _iter_begin_1ab80a187;
		}
		_iter_end_1ab80a187:;
	};
}



inline void _1c495e0b4_checkEnumItemsStr(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _129139_e) {
	jule::Ptr<_1c49d0c4b_eval> _12927_eval = _1c49583aa_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_129139_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c1bba:;
		if (it != expr_end) {
			jule::Ptr<_1c48cdd58_EnumItem> _129315_item = *it;
			{
				if (_1c48ce243_AutoExpr(_129315_item.ptr())) {
					(*_129315_item.alloc)._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc54614a_NewStr((*_129315_item.alloc)._field_Ident)})});
					(*((*((*_129315_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_129315_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1c49ce024_Data> _13029_d = _1c49edede_evalExpr(_12927_eval, (*((*(_129315_item))._field_Value))._field_Expr);;
					if ((_13029_d == nullptr)) {
						goto _iter_next_1ab7c1bba;
					};
					if ((!(_1c49ce95e_IsConst(_13029_d.ptr())))) {
						_1c4950e0d_pushErr(_self_, (*((*(*(_129315_item))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1c495891b_checkAssignType(_self_, false, &((*((*((*(_129139_e))))._field_Kind))._field_Kind), &(_13029_d), (*_129315_item.alloc)._field_Token);
					(*(*(_129315_item))._field_Value.alloc)._field_Data=_13029_d;
				};
			}
			_iter_next_1ab7c1bba:;
			++it;
			goto _iter_begin_1ab7c1bba;
		}
		_iter_end_1ab7c1bba:;
	};
}



inline void _1ab7cc434_checkEnumItemInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49d0c4b_eval>* _131743_eval, jule::Ptr<_1c48ce8c5_Enum>* _131761_e, jule::Ptr<_1c4a17cd8_Prim>* _131772_prim, jule::Ptr<_1c48cdd58_EnumItem>* _131790_item, jule::U64* _1317112_n) {
	if (_1c48ce243_AutoExpr((*(_131790_item)).ptr())) {
		(*((*(_131790_item))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		{
			
{
				_case_begin_1ab7ce821:;
				{
					(*((*((*((*(_131790_item))))._field_Value))._field_Data))._field_Constant=static__1dc545ab7_NewU64((*(_1317112_n)));
				}
			}
			_match_end_1ab7ceb84:;
		};
		(*((*((*((*(_131790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c49ce024_Data> _13328_d = _1c49edede_evalExpr((*(_131743_eval)), (*((*((*(_131790_item))))._field_Value))._field_Expr);;
		if ((_13328_d == nullptr)) {
			return;;
		};
		if ((!(_1c49ce95e_IsConst(_13328_d.ptr())))) {
			_1c4950e0d_pushErr(_self_.ptr(), (*((*(*((*(_131790_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c495891b_checkAssignType(_self_, false, &((*((*((*(_131761_e))))._field_Kind))._field_Kind), &(_13328_d), (*((*(_131790_item))))._field_Token);
		(*(*((*(_131790_item))))._field_Value.alloc)._field_Data=_13328_d;
		{
			
{
				_case_begin_1ab7d29cd:;
				{
					(*(_1317112_n))=_1dc547019_ReadU64((*((*(*((*(_131790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab7d4ea8:;
		};
	};
}

inline void _1ab7dc488_checkEnumItemInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49d0c4b_eval>* _131743_eval, jule::Ptr<_1c48ce8c5_Enum>* _131761_e, jule::Ptr<_1c4a17cd8_Prim>* _131772_prim, jule::Ptr<_1c48cdd58_EnumItem>* _131790_item, jule::I64* _1317112_n) {
	if (_1c48ce243_AutoExpr((*(_131790_item)).ptr())) {
		(*((*(_131790_item))))._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})});
		{
			
{
				_case_begin_1ab7e0205:;
				{
					(*((*((*((*(_131790_item))))._field_Value))._field_Data))._field_Constant=static__1dc5457ed_NewI64((*(_1317112_n)));
				}
			}
			_match_end_1ab7deb94:;
		};
		(*((*((*((*(_131790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_131790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1c49ce024_Data> _13328_d = _1c49edede_evalExpr((*(_131743_eval)), (*((*((*(_131790_item))))._field_Value))._field_Expr);;
		if ((_13328_d == nullptr)) {
			return;;
		};
		if ((!(_1c49ce95e_IsConst(_13328_d.ptr())))) {
			_1c4950e0d_pushErr(_self_.ptr(), (*((*(*((*(_131790_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1c495891b_checkAssignType(_self_, false, &((*((*((*(_131761_e))))._field_Kind))._field_Kind), &(_13328_d), (*((*(_131790_item))))._field_Token);
		(*(*((*(_131790_item))))._field_Value.alloc)._field_Data=_13328_d;
		{
			
{
				_case_begin_1ab7e51b6:;
				{
					(*(_1317112_n))=_1dc546c83_ReadI64((*((*(*((*(_131790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1ab7e5150:;
		};
	};
}



inline void _1ab7c85c8_checkEnumItemsInt1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a17cd8_Prim>* _135241_prim, jule::Ptr<_1c48ce8c5_Enum>* _135259_e) {
	jule::U64 _13537_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1ab7ca2de:;
			{
				_13537_max=_1dc5405a6_MaxU(_1c4a1815c_Str((*(_135241_prim)).ptr()));
			}
		}
		_match_end_1ab7ca113:;
	};
	jule::Ptr<_1c49d0c4b_eval> _13637_eval = _1c49583aa_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
	jule::U64 _13647_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1c48cdd58_EnumItem> _13657_first = (*((*(_135259_e))))._field_Items[0LL];;
	_1ab7cc434_checkEnumItemInt(_self_, &(_13637_eval), _135259_e, _135241_prim, &(_13657_first), &(_13647_n));
	if (((*((*(_13657_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab7c9b18:;
				{
					_13647_n=_1dc547cd9_AsU64((*(*((*(_13657_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab7d60db:;
		};
	};
	{
		auto expr = (*((*(_135259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab7d1e0b:;
		if (it != expr_end) {
			jule::Ptr<_1c48cdd58_EnumItem> _137715_item = *it;
			{
				if (((_1c48ce243_AutoExpr(_137715_item.ptr()) && (_13647_n > 0LLU)) && ((_13537_max - _13647_n) <= 0LLU))) {
					_1c4950e0d_pushErr(_self_, (*_137715_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab7d1e0b;
				};
				(_13647_n)++;
				_1ab7cc434_checkEnumItemInt(_self_, &(_13637_eval), _135259_e, _135241_prim, &(_137715_item), &(_13647_n));
			}
			_iter_next_1ab7d1e0b:;
			++it;
			goto _iter_begin_1ab7d1e0b;
		}
		_iter_end_1ab7d1e0b:;
	};
}

inline void _1ab7c88b4_checkEnumItemsInt1(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4a17cd8_Prim>* _135241_prim, jule::Ptr<_1c48ce8c5_Enum>* _135259_e) {
	jule::I64 _13537_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1ab7da332:;
			{
				_13537_max=_1dc5402dc_MaxI(_1c4a1815c_Str((*(_135241_prim)).ptr()));
			}
		}
		_match_end_1ab7d9ed0:;
	};
	jule::Ptr<_1c49d0c4b_eval> _13637_eval = _1c49583aa_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
	jule::I64 _13647_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1c48cdd58_EnumItem> _13657_first = (*((*(_135259_e))))._field_Items[0LL];;
	_1ab7dc488_checkEnumItemInt(_self_, &(_13637_eval), _135259_e, _135241_prim, &(_13657_first), &(_13647_n));
	if (((*((*(_13657_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab7db377:;
				{
					_13647_n=_1dc547a53_AsI64((*(*((*(_13657_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1ab7e5749:;
		};
	};
	{
		auto expr = (*((*(_135259_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab7e6c89:;
		if (it != expr_end) {
			jule::Ptr<_1c48cdd58_EnumItem> _137715_item = *it;
			{
				if (((_1c48ce243_AutoExpr(_137715_item.ptr()) && (_13647_n > 0LL)) && ((_13537_max - _13647_n) <= 0LL))) {
					_1c4950e0d_pushErr(_self_, (*_137715_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab7e6c89;
				};
				(_13647_n)++;
				_1ab7dc488_checkEnumItemInt(_self_, &(_13637_eval), _135259_e, _135241_prim, &(_137715_item), &(_13647_n));
			}
			_iter_next_1ab7e6c89:;
			++it;
			goto _iter_begin_1ab7e6c89;
		}
		_iter_end_1ab7e6c89:;
	};
}



inline void _1c495ec63_checkEnumItemsInt(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _138739_e) {
	jule::Ptr<_1c4a17cd8_Prim> _13883_prim = _1c4a12893_Prim((*((*((*(_138739_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1dc543ba3_IsSigInt((*(_13883_prim))._field_Kind)) {
			_case_begin_1ab7d742d:;
			{
				_1ab7c88b4_checkEnumItemsInt1(_self_, &(_13883_prim), _138739_e);
			}
		}
		else {
			_case_begin_1ab7c7d58:;
			{
				_1ab7c85c8_checkEnumItemsInt1(_self_, &(_13883_prim), _138739_e);
			}
		}
		_match_end_1ab7c7ce2:;
	};
}



inline void _1c496001b_checkEnumDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48ce8c5_Enum>* _139735_e) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_139735_e))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_139735_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4951b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139735_e))), &((*((*(_139735_e))))._field_Ident), false)) {
		_1c4950e0d_pushErr(_self_, (*((*(_139735_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_139735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139735_e))))._field_Items.len() == 0LL)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_139735_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_139735_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1ab7eb9b4_checkEnumItemsDup(_self_, (*((*(_139735_e))))._field_Items);
	if (((*((*(_139735_e))))._field_Kind != nullptr)) {
		if ((!(_1c4956a7e_checkType(_self_, &((*((*(_139735_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139735_e))))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1c4a17cd8_Prim> _14217_t = _1c4a12893_Prim((*((*((*(_139735_e))))._field_Kind))._field_Kind.ptr());;
	if ((_14217_t == nullptr)) {
		_1c4950e0d_pushErr(_self_, (*((*(_139735_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1c4a1b2a3_IsStr(_14217_t.ptr())) {
			_case_begin_1ab803636:;
			{
				_1c495e0b4_checkEnumItemsStr(_self_, _139735_e);
			}
		}
		else if (_1dc54427a_IsInt(_1c4a1815c_Str(_14217_t.ptr()))) {
			_case_begin_1ab802943:;
			{
				_1c495ec63_checkEnumItemsInt(_self_, _139735_e);
			}
		}
		else {
			_case_begin_1ab8028cc:;
			{
				_1c4950e0d_pushErr(_self_, (*((*(_139735_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab803427:;
	};
}



inline void _1c49602c4_checkTypeEnumDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48d10d0_TypeEnum>* _143839_e) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_143839_e))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_143839_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4951b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143839_e))), &((*((*(_143839_e))))._field_Ident), false)) {
		_1c4950e0d_pushErr(_self_, (*((*(_143839_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143839_e))))._field_Items.len() == 0LL)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_143839_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_143839_e))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_1ab808cbd_checkEnumItemsDup(_self_, (*((*(_143839_e))))._field_Items);
	{
		auto expr = &((*((*(_143839_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab809708:;
		if (it != expr_end) {
			jule::Ptr<_1c48d0a08_TypeEnumItem> _145215_item = *it;
			{
				if (((*(_145215_item))._field_Kind == nullptr)) {
					_1c4950e0d_pushErr(_self_, (*_145215_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ab809708;
				};
				jule::Bool _14574_ok = _1c4956a7e_checkType(_self_, &((*_145215_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
				if ((!(_14574_ok))) {
					goto _iter_next_1ab809708;
				};
				jule::Ptr<_1c4a17cd8_Prim> _14614_p = _1c4a12893_Prim((*((*_145215_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_14614_p != nullptr) && _1c4a1b539_IsAny(_14614_p))) {
					_1c4950e0d_pushErr(_self_, (*_145215_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab809708:;
			++it;
			goto _iter_begin_1ab809708;
		}
		_iter_end_1ab809708:;
	};
	if (((*((*(_143839_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1c48d0a08_TypeEnumItem> _14678_item = (*((*(_143839_e))))._field_Items[0LL];;
		_1c4a1020e_TypeKind _14684_tk = _1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_143839_e)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)};;
		if ((((*((*(_14678_item))._field_Kind))._field_Kind != nullptr) && _1c4a1094b_Equal((*((*(_14678_item))._field_Kind))._field_Kind, ((jule::Ptr<_1c4a1020e_TypeKind>)((&(_14684_tk))))))) {
			_1c4950e0d_pushErr(_self_, (*_14678_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c48d1454_Str((*(_143839_e)).ptr()), &__jule_any_type4); __jule_collection; }));
		};
	};
}



inline jule::Bool _1c496055a_checkEnumDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81503d:;
		if (it != expr_end) {
			jule::Ptr<_1c48ce8c5_Enum> _147915_e = *it;
			{
				_1c496001b_checkEnumDecl(_self_, &(_147915_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab81503d:;
			++it;
			goto _iter_begin_1ab81503d;
		}
		_iter_end_1ab81503d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c49607e1_checkTypeEnumDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8166e3:;
		if (it != expr_end) {
			jule::Ptr<_1c48d10d0_TypeEnum> _149115_e = *it;
			{
				_1c49602c4_checkTypeEnumDecl(_self_, &(_149115_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab8166e3:;
			++it;
			goto _iter_begin_1ab8166e3;
		}
		_iter_end_1ab8166e3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4960b32_checkDeclGenerics(_1c494d290_sema* _self_, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _150134_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _150134_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab816c76:;
		if (it != expr_end) {
			jule::I64 _15037_i = it - expr->begin();
			jule::Ptr<_1c488e984_GenericDecl> *_150310_g = it;
			{
				if (_1c486ea85_IsIgnoreIdent((*((*(_150310_g))))._field_Ident)) {
					_1c4950e0d_pushErr(_self_, (*(*(_150310_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab816c76;
				};
				_julec_label_1ab81875b:;
				{
					auto expr = _150134_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab819581:;
					if (it != expr_end) {
						jule::I64 _15128_j = it - expr->begin();
						jule::Ptr<_1c488e984_GenericDecl> *_151211_ct = it;
						{
							{
								
								if ((_15128_j >= _15037_i)) {
									_case_begin_1ab81a120:;
									{
										goto _iter_end_1ab819581;
									}
								}
								else if (((*(*(_150310_g)).alloc)._field_Ident == (*((*(_151211_ct))))._field_Ident)) {
									_case_begin_1ab81a1a8:;
									{
										_1c4950e0d_pushErr(_self_, (*(*(_150310_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_150310_g)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ab819581;
									}
								}
								_match_end_1ab81a021:;
							};
						}
						_iter_next_1ab819581:;
						++it;
						_15128_j++;
						goto _iter_begin_1ab819581;
					}
					_iter_end_1ab819581:;
				};
			}
			_iter_next_1ab816c76:;
			++it;
			_15037_i++;
			goto _iter_begin_1ab816c76;
		}
		_iter_end_1ab816c76:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4960e73_checkFnDeclParamsDup(_1c494d290_sema* _self_, jule::Ptr<_1c48b8738_Fn>* _152837_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ab81c3ca:;
	{
		auto expr = &((*((*(_152837_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81c70a:;
		if (it != expr_end) {
			jule::I64 _15317_i = it - expr->begin();
			jule::Ptr<_1c48b6c64_Param> *_153110_p = it;
			{
				{
					auto expr = &((*((*(_152837_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab81d3dc:;
					if (it != expr_end) {
						jule::Ptr<_1c488e984_GenericDecl> *_153311_g = it;
						{
							if (((*((*(_153110_p))))._field_Ident == (*((*(_153311_g))))._field_Ident)) {
								__jule_func_result=false;
								_1c4950e0d_pushErr(_self_, (*(*(_153110_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_153110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ab81c70a;
							};
						}
						_iter_next_1ab81d3dc:;
						++it;
						goto _iter_begin_1ab81d3dc;
					}
					_iter_end_1ab81d3dc:;
				};
				_julec_label_1ab81ec5c:;
				{
					auto expr = &((*((*(_152837_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab81d882:;
					if (it != expr_end) {
						jule::I64 _15438_j = it - expr->begin();
						jule::Ptr<_1c48b6c64_Param> *_154311_jp = it;
						{
							{
								
								if ((_15438_j >= _15317_i)) {
									_case_begin_1ab820be7:;
									{
										goto _iter_end_1ab81d882;
									}
								}
								else if (_1c486ea85_IsIgnoreIdent((*(*(_153110_p)).alloc)._field_Ident) || _1c486ea85_IsIgnoreIdent((*((*(_154311_jp))))._field_Ident) || _1c486ed4e_IsAnonIdent((*(*(_153110_p)).alloc)._field_Ident) || _1c486ed4e_IsAnonIdent((*(*(_154311_jp)).alloc)._field_Ident)) {
									_case_begin_1ab820c80:;
									{
										goto _iter_end_1ab81d882;
									}
								}
								else if (((*(*(_153110_p)).alloc)._field_Ident == (*((*(_154311_jp))))._field_Ident)) {
									_case_begin_1ab820ce6:;
									{
										__jule_func_result=false;
										_1c4950e0d_pushErr(_self_, (*(*(_153110_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_153110_p)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ab81c70a;
									}
								}
								_match_end_1ab820aa4:;
							};
						}
						_iter_next_1ab81d882:;
						++it;
						_15438_j++;
						goto _iter_begin_1ab81d882;
					}
					_iter_end_1ab81d882:;
				};
			}
			_iter_next_1ab81c70a:;
			++it;
			_15317_i++;
			goto _iter_begin_1ab81c70a;
		}
		_iter_end_1ab81c70a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c49612b4_checkFnDeclResultDup(_1c494d290_sema* _self_, jule::Ptr<_1c48b8738_Fn>* _156537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1c48b8bde_IsVoid((*(_156537_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_156537_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab82963a:;
		if (it != expr_end) {
			jule::I64 _15727_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> *_157210_v = it;
			{
				if ((_1c486ea85_IsIgnoreIdent((*((*(_157210_v))))._field_Kind) || _1c486ed4e_IsAnonIdent((*(*(_157210_v)).alloc)._field_Kind))) {
					goto _iter_next_1ab82963a;
				};
				{
					auto expr = &((*((*(_156537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab82abd0:;
					if (it != expr_end) {
						jule::Ptr<_1c488e984_GenericDecl> *_157711_g = it;
						{
							if (((*(*(_157210_v)).alloc)._field_Kind == (*((*(_157711_g))))._field_Ident)) {
								goto _julec_label_1ab82ea3b;
							};
						}
						_iter_next_1ab82abd0:;
						++it;
						goto _iter_begin_1ab82abd0;
					}
					_iter_end_1ab82abd0:;
				};
				{
					auto expr = &((*((*(_156537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab82c154:;
					if (it != expr_end) {
						jule::Ptr<_1c48b6c64_Param> *_158311_p = it;
						{
							if (((*(*(_157210_v)).alloc)._field_Kind == (*((*(_158311_p))))._field_Ident)) {
								goto _julec_label_1ab82ea3b;
							};
						}
						_iter_next_1ab82c154:;
						++it;
						goto _iter_begin_1ab82c154;
					}
					_iter_end_1ab82c154:;
				};
				_julec_label_1ab82c8a2:;
				{
					auto expr = &((*((*((*(_156537_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab82d892:;
					if (it != expr_end) {
						jule::I64 _15918_j = it - expr->begin();
						jule::Ptr<_1c486c19d_Token> *_159111_jv = it;
						{
							{
								
								if ((_15918_j >= _15727_i)) {
									_case_begin_1ab82e40e:;
									{
										goto _iter_end_1ab82d892;
									}
								}
								else if (((*((*(_159111_jv))))._field_Kind == (*(*(_157210_v)).alloc)._field_Kind)) {
									_case_begin_1ab82e497:;
									{
										goto _julec_label_1ab82ea3b;
									}
								}
								_match_end_1ab82e310:;
							};
						}
						_iter_next_1ab82d892:;
						++it;
						_15918_j++;
						goto _iter_begin_1ab82d892;
					}
					_iter_end_1ab82d892:;
				};
				goto _iter_next_1ab82963a;
				_julec_label_1ab82ea3b:;
				_1c4950e0d_pushErr(_self_, (*(_157210_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_157210_v)).alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ab82963a:;
			++it;
			_15727_i++;
			goto _iter_begin_1ab82963a;
		}
		_iter_end_1ab82963a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4961605_checkFnVariadicParam(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _161042_f) {
	if (((*((*(_161042_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1c48b6c64_Param> _16147_param = (*((*(_161042_f))))._field_Params[((*((*(_161042_f))))._field_Params.len() - 1LL)];;
	if (((*(_16147_param))._field_Variadic && (*_16147_param.alloc)._field_Reference)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*_16147_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1c49618ad_checkFnDeclPrototype(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _162342_f) {
	if (((*((*(_162342_f))))._field_Exceptional && (*((*(_162342_f))))._field_Binded)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_162342_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_162342_f))))._field_Exceptional) {
		if (_1c48b920b_IsEntryPoint((*(_162342_f)).ptr())) {
			_1c4950e0d_pushErr(_self_, (*((*(_162342_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1c48b9492_IsInit((*(_162342_f)).ptr())) {
			_1c4950e0d_pushErr(_self_, (*((*(_162342_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1c4960b32_checkDeclGenerics(_self_, &((*((*(_162342_f))))._field_Generics))))) {
			_case_begin_1ab8369cc:;
		}
		else if ((!(_1c4960e73_checkFnDeclParamsDup(_self_, _162342_f)))) {
			_case_begin_1ab836a43:;
		}
		else if ((!(_1c49612b4_checkFnDeclResultDup(_self_, _162342_f)))) {
			_case_begin_1ab836aa9:;
		}
		else if ((!(_1c4961605_checkFnVariadicParam(_self_, _162342_f)))) {
			_case_begin_1ab836b20:;
		}
		_match_end_1ab8350a2:;
	};
}



inline jule::Bool _1c4961d64_catchTraitInheritCycle(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait> _164539_t1, jule::Ptr<_1c48cc1b9_Trait> _164555_t2, _238b51e24_StrBuilder* _164572_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_164555_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab839150:;
		if (it != expr_end) {
			jule::Ptr<_1c4a173d1_TypeSymbol> _164715_i = *it;
			{
				if (((*(_164715_i))._field_Kind == nullptr)) {
					goto _iter_next_1ab839150;
				};
				jule::Ptr<_1c48cc1b9_Trait> _16518_t3 = _1c4a1419c_Trait((*_164715_i.alloc)._field_Kind.ptr());;
				if ((_164539_t1 == _16518_t3)) {
					_1c4966ae4_pushCycleError(_self_.ptr(), &((*(_164555_t2))._field_Ident), &((*(_16518_t3))._field_Ident), _164572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1c4961d64_catchTraitInheritCycle(_self_, _164539_t1, _16518_t3, _164572_message)))) {
					_1c4966ae4_pushCycleError(_self_, &((*_164555_t2.alloc)._field_Ident), &((*_16518_t3.alloc)._field_Ident), _164572_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab839150:;
			++it;
			goto _iter_begin_1ab839150;
		}
		_iter_end_1ab839150:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c49621a5__checkTraitDeclInherits(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _166445_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166445_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab83c8c3:;
		if (it != expr_end) {
			jule::I64 _16668_i = it - expr->begin();
			jule::Ptr<_1c4a173d1_TypeSymbol> _166615_it = *it;
			{
				if ((!(_1c4956a7e_checkType(_self_, &(_166615_it), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1ab83c8c3;
				};
				jule::Ptr<_1c48cc1b9_Trait> _16718_t2 = _1c4a1419c_Trait((*(_166615_it))._field_Kind.ptr());;
				if ((_16718_t2 == nullptr)) {
					_1c4950e0d_pushErr(_self_, (*((*_166615_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166445_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_166615_it))._field_Kind), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab83c8c3;
				};
				{
					auto expr = &((*((*(_166445_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab83e7a4:;
					if (it != expr_end) {
						jule::I64 _16778_j = it - expr->begin();
						jule::Ptr<_1c4a173d1_TypeSymbol> _167711_it2 = *it;
						{
							if ((_16778_j >= _16668_i)) {
								goto _iter_end_1ab83e7a4;
							};
							if ((((*(_167711_it2))._field_Kind != nullptr) && _1c4a1094b_Equal((*(_166615_it))._field_Kind, (*_167711_it2.alloc)._field_Kind))) {
								_1c4950e0d_pushErr(_self_, (*(*(_166615_it))._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_16718_t2))._field_Ident, &__jule_any_type4); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1ab83e7a4;
							};
						}
						_iter_next_1ab83e7a4:;
						++it;
						_16778_j++;
						goto _iter_begin_1ab83e7a4;
					}
					_iter_end_1ab83e7a4:;
				};
				if (((*(_166445_t)) == _16718_t2)) {
					_1c4950e0d_pushErr(_self_, (*(*(_166615_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166445_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_238b51e24_StrBuilder _16919_message = static__238b52375_New(64LL);;
					__jule_func_result=(__jule_func_result && _1c4961d64_catchTraitInheritCycle(_self_, (*(_166445_t)), _16718_t2, &(_16919_message)));
					if ((_238b53662_Len(&_16919_message) > 0LL)) {
						jule::Str _169410_errMsg = _238b531cd_Str(&_16919_message);;
						_238b533cb_Clear(&_16919_message);
						_1c4966ae4_pushCycleError(_self_, &((*((*(_166445_t))))._field_Ident), &((*(_16718_t2))._field_Ident), &(_16919_message));
						_169410_errMsg+=_238b531cd_Str(&_16919_message);
						_1c4950e0d_pushErr(_self_, (*(*(_166615_it))._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_169410_errMsg, &__jule_any_type4); __jule_collection; }));
					};
				};
			}
			_iter_next_1ab83c8c3:;
			++it;
			_16668_i++;
			goto _iter_begin_1ab83c8c3;
		}
		_iter_end_1ab83c8c3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c496245d_checkTraitDeclInherits(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _170544_t) {
	{
		auto expr = &((*((*(_170544_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab847812:;
		if (it != expr_end) {
			jule::I64 _17068_i = it - expr->begin();
			jule::Ptr<_1c4a173d1_TypeSymbol> _170615_it = *it;
			{
				jule::Ptr<_1c48cc1b9_Trait> _17078_t1 = _1c4a1419c_Trait((*(_170615_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_170544_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab848d41:;
					if (it != expr_end) {
						jule::I64 _17089_j = it - expr->begin();
						jule::Ptr<_1c4a173d1_TypeSymbol> _170816_it2 = *it;
						{
							if ((_17089_j == _17068_i)) {
								goto _iter_next_1ab848d41;
							};
							jule::Ptr<_1c48cc1b9_Trait> _17129_t2 = _1c4a1419c_Trait((*(_170816_it2))._field_Kind);;
							{
								auto expr = &((*(_17078_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab84a5b2:;
								if (it != expr_end) {
									jule::Ptr<_1c48b8738_Fn> _171317_t1m = *it;
									{
										jule::Ptr<_1c48b8738_Fn> _171410_t2m = _1c48ccd9b_FindMethod(_17129_t2.ptr(), (*(_171317_t1m))._field_Ident);;
										if ((_171410_t2m == nullptr)) {
											goto _iter_next_1ab84a5b2;
										};
										jule::Ptr<_1c48bb719_FnIns> _17186_t1f = _1c495a940_getTraitCheckFnKind(_self_, &(_171317_t1m));;
										jule::Ptr<_1c48bb719_FnIns> _17196_t2f = _1c495a940_getTraitCheckFnKind(_self_, &(_171410_t2m));;
										if ((!(_1c48bc6b5_equalTrait(_17186_t1f, &(_17196_t2f))))) {
											_1c4950e0d_pushErr(_self_, (*((*_170615_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_170544_t))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_17129_t2.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c48bd5ea_GetKindStr(_17186_t1f, true), &__jule_any_type4); (*it++) = jule::Any(_1c48bd5ea_GetKindStr(_17196_t2f.ptr(), true), &__jule_any_type4); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1ab84a5b2:;
									++it;
									goto _iter_begin_1ab84a5b2;
								}
								_iter_end_1ab84a5b2:;
							};
						}
						_iter_next_1ab848d41:;
						++it;
						_17089_j++;
						goto _iter_begin_1ab848d41;
					}
					_iter_end_1ab848d41:;
				};
			}
			_iter_next_1ab847812:;
			++it;
			_17068_i++;
			goto _iter_begin_1ab847812;
		}
		_iter_end_1ab847812:;
	};
}



inline void _1c4962716_checkTraitDeclMethod(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _173042_f) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_173042_f))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_173042_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c486ed4e_IsAnonIdent((*((*(_173042_f))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_173042_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_173042_f))))._field_sema=_self_;
	_1c49618ad_checkFnDeclPrototype(_self_, _173042_f);
	jule::Ptr<_1c48bb719_FnIns> _17387_ins = _1c48b9ecb_instance((*(_173042_f)));;
	_1c495bd92_reloadFnInsTypes(_self_, _17387_ins);
	(*(_17387_ins))._field_reloaded=true;
	_1c48ba2d9_appendInstance((*(_173042_f)).ptr(), &(_17387_ins));
}



inline void _1c49629be_checkTraitDeclMethods(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _174443_t) {
	{
		auto expr = &((*((*(_174443_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8526da:;
		if (it != expr_end) {
			jule::I64 _17458_i = it - expr->begin();
			jule::Ptr<_1c48b8738_Fn> _174515_f = *it;
			{
				_1c4962716_checkTraitDeclMethod(_self_, &(_174515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1c48cd52d_findMethodInherit((*(_174443_t)).ptr(), &((*(_174515_f))._field_Ident)) != nullptr)) {
					_1c4950e0d_pushErr(_self_, (*_174515_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_174515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ab8526da;
				};
				_julec_label_1ab8535a9:;
				{
					auto expr = &((*((*(_174443_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab8556dd:;
					if (it != expr_end) {
						jule::I64 _17618_j = it - expr->begin();
						jule::Ptr<_1c48b8738_Fn> _176111_jf = *it;
						{
							{
								
								if ((_17618_j >= _17458_i)) {
									_case_begin_1ab85625a:;
									{
										goto _iter_end_1ab8556dd;
									}
								}
								else if (((*_174515_f.alloc)._field_Ident == (*(_176111_jf))._field_Ident)) {
									_case_begin_1ab8562e3:;
									{
										_1c4950e0d_pushErr(_self_, (*_174515_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_174515_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
										_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ab8556dd;
									}
								}
								_match_end_1ab85615b:;
							};
						}
						_iter_next_1ab8556dd:;
						++it;
						_17618_j++;
						goto _iter_begin_1ab8556dd;
					}
					_iter_end_1ab8556dd:;
				};
			}
			_iter_next_1ab8526da:;
			++it;
			_17458_i++;
			goto _iter_begin_1ab8526da;
		}
		_iter_end_1ab8526da:;
	};
}



inline void _1c4962c77_checkTraitDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48cc1b9_Trait>* _178036_t) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_178036_t))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_178036_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4951b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_178036_t))), &((*((*(_178036_t))))._field_Ident), false)) {
		_1c4950e0d_pushErr(_self_, (*((*(_178036_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_178036_t))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c496245d_checkTraitDeclInherits(_self_, _178036_t);
	_1c49629be_checkTraitDeclMethods(_self_, _178036_t);
}



inline jule::Bool _1c496300d_checkTraitDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab85b64a:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _179415_t = *it;
			{
				_1c4962c77_checkTraitDecl(_self_, &(_179415_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab85b64a:;
			++it;
			goto _iter_begin_1ab85b64a;
		}
		_iter_end_1ab85b64a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4963409_checkTraitImplMethods(_1c494d290_sema* _self_, jule::Ptr<_1c48cc1b9_Trait>* _180442_base, jule::Ptr<_1c4905830_Impl>* _180457_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180457_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab85d10d:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> *_180610_f = it;
			{
				if ((_1c48ccd9b_FindMethod((*(_180442_base)).ptr(), (*((*(_180610_f))))._field_Ident) == nullptr)) {
					_1c4950e0d_pushErr(_self_, (*(*(_180610_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_180442_base))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_180610_f)).alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab85d10d:;
			++it;
			goto _iter_begin_1ab85d10d;
		}
		_iter_end_1ab85d10d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4963805_implToStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _181534_dest, jule::Ptr<_1c4905830_Impl>* _181554_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_181554_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab86082a:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _181915_f = *it;
			{
				if (((_1c48a4328_FindMethod((*(_181534_dest)).ptr(), (*(_181915_f))._field_Ident, (*_181915_f.alloc)._field_Statically) != nullptr) || (_1c48a49aa_FindField((*(_181534_dest)).ptr(), (*_181915_f.alloc)._field_Ident) != nullptr))) {
					_1c4950e0d_pushErr(_self_.ptr(), (*_181915_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_181534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_181915_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab86082a;
				};
				if ((((*((*(_181534_dest))))._field_Generics.len() > 0LL) && ((*_181915_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181915_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab863751:;
						if (it != expr_end) {
							jule::Ptr<_1c488e984_GenericDecl> _182712_fg = *it;
							{
								{
									auto expr = &((*((*(_181534_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab86419c:;
									if (it != expr_end) {
										jule::Ptr<_1c488e984_GenericDecl> _182813_dg = *it;
										{
											if (((*(_182712_fg))._field_Ident == (*(_182813_dg))._field_Ident)) {
												_1c4950e0d_pushErr(_self_, (*_182712_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ab86419c:;
										++it;
										goto _iter_begin_1ab86419c;
									}
									_iter_end_1ab86419c:;
								};
							}
							_iter_next_1ab863751:;
							++it;
							goto _iter_begin_1ab863751;
						}
						_iter_end_1ab863751:;
					};
				};
				_1c4951e86_checkDirectives(_self_, &((*_181915_f.alloc)._field_Directives), jule::Any(_181915_f, &__jule_any_type64));
				(*_181915_f.alloc)._field_sema=_self_;
				(*_181915_f.alloc)._field_Owner=(*(_181534_dest));
				{ jule::Slice<jule::Ptr<_1c48b8738_Fn>> &__jule_push_dest = (*((*(_181534_dest))))._field_Methods; __jule_push_dest.push(_181915_f); };
			}
			_iter_next_1ab86082a:;
			++it;
			goto _iter_begin_1ab86082a;
		}
		_iter_end_1ab86082a:;
	};
	{
		auto expr = &((*((*(_181554_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab860c04:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _184415_v = *it;
			{
				;
				if (((_1c48a4328_FindMethod((*(_181534_dest)).ptr(), (*(_184415_v))._field_Ident, true) != nullptr) || (_1c48a4669_FindStatic((*(_181534_dest)).ptr(), (*_184415_v.alloc)._field_Ident) != nullptr))) {
					_1c4950e0d_pushErr(_self_, (*_184415_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_181534_dest))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_184415_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1ab860c04;
				};
				{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*((*(_181534_dest))))._field_Statics; __jule_push_dest.push(_184415_v); };
			}
			_iter_next_1ab860c04:;
			++it;
			goto _iter_begin_1ab860c04;
		}
		_iter_end_1ab860c04:;
	};
	return __jule_func_result;;
}



inline void _1c4963aad_implTrait(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _185731_decl) {
	jule::Ptr<_1c4a1020e_TypeKind> _18587_base_t = _1c49576b7_selectType(_self_, &((*((*(_185731_decl))))._field_Base));;
	if ((_18587_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1c48cc1b9_Trait> _18627_base = _1c4a1419c_Trait(_18587_base_t.ptr());;
	if ((_18627_base == nullptr)) {
		_1c4950e0d_pushErr(_self_, (*((*((*(_185731_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str(_18587_base_t.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _18697_destT = _1c49576b7_selectType(_self_, &((*((*(_185731_decl))))._field_Dest));;
	if ((_18697_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _18737_destS = _1c4a13e16_Struct(_18697_destT.ptr());;
	if ((_18737_destS == nullptr)) {
		_1c4950e0d_pushErr(_self_, (*((*((*(_185731_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str(_18697_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c48a3679_Struct> _18807_dest = (*(_18737_destS))._field_Decl;;
	if ((_1c487311b_Dir((*((*(_18807_dest))._field_Token))._field_File.ptr()) != _1c487311b_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_185731_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1c496ec95_pushImplemented(_18627_base, &(_18807_dest));
	_1c4970081_pushImplements(&(_18807_dest), _18627_base);
	if (((*((*(_185731_decl))))._field_Statics.len() > 0LL)) {
		_1c4950e0d_pushErr(_self_, (*((*((*(_185731_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1c4963409_checkTraitImplMethods(_self_, &(_18627_base), _185731_decl)))) {
			_case_begin_1aa8b1904:;
		}
		else if ((!(_1c4963805_implToStruct(_self_, &(_18807_dest), _185731_decl)))) {
			_case_begin_1aa8b196a:;
		}
		_match_end_1aa8b0947:;
	};
}



inline void _1c4963d66_implStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _190032_decl) {
	jule::Ptr<_1c4a1020e_TypeKind> _19017_destT = _1c49576b7_selectType(_self_, &((*((*(_190032_decl))))._field_Dest));;
	if ((_19017_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _19057_destS = _1c4a13e16_Struct(_19017_destT.ptr());;
	if ((_19057_destS == nullptr)) {
		_1c4950e0d_pushErr(_self_, (*((*((*(_190032_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str(_19017_destT.ptr()), &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c48a3679_Struct> _19127_dest = (*(_19057_destS))._field_Decl;;
	if ((_1c487311b_Dir((*((*(_19127_dest))._field_Token))._field_File.ptr()) != _1c487311b_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_190032_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1c4963805_implToStruct(_self_, &(_19127_dest), _190032_decl)))) {
			_case_begin_1aa8b9e6d:;
		}
		_match_end_1aa8b8686:;
	};
}



inline void _1c496411e_implImpl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c4905830_Impl>* _192430_decl) {
	{
		
		if (_1c4905c2b_IsTraitImpl((*(_192430_decl)).ptr())) {
			_case_begin_1aa8ba9eb:;
			{
				_1c4963aad_implTrait(_self_, _192430_decl);
			}
		}
		else if (_1c4905eb2_IsStructImpl((*(_192430_decl)).ptr())) {
			_case_begin_1aa8baa95:;
			{
				_1c4963d66_implStruct(_self_, _192430_decl);
			}
		}
		_match_end_1aa8ba8db:;
	};
}



inline void _1c4964482_checkVarDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _193534_decl, jule::Trait _193550_l) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_193534_decl))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_193534_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1c4971c53_IsTypeInferred((*(_193534_decl)).ptr())) {
		if ((!(_1c49719bc_IsInitialized((*(_193534_decl)).ptr())))) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1c4956a7e_checkType(_self_, &((*((*(_193534_decl))))._field_Kind), _193550_l);
	};
	if ((*((*(_193534_decl))))._field_Reference) {
		if ((*((*(_193534_decl))))._field_Constant) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_193534_decl))))._field_Statically) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1c49719bc_IsInitialized((*(_193534_decl)).ptr())))) {
		if ((*((*(_193534_decl))))._field_Constant) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_193534_decl))))._field_Statically) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_193534_decl))))._field_Reference) {
			_1c4950e0d_pushErr(_self_, (*((*(_193534_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1c496473a_checkGlobalVarDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _197240_decl) {
	if (_1c4951b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_197240_decl))), &((*((*(_197240_decl))))._field_Ident), (*((*(_197240_decl))))._field_Binded)) {
		_1c4950e0d_pushErr(_self_, (*((*(_197240_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_197240_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_197240_decl))))._field_Binded && (*((*(_197240_decl))))._field_Constant)) {
		_1c4950e0d_pushErr(_self_, (*((*(_197240_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_197240_decl))))._field_Binded)) && (!((*((*(_197240_decl))))._field_Constant))) && (!((*((*(_197240_decl))))._field_Statically)))) {
		_1c4950e0d_pushErr(_self_, (*((*(_197240_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1c4951e86_checkDirectives(_self_, &((*((*(_197240_decl))))._field_Directives), jule::Any((*(_197240_decl)), &__jule_any_type8));
	_1c4964482_checkVarDecl(_self_, _197240_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
}



inline jule::Bool _1c49649c1_checkGlobalDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8c8b6e:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _199015_decl = *it;
			{
				_1c496473a_checkGlobalVarDecl(_self_, &(_199015_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa8c8b6e:;
			++it;
			goto _iter_begin_1aa8c8b6e;
		}
		_iter_end_1aa8c8b6e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c4964dbc_checkStructTraitImpl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _200042_strct, jule::Ptr<_1c48cc1b9_Trait>* _200063_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_200063_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ca533:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _200115_tf = *it;
			{
				jule::Bool _20028_exist = false;;
				jule::Ptr<_1c48b8738_Fn> _20038_sf = _1c48a4328_FindMethod((*(_200042_strct)).ptr(), (*(_200115_tf))._field_Ident, (*_200115_tf.alloc)._field_Statically);;
				jule::Ptr<_1c48bb719_FnIns> _20044_tfK = _1c495a940_getTraitCheckFnKind(_self_, &(_200115_tf));;
				if ((_20038_sf != nullptr)) {
					jule::Ptr<_1c48bb719_FnIns> _20069_sfK = _1c495a940_getTraitCheckFnKind(_self_, &(_20038_sf));;
					if ((_20069_sfK != nullptr)) {
						_20028_exist=_1c48bc6b5_equalTrait(_20044_tfK, &(_20069_sfK));
					};
				};
				if (_20028_exist) {
					jule::Ptr<_1c4881b96_Directive> _20125_d = _1c4a076ac_findDirective(&((*_20038_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_20125_d != nullptr)) {
						_1c4950e0d_pushErr(_self_, (*_20125_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1c4950e0d_pushErr(_self_, (*((*(_200042_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_200063_trt))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c48bd5ea_GetKindStr(_20044_tfK, true), &__jule_any_type4); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1aa8ca533:;
			++it;
			goto _iter_begin_1aa8ca533;
		}
		_iter_end_1aa8ca533:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c496520d_checkStructImpls(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _202638_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202638_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8d1539:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _202815_trt = *it;
			{
				__jule_func_result=(_1c4964dbc_checkStructTraitImpl(_self_, _202638_s, &(_202815_trt)) && __jule_func_result);
			}
			_iter_next_1aa8d1539:;
			++it;
			goto _iter_begin_1aa8d1539;
		}
		_iter_end_1aa8d1539:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c496554e_checkStructFields(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _203439_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_203439_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8d29be:;
		if (it != expr_end) {
			jule::Ptr<_1c48a0753_Field> _203615_f = *it;
			{
				(*(_203615_f))._field_Owner=(*(_203439_st));
				{
					auto expr = &((*((*(_203439_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aa8d36d4:;
					if (it != expr_end) {
						jule::Ptr<_1c48a0753_Field> _203811_cf = *it;
						{
							if ((_203615_f == _203811_cf)) {
								goto _iter_end_1aa8d36d4;
							} else if (((*_203615_f.alloc)._field_Ident == (*(_203811_cf))._field_Ident)) {
								_1c4950e0d_pushErr(_self_.ptr(), (*_203615_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_203615_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
								_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1aa8d36d4:;
						++it;
						goto _iter_begin_1aa8d36d4;
					}
					_iter_end_1aa8d36d4:;
				};
			}
			_iter_next_1aa8d29be:;
			++it;
			goto _iter_begin_1aa8d29be;
		}
		_iter_end_1aa8d29be:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1c4965807_checkStructDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _205137_s) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_205137_s))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_205137_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c4951b23_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_205137_s))), &((*((*(_205137_s))))._field_Ident), (*((*(_205137_s))))._field_Binded)) {
		_1c4950e0d_pushErr(_self_, (*((*(_205137_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_205137_s))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1c4951e86_checkDirectives(_self_, &((*((*(_205137_s))))._field_Directives), jule::Any((*(_205137_s)), &__jule_any_type65));
	{
		
		if ((!(_1c4960b32_checkDeclGenerics(_self_, &((*((*(_205137_s))))._field_Generics))))) {
			_case_begin_1aa8d8442:;
		}
		else if ((!(_1c496554e_checkStructFields(_self_, _205137_s)))) {
			_case_begin_1aa8d84a8:;
		}
		else if ((!(_1c496520d_checkStructImpls(_self_, _205137_s)))) {
			_case_begin_1aa8d851e:;
		}
		else if ((!(_1c4966440_checkFuncDeclsBy(_self_, &((*((*(_205137_s))))._field_Methods))))) {
			_case_begin_1aa8d8585:;
		}
		_match_end_1aa8d8310:;
	};
}



inline jule::Bool _1c4965a8d_checkStructDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8da752:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _207115_s = *it;
			{
				_1c4965807_checkStructDecl(_self_, &(_207115_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa8da752:;
			++it;
			goto _iter_begin_1aa8da752;
		}
		_iter_end_1aa8da752:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4965d46_checkAnonFuncDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _208139_f) {
	(*((*(_208139_f))))._field_sema=_self_;
	_1c49618ad_checkFnDeclPrototype(_self_, _208139_f);
}



inline void _1c49660ee_checkFuncDecl(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _208635_f) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_208635_f))))._field_Ident)) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_208635_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c48b9728_IsAnon((*(_208635_f)).ptr())) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_208635_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1c4951e86_checkDirectives(_self_, &((*((*(_208635_f))))._field_Directives), jule::Any((*(_208635_f)), &__jule_any_type64));
	_1c4965d46_checkAnonFuncDecl(_self_, _208635_f);
	if ((((*((*(_208635_f))))._field_Owner == nullptr) && _1c4951b23_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_208635_f))), &((*((*(_208635_f))))._field_Ident), (*((*(_208635_f))))._field_Binded))) {
		if ((*((*(_208635_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1c48b8738_Fn> _20985_init = _1c494e857_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20985_init != nullptr)) {
				return;;
			};
		};
		_1c4950e0d_pushErr(_self_, (*((*(_208635_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_208635_f))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c4966440_checkFuncDeclsBy(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _210838_funcs) {
	{
		auto expr = _210838_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8e29bd:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _210915_f = *it;
			{
				_1c49660ee_checkFuncDecl(_self_, &(_210915_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1aa8e29bd:;
			++it;
			goto _iter_begin_1aa8e29bd;
		}
		_iter_end_1aa8e29bd:;
	};
	return true;;
}



inline jule::Bool _1c49666c6_checkFuncDecls(jule::Ptr<_1c494d290_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c4966440_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1c4966ae4_pushCycleError(_1c494d290_sema* _self_, jule::Str* _212427_st1, jule::Str* _212438_st2, _238b51e24_StrBuilder* _212453_message) {
	;
	jule::Str _21263_refersTo = _205a97c49_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_212427_st1)), &__jule_any_type4); (*it++) = jule::Any((*(_212438_st2)), &__jule_any_type4); __jule_collection; }));;
	jule::Str _21273_m = _238b531cd_Str(_212453_message);;
	_238b528d6_WriteStr(_212453_message, _2059e3c83_Repeat(jule::Str::lit(" ", 1), 7LL));
	_238b528d6_WriteStr(_212453_message, _21263_refersTo);
	_238b52b8e_WriteByte(_212453_message, '\n');
	_238b528d6_WriteStr(_212453_message, _21273_m);
}



inline void _1c4967298_checkPackageDecls(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8e961d:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _215115_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _215115_f);
				if ((!(_1c495da53_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa8e961d:;
			++it;
			goto _iter_begin_1aa8e961d;
		}
		_iter_end_1aa8e961d:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8e9a80:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _215815_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_, _215815_f);
				if ((!(_1c496300d_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa8e9a80:;
			++it;
			goto _iter_begin_1aa8e9a80;
		}
		_iter_end_1aa8e9a80:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8eaa92:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _216515_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_, _216515_f);
				if ((!(_1c49649c1_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aa8eaa92:;
			++it;
			goto _iter_begin_1aa8eaa92;
		}
		_iter_end_1aa8eaa92:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8ebac6:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _217215_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_, _217215_f);
				{
					
					if ((!(_1c49666c6_checkFuncDecls(_self_)))) {
						_case_begin_1aa8ed1d2:;
					}
					else if ((!(_1c4965a8d_checkStructDecls(_self_)))) {
						_case_begin_1aa8ed27b:;
					}
					else {
						_case_begin_1aa8ecb4e:;
						{
							goto _iter_next_1aa8ebac6;
						}
					}
					_match_end_1aa8ed149:;
				};
				return;;
			}
			_iter_next_1aa8ebac6:;
			++it;
			goto _iter_begin_1aa8ebac6;
		}
		_iter_end_1aa8ebac6:;
	};
}



inline void _1c496760b_checkDataForTypeInference(_1c494d290_sema* _self_, jule::Ptr<_1c49ce024_Data>* _218442_d, jule::Ptr<_1c486c19d_Token>* _218453_err_token) {
	{
		
		if (_1c49ce442_IsNil((*(_218442_d)).ptr())) {
			_case_begin_1aa8ee337:;
			{
				_1c4950e0d_pushErr(_self_, (*(_218453_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1c49ce6c8_IsVoid((*(_218442_d)).ptr())) {
			_case_begin_1aa8ee3d1:;
			{
				_1c4950e0d_pushErr(_self_, (*(_218453_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_218442_d))))._field_Kind))._field_Variadic) {
			_case_begin_1aa8ee447:;
			{
				_1c4950e0d_pushErr(_self_, (*(_218453_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa8ee216:;
	};
}



inline void _1c49678b4_checkVarValue(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _219635_v) {
	if (_1c4971c53_IsTypeInferred((*(_219635_v)).ptr())) {
		(*((*(_219635_v))))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*((*((*((*(_219635_v))))._field_Value))._field_Data))._field_Kind});
		_1c496760b_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_219635_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_219635_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1c495cca5_checkValidityForInitExpr(_self_, (*((*(_219635_v))))._field_Mutable, (*((*(_219635_v))))._field_Reference, &((*((*((*(_219635_v))))._field_Kind))._field_Kind), &((*(*((*(_219635_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_219635_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1c4a1e608_Arr> _22098_arr = _1c4a13663_Arr((*((*((*(_219635_v))))._field_Kind))._field_Kind.ptr());;
		if ((_22098_arr != nullptr)) {
			if ((*_22098_arr.alloc)._field_Auto) {
				jule::Ptr<_1c4a1e608_Arr> _22126_dataArr = _1c4a13663_Arr((*((*((*((*(_219635_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_22126_dataArr != nullptr)) {
					(*_22098_arr.alloc)._field_N=(*_22126_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1c495891b_checkAssignType(_self_, (*((*(_219635_v))))._field_Reference, &((*(*((*(_219635_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_219635_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_219635_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1c495cca5_checkValidityForInitExpr(_self_, (*((*(_219635_v))))._field_Mutable, (*((*(_219635_v))))._field_Reference, &((*(*((*(_219635_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_219635_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_219635_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_219635_v))))._field_Reference && (!(_1c4a2b6c0_isValidForRef(&((*((*((*(_219635_v))))._field_Kind))._field_Kind)))))) {
		_1c4950e0d_pushErr(_self_.ptr(), (*((*(_219635_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(*((*(_219635_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	};
	if ((*((*(_219635_v))))._field_Constant) {
		if (((!(_1c49ce95e_IsConst((*((*((*(_219635_v))))._field_Value))._field_Data.ptr()))) && (!(_1c4a14950_comptime((*(*((*((*(_219635_v))))._field_Value))._field_Data.alloc)._field_Kind.ptr()))))) {
			_1c4950e0d_pushErr(_self_, (*((*(*((*(_219635_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_219635_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_219635_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1c4a146b9_Tup((*((*((*(_219635_v))))._field_Kind))._field_Kind) != nullptr)) {
		(*(*((*(_219635_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1c4967c27_evalVarValue(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _224934_decl, jule::Trait _224950_l) {
	if ((!(_1c49719bc_IsInitialized((*(_224934_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1c49d0c4b_eval> _22547_eval = static_cast<jule::Ptr<_1c49d0c4b_eval>>(nullptr);;
	if (((*((*(_224934_decl))))._field_Kind != nullptr)) {
		_22547_eval=_1c4957b6d_evalpd(_self_, _224950_l, (*(*((*(_224934_decl))))._field_Kind.alloc)._field_Kind, (*(_224934_decl)));
	} else {
		_22547_eval=_1c4957b6d_evalpd(_self_, _224950_l, nullptr, (*(_224934_decl)));
	};
	(*(_22547_eval))._field_immutable=(!((*((*(_224934_decl))))._field_Mutable));
	(*((*((*(_224934_decl))))._field_Value))._field_Data=_1c49edede_evalExpr(_22547_eval, (*(*((*(_224934_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1c496808a_checkVar(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c49715b0_Var>* _226630_decl, jule::Trait _226646_l) {
	_1c4967c27_evalVarValue(_self_, _226630_decl, _226646_l);
	if (((*((*((*(_226630_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1c49678b4_checkVarValue(_self_, _226630_decl);
}



inline void _1c4968288_checkGlobals(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa915eca:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _227615_decl = *it;
			{
				if ((*(_227615_decl))._field_Binded) {
					goto _iter_next_1aa915eca;
				};
				if (((_1c49719bc_IsInitialized(_227615_decl) && ((*((*_227615_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1c4971c53_IsTypeInferred(_227615_decl) && ((*((*_227615_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1c496808a_checkVar(_self_, &(_227615_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
				};
			}
			_iter_next_1aa915eca:;
			++it;
			goto _iter_begin_1aa915eca;
		}
		_iter_end_1aa915eca:;
	};
}



inline jule::Ptr<_1c48bb719_FnIns> _1c4968684_readyToCheckFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _229036_s, jule::Ptr<_1c48b8738_Fn>* _229056_f) {
	jule::Ptr<_1c48bb719_FnIns> _22917_ins = _1c48b9ecb_instance((*(_229056_f)));;
	if (((*((*(_229056_f))))._field_Instances.len() != 0LL)) {
		return _22917_ins;;
	};
	(*(_22917_ins))._field_Owner=(*(_229036_s));
	_1c48ba2d9_appendInstance((*(_229056_f)).ptr(), &(_22917_ins));
	(*_22917_ins.alloc)._field_reloaded=true;
	if (_1c495bd92_reloadFnInsTypes(_self_, _22917_ins)) {
		return _22917_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c4968a80_checkGenericFn(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _230636_f, jule::Ptr<_1c486c19d_Token>* _230652_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1c495bd92_reloadFnInsTypes(_self_, (*(_230636_f)));
	(*((*(_230636_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c48bb719_FnIns> _23127_existInstance = _1c48ba2d9_appendInstance((*((*(_230636_f))))._field_Decl.ptr(), _230636_f);;
	if ((!(_1c495ade6_checkConstraintsFn(_self_, _230636_f, _230652_et, _23127_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_23127_existInstance != nullptr)) {
		(*(_230636_f))=_23127_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1c496b5dd_checkFnInsCaller(_self_, _230636_f, (*(_230652_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1c4968de3_checkTypeMethod(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _232937_s, jule::Ptr<_1c48b8738_Fn>* _232957_f) {
	if (((*((*(_232957_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1c48bb719_FnIns> _23347_ins = (*((*(_232957_f))))._field_Instances[0LL];;
	if (((*((*(_23347_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1c496b896_checkFnIns(_self_, &(_23347_ins));
}



inline jule::Ptr<_1c48bb719_FnIns> _1c4969399_checkStructInsOp(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _234238_s, jule::Ptr<_1c48b8738_Fn>* _234258_f, jule::Fn<jule::Bool,jule::Ptr<_1c48b8738_Fn>> _234266_p) {
	if (((((*(_234258_f)) == nullptr) || ((*((*(_234258_f))))._field_Generics.len() > 0LL)) || (!(_234266_p((*(_234258_f))))))) {
		return nullptr;;
	};
	return (*((*(_234258_f))))._field_Instances[0LL];;
}



inline jule::Bool _1c4969795_checkStructEnv(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _235236_s, jule::Ptr<_1c486c19d_Token> _235255_errorToken) {
	jule::Bool __jule_func_result = false;
	_1c4a220bc_typeChecker _23537_tc = _1c4a220bc_typeChecker{._field_s=(*((*((*(_235236_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_235236_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_235236_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1c4a210cc_referencer>(_1c4a210cc_referencer{._field_ident=(*(*((*(_235236_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_235236_s))))._field_Decl, &__jule_any_type65), ._field_refs=nullptr}), ._field_refers=(*((*(_235236_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_235236_s))))._field_Generics.len() > 0LL)) {
		_23537_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>::alloc(0LL, (*((*(_235236_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_235236_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa925b00:;
			if (it != expr_end) {
				jule::I64 _23669_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> _236616_g = *it;
				{
					jule::Ptr<_1c488e984_GenericDecl> _23679_decl = (*(*((*(_235236_s))))._field_Decl.alloc)._field_Generics[_23669_i];;
					{ jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> &__jule_push_dest = _23537_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_23679_decl.alloc)._field_Token, ._field_Ident=(*(_23679_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_236616_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1aa925b00:;
				++it;
				_23669_i++;
				goto _iter_begin_1aa925b00;
			}
			_iter_end_1aa925b00:;
		};
	};
	jule::Ptr<_1c49c8bab_SymbolTable> _23767_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1c49509e0_setCurrentFile(_self_, _23767_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_235236_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1c49c8bab_SymbolTable> _23808_file = _1c494be09_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_235236_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_23808_file != nullptr)) {
			_1c49509e0_setCurrentFile(_self_, _23808_file);
		};
	};
	if (((*((*(_235236_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1c49034cb_constraintChecker> _23878_cc = _1c4956683_constraintChecker(_self_);;
		(*(_23878_cc))._field_et=_235255_errorToken;
		(*_23878_cc.alloc)._field_si=(*(_235236_s));
		(*_23878_cc.alloc)._field_genericsA=_23537_tc._field_useGenerics;
		(*_23878_cc.alloc)._field_uniq=true;
		if ((!(_1c4904444_check(_23878_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_235236_s))))._field_Statics.len() > 0LL)) {
		jule::I64 _24008_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_23537_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_235236_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa92e411:;
			if (it != expr_end) {
				jule::Ptr<_1c49715b0_Var> _240216_v = *it;
				{
					_1c4964482_checkVarDecl(_self_, &(_240216_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
					_1c496808a_checkVar(_self_, &(_240216_v), jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _24008_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1aa92e411:;
				++it;
				goto _iter_begin_1aa92e411;
			}
			_iter_end_1aa92e411:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_23537_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1c49d0c4b_eval> _24137_eval = _1c49583aa_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
	(*((*(_235236_s))))._field_Comparable=(!((*(*((*(_235236_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_235236_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa933129:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> _241515_f = *it;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _24168_kind = _1c4a2979a_checkDecl(&_23537_tc, &((*((*((*(_241515_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_24168_kind != nullptr) && __jule_func_result);
				if ((_24168_kind == nullptr)) {
					if (((_self_ != (*(*((*(_235236_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_235236_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_235236_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_235236_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1aa933129;
				};
				(*_241515_f.alloc)._field_Kind=_24168_kind;
				(*((*(_235236_s))))._field_Mutable=((*((*(_235236_s))))._field_Mutable || ((!((*(*(_241515_f))._field_Decl.alloc)._field_Mutable)) && _1c4a11ac3_Mutable((*(_241515_f))._field_Kind)));
				(*((*(_235236_s))))._field_Comparable=((*((*(_235236_s))))._field_Comparable && _1c4a1183c_Comparable((*(_241515_f))._field_Kind));
				if (((*(*(_241515_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1aa933129;
				};
				(*(_24137_eval))._field_prefix=(*_241515_f.alloc)._field_Kind;
				(*_24137_eval.alloc)._field_field=_241515_f;
				(*_241515_f.alloc)._field_Default=_1c49edede_evalExpr(_24137_eval, (*(*(_241515_f))._field_Decl.alloc)._field_Default);
				if (((*_241515_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1aa933129;
				};
				;
				_1c495891b_checkAssignType(_self_, false, &((*_241515_f.alloc)._field_Kind), &((*_241515_f.alloc)._field_Default), (*((*(*(_241515_f))._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1aa933129:;
			++it;
			goto _iter_begin_1aa933129;
		}
		_iter_end_1aa933129:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4969b91_precheckStructIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _244939_s, jule::Ptr<_1c486c19d_Token> _244958_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1c4969795_checkStructEnv(_self_, _244939_s, _244958_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_244939_s))))._field_Comparable && ((*((*(_244939_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1c48b8738_Fn> _24608_decl = _1dc55071a_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8));;
		{
			auto expr = &((*((*(_244939_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa93d3a9:;
			if (it != expr_end) {
				jule::Ptr<_1c48a5857_FieldIns> _246116_field = *it;
				{
					jule::Ptr<_1c4a1e608_Arr> _24629_arr = _1c4a13663_Arr((*(_246116_field))._field_Kind.ptr());;
					if ((_24629_arr == nullptr)) {
						goto _iter_next_1aa93d3a9;
					};
					jule::Ptr<_1c48bb719_FnIns> _24669_f = _1c48b9c45_instanceForce(_24608_decl);;
					(*(_24669_f))._field_Generics=jule::append((*_24669_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4a0d828_InsGeneric>(_1c4a0d828_InsGeneric{._field_Kind=(*(_24629_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4968a80_checkGenericFn(_self_, &(_24669_f), &((*((*_246116_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/sema.jule:2470:6"));;
					};
				}
				_iter_next_1aa93d3a9:;
				++it;
				goto _iter_begin_1aa93d3a9;
			}
			_iter_end_1aa93d3a9:;
		};
	};
	{
		auto expr = &((*((*(_244939_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa94249b:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _247515_f = *it;
			{
				if (((*(_247515_f))._field_Generics.len() == 0LL)) {
					if ((_1c4968684_readyToCheckFn(_self_, _244939_s, &(_247515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1aa94249b:;
			++it;
			goto _iter_begin_1aa94249b;
		}
		_iter_end_1aa94249b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4969e49_checkStructIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns>* _248536_s) {
	{
		auto expr = &((*((*(_248536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa943cd8:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _248615_f = *it;
			{
				_1c4968de3_checkTypeMethod(_self_, _248536_s, &(_248615_f));
			}
			_iter_next_1aa943cd8:;
			++it;
			goto _iter_begin_1aa943cd8;
		}
		_iter_end_1aa943cd8:;
	};
}



inline void _1c496a202_checkTypeStruct(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _249137_s) {
	if ((*((*(_249137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_249137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_249137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9457ac:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _250415_ins = *it;
			{
				_1c4969e49_checkStructIns(_self_, &(_250415_ins));
			}
			_iter_next_1aa9457ac:;
			++it;
			goto _iter_begin_1aa9457ac;
		}
		_iter_end_1aa9457ac:;
	};
}



inline void _1c496a400_checkStructTypes(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa946747:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _251015_s = *it;
			{
				_1c496a202_checkTypeStruct(_self_, &(_251015_s));
			}
			_iter_next_1aa946747:;
			++it;
			goto _iter_begin_1aa946747;
		}
		_iter_end_1aa946747:;
	};
}



inline void _1c496a6a8_checkStructInsOperators(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a6407_StructIns> _251544_s) {
	{
		auto expr = &((*(_251544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa9476c1:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _251615_m = *it;
			{
				{
					auto &_match_expr{ (*(_251615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1aa947d42:;
						{
							(*(_251544_s))._field_Operators._field_Eq=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49735b2_Eq);
							(*_251544_s.alloc)._field_Comparable=((*_251544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1aa94842a:;
						{
							(*(_251544_s))._field_Operators._field_Gt=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c497387b_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1aa948491:;
						{
							(*(_251544_s))._field_Operators._field_GtEq=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4973b45_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1aa948507:;
						{
							(*(_251544_s))._field_Operators._field_Lt=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4973e0e_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1aa94856d:;
						{
							(*(_251544_s))._field_Operators._field_LtEq=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49741c8_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1aa9485e5:;
						{
							(*(_251544_s))._field_Operators._field_Shl=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4974816_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1aa94866c:;
						{
							(*(_251544_s))._field_Operators._field_Shr=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4974ad0_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1aa9486e4:;
						{
							(*(_251544_s))._field_Operators._field_Add=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4974d99_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1aa94876b:;
						{
							(*(_251544_s))._field_Operators._field_Sub=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4975163_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1aa9487e3:;
						{
							(*(_251544_s))._field_Operators._field_Div=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c497542c_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1aa94886a:;
						{
							(*(_251544_s))._field_Operators._field_Mul=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49756e6_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1aa9488e2:;
						{
							(*(_251544_s))._field_Operators._field_Mod=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49759b0_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1aa948969:;
						{
							(*(_251544_s))._field_Operators._field_BitAnd=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4975c79_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1aa9489e1:;
						{
							(*(_251544_s))._field_Operators._field_BitOr=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4976043_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1aa948a68:;
						{
							(*(_251544_s))._field_Operators._field_BitXor=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c497630c_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1aa948ae0:;
						{
							(*(_251544_s))._field_Operators._field_Neg=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c497694a_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1aa948b67:;
						{
							(*(_251544_s))._field_Operators._field_Pos=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4976c14_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1aa948bde:;
						{
							(*(_251544_s))._field_Operators._field_BitNot=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4976ecd_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1aa948c66:;
						{
							(*(_251544_s))._field_Operators._field_AddAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c497761b_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1aa948cdd:;
						{
							(*(_251544_s))._field_Operators._field_SubAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49778d5_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1aa948d65:;
						{
							(*(_251544_s))._field_Operators._field_DivAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4977b9e_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1aa948ddc:;
						{
							(*(_251544_s))._field_Operators._field_MulAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4977e68_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1aa948e64:;
						{
							(*(_251544_s))._field_Operators._field_ModAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4978232_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1aa948edb:;
						{
							(*(_251544_s))._field_Operators._field_ShlAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49784eb_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1aa949063:;
						{
							(*(_251544_s))._field_Operators._field_ShrAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c49787b5_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1aa9490da:;
						{
							(*(_251544_s))._field_Operators._field_BitOrAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4978a7e_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1aa949162:;
						{
							(*(_251544_s))._field_Operators._field_BitAndAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4978d48_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1aa9491d9:;
						{
							(*(_251544_s))._field_Operators._field_BitXorAssign=_1c4969399_checkStructInsOp(_self_, &(_251544_s), &(_251615_m), static__1c4979112_BitXorAssign);
						}
					}
					_match_end_1aa94811c:;
				};
			}
			_iter_next_1aa9476c1:;
			++it;
			goto _iter_begin_1aa9476c1;
		}
		_iter_end_1aa9476c1:;
	};
}



inline void _1c496a961_precheckStructType(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48a3679_Struct>* _257940_s) {
	if ((*((*(_257940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_257940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_257940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c48a6407_StructIns> _25908_ins = _1c48a3b1e_instance((*(_257940_s)));;
		(*(_25908_ins))._field_Checked=true;
		_1c48a3e2c_appendInstance((*(_257940_s)).ptr(), &(_25908_ins));
		_1c4969b91_precheckStructIns(_self_, &(_25908_ins), nullptr);
	};
	_1c496a6a8_checkStructInsOperators(_self_, (*((*(_257940_s))))._field_Instances[0LL]);
}



inline void _1c496ab5e_precheckStructTypes(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab99293a:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _260015_s = *it;
			{
				_1c496a961_precheckStructType(_self_, &(_260015_s));
			}
			_iter_next_1ab99293a:;
			++it;
			goto _iter_begin_1ab99293a;
		}
		_iter_end_1ab99293a:;
	};
}



inline void _1c496ae17_checkRets(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _260530_f) {
	if (_1c48b8bde_IsVoid((*((*(_260530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1c496d359_missingRetChecker _26093_mrc = static__1c496d755_new();;
	jule::Bool _26103_ok = _1c496e932_check(&_26093_mrc, (*((*(_260530_f))))._field_Scope);;
	if ((!(_26103_ok))) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_260530_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1c496b27a_checkFnInsSc(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _261633_f, jule::Ptr<_1c4913244_scopeChecker>* _261649_sc) {
	_1c494b4ad_appendRetVars(&((*((*((*(_261649_sc))))._field_table))._field_Vars), _261633_f);
	_1c494b799_appendParamVars(&((*(*((*(_261649_sc))))._field_table.alloc)._field_Vars), _261633_f);
	_1c494ba85_appendGenericTypeAliases(&((*(*((*(_261649_sc))))._field_table.alloc)._field_TypeAliases), _261633_f);
	_1c492507a_check((*(_261649_sc)), &((*((*((*(_261633_f))))._field_Decl))._field_Scope), &((*((*(_261633_f))))._field_Scope));
	if ((!(_1c4915d4b_stopped((*(_261649_sc)).ptr())))) {
		_1c496ae17_checkRets(_self_, _261633_f);
	};
}



inline void _1c496b5dd_checkFnInsCaller(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _262938_f, jule::Ptr<_1c486c19d_Token> _262953_caller) {
	if ((*((*((*(_262938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1c49c8bab_SymbolTable> _26347_old = (*((*(*((*(_262938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1c49509e0_setCurrentFile((*((*((*(_262938_f))))._field_Decl))._field_sema, _26347_old);
	});;
	jule::Ptr<_1c49c8bab_SymbolTable> _26367_file = _1c494be09_findFile(&((*(*((*((*(_262938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_262938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_26367_file != nullptr)) {
		_1c49509e0_setCurrentFile((*((*((*(_262938_f))))._field_Decl))._field_sema, _26367_file);
	};
	jule::Ptr<_1c4913244_scopeChecker> _26417_sc = _1c4907e2b_newScopeChecker(&((*(*((*(_262938_f))))._field_Decl.alloc)._field_sema), (*(_262938_f)));;
	(*(_26417_sc))._field_calledFrom=_262953_caller;
	_1c496b27a_checkFnInsSc(_self_.ptr(), _262938_f, &(_26417_sc));
	if (((*(*((*(_262938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_262938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_262938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1c496b896_checkFnIns(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48bb719_FnIns>* _265132_f) {
	_1c496b5dd_checkFnInsCaller(_self_, _265132_f, nullptr);
}



inline void _1c496bb4e_checkFunc(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _265531_f) {
	if ((*((*(_265531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_265531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_265531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9a0d88:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _266515_ins = *it;
			{
				_1c496b896_checkFnIns(_self_, &(_266515_ins));
			}
			_iter_next_1ab9a0d88:;
			++it;
			goto _iter_begin_1ab9a0d88;
		}
		_iter_end_1ab9a0d88:;
	};
}



inline void _1c496be07_checkTestFn(_1c494d290_sema* _self_, jule::Ptr<_1c48bb719_FnIns>* _267032_f) {
	if ((*((*((*(_267032_f))))._field_Decl))._field_Public) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_267032_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_267032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1c48b8bde_IsVoid((*((*(_267032_f))))._field_Decl)))) || ((*(*((*(_267032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_267032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_267032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_267032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_267032_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a1b814_Sptr> _26887_sptr = _1c4a12b29_Sptr((*((*((*(_267032_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_26887_sptr == nullptr)) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_267032_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _26953_s = _1c4a13e16_Struct((*(_26887_sptr))._field_Elem.ptr());;
	if (((_26953_s == nullptr) || (!(_1c4933220_isStdPackage(&((*((*((*((*(_26953_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1c4950e0d_pushErr(_self_, (*(*((*(_267032_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1c4951271_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c496c1b0_precheckFunc(jule::Ptr<_1c494d290_sema> _self_, jule::Ptr<_1c48b8738_Fn>* _270334_f) {
	if ((*((*(_270334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_270334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_270334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1c48bb719_FnIns> _27148_ins = _1c48b9c45_instanceForce((*(_270334_f)));;
		{ jule::Slice<jule::Ptr<_1c48bb719_FnIns>> &__jule_push_dest = (*((*(_270334_f))))._field_Instances; __jule_push_dest.push(_27148_ins); };
		jule::Bool _27164_ok = _1c495bd92_reloadFnInsTypes(_self_, _27148_ins);;
		(*(_27148_ins))._field_reloaded=true;
		if ((_27164_ok && _1c4a2ad2e_hasDirective(&((*((*(_270334_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1c496be07_checkTestFn(_self_, &(_27148_ins));
		};
	};
}



inline void _1c496c3ad_precheckFuncs(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9ade51:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _272715_decl = *it;
			{
				{
					auto expr = &((*(_272715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab9ae89c:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _272816_m = *it;
						{
							_1c496c1b0_precheckFunc(_self_, &(_272816_m));
						}
						_iter_next_1ab9ae89c:;
						++it;
						goto _iter_begin_1ab9ae89c;
					}
					_iter_end_1ab9ae89c:;
				};
			}
			_iter_next_1ab9ade51:;
			++it;
			goto _iter_begin_1ab9ade51;
		}
		_iter_end_1ab9ade51:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9aec21:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _273215_decl = *it;
			{
				_1c496c1b0_precheckFunc(_self_, &(_273215_decl));
			}
			_iter_next_1ab9aec21:;
			++it;
			goto _iter_begin_1ab9aec21;
		}
		_iter_end_1ab9aec21:;
	};
}



inline void _1c496c5ab_checkFuncs(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab370c64:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _273915_decl = *it;
			{
				_1c496bb4e_checkFunc(_self_, &(_273915_decl));
			}
			_iter_next_1ab370c64:;
			++it;
			goto _iter_begin_1ab370c64;
		}
		_iter_end_1ab370c64:;
	};
}



inline void _1c496c7a9_checkPackageTypes(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b16a1:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _274715_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _274715_f);
				_1c4968288_checkGlobals(_self_);
				_1c496c3ad_precheckFuncs(_self_);
				_1c496ab5e_precheckStructTypes(_self_);
			}
			_iter_next_1ab9b16a1:;
			++it;
			goto _iter_begin_1ab9b16a1;
		}
		_iter_end_1ab9b16a1:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b320d:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _275815_f = *it;
			{
				_1c49509e0_setCurrentFile(_self_, _275815_f);
				_1c496c5ab_checkFuncs(_self_);
				_1c496a400_checkStructTypes(_self_);
			}
			_iter_next_1ab9b320d:;
			++it;
			goto _iter_begin_1ab9b320d;
		}
		_iter_end_1ab9b320d:;
	};
}



inline void _1c496c9a7_setFileSemaFields(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b47c5:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _276615_f = *it;
			{
				(*(_276615_f))._field_sema=_self_;
			}
			_iter_next_1ab9b47c5:;
			++it;
			goto _iter_begin_1ab9b47c5;
		}
		_iter_end_1ab9b47c5:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b5430:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _276915_st = *it;
			{
				(*(_276915_st))._field_sema=_self_;
			}
			_iter_next_1ab9b5430:;
			++it;
			goto _iter_begin_1ab9b5430;
		}
		_iter_end_1ab9b5430:;
	};
}



inline void _1c496cba5_setSemaFields(jule::Ptr<_1c494d290_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9b60e0:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _277515_file = *it;
			{
				_1c49509e0_setCurrentFile(_self_.ptr(), _277515_file);
				_1c496c9a7_setFileSemaFields(_self_);
			}
			_iter_next_1ab9b60e0:;
			++it;
			goto _iter_begin_1ab9b60e0;
		}
		_iter_end_1ab9b60e0:;
	};
}



inline void _1c496ce5d_check(jule::Ptr<_1c494d290_sema> _self_, jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _278127_files) {
	(*(_self_))._field_files=(*(_278127_files));
	_1c495487e_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c496cba5_setSemaFields(_self_);
	_1c4955374_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4954c7a_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4954e78_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c4967298_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1c496c7a9_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c494d290_sema _Src) {
	_Stream << "sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1c496d359_missingRetChecker static__1c496d755_new(void) {
	return _1c496d359_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1c496da63_checkConditional(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490b8be_Conditional> _282932_c) {
	{
		auto expr = &((*(_282932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab2cdbc2:;
		if (it != expr_end) {
			jule::Ptr<_1c490b1a4_If> _283015_elif = *it;
			{
				if ((_283015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1c496e5e1_checkScope(_self_, (*(_283015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1ab2cdbc2:;
			++it;
			goto _iter_begin_1ab2cdbc2;
		}
		_iter_end_1ab2cdbc2:;
	};
	return (((*_282932_c.alloc)._field_Default != nullptr) && _1c496e5e1_checkScope(_self_, (*(*(_282932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c496dda4_checkMatch(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ee99_Match> _284126_m) {
	{
		auto expr = &((*(_284126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab396240:;
		if (it != expr_end) {
			jule::Ptr<_1c49109c2_Case> _284215_c = *it;
			{
				if ((_284215_c == nullptr)) {
					return false;;
				};
				jule::I64 _28464_n = (*(_self_))._field_breaked.len();;
				jule::Bool _28474_ok = _1c496e5e1_checkScope(_self_, (*(_284215_c))._field_Scope);;
				{
					
					if ((_28464_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1ab397bc0:;
						{
							return false;;
						}
					}
					else if ((!(_28474_ok))) {
						_case_begin_1ab397c69:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1ab397cd0;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1ab397cd0:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_284215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1ab396240;
						}
					}
					_match_end_1ab397b26:;
				};
			}
			_iter_next_1ab396240:;
			++it;
			goto _iter_begin_1ab396240;
		}
		_iter_end_1ab396240:;
	};
	return (((*_284126_m.alloc)._field_Default != nullptr) && _1c496e5e1_checkScope(_self_, (*(*(_284126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1c496e2a0_checkInfIter(_1c496d359_missingRetChecker* _self_, jule::Uintptr _286724_it, jule::Ptr<_1c490ac86_Scope>* _286742_s) {
	jule::I64 _28683_n = (*(_self_))._field_breaked.len();;
	if (_1c496e5e1_checkScope(_self_, (*(_286742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28683_n);;
		return true;;
	};
	if ((_28683_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_28683_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ab39a72d:;
			if (it != expr_end) {
				jule::Uintptr _287411_addr = *it;
				{
					if ((_286724_it == _287411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28683_n);;
						return false;;
					};
				}
				_iter_next_1ab39a72d:;
				++it;
				goto _iter_begin_1ab39a72d;
			}
			_iter_end_1ab39a72d:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28683_n);;
	};
	return true;;
}



inline jule::Bool _1c496e5e1_checkScope(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ac86_Scope> _288526_s) {
	if ((_288526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_288526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab39cba3:;
		if (it != expr_end) {
			jule::Any _288915_st = *it;
			{
				{
					auto &_match_expr{ _288915_st };
					
					if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1ab39d852:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1ab39d632:;
						{
							jule::Uintptr _28955_addr = (*(_288915_st.unsafe_cast_ptr<_1c490d32c_BreakSt>()))._field_It;;
							if ((_28955_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_28955_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1ab39d8c9:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1ab39d951:;
						{
							jule::Ptr<_1c490bbbb_InfIter> _29039_ii = _288915_st.unsafe_cast_ptr<_1c490bbbb_InfIter>();;
							if (_1c496e2a0_checkInfIter(_self_, static_cast<jule::Uintptr>(_29039_ii), &((*(_29039_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1ab39d9c8:;
						{
							jule::Ptr<_1c490c172_WhileIter> _29089_wn = _288915_st.unsafe_cast_ptr<_1c490c172_WhileIter>();;
							if ((_1c490c518_IsWhileNext(_29089_wn.ptr()) && ((*_29089_wn.alloc)._field_Expr == nullptr))) {
								if (_1c496e2a0_checkInfIter(_self_, static_cast<jule::Uintptr>(_29089_wn), &((*_29089_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1ab39da50:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1ab39dac7:;
						{
							if (_1c496e5e1_checkScope(_self_, _288915_st.cast_ptr<_1c490ac86_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1ab39db4e:;
						{
							{
								auto &_match_expr{ (*(_288915_st.cast_ptr<_1c49ce024_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1ab3a49ac:;
									{
										return true;;
									}
								}
								_match_end_1ab3a4946:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ab39dbc6:;
						{
							if (_1c496da63_checkConditional(_self_, _288915_st.cast_ptr<_1c490b8be_Conditional>(&__jule_any_type34))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1ab39dc4d:;
						{
							if (_1c496dda4_checkMatch(_self_, _288915_st.cast_ptr<_1c490ee99_Match>(&__jule_any_type47))) {
								return true;;
							};
						}
					}
					_match_end_1ab39d6a9:;
				};
			}
			_iter_next_1ab39cba3:;
			++it;
			goto _iter_begin_1ab39cba3;
		}
		_iter_end_1ab39cba3:;
	};
	return false;;
}



inline jule::Bool _1c496e932_check(_1c496d359_missingRetChecker* _self_, jule::Ptr<_1c490ac86_Scope> _294021_s) {
	return _1c496e5e1_checkScope(_self_, _294021_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c496d359_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c49719bc_IsInitialized(_1c49715b0_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1c4971c53_IsTypeInferred(_1c49715b0_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1c4971ed9_untypedConstant(_1c49715b0_Var* _self_) {
	return (_1c4971c53_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49715b0_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1c4972baa_Dispose(jule::Ptr<_1c48b8738_Fn> _1020_f) {
	return ((((((((((_1020_f != nullptr) && ((*_1020_f.alloc)._field_Owner != nullptr)) && (*(_1020_f))._field_Ident.equal("Dispose", 7)) && (!((*_1020_f.alloc)._field_Statically))) && (!((*_1020_f.alloc)._field_Unsafety))) && _1c48b8bde_IsVoid(_1020_f)) && ((*_1020_f.alloc)._field_Generics.len() == 0LL)) && ((*_1020_f.alloc)._field_Params.len() == 1LL)) && (*((*(_1020_f))._field_Params[0LL]))._field_Mutable) && (!(_1c48b7649_IsRef((*(_1020_f))._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1c4972e74_Str(jule::Ptr<_1c48b8738_Fn> _2416_f) {
	if (((((((((((_2416_f == nullptr) || ((*(_2416_f))._field_Owner == nullptr)) || (!(*(_2416_f))._field_Ident.equal("Str", 3))) || (*(_2416_f))._field_Statically) || (*(_2416_f))._field_Unsafety) || _1c48b8bde_IsVoid(_2416_f.ptr())) || ((*(_2416_f))._field_Generics.len() != 0LL)) || ((*(_2416_f))._field_Params.len() != 1LL)) || (*((*(_2416_f))._field_Params[0LL]))._field_Mutable) || _1c48b7649_IsRef((*(_2416_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c48bb719_FnIns> _387_ins = (*(_2416_f))._field_Instances[0LL];;
	jule::Ptr<_1c4a17cd8_Prim> _393_prim = _1c4a12893_Prim((*(_387_ins))._field_Result.ptr());;
	if ((_393_prim == nullptr)) {
		return false;;
	};
	return _1c4a1b2a3_IsStr(_393_prim.ptr());;
}



inline jule::Bool static__1c49732e8_logical(jule::Ptr<_1c48b8738_Fn>* _4621_f, jule::Str _4629_ident) {
	if (((((((((((((((*(_4621_f)) == nullptr) || ((*((*(_4621_f))))._field_Ident != _4629_ident)) || ((*((*(_4621_f))))._field_Owner == nullptr)) || ((*((*(_4621_f))))._field_Instances.len() == 0LL)) || (*((*(_4621_f))))._field_Statically) || (*((*(_4621_f))))._field_Unsafety) || _1c48b8bde_IsVoid((*(_4621_f)).ptr())) || ((*((*(_4621_f))))._field_Generics.len() != 0LL)) || ((*((*(_4621_f))))._field_Params.len() != 2LL)) || (*((*((*(_4621_f))))._field_Params[0LL]))._field_Mutable) || _1c48b7649_IsRef((*((*(_4621_f))))._field_Params[0LL].ptr())) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4621_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c48bb719_FnIns> _637_ins = (*((*(_4621_f))))._field_Instances[0LL];;
	jule::Ptr<_1c4a17cd8_Prim> _643_prim = _1c4a12893_Prim((*(_637_ins))._field_Result.ptr());;
	if (((_643_prim == nullptr) || (!(_1c4a1b01c_IsBool(_643_prim.ptr()))))) {
		return false;;
	};
	return ((*_637_ins.alloc)._field_Owner == _1c4a13e16_Struct((*((*_637_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1c49735b2_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _7215_f) {
	return static__1c49732e8_logical(&(_7215_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1c497387b_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _7715_f) {
	return static__1c49732e8_logical(&(_7715_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1c4973b45_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _8217_f) {
	return static__1c49732e8_logical(&(_8217_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1c4973e0e_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _8715_f) {
	return static__1c49732e8_logical(&(_8715_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1c49741c8_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _9217_f) {
	return static__1c49732e8_logical(&(_9217_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1c497454c_result(jule::Ptr<_1c48b8738_Fn>* _9620_f, jule::Str _9628_ident) {
	if (((((((((((((((*(_9620_f)) == nullptr) || ((*((*(_9620_f))))._field_Ident != _9628_ident)) || ((*((*(_9620_f))))._field_Owner == nullptr)) || ((*((*(_9620_f))))._field_Instances.len() == 0LL)) || (*((*(_9620_f))))._field_Statically) || (*((*(_9620_f))))._field_Unsafety) || _1c48b8bde_IsVoid((*(_9620_f)).ptr())) || ((*((*(_9620_f))))._field_Generics.len() != 0LL)) || ((*((*(_9620_f))))._field_Params.len() != 2LL)) || (*((*((*(_9620_f))))._field_Params[0LL]))._field_Mutable) || _1c48b7649_IsRef((*((*(_9620_f))))._field_Params[0LL].ptr())) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9620_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1c48bb719_FnIns> _1137_ins = (*((*(_9620_f))))._field_Instances[0LL];;
	return (_1c4a13e16_Struct((*(_1137_ins))._field_Result.ptr()) == (*_1137_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c4974816_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _11816_f) {
	return static__1c497454c_result(&(_11816_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1c4974ad0_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _12316_f) {
	return static__1c497454c_result(&(_12316_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1c4974d99_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _12816_f) {
	return static__1c497454c_result(&(_12816_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1c4975163_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _13316_f) {
	return static__1c497454c_result(&(_13316_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1c497542c_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _13816_f) {
	return static__1c497454c_result(&(_13816_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1c49756e6_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _14316_f) {
	return static__1c497454c_result(&(_14316_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1c49759b0_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _14816_f) {
	return static__1c497454c_result(&(_14816_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1c4975c79_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _15319_f) {
	return static__1c497454c_result(&(_15319_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1c4976043_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _15818_f) {
	return static__1c497454c_result(&(_15818_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1c497630c_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _16319_f) {
	return static__1c497454c_result(&(_16319_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1c4976681_unary(jule::Ptr<_1c48b8738_Fn>* _16719_f, jule::Str _16727_ident) {
	if (((((((((((((*(_16719_f)) == nullptr) || ((*((*(_16719_f))))._field_Ident != _16727_ident)) || ((*((*(_16719_f))))._field_Owner == nullptr)) || ((*((*(_16719_f))))._field_Instances.len() == 0LL)) || (*((*(_16719_f))))._field_Statically) || (*((*(_16719_f))))._field_Unsafety) || _1c48b8bde_IsVoid((*(_16719_f)).ptr())) || ((*((*(_16719_f))))._field_Generics.len() != 0LL)) || ((*((*(_16719_f))))._field_Params.len() != 1LL)) || (*((*((*(_16719_f))))._field_Params[0LL]))._field_Mutable) || _1c48b7649_IsRef((*((*(_16719_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1c48bb719_FnIns> _1827_ins = (*((*(_16719_f))))._field_Instances[0LL];;
	return (_1c4a13e16_Struct((*(_1827_ins))._field_Result.ptr()) == (*_1827_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1c497694a_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _18716_f) {
	return static__1c4976681_unary(&(_18716_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1c4976c14_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _19216_f) {
	return static__1c4976681_unary(&(_19216_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1c4976ecd_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _19719_f) {
	return static__1c4976681_unary(&(_19719_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1c4977352_assign(jule::Ptr<_1c48b8738_Fn>* _20120_f, jule::Str _20128_ident) {
	if (((((((((((((((*(_20120_f)) == nullptr) || ((*((*(_20120_f))))._field_Ident != _20128_ident)) || ((*((*(_20120_f))))._field_Owner == nullptr)) || ((*((*(_20120_f))))._field_Instances.len() == 0LL)) || (*((*(_20120_f))))._field_Statically) || (*((*(_20120_f))))._field_Unsafety) || (!(_1c48b8bde_IsVoid((*(_20120_f)).ptr())))) || ((*((*(_20120_f))))._field_Generics.len() != 0LL)) || ((*((*(_20120_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20120_f))))._field_Params[0LL]))._field_Mutable))) || _1c48b7649_IsRef((*((*(_20120_f))))._field_Params[0LL].ptr())) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20120_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1c497761b_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _22122_f) {
	return static__1c4977352_assign(&(_22122_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1c49778d5_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _22622_f) {
	return static__1c4977352_assign(&(_22622_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1c4977b9e_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _23122_f) {
	return static__1c4977352_assign(&(_23122_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1c4977e68_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _23622_f) {
	return static__1c4977352_assign(&(_23622_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1c4978232_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _24122_f) {
	return static__1c4977352_assign(&(_24122_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1c49784eb_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _24622_f) {
	return static__1c4977352_assign(&(_24622_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1c49787b5_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _25122_f) {
	return static__1c4977352_assign(&(_25122_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1c4978a7e_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _25624_f) {
	return static__1c4977352_assign(&(_25624_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1c4978d48_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _26125_f) {
	return static__1c4977352_assign(&(_26125_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1c4979112_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn> _26625_f) {
	return static__1c4977352_assign(&(_26625_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4972649_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49b0d80_typeCompatibilityChecker_eq(_1c49b0d80_typeCompatibilityChecker *_self_, _1c49b0d80_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1c49b13ad_pushErr(_1c49b0d80_typeCompatibilityChecker* _self_, jule::Str _11923_fmt, jule::Slice<jule::Any> _11936_args) {
	_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11923_fmt, _11936_args);
}



inline jule::Bool _1c49b1644_checkTrait(_1c49b0d80_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4a11320_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c48cc1b9_Trait> _1277_trt = _1c4a1419c_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1287_ref = false;;
	{
		
		if ((_1c4a12b29_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab3e61d5:;
			{
				_1287_ref=true;
				(*(_self_))._field_src=(*(_1c4a12b29_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1c4a13e16_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1ab3e627e;
			}
		}
		else if ((_1c4a13e16_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab3e627e:;
			{
				jule::Ptr<_1c48a6407_StructIns> _1384_s = _1c4a13e16_Struct((*(_self_))._field_src);;
				if ((!(_1c48a4ceb_IsImplements((*(_1384_s))._field_Decl.ptr(), _1277_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1287_ref)) && _1c49ae950_traitHasReferenceReceiver(&(_1277_trt)))) {
					_1c49b13ad_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a1419c_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1ab3e6306:;
			{
				jule::Ptr<_1c48cc1b9_Trait> _1488_base = _1c4a1419c_Trait((*(_self_))._field_src);;
				if ((_1277_trt == _1488_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1ab3eaccd:;
				{
					auto expr = &((*(_1488_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3eb482:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _15311_s1 = *it;
						{
							{
								auto expr = &((*(_1277_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab3ebd67:;
								if (it != expr_end) {
									jule::Ptr<_1c48a3679_Struct> _15412_s2 = *it;
									{
										if ((_15311_s1 == _15412_s2)) {
											goto _iter_next_1ab3eb482;
										};
									}
									_iter_next_1ab3ebd67:;
									++it;
									goto _iter_begin_1ab3ebd67;
								}
								_iter_end_1ab3ebd67:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1ab3eb482:;
						++it;
						goto _iter_begin_1ab3eb482;
					}
					_iter_end_1ab3eb482:;
				};
				{
					auto expr = &((*_1277_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab3ec230:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _16116_m1 = *it;
						{
							jule::Ptr<_1c48b8738_Fn> _1629_m2 = _1c48ccd9b_FindMethod(_1488_base, (*(_16116_m1))._field_Ident);;
							if ((_1629_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1c48bb719_FnIns> _1665_m1k = _1c495a940_getTraitCheckFnKind((*(_self_))._field_s, &(_16116_m1));;
							jule::Ptr<_1c48bb719_FnIns> _1675_m2k = _1c495a940_getTraitCheckFnKind((*(_self_))._field_s, &(_1629_m2));;
							if ((!(_1c48bc6b5_equalTrait(_1665_m1k, &(_1675_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1ab3ec230:;
						++it;
						goto _iter_begin_1ab3ec230;
					}
					_iter_end_1ab3ec230:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab3e615d:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1ab3e60c5:;
	};
}



inline jule::Bool _1c49b18ca_checkPtr(_1c49b0d80_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4a11320_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a200cb_Ptr> _1827_dest = _1c4a12db0_Ptr((*(_self_))._field_dest.ptr());;
	if (_1c4a20b48_IsUnsafe(_1827_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1c4a1094b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c49b1b61_checkPrim(_1c49b0d80_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1c4a17cd8_Prim> _1914_prim = _1c4a12893_Prim((*(_self_))._field_dest);;
		if (((_1914_prim != nullptr) && _1c4a1b539_IsAny(_1914_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1c4a1094b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1c49b6db9_typeEnum(_1c49b0d80_typeCompatibilityChecker* _self_, jule::Ptr<_1c48d10d0_TypeEnum>* _19925_e, jule::Ptr<_1c4a1020e_TypeKind>* _19944_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19925_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abae2639:;
		if (it != expr_end) {
			jule::Ptr<_1c48d0a08_TypeEnumItem> _20015_item = *it;
			{
				if (_1c4a1094b_Equal((*((*(_20015_item))._field_Kind))._field_Kind, (*(_19944_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1c48d10d0_TypeEnum> _2048_ke = _1c4a133cc_TypeEnum((*((*(_20015_item))._field_Kind))._field_Kind);;
				if ((_2048_ke == nullptr)) {
					goto _iter_next_1abae2639;
				};
				if (_1c49b6db9_typeEnum(_self_, &(_2048_ke), _19944_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1abae2639:;
			++it;
			goto _iter_begin_1abae2639;
		}
		_iter_end_1abae2639:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49b7150_checkTypeEnum(_1c49b0d80_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1c4a1094b_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1c48d10d0_TypeEnum> _2197_e = _1c4a133cc_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1c49b6db9_typeEnum(_self_, &(_2197_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1c49b73d6_check(_1c49b0d80_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1c4a12db0_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1c49b18ca_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1c4a120e0_NilCompatible((*(_self_))._field_dest)) {
		if (_1c4a11320_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1c4a12893_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abae7d8c:;
			{
				__jule_func_result = _1c49b1b61_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abae7e25:;
			{
				__jule_func_result = _1c49b7150_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a1419c_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1abae784d:;
			{
				__jule_func_result = _1c49b1644_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abae7474:;
			{
				__jule_func_result = _1c4a1094b_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1abae6a17:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c49b0d80_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49b798b_assignTypeChecker_eq(_1c49b798b_assignTypeChecker *_self_, _1c49b798b_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1c49b7e53_pushErr(_1c49b798b_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25536_args) {
	_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25536_args);
}



inline jule::Bool _1c49b81d9_checkValidity(_1c49b798b_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1c4a13b80_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abaeaa1b:;
			{
				jule::Ptr<_1c48bb719_FnIns> _2634_f = _1c4a13b80_Fn((*((*(_self_))._field_d))._field_Kind);;
				{
					
					if (_1c48bcbd2_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1abaec369:;
						{
							_1c49b7e53_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1abaec413:;
						{
							_1c49b7e53_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*((*(_2634_f))._field_Decl))._field_Statically)) && _1c48b8e75_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1abaec479:;
						{
							_1c49b7e53_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*((*(_2634_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1abaec4e0:;
						{
							_1c49b7e53_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1c4951271_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1abaec28c:;
				};
			}
		}
		else if ((_1c4a146b9_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abaeaab5:;
			{
				_1c49b7e53_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1abaea994:;
	};
	return _2607_valid;;
}



inline jule::Bool _1c49b8470_checkConst(_1c49b798b_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1c4a12893_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2923_kind = (*(_1c4a12893_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1dc5445bb_IsFloat(_2923_kind)) {
			_case_begin_1abb0346e:;
			{
				if ((!(_1c49aecd5_floatAssignable(&(_2923_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else if (_1dc54427a_IsInt(_2923_kind)) {
			_case_begin_1abb03507:;
			{
				if ((!(_1c49b0896_intAssignable(_2923_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2923_kind;
			}
		}
		else {
			_case_begin_1abb03408:;
			{
				return false;;
			}
		}
		_match_end_1abb032c6:;
	};
	return true;;
}



inline jule::Bool _1c49b8706_checkCompatibility(_1c49b798b_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1abb0573a:;
			{
				return false;;
			}
		}
		else if ((!(_1c49b81d9_checkValidity(_self_)))) {
			_case_begin_1abb057a1:;
			{
				return false;;
			}
		}
		else if (_1c49b8470_checkConst(_self_)) {
			_case_begin_1abb05817:;
			{
				return true;;
			}
		}
		else if ((_1c4a13146_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb0587d:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _3218_dkind = (*(_self_))._field_dest;;
				if ((_1c4a13146_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3218_dkind=(*((*(_1c4a13146_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1c4a17cd8_Prim> _3254_prim = _1c4a12893_Prim((*(_self_))._field_dest);;
				if (((_3254_prim == nullptr) || _1c4a1b539_IsAny(_3254_prim.ptr()))) {
					goto _match_end_1abb04a7a;
				};
				jule::Ptr<_1c4a1020e_TypeKind> _3308_dest = (*(*(_1c4a13146_Enum((*((*(_self_))._field_d))._field_Kind.ptr())))._field_Kind.alloc)._field_Kind;;
				return _1c4959378_checkTypeCompatibility((*(_self_))._field_s, &(_3308_dest), &(_3218_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1abb04a7a:;
	};
	return _1c4959c4c_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1c49b898c_check(_1c49b798b_assignTypeChecker* _self_) {
	jule::Bool _3373_ok = _1c49b8706_checkCompatibility(_self_);;
	if ((_3373_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1c4a2c715_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3373_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49b798b_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abb1eb50_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1abb21349:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1abb2215d:;
						{
							_36012_elem=(*(_1c4a13663_Arr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1abb220a3:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4884a45_ArrTypeDecl>()))._field_Elem;
				return _1c49baa9e_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1abb212d3:;
	};
	return false;;
}

inline jule::Bool _1abb1e501_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1abb24cba:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1abb25947:;
						{
							_36012_elem=(*(_1c4a138e9_Slc((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1abb25a24:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4883ba9_SlcTypeDecl>()))._field_Elem;
				return _1c49baa9e_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1abb24c54:;
	};
	return false;;
}

inline jule::Bool _1abb21679_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1abb2873b:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1abb295d8:;
						{
							_36012_elem=(*(_1c4a12db0_Ptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1abb29495:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c48842a3_PtrTypeDecl>()))._field_Elem;
				return _1c49baa9e_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1abb286c5:;
	};
	return false;;
}

inline jule::Bool _1abb28b37_annotateConstraintElem(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _35746_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1abb2bd8d:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _36012_elem = nullptr;;
				{
					
{
						_case_begin_1abb2ccb2:;
						{
							_36012_elem=(*(_1c4a12b29_Sptr((*(_35746_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1abb2cae7:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4883824_SptrTypeDecl>()))._field_Elem;
				return _1c49baa9e_annotateConstraint(_self_, &(_36012_elem));;
			}
		}
		_match_end_1abb2bd27:;
	};
	return false;;
}



inline jule::Bool _1c49b9c8a_annotateConstraintMap(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _37742_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1abb0cb2c:;
			{
				jule::Ptr<_1c4a1d97b_Map> _3808_m = _1c4a14433_Map((*(_37742_k)).ptr());;
				jule::Ptr<_1c4885293_MapTypeDecl> _3818_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4885293_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3818_m2))._field_Key;
				if ((!(_1c49baa9e_annotateConstraint(_self_, &((*(_3808_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3818_m2.alloc)._field_Val;
				__jule_func_result = _1c49baa9e_annotateConstraint(_self_, &((*_3808_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1abb0cab6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49ba0cb_annotateConstraintTup(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _39242_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1abb10a20:;
			{
				jule::Ptr<_1c4883ea6_TupleTypeDecl> _3958_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4883ea6_TupleTypeDecl>();;
				jule::Ptr<_1c4a1cdcb_Tuple> _3968_tup2 = _1c4a146b9_Tup((*(_39242_k)).ptr());;
				{
					auto expr = &((*(_3968_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb12318:;
					if (it != expr_end) {
						jule::Ptr<_1c4a1020e_TypeKind> _39716_t2 = *it;
						{
							{
								auto expr = &((*(_3958_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abb12c75:;
								if (it != expr_end) {
									jule::Ptr<_1c4882779_TypeDecl> _39817_t = *it;
									{
										(*(_self_))._field_c=_39817_t;
										if (_1c49baa9e_annotateConstraint(_self_, &(_39716_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1abb12c75:;
									++it;
									goto _iter_begin_1abb12c75;
								}
								_iter_end_1abb12c75:;
							};
						}
						_iter_next_1abb12318:;
						++it;
						goto _iter_begin_1abb12318;
					}
					_iter_end_1abb12318:;
				};
			}
		}
		_match_end_1abb109a9:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49ba41c_annotateConstraintFn(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _40941_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1abb1325e:;
			{
				jule::Ptr<_1c4894439_FnDecl> _4128_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1c4894439_FnDecl>();;
				jule::Ptr<_1c48bb719_FnIns> _4138_f = _1c4a13b80_Fn((*(_40941_k)).ptr());;
				{
					auto expr = &((*(_4138_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb1523e:;
					if (it != expr_end) {
						jule::I64 _4149_i = it - expr->begin();
						jule::Ptr<_1c48ba691_ParamIns> _41416_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4128_pf))._field_Params[_4149_i]))._field_Kind;
							if (_1c49baa9e_annotateConstraint(_self_, &((*(_41416_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1abb1523e:;
						++it;
						_4149_i++;
						goto _iter_begin_1abb1523e;
					}
					_iter_end_1abb1523e:;
				};
				if (((*_4128_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4128_pf))._field_Result.alloc)._field_Kind;
					if (_1c49baa9e_annotateConstraint(_self_, &((*_4138_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1abb13209:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49ba75d_annotateConstraintIdent(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _43044_k) {
	jule::Ptr<_1c4882d84_IdentTypeDecl> _4317_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1c4882d84_IdentTypeDecl>(&__jule_any_type75);;
	jule::Ptr<_1c48a6407_StructIns> _4327_s = _1c4a13e16_Struct((*(_43044_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb18bb0:;
		if (it != expr_end) {
			jule::I64 _4337_i = it - expr->begin();
			jule::Ptr<_1c488e984_GenericDecl> _43310_g = *it;
			{
				if (((*(_43310_g))._field_Ident == (*(_4317_ident))._field_Ident)) {
					jule::Ptr<_1c4a0d828_InsGeneric> _4359_fg = (*((*(_self_))._field_f))._field_Generics[_4337_i];;
					if ((_4359_fg != nullptr)) {
						return false;;
					};
					_1c49bae12_pushGeneric(_self_, _43044_k, _4337_i);
					return true;;
				};
				if ((_4327_s == nullptr)) {
					goto _iter_next_1abb18bb0;
				};
				jule::Ptr<_1c4882779_TypeDecl> _4458_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4317_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abb1b740:;
					if (it != expr_end) {
						jule::Ptr<_1c4882779_TypeDecl> _44616_ig = *it;
						{
							(*(_self_))._field_c=_44616_ig;
							{
								auto expr = &((*(_4327_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1abb1c312:;
								if (it != expr_end) {
									jule::Ptr<_1c4a0d828_InsGeneric> _44817_sg = *it;
									{
										if (_1c49baa9e_annotateConstraint(_self_, &((*(_44817_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1abb1c312:;
									++it;
									goto _iter_begin_1abb1c312;
								}
								_iter_end_1abb1c312:;
							};
						}
						_iter_next_1abb1b740:;
						++it;
						goto _iter_begin_1abb1b740;
					}
					_iter_end_1abb1b740:;
				};
				(*(_self_))._field_c=_4458_c;
			}
			_iter_next_1abb18bb0:;
			++it;
			_4337_i++;
			goto _iter_begin_1abb18bb0;
		}
		_iter_end_1abb18bb0:;
	};
	return false;;
}



inline jule::Bool _1c49baa9e_annotateConstraint(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _45939_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1abb1c785:;
			{
				return _1c49ba75d_annotateConstraintIdent(_self_, _45939_k);;
			}
		}
		_match_end_1abb1c71e:;
	};
	{
		
		if ((_1c4a13663_Arr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1d456:;
			{
				return _1abb1eb50_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1c4a138e9_Slc((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1d4bc:;
			{
				return _1abb1e501_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1c4a12db0_Ptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1d533:;
			{
				return _1abb21679_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1c4a12b29_Sptr((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1d599:;
			{
				return _1abb28b37_annotateConstraintElem(_self_, _45939_k);;
			}
		}
		else if ((_1c4a14433_Map((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1d610:;
			{
				return _1c49b9c8a_annotateConstraintMap(_self_, _45939_k);;
			}
		}
		else if ((_1c4a13b80_Fn((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1dbe8:;
			{
				return _1c49ba41c_annotateConstraintFn(_self_, _45939_k);;
			}
		}
		else if ((_1c4a146b9_Tup((*(_45939_k)).ptr()) != nullptr)) {
			_case_begin_1abb1dc5e:;
			{
				return _1c49ba0cb_annotateConstraintTup(_self_, _45939_k);;
			}
		}
		else {
			_case_begin_1abb1d7a8:;
			{
				return false;;
			}
		}
		_match_end_1abb1d753:;
	};
}



inline void _1c49bae12_pushGeneric(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _48432_k, jule::I64 _48446_i) {
	(*((*(_self_))._field_f))._field_Generics[_48446_i]=jule::new_ptr<_1c4a0d828_InsGeneric>(_1c4a0d828_InsGeneric{._field_Kind=(*(_48432_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)});
	jule::Ptr<_1c488e984_GenericDecl> _4867_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48446_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb30de7:;
		if (it != expr_end) {
			jule::Ptr<_1c4a1020e_TypeKind> _48715_ignored = *it;
			{
				if (((*(_4867_gd))._field_Ident == _1c4a1060a_Str(_48715_ignored.ptr()))) {
					(*_48715_ignored.alloc)._field_Kind=(*((*(_48432_k))))._field_Kind;
				};
			}
			_iter_next_1abb30de7:;
			++it;
			goto _iter_begin_1abb30de7;
		}
		_iter_end_1abb30de7:;
	};
	if ((((*_4867_gd.alloc)._field_Constraint == nullptr) || ((*((*_4867_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4867_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1c49baa9e_annotateConstraint(_self_, _48432_k);
}



inline jule::Bool _1c49bb253_annotatePrim(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _49940_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1c49bd277_annotateAny(_self_, _49940_k);
	return __jule_func_result;;
}



inline jule::Bool _1c49bb594_annotateArr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _50339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1e608_Arr> _5047_parr = _1c4a13663_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5047_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a1e608_Arr> _5087_arr = _1c4a13663_Arr((*(_50339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5047_parr))._field_Elem));
	__jule_func_result = _1c49bd5b8_annotateKind(_self_, &((*(_5087_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c49bb8d5_annotateSlc(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _51339_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1c2d7_Slc> _5147_pslc = _1c4a138e9_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5147_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _5187_slc = _1c4a138e9_Slc((*(_51339_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5147_pslc))._field_Elem));
	__jule_func_result = _1c49bd5b8_annotateKind(_self_, &((*(_5187_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c49bbcd1_checkMapKey(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _52338_k, jule::Ptr<_1c4a1020e_TypeKind>* _52358_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1020e_TypeKind>* _5247_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52338_k;
	__jule_func_result=_1c49bd5b8_annotateKind(_self_, _52358_ck);
	(*(_self_))._field_k=_5247_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c49bc122_annotateMap(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _53139_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1d97b_Map> _5327_pmap = _1c4a14433_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5327_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a1d97b_Map> _5367_m = _1c4a14433_Map((*(_53139_k)).ptr());;
	__jule_func_result = (_1c49bbcd1_checkMapKey(_self_, (&((*(_5327_pmap))._field_Key)), &((*(_5367_m))._field_Key)) && _1c49bbcd1_checkMapKey(_self_, (&((*(_5327_pmap))._field_Val)), &((*_5367_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1c49bc463_annotateFn(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _54138_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c48bb719_FnIns> _5427_pf = _1c4a13b80_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5427_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c48bb719_FnIns> _5467_f = _1c4a13b80_Fn((*(_54138_k)).ptr());;
	{
		
		if (((*(_5427_pf))._field_Params.len() != (*(_5467_f))._field_Params.len())) {
			_case_begin_1abb3d597:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1c48b8bde_IsVoid((*(_5427_pf))._field_Decl.ptr()) != _1c48b8bde_IsVoid((*(_5467_f))._field_Decl))) {
			_case_begin_1abb3d630:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abb3d50e:;
	};
	__jule_func_result=true;
	jule::Ptr<_1c4a1020e_TypeKind>* _5557_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5467_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb4049a:;
		if (it != expr_end) {
			jule::I64 _5568_i = it - expr->begin();
			jule::Ptr<_1c48ba691_ParamIns> _55615_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5427_pf))._field_Params[_5568_i]))._field_Kind));
				__jule_func_result=(_1c49bd5b8_annotateKind(_self_, &((*(_55615_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1abb4049a:;
			++it;
			_5568_i++;
			goto _iter_begin_1abb4049a;
		}
		_iter_end_1abb4049a:;
	};
	if ((!(_1c48b8bde_IsVoid((*(_5427_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5427_pf))._field_Result));
		__jule_func_result=(_1c49bd5b8_annotateKind(_self_, &((*_5467_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5557_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c49bc7a4_annotatePtr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _57039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a200cb_Ptr> _5717_pptr = _1c4a12db0_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5717_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a200cb_Ptr> _5757_ptr = _1c4a12db0_Ptr((*(_57039_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5717_pptr))._field_Elem));
	__jule_func_result = _1c49bd5b8_annotateKind(_self_, &((*(_5757_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c49bcae5_annotateSptr(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _58040_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1b814_Sptr> _5817_ssptr = _1c4a12b29_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5817_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4a1b814_Sptr> _5857_sptr = _1c4a12b29_Sptr((*(_58040_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5817_ssptr))._field_Elem));
	__jule_func_result = _1c49bd5b8_annotateKind(_self_, &((*(_5857_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1c49bce36_annotateStruct(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _59042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c48a6407_StructIns> _5917_s = _1c4a13e16_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c48a6407_StructIns> _5957_s2 = _1c4a13e16_Struct((*(_59042_k)).ptr());;
	if (((*(_5917_s))._field_Generics.len() != (*(_5957_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5917_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb4940a:;
		if (it != expr_end) {
			jule::I64 _5998_i = it - expr->begin();
			jule::Ptr<_1c4a0d828_InsGeneric> _59915_g = *it;
			{
				jule::Ptr<_1c4a0d828_InsGeneric> _6008_g2 = (*(_5957_s2))._field_Generics[_5998_i];;
				if (_1c4a1094b_Equal((*(_59915_g))._field_Kind, (*(_6008_g2))._field_Kind)) {
					goto _iter_next_1abb4940a;
				};
				(*(_self_))._field_k=(&((*_59915_g.alloc)._field_Kind));
				if ((!(_1c49bd5b8_annotateKind(_self_, &((*_6008_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb4940a:;
			++it;
			_5998_i++;
			goto _iter_begin_1abb4940a;
		}
		_iter_end_1abb4940a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c49bd277_annotateAny(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _61239_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6133_kind = _1c4a1060a_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb4c991:;
		if (it != expr_end) {
			jule::I64 _6147_i = it - expr->begin();
			jule::Ptr<_1c488e984_GenericDecl> _61410_g = *it;
			{
				if ((_6133_kind != (*(_61410_g))._field_Ident)) {
					goto _iter_next_1abb4c991;
				};
				jule::Ptr<_1c4a0d828_InsGeneric> _6184_t = (*((*(_self_))._field_f))._field_Generics[_6147_i];;
				{
					
					if ((_6184_t == nullptr) || ((*(_6184_t))._field_Kind == nullptr)) {
						_case_begin_1abb4e2bc:;
						{
							_1c49bae12_pushGeneric(_self_, _61239_k, _6147_i);
						}
					}
					else if ((!(_1c4a1094b_Equal((*(_6184_t))._field_Kind, (*(_61239_k)))))) {
						_case_begin_1abb4e355:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1abb4e1ac:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61239_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1abb4c991:;
			++it;
			_6147_i++;
			goto _iter_begin_1abb4c991;
		}
		_iter_end_1abb4c991:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49bd5b8_annotateKind(_1c49b9361_dynamicTypeAnnotation* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _63340_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1c49bd277_annotateAny(_self_, _63340_k)) {
			_case_begin_1abb518b8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a12893_Prim((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb5192e:;
			{
				__jule_func_result = _1c49bb253_annotatePrim(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a13663_Arr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51995:;
			{
				__jule_func_result = _1c49bb594_annotateArr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a138e9_Slc((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51a1c:;
			{
				__jule_func_result = _1c49bb8d5_annotateSlc(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a14433_Map((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51ba4:;
			{
				__jule_func_result = _1c49bc122_annotateMap(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a13b80_Fn((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51c1a:;
			{
				__jule_func_result = _1c49bc463_annotateFn(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a12db0_Ptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51c81:;
			{
				__jule_func_result = _1c49bc7a4_annotatePtr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a12b29_Sptr((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51ce7:;
			{
				__jule_func_result = _1c49bcae5_annotateSptr(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else if ((_1c4a13e16_Struct((*(_63340_k)).ptr()) != nullptr)) {
			_case_begin_1abb51d6e:;
			{
				__jule_func_result = _1c49bce36_annotateStruct(_self_, _63340_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abb51797:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abb51324:;
	};
}



inline jule::Bool _1c49bd84e_annotate(_1c49b9361_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1c49bd5b8_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49b9361_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c49be762_pushErrToken(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c486c19d_Token> _67828_token, jule::Str _67843_fmt, jule::Slice<jule::Any> _67856_args) {
	_1c4950e0d_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67828_token, _67843_fmt, _67856_args);
}



inline void _1c49beac5_pushErr(_1c49be1bd_fnCallArgChecker* _self_, jule::Str _68223_fmt, jule::Slice<jule::Any> _68236_args) {
	_1c49be762_pushErrToken(_self_, (*(_self_))._field_errorToken, _68223_fmt, _68236_args);
}



inline jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _1c49bed5b_getParams(_1c49be1bd_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1c48b73b3_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1c49c019c_checkCounts(_1c49be1bd_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>* _69528_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _6967_n = (*(_69528_params)).len();;
	if (((_6967_n > 0LL) && _1c48b73b3_IsSelf((*((*(_69528_params))[0LL]))._field_Decl.ptr()))) {
		(_6967_n)--;
	};
	jule::I64 _7017_diff = (_6967_n - (*(_self_))._field_args.len());;
	jule::Str _7027_log = jule::Str();;
	{
		
		if ((_7017_diff == 0LL)) {
			_case_begin_1abb5d70a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6967_n > 0LL) && (*(*((*(_69528_params))[(_6967_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1abb5d62d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_7017_diff < 0LL) || (_7017_diff > (*(_69528_params)).len()))) {
			_case_begin_1abb5d2dc:;
			{
				_7027_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1abb5d276:;
			{
				_7027_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1abb5d210:;
	};
	_238b51e24_StrBuilder _7137_err = static__238b52375_New(32LL);;
	_238b528d6_WriteStr(&_7137_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_238b528d6_WriteStr(&_7137_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69528_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb60ee3:;
		if (it != expr_end) {
			jule::I64 _7167_i = it - expr->begin();
			jule::Ptr<_1c48ba691_ParamIns> *_71610_p = it;
			{
				_238b528d6_WriteStr(&_7137_err, _1c4a1060a_Str((*((*(_71610_p))))._field_Kind.ptr()));
				if ((((*(_69528_params)).len() - _7167_i) > 1LL)) {
					_238b528d6_WriteStr(&_7137_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1abb60ee3:;
			++it;
			_7167_i++;
			goto _iter_begin_1abb60ee3;
		}
		_iter_end_1abb60ee3:;
	};
	_238b52b8e_WriteByte(&_7137_err, ')');
	_1c49beac5_pushErr(_self_, _7027_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_238b531cd_Str(&_7137_err), &__jule_any_type4); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49c0653_checkArg(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _72729_p, jule::Ptr<_1c49ce024_Data>* _72748_arg, jule::Ptr<_1c486c19d_Token>* _72765_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1c48bd9e6_parameterUsesGenerics(_72729_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72729_p))))._field_Decl))._field_Variadic)) && _1c49c7ca9_isGoodValueToInfer(_72748_arg));
		if (__jule_func_result) {
			_1c49b9361_dynamicTypeAnnotation _7329_dta = _1c49b9361_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72729_p)), ._field_a=(*(_72748_arg)), ._field_errorToken=(*(_72765_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1c49bd84e_annotate(&_7329_dta);
		};
		if ((!(__jule_func_result))) {
			_1c49be762_pushErrToken(_self_, (*(_72765_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1c495cca5_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, _72765_errorToken)) {
		__jule_func_result = _1c495891b_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_72729_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72729_p))))._field_Kind), _72748_arg, (*(_72765_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1c49c0a4e_push(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _75625_p, jule::Ptr<_1c4886aad_Expr> _75643_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c4a1020e_TypeKind> _7577_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7583_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75625_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75625_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75625_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1c49ce024_Data> _7667_d = _1c49edede_evalExpr((*(_self_))._field_e, _75643_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7577_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7583_oldImmut;
	if ((_7667_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c49c0653_checkArg(_self_, _75625_p, &(_7667_d), &((*(_75643_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7667_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1c49c0e4a_pushVariadic(_1c49be1bd_fnCallArgChecker* _self_, jule::Ptr<_1c48ba691_ParamIns>* _78033_p, jule::I64 _78051_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7827_variadiced = false;;
	jule::Bool _7833_more = ((_78051_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1c48acc16_SliceExprModel> _7847_model = jule::new_ptr<_1c48acc16_SliceExprModel>(_1c48acc16_SliceExprModel{._field_ElemKind=(*((*(_78033_p))))._field_Kind, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1c4a1020e_TypeKind> _7887_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1c4a1020e_TypeKind> _7957_oldKind = (*((*(_78033_p))))._field_Kind;;
	(*((*(_78033_p))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>((*(*((*(_78033_p))))._field_Kind.alloc));
	(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78033_p))))._field_Kind=_7957_oldKind;
	});;
	for (; (_78051_i < (*(_self_))._field_args.len()); (_78051_i)++) {
		{
			jule::Ptr<_1c4886aad_Expr> _8048_arg = (*(_self_))._field_args[_78051_i];;
			{
				auto &_match_expr{ (*(_8048_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type76) {
					_case_begin_1abb730e3:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1c2d7_Slc>(_1c4a1c2d7_Slc{._field_Elem=(*((*(_78033_p))))._field_Kind}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1abb733e0:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78033_p))))._field_Kind;
					}
				}
				_match_end_1abb7338a:;
			};
			jule::Ptr<_1c49ce024_Data> _8178_d = _1c49ed85c_eval((*(_self_))._field_e, _8048_arg);;
			if ((_8178_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1abb72598;
			};
			if ((*((*(_8178_d))._field_Kind))._field_Variadic) {
				_7827_variadiced=true;
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1c49c0653_checkArg(_self_, _78033_p, &(_8178_d), &((*(_8048_arg))._field_Token)));
				(*(*((*(_78033_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8178_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1abb75656:;
						{
							_7847_model=(*(_8178_d))._field_Model.unsafe_cast_ptr<_1c48acc16_SliceExprModel>();
							(*(_7847_model))._field_ElemKind=(*((*(_78033_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1abb771a2:;
						{
							_7847_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8178_d))._field_Model); };
						}
					}
					_match_end_1abb7714c:;
				};
				(_78051_i)++;
				goto _iter_end_1abb72598;
			};
			__jule_func_result=(__jule_func_result && _1c49c0653_checkArg(_self_, _78033_p, &(_8178_d), &((*_8048_arg.alloc)._field_Token)));
			(*(_7847_model))._field_Elems=jule::append((*_7847_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8178_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1abb72598:;
	}
	_iter_end_1abb72598:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7887_old;
	if ((_7827_variadiced && _7833_more)) {
		_1c49be762_pushErrToken(_self_, (*((*(_self_))._field_args[_78051_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_7847_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7847_model, &__jule_any_type77)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c49c128b_checkArgs(_1c49be1bd_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>* _86130_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8623_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I64 _8667_i = 0LL;;
	if ((((*(_86130_params)).len() > 0LL) && _1c48b73b3_IsSelf((*((*(_86130_params))[0LL]))._field_Decl.ptr()))) {
		(_8667_i)++;
	};
	_julec_label_1abb7c509:;
	while ((_8667_i < (*(_86130_params)).len())) {
		{
			jule::Ptr<_1c48ba691_ParamIns> _8738_p = (*(_86130_params))[_8667_i];;
			{
				
				if ((*(*(_8738_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1abb7e132:;
					{
						__jule_func_result=(_1c49c0e4a_pushVariadic(_self_, &(_8738_p), _8667_i) && __jule_func_result);
						goto _iter_end_1abb7c938;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8667_i)) {
					_case_begin_1abb7e220:;
					{
						__jule_func_result=false;
						goto _iter_end_1abb7c938;
					}
				}
				else {
					_case_begin_1abb7dc7a:;
					{
						__jule_func_result=(_1c49c0a4e_push(_self_, &(_8738_p), (*(_self_))._field_args[_8667_i]) && __jule_func_result);
					}
				}
				_match_end_1abb7dc14:;
			};
			(_8667_i)++;
		}
	_iter_next_1abb7c938:;
	}
	_iter_end_1abb7c938:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8623_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c49c1522_checkDynamicTypeAnnotation(_1c49be1bd_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb813dc:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0d828_InsGeneric> _89310_g = *it;
			{
				if ((_89310_g == nullptr)) {
					_1c49beac5_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1abb813dc:;
			++it;
			goto _iter_begin_1abb813dc;
		}
		_iter_end_1abb813dc:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1c49c17a8_check(_1c49be1bd_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _9037_params = _1c49bed5b_getParams(_self_);;
	__jule_func_result=_1c49c019c_checkCounts(_self_, &(_9037_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1c49c128b_checkArgs(_self_, &(_9037_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1c49c1522_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49be1bd_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1c49c2688_pushErr(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c486c19d_Token> _94123_token, jule::Str _94138_fmt, jule::Slice<jule::Any> _94151_args) {
	_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), _94123_token, _94138_fmt, _94151_args);
}



inline void _1c49c29eb_pushSuggestion(_1c49c2105_structLitChecker* _self_, jule::Str _94630_fmt, jule::Slice<jule::Any> _94643_args) {
	_1c49d1642_pushSuggestion((*(_self_))._field_e.ptr(), _94630_fmt, _94643_args);
}



inline void _1c49c2e19_pushMatch(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c48a5857_FieldIns>* _95030_f, jule::Ptr<_1c49ce024_Data>* _95049_d, jule::Ptr<_1c486c19d_Token>* _95064_errorToken) {
	;
	jule::Bool _9563_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95030_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1c495cca5_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9563_mutable, false, &((*((*(_95030_f))))._field_Kind), _95049_d, _95064_errorToken)) {
		_1c495891b_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_95030_f))))._field_Kind), _95049_d, (*(_95064_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1c48ab264_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1c48ab264_StructArgExprModel>(_1c48ab264_StructArgExprModel{._field_Token=(*(_95064_errorToken)), ._field_Field=(*(_95030_f)), ._field_Expr=(*(_95049_d))})); };
}



inline void _1c49c327c_checkPair(_1c49c2105_structLitChecker* _self_, jule::Ptr<_1c488b2cc_FieldExprPair>* _96930_pair, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _96957_exprs) {
	jule::Ptr<_1c48a5857_FieldIns> _9717_f = _1c48a77e3_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96930_pair))))._field_Field))._field_Kind);;
	if ((_9717_f == nullptr)) {
		_1c49c2688_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((!(_1c495166c_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9717_f))._field_Decl))._field_Public, (*(*(_9717_f))._field_Decl.alloc)._field_Token)))) {
		_1c49c2688_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		_1c49c29eb_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1abb8a5e4:;
	{
		auto expr = _96957_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb8ce87:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _98315_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98315_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1abb8d95a:;
						{
							jule::Ptr<_1c488b2cc_FieldExprPair> _9869_dpair = (*(_98315_expr))._field_Kind.unsafe_cast_ptr<_1c488b2cc_FieldExprPair>();;
							{
								
								if (((*(_96930_pair)) == _9869_dpair)) {
									_case_begin_1abb8e928:;
									{
										goto _iter_end_1abb8ce87;
									}
								}
								else if (((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind == (*(*(_9869_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1abb8e9c2:;
									{
										_1c49c2688_pushErr(_self_, (*((*(_96930_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_96930_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
										goto _iter_end_1abb8ce87;
									}
								}
								_match_end_1abb8e8a1:;
							};
						}
					}
					_match_end_1abb8d8e4:;
				};
			}
			_iter_next_1abb8ce87:;
			++it;
			goto _iter_begin_1abb8ce87;
		}
		_iter_end_1abb8ce87:;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _9977_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9977_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9717_f))._field_Kind;
	jule::Ptr<_1c49ce024_Data> _10017_d = _1c49edede_evalExpr((*(_self_))._field_e, (*((*(_96930_pair))))._field_Expr);;
	if ((_10017_d == nullptr)) {
		return;;
	};
	_1c49c2e19_pushMatch(_self_, &(_9717_f), &(_10017_d), &((*((*(_96930_pair))))._field_Field));
}



inline jule::Bool _1c49c35bd_readyExprs(_1c49c2105_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _100831_exprs) {
	jule::Bool _10097_ok = true;;
	{
		auto expr = _100831_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb93d8e:;
		if (it != expr_end) {
			jule::I64 _10108_i = it - expr->begin();
			jule::Ptr<_1c4886aad_Expr> _101015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1abb94a71:;
						{
							jule::Ptr<_1c488c8d8_KeyValPair> _10139_pair = (*(_101015_expr))._field_Kind.unsafe_cast_ptr<_1c488c8d8_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10139_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type44) {
									_case_begin_1abb958c9:;
									{
										goto _match_end_1abb95d91;
									}
								}
								else {
									_case_begin_1abb95de6:;
									{
										_1c49c2688_pushErr(_self_, (*(_10139_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_10097_ok=false;
										goto _iter_next_1abb93d8e;
									}
								}
								_match_end_1abb95d91:;
							};
							(*((*(_100831_exprs))[_10108_i]))._field_Kind=jule::Any(jule::new_ptr<_1c488b2cc_FieldExprPair>(_1c488b2cc_FieldExprPair{._field_Field=(*((*(_10139_pair))._field_Key))._field_Token, ._field_Expr=(*_10139_pair.alloc)._field_Val}), &__jule_any_type78);
						}
					}
					_match_end_1abb94a0a:;
				};
			}
			_iter_next_1abb93d8e:;
			++it;
			_10108_i++;
			goto _iter_begin_1abb93d8e;
		}
		_iter_end_1abb93d8e:;
	};
	return _10097_ok;;
}



inline void _1c49c3876_check(_1c49c2105_structLitChecker* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _103226_exprs) {
	if (((*(_103226_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1c49c35bd_readyExprs(_self_, _103226_exprs)))) {
		return;;
	};
	jule::Bool _10397_paired = false;;
	{
		auto expr = _103226_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abb981a1:;
		if (it != expr_end) {
			jule::I64 _10408_i = it - expr->begin();
			jule::Ptr<_1c4886aad_Expr> _104015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1abb9e63b:;
						{
							jule::Ptr<_1c488b2cc_FieldExprPair> _10439_pair = (*(_104015_expr))._field_Kind.unsafe_cast_ptr<_1c488b2cc_FieldExprPair>();;
							if (((_10408_i > 0LL) && (!(_10397_paired)))) {
								_1c49c2688_pushErr(_self_, (*(_10439_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_10397_paired=true;
							_1c49c327c_checkPair(_self_, &(_10439_pair), _103226_exprs);
						}
					}
					else {
						_case_begin_1abb99339:;
						{
							if (_10397_paired) {
								_1c49c2688_pushErr(_self_, (*(_104015_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_10408_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1c49c2688_pushErr(_self_, (*_104015_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1abb981a1;
							};
							jule::Ptr<_1c48a5857_FieldIns> _10589_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10408_i];;
							if ((!(_1c495166c_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10589_field))._field_Decl))._field_Public, (*(*(_10589_field))._field_Decl.alloc)._field_Token)))) {
								_1c49c2688_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1c49c29eb_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1c4a1020e_TypeKind> _10669_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10669_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10589_field.alloc)._field_Kind;
							jule::Ptr<_1c49ce024_Data> _10709_d = _1c49edede_evalExpr((*(_self_))._field_e, _104015_expr);;
							if ((_10709_d == nullptr)) {
								goto _iter_next_1abb981a1;
							};
							_1c49c2e19_pushMatch(_self_, &(_10589_field), &(_10709_d), &((*_104015_expr.alloc)._field_Token));
						}
					}
					_match_end_1abb992d4:;
				};
			}
			_iter_next_1abb981a1:;
			++it;
			_10408_i++;
			goto _iter_begin_1abb981a1;
		}
		_iter_end_1abb981a1:;
	};
	if ((!(_10397_paired))) {
		jule::I64 _10814_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I64 _10828_diff = (_10814_n - (*(_103226_exprs)).len());;
		{
			
			if ((_10828_diff <= 0LL)) {
				_case_begin_1abba2496:;
				{
					return;;
				}
			}
			_match_end_1abba2386:;
		};
		_238b51e24_StrBuilder _10888_idents = static__238b52375_New(32LL);;
		for (; (_10828_diff > 0LL); (_10828_diff)--) {
			{
				_238b528d6_WriteStr(&_10888_idents, jule::Str::lit(", ", 2));
				_238b528d6_WriteStr(&_10888_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10814_n - _10828_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1abba2ce3:;
		}
		_iter_end_1abba2ce3:;;
		_1c49c2688_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(_238b53b7e_Buf(&_10888_idents).slice(2LL)), &__jule_any_type4); __jule_collection; }));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c49c2105_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49c3dd7_rangeChecker_eq(_1c49c3dd7_rangeChecker *_self_, _1c49c3dd7_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1c49715b0_Var> _1c49c4404_buildVar(_1c49c3dd7_rangeChecker* _self_, jule::Ptr<_1c48955e4_VarDecl>* _110825_decl) {
	jule::Ptr<_1c49715b0_Var> _11097_v = _1c48c4c1c_buildVar((*(_110825_decl)));;
	return _11097_v;;
}



inline void _1c49c4602_setSizeKey(_1c49c3dd7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1c49c4a20_checkRangeExprValidity(_1c49c3dd7_rangeChecker* _self_, jule::Ptr<_1c49ce024_Data>* _112743_d, jule::Ptr<_1c49715b0_Var>* _112754_key, jule::Ptr<_1c4a1020e_TypeKind>* _112770_k) {
	jule::Bool _11287__mut = (*((*(_112754_key))))._field_Mutable;;
	if ((_11287__mut && (!(_1c4a11ac3_Mutable((*(_112770_k)).ptr()))))) {
		_11287__mut=false;
	};
	_1c495cca5_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11287__mut, (*((*(_112754_key))))._field_Reference, &((*((*((*(_112754_key))))._field_Kind))._field_Kind), _112743_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1c49c4c1d_checkSlice(_1c49c3dd7_rangeChecker* _self_) {
	_1c49c4602_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _11467_slc = _1c4a138e9_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_11467_slc))._field_Elem});
	_1c49c4a20_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11467_slc.alloc)._field_Elem));
}



inline void _1c49c4e1b_checkArray(_1c49c3dd7_rangeChecker* _self_) {
	_1c49c4602_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4a1e608_Arr> _11597_arr = _1c4a13663_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_11597_arr))._field_Elem});
	_1c49c4a20_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11597_arr.alloc)._field_Elem));
}



inline void _1c49c5119_checkMapKeyA(_1c49c3dd7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4a1d97b_Map> _11717_m = _1c4a14433_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_11717_m))._field_Key});
	jule::Ptr<_1c49ce024_Data> _11757_d = jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc));;
	(*_11757_d.alloc)._field_Kind=(*_11717_m.alloc)._field_Key;
	_1c49c4a20_checkRangeExprValidity(_self_, &(_11757_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11717_m.alloc)._field_Key));
}



inline void _1c49c5317_checkMapKeyB(_1c49c3dd7_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1c4a1d97b_Map> _11867_m = _1c4a14433_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_11867_m))._field_Val});
	jule::Ptr<_1c49ce024_Data> _11907_d = jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc));;
	(*_11907_d.alloc)._field_Kind=(*_11867_m.alloc)._field_Val;
	_1c49c4a20_checkRangeExprValidity(_self_, &(_11907_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_m.alloc)._field_Val));
}



inline void _1c49c5515_checkMap(_1c49c3dd7_rangeChecker* _self_) {
	_1c49c5119_checkMapKeyA(_self_);
	_1c49c5317_checkMapKeyB(_self_);
}



inline void _1c49c5713_checkStr(_1c49c3dd7_rangeChecker* _self_) {
	_1c49c4602_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1c486ea85_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1c49c5911_checkComptime(_1c49c3dd7_rangeChecker* _self_) {
	_1c49c4602_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1c486ea85_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1c49c4404_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1c49c5b97_checkComptimeRange(_1c49c3dd7_rangeChecker* _self_) {
	jule::Ptr<_1c48d42c0_comptimeRange> _12257_range = _1c4a15c3c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_12257_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data5)) {
			_case_begin_1abbc50ce:;
			{
				_1c49c5911_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1abbc4122:;
			{
				_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abbc40bc:;
	};
}



inline jule::Bool _1c49c5e2d_check(_1c49c3dd7_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1abbc7268:;
		}
		else if ((_1c4a138e9_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbc5b07:;
			{
				_1c49c4c1d_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1c4a13663_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbc5b6d:;
			{
				_1c49c4e1b_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1c4a14433_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbc6201:;
			{
				_1c49c5515_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1c4a15c3c_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abbc6267:;
			{
				return _1c49c5b97_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1abbc5a6e:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _12574_prim = _1c4a12893_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_12574_prim != nullptr) && _1c4a1b2a3_IsStr(_12574_prim))) {
					_1c49c5713_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1abbc5970:;
	};
	_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49c3dd7_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1c49c6aaa_prepareTypes(_1c49c6648_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1c48bc94b_Types((*(_self_))._field_f);
	};
}



inline void _1c49c6d63_prepareExprs(_1c49c6648_retTypeChecker* _self_, jule::Ptr<_1c4886aad_Expr>* _128533_e) {
	if (((*(_128533_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1abbccb86:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128533_e))))._field_Kind.unsafe_cast_ptr<_1c48876a2_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1abbccceb:;
			{
				{ jule::Slice<jule::Ptr<_1c4886aad_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128533_e))); };
			}
		}
		_match_end_1abbcc889:;
	};
}



inline void _1c49c7061_checkExprs(_1c49c6648_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c49ce024_Data>> _13017_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49ce024_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1c49d0c4b_eval> _13027_eval = _1c49583aa_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbcce61:;
		if (it != expr_end) {
			jule::I64 _13038_i = it - expr->begin();
			jule::Ptr<_1c4886aad_Expr> _130315_expr = *it;
			{
				if ((_13038_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1abbcce61;
				};
				jule::Ptr<_1c4a1020e_TypeKind> _13088_t = (*(_self_))._field_types[_13038_i];;
				(*(_13027_eval))._field_prefix=_13088_t;
				jule::Ptr<_1c49ce024_Data> _13118_d = _1c49edede_evalExpr(_13027_eval, _130315_expr);;
				if ((_13118_d == nullptr)) {
					goto _iter_next_1abbcce61;
				};
				{ jule::Slice<jule::Ptr<_1c49ce024_Data>> &__jule_push_dest = _13017_datas; __jule_push_dest.push(_13118_d); };
				if (((!((*(_13118_d))._field_Mutable)) && _1c4a11ac3_Mutable((*(_13118_d))._field_Kind.ptr()))) {
					_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1c49b798b_assignTypeChecker _13238_ac = _1c49b798b_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13088_t, ._field_d=_13118_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1c49b898c_check(&_13238_ac);
			}
			_iter_next_1abbcce61:;
			++it;
			_13038_i++;
			goto _iter_begin_1abbcce61;
		}
		_iter_end_1abbcce61:;
	};
	if ((_13017_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1c48b1027_TupleExprModel>(_1c48b1027_TupleExprModel{._field_Datas=_13017_datas}), &__jule_any_type81);
	} else if ((_13017_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_13017_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1c49c72e7_tryFuncMultiRetForward(_1c49c6648_retTypeChecker* _self_) {
	jule::Ptr<_1c49d0c4b_eval> _13447_eval = _1c49583aa_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
	jule::Ptr<_1c49ce024_Data> _13457_d = _1c49edede_evalExpr(_13447_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13457_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1c4a1cdcb_Tuple> _13517_tup = _1c4a146b9_Tup((*(_13457_d))._field_Kind.ptr());;
	if ((_13517_tup == nullptr)) {
		return false;;
	};
	if (((*(_13517_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1abbda578;
	};
	(*(_self_))._field_model=(*(_13457_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbd77b7:;
		if (it != expr_end) {
			jule::I64 _13597_i = it - expr->begin();
			{
				if ((!(_1c4958dc2__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &((*(_self_))._field_types[_13597_i]), &((*(_13517_tup))._field_Types[_13597_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1abbda578;
				};
			}
			_iter_next_1abbd77b7:;
			++it;
			_13597_i++;
			goto _iter_begin_1abbd77b7;
		}
		_iter_end_1abbd77b7:;
	};
	return true;;
	_julec_label_1abbda578:;
	_238b51e24_StrBuilder _13667_wanted = static__238b52375_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbdb766:;
		if (it != expr_end) {
			jule::I64 _13677_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _136710_t = *it;
			{
				_238b528d6_WriteStr(&_13667_wanted, _1c4a1060a_Str(_136710_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13677_i) > 1LL)) {
					_238b528d6_WriteStr(&_13667_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1abbdb766:;
			++it;
			_13677_i++;
			goto _iter_begin_1abbdb766;
		}
		_iter_end_1abbdb766:;
	};
	_238b51e24_StrBuilder _13737_given = static__238b52375_New(32LL);;
	{
		auto expr = &((*(_13517_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbdd801:;
		if (it != expr_end) {
			jule::I64 _13747_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _137410_t = *it;
			{
				_238b528d6_WriteStr(&_13737_given, _1c4a1060a_Str(_137410_t.ptr()));
				if ((((*(_self_))._field_types.len() - _13747_i) > 1LL)) {
					_238b528d6_WriteStr(&_13737_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1abbdd801:;
			++it;
			_13747_i++;
			goto _iter_begin_1abbdd801;
		}
		_iter_end_1abbdd801:;
	};
	_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_238b531cd_Str(&_13667_wanted), &__jule_any_type4); (*it++) = jule::Any(_238b531cd_Str(&_13737_given), &__jule_any_type4); __jule_collection; }));
	return false;;
}



inline jule::Bool _1c49c7638_check(_1c49c6648_retTypeChecker* _self_, jule::Ptr<_1c4886aad_Expr>* _138426_e) {
	_1c49c6aaa_prepareTypes(_self_);
	_1c49c6d63_prepareExprs(_self_, _138426_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1abbe1ccc:;
			{
				if ((!(_1c48b99ae_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1c48b8bde_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1abbe1d43:;
			{
				_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1abbe1da9:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1abbe6562:;
						{
							if (_1c49c72e7_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1abbe64b8:;
				};
				_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1abbe1e20:;
			{
				_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1abbe1e86:;
			{
				_1c4950e0d_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abbe1b78:;
	};
	_1c49c7061_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49c6648_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c49c91c8_SelectPackage(_1c49c8bab_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbe9b70:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1abbe9b70:;
			++it;
			goto _iter_begin_1abbe9b70;
		}
		_iter_end_1abbe9b70:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c49c95c4_FindVar(_1c49c8bab_SymbolTable* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1c49cb3a6_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c49c99c0_FindTypeAlias(_1c49c8bab_SymbolTable* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1c49cb85c_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1c48a3679_Struct> _1c49c9dbb_FindStruct(_1c49c8bab_SymbolTable* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbec07e:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1abbec07e:;
			++it;
			goto _iter_begin_1abbec07e;
		}
		_iter_end_1abbec07e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48b8738_Fn> _1c49ca2b7_FindFn(_1c49c8bab_SymbolTable* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbed5be:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1abbed5be:;
			++it;
			goto _iter_begin_1abbed5be;
		}
		_iter_end_1abbed5be:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c49ca608_FindTrait(_1c49c8bab_SymbolTable* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abbee8bc:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1abbee8bc:;
			++it;
			goto _iter_begin_1abbee8bc;
		}
		_iter_end_1abbee8bc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c49ca949_FindEnum(_1c49c8bab_SymbolTable* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc008ac:;
		if (it != expr_end) {
			jule::Ptr<_1c48ce8c5_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1abc008ac:;
			++it;
			goto _iter_begin_1abc008ac;
		}
		_iter_end_1abc008ac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c49cac8a_FindTypeEnum(_1c49c8bab_SymbolTable* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0187a:;
		if (it != expr_end) {
			jule::Ptr<_1c48d10d0_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1abc0187a:;
			++it;
			goto _iter_begin_1abc0187a;
		}
		_iter_end_1abc0187a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c49715b0_Var> _1c49cb3a6_findVar(_1c49c8bab_SymbolTable* _self_, jule::Str* _10824_ident, jule::Bool _10836_binded, jule::Bool _10850_reverse) {
	if (_10850_reverse) {
		jule::I64 _1108_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1108_i >= 0LL); (_1108_i)--) {
			{
				jule::Ptr<_1c49715b0_Var> _1129_v = (*(_self_))._field_Vars[_1108_i];;
				if ((((*(_1129_v))._field_Ident == (*(_10824_ident))) && ((*_1129_v.alloc)._field_Binded == _10836_binded))) {
					return _1129_v;;
				};
			}
		_iter_next_1abc03717:;
		}
		_iter_end_1abc03717:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc037e4:;
			if (it != expr_end) {
				jule::Ptr<_1c49715b0_Var> _11816_v = *it;
				{
					if ((((*(_11816_v))._field_Ident == (*(_10824_ident))) && ((*_11816_v.alloc)._field_Binded == _10836_binded))) {
						return _11816_v;;
					};
				}
				_iter_next_1abc037e4:;
				++it;
				goto _iter_begin_1abc037e4;
			}
			_iter_end_1abc037e4:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c49cb85c_findTypeAlias(_1c49c8bab_SymbolTable* _self_, jule::Str* _12730_ident, jule::Bool _12742_binded, jule::Bool _12756_reverse) {
	if (_12756_reverse) {
		jule::I64 _1298_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1298_i >= 0LL); (_1298_i)--) {
			{
				jule::Ptr<_1c4a0e41c_TypeAlias> _1319_ta = (*(_self_))._field_TypeAliases[_1298_i];;
				if ((((*(_1319_ta))._field_Ident == (*(_12730_ident))) && ((*_1319_ta.alloc)._field_Binded == _12742_binded))) {
					return _1319_ta;;
				};
			}
		_iter_next_1abc06a5b:;
		}
		_iter_end_1abc06a5b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1abc06b38:;
			if (it != expr_end) {
				jule::Ptr<_1c4a0e41c_TypeAlias> _13716_ta = *it;
				{
					if ((((*(_13716_ta))._field_Ident == (*(_12730_ident))) && ((*_13716_ta.alloc)._field_Binded == _12742_binded))) {
						return _13716_ta;;
					};
				}
				_iter_next_1abc06b38:;
				++it;
				goto _iter_begin_1abc06b38;
			}
			_iter_end_1abc06b38:;
		};
	};
	return nullptr;;
}



inline jule::Any _1c49cbc58_defByIdent(_1c49c8bab_SymbolTable* _self_, jule::Str* _14827_ident, jule::Bool _14839_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc09212:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _14915_v = *it;
			{
				if ((((*(_14915_v))._field_Ident == (*(_14827_ident))) && ((*_14915_v.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_14915_v, &__jule_any_type8);;
				};
			}
			_iter_next_1abc09212:;
			++it;
			goto _iter_begin_1abc09212;
		}
		_iter_end_1abc09212:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc09553:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> _15515_ta = *it;
			{
				if ((((*(_15515_ta))._field_Ident == (*(_14827_ident))) && ((*_15515_ta.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_15515_ta, &__jule_any_type66);;
				};
			}
			_iter_next_1abc09553:;
			++it;
			goto _iter_begin_1abc09553;
		}
		_iter_end_1abc09553:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0a4bb:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _16115_s = *it;
			{
				if ((((*(_16115_s))._field_Ident == (*(_14827_ident))) && ((*_16115_s.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16115_s, &__jule_any_type65);;
				};
			}
			_iter_next_1abc0a4bb:;
			++it;
			goto _iter_begin_1abc0a4bb;
		}
		_iter_end_1abc0a4bb:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0b335:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _16715_f = *it;
			{
				if ((((*(_16715_f))._field_Ident == (*(_14827_ident))) && ((*_16715_f.alloc)._field_Binded == _14839_binded))) {
					return jule::Any(_16715_f, &__jule_any_type64);;
				};
			}
			_iter_next_1abc0b335:;
			++it;
			goto _iter_begin_1abc0b335;
		}
		_iter_end_1abc0b335:;
	};
	if (_14839_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0d39d:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _17715_t = *it;
			{
				if (((*(_17715_t))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_17715_t, &__jule_any_type10);;
				};
			}
			_iter_next_1abc0d39d:;
			++it;
			goto _iter_begin_1abc0d39d;
		}
		_iter_end_1abc0d39d:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0da1e:;
		if (it != expr_end) {
			jule::Ptr<_1c48ce8c5_Enum> _18315_e = *it;
			{
				if (((*(_18315_e))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18315_e, &__jule_any_type67);;
				};
			}
			_iter_next_1abc0da1e:;
			++it;
			goto _iter_begin_1abc0da1e;
		}
		_iter_end_1abc0da1e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc0deb4:;
		if (it != expr_end) {
			jule::Ptr<_1c48d10d0_TypeEnum> _18915_te = *it;
			{
				if (((*(_18915_te))._field_Ident == (*(_14827_ident)))) {
					return jule::Any(_18915_te, &__jule_any_type68);;
				};
			}
			_iter_next_1abc0deb4:;
			++it;
			goto _iter_begin_1abc0deb4;
		}
		_iter_end_1abc0deb4:;
	};
	return nullptr;;
}



inline jule::Bool _1c49cc20e_isDuplicatedIdent(_1c49c8bab_SymbolTable* _self_, jule::Uintptr _20129_itself, jule::Str* _20147_ident, jule::Bool _20159_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc10bec:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> *_20210_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20210_v))) != _20129_itself) && ((*((*(_20210_v))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20210_v)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1abc10bec:;
			++it;
			goto _iter_begin_1abc10bec;
		}
		_iter_end_1abc10bec:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1104e:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> *_20810_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20810_ta))) != _20129_itself) && ((*((*(_20810_ta))))._field_Ident == (*(_20147_ident)))) && ((*(*(_20810_ta)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1abc1104e:;
			++it;
			goto _iter_begin_1abc1104e;
		}
		_iter_end_1abc1104e:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1223c:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> *_21410_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21410_s))) != _20129_itself) && ((*((*(_21410_s))))._field_Ident == (*(_20147_ident)))) && ((*(*(_21410_s)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1abc1223c:;
			++it;
			goto _iter_begin_1abc1223c;
		}
		_iter_end_1abc1223c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1332b:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> *_22010_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22010_f))) != _20129_itself) && ((*((*(_22010_f))))._field_Ident == (*(_20147_ident)))) && ((*(*(_22010_f)).alloc)._field_Binded == _20159_binded))) {
					return true;;
				};
			}
			_iter_next_1abc1332b:;
			++it;
			goto _iter_begin_1abc1332b;
		}
		_iter_end_1abc1332b:;
	};
	if (_20159_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1588e:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> *_23010_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23010_t))) != _20129_itself) && ((*((*(_23010_t))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1abc1588e:;
			++it;
			goto _iter_begin_1abc1588e;
		}
		_iter_end_1abc1588e:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc1595a:;
		if (it != expr_end) {
			jule::Ptr<_1c48ce8c5_Enum> *_23610_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23610_e))) != _20129_itself) && ((*((*(_23610_e))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1abc1595a:;
			++it;
			goto _iter_begin_1abc1595a;
		}
		_iter_end_1abc1595a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc16928:;
		if (it != expr_end) {
			jule::Ptr<_1c48d10d0_TypeEnum> *_24210_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24210_te))) != _20129_itself) && ((*((*(_24210_te))))._field_Ident == (*(_20147_ident))))) {
					return true;;
				};
			}
			_iter_next_1abc16928:;
			++it;
			goto _iter_begin_1abc16928;
		}
		_iter_end_1abc16928:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49c8bab_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49ce024_Data_eq(_1c49ce024_Data *_self_, _1c49ce024_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1c49ce442_IsNil(_1c49ce024_Data* _self_) {
	return _1c4a11320_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c49ce6c8_IsVoid(_1c49ce024_Data* _self_) {
	return _1c4a115a6_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1c49ce95e_IsConst(_1c49ce024_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1c49ceca0_GoodOperand(_1c49ce024_Data* _self_, jule::Ptr<_1c49ce024_Data>* _10528_other) {
	if ((_1c4a133cc_TypeEnum((*((*(_10528_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1c4a12893_Prim((*((*(_10528_other))))._field_Kind) == nullptr) || (!(_1c4a1b539_IsAny(_1c4a12893_Prim((*((*(_10528_other))))._field_Kind).ptr())))) && (_1c4a1419c_Trait((*((*(_10528_other))))._field_Kind) == nullptr)) && (!(_1c4a11320_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49ce024_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49d019b_Value_eq(_1c49d019b_Value *_self_, _1c49d019b_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}



std::ostream &operator<<(std::ostream &_Stream, _1c49d019b_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49d0c4b_eval_eq(_1c49d0c4b_eval *_self_, _1c49d0c4b_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_immutable == _self_->_field_immutable) &&
		(_self_->_field_ignored == _self_->_field_ignored) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		(_self_->_field_arg == _self_->_field_arg);
}

inline void _1c49d12ce_pushErr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _13623_token, jule::Str _13638_fmt, jule::Slice<jule::Any> _13651_args) {
	_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), _13623_token, _13638_fmt, _13651_args);
}



inline void _1c49d1642_pushSuggestion(_1c49d0c4b_eval* _self_, jule::Str _14130_fmt, jule::Slice<jule::Any> _14143_args) {
	_1c4951271_pushSuggestion((*(_self_))._field_s.ptr(), _14130_fmt, _14143_args);
}



inline void _1c49d1840_allowBuiltin(_1c49d0c4b_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c49d1a3d_disallowBuiltin(_1c49d0c4b_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1c49d1cc4_isUnsafe(_1c49d0c4b_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1c49d205a_isGlobal(_1c49d0c4b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3)) {
			_case_begin_1aaac1020:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aaac141b:;
			{
				return false;;
			}
		}
		_match_end_1aaac13b6:;
	};
}



inline jule::Bool _1c49d2368_applyNumericPrefix(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _16839_d) {
	if ((((((*(_16839_d)) == nullptr) || (!(_1c49ce95e_IsConst((*(_16839_d)).ptr())))) || (_1c4a12893_Prim((*((*(_16839_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _1753_prim = _1c4a12893_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1753_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1dc5445bb_IsFloat(_1c4a1815c_Str(_1753_prim.ptr()))) {
			_case_begin_1aaac3a5b:;
			{
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc548dea_SetF64((*((*(_16839_d))))._field_Constant.ptr(), _1dc548070_AsF64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1dc543ba3_IsSigInt(_1c4a1815c_Str(_1753_prim.ptr()))) {
			_case_begin_1aaac3ac2:;
			{
				if ((!(_1c49b0159_sigAssignable(_1c4a1815c_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc548328_SetI64((*((*(_16839_d))))._field_Constant.ptr(), _1dc547a53_AsI64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		else if (_1dc543eb1_IsUnsigInt(_1c4a1815c_Str(_1753_prim.ptr()))) {
			_case_begin_1aaac3b38:;
			{
				if ((!(_1c49b0522_unsigAssignable(_1c4a1815c_Str(_1753_prim.ptr()), _16839_d)))) {
					return false;;
				};
				(*((*(_16839_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>((*((*(_self_))._field_prefix)));
				_1dc5485d1_SetU64((*((*(_16839_d))))._field_Constant.ptr(), _1dc547cd9_AsU64((*((*(_16839_d))))._field_Constant));
				(*(*((*(_16839_d))))._field_Constant.alloc)._field_Kind=(*(_1753_prim))._field_Kind;
			}
		}
		_match_end_1aaac397e:;
	};
	return true;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d26a9_litStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _20319_l) {
	jule::Str _2047_s = jule::Str();;
	if (_1c486d589_IsRawStr((*((*(_20319_l))))._field_Value)) {
		_2047_s=_1c49ad3aa_ToRawStr((*((*(_20319_l))))._field_Value);
	} else {
		_2047_s=_1c49ad6eb_ToStr((*((*(_20319_l))))._field_Value);
	};
	jule::Ptr<_1dc54537a_Const> _2107_constant = static__1dc54614a_NewStr(_2047_s);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2107_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_2107_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d29ea_litRune(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _22020_l) {
	jule::I32 _2213_r = _1c49ad19b_ToRune((*((*(_22020_l))))._field_Value);;
	jule::Ptr<_1c49ce024_Data> _2227_data = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_2213_r))});;
	if ((_2213_r <= 255LL)) {
		(*(_2227_data))._field_Kind=_21ddd24dd_primU8;
	} else {
		(*(_2227_data))._field_Kind=_21ddd1e7c_primI32;
	};
	(*(_2227_data))._field_Model=jule::Any(jule::new_ptr<_1c48b4c73_RuneExprModel>(_1c48b4c73_RuneExprModel{._field_Code=_2213_r}), &__jule_any_type83);
	(*_2227_data.alloc)._field_Mutable=true;
	(*_2227_data.alloc)._field_IsRune=true;
	(*_2227_data.alloc)._field_untyped=true;
	return _2227_data;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d2d3b_litFloat(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _23921_l) {
	jule::F64 _2403_f = ({
		auto except = _1dc52bcce_ParseFloat((*((*(_23921_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1dc54537a_Const> _2417_constant = static__1dc546414_NewF64(_2403_f);;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd3489_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2417_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_2417_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d317c_litInt(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _25123_l) {
	;
	jule::Str _2547_lit = (*((*(_25123_l))))._field_Value;;
	jule::I64 _2557_base = 0LL;;
	{
		
		if (_2059e414b_HasPrefix(_2547_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1aaad35e8:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=16LLU;
			}
		}
		else if (_2059e414b_HasPrefix(_2547_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1aaad36d6:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=2LLU;
			}
		}
		else if (_2059e414b_HasPrefix(_2547_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1aaad32b8:;
			{
				(_2547_lit).mut_slice(2LL);;
				_2557_base=8LLU;
			}
		}
		else if (((_2547_lit[0LL] == '0') && (_2547_lit.len() > 1LL))) {
			_case_begin_1aaad332e:;
			{
				(_2547_lit).mut_slice(1LL);;
				_2557_base=8LLU;
			}
		}
		else {
			_case_begin_1aaad3252:;
			{
				_2557_base=10LLU;
			}
		}
		_match_end_1aaad31b9:;
	};
	jule::Ptr<_1c49ce024_Data> _2757_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	jule::Bool _2777_ok = true;;
	jule::I64 _2783_sig = ({
		auto except = _1dc5254ae_ParseInt(_2547_lit, _2557_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2777_ok=false;

			0LL;
		});
	});;
	if (_2777_ok) {
		(*_2757_d.alloc)._field_Constant=static__1dc5457ed_NewI64(_2783_sig);
		(*_2757_d.alloc)._field_Kind=_21ddd16da_primInt;
	} else {
		jule::U64 _2864_unsig = ({
			auto except = _1dc525008_ParseUint(_2547_lit, _2557_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1c49d12ce_pushErr(_self_, (*((*(_25123_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1c49d1642_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2757_d.alloc)._field_Constant=static__1dc545ab7_NewU64(_2864_unsig);
		(*_2757_d.alloc)._field_Kind=_21ddd1322_primUint;
	};
	(*_2757_d.alloc)._field_Model=jule::Any((*_2757_d.alloc)._field_Constant, &__jule_any_type19);
	(*_2757_d.alloc)._field_untyped=true;
	if ((!(_1c49d2368_applyNumericPrefix(_self_, &(_2757_d))))) {
		_1c4a07ca6_fitBitsize(&(_2757_d));
	};
	return _2757_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d34bd_litNum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr>* _30623_l) {
	{
		
		if (_1c486e238_IsFloat((*((*(_30623_l))))._field_Value)) {
			_case_begin_1aaada578:;
			{
				return _1c49d2d3b_litFloat(_self_, _30623_l);;
			}
		}
		else {
			_case_begin_1aaada512:;
			{
				return _1c49d317c_litInt(_self_, _30623_l);;
			}
		}
		_match_end_1aaada413:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49d380e_evalLit(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4887a48_LitExpr> _31523_lit) {
	{
		
		if (_1c486d303_IsStr((*(_31523_lit))._field_Value)) {
			_case_begin_1aaadb6de:;
			{
				return _1c49d26a9_litStr(_self_, &(_31523_lit));;
			}
		}
		else if (_1c486d853_IsRune((*(_31523_lit))._field_Value)) {
			_case_begin_1aaadb788:;
			{
				return _1c49d29ea_litRune(_self_, &(_31523_lit));;
			}
		}
		else if (_1c486e502_IsNum((*(_31523_lit))._field_Value)) {
			_case_begin_1aaadb810:;
			{
				return _1c49d34bd_litNum(_self_, &(_31523_lit));;
			}
		}
		else {
			_case_begin_1aaadb1a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1aaadb0b2:;
	};
}



inline jule::Any _1c49d3b50_findBuiltins(_1c49d0c4b_eval* _self_, jule::Str* _32829_ident) {
	if (_1c494a27b_IsPub((*(_32829_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data1)) {
				_case_begin_1aaadda65:;
				{
					jule::Any _3329_def = _1c4a07a75_findBuiltinsImport(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1c492cd1e_ImportInfo>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data1));;
					if ((_3329_def != nullptr)) {
						return _3329_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3)) {
				_case_begin_1aaadd7bd:;
				{
					jule::Any _3379_def = _1c4a087ce_findBuiltinsSema(_32829_ident, (*(_self_))._field_lookup.cast_ptr<_1c494d290_sema>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));;
					if ((_3379_def != nullptr)) {
						return _3379_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
				_case_begin_1aaaddacb:;
				{
					jule::Any _3429_def = _1c4a087ce_findBuiltinsSema(_32829_ident, (*((*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)))._field_s);;
					if ((_3429_def != nullptr)) {
						return _3429_def;;
					};
				}
			}
			_match_end_1aaadd9bb:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _21ddd3cc5_findBuiltinDef(_32829_ident);;
}



inline jule::Any _1c49d404b_getDef(_1c49d0c4b_eval* _self_, jule::Str* _35523_ident, jule::Bool _35535_binded) {
	jule::Ptr<_1c49715b0_Var> _3607_v = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2d4d5_FindVar((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3607_v != nullptr)) {
		return jule::Any(_3607_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c4a0e41c_TypeAlias> _3657_ta = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2d8d1_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3657_ta != nullptr)) {
		return jule::Any(_3657_ta, &__jule_any_type66);;
	};
	if ((!(_35535_binded))) {
		jule::Ptr<_1c48ce8c5_Enum> _3718_enm = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2e85a_FindEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3718_enm != nullptr)) {
			return jule::Any(_3718_enm, &__jule_any_type67);;
		};
		jule::Ptr<_1c48d10d0_TypeEnum> _3768_tenm = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2eb9b_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35523_ident)));;
		if ((_3768_tenm != nullptr)) {
			return jule::Any(_3768_tenm, &__jule_any_type68);;
		};
	};
	jule::Ptr<_1c48b8738_Fn> _3827_f = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2e1c8_FindFn((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3827_f != nullptr)) {
		return jule::Any(_3827_f, &__jule_any_type64);;
	};
	jule::Ptr<_1c48a3679_Struct> _3877_s = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2dccc_FindStruct((*(_self_))._field_lookup.data, (*(_35523_ident)), _35535_binded);;
	if ((_3877_s != nullptr)) {
		return jule::Any(_3877_s, &__jule_any_type65);;
	};
	return _1c49d3b50_findBuiltins(_self_, _35523_ident);;
}



inline jule::Ptr<_1c48be8a4_ReferenceStack> _1c49d42d2_getOwnerRefers(_1c49d0c4b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1aaae7310:;
			{
				jule::Ptr<_1c4913244_scopeChecker> _3988_sc = _1c49168a7_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
				return (*((*(_3988_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1aaae682b:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1aaae67c6:;
	};
	return nullptr;;
}



inline void _1aab0990a_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _41037_ref) {
	jule::Ptr<_1c48be8a4_ReferenceStack> _4117_refers = _1c49d42d2_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1aab0bca3_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1c48c06b8_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type7));
	};
}

inline void _1aab208bb_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _41037_ref) {
	jule::Ptr<_1c48be8a4_ReferenceStack> _4117_refers = _1c49d42d2_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1aab22bdc_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1c48c06b8_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type8));
	};
}

inline void _1abcc0dde_pushReference(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns>* _41037_ref) {
	jule::Ptr<_1c48be8a4_ReferenceStack> _4117_refers = _1c49d42d2_getOwnerRefers(_self_);;
	if (((_4117_refers != nullptr) && (!(_1abcc32ba_Exist(_4117_refers, (*(_41037_ref))))))) {
		_1c48c06b8_Push(_4117_refers, jule::Any((*(_41037_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49d48cb__evalEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _41725_enm) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41725_enm, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d4cc7_evalEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _42628_enm, jule::Ptr<_1c486c19d_Token> _42640_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42628_enm))._field_Public, (*_42628_enm.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _42640_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_42628_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c49d48cb__evalEnum(_self_, _42628_enm);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d5118__evalTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _43529_enm) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_43529_enm, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d5514_evalTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _44432_enm, jule::Ptr<_1c486c19d_Token> _44448_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44432_enm))._field_Public, (*_44432_enm.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _44448_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_44432_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c49d5118__evalTypeEnum(_self_, _44432_enm);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d5855__evalStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _45327_s) {
	jule::Ptr<_1c49ce024_Data> _4547_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_45327_s, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_45327_s, &__jule_any_type9), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if ((((*(_45327_s))._field_Decl != nullptr) && (*(*(_45327_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4547_d))._field_Kind))._field_BindIdent=(*(*(_45327_s))._field_Decl.alloc)._field_Ident;
	};
	return _4547_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d5c51_evalStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _46730_s, jule::Ptr<_1c486c19d_Token> _46745_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46730_s))._field_Decl))._field_Public, (*(*(_46730_s))._field_Decl.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _46745_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_46730_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c49d6405_checkDeprecated(_self_, &((*(*(_46730_s))._field_Decl.alloc)._field_Directives), _46745_errorToken);
	return _1c49d5855__evalStruct(_self_, _46730_s);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d6092_evalFnIns(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns> _47725_f) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_47725_f, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_47725_f, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline void _1c49d6405_checkDeprecated(_1c49d0c4b_eval* _self_, jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _48636_directives, jule::Ptr<_1c486c19d_Token> _48667_tok) {
	if (_1c49d1cc4_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1c4881b96_Directive> _4913_d = _1c4a076ac_findDirective(_48636_directives, jule::Str::lit("deprecated", 10));;
	if ((_4913_d != nullptr)) {
		if (((*_4913_d.alloc)._field_Args.len() == 0LL)) {
			_1c49d12ce_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4); __jule_collection; }));
		} else {
			_1c49d12ce_pushErr(_self_, _48667_tok, jule::Str::lit("deprecated usage: @", 19), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4913_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4); __jule_collection; }));
		};
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49d6801_evalFn(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48b8738_Fn> _50226_f, jule::Ptr<_1c486c19d_Token> _50234_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50226_f))._field_Public, (*_50226_f.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _50234_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_50226_f.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c49d6405_checkDeprecated(_self_, &((*_50226_f.alloc)._field_Directives), _50234_errorToken);
	jule::Ptr<_1c48bb719_FnIns> _5117_ins = _1c48b9ecb_instance(_50226_f);;
	_1aab0990a_pushReference(_self_, &(_5117_ins));
	return _1c49d6092_evalFnIns(_self_, _5117_ins);;
}



inline void _1c49d6c1e_pushIllegalCycleError(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _51638_v1, jule::Ptr<_1c49715b0_Var>* _51649_v2, _238b51e24_StrBuilder* _51664_message) {
	;
	jule::Str _5183_refers_to = _205a97c49_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51638_v1))))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_51649_v2))))._field_Ident, &__jule_any_type4); __jule_collection; }));;
	jule::Slice<jule::U8> _5193_buf = _238b53b7e_Buf(_51664_message);;
	_238b528d6_WriteStr(_51664_message, _2059e3c83_Repeat(jule::Str::lit(" ", 1), 7LL));
	_238b528d6_WriteStr(_51664_message, _5183_refers_to);
	_238b52b8e_WriteByte(_51664_message, '\n');
	_238b5262d_Write(_51664_message, _5193_buf);
}



inline jule::Bool _1c49d711a_checkCrossCycle(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _52632_v, _238b51e24_StrBuilder* _52646_message) {
	{
		auto expr = &((*((*(_52632_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab111d6:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> *_52710_d = it;
			{
				if (((*(_52710_d)) == (*(_self_))._field_owner)) {
					_1c49d6c1e_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
				if ((!(_1c49d711a_checkCrossCycle(_self_, _52710_d, _52646_message)))) {
					_1c49d6c1e_pushIllegalCycleError(_self_, _52632_v, _52710_d, _52646_message);
					return false;;
				};
			}
			_iter_next_1aab111d6:;
			++it;
			goto _iter_begin_1aab111d6;
		}
		_iter_end_1aab111d6:;
	};
	return true;;
}



inline jule::Bool _1c49d7516_checkIllegalCycles(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var>* _54339_v, jule::Ptr<_1c486c19d_Token> _54348_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54339_v)))) {
		_1c49d12ce_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_238b51e24_StrBuilder _5567_message = static__238b52375_New(32LL);;
	if ((!(_1c49d711a_checkCrossCycle(_self_, _54339_v, &(_5567_message))))) {
		jule::Str _5598_errMsg = _238b531cd_Str(&_5567_message);;
		_238b533cb_Clear(&_5567_message);
		_1c49d6c1e_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54339_v, &(_5567_message));
		_5598_errMsg+=_238b531cd_Str(&_5567_message);
		_1c49d12ce_pushErr(_self_, _54348_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5598_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54339_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d7912_evalVar(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49715b0_Var> _57127_v, jule::Ptr<_1c486c19d_Token> _57136_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57127_v))._field_Public, (*_57127_v.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _57136_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c49d6405_checkDeprecated(_self_, &((*_57127_v.alloc)._field_Directives), _57136_errorToken);
	if (((*_57127_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1aab25edc;
	};
	(*_57127_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3)) {
			_case_begin_1aab19c06:;
			{
				jule::Bool _5904_ok = _1c49d7516_checkIllegalCycles(_self_, &(_57127_v), _57136_errorToken);;
				if ((!(_5904_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1aab19354:;
			{
				jule::Ptr<_1c4913244_scopeChecker> _5958_s = (*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0);;
				jule::Ptr<_1c4913244_scopeChecker> _5968_root = _1c4916621_getRoot(_5958_s);;
				if ((((*(_5968_root))._field_captured != nullptr) && _1c4a0c7b1_isVarCaptured(_5968_root, _5958_s, _57127_v))) {
					_1c491638a_pushCaptured(_5968_root, &(_57127_v));
				};
				if (((!((*_57127_v.alloc)._field_Reference)) || _1c49d1cc4_isUnsafe(_self_))) {
					goto _match_end_1aab19b7e;
				};
				while ((((*_5958_s.alloc)._field_owner == nullptr) && ((*_5958_s.alloc)._field_parent != nullptr))) {
					{
						_5958_s=(*_5958_s.alloc)._field_parent;
					}
				_iter_next_1aab1d0e4:;
				}
				_iter_end_1aab1d0e4:;;
				if (((((*_5958_s.alloc)._field_owner != nullptr) && (*((*_5958_s.alloc)._field_owner))._field_Anon) && ((*_57127_v.alloc)._field_Scope != (*((*_5958_s.alloc)._field_owner))._field_Scope))) {
					_1c49d12ce_pushErr(_self_, _57136_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_57127_v.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
			}
		}
		_match_end_1aab19b7e:;
	};
	if (((*_57127_v.alloc)._field_Scope == nullptr)) {
		_1aab208bb_pushReference(_self_, &(_57127_v));
	};
	if (((!((*_57127_v.alloc)._field_Binded)) && (((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57127_v.alloc)._field_Constant) {
			_1c496808a_checkVar((*(_self_))._field_s, &(_57127_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3));
			if ((((*_57127_v.alloc)._field_Value == nullptr) || ((*((*_57127_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57127_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1c496808a_checkVar((*(_self_))._field_s, &(_57127_v), (*(_self_))._field_lookup);
		if ((((*_57127_v.alloc)._field_Kind == nullptr) || ((*((*_57127_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1aab25edc:;
	jule::Ptr<_1c49ce024_Data> _6467_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*((*_57127_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57127_v.alloc)._field_Mutable, ._field_Reference=(*_57127_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57127_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_57127_v, &__jule_any_type8), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if ((((!((*_57127_v.alloc)._field_Binded)) && _1c49719bc_IsInitialized(_57127_v)) && ((*((*_57127_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_6467_d))._field_IsRune=(*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57127_v.alloc)._field_Constant && ((*((*((*_57127_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_6467_d.alloc)._field_Constant=jule::new_ptr<_1dc54537a_Const>((*(*((*((*(_57127_v))._field_Value))._field_Data))._field_Constant.alloc));
		(*_6467_d.alloc)._field_Model=jule::Any((*_6467_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1c4971ed9_untypedConstant(_57127_v)) {
			_1c49d2368_applyNumericPrefix(_self_, &(_6467_d));
			(*_6467_d.alloc)._field_untyped=true;
		};
	};
	return _6467_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d7d0d_evalTypeAlias(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a0e41c_TypeAlias> _67033_ta, jule::Ptr<_1c486c19d_Token> _67049_errorToken) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67033_ta))._field_Public, (*_67033_ta.alloc)._field_Token)))) {
		_1c49d12ce_pushErr(_self_, _67049_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_67033_ta.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67033_ta.alloc)._field_Used=true;
	jule::Trait _6797_kind = (*((*((*_67033_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1c49ce024_Data> _68011_d = nullptr;;
	{
		auto &_match_expr{ _6797_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)) {
			_case_begin_1aab33c75:;
			{
				_68011_d=_1c49d5855__evalStruct(_self_, _6797_kind.cast_ptr<_1c48a6407_StructIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3)) {
			_case_begin_1aab31d0b:;
			{
				_68011_d=_1c49d48cb__evalEnum(_self_, _6797_kind.cast_ptr<_1c48ce8c5_Enum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)) {
			_case_begin_1aab31d72:;
			{
				_68011_d=_1c49d5118__evalTypeEnum(_self_, _6797_kind.cast_ptr<_1c48d10d0_TypeEnum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1aab31c95:;
			{
				_68011_d=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});
				if ((*_67033_ta.alloc)._field_Binded) {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*_67033_ta.alloc)._field_Ident;
				} else {
					(*((*(_68011_d))._field_Kind))._field_BindIdent=(*(*((*(_67033_ta))._field_Kind))._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68011_d))._field_Model=jule::Any((*_68011_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1aab31b74:;
	};
	(*((*(_68011_d))._field_Kind))._field_Generic=(*_67033_ta.alloc)._field_Generic;
	return _68011_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d8209_evalDef(_1c49d0c4b_eval* _self_, jule::Any* _70628_def, jule::Ptr<_1c486c19d_Token> _70638_ident) {
	{
		auto &_match_expr{ (*(_70628_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aab37493:;
			{
				return _1c49d7912_evalVar(_self_, (*(_70628_def)).cast_ptr<_1c49715b0_Var>(&__jule_any_type8), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aab37273:;
			{
				return _1c49d4cc7_evalEnum(_self_, (*(_70628_def)).cast_ptr<_1c48ce8c5_Enum>(&__jule_any_type67), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aab37509:;
			{
				return _1c49d5514_evalTypeEnum(_self_, (*(_70628_def)).cast_ptr<_1c48d10d0_TypeEnum>(&__jule_any_type68), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aab37570:;
			{
				return _1c49d5c51_evalStruct(_self_, _1c48a3b1e_instance((*(_70628_def)).cast_ptr<_1c48a3679_Struct>(&__jule_any_type65)), _70638_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aab375d6:;
			{
				jule::Ptr<_1c48b8738_Fn> _7178_f = (*(_70628_def)).cast_ptr<_1c48b8738_Fn>(&__jule_any_type64);;
				if ((!(*(_7178_f))._field_Ident.equal("init", 4))) {
					return _1c49d6801_evalFn(_self_, _7178_f, _70638_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aab3765d:;
			{
				return _1c49d6092_evalFnIns(_self_, (*(_70628_def)).cast_ptr<_1c48bb719_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1aab376d5:;
			{
				return _1c49d7d0d_evalTypeAlias(_self_, (*(_70628_def)).cast_ptr<_1c4a0e41c_TypeAlias>(&__jule_any_type66), _70638_ident);;
			}
		}
		_match_end_1aab373a5:;
	};
	_1c49d12ce_pushErr(_self_, _70638_ident, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_70638_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d854a_evalIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48883c8_IdentExpr> _73025_ident) {
	jule::Any _7317_def = _1c49d404b_getDef(_self_, &((*(_73025_ident))._field_Ident), (*_73025_ident.alloc)._field_Binded);;
	return _1c49d8209_evalDef(_self_, &(_7317_def), (*_73025_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d888b_evalUnary(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4888b6a_UnaryExpr> _73530_u) {
	_1c49ee473_unaryEval _7367_unary = static__1c49ee8e6_new(_self_);;
	return _1c4a00d26_eval(&_7367_unary, _73530_u);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d8bcc_evalVariadic(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889044_VariadicExpr> _74033_v) {
	if (((*(_74033_v))._field_Expr == nullptr)) {
		_1c49d12ce_pushErr(_self_.ptr(), (*_74033_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _7467_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7467_prefix;
	});;
	jule::Ptr<_1c49ce024_Data> _7507_d = _1c49edede_evalExpr(_self_, (*_74033_v.alloc)._field_Expr);;
	if ((_7507_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4a1260c_Variadicable((*(_7507_d))._field_Kind.ptr())))) {
		_1c49d12ce_pushErr(_self_, (*_74033_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_7507_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1c4a0c382_makeVariadic(&(_7507_d), (*(_1c4a138e9_Slc((*(_7507_d))._field_Kind)))._field_Elem);
	return _7507_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d901d_evalUnsafe(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4887e22_UnsafeExpr> _76231_u) {
	jule::Bool _7633_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1c49ce024_Data> _7657_d = _1c49edede_evalExpr(_self_, (*(_76231_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7633_unsafety;
	return _7657_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d935e_evalArr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _77028_s) {
	jule::Ptr<_1c4a1e608_Arr> _7727_pt = _1c4a13663_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1c4a1e608_Arr> _7747_arr = jule::new_ptr<_1c4a1e608_Arr>(_1c4a1e608_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7727_pt))._field_Elem});;
	jule::Bool _7807_filled = false;;
	if (((*(_77028_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77028_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type76) {
				_case_begin_1aab47abe:;
				{
					if (((*((*((*(_77028_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1c4889044_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1aab47a25;
					};
					if ((*_7727_pt.alloc)._field_Auto) {
						_1c49d12ce_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7807_filled=true;
					((*(_77028_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1aab47a25:;
		};
	};
	(*(_7747_arr))._field_N=(*_77028_s.alloc)._field_Exprs.len();
	if ((!((*_7727_pt.alloc)._field_Auto))) {
		if (((*_7747_arr.alloc)._field_N > (*_7727_pt.alloc)._field_N)) {
			_1c49d12ce_pushErr(_self_, (*_77028_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_7747_arr.alloc)._field_N < (*_7727_pt.alloc)._field_N)) {
			(*_7747_arr.alloc)._field_N=(*_7727_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1c48b0c2a_ArrayExprModel> _8097_model = jule::new_ptr<_1c48b0c2a_ArrayExprModel>(_1c48b0c2a_ArrayExprModel{._field_Kind=_7747_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7807_filled) {
		(*(_8097_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8097_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_77028_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1c4a1020e_TypeKind> _8187_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7747_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77028_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab4e80c:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _82015_elem = *it;
			{
				jule::Ptr<_1c49ce024_Data> _8218_d = _1c49edede_evalExpr(_self_, _82015_elem);;
				if ((_8218_d == nullptr)) {
					goto _iter_next_1aab4e80c;
				};
				;
				if (_1c495cca5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), &((*(_82015_elem))._field_Token))) {
					_1c495891b_checkAssignType((*(_self_))._field_s, false, &((*_7747_arr.alloc)._field_Elem), &(_8218_d), (*_82015_elem.alloc)._field_Token);
				};
				(*(_8097_model))._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8218_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1aab4e80c:;
			++it;
			goto _iter_begin_1aab4e80c;
		}
		_iter_end_1aab4e80c:;
	};
	(*_self_.alloc)._field_prefix=_8187_prefix;
	if (_7807_filled) {
		(*_8097_model.alloc)._field_Elems=jule::append((*_8097_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7747_arr, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8097_model, &__jule_any_type85), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d9815_evalExpSlc(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _84731_s, jule::Ptr<_1c4a1020e_TypeKind> _84750_t, jule::Any _84768_first) {
	jule::Ptr<_1c4a1c2d7_Slc> _8487_slc = jule::new_ptr<_1c4a1c2d7_Slc>(_1c4a1c2d7_Slc{._field_Elem=_84750_t});;
	jule::I64 _8527_i = 0LL;;
	jule::Ptr<_1c48acc16_SliceExprModel> _8537_model = jule::new_ptr<_1c48acc16_SliceExprModel>(_1c48acc16_SliceExprModel{._field_ElemKind=_84750_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84731_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84768_first != nullptr)) {
		(*(_8537_model))._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84768_first; __jule_collection; }));
		_8527_i=1LL;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _8627_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8487_slc))._field_Elem;
	{
		auto expr = (*_84731_s.alloc)._field_Exprs.slice(_8527_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aab57969:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _86415_elem = *it;
			{
				jule::Ptr<_1c49ce024_Data> _8658_d = _1c49edede_evalExpr(_self_, _86415_elem);;
				if ((_8658_d != nullptr)) {
					;
					if (_1c495cca5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), &((*(_86415_elem))._field_Token))) {
						_1c495891b_checkAssignType((*(_self_))._field_s, false, &((*_8487_slc.alloc)._field_Elem), &(_8658_d), (*_86415_elem.alloc)._field_Token);
					};
					(*_8537_model.alloc)._field_Elems=jule::append((*_8537_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8658_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1aab57969:;
			++it;
			goto _iter_begin_1aab57969;
		}
		_iter_end_1aab57969:;
	};
	(*_self_.alloc)._field_prefix=_8627_prefix;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8487_slc, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8537_model, &__jule_any_type77), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49d9b56_evalSliceExpr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488d114_SliceExpr> _88534_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1c4a13663_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1aab5c3b9:;
				{
					return _1c49d935e_evalArr(_self_, _88534_s);;
				}
			}
			else if ((_1c4a138e9_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1aab5c463:;
				{
					jule::Ptr<_1c4a1c2d7_Slc> _8919_pt = _1c4a138e9_Slc((*(_self_))._field_prefix);;
					return _1c49d9815_evalExpSlc(_self_, _88534_s, (*(_8919_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1aab5c2dc:;
		};
	};
	jule::Ptr<_1c4a1020e_TypeKind> _8967_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88534_s))._field_Exprs.len() == 0LL)) {
		_1c49d12ce_pushErr(_self_, (*_88534_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _9047_firstElem = _1c49edede_evalExpr(_self_, (*_88534_s.alloc)._field_Exprs[0LL]);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1c495cca5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_9047_firstElem))._field_Kind), &(_9047_firstElem), &((*((*(_88534_s))._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1c49ce024_Data> _9147_d = _1c49d9815_evalExpSlc(_self_, _88534_s, (*(_9047_firstElem))._field_Kind, (*(_9047_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8967_prefix;
	return _9147_d;;
}



inline void _1c49d9eb9_checkIntegerIndexingByData(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _92047_d, jule::Ptr<_1c486c19d_Token> _92061_token) {
	jule::Str _9213_errKey = _1c4a0a03e_checkDataForIntegerIndexing(_92047_d, &(_92061_token));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aab650c5:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1aab64c95:;
			{
				_1c49d12ce_pushErr(_self_, _92061_token, _9213_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_92047_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
			}
		}
		else {
			_case_begin_1aab64910:;
			{
				_1c49d12ce_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1aab64ba7:;
	};
}



inline void _1c49da3d7_indexingPtr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _93232_d, jule::Ptr<_1c49ce024_Data>* _93247_index, jule::Ptr<_1c488da71_IndexingExpr>* _93266_i) {
	_1c49d9eb9_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1c4a200cb_Ptr> _9367_ptr = _1c4a12db0_Ptr((*((*(_93232_d))))._field_Kind.ptr());;
	{
		
		if (_1c4a20b48_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1aab67b88:;
			{
				_1c49d12ce_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1c49d1cc4_isUnsafe(_self_)))) {
			_case_begin_1aab67c21:;
			{
				_1c49d12ce_pushErr(_self_, (*((*(_93266_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aab67b00:;
	};
	(*((*(_93232_d))))._field_Kind=(*(_9367_ptr))._field_Elem;
}



inline void _1c49da805_indexingArr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _94832_d, jule::Ptr<_1c49ce024_Data>* _94847_index, jule::Ptr<_1c488da71_IndexingExpr>* _94866_i) {
	jule::Ptr<_1c4a1e608_Arr> _9497_arr = _1c4a13663_Arr((*((*(_94832_d))))._field_Kind.ptr());;
	(*((*(_94832_d))))._field_Kind=(*(_9497_arr))._field_Elem;
	_1c49d9eb9_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1c49ce95e_IsConst((*(_94847_index)).ptr()) && (_1dc548070_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1c49d12ce_pushErr(_self_, (*((*(_94866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1c49dac23_indexingSlc(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _95832_d, jule::Ptr<_1c49ce024_Data>* _95847_index, jule::Ptr<_1c488da71_IndexingExpr>* _95866_i) {
	jule::Ptr<_1c4a1c2d7_Slc> _9597_slc = _1c4a138e9_Slc((*((*(_95832_d))))._field_Kind.ptr());;
	(*((*(_95832_d))))._field_Kind=(*(_9597_slc))._field_Elem;
	_1c49d9eb9_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1c49ce95e_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1abc5c562:;
			{
				jule::Ptr<_1c48acc16_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1c48acc16_SliceExprModel>();;
				jule::F64 _9714_indx = _1dc548070_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1c49d12ce_pushErr(_self_, (*((*(_95866_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1abc5c50c:;
	};
}



inline void _1c49db141_indexingMap(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _98132_d, jule::Ptr<_1c49ce024_Data>* _98147_index, jule::Ptr<_1c488da71_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4a1d97b_Map> _9867_m = _1c4a14433_Map((*((*(_98132_d))))._field_Kind.ptr());;
	_1c49b798b_assignTypeChecker _9877_atc = _1c49b798b_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token};;
	_1c49b898c_check(&_9877_atc);
	(*((*(_98132_d))))._field_Kind=(*_9867_m.alloc)._field_Val;
}



inline void _1c49db55e_indexingStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _99732_d, jule::Ptr<_1c49ce024_Data>* _99747_index, jule::Ptr<_1c488da71_IndexingExpr>* _99766_i) {
	(*((*(_99732_d))))._field_Kind=_21ddd24dd_primU8;
	(*((*(_99732_d))))._field_Mutable=false;
	(*((*(_99732_d))))._field_Lvalue=true;
	if (((*(_99747_index)) == nullptr)) {
		return;;
	};
	_1c49d9eb9_checkIntegerIndexingByData(_self_, _99747_index, (*((*(_99766_i))))._field_Token);
	if ((!(_1c49ce95e_IsConst((*(_99747_index)).ptr())))) {
		(*((*(_99732_d))))._field_Constant=nullptr;
		(*((*(_99732_d))))._field_untyped=false;
		return;;
	};
	if (_1c49ce95e_IsConst((*(_99732_d)).ptr())) {
		jule::Ptr<_1c486c19d_Token> _10154_errorToken = (*((*(_99766_i))))._field_Token;;
		jule::I64 _10164_j = _1dc547a53_AsI64((*((*(_99747_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1dc547536_ReadStr((*((*(_99732_d))))._field_Constant);;
		if ((static_cast<jule::I64>(_10164_j) >= _10174_s.len())) {
			_1c49d12ce_pushErr(_self_, _10154_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1dc5485d1_SetU64((*((*(_99732_d))))._field_Constant, static_cast<jule::U64>(_10174_s[_10164_j]));
		};
	};
}



inline void _1c49db97c_toIndexing(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _102631_d, jule::Ptr<_1c49ce024_Data>* _102646_index, jule::Ptr<_1c488da71_IndexingExpr>* _102665_i) {
	{
		
		if ((_1c4a12db0_Ptr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc68c22:;
			{
				_1c49da3d7_indexingPtr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1c4a13663_Arr((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc68cbb:;
			{
				_1c49da805_indexingArr(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1c4a138e9_Slc((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc68d32:;
			{
				_1c49dac23_indexingSlc(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1c4a14433_Map((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc68d98:;
			{
				_1c49db141_indexingMap(_self_, _102631_d, _102646_index, _102665_i);
				return;;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_102631_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc68e0e:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _10414_prim = _1c4a12893_Prim((*((*(_102631_d))))._field_Kind);;
				{
					
					if (_1c4a1b2a3_IsStr(_10414_prim.ptr())) {
						_case_begin_1abc6d133:;
						{
							_1c49db55e_indexingStr(_self_, _102631_d, _102646_index, _102665_i);
							return;;
						}
					}
					_match_end_1abc6d089:;
				};
			}
		}
		_match_end_1abc68ace:;
	};
	_1c49d12ce_pushErr(_self_, (*((*(_102665_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_102631_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Bool _1c49dbe33_pushGenericsFromExprSubIdent(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889bc1_SubIdentExpr>* _105150_sexpr, jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _10528_generics, jule::Ptr<_1c4886aad_Expr>* _105236_expr) {
	jule::Ptr<_1c488314d_SubIdentTypeDecl> _10537_t = jule::new_ptr<_1c488314d_SubIdentTypeDecl>(_1c488314d_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>>(nullptr)});;
	if ((!(_1c4a0ae52_pushSubIdentFromExpr(jule::Any((*(_105150_sexpr)), &__jule_any_type86), &(_10537_t))))) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*(_105236_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_10528_generics)); __jule_push_dest.push(jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Kind=jule::Any(_10537_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1c49dc32e_pushGenericsFromData(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _106242_generics, jule::Ptr<_1c4886aad_Expr>* _106270_expr) {
	{
		auto &_match_expr{ (*((*(_106270_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1abc72742:;
			{
				jule::Ptr<_1c4888b6a_UnaryExpr> _10658_u = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1c4888b6a_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10658_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1abc74667:;
						{
							jule::Ptr<_1c48842a3_PtrTypeDecl> _10689_kind = jule::new_ptr<_1c48842a3_PtrTypeDecl>(_1c48842a3_PtrTypeDecl{._field_Elem=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _10699__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; });;
							_1c49dc32e_pushGenericsFromData(_self_, &(_10699__generics), &((*(_10658_u))._field_Expr));
							(*_10689_kind.alloc)._field_Elem=_10699__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10689_kind, &__jule_any_type71)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1abc746cd:;
						{
							jule::Ptr<_1c4883824_SptrTypeDecl> _10779_kind = jule::new_ptr<_1c4883824_SptrTypeDecl>(_1c4883824_SptrTypeDecl{._field_Elem=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _10789__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; });;
							_1c49dc32e_pushGenericsFromData(_self_, &(_10789__generics), &((*(_10658_u))._field_Expr));
							(*_10779_kind.alloc)._field_Elem=_10789__generics[0LL];
							{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*((*(_106270_expr))))._field_Token, ._field_Kind=jule::Any(_10779_kind, &__jule_any_type72)})); };
						}
					}
					else {
						_case_begin_1abc73523:;
						{
							_1c49d12ce_pushErr(_self_.ptr(), (*(_10658_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1abc739b8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1abc727a8:;
			{
				{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push((*((*(_106270_expr))))._field_Kind.cast_ptr<_1c4882779_TypeDecl>(&__jule_any_type89)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1abc71ad7:;
			{
				jule::Ptr<_1c4889bc1_SubIdentExpr> _10928_sexpr = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1c4889bc1_SubIdentExpr>();;
				return _1c49dbe33_pushGenericsFromExprSubIdent(_self_, &(_10928_sexpr), _106242_generics, _106270_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abc71b4d:;
			{
				jule::Ptr<_1c48883c8_IdentExpr> _10958_ident = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1c48883c8_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*_10958_ident.alloc)._field_Token, ._field_Ident=(*_10958_ident.alloc)._field_Ident, ._field_Binded=(*(_10958_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)}), &__jule_any_type75)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1abc71bb4:;
			{
				{
					auto expr = &((*((*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1c48876a2_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1abc7abbd:;
					if (it != expr_end) {
						jule::Ptr<_1c4886aad_Expr> _110416_texpr = *it;
						{
							if ((!(_1c49dc32e_pushGenericsFromData(_self_, _106242_generics, &(_110416_texpr))))) {
								return false;;
							};
						}
						_iter_next_1abc7abbd:;
						++it;
						goto _iter_begin_1abc7abbd;
					}
					_iter_end_1abc7abbd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1abc71c2a:;
			{
				jule::Ptr<_1c48897e7_NsSelectionExpr> _11108_ns = (*((*(_106270_expr))))._field_Kind.unsafe_cast_ptr<_1c48897e7_NsSelectionExpr>();;
				jule::Ptr<_1c4882d84_IdentTypeDecl> _11118_decl = jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*(_11108_ns))._field_Ident, ._field_Ident=(*((*_11108_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*(_106242_generics)); __jule_push_dest.push(jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*(_11118_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c4883527_NamespaceTypeDecl>(_1c4883527_NamespaceTypeDecl{._field_Idents=(*_11108_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*_11118_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11118_decl, &__jule_any_type75)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1abc71a71:;
			{
				_1c49d12ce_pushErr(_self_.ptr(), (*((*(_106270_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1abc71a1b:;
	};
	return true;;
}



inline void _1c49dc692_evalIdentDeclFromIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c49ce024_Data>* _113247_d, jule::Ptr<_1c488da71_IndexingExpr>* _113262_i) {
	jule::Ptr<_1c48a6407_StructIns> _11337_s = _1c4a13e16_Struct((*((*(_113247_d))))._field_Kind.ptr());;
	if ((_11337_s == nullptr)) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*((*(_113262_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_113247_d))))._field_Kind), &__jule_any_type4); __jule_collection; }));
		(*(_113247_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c4882d84_IdentTypeDecl> _114011_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113262_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abc82a71:;
			{
				jule::Ptr<_1c48883c8_IdentExpr> _11438_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c48883c8_IdentExpr>();;
				_114011_decl=jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*_11438_expr.alloc)._field_Token, ._field_Ident=(*_11438_expr.alloc)._field_Ident, ._field_Binded=(*(_11438_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1abc83d4c:;
			{
				jule::Ptr<_1c48897e7_NsSelectionExpr> _11508_expr = (*((*((*(_113262_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1c48897e7_NsSelectionExpr>();;
				_114011_decl=jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*(_11508_expr))._field_Ident, ._field_Ident=(*((*_11508_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1abc82ed3:;
			{
				_1c49d12ce_pushErr(_self_, (*((*(_113262_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113247_d))=nullptr;
				return;;
			}
		}
		_match_end_1abc82e7d:;
	};
	if ((!(_1c49dc32e_pushGenericsFromData(_self_, &((*(_114011_decl))._field_Generics), &((*((*(_113262_i))))._field_Index))))) {
		(*(_113247_d))=nullptr;
		return;;
	};
	_11337_s=({ auto _wrap_copy = _1c49e418d_typeChecker(_self_); _1c4a26049_fromStruct(&_wrap_copy, &(_114011_decl), &((*(_11337_s))._field_Decl)); });
	if ((_11337_s == nullptr)) {
		(*(_113247_d))=nullptr;
		return;;
	};
	(*(*((*(_113247_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11337_s, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1c49dcb48_checkGenericFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48bb719_FnIns>* _117536_f, jule::Ptr<_1c486c19d_Token>* _117552_et, jule::Any* _117569_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c48bb719_FnIns> _11767_old = (*(_117536_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4968a80_checkGenericFn((*(_self_))._field_s, _117536_f, _117552_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1c4a0abdd_updateModelToGenericIns(_117569_model, _117536_f);
		_1abc8a9d0_updateRefer(_1c49d42d2_getOwnerRefers(_self_), &(_11767_old), _117536_f);
	};
	return __jule_func_result;;
}



inline void _1c49dceab_evalFnGenericFromIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c49ce024_Data>* _119147_d, jule::Ptr<_1c488da71_IndexingExpr>* _119162_i) {
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _11927_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1c49dc32e_pushGenericsFromData(_self_, &(_11927_generics), &((*((*(_119162_i))))._field_Index))))) {
		(*(_119147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c48bb719_FnIns> _11987_f = _1c4a13b80_Fn((*((*(_119147_d))))._field_Kind.ptr());;
	jule::I64 _11997_genericsLen = 0LL;;
	if (((*(_11987_f))._field_Decl != nullptr)) {
		_11997_genericsLen=(*(*(_11987_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1c495243c_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _11997_genericsLen, _11927_generics.len(), (*((*((*(_119162_i))))._field_Expr))._field_Token)))) {
		(*(_119147_d))=nullptr;
		return;;
	};
	(*_11987_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(0LL, (*(*(_11987_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a0d828_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_11927_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc90d8c:;
		if (it != expr_end) {
			jule::Ptr<_1c4882779_TypeDecl> _121015_g = *it;
			{
				jule::Ptr<_1c49ce024_Data> _12118_k = _1c49e44ce_evalType(_self_, _121015_g);;
				if ((_12118_k == nullptr)) {
					(*(_119147_d))=nullptr;
					return;;
				};
				(*_11987_f.alloc)._field_Generics=jule::append((*_11987_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4a0d828_InsGeneric>(_1c4a0d828_InsGeneric{._field_Kind=(*(_12118_k))._field_Kind, ._field_Constraint=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1abc90d8c:;
			++it;
			goto _iter_begin_1abc90d8c;
		}
		_iter_end_1abc90d8c:;
	};
	if (_1c48bcbd2_IsBuiltin(_11987_f)) {
		return;;
	};
	jule::Bool _12233_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c49dcb48_checkGenericFn(_self_, &(_11987_f), &((*(*((*(_119162_i))))._field_Expr.alloc)._field_Token), &((*((*(_119147_d))))._field_Model));
		_12233_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12233_ok) {
		(*(*((*(_119147_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_11987_f, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1);
	} else {
		(*(_119147_d))=nullptr;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49dd2ec_evalIndexing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488da71_IndexingExpr> _123133_i) {
	jule::Ptr<_1c4a1020e_TypeKind> _12327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12327_prefix;
	});;
	jule::Ptr<_1c49ce024_Data> _12367_d = _1c49ed1ca_evalExprKind(_self_, (*((*(_123133_i))._field_Expr))._field_Kind);;
	if ((_12367_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12367_d))._field_Decl) {
		_1c49dc692_evalIdentDeclFromIndexing(_self_, &(_12367_d), &(_123133_i));
		return _12367_d;;
	};
	if ((_1c4a13b80_Fn((*(_12367_d))._field_Kind.ptr()) != nullptr)) {
		_1c49dceab_evalFnGenericFromIndexing(_self_, &(_12367_d), &(_123133_i));
		return _12367_d;;
	};
	_1c49ce024_Data _12527_oldData = (*(_12367_d));;
	jule::Ptr<_1c49ce024_Data> _12547_index = _1c49edede_evalExpr(_self_, (*_123133_i.alloc)._field_Index);;
	if ((_12547_index == nullptr)) {
		return nullptr;;
	};
	(*(_12367_d))._field_Decl=false;
	_1c49db97c_toIndexing(_self_, &(_12367_d), &(_12547_index), &(_123133_i));
	if (_1c49ce95e_IsConst(_12367_d.ptr())) {
		(*(_12367_d))._field_Decl=false;
		(*(_12367_d))._field_Model=jule::Any((*(_12367_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_12367_d))._field_Decl) {
		(*(_12367_d))._field_Decl=false;
	} else {
		(*(_12367_d))._field_Model=jule::Any(jule::new_ptr<_1c48ad1bc_IndexingExprModel>(_1c48ad1bc_IndexingExprModel{._field_Token=(*_123133_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1c49ce024_Data>(_12527_oldData), ._field_Index=_12547_index}), &__jule_any_type45);
	};
	return _12367_d;;
}



inline __jule_tuple_x_1c49ce024_Data__jule_tuple_x_1c49ce024_Data _1c49dd63d_evalSlicingExprs(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488e1d1_SlicingExpr>* _128538_s) {
	__jule_tuple_x_1c49ce024_Data__jule_tuple_x_1c49ce024_Data __jule_func_result;
	jule::Ptr<_1c4a1020e_TypeKind> _12867_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12867_prefix;
	});;
	jule::Ptr<_1c49ce024_Data> _129011_l = nullptr;;
	jule::Ptr<_1c49ce024_Data> _129111_r = nullptr;;
	if (((*((*(_128538_s))))._field_Start != nullptr)) {
		_129011_l=_1c49edede_evalExpr(_self_, (*((*(_128538_s))))._field_Start);
		if ((_129011_l != nullptr)) {
			_1c49d9eb9_checkIntegerIndexingByData(_self_, &(_129011_l), (*((*(_128538_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129011_l=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd16da_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc5457ed_NewI64(0LL)});
		(*((*(_129011_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_129011_l.alloc)._field_Model=jule::Any((*_129011_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_128538_s))))._field_To != nullptr)) {
		_129111_r=_1c49edede_evalExpr(_self_, (*((*(_128538_s))))._field_To);
		if ((_129111_r != nullptr)) {
			_1c49d9eb9_checkIntegerIndexingByData(_self_, &(_129111_r), (*((*(_128538_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129011_l;
	__jule_func_result.__jule_result_arg1 = _129111_r;
	return __jule_func_result;;
}



inline void _1c49dd8e6_slicingArr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _132127_d) {
	jule::Ptr<_1c4a1020e_TypeKind> _13227_elemType = (*(_1c4a13663_Arr((*((*(_132127_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_132127_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1c2d7_Slc>(_1c4a1c2d7_Slc{._field_Elem=_13227_elemType}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)});
	(*((*(_132127_d))))._field_Lvalue=false;
	(*((*(_132127_d))))._field_Mutable=((*((*(_132127_d))))._field_Mutable || (!(_1c4a11ac3_Mutable(_13227_elemType.ptr()))));
}



inline void _1c49ddd14_slicingStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _133627_d, jule::Ptr<_1c49ce024_Data>* _133638_l, jule::Ptr<_1c49ce024_Data>* _133649_r) {
	(*((*(_133627_d))))._field_Lvalue=false;
	(*((*(_133627_d))))._field_Mutable=true;
	if ((!(_1c49ce95e_IsConst((*(_133627_d)).ptr())))) {
		return;;
	};
	if ((((*(_133638_l)) == nullptr) || ((*(_133649_r)) == nullptr))) {
		(*((*(_133627_d))))._field_Constant=nullptr;
		(*((*(_133627_d))))._field_untyped=false;
		return;;
	};
	if ((_1c49ce95e_IsConst((*(_133638_l)).ptr()) && _1c49ce95e_IsConst((*(_133649_r)).ptr()))) {
		jule::I64 _13504_left = _1dc547a53_AsI64((*((*(_133638_l))))._field_Constant.ptr());;
		if ((_13504_left < 0LL)) {
			return;;
		};
		jule::Str _13554_s = _1dc547536_ReadStr((*((*(_133627_d))))._field_Constant);;
		jule::I64 _13568_right = static_cast<jule::I64>(0LL);;
		if (((*(_133649_r)) == nullptr)) {
			_13568_right=static_cast<jule::I64>(_13554_s.len());
		} else {
			_13568_right=_1dc547a53_AsI64((*((*(_133649_r))))._field_Constant);
		};
		if ((_13504_left > _13568_right)) {
			return;;
		};
		_1dc548b42_SetStr((*((*(_133627_d))))._field_Constant, _13554_s.slice(_13504_left, _13568_right));
		(*((*(_133627_d))))._field_Decl=true;
	} else {
		(*((*(_133627_d))))._field_Constant=nullptr;
		(*((*(_133627_d))))._field_untyped=false;
	};
}



inline void _1c49de2dc_checkSlicing(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _137433_d, jule::Ptr<_1c49ce024_Data>* _137444_l, jule::Ptr<_1c49ce024_Data>* _137455_r, jule::Ptr<_1c488e1d1_SlicingExpr>* _137466_s) {
	{
		
		if ((_1c4a13663_Arr((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abcac738:;
			{
				_1c49dd8e6_slicingArr(_self_, _137433_d);
				return;;
			}
		}
		else if ((_1c4a138e9_Slc((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abcac7d2:;
			{
				return;;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_137433_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abcac848:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _13824_prim = _1c4a12893_Prim((*((*(_137433_d))))._field_Kind);;
				{
					
					if (_1c4a1b2a3_IsStr(_13824_prim.ptr())) {
						_case_begin_1abcb00cb:;
						{
							_1c49ddd14_slicingStr(_self_, _137433_d, _137444_l, _137455_r);
							return;;
						}
					}
					_match_end_1abcb0032:;
				};
			}
		}
		_match_end_1abcac617:;
	};
	_1c49d12ce_pushErr(_self_, (*((*(_137466_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_137433_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline jule::Ptr<_1c49ce024_Data> _1c49de62d_evalSlicing(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488e1d1_SlicingExpr> _139332_s) {
	jule::Ptr<_1c49ce024_Data> _13947_d = _1c49edede_evalExpr(_self_, (*(_139332_s))._field_Expr);;
	if ((_13947_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _13997_l;
	jule::Ptr<_1c49ce024_Data> _139914_r;
	({
		__jule_tuple_x_1c49ce024_Data__jule_tuple_x_1c49ce024_Data __jule_assign_result = _1c49dd63d_evalSlicingExprs(_self_, &(_139332_s));
		_13997_l = __jule_assign_result.__jule_result_arg0;
		_139914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13997_l == nullptr)) {
		return _13947_d;;
	};
	(*(_13947_d))._field_Decl=false;
	_1c49de2dc_checkSlicing(_self_, &(_13947_d), &(_13997_l), &(_139914_r), &(_139332_s));
	if (_1c49ce95e_IsConst(_13947_d.ptr())) {
		(*(_13947_d))._field_Decl=false;
		(*(_13947_d))._field_Model=jule::Any((*(_13947_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_13947_d))._field_Decl) {
		(*(_13947_d))._field_Decl=false;
	} else {
		jule::Ptr<_1c48ae586_SlicingExprModel> _14178_model = jule::new_ptr<_1c48ae586_SlicingExprModel>(_1c48ae586_SlicingExprModel{._field_Token=(*_139332_s.alloc)._field_Token, ._field_Expr=(*(_13947_d))._field_Model, ._field_Left=(*(_13997_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_139914_r != nullptr)) {
			(*(_14178_model))._field_Right=(*_139914_r.alloc)._field_Model;
		};
		(*(_13947_d))._field_Model=jule::Any(_14178_model, &__jule_any_type92);
	};
	return _13947_d;;
}



inline void _1c49dea4b_castPtr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _143027_t, jule::Ptr<_1c49ce024_Data> _143045_d, jule::Ptr<_1c486c19d_Token> _143055_errorToken) {
	(*(_143045_d))._field_Constant=nullptr;
	(*_143045_d.alloc)._field_untyped=false;
	jule::Ptr<_1c4a1b814_Sptr> _14333_sptr = _1c4a12b29_Sptr((*_143045_d.alloc)._field_Kind.ptr());;
	if ((_14333_sptr != nullptr)) {
		if ((!(_1c4a1094b_Equal((*(_1c4a12db0_Ptr(_143027_t.ptr())))._field_Elem, (*_14333_sptr.alloc)._field_Elem)))) {
			_1c49d12ce_pushErr(_self_, _143055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_143045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_143027_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1c49d1cc4_isUnsafe(_self_)))) {
		_1c49d12ce_pushErr(_self_, _143055_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _14463_prim = _1c4a12893_Prim((*(_143045_d))._field_Kind);;
	if (((_1c4a12db0_Ptr((*(_143045_d))._field_Kind) == nullptr) && ((_14463_prim == nullptr) || (!(_1dc54427a_IsInt(_1c4a1815c_Str(_14463_prim.ptr()))))))) {
		_1c49d12ce_pushErr(_self_, _143055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_143045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_143027_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1c49dee69_castStruct(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _145230_t, jule::Ptr<_1c49ce024_Data> _145248_d, jule::Ptr<_1c486c19d_Token> _145258_errorToken) {
	(*(_145248_d))._field_Constant=nullptr;
	(*_145248_d.alloc)._field_untyped=false;
	jule::Ptr<_1c48cc1b9_Trait> _14557_tr = _1c4a1419c_Trait((*_145248_d.alloc)._field_Kind.ptr());;
	if ((_14557_tr == nullptr)) {
		_1c49d12ce_pushErr(_self_, _145258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_145248_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_145230_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _14617_s = _1c4a13e16_Struct(_145230_t);;
	_1abcc0dde_pushReference(_self_, &(_14617_s));
	if ((!(_1c48a4ceb_IsImplements((*(_14617_s))._field_Decl.ptr(), _14557_tr)))) {
		_1c49d12ce_pushErr(_self_, _145258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_145248_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_145230_t), &__jule_any_type4); __jule_collection; }));
	};
}



inline void _1c49e0387_castRef(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _146927_t, jule::Ptr<_1c49ce024_Data> _146945_d, jule::Ptr<_1c486c19d_Token> _146955_errorToken) {
	(*(_146945_d))._field_Constant=nullptr;
	(*_146945_d.alloc)._field_untyped=false;
	jule::Ptr<_1c4a1b814_Sptr> _14727_sptr = _1c4a12b29_Sptr(_146927_t.ptr());;
	jule::Ptr<_1c4a200cb_Ptr> _14747_ptr = _1c4a12db0_Ptr((*_146945_d.alloc)._field_Kind.ptr());;
	if (((_14747_ptr != nullptr) && _1c4a1094b_Equal((*(_14727_sptr))._field_Elem, (*_14747_ptr.alloc)._field_Elem))) {
		if ((!(_1c49d1cc4_isUnsafe(_self_)))) {
			_1c49d12ce_pushErr(_self_, _146955_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1c4a13e16_Struct((*(_14727_sptr))._field_Elem) != nullptr)) {
		_1c49dee69_castStruct(_self_, (*_14727_sptr.alloc)._field_Elem, _146945_d, _146955_errorToken);
		return;;
	};
	_1c49d12ce_pushErr(_self_, _146955_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_146945_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_146927_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1c49e07a5_castSlc(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _149227_t, jule::Ptr<_1c49ce024_Data> _149245_d, jule::Ptr<_1c486c19d_Token> _149255_errorToken) {
	jule::Ptr<_1dc54537a_Const> _14933_c = (*(_149245_d))._field_Constant;;
	(*_149245_d.alloc)._field_Constant=nullptr;
	(*_149245_d.alloc)._field_untyped=false;
	if ((_1c4a13146_Enum((*_149245_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1c4a12893_Prim((*((*(_1c4a13146_Enum((*(_149245_d))._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1c4a1b2a3_IsStr(_1c4a12893_Prim((*((*(_1c4a13146_Enum((*(_149245_d))._field_Kind.ptr())))._field_Kind))._field_Kind).ptr()))))) {
			_1c49d12ce_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_149245_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_149227_t.ptr()), &__jule_any_type4); __jule_collection; }));
			return;;
		};
	} else if (((_1c4a12893_Prim((*_149245_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_149245_d))._field_Kind).ptr()))))) {
		_1c49d12ce_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_149245_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_149227_t.ptr()), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	_149227_t=(*(_1c4a138e9_Slc(_149227_t.ptr())))._field_Elem;
	jule::Ptr<_1c4a17cd8_Prim> _15083_prim = _1c4a12893_Prim(_149227_t);;
	if (((_15083_prim == nullptr) || ((!(_1c4a19713_IsU8(_15083_prim.ptr()))) && (!(_1c4a191e6_IsI32(_15083_prim.ptr())))))) {
		_1c49d12ce_pushErr(_self_, _149255_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*_149245_d.alloc)._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_149227_t), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	if ((_14933_c != nullptr)) {
		{
			
			if (_1c4a19713_IsU8(_15083_prim.ptr())) {
				_case_begin_1abcd4a29:;
				{
					jule::Str _15185_s = _1dc547536_ReadStr(_14933_c);;
					jule::Ptr<_1c48acc16_SliceExprModel> _15199_model = jule::new_ptr<_1c48acc16_SliceExprModel>(_1c48acc16_SliceExprModel{._field_ElemKind=_149227_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15185_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15185_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abcd650e:;
						if (it != expr_end) {
							jule::U8 *_152312_b = it;
							{
								jule::Ptr<_1dc54537a_Const> _152410_bc = static__1dc545ab7_NewU64(static_cast<jule::U64>((*(_152312_b))));;
								(*(_152410_bc))._field_Kind=(*(_15083_prim))._field_Kind;
								(*(_15199_model))._field_Elems=jule::append((*_15199_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_152410_bc, &__jule_any_type19); __jule_collection; }));
							}
							_iter_next_1abcd650e:;
							++it;
							goto _iter_begin_1abcd650e;
						}
						_iter_end_1abcd650e:;
					};
					(*_149245_d.alloc)._field_Model=jule::Any(_15199_model, &__jule_any_type77);
					(*_149245_d.alloc)._field_Decl=true;
				}
			}
			else if (_1c4a191e6_IsI32(_15083_prim.ptr())) {
				_case_begin_1abcd4ac3:;
				{
					jule::Slice<jule::I32> _15315_runes = static_cast<jule::Slice<jule::I32>>(_1dc547536_ReadStr(_14933_c));;
					jule::Ptr<_1c48acc16_SliceExprModel> _15329_model = jule::new_ptr<_1c48acc16_SliceExprModel>(_1c48acc16_SliceExprModel{._field_ElemKind=_149227_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15315_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15315_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1abcd991e:;
						if (it != expr_end) {
							jule::I32 *_153612_r = it;
							{
								jule::Ptr<_1dc54537a_Const> _153710_rc = static__1dc5457ed_NewI64(static_cast<jule::I64>((*(_153612_r))));;
								(*(_153710_rc))._field_Kind=(*(_15083_prim))._field_Kind;
								(*(_15329_model))._field_Elems=jule::append((*_15329_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_153710_rc, &__jule_any_type19); __jule_collection; }));
							}
							_iter_next_1abcd991e:;
							++it;
							goto _iter_begin_1abcd991e;
						}
						_iter_end_1abcd991e:;
					};
					(*_149245_d.alloc)._field_Model=jule::Any(_15329_model, &__jule_any_type77);
					(*_149245_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1abcd494c:;
		};
	};
}



inline void _1c49e0b18_castStr(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _154727_d, jule::Ptr<_1c486c19d_Token> _154737_errorToken) {
	if ((_1c4a13146_Enum((*(_154727_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c48ce8c5_Enum> _15498_e = _1c4a13146_Enum((*(_154727_d))._field_Kind);;
		if (((_1c4a12893_Prim((*((*(_15498_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1c4a1b2a3_IsStr(_1c4a12893_Prim((*((*(_15498_e))._field_Kind))._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1dc54537a_Const> _15553_c = (*_154727_d.alloc)._field_Constant;;
	(*_154727_d.alloc)._field_Constant=nullptr;
	(*_154727_d.alloc)._field_untyped=false;
	if ((_1c4a12893_Prim((*(_154727_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c4a17cd8_Prim> _15594_prim = _1c4a12893_Prim((*(_154727_d))._field_Kind);;
		if (((!(_1c4a19713_IsU8(_15594_prim.ptr()))) && (!(_1c4a191e6_IsI32(_15594_prim))))) {
			_1c49d12ce_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_154727_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return;;
		};
		if ((_15553_c != nullptr)) {
			{
				
				if (_1c4a19713_IsU8(_15594_prim)) {
					_case_begin_1abce22c8:;
					{
						(*_154727_d.alloc)._field_Constant=static__1dc54614a_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1dc547cd9_AsU64(_15553_c))));
						(*_154727_d.alloc)._field_Model=jule::Any((*_154727_d.alloc)._field_Constant, &__jule_any_type19);
						(*_154727_d.alloc)._field_Decl=true;
					}
				}
				else if (_1c4a191e6_IsI32(_15594_prim)) {
					_case_begin_1abce2372:;
					{
						(*_154727_d.alloc)._field_Constant=static__1dc54614a_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1dc547a53_AsI64(_15553_c))));
						(*_154727_d.alloc)._field_Model=jule::Any((*_154727_d.alloc)._field_Constant, &__jule_any_type19);
						(*_154727_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1abce21b8:;
			};
		};
		return;;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _15807_s = _1c4a138e9_Slc((*(_154727_d))._field_Kind);;
	if ((_15807_s == nullptr)) {
		_1c49d12ce_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_154727_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _15867_t = (*(_15807_s))._field_Elem;;
	jule::Ptr<_1c4a17cd8_Prim> _15873_prim = _1c4a12893_Prim(_15867_t.ptr());;
	if (((_15873_prim == nullptr) || ((!(_1c4a19713_IsU8(_15873_prim.ptr()))) && (!(_1c4a191e6_IsI32(_15873_prim.ptr())))))) {
		_1c49d12ce_pushErr(_self_, _154737_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_154727_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return;;
	};
}



inline void _1c49e1036_castInt(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _159427_t, jule::Ptr<_1c49ce024_Data> _159445_d, jule::Ptr<_1c486c19d_Token> _159455_errorToken) {
	if (_1c49ce95e_IsConst(_159445_d.ptr())) {
		jule::Ptr<_1c4a17cd8_Prim> _15964_prim = _1c4a12893_Prim(_159427_t.ptr());;
		{
			
			if (_1dc543ba3_IsSigInt((*(_15964_prim))._field_Kind)) {
				_case_begin_1abcea6dd:;
				{
					_1dc548328_SetI64((*_159445_d.alloc)._field_Constant.ptr(), _1dc547a53_AsI64((*(_159445_d))._field_Constant));
				}
			}
			else if (_1dc543eb1_IsUnsigInt((*(_15964_prim))._field_Kind)) {
				_case_begin_1abcea787:;
				{
					_1dc5485d1_SetU64((*_159445_d.alloc)._field_Constant.ptr(), _1dc547cd9_AsU64((*(_159445_d))._field_Constant));
				}
			}
			_match_end_1abcea666:;
		};
	} else {
		(*(_159445_d))._field_Constant=nullptr;
		(*_159445_d.alloc)._field_untyped=false;
	};
	if ((_1c4a13146_Enum((*(_159445_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c48ce8c5_Enum> _16094_e = _1c4a13146_Enum((*(_159445_d))._field_Kind);;
		if (_1dc544852_IsNum(_1c4a1060a_Str((*((*(_16094_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1c4a12b29_Sptr((*(_159445_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c4a17cd8_Prim> _16164_prim = _1c4a12893_Prim(_159427_t.ptr());;
		if ((!(_1c4a1ac86_IsUintptr(_16164_prim.ptr())))) {
			_1c49d12ce_pushErr(_self_, _159455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_159445_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_159427_t), &__jule_any_type4); __jule_collection; }));
		};
		return;;
	};
	if ((_1c4a12db0_Ptr((*(_159445_d))._field_Kind) != nullptr)) {
		jule::Ptr<_1c4a17cd8_Prim> _16234_prim = _1c4a12893_Prim(_159427_t);;
		if (_1c4a1ac86_IsUintptr(_16234_prim.ptr())) {
		} else if ((!(_1c49d1cc4_isUnsafe(_self_)))) {
			_1c49d12ce_pushErr(_self_, _159455_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _16323_prim = _1c4a12893_Prim((*(_159445_d))._field_Kind);;
	if (((_16323_prim != nullptr) && _1dc544852_IsNum(_1c4a1815c_Str(_16323_prim)))) {
		return;;
	};
	_1c49d12ce_pushErr(_self_, _159455_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_159445_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_159427_t), &__jule_any_type4); __jule_collection; }));
}



inline void _1c49e1454_castNum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _164027_t, jule::Ptr<_1c49ce024_Data> _164045_d, jule::Ptr<_1c486c19d_Token> _164055_errorToken) {
	if (_1c49ce95e_IsConst(_164045_d.ptr())) {
		jule::Ptr<_1c4a17cd8_Prim> _16424_prim = _1c4a12893_Prim(_164027_t.ptr());;
		{
			
			if (_1dc5445bb_IsFloat((*(_16424_prim))._field_Kind)) {
				_case_begin_1abd068c5:;
				{
					_1dc548dea_SetF64((*_164045_d.alloc)._field_Constant.ptr(), _1dc548070_AsF64((*(_164045_d))._field_Constant));
				}
			}
			else if (_1dc543ba3_IsSigInt((*(_16424_prim))._field_Kind)) {
				_case_begin_1abd0696e:;
				{
					_1dc548328_SetI64((*_164045_d.alloc)._field_Constant.ptr(), _1dc547a53_AsI64((*(_164045_d))._field_Constant));
				}
			}
			else if (_1dc543eb1_IsUnsigInt((*(_16424_prim))._field_Kind)) {
				_case_begin_1abd069d5:;
				{
					_1dc5485d1_SetU64((*_164045_d.alloc)._field_Constant.ptr(), _1dc547cd9_AsU64((*(_164045_d))._field_Constant));
				}
			}
			_match_end_1abd06809:;
		};
	} else {
		(*(_164045_d))._field_Constant=nullptr;
		(*_164045_d.alloc)._field_untyped=false;
	};
	if ((_1c4a13146_Enum((*(_164045_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c48ce8c5_Enum> _16574_e = _1c4a13146_Enum((*(_164045_d))._field_Kind);;
		if (_1dc544852_IsNum(_1c4a1060a_Str((*((*(_16574_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c4a17cd8_Prim> _16633_prim = _1c4a12893_Prim((*(_164045_d))._field_Kind);;
	if (((_16633_prim != nullptr) && _1dc544852_IsNum(_1c4a1815c_Str(_16633_prim)))) {
		return;;
	};
	_1c49d12ce_pushErr(_self_, _164055_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_164045_d))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_164027_t.ptr()), &__jule_any_type4); __jule_collection; }));
}



inline void _1c49e1872_castPrim(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _167128_t, jule::Ptr<_1c49ce024_Data> _167146_d, jule::Ptr<_1c486c19d_Token> _167156_errorToken) {
	jule::Ptr<_1c4a17cd8_Prim> _16723_prim = _1c4a12893_Prim(_167128_t.ptr());;
	{
		
		if (_1c4a1b539_IsAny(_16723_prim.ptr())) {
			_case_begin_1abd0ec1e:;
			{
				(*(_167146_d))._field_Constant=nullptr;
				(*_167146_d.alloc)._field_untyped=false;
			}
		}
		else if (_1c4a1b2a3_IsStr(_16723_prim.ptr())) {
			_case_begin_1abd0e8cd:;
			{
				_1c49e0b18_castStr(_self_, _167146_d, _167156_errorToken);
			}
		}
		else if (_1dc54427a_IsInt(_1c4a1815c_Str(_16723_prim.ptr()))) {
			_case_begin_1abd0e944:;
			{
				_1c49e1036_castInt(_self_, _167128_t, _167146_d, _167156_errorToken);
			}
		}
		else if (_1dc544852_IsNum(_1c4a1815c_Str(_16723_prim.ptr()))) {
			_case_begin_1abd0e9aa:;
			{
				_1c49e1454_castNum(_self_, _167128_t, _167146_d, _167156_errorToken);
			}
		}
		else {
			_case_begin_1abd0e867:;
			{
				_1c49d12ce_pushErr(_self_, _167156_errorToken, jule::Str::lit("type @ not supports casting", 27), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str(_167128_t), &__jule_any_type4); __jule_collection; }));
			}
		}
		_match_end_1abd0e801:;
	};
}



inline void _1c49e1bd5_castConstant(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _168933_t, jule::Ptr<_1c49ce024_Data>* _168952_d) {
	if ((((*(_168952_d)) == nullptr) || (!(_1c49ce95e_IsConst((*(_168952_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _16933_prim = _1c4a12893_Prim((*(_168933_t)).ptr());;
	_1c4a0a6c1_castConstByType(&((*(_16933_prim))._field_Kind), _168952_d);
	(*((*(_168952_d))))._field_Model=jule::Any((*((*(_168952_d))))._field_Constant, &__jule_any_type19);
}



inline void _1c49e2103_castTypeEnum(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _169833_t, jule::Ptr<_1c49ce024_Data>* _169852_d, jule::Ptr<_1c486c19d_Token>* _169867_errorToken) {
	jule::I64 _16993_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c4959378_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_169852_d))))._field_Kind), _169833_t, _169867_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _16993_n);;
		_1c49d12ce_pushErr(_self_, (*(_169867_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_169852_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_169833_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_169852_d))))._field_Constant=nullptr;
	(*((*(_169852_d))))._field_untyped=false;
}



inline void _1c49e2521_castTypeEnumT(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _170834_t, jule::Ptr<_1c49ce024_Data>* _170853_d, jule::Ptr<_1c486c19d_Token>* _170868_errorToken) {
	jule::I64 _17093_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1c4959378_checkTypeCompatibility((*(_self_))._field_s, _170834_t, &((*((*(_170853_d))))._field_Kind), _170868_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17093_n);;
		_1c49d12ce_pushErr(_self_, (*(_170868_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_170853_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_170834_t)).ptr()), &__jule_any_type4); __jule_collection; }));
	};
	(*((*(_170853_d))))._field_Constant=nullptr;
	(*((*(_170853_d))))._field_untyped=false;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e29c7_evalCastByTypeNData(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4a1020e_TypeKind> _171839_t, jule::Ptr<_1c49ce024_Data> _171857_d, jule::Ptr<_1c486c19d_Token> _171871_errorToken) {
	if (((_171857_d != nullptr) && (*_171857_d.alloc)._field_Decl)) {
		_1c49d12ce_pushErr(_self_, _171871_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1c49ce442_IsNil(_171857_d)) {
			_case_begin_1abd1c6bb:;
			{
				if ((!(_1c4a120e0_NilCompatible(_171839_t.ptr())))) {
					_1c49d12ce_pushErr(_self_, _171871_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_171839_t), &__jule_any_type4); __jule_collection; }));
				};
				(*_171857_d.alloc)._field_Constant=nullptr;
				(*_171857_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1c4a12893_Prim((*_171857_d.alloc)._field_Kind.ptr()) != nullptr) && _1c4a1b539_IsAny(_1c4a12893_Prim((*(_171857_d))._field_Kind).ptr()))) {
			_case_begin_1abd1c468:;
			{
				if ((_1c4a13146_Enum(_171839_t.ptr()) != nullptr)) {
					_1c49d12ce_pushErr(_self_, _171871_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1c49d1642_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1c4a133cc_TypeEnum(_171839_t.ptr()) != nullptr)) {
					_1c49d12ce_pushErr(_self_, _171871_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_171857_d.alloc)._field_Constant=nullptr;
				(*_171857_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*_171857_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd1c4ce:;
			{
				_1c49e2103_castTypeEnum(_self_, &(_171839_t), &(_171857_d), &(_171871_errorToken));
			}
		}
		else if ((_1c4a133cc_TypeEnum(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1c545:;
			{
				_1c49e2521_castTypeEnumT(_self_, &(_171839_t), &(_171857_d), &(_171871_errorToken));
			}
		}
		else if ((_1c4a12db0_Ptr(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1c5ab:;
			{
				_1c49dea4b_castPtr(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1c4a12b29_Sptr(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1d249:;
			{
				_1c49e0387_castRef(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1c4a138e9_Slc(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1d2b0:;
			{
				_1c49e07a5_castSlc(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1c4a13e16_Struct(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1d326:;
			{
				_1c49dee69_castStruct(_self_, _171839_t, _171857_d, _171871_errorToken);
			}
		}
		else if ((_1c4a12893_Prim(_171839_t.ptr()) != nullptr)) {
			_case_begin_1abd1d38c:;
			{
				_1c49e1872_castPrim(_self_, _171839_t, _171857_d, _171871_errorToken);
				_1c49e1bd5_castConstant(_self_, &(_171839_t), &(_171857_d));
			}
		}
		else {
			_case_begin_1abd1c347:;
			{
				_1c49d12ce_pushErr(_self_, _171871_errorToken, jule::Str::lit("type @ not supports casting", 27), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str(_171839_t.ptr()), &__jule_any_type4); __jule_collection; }));
				_171857_d=nullptr;
			}
		}
		_match_end_1abd1c2ae:;
	};
	if ((_171857_d == nullptr)) {
		return nullptr;;
	};
	(*_171857_d.alloc)._field_Mutable=((*_171857_d.alloc)._field_Mutable || (!(_1c4a11ac3_Mutable((*_171857_d.alloc)._field_Kind.ptr()))));
	if (((!((*_171857_d.alloc)._field_Decl)) && ((_1c4a13146_Enum((*(_171857_d))._field_Kind) == nullptr) || (!(_1c4a1094b_Equal((*((*(_1c4a13146_Enum((*(_171857_d))._field_Kind)))._field_Kind))._field_Kind, _171839_t)))))) {
		_1c4a099ab_applyCastKind(&(_171857_d), &(_171839_t), &(_171871_errorToken));
		(*((*_171857_d.alloc)._field_Model.cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93)))._field_Token=_171871_errorToken;
	} else {
		(*_171857_d.alloc)._field_Kind=_171839_t;
	};
	(*_171857_d.alloc)._field_Decl=false;
	(*_171857_d.alloc)._field_Lvalue=false;
	(*_171857_d.alloc)._field_untyped=false;
	if (_1c49ce95e_IsConst(_171857_d)) {
		(*((*_171857_d.alloc)._field_Constant))._field_Kind=(*(_1c4a12893_Prim(_171839_t.ptr())))._field_Kind;
	};
	return _171857_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e2e7d_evalCastT(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _179131_t, jule::Ptr<_1c4886aad_Expr>* _179150_e, jule::Ptr<_1c486c19d_Token>* _179165_et) {
	jule::Ptr<_1c4a1020e_TypeKind> _17927_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_17927_prefix;
	});;
	if ((_1c4a138e9_Slc((*(_179131_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_179150_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1abd2d3e1:;
				{
					(*_self_.alloc)._field_prefix=(*(_179131_t));
				}
			}
			_match_end_1abd2d37a:;
		};
	};
	jule::Ptr<_1c49ce024_Data> _18017_d = _1c49edede_evalExpr(_self_, (*(_179150_e)));;
	if (((_18017_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18017_d;;
	};
	return _1c49e29c7_evalCastByTypeNData(_self_, (*(_179131_t)), _18017_d, (*(_179165_et)));;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e32be_evalCast(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488941d_CastExpr> _180829_c) {
	jule::Ptr<_1c4a173d1_TypeSymbol> _18097_t = _1c48c1224_buildType((*(_180829_c))._field_Kind);;
	jule::Bool _18103_ok = _1c4956a7e_checkType((*(_self_))._field_s, &(_18097_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18103_ok))) {
		return nullptr;;
	};
	return _1c49e2e7d_evalCastT(_self_, &((*(_18097_t))._field_Kind), &((*_180829_c.alloc)._field_Expr), &((*((*_180829_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e3610_evalNsSelection(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48897e7_NsSelectionExpr> _181731_s) {
	jule::Str _18183_path = _1c4a2bc53_buildLinkPathByTokens(&((*(_181731_s))._field_Ns));;
	jule::Ptr<_1c492cd1e_ImportInfo> _18197_imp = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2d0d9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>>((void*)__jule_anon_1abd333e6, jule::Ptr<__jule_anon_1abd333e6_ctx>::make(__jule_anon_1abd333e6_ctx{._181731_s=_181731_s,._18183_path=_18183_path}).as<jule::Uintptr>(), __jule_anon_1abd333e6_ctx_handler));;
	if ((_18197_imp == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*(_181731_s))._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18183_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18317_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18197_imp, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data1);
	;
	_1c49d1a3d_disallowBuiltin(_self_);
	jule::Any _18367_def = _1c49d404b_getDef(_self_, &((*((*_181731_s.alloc)._field_Ident))._field_Kind), false);;
	_1c49d1840_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18317_lookup;
	jule::Ptr<_1c49ce024_Data> _18397_d = _1c49d8209_evalDef(_self_, &(_18367_def), (*_181731_s.alloc)._field_Ident);;
	return _18397_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e3ab6_evalStructLitExplicit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48a6407_StructIns> _184342_s, jule::Slice<jule::Ptr<_1c4886aad_Expr>> _18447_exprs, jule::Ptr<_1c486c19d_Token> _184427_errorToken) {
	jule::Bool _18453_ok = _1c495243c_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_184342_s))._field_Decl))._field_Generics.len(), (*_184342_s.alloc)._field_Generics.len(), _184427_errorToken);;
	if ((!(_18453_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_184342_s.alloc)._field_Decl))) {
		_1c49d12ce_pushErr(_self_, _184427_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_184342_s))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
	};
	_1abcc0dde_pushReference(_self_, &(_184342_s));
	_1c49d6405_checkDeprecated(_self_, &((*(*(_184342_s))._field_Decl.alloc)._field_Directives), _184427_errorToken);
	_1c49c2105_structLitChecker _18587_slc = _1c49c2105_structLitChecker{._field_e=_self_, ._field_errorToken=_184427_errorToken, ._field_s=_184342_s, ._field_args=jule::Slice<jule::Ptr<_1c48ab264_StructArgExprModel>>(nullptr)};;
	_1c49c3876_check(&_18587_slc, &(_18447_exprs));
	jule::Ptr<_1c49ce024_Data> _18657_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_184342_s, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c48ab60a_StructLitExprModel>(_1c48ab60a_StructLitExprModel{._field_Strct=_184342_s, ._field_Args=_18587_slc._field_args}), &__jule_any_type95), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if ((*(*(_184342_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_18657_d))._field_Kind))._field_BindIdent=(*(*(_184342_s))._field_Decl.alloc)._field_Ident;
	};
	return _18657_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e3e07_evalStructLit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488bb07_StructLit> _188134_lit) {
	jule::Ptr<_1c4a173d1_TypeSymbol> _18827_t = _1c48c1224_buildType((*(_188134_lit))._field_Kind);;
	jule::Bool _18833_ok = _1c4956a7e_checkType((*(_self_))._field_s, &(_18827_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18833_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c48a6407_StructIns> _18887_s = _1c4a13e16_Struct((*(_18827_t))._field_Kind.ptr());;
	if ((_18887_s == nullptr)) {
		if ((_1c4a12b29_Sptr((*(_18827_t))._field_Kind) != nullptr)) {
			_18887_s=_1c4a13e16_Struct((*(_1c4a12b29_Sptr((*(_18827_t))._field_Kind)))._field_Elem.ptr());
			if ((_18887_s != nullptr)) {
				goto _julec_label_1abd417bc;
			};
		};
		_1c49d12ce_pushErr(_self_, (*((*_188134_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1abd417bc:;
	jule::Ptr<_1c49ce024_Data> _19017_d = _1c49e3ab6_evalStructLitExplicit(_self_, _18887_s, (*_188134_lit.alloc)._field_Exprs, (*(*(_188134_lit))._field_Kind.alloc)._field_Token);;
	if ((_1c4a12b29_Sptr((*(_18827_t))._field_Kind) != nullptr)) {
		jule::Ptr<_1c48ab60a_StructLitExprModel> _19038_model = (*(_19017_d))._field_Model.cast_ptr<_1c48ab60a_StructLitExprModel>(&__jule_any_type95);;
		_1c4a080d6_makeStructLitAlloc(&(_19017_d), &(_19038_model));
	};
	return _19017_d;;
}



inline _1c4a220bc_typeChecker _1c49e418d_typeChecker(_1c49d0c4b_eval* _self_) {
	return _1c495582a_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e44ce_evalType(_1c49d0c4b_eval* _self_, jule::Ptr<_1c4882779_TypeDecl> _191328_t) {
	jule::Ptr<_1c4a173d1_TypeSymbol> _19147_tk = _1c48c1224_buildType(_191328_t);;
	jule::Bool _19153_ok = _1c4956a7e_checkType((*(_self_))._field_s, &(_19147_tk), (*(_self_))._field_lookup);;
	if ((!(_19153_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*(_19147_tk))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19147_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline void _1c49e4842_callTypeFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _192632_fc, jule::Ptr<_1c49ce024_Data>* _192654_d) {
	if (((*((*(_192632_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
	} else if (((*((*(_192632_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*((*(_192632_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_192654_d))))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	} else if ((*((*(_192632_fc))))._field_IsCo) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_192654_d))=nullptr;
		return;;
	} else if (((*((*(_192632_fc))))._field_Exception != nullptr)) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*(_192632_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_192654_d))=nullptr;
		return;;
	};
	if (((*((*(_192632_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1c4886aad_Expr> _19428_arg = (*((*(_192632_fc))))._field_Args[0LL];;
		(*(_192654_d))=_1c49e2e7d_evalCastT(_self_, &((*((*(_192654_d))))._field_Kind), &(_19428_arg), &((*(_19428_arg))._field_Token));
		return;;
	};
	if (((*(_192654_d)) != nullptr)) {
		(*((*(_192654_d))))._field_Decl=false;
	};
}



inline void _1c49e4ba5_callBuiltinFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _195235_fc, jule::Ptr<_1c49ce024_Data>* _195257_d) {
	if ((!(_1c488ab8e_Unhandled((*(_195235_fc)).ptr())))) {
		_1c49d12ce_pushErr(_self_.ptr(), (*((*(_195235_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_195257_d))=(*(_1c4a13b80_Fn((*((*(_195257_d))))._field_Kind.ptr())))._field_caller(&(_self_), _195235_fc, _195257_d);
	if (((*(_195257_d)) == nullptr)) {
		return;;
	};
	(*((*(_195257_d))))._field_Mutable=true;
}



inline void _1c49e5018_checkFnOfConcurrentCall(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _196440_f, jule::Ptr<_1c486c19d_Token> _196451_errorToken) {
	if (_1c49d1cc4_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_196440_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abd53e72:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> *_196810_p = it;
			{
				if (_1c48b73b3_IsSelf((*((*(_196810_p))))._field_Decl.ptr())) {
					if ((!(_1c48b7649_IsRef((*((*(_196810_p))))._field_Decl)))) {
						_1c49d12ce_pushErr(_self_, _196451_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1c49d1642_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_196810_p))))._field_Decl.alloc)._field_Reference) {
					_1c49d12ce_pushErr(_self_, _196451_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1c49d1642_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1abd53e72:;
			++it;
			goto _iter_begin_1abd53e72;
		}
		_iter_end_1abd53e72:;
	};
}



inline void _1c49e5436_processExceptionalHandler(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48bb719_FnIns>* _198346_f, jule::Ptr<_1c488a7d7_FnCallExpr>* _198362_fc, jule::Ptr<_1c49ce024_Data>* _198384_d) {
	jule::Bool _19843_resultNeeded = ((!(_1c48b8bde_IsVoid((*((*(_198346_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1c4913244_scopeChecker> _198511_csc = nullptr;;
	jule::Ptr<_1c490ac86_Scope> _198611_ch = nullptr;;
	jule::Ptr<_1c48ac83c_FnCallExprModel> _19887_model = (*((*(_198384_d))))._field_Model.cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1c4913244_scopeChecker> _19927_sc = (*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0);;
	_198511_csc=_1c4925311_newChildChecker(_19927_sc);
	if (_19843_resultNeeded) {
		(*(_198511_csc))._field_result=(*(_198346_f));
	};
	_198611_ch=_1c4918667_getChild(_19927_sc);
	(*((*((*(_198362_fc))))._field_Exception))._field_Parent=(*_19927_sc.alloc)._field_tree;
	(*((*_198511_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_198511_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c4a0845a_buildErrorVar(&(_198611_ch), _198362_fc); __jule_collection; }));
	_1c4918a85_checkChildSsc(_19927_sc, &((*((*(_198362_fc))))._field_Exception), &(_198611_ch), &(_198511_csc));
	(*(_19887_model))._field_Assigned=_19843_resultNeeded;
	(*_19887_model.alloc)._field_Except=_198611_ch;
	if ((_19843_resultNeeded && ((*_198511_csc.alloc)._field_result != nullptr))) {
		_1c49d12ce_pushErr(_self_, (*((*(_198362_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1c49e5799_callFn(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr>* _201028_fc, jule::Ptr<_1c49ce024_Data>* _201050_d) {
	jule::Ptr<_1c48bb719_FnIns> _20117_f = _1c4a13b80_Fn((*((*(_201050_d))))._field_Kind.ptr());;
	if (_1c48bcbd2_IsBuiltin(_20117_f.ptr())) {
		_1c49e4ba5_callBuiltinFn(_self_, _201028_fc, _201050_d);
		return;;
	};
	if ((_1c49d205a_isGlobal(_self_) && (*((*_20117_f.alloc)._field_Decl))._field_Exceptional)) {
		_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_201050_d))=nullptr;
		return;;
	};
	if (((!(_1c48b8e75_IsMethod((*(_20117_f))._field_Decl))) && _1c4a2ad2e_hasDirective(&((*(*(_20117_f))._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_201050_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_201050_d))))._field_Mutable)) && _1c48b8e75_IsMethod((*(_20117_f))._field_Decl)) && (!((*(*(_20117_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20117_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1c48ab60a_StructLitExprModel> _20375_lit = _1c4a0b914_isLitBased(&((*((*(_201050_d))))._field_Model));;
			if ((_20375_lit == nullptr)) {
				_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1c49c1b1b_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20375_lit));
			};
		};
	} else if (((!(_1c49d1cc4_isUnsafe(_self_))) && (*(*(_20117_f))._field_Decl.alloc)._field_Unsafety)) {
		_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _20497_dynamicAnnotation = ((((*(*(_20117_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20117_f.alloc)._field_Generics.len() == 0LL)) && ((*_20117_f.alloc)._field_Params.len() > 0LL));;
	if (_20497_dynamicAnnotation) {
		(*_20117_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc((*(*(_20117_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a0d828_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20117_f.alloc)._field_Generics.len() != (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len())) {
		_1c495243c_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20117_f))._field_Decl.alloc)._field_Generics.len(), (*_20117_f.alloc)._field_Generics.len(), (*((*(_201028_fc))))._field_Token);
		(*(_201050_d))=nullptr;
		return;;
	};
	jule::Ptr<_1c494d290_sema> _20587_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20117_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20117_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20587_old != (*_self_.alloc)._field_s)) {
			(*(_20587_old))._field_errors=jule::append((*_20587_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20587_old;
	});;
	_1c49be1bd_fnCallArgChecker _20717_fcac = _1c49be1bd_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_201028_fc))))._field_Args, ._field_errorToken=(*((*(_201028_fc))))._field_Token, ._field_f=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_dynamicAnnotation=_20497_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)};;
	if ((!(_20497_dynamicAnnotation))) {
		if ((!((*_20117_f.alloc)._field_reloaded))) {
			jule::Bool _20805_ok = _1c495bd92_reloadFnInsTypes((*(_self_))._field_s, _20117_f);;
			(*_20117_f.alloc)._field_reloaded=true;
			if ((!(_20805_ok))) {
				(*(_201050_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1c48bb719_FnIns> _20878_existInstance = _1c48ba2d9_appendInstance((*(_20117_f))._field_Decl, &(_20117_f));;
		if ((_20878_existInstance != nullptr)) {
			_20117_f=_20878_existInstance;
		};
	} else if ((!(_1c495a5ee_buildFnNonGenericTypeKinds((*(_self_))._field_s, &(_20117_f), &(_20717_fcac._field_ignored))))) {
		(*(_201050_d))=nullptr;
		return;;
	};
	_20717_fcac._field_f=_20117_f;
	jule::Bool _20987_ok = false;;
	if (((*(*(_20117_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20587_old, (*_self_.alloc)._field_s);
		_20987_ok=_1c49c17a8_check(&_20717_fcac);
		std::swap(_20587_old, (*_self_.alloc)._field_s);
	} else {
		_20987_ok=_1c49c17a8_check(&_20717_fcac);
	};
	if (_20497_dynamicAnnotation) {
		if ((!(_20987_ok))) {
			(*(_201050_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c49dcb48_checkGenericFn(_self_, &(_20117_f), &((*((*(_201028_fc))))._field_Token), &((*((*(_201050_d))))._field_Model));
			_20987_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_20987_ok))) {
			(*(_201050_d))=nullptr;
			return;;
		};
	};
	jule::Any _21197_callModel = (*((*(_201050_d))))._field_Model;;
	if (_1c48b8bde_IsVoid((*(_20117_f))._field_Decl)) {
		(*(_201050_d))=_1c4a09bba_buildVoidData();
	} else {
		(*((*(_201050_d))))._field_Kind=(*_20117_f.alloc)._field_Result;
		(*((*(_201050_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1c48ac83c_FnCallExprModel> _21287_model = jule::new_ptr<_1c48ac83c_FnCallExprModel>(_1c48ac83c_FnCallExprModel{._field_Token=(*((*(_201028_fc))))._field_Token, ._field_Func=_20117_f, ._field_IsCo=(*((*(_201028_fc))))._field_IsCo, ._field_Expr=_21197_callModel, ._field_Args=_20717_fcac._field_argModels, ._field_Except=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_201050_d))))._field_Model=jule::Any(_21287_model, &__jule_any_type33);
	(*((*(_201050_d))))._field_Mutable=true;
	if ((*(*(_20117_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_201028_fc))))._field_IsCo) {
			_1c4950e0d_pushErr((*(_self_))._field_s, (*((*(_201028_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1c4951271_pushSuggestion((*(_self_))._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1c488ab8e_Unhandled((*(_201028_fc)).ptr())) {
				_case_begin_1abd79d77:;
				{
					_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1c49d1642_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1c488ae25_Ignored((*(_201028_fc)).ptr())) {
				_case_begin_1abd79a69:;
				{
					goto _match_end_1abd787b0;
				}
			}
			else {
				_case_begin_1abd78848:;
				{
					_1c49e5436_processExceptionalHandler(_self_, &(_20117_f), _201028_fc, _201050_d);
				}
			}
			_match_end_1abd787b0:;
		};
	} else if ((!(_1c488ab8e_Unhandled((*(_201028_fc)).ptr())))) {
		_1c49d12ce_pushErr(_self_, (*((*(_201028_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_201028_fc))))._field_IsCo) {
		_1c49e5018_checkFnOfConcurrentCall(_self_, &((*(_21287_model))._field_Func), (*((*(_201028_fc))))._field_Token);
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e5ada_evalFnCall(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a7d7_FnCallExpr> _216331_fc) {
	jule::Ptr<_1c4a1020e_TypeKind> _21647_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21647_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_216331_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abd7e398:;
			{
				if ((*((*((*(_216331_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _21ddd516c_builtinCallerError(&(_self_), &(_216331_fc));;
				};
			}
		}
		_match_end_1abd7e343:;
	};
	jule::Ptr<_1c49ce024_Data> _21777_d = _1c49ed1ca_evalExprKind(_self_, (*((*(_216331_fc))._field_Expr))._field_Kind);;
	if ((_21777_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_21777_d))._field_Decl) {
		_1c49e4842_callTypeFn(_self_, &(_216331_fc), &(_21777_d));
		return _21777_d;;
	};
	if ((_1c4a13b80_Fn((*(_21777_d))._field_Kind.ptr()) == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*_216331_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1c49e5799_callFn(_self_, &(_216331_fc), &(_21777_d));
	return _21777_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e5ed6_evalEnumStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ce8c5_Enum> _219634_enm, jule::Ptr<_1c486c19d_Token> _219650_ident) {
	jule::Ptr<_1c48cdd58_EnumItem> _21977_item = _1c48d04ec_FindItem(_219634_enm.ptr(), (*(_219650_ident))._field_Kind);;
	if ((_21977_item == nullptr)) {
		_1c49d12ce_pushErr(_self_, _219650_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_219634_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_219650_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _1c4a0b64a_evalEnumStatic(&(_219634_enm), &(_21977_item), &(_219650_ident));;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e63d2_evalTypeEnumStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d10d0_TypeEnum> _220438_enm, jule::Ptr<_1c486c19d_Token> _220454_ident) {
	jule::Ptr<_1c48d0a08_TypeEnumItem> _22057_item = _1c48d1bc4_FindItem(_220438_enm.ptr(), (*(_220454_ident))._field_Kind);;
	if ((_22057_item == nullptr)) {
		_1c49d12ce_pushErr(_self_, _220454_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_220438_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_220454_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1c4a13146_Enum((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd87923:;
			{
				return _1c49d48cb__evalEnum(_self_, _1c4a13146_Enum((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd85ba7:;
			{
				return _1c49d5118__evalTypeEnum(_self_, _1c4a133cc_TypeEnum((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else if ((_1c4a13e16_Struct((*((*(_22057_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abd85c1d:;
			{
				return _1c49d5855__evalStruct(_self_, _1c4a13e16_Struct((*((*(_22057_item))._field_Kind))._field_Kind));;
			}
		}
		else {
			_case_begin_1abd85b41:;
			{
				jule::Ptr<_1c49ce024_Data> _22188_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*((*(_22057_item))._field_Kind))._field_Kind, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
				(*(_22188_d))._field_Model=jule::Any((*_22188_d.alloc)._field_Kind, &__jule_any_type84);
				return _22188_d;;
			}
		}
		_match_end_1abd85d3e:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e67cd_evalStructStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48a6407_StructIns> _222736_s, jule::Ptr<_1c486c19d_Token> _222751_ident) {
	jule::Ptr<_1c49ce024_Data> _22287_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	;
	jule::Ptr<_1c48b8738_Fn> _22327_method = _1c48a74a2_FindMethod(_222736_s.ptr(), (*(_222751_ident))._field_Kind, true);;
	if ((_22327_method != nullptr)) {
		if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22327_method.alloc)._field_Public, (*_22327_method.alloc)._field_Token)))) {
			_1c49d12ce_pushErr(_self_, _222751_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_222751_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
			_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1c48bb719_FnIns> _22398_ins = _1c48b9ecb_instance(_22327_method);;
		(*(_22398_ins))._field_Owner=_222736_s;
		_1aab0990a_pushReference(_self_, &(_22398_ins));
		(*_22287_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48b0851_StructStaticIdentExprModel>(_1c48b0851_StructStaticIdentExprModel{._field_Structure=_222736_s, ._field_Expr=(*_22287_d.alloc)._field_Model, ._field_Method=_22398_ins}), &__jule_any_type96);
		(*_22287_d.alloc)._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22398_ins, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)});
		return _22287_d;;
	};
	jule::Ptr<_1c49715b0_Var> _22537_sttc = _1c48a7b34_FindStatic(_222736_s, (*_222751_ident.alloc)._field_Kind);;
	if ((_22537_sttc != nullptr)) {
		return _1c49d7912_evalVar(_self_, _22537_sttc, _222751_ident);;
	};
	_1c49d12ce_pushErr(_self_, _222751_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_222736_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_222751_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e6c84_evalTraitSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _226237_d, jule::Ptr<_1c48cc1b9_Trait> _226251_trt, jule::Ptr<_1c486c19d_Token> _226268_ident) {
	jule::Ptr<_1c48b8738_Fn> _22637_f = _1c48ccd9b_FindMethod(_226251_trt.ptr(), (*(_226268_ident))._field_Kind);;
	if ((_22637_f == nullptr)) {
		_1c49d12ce_pushErr(_self_, _226268_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226251_trt.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_226268_ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c48b9ecb_instance(_22637_f), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c48aeb19_TraitSubIdentExprModel>(_1c48aeb19_TraitSubIdentExprModel{._field_Token=_226268_ident, ._field_Expr=(*(_226237_d))._field_Model, ._field_Method=_22637_f, ._field_Trt=_226251_trt}), &__jule_any_type97), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e72e5_evalStructSubIdentField(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _228244_d, jule::Ptr<_1c48a6407_StructIns>* _228259_s, jule::Ptr<_1c486c19d_Token>* _228279_tok, jule::Ptr<_1c48a5857_FieldIns>* _228297_f) {
	jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _22837_model = jule::new_ptr<_1c48b04aa_StructSubIdentExprModel>(_1c48b04aa_StructSubIdentExprModel{._field_Token=(*(_228279_tok)), ._field_Expr=jule::new_ptr<_1c49ce024_Data>((*((*(_228244_d))))), ._field_Method=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Field=(*(_228297_f)), ._field_Owner=(*(_228259_s))});;
	(*((*(_228244_d))))._field_Model=jule::Any(_22837_model, &__jule_any_type98);
	(*((*(_228244_d))))._field_Kind=(*((*(_228297_f))))._field_Kind;
	(*((*(_228244_d))))._field_Lvalue=true;
	if (((*((*((*(_228297_f))))._field_Decl))._field_Mutable && (!((*((*(_228244_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
				_case_begin_1abd98dc9:;
				{
					jule::Ptr<_1c4913244_scopeChecker> _22985_scope = _1c49168a7_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0));;
					(*((*(_228244_d))))._field_Mutable=(((*(_22985_scope))._field_owner != nullptr) && ((*(*(_22985_scope))._field_owner.alloc)._field_Owner == (*(_228259_s))));
				}
			}
			_match_end_1abd98d74:;
		};
	};
	return (*(_228244_d));;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e7856_evalStructSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _230538_d, jule::Ptr<_1c48a6407_StructIns> _230552_s, jule::Ptr<_1c4889bc1_SubIdentExpr> _230571_si, jule::Bool _230590_ref) {
	jule::Ptr<_1c48a5857_FieldIns> _23067_f = _1c48a77e3_FindField(_230552_s.ptr(), (*((*(_230571_si))._field_Ident))._field_Kind);;
	if ((_23067_f != nullptr)) {
		if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23067_f.alloc)._field_Decl))._field_Public, (*(*(_23067_f))._field_Decl.alloc)._field_Token)))) {
			_1c49d12ce_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23067_f))._field_Decl.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
			_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1c49e72e5_evalStructSubIdentField(_self_, &(_230538_d), &(_230552_s), &((*_230571_si.alloc)._field_Ident), &(_23067_f));;
	};
	;
	jule::Ptr<_1c48b8738_Fn> _23167_m = _1c48a74a2_FindMethod(_230552_s, (*(*(_230571_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23167_m == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_230552_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*(*(_230571_si))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s, (*(_23167_m))._field_Public, (*(_23167_m))._field_Token)))) {
		_1c49d12ce_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23167_m))._field_Ident, &__jule_any_type4); __jule_collection; }));
		_1c49d1642_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1c48b7649_IsRef((*(_23167_m))._field_Params[0LL].ptr()) && (!(_230590_ref)))) {
		_1c49d12ce_pushErr(_self_, (*_230571_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1c49d6405_checkDeprecated(_self_, &((*(_23167_m))._field_Directives), (*_230571_si.alloc)._field_Ident);
	jule::Ptr<_1c48bb719_FnIns> _23327_ins = _1c48b9ecb_instance(_23167_m);;
	(*(_23327_ins))._field_Owner=_230552_s;
	_1aab0990a_pushReference(_self_, &(_23327_ins));
	jule::Ptr<_1c49ce024_Data> _23357_model = jule::new_ptr<_1c49ce024_Data>((*(_230538_d)));;
	(*_230538_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48b04aa_StructSubIdentExprModel>(_1c48b04aa_StructSubIdentExprModel{._field_Token=(*_230571_si.alloc)._field_Ident, ._field_Expr=_23357_model, ._field_Method=_23327_ins, ._field_Field=jule::Ptr<_1c48a5857_FieldIns>(nullptr), ._field_Owner=_230552_s}), &__jule_any_type98);
	(*_230538_d.alloc)._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23327_ins, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)});
	return _230538_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49e7b97_evalIntTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _234633_ident) {
	;
	{
		auto &_match_expr{ (*(_234633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdacc56:;
			{
				jule::Ptr<_1dc54537a_Const> _23508_c = static__1dc5457ed_NewI64(_1dc5402dc_MaxI(jule::Str::lit("int", 3)));;
				(*(_23508_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd16da_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23508_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_23508_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdad75c:;
			{
				jule::Ptr<_1dc54537a_Const> _23598_c = static__1dc5457ed_NewI64(static_cast<jule::I64>(_1dc5408e7_Min(jule::Str::lit("int", 3))));;
				(*(_23598_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd16da_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23598_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_23598_c});;
			}
		}
		else {
			_case_begin_1abdac409:;
			{
				_1c49d12ce_pushErr(_self_, _234633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type4); (*it++) = jule::Any((*(_234633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdac89e:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e7ed8_evalUintTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _237334_ident) {
	;
	{
		auto &_match_expr{ (*(_237334_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdb1a3a:;
			{
				jule::Ptr<_1dc54537a_Const> _23778_c = static__1dc545ab7_NewU64(_1dc5405a6_MaxU(jule::Str::lit("uint", 4)));;
				(*(_23778_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd1322_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23778_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_23778_c});;
			}
		}
		else {
			_case_begin_1abdb1430:;
			{
				_1c49d12ce_pushErr(_self_, _237334_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4); (*it++) = jule::Any((*(_237334_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdb1683:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e8329_evalI8TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _239132_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_239132_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdb4c4c:;
			{
				jule::Ptr<_1dc54537a_Const> _23978_c = static__1dc5457ed_NewI64(127LL);;
				(*(_23978_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd192c_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23978_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_23978_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdb5753:;
			{
				jule::Ptr<_1dc54537a_Const> _24068_c = static__1dc5457ed_NewI64(-128LL);;
				(*(_24068_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd192c_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24068_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24068_c});;
			}
		}
		else {
			_case_begin_1abdb4499:;
			{
				_1c49d12ce_pushErr(_self_, _239132_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_239132_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdb48b7:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e866a_evalI16TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _242033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_242033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdb901a:;
			{
				jule::Ptr<_1dc54537a_Const> _24268_c = static__1dc5457ed_NewI64(32767LL);;
				(*(_24268_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd1bc4_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24268_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24268_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdb9a21:;
			{
				jule::Ptr<_1dc54537a_Const> _24358_c = static__1dc5457ed_NewI64(-32768LL);;
				(*(_24358_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd1bc4_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24358_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24358_c});;
			}
		}
		else {
			_case_begin_1abdb8767:;
			{
				_1c49d12ce_pushErr(_self_, _242033_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_242033_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdb8b85:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e89ab_evalI32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _244933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_244933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdbd2d8:;
			{
				jule::Ptr<_1dc54537a_Const> _24558_c = static__1dc5457ed_NewI64(2147483647LL);;
				(*(_24558_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd1e7c_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24558_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24558_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdbdcde:;
			{
				jule::Ptr<_1dc54537a_Const> _24648_c = static__1dc5457ed_NewI64(-2147483648LL);;
				(*(_24648_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd1e7c_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24648_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24648_c});;
			}
		}
		else {
			_case_begin_1abdbca35:;
			{
				_1c49d12ce_pushErr(_self_, _244933_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_244933_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdbce53:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e8cec_evalI64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _247833_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_247833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdc25a6:;
			{
				jule::Ptr<_1dc54537a_Const> _24848_c = static__1dc5457ed_NewI64(jule::MAX_I64);;
				(*(_24848_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd2235_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24848_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24848_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdc30ac:;
			{
				jule::Ptr<_1dc54537a_Const> _24938_c = static__1dc5457ed_NewI64(jule::MIN_I64);;
				(*(_24938_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd2235_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24938_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_24938_c});;
			}
		}
		else {
			_case_begin_1abdc1d03:;
			{
				_1c49d12ce_pushErr(_self_, _247833_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_247833_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdc2221:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e913d_evalU8TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _250732_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_250732_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdc649a:;
			{
				jule::Ptr<_1dc54537a_Const> _25128_c = static__1dc545ab7_NewU64(255LLU);;
				(*(_25128_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd24dd_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25128_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25128_c});;
			}
		}
		else {
			_case_begin_1abdc5ba3:;
			{
				_1c49d12ce_pushErr(_self_, _250732_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4); (*it++) = jule::Any((*(_250732_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdc609e:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e947e_evalU16TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _252633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_252633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdc9228:;
			{
				jule::Ptr<_1dc54537a_Const> _25318_c = static__1dc545ab7_NewU64(65535LLU);;
				(*(_25318_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd2796_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25318_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25318_c});;
			}
		}
		else {
			_case_begin_1abdc8931:;
			{
				_1c49d12ce_pushErr(_self_, _252633_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4); (*it++) = jule::Any((*(_252633_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdc8d2c:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e97c0_evalU32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _254533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdcbea6:;
			{
				jule::Ptr<_1dc54537a_Const> _25508_c = static__1dc545ab7_NewU64(4294967295LLU);;
				(*(_25508_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd2a4e_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25508_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25508_c});;
			}
		}
		else {
			_case_begin_1abdcb6ae:;
			{
				_1c49d12ce_pushErr(_self_, _254533_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_254533_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdcbaaa:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e9b11_evalU64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _256433_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdcec34:;
			{
				jule::Ptr<_1dc54537a_Const> _25698_c = static__1dc545ab7_NewU64(jule::MAX_U64);;
				(*(_25698_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd3038_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25698_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25698_c});;
			}
		}
		else {
			_case_begin_1abdce43c:;
			{
				_1c49d12ce_pushErr(_self_, _256433_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_256433_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdce838:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49e9e52_evalF32TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _258333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_258333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdd31cc:;
			{
				jule::Ptr<_1dc54537a_Const> _25908_c = static__1dc546414_NewF64(340282346638528860000000000000000000000.0);;
				(*(_25908_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd327a_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25908_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25908_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdd3bd3:;
			{
				jule::Ptr<_1dc54537a_Const> _25998_c = static__1dc546414_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_25998_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd327a_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25998_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_25998_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1abdd3c49:;
			{
				jule::Ptr<_1dc54537a_Const> _26088_c = static__1dc546414_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26088_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd327a_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26088_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_26088_c});;
			}
		}
		else {
			_case_begin_1abdd29a1:;
			{
				_1c49d12ce_pushErr(_self_, _258333_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4); (*it++) = jule::Any((*(_258333_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdd2d25:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49ea293_evalF64TypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c486c19d_Token> _262233_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1abdd8974:;
			{
				jule::Ptr<_1dc54537a_Const> _26298_c = static__1dc546414_NewF64(jule::MAX_F64);;
				(*(_26298_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd3489_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26298_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_26298_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1abdd947a:;
			{
				jule::Ptr<_1dc54537a_Const> _26388_c = static__1dc546414_NewF64(jule::MIN_F64);;
				(*(_26388_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd3489_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26388_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_26388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1abdd94e1:;
			{
				jule::Ptr<_1dc54537a_Const> _26478_c = static__1dc546414_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26478_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=true, ._field_Kind=_21ddd3489_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26478_c, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_26478_c});;
			}
		}
		else {
			_case_begin_1abdd8248:;
			{
				_1c49d12ce_pushErr(_self_, _262233_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4); (*it++) = jule::Any((*(_262233_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdd85bc:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49ea68e_evalPrimStatic(_1c49d0c4b_eval* _self_, jule::Str _266130_kind, jule::Ptr<_1c486c19d_Token> _266141_ident) {
	{
		auto &_match_expr{ _266130_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1abddd160:;
			{
				return _1c49e7b97_evalIntTypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1abdddb11:;
			{
				return _1c49e7ed8_evalUintTypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1abdddb77:;
			{
				return _1c49e8329_evalI8TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1abddcd41:;
			{
				return _1c49e866a_evalI16TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1abddcda7:;
			{
				return _1c49e89ab_evalI32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1abddce1d:;
			{
				return _1c49e8cec_evalI64TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1abddce84:;
			{
				return _1c49e913d_evalU8TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1abdddc65:;
			{
				return _1c49e947e_evalU16TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1abdddccb:;
			{
				return _1c49e97c0_evalU32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1abdddd42:;
			{
				return _1c49e9b11_evalU64TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1abdddda8:;
			{
				return _1c49e9e52_evalF32TypeStatic(_self_, _266141_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1abddde1e:;
			{
				return _1c49ea293_evalF64TypeStatic(_self_, _266141_ident);;
			}
		}
		else {
			_case_begin_1abdd96bc:;
			{
				_1c49d12ce_pushErr(_self_, _266141_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_266130_kind, &__jule_any_type4); (*it++) = jule::Any((*(_266141_ident))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abdd9744:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49eaa8a_evalTypeStatic(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _269334_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _269348_si) {
	{
		
		if ((_1c4a12893_Prim((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde330d:;
			{
				return _1c49ea68e_evalPrimStatic(_self_, _1c4a1815c_Str(_1c4a12893_Prim((*(_269334_d))._field_Kind).ptr()), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1c4a13146_Enum((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde4111:;
			{
				return _1c49e5ed6_evalEnumStatic(_self_, _1c4a13146_Enum((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde4177:;
			{
				return _1c49e63d2_evalTypeEnumStatic(_self_, _1c4a133cc_TypeEnum((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else if ((_1c4a13e16_Struct((*(_269334_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde2eab:;
			{
				return _1c49e67cd_evalStructStatic(_self_, _1c4a13e16_Struct((*(_269334_d))._field_Kind), (*(_269348_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1abde2e45:;
			{
				_1c49d12ce_pushErr(_self_, (*(_269348_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_269334_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abde2d8a:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1abdeae1a_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48e3ae8_comptimeTypeInfo>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48e9d30_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe0056d_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d4c93_comptimeStructField>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48d6679_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe04b7c_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48db30a_comptimeEnumField>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48dc3c7_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe092d0_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ddc9c_comptimeParam>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48e0c38_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe0da32_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48d804e_comptimeStatic>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48d99ac_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe13141_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ea10a_comptimeValue>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c48ec67e_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}

inline jule::Ptr<_1c49ce024_Data> _1abe17750_comptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c48ee054_comptimeFile>* _270954_ct, jule::Ptr<_1c49ce024_Data>* _270974_d, jule::Ptr<_1c4889bc1_SubIdentExpr>* _270985_si) {
	jule::Ptr<_1c49ce024_Data> _27107_cd = _1c49009c3_subIdent((*(_270954_ct)), &((*((*((*(_270985_si))))._field_Ident))._field_Kind));;
	if ((_27107_cd == nullptr)) {
		_1c49d12ce_pushErr(_self_, (*((*(_270985_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_270974_d))))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any((*(*((*(_270985_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
	};
	return _27107_cd;;
}



inline __jule_tuple_x_1c49ce024_Data__jule_tuple_bool _1c49eb43c_tryComptimeObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data>* _271743_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _271757_si) {
	__jule_tuple_x_1c49ce024_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1c4a16259_comptimeTypeInfo((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde9336:;
			{
				jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _27208_ct = _1c4a16259_comptimeTypeInfo((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abdeae1a_comptimeObjSubIdent(_self_, &(_27208_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a14e6c_comptimeStructField((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde8e29:;
			{
				jule::Ptr<_1c48d4c93_comptimeStructField> _27238_ct = _1c4a14e6c_comptimeStructField((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe0056d_comptimeObjSubIdent(_self_, &(_27238_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a15489_comptimeEnumField((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde8ea1:;
			{
				jule::Ptr<_1c48db30a_comptimeEnumField> _27268_ct = _1c4a15489_comptimeEnumField((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe04b7c_comptimeObjSubIdent(_self_, &(_27268_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a159a6_comptimeParam((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde9028:;
			{
				jule::Ptr<_1c48ddc9c_comptimeParam> _27298_ct = _1c4a159a6_comptimeParam((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe092d0_comptimeObjSubIdent(_self_, &(_27298_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a16776_comptimeStatic((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde90a0:;
			{
				jule::Ptr<_1c48d804e_comptimeStatic> _27328_ct = _1c4a16776_comptimeStatic((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe0da32_comptimeObjSubIdent(_self_, &(_27328_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a16a0c_comptimeValue((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde9127:;
			{
				jule::Ptr<_1c48ea10a_comptimeValue> _27358_ct = _1c4a16a0c_comptimeValue((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe13141_comptimeObjSubIdent(_self_, &(_27358_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1c4a16c93_comptimeFile((*((*(_271743_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abde919e:;
			{
				jule::Ptr<_1c48ee054_comptimeFile> _27388_ct = _1c4a16c93_comptimeFile((*((*(_271743_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1abe17750_comptimeObjSubIdent(_self_, &(_27388_ct), _271743_d, &(_271757_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1abde8db3:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1abde8d19:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49eb838_evalObjSubIdent(_1c49d0c4b_eval* _self_, jule::Ptr<_1c49ce024_Data> _274535_d, jule::Ptr<_1c4889bc1_SubIdentExpr> _274549_si) {
	if (_1c486ea85_IsIgnoreIdent((*((*(_274549_si))._field_Ident))._field_Kind)) {
		_1c49d12ce_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1c49ce024_Data> _27528_compData;
		jule::Bool _275218_ok;
		({
			__jule_tuple_x_1c49ce024_Data__jule_tuple_bool __jule_assign_result = _1c49eb43c_tryComptimeObjSubIdent(_self_, &(_274535_d), _274549_si);
			_27528_compData = __jule_assign_result.__jule_result_arg0;
			_275218_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_275218_ok) {
			return _27528_compData;;
		};
	};
	jule::Ptr<_1c4a1020e_TypeKind> _27587_kind = (*(_274535_d))._field_Kind;;
	{
		
		if ((_1c4a12db0_Ptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe1c876:;
			{
				jule::Ptr<_1c4a200cb_Ptr> _27614_ptr = _1c4a12db0_Ptr((*(_274535_d))._field_Kind);;
				if (_1c4a20b48_IsUnsafe(_27614_ptr.ptr())) {
					goto _match_end_1abe1c810;
				};
				if ((!(_1c49d1cc4_isUnsafe(_self_)))) {
					_1c49d12ce_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_27587_kind=(*(_1c4a12db0_Ptr((*(_274535_d))._field_Kind)))._field_Elem;
				_1c4a0bc00_makeImplicitDeref(&(_274535_d), (*_274549_si.alloc)._field_Ident);
			}
		}
		else if ((_1c4a12b29_Sptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe1c920:;
			{
				_27587_kind=(*(_1c4a12b29_Sptr((*(_274535_d))._field_Kind)))._field_Elem;
				_1c4a0bc00_makeImplicitDeref(&(_274535_d), (*_274549_si.alloc)._field_Ident);
			}
		}
		_match_end_1abe1c810:;
	};
	{
		
		if ((_1c4a1419c_Trait((*_274535_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe1cde8:;
			{
				return _1c49e6c84_evalTraitSubIdent(_self_, _274535_d, _1c4a1419c_Trait((*(_274535_d))._field_Kind), (*_274549_si.alloc)._field_Ident);;
			}
		}
		else if ((_1c4a13e16_Struct(_27587_kind.ptr()) != nullptr)) {
			_case_begin_1abe21050:;
			{
				jule::Ptr<_1c48a6407_StructIns> _27794_s = _1c4a13e16_Struct(_27587_kind);;
				if (_1c4a08e72_isInstancedStruct(_27794_s)) {
					jule::Bool _27819_usedReferenceElem = (_1c4a12b29_Sptr((*_274535_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1c49e7856_evalStructSubIdent(_self_, _274535_d, _1c4a13e16_Struct(_27587_kind), _274549_si, _27819_usedReferenceElem);;
				};
			}
		}
		_match_end_1abe21429:;
	};
	_1c49d12ce_pushErr(_self_, (*_274549_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*_274535_d.alloc)._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ebb79_evalSubIdent(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4889bc1_SubIdentExpr> _278933_si) {
	jule::Ptr<_1c4a1020e_TypeKind> _27907_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_27907_prefix;
	});;
	jule::Ptr<_1c49ce024_Data> _27937_d = _1c49ed1ca_evalExprKind(_self_, (*((*(_278933_si))._field_Expr))._field_Kind);;
	if ((_27937_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_27937_d))._field_Decl) {
		return _1c49eaa8a_evalTypeStatic(_self_, _27937_d, _278933_si);;
	};
	return _1c49eb838_evalObjSubIdent(_self_, _27937_d, _278933_si);;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ebeba_evalTuple(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c48876a2_TupleExpr> _280330_tup) {
	jule::Ptr<_1c4a1cdcb_Tuple> _28047_tupT = jule::new_ptr<_1c4a1cdcb_Tuple>(_1c4a1cdcb_Tuple{._field_Types=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)});;
	(*_28047_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(0LL, (*(_280330_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a1020e_TypeKind>(nullptr); __jule_collection; });
	jule::Ptr<_1c48b1027_TupleExprModel> _28077_model = jule::new_ptr<_1c48b1027_TupleExprModel>(_1c48b1027_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(0LL, (*_280330_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49ce024_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28117_ok = true;;
	{
		auto expr = &((*_280330_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9bbce9:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _281215_expr = *it;
			{
				jule::Ptr<_1c49ce024_Data> _28138_d = _1c49edede_evalExpr(_self_, _281215_expr);;
				if ((_28138_d == nullptr)) {
					_28117_ok=false;
					goto _iter_next_1ab9bbce9;
				};
				(*_28047_tupT.alloc)._field_Types=jule::append((*_28047_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28138_d))._field_Kind; __jule_collection; }));
				(*(_28077_model))._field_Datas=jule::append((*_28077_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28138_d; __jule_collection; }));
			}
			_iter_next_1ab9bbce9:;
			++it;
			goto _iter_begin_1ab9bbce9;
		}
		_iter_end_1ab9bbce9:;
	};
	if ((!(_28117_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28047_tupT, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28077_model, &__jule_any_type81), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ec3b6_evalMap(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4a1d97b_Map> _283228_m, jule::Ptr<_1c488c0ad_BraceLit> _283241_lit) {
	jule::Ptr<_1c48ae003_MapExprModel> _28337_model = jule::new_ptr<_1c48ae003_MapExprModel>(_1c48ae003_MapExprModel{._field_KeyKind=(*(_283228_m))._field_Key, ._field_ValKind=(*_283228_m.alloc)._field_Val, ._field_Entries=jule::Slice<jule::Ptr<_1c48ada4c_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_283241_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab9c0e30:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _283815_expr = *it;
			{
				{
					auto &_match_expr{ (*(_283815_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type79) {
						_case_begin_1ab9c24c5:;
						{
							goto _match_end_1ab9c1826;
						}
					}
					else {
						_case_begin_1ab9c187b:;
						{
							_1c49d12ce_pushErr(_self_.ptr(), (*(_283241_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab9c1826:;
				};
				jule::Ptr<_1c488c8d8_KeyValPair> _28488_pair = (*(_283815_expr))._field_Kind.cast_ptr<_1c488c8d8_KeyValPair>(&__jule_any_type79);;
				jule::Ptr<_1c49ce024_Data> _28508_key = _1c49edede_evalExpr(_self_, (*(_28488_pair))._field_Key);;
				if ((_28508_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1c49ce024_Data> _28558_val = _1c49edede_evalExpr(_self_, (*_28488_pair.alloc)._field_Val);;
				if ((_28558_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1c495cca5_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_283228_m.alloc)._field_Key), &(_28508_key), &((*((*_28488_pair.alloc)._field_Key))._field_Token))) {
					_1c495891b_checkAssignType((*(_self_))._field_s, false, &((*_283228_m.alloc)._field_Key), &(_28508_key), (*(*(_28488_pair))._field_Key.alloc)._field_Token);
				};
				if (_1c495cca5_checkValidityForInitExpr((*(_self_))._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_283228_m.alloc)._field_Val), &(_28558_val), &((*((*_28488_pair.alloc)._field_Val))._field_Token))) {
					_1c495891b_checkAssignType((*(_self_))._field_s, false, &((*_283228_m.alloc)._field_Val), &(_28558_val), (*(*(_28488_pair))._field_Val.alloc)._field_Token);
				};
				(*(_28337_model))._field_Entries=jule::append((*_28337_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48ada4c_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c48ada4c_KeyValPairExprModel>(_1c48ada4c_KeyValPairExprModel{._field_Key=(*(_28508_key))._field_Model, ._field_Val=(*(_28558_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1ab9c0e30:;
			++it;
			goto _iter_begin_1ab9c0e30;
		}
		_iter_end_1ab9c0e30:;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_283228_m, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28337_model, &__jule_any_type99), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ec707_evalBraceLit(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488c0ad_BraceLit> _288133_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1ab9cac1a:;
			{
				_1c49d12ce_pushErr(_self_, (*(_288133_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4a14433_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab9cac81:;
			{
				return _1c49ec3b6_evalMap(_self_, _1c4a14433_Map((*(_self_))._field_prefix), _288133_lit);;
			}
		}
		else if ((_1c4a13e16_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab9cace7:;
			{
				return _1c49e3ab6_evalStructLitExplicit(_self_, _1c4a13e16_Struct((*(_self_))._field_prefix), (*(_288133_lit))._field_Exprs, (*_288133_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1ab9ca05a:;
			{
				_1c49d12ce_pushErr(_self_.ptr(), (*(_288133_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab9c9e5b:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49eca48_evalAnonFunc(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4894439_FnDecl> _289633_decl) {
	_1c4a220bc_typeChecker _28977_tc = _1c4a220bc_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1c48bb719_FnIns> _29027_ins = _1c4a28cc7_buildFunc(&_28977_tc, _289633_decl);;
	if ((_29027_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29027_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _29077_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49715b0_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1ab9d0923:;
			{
				jule::Ptr<_1c4913244_scopeChecker> _29108_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0);;
				jule::Ptr<_1c4913244_scopeChecker> _29118_scc = _1c4925311_newChildChecker(_29108_sc);;
				(*(_29118_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c4911bc1_scopeLabel>>>(nullptr);
				(*_29118_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c4912254_scopeGoto>>>(nullptr);
				(*_29118_scc.alloc)._field_owner=_29027_ins;
				(*_29118_scc.alloc)._field_childIndex=0LL;
				(*_29118_scc.alloc)._field_it=0LLU;
				(*_29118_scc.alloc)._field_cse=0LLU;
				(*_29118_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1c49715b0_Var>>>)((&(_29077_captured))));
				_1c496b27a_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29027_ins), &(_29118_scc));
			}
		}
		else {
			_case_begin_1ab9d1517:;
			{
				_1c496b896_checkFnIns((*_self_.alloc)._field_s, &(_29027_ins));
			}
		}
		_match_end_1ab9d14b2:;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29027_ins, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c48ad673_AnonFnExprModel>(_1c48ad673_AnonFnExprModel{._field_Captured=_29077_captured, ._field_Func=_29027_ins, ._field_Global=_1c49d205a_isGlobal(_self_)}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ecd89_evalBinary(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c488a177_BinaryExpr> _293431_op) {
	_1c4a0140e_binaryEval _29357_bs = static__1c4a019d6_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1c4a17cd8_Prim> _29384_prim = _1c4a12893_Prim((*(_self_))._field_prefix);;
		if (((_29384_prim == nullptr) || (!(_1dc544852_IsNum(_1c4a1815c_Str(_29384_prim.ptr())))))) {
			jule::Ptr<_1c4a1020e_TypeKind> _29409_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29409_prefix;
			});;
			return _1c4a072b1_eval(&_29357_bs, &(_293431_op));;
		};
	};
	return _1c4a072b1_eval(&_29357_bs, &(_293431_op));;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ed1ca_evalExprKind(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Any _294933_kind) {
	{
		auto &_match_expr{ _294933_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1ab9d993d:;
			{
				jule::Ptr<_1c4886d77_RangeExpr> _29528_e = _294933_kind.unsafe_cast_ptr<_1c4886d77_RangeExpr>();;
				return _1c49ed1ca_evalExprKind(_self_, (*((*(_29528_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab9da103:;
			{
				return _1c49d380e_evalLit(_self_.ptr(), _294933_kind.cast_ptr<_1c4887a48_LitExpr>(&__jule_any_type102));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab9da169:;
			{
				return _1c49d854a_evalIdent(_self_.ptr(), _294933_kind.cast_ptr<_1c48883c8_IdentExpr>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab9da1d0:;
			{
				return _1c49d888b_evalUnary(_self_, _294933_kind.cast_ptr<_1c4888b6a_UnaryExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab9da246:;
			{
				return _1c49d8bcc_evalVariadic(_self_, _294933_kind.cast_ptr<_1c4889044_VariadicExpr>(&__jule_any_type76));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab9da2ac:;
			{
				return _1c49d901d_evalUnsafe(_self_, _294933_kind.cast_ptr<_1c4887e22_UnsafeExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ab9da323:;
			{
				return _1c49d9b56_evalSliceExpr(_self_, _294933_kind.cast_ptr<_1c488d114_SliceExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab9da6ca:;
			{
				return _1c49dd2ec_evalIndexing(_self_, _294933_kind.cast_ptr<_1c488da71_IndexingExpr>(&__jule_any_type104));;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1ab9da741:;
			{
				return _1c49de62d_evalSlicing(_self_, _294933_kind.cast_ptr<_1c488e1d1_SlicingExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab9da7a7:;
			{
				return _1c49e32be_evalCast(_self_, _294933_kind.cast_ptr<_1c488941d_CastExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab9da81d:;
			{
				return _1c49e3610_evalNsSelection(_self_.ptr(), _294933_kind.cast_ptr<_1c48897e7_NsSelectionExpr>(&__jule_any_type90));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab9da895:;
			{
				return _1c49e3e07_evalStructLit(_self_, _294933_kind.cast_ptr<_1c488bb07_StructLit>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab9da91c:;
			{
				return _1c49e44ce_evalType(_self_.ptr(), _294933_kind.cast_ptr<_1c4882779_TypeDecl>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ab9da994:;
			{
				return _1c49e5ada_evalFnCall(_self_, _294933_kind.cast_ptr<_1c488a7d7_FnCallExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1ab9daa1b:;
			{
				return _1c49ebb79_evalSubIdent(_self_, _294933_kind.cast_ptr<_1c4889bc1_SubIdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab9daa93:;
			{
				return _1c49ebeba_evalTuple(_self_, _294933_kind.cast_ptr<_1c48876a2_TupleExpr>(&__jule_any_type80));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab9dab1a:;
			{
				return _1c49ec707_evalBraceLit(_self_, _294933_kind.cast_ptr<_1c488c0ad_BraceLit>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ab9dab92:;
			{
				return _1c49eca48_evalAnonFunc(_self_, _294933_kind.cast_ptr<_1c4894439_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab9dac19:;
			{
				return _1c49ecd89_evalBinary(_self_, _294933_kind.cast_ptr<_1c488a177_BinaryExpr>(&__jule_any_type109));;
			}
		}
		else {
			_case_begin_1ab9da08c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab9da037:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49ed51b_eval1(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _299726_expr) {
	jule::Ptr<_1c49ce024_Data> _29987_d = _1c49ed1ca_evalExprKind(_self_, (*(_299726_expr))._field_Kind);;
	if (((_29987_d == nullptr) || ((*(_29987_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1c4a13b80_Fn((*(_29987_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab9e7572:;
			{
				jule::Ptr<_1c48bb719_FnIns> _30058_f = _1c4a13b80_Fn((*(_29987_d))._field_Kind.ptr());;
				if (_1c48bcbd2_IsBuiltin(_30058_f.ptr())) {
					_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*_299726_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1ab9e6b59;
				};
				if (((*_30058_f.alloc)._field_Generics.len() != (*((*_30058_f.alloc)._field_Decl))._field_Generics.len())) {
					_1c4950e0d_pushErr((*(_self_))._field_s, (*_299726_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_30058_f.alloc)._field_Decl))._field_Statically)) && _1c48b8e75_IsMethod((*(_30058_f))._field_Decl))) {
					_1c4950e0d_pushErr((*(_self_))._field_s, (*_299726_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_30058_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1ab9e6b59:;
	};
	return _29987_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49ed85c_eval(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _302525_expr) {
	jule::Ptr<_1c49ce024_Data> _30267_d = _1c49ed51b_eval1(_self_, _302525_expr);;
	if ((_30267_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1c4a14950_comptime((*(_30267_d))._field_Kind.ptr()))) {
		_1c4950e0d_pushErr((*_self_.alloc)._field_s.ptr(), (*(_302525_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30267_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c49edb9d_evalExpr1(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _304030_expr) {
	jule::Ptr<_1c49ce024_Data> _30417_d = _1c49ed51b_eval1(_self_, _304030_expr);;
	{
		
		if ((_30417_d == nullptr)) {
			_case_begin_1aba00767:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30417_d))._field_Decl) {
			_case_begin_1aba00811:;
			{
				_1c49d12ce_pushErr(_self_, (*(_304030_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aba006e0:;
			{
				return _30417_d;;
			}
		}
		_match_end_1aba00679:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c49edede_evalExpr(jule::Ptr<_1c49d0c4b_eval> _self_, jule::Ptr<_1c4886aad_Expr> _305629_expr) {
	jule::Ptr<_1c49ce024_Data> _30577_d = _1c49ed85c_eval(_self_, _305629_expr);;
	{
		
		if ((_30577_d == nullptr)) {
			_case_begin_1aba02659:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30577_d))._field_Decl) {
			_case_begin_1aba02703:;
			{
				_1c49d12ce_pushErr(_self_, (*(_305629_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aba025d2:;
			{
				return _30577_d;;
			}
		}
		_match_end_1aba0256b:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c49d0c4b_eval _Src) {
	_Stream << "eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c49ee473_unaryEval_eq(_1c49ee473_unaryEval *_self_, _1c49ee473_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1c49ee473_unaryEval static__1c49ee8e6_new(jule::Ptr<_1c49d0c4b_eval> _307720_e) {
	return _1c49ee473_unaryEval{._field_e=_307720_e, ._field_d=jule::Ptr<_1c49ce024_Data>(nullptr), ._field_u=jule::Ptr<_1c4888b6a_UnaryExpr>(nullptr)};;
}



inline void _1c49eeae4_minus(_1c49ee473_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1aba04381:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba0476b:;
			{
				if ((!(_1dc544852_IsNum(_1c4a1060a_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba04040:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aba03ec9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aba03e1e:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c49ce95e_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dc549db8_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba08ab1:;
				{
					_1dc548dea_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1dc5477bc_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dc54937e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba08b9e:;
				{
					_1dc548328_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1dc546c83_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dc549615_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba08770:;
				{
					_1dc548328_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1dc547a53_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aba086e8:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3115:5"));;
				}
			}
			_match_end_1aba0862c:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c49eece2_plus(_1c49ee473_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1aba0e1e3:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba0e5cd:;
			{
				if ((!(_1dc544852_IsNum(_1c4a1060a_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba0dda2:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aba0dd3b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aba0dc3c:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c49ce95e_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dc549db8_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba13923:;
				{
					_1dc548dea_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1dc5477bc_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dc54937e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba13a11:;
				{
					_1dc548328_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1dc546c83_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dc549615_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba135d2:;
				{
					_1dc548328_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1dc547a53_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aba1355a:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3160:5"));;
				}
			}
			_match_end_1aba1348e:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c49eeee0_caret(_1c49ee473_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1aba19033:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba1941d:;
			{
				if ((!(_1dc54427a_IsInt(_1c4a1060a_Str((*((*(_self_))._field_d))._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba18be2:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_d))._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aba18b7b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aba18a7c:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c49ce95e_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dc54937e_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba1d752:;
				{
					_1dc548328_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1dc546c83_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1dc549615_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba1d840:;
				{
					_1dc5485d1_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1dc547019_ReadU64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aba1d39a:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3203:5"));;
				}
			}
			_match_end_1aba1d2ce:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c4a001dd_excl(_1c49ee473_unaryEval* _self_) {
	jule::Ptr<_1c4a17cd8_Prim> _32173_t = _1c4a12893_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32173_t == nullptr) || (!(_1c4a1b01c_IsBool(_32173_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1c49ce95e_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1dc54989b_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aba249bc:;
				{
					_1dc548889_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1dc5472a0_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aba24615:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3231:5"));;
				}
			}
			_match_end_1aba24549:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1c4a003db_star(_1c49ee473_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1c4a12db0_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe2b489:;
			{
				if ((!(_1c49d1cc4_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c4a200cb_Ptr> _32568_t = _1c4a12db0_Ptr((*((*(_self_))._field_d))._field_Kind);;
				if (_1c4a20b48_IsUnsafe(_32568_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_32568_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1c4a12b29_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abe2b874:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1c4a12b29_Sptr((*((*(_self_))._field_d))._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1abe2b0d2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1abe2a0ae:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1c4a005d9_amper(_1c49ee473_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abe34a58:;
			{
				jule::Ptr<_1c48ab60a_StructLitExprModel> _32788_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1c48ab60a_StructLitExprModel>();;
				_1c4a080d6_makeStructLitAlloc(&((*(_self_))._field_d), &(_32788_lit));
			}
		}
		else {
			_case_begin_1abe31ed9:;
			{
				{
					
					if (_1c4a2b0e8_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1abe3289c:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a200cb_Ptr>(_1c4a200cb_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1abe31add:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1abe3246d:;
				};
			}
		}
		_match_end_1abe31e84:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1c4a007d7_typeDecl(_1c49ee473_unaryEval* _self_) {
	_1c4a220bc_typeChecker _33037_tc = _1c4a220bc_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1c4a210cc_referencer>(nullptr), ._field_refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1c4a0e41c_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abe38584:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a274e0_buildPtrFromType(&_33037_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abe3a09c:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a26d5d_buildSptrFromType(&_33037_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1abe37b9e:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1abe381dd:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1c4a009d5_evalData(_1c49ee473_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abe3dc1b:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _33288_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1c49ed85c_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_33288_prefix;
			}
		}
		else {
			_case_begin_1abe38254:;
			{
				(*(_self_))._field_d=_1c49ed85c_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1abe3d820:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a00d26_eval(_1c49ee473_unaryEval* _self_, jule::Ptr<_1c4888b6a_UnaryExpr> _333724_u) {
	(*(_self_))._field_u=_333724_u;
	_1c4a009d5_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1c4a007d7_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _33483_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1abe43391:;
			{
				_1c49eeae4_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1abe43407:;
			{
				_1c49eece2_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1abe4346d:;
			{
				_1c49eeee0_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1abe434d4:;
			{
				_1c4a001dd_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abe4354a:;
			{
				_1c4a003db_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abe435b1:;
			{
				_1c4a005d9_amper(_self_);
			}
		}
		else {
			_case_begin_1abe42d52:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1abe4332a:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1abe43aab:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str(_33483_kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1c49ce95e_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1abe41a54:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1abe455c4:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c49ee473_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4a0140e_binaryEval_eq(_1c4a0140e_binaryEval *_self_, _1c4a0140e_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1c4a0140e_binaryEval static__1c4a019d6_newPlain(jule::Ptr<_1c49d0c4b_eval> _338525_e) {
	return _1c4a0140e_binaryEval{._field_e=_338525_e, ._field_l=jule::Ptr<_1c49ce024_Data>(nullptr), ._field_r=jule::Ptr<_1c49ce024_Data>(nullptr), ._field_op=jule::Ptr<_1c486c19d_Token>(nullptr)};;
}



inline _1c4a0140e_binaryEval static__1c4a01d5a_new(jule::Ptr<_1c49d0c4b_eval> _339120_e, jule::Ptr<_1c486c19d_Token> _339134_op) {
	return _1c4a0140e_binaryEval{._field_e=_339120_e, ._field_l=jule::Ptr<_1c49ce024_Data>(nullptr), ._field_r=jule::Ptr<_1c49ce024_Data>(nullptr), ._field_op=_339134_op};;
}



inline jule::Bool _1c4a020e1_checkTypeCompatibility(_1c4a0140e_binaryEval* _self_) {
	return _1c4959c4c_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1c4a02377_checkStructCommonOperatorCompatibility(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c48bb719_FnIns> _340511_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1abe4abb2:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1abe4a871:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1abe4a8d7:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1abe4a94d:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1abe4a9b4:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1abe4aa2a:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1abe4aa91:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abe4c19c:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1abe4c213:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1abe4c279:;
			{
				_340511_overload=(*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1abe4a2ee:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1abe4a80a:;
	};
	if ((_340511_overload == nullptr)) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1c48ba691_ParamIns> _34377_p = (*(_340511_overload))._field_Params[1LL];;
	return _1c495891b_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_34377_p))._field_Decl))._field_Reference, &((*_34377_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1c49ce024_Data> _1c4a0260d_evalComptimeTypeInfo(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _34427_r = _1c4a16259_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_34427_r == nullptr)) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _34477_l = _1c4a16259_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1abe5ad37:;
			{
				jule::Ptr<_1dc54537a_Const> _34508_constant = static__1dc545d81_NewBool(_1c4a1094b_Equal((*(_34477_l))._field_base, (*(_34427_r))._field_base));;
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_34508_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_34508_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe5c1bd:;
			{
				jule::Ptr<_1dc54537a_Const> _34578_constant = static__1dc545d81_NewBool((!(_1c4a1094b_Equal((*(_34477_l))._field_base, (*(_34427_r))._field_base))));;
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_34578_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_34578_constant});;
			}
		}
		else {
			_case_begin_1abe5a694:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe5a991:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a02894_evalNil(_1c4a0140e_binaryEval* _self_) {
	if ((!(_1c4a120e0_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe61997:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe5e80d:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe615e0:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a02b2a_evalEnum(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c48ce8c5_Enum> _34887_enm = _1c4a13146_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe63c74:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _34928_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1c4a13146_Enum((*((*(_self_))._field_r))._field_Kind) != nullptr)) {
					_34928_rkind=(*((*(_1c4a13146_Enum((*((*(_self_))._field_r))._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1c4959378_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_34887_enm))._field_Kind.alloc)._field_Kind), &(_34928_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		_match_end_1abe63c0d:;
	};
	if (((_1c4a13146_Enum((*((*(_self_))._field_r))._field_Kind) == nullptr) || (_34887_enm != _1c4a13146_Enum((*((*(_self_))._field_r))._field_Kind)))) {
		_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_34887_enm))._field_Ident, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1abe6972a:;
			{
				if ((!(_1dc544852_IsNum(_1c4a1060a_Str((*(*(_34887_enm))._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1abe6a75e:;
			{
				jule::Ptr<_1c48cdd58_EnumItem> _35224_first = (*_34887_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1dc54937e_IsI64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1abe6dd4a:;
						{
							if ((_1dc546c83_ReadI64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1abe73c2e;
							};
							goto _julec_label_1abe72c94;
						}
					}
					else if (_1dc549615_IsU64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1abe6de38:;
						{
							if ((_1dc547019_ReadU64((*((*((*(_35224_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1abe73c2e;
							};
							goto _julec_label_1abe72c94;
						}
					}
					else {
						_case_begin_1abe6d993:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3535:5"));;
						}
					}
					_match_end_1abe6d92c:;
				};
				_julec_label_1abe72c94:;
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				_1c49d1642_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1abe73c2e:;
				goto _case_begin_1abe6a7c5;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1abe6a7c5:;
			{
				if (((_1c4a12893_Prim((*(*(_34887_enm))._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1dc54427a_IsInt(_1c4a1815c_Str(_1c4a12893_Prim((*((*(_34887_enm))._field_Kind))._field_Kind).ptr())))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1abe662d7:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any((*_34887_enm.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe69395:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a02db1_evalTypeEnum(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c48d10d0_TypeEnum> _35557_enm = _1c4a133cc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe7898c:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe77d43:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c48d1454_Str(_35557_enm.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe78591:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a03147_evalSptr(_1c4a0140e_binaryEval* _self_) {
	if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe7ad79:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe79ce0:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe7a9c2:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a033cd_evalPtr(_1c4a0140e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1abe7d0ac:;
			{
				if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1abe7e443:;
			{
				if ((_1c4a12db0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1c4a20b48_IsUnsafe(_1c4a12db0_Ptr((*((*(_self_))._field_l))._field_Kind).ptr())) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
				if ((!(_1c4a0926e_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1abe7c7c6:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe7c62d:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a03664_evalArr(_1c4a0140e_binaryEval* _self_) {
	if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe85b53:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1c48bb719_FnIns> _36329_f = _1c48b9c45_instanceForce(_1dc55071a_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), jule::Str::lit("arrayCmp", 8)));;
					(*(_36329_f))._field_Generics=jule::append((*_36329_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4a0d828_InsGeneric>(_1c4a0d828_InsGeneric{._field_Kind=(*(_1c4a13663_Arr((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)}); __jule_collection; }));
					jule::Bool _36345_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4968a80_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_36329_f), &((*(_self_))._field_op));
						_36345_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_36345_ok))) {
						jule::panic(jule::Str::lit("arrayCmp evaluation failed, this is an implementation mistake", 61) + jule::Str("\nlocation: std/jule/sema/eval.jule:3636:6"));;
					};
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe80d4b:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe8579b:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a038ea_evalStruct(_1c4a0140e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1abe87490:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1abe8b263:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1abe8b2c9:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1abe8b340:;
			{
				if (((*(_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe8b3a6:;
			{
				if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		_match_end_1abe873c4:;
	};
	if ((!(_1c4a02377_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1c49ce024_Data> _1c4a03b81_evalTrait(_1c4a0140e_binaryEval* _self_) {
	if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe97208:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe96702:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe96d51:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a03e17_evalAny(_1c4a0140e_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1abe9943b:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe98b55:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("any", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe989ac:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a0419d_evalBool(_1c4a0140e_binaryEval* _self_) {
	if ((!(_1c4a020e1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1abe9b63b:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1abe9a5a2:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abe9b284:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a04434_evalStr(_1c4a0140e_binaryEval* _self_) {
	jule::Str _37467_rk = _1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_37467_rk.equal("str", 3))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_37467_rk, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1abea0420:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1abea129a:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1abe9e243:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abea0046:;
	};
}



inline void _1c4a04632_setTypeToGreater(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c4a17cd8_Prim> _37713_lp = _1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1c4a17cd8_Prim> _37723_rp = _1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1c49ce95e_IsConst((*(_self_))._field_l)) {
		if ((!(_1c49ce95e_IsConst((*(_self_))._field_r.ptr())))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37723_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1abea59db;
	};
	if (_1c49ce95e_IsConst((*(_self_))._field_r)) {
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*(_37713_lp))._field_Kind;
		return;;
	};
	_julec_label_1abea59db:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1c49ce95e_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37723_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1dc542a3c_IsGreater((*_37723_rp.alloc)._field_Kind, (*_37713_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1c49ce95e_IsConst((*(_self_))._field_l)) {
			(*(*((*(_self_))._field_l))._field_Constant.alloc)._field_Kind=(*_37723_rp.alloc)._field_Kind;
		};
	};
}



inline void _1c4a048da_checkModData(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _380433_d) {
	if ((!(_1c49ce95e_IsConst((*(_380433_d)).ptr())))) {
		if (((_1c4a12893_Prim((*((*(_380433_d))))._field_Kind.ptr()) == nullptr) || (!(_1dc54427a_IsInt((*(_1c4a12893_Prim((*((*(_380433_d))))._field_Kind)))._field_Kind))))) {
			_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1c49b0159_sigAssignable(jule::Str::lit("i64", 3), _380433_d)) {
			_case_begin_1abeada6b:;
			{
				_1dc548328_SetI64((*((*(_380433_d))))._field_Constant.ptr(), _1dc547a53_AsI64((*((*(_380433_d))))._field_Constant));
			}
		}
		else if (_1c49b0522_unsigAssignable(jule::Str::lit("u64", 3), _380433_d)) {
			_case_begin_1abead75d:;
			{
				_1dc5485d1_SetU64((*((*(_380433_d))))._field_Constant.ptr(), _1dc547cd9_AsU64((*((*(_380433_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1abead6e7:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abead65e:;
	};
}



inline void _1c4a04ad8_mod(_1c4a0140e_binaryEval* _self_) {
	_1c4a048da_checkModData(_self_, &((*(_self_))._field_l));
	_1c4a048da_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1c4a04ed4_numbersAreCompatibile(_1c4a0140e_binaryEval* _self_, jule::Str* _382634_lk, jule::Str* _382644_rk) {
	if ((!(_1dc544852_IsNum((*(_382644_rk)))))) {
		return false;;
	};
	if ((_1c49ce95e_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_382634_lk)).equal("f32", 3)) {
		if ((_1c49ce95e_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c49aecd5_floatAssignable(_382634_lk, &((*(_self_))._field_r));;
		};
		return (*(_382644_rk)).equal("f32", 3);;
	};
	if ((*(_382634_lk)).equal("f64", 3)) {
		if ((_1c49ce95e_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1c49aecd5_floatAssignable(_382634_lk, &((*(_self_))._field_r));;
		};
		return (*(_382644_rk)).equal("f64", 3);;
	};
	if ((_1c49ce95e_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1c49b0896_intAssignable((*(_382634_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_382634_lk)) == (*(_382644_rk)));;
}



inline jule::Ptr<_1c49ce024_Data> _1c4a0526a_evalFloat(_1c4a0140e_binaryEval* _self_) {
	jule::Str _38523_lk = (*(_1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38533_rk = (*(_1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1c4a04ed4_numbersAreCompatibile(_self_, &(_38523_lk), &(_38533_rk))))) {
		_1c4959796_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1abeb8823:;
			{
				if (((!(_1c49ce95e_IsConst((*(_self_))._field_l))) || (!(_1c49b0896_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_38523_lk, &__jule_any_type4); (*it++) = jule::Any(_38533_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((!(_1c49ce95e_IsConst((*(_self_))._field_r.ptr()))) || (!(_1c49b0896_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_38523_lk, &__jule_any_type4); (*it++) = jule::Any(_38533_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1dc548328_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1dc547a53_AsI64((*((*(_self_))._field_l))._field_Constant));
				_1dc5485d1_SetU64((*((*(_self_))._field_r))._field_Constant, _1dc547cd9_AsU64((*((*(_self_))._field_r))._field_Constant));
				if ((!(_1c4a08a98_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1abeb87ac:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1abeb8e94:;
			{
				_1c4a04632_setTypeToGreater(_self_);
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		_match_end_1abeb8e3e:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1abec0ab1:;
			{
				_1c4a04632_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1abec17b5:;
			{
				if ((!(_1dc54427a_IsInt(_38533_rk)))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_38523_lk, &__jule_any_type4); (*it++) = jule::Any(_38533_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1c4a04ad8_mod(_self_);
				_1c4a04632_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1abeb9082:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abec0011:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a05501_evalInt(_1c4a0140e_binaryEval* _self_) {
	jule::Str _39163_lk = (*(_1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39173_rk = (*(_1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1abec52e1:;
			{
				if (((!(_1dc54427a_IsInt(_39163_lk))) || (!(_1dc54427a_IsInt(_39173_rk))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39163_lk, &__jule_any_type4); (*it++) = jule::Any(_39173_rk, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if ((!(_1c4a08a98_isOkForShifting(&((*(_self_))._field_r))))) {
					_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1abec55cc:;
	};
	if ((!(_1c4a04ed4_numbersAreCompatibile(_self_, &(_39163_lk), &(_39173_rk))))) {
		_1c4959796_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1abec8e0a:;
			{
				return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0cb1_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
			}
		}
		_match_end_1abec8d94:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1abeca6c0:;
			{
				_1c4a04632_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1abecb3c4:;
			{
				_1c4a04ad8_mod(_self_);
				_1c4a04632_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1abec8ee8:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abeca2c4:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a05787_evalPrim(_1c4a0140e_binaryEval* _self_) {
	jule::Ptr<_1c4a17cd8_Prim> _39733_prim = _1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1c4a1b01c_IsBool(_39733_prim.ptr())) {
			_case_begin_1abecda9c:;
			{
				return _1c4a0419d_evalBool(_self_);;
			}
		}
		else if (_1c4a1b2a3_IsStr(_39733_prim.ptr())) {
			_case_begin_1abecdb46:;
			{
				return _1c4a04434_evalStr(_self_);;
			}
		}
		_match_end_1abecda25:;
	};
	if ((_1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1815c_Str(_39733_prim.ptr()), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1dc5445bb_IsFloat((*_39733_prim.alloc)._field_Kind)) {
			_case_begin_1abed15e9:;
			{
				return _1c4a0526a_evalFloat(_self_);;
			}
		}
		else if (_1dc54427a_IsInt((*_39733_prim.alloc)._field_Kind)) {
			_case_begin_1abed1682:;
			{
				return _1c4a05501_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1abed1583:;
			{
				return nullptr;;
			}
		}
		_match_end_1abecec68:;
	};
}



inline jule::Bool _1c4a05a1d_checkSpecialCases(_1c4a0140e_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (((!(_1c4a1183c_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1c4a11320_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1c4a1183c_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1c4a11320_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1c49ce024_Data> _1c4a05ca4_evalOp(_1c4a0140e_binaryEval* _self_) {
	jule::Bool _40093_ok = _1c4a05a1d_checkSpecialCases(_self_);;
	if ((!(_40093_ok))) {
		return nullptr;;
	};
	{
		
		if (_1c4a115a6_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1abed7545:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1c4a16259_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed7457:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed74bd;
			}
		}
		else if ((_1c4a16259_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed74bd:;
			{
				return _1c4a0260d_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1c4a1b539_IsAny(_1c4a12893_Prim((*((*(_self_))._field_r))._field_Kind).ptr()))) {
			_case_begin_1abed8e4d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed8eb4;
			}
		}
		else if (_1c4a11320_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1abed8eb4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed90a2;
			}
		}
		else if (_1c4a11320_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1abed90a2:;
			{
				return _1c4a02894_evalNil(_self_);;
			}
		}
		else if (((_1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1c4a1b539_IsAny(_1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind).ptr()))) {
			_case_begin_1abed9118:;
			{
				return _1c4a03e17_evalAny(_self_);;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed917e:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed91e5;
			}
		}
		else if ((_1c4a133cc_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed91e5:;
			{
				return _1c4a02db1_evalTypeEnum(_self_);;
			}
		}
		else if ((_1c4a13146_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed925b:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed92c2;
			}
		}
		else if ((_1c4a13146_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed92c2:;
			{
				return _1c4a02b2a_evalEnum(_self_);;
			}
		}
		else if ((_1c4a12b29_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed9338:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed939e;
			}
		}
		else if ((_1c4a12b29_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed939e:;
			{
				return _1c4a03147_evalSptr(_self_);;
			}
		}
		else if ((_1c4a12db0_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed9415:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed947b;
			}
		}
		else if ((_1c4a12db0_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed947b:;
			{
				return _1c4a033cd_evalPtr(_self_);;
			}
		}
		else if ((_1c4a13663_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed94e2:;
			{
				return _1c4a03664_evalArr(_self_);;
			}
		}
		else if ((_1c4a1419c_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed9558:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1abed95be;
			}
		}
		else if ((_1c4a1419c_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed95be:;
			{
				return _1c4a03b81_evalTrait(_self_);;
			}
		}
		else if ((_1c4a13e16_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed9635:;
			{
				return _1c4a038ea_evalStruct(_self_);;
			}
		}
		else if ((_1c4a12893_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abed969b:;
			{
				return _1c4a05787_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1abed73e1:;
			{
				_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1abed78b9:;
	};
}



inline void _1c4a0605c_evalConst(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _406930_d) {
	{
		
		if (((*(_406930_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ab872584:;
			{
				return;;
			}
		}
		else if ((!(_1c49ce95e_IsConst((*(_self_))._field_l.ptr()))) || (!(_1c49ce95e_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ab873156:;
			{
				(*((*(_406930_d))))._field_Constant=nullptr;
				(*((*(_406930_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1ab8724a7:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ab873211:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54ae63_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ab875114:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool((!(_1dc54ae63_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ab87517a:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54ab22_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ab8751e1:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54a7d1_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ab875257:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54b936_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ab8752bd:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54b2a4_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ab875345:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54bc77_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ab8753bc:;
			{
				(*((*(_406930_d))))._field_Constant=static__1dc545d81_NewBool(_1dc54b5e5_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ab875444:;
			{
				_1dc54c0b8_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ab8754bb:;
			{
				_1dc54c409_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ab875543:;
			{
				_1dc54c74a_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ab8755ba:;
			{
				jule::Bool _41094_ok = _1dc54ca8b_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41094_ok)) && (_1dc548070_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1c4a17cd8_Prim> _41148_prim = _1c4a12893_Prim((*((*(_406930_d))))._field_Kind.ptr());;
				{
					
					if (_1dc543ba3_IsSigInt((*(_41148_prim))._field_Kind)) {
						_case_begin_1ab886642:;
						{
							_1dc548328_SetI64((*((*(_406930_d))))._field_Constant, _1dc547a53_AsI64((*((*(_406930_d))))._field_Constant));
						}
					}
					else if (_1dc543eb1_IsUnsigInt((*(_41148_prim))._field_Kind)) {
						_case_begin_1ab8866db:;
						{
							_1dc5485d1_SetU64((*((*(_406930_d))))._field_Constant, _1dc547cd9_AsU64((*((*(_406930_d))))._field_Constant));
						}
					}
					_match_end_1ab8865cb:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ab875642:;
			{
				jule::Bool _41224_ok = _1dc54cdcc_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_41224_ok)) && (_1dc548070_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ab8756b9:;
			{
				_1dc54d55e_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ab875741:;
			{
				_1dc54d21d_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ab8757b8:;
			{
				_1dc54d8a0_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ab875840:;
			{
				_1dc54dbe1_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ab8758b7:;
			{
				_1dc54e032_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_406930_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1ab8745b9:;
	};
	(*((*(_406930_d))))._field_Model=jule::Any((*((*(_406930_d))))._field_Constant, &__jule_any_type19);
	_1c4a0a3d5_applyCastModelByEnum(_406930_d, _1c4a13146_Enum((*((*(_406930_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1c4a06315_checkData(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _414730_d) {
	jule::Ptr<_1c48bb719_FnIns> _41483_f = _1c4a13b80_Fn((*((*(_414730_d))))._field_Kind.ptr());;
	if ((((_41483_f != nullptr) && ((*_41483_f.alloc)._field_Decl != nullptr)) && _1c48b8e75_IsMethod((*(_41483_f))._field_Decl))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1c4a06513_checkDatas(_1c4a0140e_binaryEval* _self_) {
	_1c4a06315_checkData(_self_, &((*(_self_))._field_l));
	_1c4a06315_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1c4a067bb_setModel(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _415929_d) {
	if (_1c49ce95e_IsConst((*(_415929_d)).ptr())) {
		if (((_1c49ce95e_IsConst((*(_self_))._field_l.ptr()) && _1c49ce95e_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1c49ce024_Data> _41687_l;
	jule::Ptr<_1c49ce024_Data> _416814_r;
	({
		jule::Ptr<_1c49ce024_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1c49ce024_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_41687_l = ___jule_assign_arg;
		_416814_r = _1___jule_assign_arg;
	});
	if ((!(_1c49ceca0_GoodOperand(_41687_l, &(_416814_r))))) {
		std::swap(_41687_l, _416814_r);
	};
	(*((*(_415929_d))))._field_Model=jule::Any(jule::new_ptr<_1c48aa85c_BinaryExprModel>(_1c48aa85c_BinaryExprModel{._field_Left=jule::new_ptr<_1c48aa362_OperandExprModel>(_1c48aa362_OperandExprModel{._field_Kind=(*_41687_l.alloc)._field_Kind, ._field_Model=(*_41687_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1c48aa362_OperandExprModel>(_1c48aa362_OperandExprModel{._field_Kind=(*_416814_r.alloc)._field_Kind, ._field_Model=(*_416814_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1c4a06a74_postEval(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _418629_d) {
	(*((*(_418629_d))))._field_Lvalue=false;
	_1c4a067bb_setModel(_self_, _418629_d);
}



inline jule::Ptr<_1c49ce024_Data> _1c4a06e70_solveExplicit(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c49ce024_Data>* _419134_l, jule::Ptr<_1c49ce024_Data>* _419149_r) {
	({
		jule::Ptr<_1c49ce024_Data> ___jule_assign_arg = (*(_419134_l));
		jule::Ptr<_1c49ce024_Data> _1___jule_assign_arg = (*(_419149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c4a06513_checkDatas(_self_);
	jule::Ptr<_1c49ce024_Data> _41967_d = _1c4a05ca4_evalOp(_self_);;
	({
		jule::Ptr<_1c49ce024_Data> ___jule_assign_arg = (*(_419134_l));
		jule::Ptr<_1c49ce024_Data> _1___jule_assign_arg = (*(_419149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1c4a0605c_evalConst(_self_, &(_41967_d));
	if ((_41967_d != nullptr)) {
		(*_41967_d.alloc)._field_Mutable=true;
		_1c4a06a74_postEval(_self_, &(_41967_d));
	};
	return _41967_d;;
}



inline jule::Ptr<_1c49ce024_Data> _1c4a072b1_eval(_1c4a0140e_binaryEval* _self_, jule::Ptr<_1c488a177_BinaryExpr>* _421125_op) {
	if (((*((*((*(_421125_op))))._field_Op))._field_Id == static_cast<jule::U64>(71LLU))) {
		_1c49d12ce_pushErr((*(_self_))._field_e.ptr(), (*((*(_421125_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1c49d1642_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _42187_l = _1c49edb9d_evalExpr1((*(_self_))._field_e, (*((*(_421125_op))))._field_Left);;
	if (((_42187_l == nullptr) || ((*(_42187_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _42237_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_42187_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_42237_prefix;
	});;
	jule::Ptr<_1c49ce024_Data> _42267_r = _1c49edb9d_evalExpr1((*(_self_))._field_e, (*((*(_421125_op))))._field_Right);;
	if (((_42267_r == nullptr) || ((*(_42267_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_421125_op))))._field_Op;
	jule::Ptr<_1c49ce024_Data> _42337_d = _1c4a06e70_solveExplicit(_self_, &(_42187_l), &(_42267_r));;
	if ((((_42337_d != nullptr) && (*(_42187_l))._field_IsRune) && (*(_42267_r))._field_IsRune)) {
		(*_42337_d.alloc)._field_IsRune=true;
	};
	return _42337_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a0140e_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a0d828_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a0e41c_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4a1020e_TypeKind_eq(_1c4a1020e_TypeKind *_self_, _1c4a1020e_TypeKind _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1c4a1060a_Str(_1c4a1020e_TypeKind* _self_) {
	if (_1c4a11320_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_238b51e24_StrBuilder _747_kind = static__238b52375_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_238b528d6_WriteStr(&_747_kind, jule::Str::lit("...", 3));
	};
	if (_1c4a11089_Binded(_self_)) {
		_238b528d6_WriteStr(&_747_kind, jule::Str::lit("cpp.", 4));
		_238b528d6_WriteStr(&_747_kind, (*(_self_))._field_BindIdent);
	} else {
		_238b528d6_WriteStr(&_747_kind, ((_1c4a0ec58_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1c4a0e7b3_Str((*(_self_))._field_Kind.data));
	};
	return _238b531cd_Str(&_747_kind);;
}



inline jule::Bool _1c4a1094b_Equal(jule::Ptr<_1c4a1020e_TypeKind> _self_, jule::Ptr<_1c4a1020e_TypeKind> _9018_other) {
	if (_1c4a11320_IsNil(_self_.ptr())) {
		return _1c4a11320_IsNil(_9018_other.ptr());;
	};
	if (_1c4a11089_Binded(_self_)) {
		return (_1c4a11089_Binded(_9018_other) && ((*_self_.alloc)._field_BindIdent == (*_9018_other.alloc)._field_BindIdent));;
	};
	return ((_1c4a0ec58_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1c4a0eb04_Equal((*_self_.alloc)._field_Kind.data, _9018_other);;
}



inline jule::Bool _1c4a11089_Binded(_1c4a1020e_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1c4a11320_IsNil(_1c4a1020e_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1c4a115a6_Void(_1c4a1020e_TypeKind* _self_) {
	jule::Ptr<_1c4a17cd8_Prim> _1103_prim = _1c4a12893_Prim(_self_);;
	return ((_1103_prim != nullptr) && (*(_1103_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1c4a1183c_Comparable(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _1178__self = _self_;;
		if ((_1c4a13e16_Struct(_1178__self) != nullptr)) {
			return (*(_1c4a13e16_Struct(_1178__self)))._field_Comparable;;
		};
		if ((_1c4a13663_Arr(_1178__self) != nullptr)) {
			return _1c4a1183c_Comparable((*(_1c4a13663_Arr(_1178__self)))._field_Elem.ptr());;
		};
		return (((_1c4a14433_Map(_1178__self) == nullptr) && (_1c4a138e9_Slc(_1178__self) == nullptr)) && (_1c4a13b80_Fn(_1178__self) == nullptr));;
	};
}



inline jule::Bool _1c4a11ac3_Mutable(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _1318__self = _self_;;
		if ((_1c4a13e16_Struct(_1318__self) != nullptr)) {
			return (*(_1c4a13e16_Struct(_1318__self)))._field_Mutable;;
		};
		if ((_1c4a1419c_Trait(_1318__self) != nullptr)) {
			return true;;
		};
		if ((_1c4a12893_Prim(_1318__self) != nullptr)) {
			jule::Ptr<_1c4a17cd8_Prim> _1395_p = _1c4a12893_Prim(_1318__self);;
			return _1c4a1b539_IsAny(_1395_p.ptr());;
		};
		if ((_1c4a13663_Arr(_1318__self) != nullptr)) {
			return _1c4a11ac3_Mutable((*(_1c4a13663_Arr(_1318__self)))._field_Elem.ptr());;
		};
		return (((_1c4a138e9_Slc(_1318__self) != nullptr) || (_1c4a12db0_Ptr(_1318__self) != nullptr)) || (_1c4a12b29_Sptr(_1318__self) != nullptr));;
	};
}



inline jule::Bool _1c4a11d59_Ordered(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _1548__self = _self_;;
		jule::Ptr<_1c4a17cd8_Prim> _1554_prim = _1c4a12893_Prim(_1548__self);;
		if ((_1554_prim != nullptr)) {
			return (_1dc544852_IsNum((*_1554_prim.alloc)._field_Kind) || _1c4a1b2a3_IsStr(_1554_prim));;
		};
		if ((_1c4a12db0_Ptr(_1548__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1c48a6407_StructIns> _1624_s = _1c4a13e16_Struct(_1548__self);;
		if ((_1624_s != nullptr)) {
			return (((((*_1624_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1624_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1624_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1c48ce8c5_Enum> _1694_enm = _1c4a13146_Enum(_1548__self);;
		if ((_1694_enm != nullptr)) {
			return _1dc544852_IsNum(_1c4a1060a_Str((*((*_1694_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1c4a120e0_NilCompatible(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _1808__self = _self_;;
		jule::Ptr<_1c4a17cd8_Prim> _1824_prim = _1c4a12893_Prim(_1808__self);;
		if (((_1824_prim != nullptr) && _1c4a1b539_IsAny(_1824_prim))) {
			return true;;
		};
		return (((((((_1c4a11320_IsNil(_1808__self) || (_1c4a13b80_Fn(_1808__self) != nullptr)) || (_1c4a12b29_Sptr(_1808__self) != nullptr)) || (_1c4a12db0_Ptr(_1808__self) != nullptr)) || (_1c4a1419c_Trait(_1808__self) != nullptr)) || (_1c4a138e9_Slc(_1808__self) != nullptr)) || (_1c4a14433_Map(_1808__self) != nullptr)) || (_1c4a133cc_TypeEnum(_1808__self) != nullptr));;
	};
}



inline jule::Bool _1c4a12376_PerformsRC(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _2018__self = _self_;;
		jule::Ptr<_1c4a17cd8_Prim> _2024_prim = _1c4a12893_Prim(_2018__self);;
		if ((_2024_prim != nullptr)) {
			return (_1c4a1b539_IsAny(_2024_prim) || _1c4a1b2a3_IsStr(_2024_prim));;
		};
		return (((_1c4a12b29_Sptr(_2018__self) != nullptr) || (_1c4a138e9_Slc(_2018__self) != nullptr)) || (_1c4a1419c_Trait(_2018__self) != nullptr));;
	};
}



inline jule::Bool _1c4a1260c_Variadicable(_1c4a1020e_TypeKind* _self_) {
	{
		_1c4a1020e_TypeKind* _2138__self = _self_;;
		return (_1c4a138e9_Slc(_2138__self) != nullptr);;
	};
}



inline jule::Ptr<_1c4a17cd8_Prim> _1c4a12893_Prim(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)) {
			_case_begin_1ab8c0a88:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a17cd8_Prim>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1ab8d49ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d4959:;
	};
}



inline jule::Ptr<_1c4a1b814_Sptr> _1c4a12b29_Sptr(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)) {
			_case_begin_1ab8d55e7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a1b814_Sptr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1ab8d5828:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d57c3:;
	};
}



inline jule::Ptr<_1c4a200cb_Ptr> _1c4a12db0_Ptr(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26)) {
			_case_begin_1ab8d631d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a200cb_Ptr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ab8d6571:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d651b:;
	};
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c4a13146_Enum(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3)) {
			_case_begin_1ab8d7066:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48ce8c5_Enum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ab8d72b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d7264:;
	};
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4a133cc_TypeEnum(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)) {
			_case_begin_1ab8d7cae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d10d0_TypeEnum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ab8d8012:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d7eac:;
	};
}



inline jule::Ptr<_1c4a1e608_Arr> _1c4a13663_Arr(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25)) {
			_case_begin_1ab8d8a07:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a1e608_Arr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ab8d8c5a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d8c05:;
	};
}



inline jule::Ptr<_1c4a1c2d7_Slc> _1c4a138e9_Slc(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)) {
			_case_begin_1ab8d9750:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a1c2d7_Slc>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ab8d99a3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8d994d:;
	};
}



inline jule::Ptr<_1c48bb719_FnIns> _1c4a13b80_Fn(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)) {
			_case_begin_1ab8da498:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48bb719_FnIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ab8da6eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8da696:;
	};
}



inline jule::Ptr<_1c48a6407_StructIns> _1c4a13e16_Struct(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)) {
			_case_begin_1ab8db1e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48a6407_StructIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ab8db444:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8db3de:;
	};
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c4a1419c_Trait(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data2)) {
			_case_begin_1ab8dbe39:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48cc1b9_Trait>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ab8dc18c:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8dc137:;
	};
}



inline jule::Ptr<_1c4a1d97b_Map> _1c4a14433_Map(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24)) {
			_case_begin_1ab8dcb82:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a1d97b_Map>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ab8dcdb3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8dcd5d:;
	};
}



inline jule::Ptr<_1c4a1cdcb_Tuple> _1c4a146b9_Tup(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23)) {
			_case_begin_1ab8dd8a8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c4a1cdcb_Tuple>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ab8ddb0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8ddaa6:;
	};
}



inline jule::Bool _1c4a14950_comptime(_1c4a1020e_TypeKind* _self_) {
	return (((((((((((((_1c4a15ec3_comptimeTypeInfos(_self_) != nullptr) || (_1c4a16259_comptimeTypeInfo(_self_) != nullptr)) || (_1c4a14bd6_comptimeStructFields(_self_) != nullptr)) || (_1c4a14e6c_comptimeStructField(_self_) != nullptr)) || (_1c4a15203_comptimeEnumFields(_self_) != nullptr)) || (_1c4a15489_comptimeEnumField(_self_) != nullptr)) || (_1c4a164e0_comptimeStatics(_self_) != nullptr)) || (_1c4a16776_comptimeStatic(_self_) != nullptr)) || (_1c4a15720_comptimeParams(_self_) != nullptr)) || (_1c4a159a6_comptimeParam(_self_) != nullptr)) || (_1c4a16a0c_comptimeValue(_self_) != nullptr)) || (_1c4a17029_comptimeFiles(_self_) != nullptr)) || (_1c4a16c93_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1c48d6954_comptimeStructFields> _1c4a14bd6_comptimeStructFields(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data7)) {
			_case_begin_1ab8de7bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d6954_comptimeStructFields>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ab8e32c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e3270:;
	};
}



inline jule::Ptr<_1c48d4c93_comptimeStructField> _1c4a14e6c_comptimeStructField(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data6)) {
			_case_begin_1ab8e3913:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d4c93_comptimeStructField>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ab8e3b66:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e3b11:;
	};
}



inline jule::Ptr<_1c48dc6a2_comptimeEnumFields> _1c4a15203_comptimeEnumFields(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data11)) {
			_case_begin_1ab8e465b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48dc6a2_comptimeEnumFields>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ab8e48ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e4859:;
	};
}



inline jule::Ptr<_1c48db30a_comptimeEnumField> _1c4a15489_comptimeEnumField(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data10)) {
			_case_begin_1ab8e53a4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48db30a_comptimeEnumField>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ab8e5607:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e55a2:;
	};
}



inline jule::Ptr<_1c48e0e36_comptimeParams> _1c4a15720_comptimeParams(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data13)) {
			_case_begin_1ab8e60ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48e0e36_comptimeParams>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ab8e6350:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e62ea:;
	};
}



inline jule::Ptr<_1c48ddc9c_comptimeParam> _1c4a159a6_comptimeParam(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data12)) {
			_case_begin_1ab8e6d9a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48ddc9c_comptimeParam>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ab8e7098:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e7043:;
	};
}



inline jule::Ptr<_1c48d42c0_comptimeRange> _1c4a15c3c_comptimeRange(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)) {
			_case_begin_1ab8e7ae3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d42c0_comptimeRange>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ab8e7ce1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e7c8b:;
	};
}



inline jule::Ptr<_1c48e24ed_comptimeTypeInfos> _1c4a15ec3_comptimeTypeInfos(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data14)) {
			_case_begin_1ab8e87d6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48e24ed_comptimeTypeInfos>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ab8e8a17:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e89b2:;
	};
}



inline jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _1c4a16259_comptimeTypeInfo(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data15)) {
			_case_begin_1ab8e950c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48e3ae8_comptimeTypeInfo>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ab8e9760:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8e970a:;
	};
}



inline jule::Ptr<_1c48d9c10_comptimeStatics> _1c4a164e0_comptimeStatics(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data9)) {
			_case_begin_1ab8ea2aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d9c10_comptimeStatics>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ab8ea497:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8ea442:;
	};
}



inline jule::Ptr<_1c48d804e_comptimeStatic> _1c4a16776_comptimeStatic(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data8)) {
			_case_begin_1ab8eaed1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48d804e_comptimeStatic>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ab8eb1ce:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8eb179:;
	};
}



inline jule::Ptr<_1c48ea10a_comptimeValue> _1c4a16a0c_comptimeValue(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data16)) {
			_case_begin_1ab8ebc29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48ea10a_comptimeValue>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ab8ebe27:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8ebdc2:;
	};
}



inline jule::Ptr<_1c48ee054_comptimeFile> _1c4a16c93_comptimeFile(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data18)) {
			_case_begin_1ab8ec972:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48ee054_comptimeFile>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1ab8ecb70:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8ecb1a:;
	};
}



inline jule::Ptr<_1c48ec959_comptimeFiles> _1c4a17029_comptimeFiles(_1c4a1020e_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data17)) {
			_case_begin_1ab8ed665:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1c48ec959_comptimeFiles>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1ab8ed896:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab8ed841:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1020e_TypeKind _Src) {
	_Stream << _1c4a1060a_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a173d1_TypeSymbol_eq(_1c4a173d1_TypeSymbol *_self_, _1c4a173d1_TypeSymbol _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Bool _1c4a17788_checked(_1c4a173d1_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a173d1_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4a17cd8_Prim_eq(_1c4a17cd8_Prim *_self_, _1c4a17cd8_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1c4a1815c_Str(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1c4a1849d_Equal(jule::Ptr<_1c4a17cd8_Prim> _self_, jule::Ptr<_1c4a1020e_TypeKind> _51118_other) {
	jule::Ptr<_1c4a17cd8_Prim> _5123_prim = _1c4a12893_Prim(_51118_other.ptr());;
	if ((_5123_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5123_prim))._field_Kind);;
}



inline jule::Bool _1c4a18943_IsConstraint(_1c4a17cd8_Prim* _self_) {
	return ((((!(_1c4a1b2a3_IsStr(_self_))) && (!(_1c4a1b539_IsAny(_self_)))) && (!(_1c4a1b01c_IsBool(_self_)))) && (!(_1dc544852_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1c4a18bc9_IsI8(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1c4a18e60_IsI16(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1c4a191e6_IsI32(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1c4a1947c_IsI64(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1c4a19713_IsU8(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1c4a19999_IsU16(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1c4a19c30_IsU32(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1c4a19eb6_IsU64(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1c4a1a24c_IsF32(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1c4a1a4d3_IsF64(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1c4a1a769_IsInt(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1c4a1aa00_IsUint(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1c4a1ac86_IsUintptr(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1c4a1b01c_IsBool(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1c4a1b2a3_IsStr(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1c4a1b539_IsAny(_1c4a17cd8_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a17cd8_Prim _Src) {
	_Stream << _1c4a1815c_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a1b814_Sptr_eq(_1c4a1b814_Sptr *_self_, _1c4a1b814_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c4a1bbbb_Str(_1c4a1b814_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1c4a1060a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4a1c00c_Equal(jule::Ptr<_1c4a1b814_Sptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _58818_other) {
	jule::Ptr<_1c4a1b814_Sptr> _5893_sptr = _1c4a12b29_Sptr(_58818_other.ptr());;
	if ((_5893_sptr == nullptr)) {
		return false;;
	};
	return _1c4a1094b_Equal((*(_self_))._field_Elem, (*(_5893_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1b814_Sptr _Src) {
	_Stream << _1c4a1bbbb_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a1c2d7_Slc_eq(_1c4a1c2d7_Slc *_self_, _1c4a1c2d7_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c4a1c79e_Str(_1c4a1c2d7_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1c4a1060a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4a1cae0_Equal(jule::Ptr<_1c4a1c2d7_Slc> _self_, jule::Ptr<_1c4a1020e_TypeKind> _60718_other) {
	jule::Ptr<_1c4a1c2d7_Slc> _6083_slc = _1c4a138e9_Slc(_60718_other.ptr());;
	if ((_6083_slc == nullptr)) {
		return false;;
	};
	return _1c4a1094b_Equal((*(_self_))._field_Elem, (*(_6083_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1c2d7_Slc _Src) {
	_Stream << _1c4a1c79e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1c4a1d283_Str(_1c4a1cdcb_Tuple* _self_) {
	_238b51e24_StrBuilder _6247_s = static__238b52375_New(16LL);;
	_238b52b8e_WriteByte(&_6247_s, '(');
	_238b528d6_WriteStr(&_6247_s, _1c4a1060a_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab90ddb2:;
		if (it != expr_end) {
			jule::Ptr<_1c4a1020e_TypeKind> *_62710_t = it;
			{
				_238b52b8e_WriteByte(&_6247_s, ',');
				_238b528d6_WriteStr(&_6247_s, _1c4a1060a_Str((*(_62710_t)).ptr()));
			}
			_iter_next_1ab90ddb2:;
			++it;
			goto _iter_begin_1ab90ddb2;
		}
		_iter_end_1ab90ddb2:;
	};
	_238b52b8e_WriteByte(&_6247_s, ')');
	return _238b531cd_Str(&_6247_s);;
}



inline jule::Bool _1c4a1d5c4_Equal(jule::Ptr<_1c4a1cdcb_Tuple> _self_, jule::Ptr<_1c4a1020e_TypeKind> _63618_other) {
	jule::Ptr<_1c4a1cdcb_Tuple> _6373_tup = _1c4a146b9_Tup(_63618_other.ptr());;
	if ((_6373_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6373_tup))._field_Types.len())) {
		return false;;
	};
	jule::I64 _6447_i = 0LL;;
	for (; (_6447_i < (*_self_.alloc)._field_Types.len()); (_6447_i)++) {
		{
			if ((!(_1c4a1094b_Equal((*(_self_))._field_Types[_6447_i], (*(_6373_tup))._field_Types[_6447_i])))) {
				return false;;
			};
		}
	_iter_next_1ab91147a:;
	}
	_iter_end_1ab91147a:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1cdcb_Tuple _Src) {
	_Stream << _1c4a1d283_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a1d97b_Map_eq(_1c4a1d97b_Map *_self_, _1c4a1d97b_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1c4a1dd33_Str(_1c4a1d97b_Map* _self_) {
	_238b51e24_StrBuilder _6647_s = static__238b52375_New(16LL);;
	_238b528d6_WriteStr(&_6647_s, jule::Str::lit("map[", 4));
	_238b528d6_WriteStr(&_6647_s, _1c4a1060a_Str((*(_self_))._field_Key.ptr()));
	_238b52b8e_WriteByte(&_6647_s, ']');
	_238b528d6_WriteStr(&_6647_s, _1c4a1060a_Str((*(_self_))._field_Val.ptr()));
	return _238b531cd_Str(&_6647_s);;
}



inline jule::Bool _1c4a1e174_Equal(jule::Ptr<_1c4a1d97b_Map> _self_, jule::Ptr<_1c4a1020e_TypeKind> _67318_other) {
	jule::Ptr<_1c4a1d97b_Map> _6743_m = _1c4a14433_Map(_67318_other.ptr());;
	if ((_6743_m == nullptr)) {
		return false;;
	};
	return (_1c4a1094b_Equal((*(_self_))._field_Key, (*(_6743_m))._field_Key) && _1c4a1094b_Equal((*_self_.alloc)._field_Val, (*(_6743_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1d97b_Map _Src) {
	_Stream << _1c4a1dd33_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a1e608_Arr_eq(_1c4a1e608_Arr *_self_, _1c4a1e608_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1c4a1e9b0_Str(_1c4a1e608_Arr* _self_) {
	_238b51e24_StrBuilder _6927_s = static__238b52375_New(16LL);;
	_238b52b8e_WriteByte(&_6927_s, '[');
	_238b528d6_WriteStr(&_6927_s, _1dc536d2d_Itoa((*(_self_))._field_N));
	_238b52b8e_WriteByte(&_6927_s, ']');
	_238b528d6_WriteStr(&_6927_s, _1c4a1060a_Str((*(_self_))._field_Elem.ptr()));
	return _238b531cd_Str(&_6927_s);;
}



inline jule::Bool _1c4a1ed01_Equal(jule::Ptr<_1c4a1e608_Arr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _70118_other) {
	jule::Ptr<_1c4a1e608_Arr> _7023_arr = _1c4a13663_Arr(_70118_other.ptr());;
	if ((_7023_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7023_arr))._field_N) && _1c4a1094b_Equal((*_self_.alloc)._field_Elem, (*(_7023_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a1e608_Arr _Src) {
	_Stream << _1c4a1e9b0_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a200cb_Ptr_eq(_1c4a200cb_Ptr *_self_, _1c4a200cb_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1c4a20483_Str(_1c4a200cb_Ptr* _self_) {
	if (_1c4a20b48_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1c4a1060a_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1c4a207c4_Equal(jule::Ptr<_1c4a200cb_Ptr> _self_, jule::Ptr<_1c4a1020e_TypeKind> _72518_other) {
	jule::Ptr<_1c4a200cb_Ptr> _7263_ptr = _1c4a12db0_Ptr(_72518_other.ptr());;
	{
		
		if ((_7263_ptr == nullptr)) {
			_case_begin_1ab91cd9e:;
			{
				return false;;
			}
		}
		else if (_1c4a20b48_IsUnsafe(_7263_ptr.ptr())) {
			_case_begin_1ab91c750:;
			{
				return _1c4a20b48_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1ab91c2dd:;
			{
				return _1c4a1094b_Equal((*(_self_))._field_Elem, (*(_7263_ptr))._field_Elem);;
			}
		}
		_match_end_1ab91c277:;
	};
}



inline jule::Bool _1c4a20b48_IsUnsafe(_1c4a200cb_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a200cb_Ptr _Src) {
	_Stream << _1c4a20483_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1c4a210cc_referencer_eq(_1c4a210cc_referencer *_self_, _1c4a210cc_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4a210cc_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1c4a2283c_pushErr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c486c19d_Token> _81523_token, jule::Str _81538_fmt, jule::Slice<jule::Any> _81551_args) {
	_1c4950e0d_pushErr((*(_self_))._field_s.ptr(), _81523_token, _81538_fmt, _81551_args);
}



inline void _1c4a22a3a_allowBuiltin(_1c4a220bc_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1c4a22c38_disallowBuiltin(_1c4a220bc_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1ab921ee6_pushReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a6407_StructIns>* _82737_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1abcc32ba_Exist((*(_self_))._field_refers.ptr(), (*(_82737_t)))) {
		return;;
	};
	_1c48c06b8_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82737_t)), &__jule_any_type9));
}

inline void _1ab9248bc_pushReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48cc1b9_Trait>* _82737_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ab92665a_Exist((*(_self_))._field_refers.ptr(), (*(_82737_t)))) {
		return;;
	};
	_1c48c06b8_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82737_t)), &__jule_any_type10));
}



inline void _1c4a23299_pushReferenceByKind(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _83740_k) {
	{
		
		if ((_1c4a13e16_Struct((*(_83740_k)).ptr()) != nullptr)) {
			_case_begin_1ab920b2c:;
			{
				jule::Ptr<_1c48a6407_StructIns> _8408_t = _1c4a13e16_Struct((*(_83740_k)).ptr());;
				_1ab921ee6_pushReference(_self_, &(_8408_t));
			}
		}
		else if ((_1c4a1419c_Trait((*(_83740_k)).ptr()) != nullptr)) {
			_case_begin_1ab920bc6:;
			{
				jule::Ptr<_1c48cc1b9_Trait> _8438_t = _1c4a1419c_Trait((*(_83740_k)).ptr());;
				_1ab9248bc_pushReference(_self_, &(_8438_t));
			}
		}
		_match_end_1ab920a1c:;
	};
}



inline void _1c4a236b7_pushCycleError(_1c4a220bc_typeChecker* _self_, jule::Any _84826_def1, jule::Any _84837_def2, _238b51e24_StrBuilder* _84853_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8503_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1ab928959, nullptr, nullptr);;
	jule::Str _8603_m = _238b531cd_Str(_84853_message);;
	jule::Str _8613_def1Ident = _8503_getIdent(&(_84826_def1));;
	jule::Str _8623_def2Ident = _8503_getIdent(&(_84837_def2));;
	jule::Str _8633_refersTo = _205a97c49_Logf(jule::Str::lit("@ refers to @", 13), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8613_def1Ident, &__jule_any_type4); (*it++) = jule::Any(_8623_def2Ident, &__jule_any_type4); __jule_collection; }));;
	_238b528d6_WriteStr(_84853_message, _2059e3c83_Repeat(jule::Str::lit(" ", 1), 7LL));
	_238b528d6_WriteStr(_84853_message, _8633_refersTo);
	_238b52b8e_WriteByte(_84853_message, '\n');
	_238b528d6_WriteStr(_84853_message, _8603_m);
}



inline jule::Bool _1c4a23ab3_checkCrossCycle(_1c4a220bc_typeChecker* _self_, jule::Any _87027_decl, _238b51e24_StrBuilder* _87043_message) {
	{
		auto &_match_expr{ _87027_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab92cae5:;
			{
				jule::Ptr<_1c4a0e41c_TypeAlias> _8734_ta = _87027_decl.unsafe_cast_ptr<_1c4a0e41c_TypeAlias>();;
				{
					auto expr = &((*(_8734_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab92da91:;
					if (it != expr_end) {
						jule::Any *_87411_d = it;
						{
							{
								
								if (((*(_87411_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1ab92e388:;
									{
										_1c4a236b7_pushCycleError(_self_, jule::Any(_8734_ta, &__jule_any_type66), (*(_87411_d)), _87043_message);
										return false;;
									}
								}
								else if ((!(_1c4a23ab3_checkCrossCycle(_self_, (*(_87411_d)), _87043_message)))) {
									_case_begin_1ab92e421:;
									{
										_1c4a236b7_pushCycleError(_self_, jule::Any(_8734_ta, &__jule_any_type66), (*(_87411_d)), _87043_message);
										return false;;
									}
								}
								_match_end_1ab92e289:;
							};
						}
						_iter_next_1ab92da91:;
						++it;
						goto _iter_begin_1ab92da91;
					}
					_iter_end_1ab92da91:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab92c95d:;
			{
				jule::Ptr<_1c48a3679_Struct> _8854_s = _87027_decl.unsafe_cast_ptr<_1c48a3679_Struct>();;
				{
					auto expr = &((*(_8854_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab930dd4:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> *_88611_d = it;
						{
							{
								
								if ((__jule_any_type65_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88611_d))))) {
									_case_begin_1ab9316cb:;
									{
										_1c4a236b7_pushCycleError(_self_, jule::Any(_8854_s, &__jule_any_type65), jule::Any((*(_88611_d)), &__jule_any_type65), _87043_message);
										return false;;
									}
								}
								else if ((!(_1c4a23ab3_checkCrossCycle(_self_, jule::Any((*(_88611_d)), &__jule_any_type65), _87043_message)))) {
									_case_begin_1ab931764:;
									{
										_1c4a236b7_pushCycleError(_self_, jule::Any(_8854_s, &__jule_any_type65), jule::Any((*(_88611_d)), &__jule_any_type65), _87043_message);
										return false;;
									}
								}
								_match_end_1ab9315cc:;
							};
						}
						_iter_next_1ab930dd4:;
						++it;
						goto _iter_begin_1ab930dd4;
					}
					_iter_end_1ab930dd4:;
				};
			}
		}
		_match_end_1ab92ca90:;
	};
	return true;;
}



inline jule::Bool _1c4a23eae_checkIllegalCycles(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _90435_ident, jule::Any _90462_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90462_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab9337cc:;
			{
				if ((*(_90462_decl.unsafe_cast_ptr<_1c48a3679_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab931203:;
			{
				if ((*(_90462_decl.unsafe_cast_ptr<_1c4a0e41c_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab93127a:;
	};
	if ((_90462_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1c4a2283c_pushErr(_self_, (*((*(_90435_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_238b51e24_StrBuilder _9277_message = static__238b52375_New(32LL);;
	if ((!(_1c4a23ab3_checkCrossCycle(_self_, _90462_decl, &(_9277_message))))) {
		jule::Str _9308_errMsg = _238b531cd_Str(&_9277_message);;
		_238b533cb_Clear(&_9277_message);
		_1c4a236b7_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90462_decl, &(_9277_message));
		_9308_errMsg+=_238b531cd_Str(&_9277_message);
		_1c4a2283c_pushErr(_self_, (*((*(_90435_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9308_errMsg, &__jule_any_type4); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9381c7:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90462_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab936acc:;
			{
				{
					auto &_match_expr{ _90462_decl };
					
					if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ab938a79:;
						{
							jule::Ptr<_1c48a3679_Struct> _9469_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c48a3679_Struct>();;
							(*(_9469_s))._field_Depends=jule::append((*_9469_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a3679_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90462_decl.cast_ptr<_1c48a3679_Struct>(&__jule_any_type65); __jule_collection; }));
						}
					}
					_match_end_1ab938a13:;
				};
			}
		}
		_match_end_1ab938172:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1c4a243aa_fromTypeAlias(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _95430_decl, jule::Ptr<_1c4a0e41c_TypeAlias>* _95457_ta) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95457_ta))))._field_Public, (*((*(_95457_ta))))._field_Token)))) {
		_1c4a2283c_pushErr(_self_, (*((*(_95430_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95457_ta))))._field_Used=true;
	if (((*((*(_95430_decl))))._field_Generics.len() > 0LL)) {
		_1c4a2283c_pushErr(_self_, (*((*(_95430_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab93dd04:;
			if (it != expr_end) {
				jule::Ptr<_1c4a0e41c_TypeAlias> _97111_bg = *it;
				{
					if (((_97111_bg == (*(_95457_ta))) || (((*((*((*(_95457_ta))))._field_Kind))._field_Kind != nullptr) && _1c4a1094b_Equal((*((*((*(_95457_ta))))._field_Kind))._field_Kind, (*(*(_97111_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1ab93dd04;
					};
				}
				_iter_next_1ab93dd04:;
				++it;
				goto _iter_begin_1ab93dd04;
			}
			_iter_end_1ab93dd04:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab93e8b5:;
			if (it != expr_end) {
				jule::Ptr<_1c4a0e41c_TypeAlias> _98211_bg = *it;
				{
					if ((_98211_bg == (*(_95457_ta)))) {
						_1c4a2283c_pushErr(_self_, (*((*(_95430_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95457_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab9419c7:;
						if (it != expr_end) {
							jule::Ptr<_1c4a0e41c_TypeAlias> _98712_dg = *it;
							{
								if ((_98211_bg == _98712_dg)) {
									_1c4a2283c_pushErr(_self_, (*((*(_95430_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95430_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1ab9419c7:;
							++it;
							goto _iter_begin_1ab9419c7;
						}
						_iter_end_1ab9419c7:;
					};
				}
				_iter_next_1ab93e8b5:;
				++it;
				goto _iter_begin_1ab93e8b5;
			}
			_iter_end_1ab93e8b5:;
		};
	};
	if (((*(*((*(_95457_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		jule::Bool _9984_ok = _1c495d1a1_checkTypeAliasDeclKind((*(_self_))._field_s, _95457_ta, (*(_self_))._field_lookup);;
		if ((!(_9984_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95457_ta))))._field_Kind))._field_Kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)) {
			_case_begin_1ab944ba6:;
			{
				jule::Bool _10064_ok = _1c4a23eae_checkIllegalCycles(_self_, _95430_decl, jule::Any((*((*(*((*((*(_95457_ta))))._field_Kind))._field_Kind.alloc)._field_Kind.cast_ptr<_1c48a6407_StructIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)))._field_Decl, &__jule_any_type65));;
				if ((!(_10064_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1ab944b40:;
	};
	if (((*((*(_95457_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95457_ta)); __jule_collection; }));
	};
	jule::Ptr<_1c4a1020e_TypeKind> _10187_tk = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95457_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95457_ta))))._field_Kind))._field_Kind.alloc)._field_Kind});;
	_1c4a23299_pushReferenceByKind(_self_, &(_10187_tk));
	if ((*((*(_95457_ta))))._field_Binded) {
		(*(_10187_tk))._field_BindIdent=(*((*(_95457_ta))))._field_Ident;
	} else {
		(*(_10187_tk))._field_BindIdent=(*(*((*((*(_95457_ta))))._field_Kind))._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_10187_tk, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data19);;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c4a247a6_fromEnum(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _103125_decl, jule::Ptr<_1c48ce8c5_Enum>* _103152_e) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103152_e))))._field_Public, (*((*(_103152_e))))._field_Token)))) {
		_1c4a2283c_pushErr(_self_, (*((*(_103125_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103125_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103125_decl))))._field_Generics.len() > 0LL)) {
		_1c4a2283c_pushErr(_self_, (*((*(_103125_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103125_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103152_e));;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c4a24ba2_fromTypeEnum(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _104329_decl, jule::Ptr<_1c48d10d0_TypeEnum>* _104356_e) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104356_e))))._field_Public, (*((*(_104356_e))))._field_Token)))) {
		_1c4a2283c_pushErr(_self_, (*((*(_104329_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104329_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104329_decl))))._field_Generics.len() > 0LL)) {
		_1c4a2283c_pushErr(_self_, (*((*(_104329_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104329_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104356_e));;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c4a2509d_fromTrait(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _105526_decl, jule::Ptr<_1c48cc1b9_Trait>* _105553_t) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_105553_t))))._field_Public, (*((*(_105553_t))))._field_Token)))) {
		_1c4a2283c_pushErr(_self_, (*((*(_105526_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105526_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_105526_decl))))._field_Generics.len() > 0LL)) {
		_1c4a2283c_pushErr(_self_, (*((*(_105526_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_105526_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1ab9248bc_pushReference(_self_, _105553_t);
	return (*(_105553_t));;
}



inline jule::Bool _1c4a25499_checkStructIns(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a6407_StructIns>* _106835_ins, jule::Ptr<_1c486c19d_Token>* _106857_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106835_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106835_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type65_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106835_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1c4969b91_precheckStructIns((*(_self_))._field_s, _106835_ins, (*(_106857_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106835_ins))))._field_Generics.len() > 0LL)) {
		_1c496a6a8_checkStructInsOperators((*(_self_))._field_s, (*(_106835_ins)));
		_1c4969e49_checkStructIns((*(_self_))._field_s, _106835_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c4a25752_appendUsedStructReference(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48a3679_Struct>* _108946_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab957070:;
			{
				jule::Ptr<_1c48a3679_Struct> _10958_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1c48a3679_Struct>();;
				if ((!(_1c48a513c_IsUses(_10958_refS.ptr(), (*(_108946_s)))))) {
					(*_10958_refS.alloc)._field_Uses=jule::append((*_10958_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a3679_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_108946_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1ab95701a:;
	};
}



inline jule::Ptr<_1c48a6407_StructIns> _1c4a25b4d_buildStructInstance(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _110240_decl, jule::Ptr<_1c48a3679_Struct>* _110267_s) {
	jule::Ptr<_1c4a210cc_referencer> _11047_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> _11067_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
				_case_begin_1ab95a062:;
				{
					jule::Ptr<_1c4913244_scopeChecker> _11139_sc = (*(_self_))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0);;
					jule::Ptr<_1c4913244_scopeChecker> _11149_hard = _1c49168a7_getHardRoot(_11139_sc);;
					if ((((*((*(_11149_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11149_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110267_s))))) {
						goto _match_end_1ab95a00c;
					};
					jule::I64 _11185_n = ((*(*(_11149_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11149_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11149_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11185_n);
				}
			}
			_match_end_1ab95a00c:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11287_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1c48a6407_StructIns> _11327_ins = _1c48a3b1e_instance((*(_110267_s)));;
	(*(_11327_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(0LL, (*((*(_110240_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a0d828_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110240_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab960353:;
		if (it != expr_end) {
			jule::Ptr<_1c4882779_TypeDecl> _113415_g = *it;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _11358_kind = _1c4a29459_build(_self_, &((*(_113415_g))._field_Kind));;
				if ((_11358_kind == nullptr)) {
					return nullptr;;
				};
				(*_11327_ins.alloc)._field_Generics=jule::append((*_11327_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1c4a0d828_InsGeneric>(_1c4a0d828_InsGeneric{._field_Kind=_11358_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1ab960353:;
			++it;
			goto _iter_begin_1ab960353;
		}
		_iter_end_1ab960353:;
	};
	(*(_self_))._field_lookup=_11287_lookup;
	(*(_self_))._field_bannedGenerics=_11067_bannedGenerics;
	(*(_self_))._field_referencer=_11047_referencer;
	return _11327_ins;;
}



inline jule::Ptr<_1c48a6407_StructIns> _1c4a26049_fromStruct(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _115031_decl, jule::Ptr<_1c48a3679_Struct>* _115058_s) {
	if ((!(_1c495166c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_115058_s))))._field_Public, (*((*(_115058_s))))._field_Token)))) {
		_1c4a2283c_pushErr(_self_, (*((*(_115031_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_115031_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_115031_decl))))._field_Generics.len() > 0LL)) {
			_1c4a2283c_pushErr(_self_, (*((*(_115031_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1c48a6407_StructIns>(_1c48a6407_StructIns{._field_Checked=false, ._field_Decl=(*(_115058_s)), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1c48a5857_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c48b8738_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Operators=_1c48a2766_Operators{._field_Eq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Add=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Div=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1c48bb719_FnIns>(nullptr)}});;
	};
	jule::Bool _11687_ok = _1c4a23eae_checkIllegalCycles(_self_, _115031_decl, jule::Any((*(_115058_s)), &__jule_any_type65));;
	if ((!(_11687_ok))) {
		return nullptr;;
	};
	_1c4a25752_appendUsedStructReference(_self_, _115058_s);
	jule::Ptr<_1c48a6407_StructIns> _11747_ins = _1c4a25b4d_buildStructInstance(_self_, _115031_decl, _115058_s);;
	if ((_11747_ins == nullptr)) {
		return nullptr;;
	};
	_11687_ok=_1c495243c_checkGenericQuantity((*(_self_))._field_s, (*((*(_11747_ins))._field_Decl))._field_Generics.len(), (*(_11747_ins))._field_Generics.len(), (*((*(_115031_decl))))._field_Token);
	if ((!(_11687_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1c48a6407_StructIns> _11847_existInstance = _1c48a3e2c_appendInstance((*(_115058_s)).ptr(), &(_11747_ins));;
	if ((_11847_existInstance != nullptr)) {
		if ((!(_1c495b39c_checkConstraintsStruct((*(_self_))._field_s, &(_11747_ins), &((*((*(_115031_decl))))._field_Token), _11847_existInstance)))) {
			return nullptr;;
		};
		_1ab921ee6_pushReference(_self_, &(_11847_existInstance));
		return _11847_existInstance;;
	};
	if ((!(_1c4a25499_checkStructIns(_self_, &(_11747_ins), &((*((*(_115031_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1ab921ee6_pushReference(_self_, &(_11747_ins));
	return _11747_ins;;
}



inline jule::Trait _1c4a2638a_getDef(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl>* _120827_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab969c20:;
		if (it != expr_end) {
			jule::Ptr<_1c488e984_GenericDecl> _120910_g = *it;
			{
				if (((*(_120910_g))._field_Ident == (*((*(_120827_decl))))._field_Ident)) {
					return jule::Trait(_1c4a2c12c_buildPrimType((*_120910_g.alloc)._field_Ident), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20);;
				};
			}
			_iter_next_1ab969c20:;
			++it;
			goto _iter_begin_1ab969c20;
		}
		_iter_end_1ab969c20:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab96a061:;
		if (it != expr_end) {
			jule::Ptr<_1c4a0e41c_TypeAlias> _121515_g = *it;
			{
				if (((*(_121515_g))._field_Ident == (*((*(_120827_decl))))._field_Ident)) {
					if (((*((*(_120827_decl))))._field_Generics.len() > 0LL)) {
						_1c4a2283c_pushErr(_self_, (*((*(_120827_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_120827_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1c48a6407_StructIns> _12219_st = _1c4a13e16_Struct((*((*_121515_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_12219_st != nullptr)) {
						jule::Bool _12236_ok = _1c4a23eae_checkIllegalCycles(_self_, _120827_decl, jule::Any((*_12219_st.alloc)._field_Decl, &__jule_any_type65));;
						if ((!(_12236_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_121515_g))._field_Kind))._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1ab96a061:;
			++it;
			goto _iter_begin_1ab96a061;
		}
		_iter_end_1ab96a061:;
	};
	if ((!((*((*(_120827_decl))))._field_Binded))) {
		jule::Ptr<_1c48ce8c5_Enum> _12338_e = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2e85a_FindEnum((*(_self_))._field_lookup.data, (*((*(_120827_decl))))._field_Ident);;
		if ((_12338_e != nullptr)) {
			return jule::Trait(_1c4a247a6_fromEnum(_self_, _120827_decl, &(_12338_e)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3);;
		};
		jule::Ptr<_1c48d10d0_TypeEnum> _12388_te = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2eb9b_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120827_decl))))._field_Ident);;
		if ((_12388_te != nullptr)) {
			return jule::Trait(_1c4a24ba2_fromTypeEnum(_self_, _120827_decl, &(_12388_te)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4);;
		};
		jule::Ptr<_1c48cc1b9_Trait> _12438_t = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2e519_FindTrait((*(_self_))._field_lookup.data, (*((*(_120827_decl))))._field_Ident);;
		if ((_12438_t != nullptr)) {
			return jule::Trait(_1c4a2509d_fromTrait(_self_, _120827_decl, &(_12438_t)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1c4a2283c_pushErr(_self_, (*((*(_120827_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c48a3679_Struct> _12527_s = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2dccc_FindStruct((*(_self_))._field_lookup.data, (*((*(_120827_decl))))._field_Ident, (*((*(_120827_decl))))._field_Binded);;
	if ((_12527_s != nullptr)) {
		return jule::Trait(_1c4a26049_fromStruct(_self_, _120827_decl, &(_12527_s)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0);;
	};
	jule::Ptr<_1c4a0e41c_TypeAlias> _12577_ta = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2d8d1_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120827_decl))))._field_Ident, (*((*(_120827_decl))))._field_Binded);;
	if (((_12577_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12577_ta=_21ddd3a3e_findBuiltinTypeAlias((*((*(_120827_decl))))._field_Ident);
	};
	if ((_12577_ta != nullptr)) {
		return _1c4a243aa_fromTypeAlias(_self_, _120827_decl, &(_12577_ta));;
	};
	_1c4a2283c_pushErr(_self_, (*((*(_120827_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_120827_decl))))._field_Ident, &__jule_any_type4); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1c4a266cb_buildIdent(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882d84_IdentTypeDecl> _126930_decl) {
	return _1c4a2638a_getDef(_self_, &(_126930_decl));;
}



inline jule::Trait _1c4a26a1c_buildSubIdent(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c488314d_SubIdentTypeDecl> _127333_decl) {
	jule::Trait _12747_ident = _1c4a266cb_buildIdent(_self_, (*(_127333_decl))._field_Idents[0LL]);;
	if ((_12747_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12747_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)) {
			_case_begin_1ab977e09:;
			{
				goto _match_end_1ab9781d4;
			}
		}
		else {
			_case_begin_1ab977c61:;
			{
				_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab9781d4:;
	};
	jule::Ptr<_1c48d10d0_TypeEnum> _12857_t = _12747_ident.cast_ptr<_1c48d10d0_TypeEnum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>> _12867_idents = (*_127333_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12867_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab97979b:;
		if (it != expr_end) {
			jule::I64 _12877_i = it - expr->begin();
			jule::Ptr<_1c4882d84_IdentTypeDecl> _128710_id = *it;
			{
				jule::Ptr<_1c48d0a08_TypeEnumItem> _12888_item = _1c48d1bc4_FindItem(_12857_t.ptr(), (*(_128710_id))._field_Ident);;
				if ((_12888_item == nullptr)) {
					_1c4a2283c_pushErr(_self_, (*_128710_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12857_t.alloc)._field_Ident, &__jule_any_type4); (*it++) = jule::Any((*_128710_id.alloc)._field_Ident, &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				if (((_12867_idents.len() - _12877_i) == 1LL)) {
					_1c4a23299_pushReferenceByKind(_self_, &((*((*(_12888_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_12888_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data19);;
				};
				_12857_t=_1c4a133cc_TypeEnum((*(*(_12888_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_12857_t == nullptr)) {
					_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ab97979b:;
			++it;
			_12877_i++;
			goto _iter_begin_1ab97979b;
		}
		_iter_end_1ab97979b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a1b814_Sptr> _1c4a26d5d_buildSptrFromType(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _130738_elem) {
	{
		
		if (((*(_130738_elem)) == nullptr)) {
			_case_begin_1ab97dea9:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4a13e16_Struct((*(_130738_elem)).ptr()) != nullptr)) {
			_case_begin_1ab97e053:;
			{
				jule::Ptr<_1c48a6407_StructIns> _13134_s = _1c4a13e16_Struct((*(_130738_elem)).ptr());;
				if ((((*(_13134_s))._field_Decl != nullptr) && (*(*(_13134_s))._field_Decl.alloc)._field_Binded)) {
					_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1c4a13663_Arr((*(_130738_elem)).ptr()) != nullptr) && (*(_1c4a13663_Arr((*(_130738_elem)).ptr())))._field_Auto)) {
			_case_begin_1ab97e0b9:;
			{
				_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab97d6a1:;
	};
	return jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=(*(_130738_elem))});;
}



inline jule::Ptr<_1c4a1b814_Sptr> _1c4a2719e_buildSptr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883824_SptrTypeDecl> _132729_decl) {
	jule::Bool _13283_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13283_cycleRisk;
	});;
	jule::Ptr<_1c4a1020e_TypeKind> _13327_elem = _1c4a2979a_checkDecl(_self_, &((*(_132729_decl))._field_Elem));;
	return _1c4a26d5d_buildSptrFromType(_self_, &(_13327_elem));;
}



inline jule::Ptr<_1c4a200cb_Ptr> _1c4a274e0_buildPtrFromType(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _133637_elem) {
	{
		
		if (((*(_133637_elem)) == nullptr)) {
			_case_begin_1ac016a4c:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4a13663_Arr((*(_133637_elem)).ptr()) != nullptr) && (*(_1c4a13663_Arr((*(_133637_elem)).ptr())))._field_Auto)) {
			_case_begin_1ac016ae6:;
			{
				_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1c4a200cb_Ptr>(_1c4a200cb_Ptr{._field_Elem=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)});;
			}
		}
		_match_end_1ac01693c:;
	};
	return jule::new_ptr<_1c4a200cb_Ptr>(_1c4a200cb_Ptr{._field_Elem=(*(_133637_elem))});;
}



inline jule::Ptr<_1c4a200cb_Ptr> _1c4a27831_buildPtr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48842a3_PtrTypeDecl> _135128_decl) {
	jule::Bool _13523_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13523_cycleRisk;
	});;
	jule::Ptr<_1c4a1020e_TypeKind> _135611_elem = nullptr;;
	if ((!(_1c4884649_IsUnsafe(_135128_decl.ptr())))) {
		_135611_elem=_1c4a2979a_checkDecl(_self_, &((*_135128_decl.alloc)._field_Elem));
		return _1c4a274e0_buildPtrFromType(_self_, &(_135611_elem));;
	};
	return jule::new_ptr<_1c4a200cb_Ptr>(_1c4a200cb_Ptr{._field_Elem=_135611_elem});;
}



inline jule::Ptr<_1c4a1c2d7_Slc> _1c4a27b72_buildSlc(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883ba9_SlcTypeDecl> _136828_decl) {
	jule::Bool _13693_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13693_cycleRisk;
	});;
	jule::Ptr<_1c4a1020e_TypeKind> _13737_elem = _1c4a2979a_checkDecl(_self_, &((*(_136828_decl))._field_Elem));;
	{
		
		if ((_13737_elem == nullptr)) {
			_case_begin_1ac01bb2e:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4a13663_Arr(_13737_elem.ptr()) != nullptr) && (*(_1c4a13663_Arr(_13737_elem)))._field_Auto)) {
			_case_begin_1ac01bbc8:;
			{
				_1c4a2283c_pushErr(_self_, (*((*_136828_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac01bac9:;
	};
	return jule::new_ptr<_1c4a1c2d7_Slc>(_1c4a1c2d7_Slc{._field_Elem=_13737_elem});;
}



inline jule::Ptr<_1c4a1e608_Arr> _1c4a27eb3_buildArr(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4884a45_ArrTypeDecl> _138928_decl) {
	jule::I64 _13907_n = 0LL;;
	if ((!(_1c4884ddb_AutoSized(_138928_decl.ptr())))) {
		jule::Ptr<_1c49ce024_Data> _13938_size = _1c49edede_evalExpr(_1c49583aa_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138928_decl.alloc)._field_Size);;
		if ((_13938_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1c49ce95e_IsConst(_13938_size.ptr())))) {
			_1c4a2283c_pushErr(_self_, (*((*_138928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1c4a12893_Prim((*(_13938_size))._field_Kind.ptr()) == nullptr) || (!(_1dc54427a_IsInt((*(_1c4a12893_Prim((*(_13938_size))._field_Kind)))._field_Kind))))) {
			_1c4a2283c_pushErr(_self_, (*((*_138928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13907_n=static_cast<jule::I64>(_1dc547a53_AsI64((*(_13938_size))._field_Constant.ptr()));
		if ((_13907_n < 0LL)) {
			_1c4a2283c_pushErr(_self_, (*((*_138928_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14115_max = _1dc5402dc_MaxI(jule::Str::lit("int", 3));;
			if (((_1dc5381b4_BitSize != 64LL) && (static_cast<jule::I64>(_13907_n) > _14115_max))) {
				_1c4a2283c_pushErr(_self_, (*((*_138928_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a0b21b_constoa(&((*(_13938_size))._field_Constant)), &__jule_any_type4); (*it++) = jule::Any(_1dc536a64_FmtInt(_14115_max, 10LL), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1c4a1020e_TypeKind> _14207_elem = _1c4a2979a_checkDecl(_self_, &((*_138928_decl.alloc)._field_Elem));;
	{
		
		if ((_14207_elem == nullptr)) {
			_case_begin_1ac026771:;
			{
				return nullptr;;
			}
		}
		else if (((_1c4a13663_Arr(_14207_elem.ptr()) != nullptr) && (*(_1c4a13663_Arr(_14207_elem)))._field_Auto)) {
			_case_begin_1ac0267e8:;
			{
				_1c4a2283c_pushErr(_self_, (*((*_138928_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac02487e:;
	};
	return jule::new_ptr<_1c4a1e608_Arr>(_1c4a1e608_Arr{._field_Auto=_1c4884ddb_AutoSized(_138928_decl), ._field_N=_13907_n, ._field_Elem=_14207_elem});;
}



inline jule::Ptr<_1c4a1d97b_Map> _1c4a28304_buildMap(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4885293_MapTypeDecl> _143828_decl) {
	jule::Bool _14393_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14393_cycleRisk;
	});;
	jule::Ptr<_1c4a1020e_TypeKind> _14437_key = _1c4a2979a_checkDecl(_self_, &((*(_143828_decl))._field_Key));;
	if ((_14437_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a1020e_TypeKind> _14487_val = _1c4a2979a_checkDecl(_self_, &((*_143828_decl.alloc)._field_Val));;
	if ((_14487_val == nullptr)) {
		return nullptr;;
	};
	if ((_1c4a13146_Enum(_14487_val.ptr()) != nullptr)) {
		_1c4a2283c_pushErr(_self_, (*((*_143828_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1c4a1d97b_Map>(_1c4a1d97b_Map{._field_Key=_14437_key, ._field_Val=_14487_val});;
}



inline jule::Ptr<_1c4a1cdcb_Tuple> _1c4a28645_buildTuple(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883ea6_TupleTypeDecl> _146230_decl) {
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _14637_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(0LL, (*(_146230_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a1020e_TypeKind>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_146230_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac02cc3e:;
		if (it != expr_end) {
			jule::Ptr<_1c4882779_TypeDecl> _146415_t = *it;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _14658_kind = _1c4a2979a_checkDecl(_self_, &(_146415_t));;
				if ((_14658_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> &__jule_push_dest = _14637_types; __jule_push_dest.push(_14658_kind); };
			}
			_iter_next_1ac02cc3e:;
			++it;
			goto _iter_begin_1ac02cc3e;
		}
		_iter_end_1ac02cc3e:;
	};
	return jule::new_ptr<_1c4a1cdcb_Tuple>(_1c4a1cdcb_Tuple{._field_Types=_14637_types});;
}



inline jule::Bool _1c4a28986_checkFuncTypes(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c48bb719_FnIns>* _147535_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_147535_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac02e757:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _147615_p = *it;
			{
				(*(_147615_p))._field_Kind=_1c4a29459_build(_self_, &((*((*((*((*_147615_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147615_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1c495ba51_checkFnParamKind((*(_self_))._field_s, &(_147615_p));
			}
			_iter_next_1ac02e757:;
			++it;
			goto _iter_begin_1ac02e757;
		}
		_iter_end_1ac02e757:;
	};
	if ((!(_1c48b8bde_IsVoid((*((*(_147535_f))))._field_Decl.ptr())))) {
		(*((*(_147535_f))))._field_Result=_1c4a29459_build(_self_, &((*(*((*((*((*((*(_147535_f))))._field_Decl))._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_147535_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c4a28cc7_buildFunc(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4894439_FnDecl> _149329_decl) {
	jule::Bool _14943_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14943_cycleRisk;
	});;
	if (((*(_149329_decl))._field_Generics.len() > 0LL)) {
		_1c4a2283c_pushErr(_self_, (*_149329_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c48b8738_Fn> _15037_f = _1c48c2d3b_buildFunc(_149329_decl);;
	jule::I64 _15053_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1c4965d46_checkAnonFuncDecl((*(_self_))._field_s, &(_15037_f));
	if ((_15053_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c48bb719_FnIns> _15117_ins = _1c48b9c45_instanceForce(_15037_f);;
	(*(_15117_ins))._field_Anon=true;
	(*_15117_ins.alloc)._field_AsAnon=true;
	jule::Bool _15153_ok = _1c4a28986_checkFuncTypes(_self_, &(_15117_ins));;
	if ((!(_15153_ok))) {
		return nullptr;;
	};
	return _15117_ins;;
}



inline jule::Trait _1c4a29118_buildByNamespace(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4883527_NamespaceTypeDecl> _152336_decl) {
	jule::Str _15243_path = _1c4a2bc53_buildLinkPathByTokens(&((*(_152336_decl))._field_Idents));;
	jule::Ptr<_1c492cd1e_ImportInfo> _15257_imp = ((_1c4a2ed00_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1c4a2d0d9_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>>((void*)__jule_anon_1ac038e04, jule::Ptr<__jule_anon_1ac038e04_ctx>::make(__jule_anon_1ac038e04_ctx{._152336_decl=_152336_decl,._15243_path=_15243_path}).as<jule::Uintptr>(), __jule_anon_1ac038e04_ctx_handler));;
	jule::Str _15323_selfIdent = jule::Str::lit("self", 4);;
	if (((_15257_imp == nullptr) || (!(_1c4930393_isLookupable(_15257_imp.ptr(), &(_15323_selfIdent)))))) {
		_1c4a2283c_pushErr(_self_, (*(_152336_decl))._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_15243_path, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	_1c4a22c38_disallowBuiltin(_self_);
	jule::Trait _15397_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15257_imp, (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data1);
	jule::Ptr<_1c4a1020e_TypeKind> _15417_kind = _1c4a2979a_checkDecl(_self_, &((*_152336_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15397_lookup;
	_1c4a22a3a_allowBuiltin(_self_);
	return jule::Trait(_15417_kind, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data19);;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c4a29459_build(_1c4a220bc_typeChecker* _self_, jule::Any* _154726_declKind) {
	jule::Trait _154811_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154726_declKind)) };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac03e8dd:;
			{
				jule::Trait _15518_t = _1c4a266cb_buildIdent(_self_, (*(_154726_declKind)).cast_ptr<_1c4882d84_IdentTypeDecl>(&__jule_any_type75));;
				if ((_15518_t != nullptr)) {
					_154811_kind=_15518_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac03dd0a:;
			{
				jule::Trait _15568_t = _1c4a26a1c_buildSubIdent(_self_, (*(_154726_declKind)).cast_ptr<_1c488314d_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_15568_t != nullptr)) {
					_154811_kind=_15568_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ac03dea3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a1b814_Sptr> _15628_t = _1c4a2719e_buildSptr(_self_, (*(_154726_declKind)).cast_ptr<_1c4883824_SptrTypeDecl>(&__jule_any_type72));;
				if ((_15628_t != nullptr)) {
					_154811_kind=jule::Trait(_15628_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ac03e019:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a200cb_Ptr> _15688_t = _1c4a27831_buildPtr(_self_, (*(_154726_declKind)).cast_ptr<_1c48842a3_PtrTypeDecl>(&__jule_any_type71));;
				if ((_15688_t != nullptr)) {
					_154811_kind=jule::Trait(_15688_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ac03e080:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a1c2d7_Slc> _15748_t = _1c4a27b72_buildSlc(_self_, (*(_154726_declKind)).cast_ptr<_1c4883ba9_SlcTypeDecl>(&__jule_any_type70));;
				if ((_15748_t != nullptr)) {
					_154811_kind=jule::Trait(_15748_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ac03e0e6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a1e608_Arr> _15808_t = _1c4a27eb3_buildArr(_self_, (*(_154726_declKind)).cast_ptr<_1c4884a45_ArrTypeDecl>(&__jule_any_type69));;
				if ((_15808_t != nullptr)) {
					_154811_kind=jule::Trait(_15808_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ac03e15c:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a1d97b_Map> _15868_t = _1c4a28304_buildMap(_self_, (*(_154726_declKind)).cast_ptr<_1c4885293_MapTypeDecl>(&__jule_any_type73));;
				if ((_15868_t != nullptr)) {
					_154811_kind=jule::Trait(_15868_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ac03e1c3:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c4a1cdcb_Tuple> _15928_t = _1c4a28645_buildTuple(_self_, (*(_154726_declKind)).cast_ptr<_1c4883ea6_TupleTypeDecl>(&__jule_any_type74));;
				if ((_15928_t != nullptr)) {
					_154811_kind=jule::Trait(_15928_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac03e9a9:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1c48bb719_FnIns> _15988_t = _1c4a28cc7_buildFunc(_self_, (*(_154726_declKind)).cast_ptr<_1c4894439_FnDecl>(&__jule_any_type14));;
				if ((_15988_t != nullptr)) {
					_154811_kind=jule::Trait(_15988_t, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1ac03ea20:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16048_t = _1c4a29118_buildByNamespace(_self_, (*(_154726_declKind)).cast_ptr<_1c4883527_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_16048_t != nullptr)) {
					_154811_kind=_16048_t;
				};
			}
		}
		else {
			_case_begin_1ac03de3c:;
			{
				_1c4a2283c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac03ddd7:;
	};
	if ((_154811_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154811_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data19)) {
			_case_begin_1ac04ce5c:;
			{
				return _154811_kind.cast_ptr<_1c4a1020e_TypeKind>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1ac03ede9:;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _16198_tk = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_154811_kind});;
				{
					auto &_match_expr{ _154811_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)) {
						_case_begin_1ac04b356:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16198_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)) {
						_case_begin_1ac04b1e1:;
						{
							jule::Ptr<_1c48a6407_StructIns> _16265_s = _154811_kind.cast_ptr<_1c48a6407_StructIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0);;
							if ((((*(_16265_s))._field_Decl != nullptr) && (*(*(_16265_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16198_tk))._field_BindIdent=(*(*(_16265_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1ac04b301:;
				};
				return _16198_tk;;
			}
		}
		_match_end_1ac04a60d:;
	};
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c4a2979a_checkDecl(_1c4a220bc_typeChecker* _self_, jule::Ptr<_1c4882779_TypeDecl>* _163530_decl) {
	jule::Ptr<_1c486c19d_Token> _16377_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_163530_decl))))._field_Token;
	jule::Ptr<_1c4a1020e_TypeKind> _16407_kind = _1c4a29459_build(_self_, &((*((*(_163530_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16377_errorToken;
	return _16407_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a220bc_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4a29c73_identTypeLookup_eq(_1c4a29c73_identTypeLookup *_self_, _1c4a29c73_identTypeLookup _other_) { return true; }

inline jule::Bool static__1c4a2a1e6_prim(jule::Str* _166218_ident, jule::Ptr<_1c4a17cd8_Prim> _166230_t) {
	return ((*(_166230_t))._field_Kind == (*(_166218_ident)));;
}



inline jule::Bool static__1c4a2a56a_exist(jule::Str* _166619_ident, jule::Ptr<_1c4a1020e_TypeKind>* _166636_k) {
	{
		
		if ((_1c4a12893_Prim((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac052c53:;
			{
				return static__1c4a2a1e6_prim(_166619_ident, _1c4a12893_Prim((*(_166636_k)).ptr()));;
			}
		}
		else if ((_1c4a12b29_Sptr((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac052cca:;
			{
				jule::Ptr<_1c4a1b814_Sptr> _16718_sptr = _1c4a12b29_Sptr((*(_166636_k)).ptr());;
				return static__1c4a2a56a_exist(_166619_ident, &((*(_16718_sptr))._field_Elem));;
			}
		}
		else if ((_1c4a12db0_Ptr((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac052d52:;
			{
				jule::Ptr<_1c4a200cb_Ptr> _16748_ptr = _1c4a12db0_Ptr((*(_166636_k)).ptr());;
				return static__1c4a2a56a_exist(_166619_ident, &((*(_16748_ptr))._field_Elem));;
			}
		}
		else if ((_1c4a138e9_Slc((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac052dc9:;
			{
				jule::Ptr<_1c4a1c2d7_Slc> _16778_slc = _1c4a138e9_Slc((*(_166636_k)).ptr());;
				return static__1c4a2a56a_exist(_166619_ident, &((*(_16778_slc))._field_Elem));;
			}
		}
		else if ((_1c4a13663_Arr((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac053094:;
			{
				jule::Ptr<_1c4a1e608_Arr> _16808_arr = _1c4a13663_Arr((*(_166636_k)).ptr());;
				return static__1c4a2a56a_exist(_166619_ident, &((*(_16808_arr))._field_Elem));;
			}
		}
		else if ((_1c4a14433_Map((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac05310a:;
			{
				jule::Ptr<_1c4a1d97b_Map> _16838_m = _1c4a14433_Map((*(_166636_k)).ptr());;
				return (static__1c4a2a56a_exist(_166619_ident, &((*(_16838_m))._field_Key)) || static__1c4a2a56a_exist(_166619_ident, &((*_16838_m.alloc)._field_Val)));;
			}
		}
		else if ((_1c4a13e16_Struct((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac053171:;
			{
				jule::Ptr<_1c48a6407_StructIns> _16878_s = _1c4a13e16_Struct((*(_166636_k)).ptr());;
				{
					auto expr = &((*(_16878_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac05a244:;
					if (it != expr_end) {
						jule::Ptr<_1c4a0d828_InsGeneric> _168816_g = *it;
						{
							if (static__1c4a2a56a_exist(_166619_ident, &((*(_168816_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac05a244:;
						++it;
						goto _iter_begin_1ac05a244;
					}
					_iter_end_1ac05a244:;
				};
				return false;;
			}
		}
		else if ((_1c4a13b80_Fn((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac0531d7:;
			{
				jule::Ptr<_1c48bb719_FnIns> _16958_f = _1c4a13b80_Fn((*(_166636_k)).ptr());;
				{
					auto expr = &((*(_16958_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac05bd6c:;
					if (it != expr_end) {
						jule::Ptr<_1c48ba691_ParamIns> _169616_p = *it;
						{
							if (_1c48b73b3_IsSelf((*(_169616_p))._field_Decl.ptr())) {
								goto _iter_next_1ac05bd6c;
							};
							if (static__1c4a2a56a_exist(_166619_ident, &((*_169616_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1ac05bd6c:;
						++it;
						goto _iter_begin_1ac05bd6c;
					}
					_iter_end_1ac05bd6c:;
				};
				if (((*_16958_f.alloc)._field_Result != nullptr)) {
					return static__1c4a2a56a_exist(_166619_ident, &((*_16958_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1c4a146b9_Tup((*(_166636_k)).ptr()) != nullptr)) {
			_case_begin_1ac05325e:;
			{
				jule::Ptr<_1c4a1cdcb_Tuple> _17098_tup = _1c4a146b9_Tup((*(_166636_k)).ptr());;
				{
					auto expr = &((*(_17098_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aba268d1:;
					if (it != expr_end) {
						jule::Ptr<_1c4a1020e_TypeKind> _171016_t = *it;
						{
							if (static__1c4a2a56a_exist(_166619_ident, &(_171016_t))) {
								return true;;
							};
						}
						_iter_next_1aba268d1:;
						++it;
						goto _iter_begin_1aba268d1;
					}
					_iter_end_1aba268d1:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ac052b32:;
			{
				return false;;
			}
		}
		_match_end_1ac052a33:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c4a29c73_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c5635e77_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c567bbd2_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1c567cc27_stop(_1c567c573_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1c567cead_stopped(_1c567c573_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1c567d244_finished(_1c567c573_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1c567d4ca_isLastSt(_1c567c573_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1c567d83d_pushErr(_1c567c573_scopeParser* _self_, jule::Ptr<_1c486c19d_Token> _18823_token, jule::Str _18838_fmt) {
	_1c569b5d6_pushErr((*(_self_))._field_p.ptr(), _18823_token, _18838_fmt, jule::Slice<jule::Any>());
}



inline void _1c567dba1_pushSuggestion(_1c567c573_scopeParser* _self_, jule::Str _19330_fmt, jule::Slice<jule::Any> _19343_args) {
	_1c569b949_pushSuggestion((*(_self_))._field_p.ptr(), _19330_fmt, _19343_args);
}



inline void _1c567de59_insertAsNext(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _19733_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1c567bbd2_stmt>(_1c567bbd2_stmt{._field_tokens=(*(_19733_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1c567bbd2_stmt> _1c567e1e0_next(_1c567c573_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1c489279a_ScopeTree> _1c567e5db_buildScope(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _20731_tokens, jule::Ptr<_1c486c19d_Token> _20753_end) {
	jule::Ptr<_1c489279a_ScopeTree> _2087_s = _1c567a98e_newScope();;
	(*(_2087_s))._field_Parent=(*(_self_))._field_s;
	(*_2087_s.alloc)._field_End=_20753_end;
	_1c567c573_scopeParser _2117_ssp = _1c567c573_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1c567bbd2_stmt>>(nullptr), ._field_pos=0};;
	_1c568945e_build(&_2117_ssp, _20731_tokens, &(_2087_s));
	return _2087_s;;
}



inline jule::Ptr<_1c48955e4_VarDecl> _1c567e92c_buildVarSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _21831_tokens) {
	jule::Ptr<_1c48955e4_VarDecl> _2197_v = _1c569e3a8_buildVar((*(_self_))._field_p, (*(_21831_tokens)));;
	if ((_2197_v != nullptr)) {
		(*_2197_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _2197_v;;
}



inline jule::Ptr<_1c48959bd_RetSt> _1c567ec6d_buildRetSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _22630_tokens) {
	jule::Ptr<_1c48959bd_RetSt> _2277_st = jule::new_ptr<_1c48959bd_RetSt>(_1c48959bd_RetSt{._field_Token=_22630_tokens[0LL], ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	if ((_22630_tokens.len() > 1LL)) {
		(_22630_tokens).mut_slice(1LL);;
		(*(_2277_st))._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_22630_tokens));
	};
	return _2277_st;;
}



inline jule::Ptr<_1c489623d_Iter> _1c56800ae_buildWhileNextIter(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _23739_s) {
	jule::Ptr<_1c489623d_Iter> _2387_it = jule::new_ptr<_1c489623d_Iter>(_1c489623d_Iter{._field_Comptime=false, ._field_Token=(*((*(_23739_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _2417_tokens = (*((*(_23739_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1c4896a68_WhileKind> _2427_kind = jule::new_ptr<_1c4896a68_WhileKind>(_1c4896a68_WhileKind{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if ((_2417_tokens.len() > 0LL)) {
		(*_2427_kind.alloc)._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_2417_tokens));
	};
	if (_1c567d4ca_isLastSt(_self_)) {
		_1c567d83d_pushErr(_self_, (*(_2387_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_2417_tokens=(*(_1c567e1e0_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _2547_stTokens = _1c5695cb7_getBlockExpr(&(_2417_tokens));;
	if ((_2547_stTokens.len() > 0LL)) {
		jule::Ptr<_1c567bbd2_stmt> _2568_stmt = jule::new_ptr<_1c567bbd2_stmt>(_1c567bbd2_stmt{._field_tokens=_2547_stTokens, ._field_terminated=(*((*(_23739_s))))._field_terminated});;
		(*_2427_kind.alloc)._field_NextToken=_2547_stTokens[0LL];
		(*_2427_kind.alloc)._field_Next=_1c56890eb_buildSt(_self_, &(_2568_stmt));
	};
	jule::I64 _2647_i = _2547_stTokens.len();;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _2657_blockTokens = _1c56992a4_range(&(_2647_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_2417_tokens));;
	if ((_2657_blockTokens == nullptr)) {
		_1c567cc27_stop(_self_);
		_1c567d83d_pushErr(_self_, (*_2387_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2647_i < _2417_tokens.len())) {
		_1c567d83d_pushErr(_self_, _2417_tokens[_2647_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_2387_it.alloc)._field_Scope=_1c567e5db_buildScope(_self_, &(_2657_blockTokens), _2417_tokens[(_2647_i - 1LL)]);
	(*_2387_it.alloc)._field_Kind=jule::Any(_2427_kind, &__jule_any_type36);
	return _2387_it;;
}



inline jule::Ptr<_1c4896a68_WhileKind> _1c5680400_buildWhileIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28239_tokens) {
	return jule::new_ptr<_1c4896a68_WhileKind>(_1c4896a68_WhileKind{._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, _28239_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1c486c19d_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5680741_getRangeKindKeysTokens(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28843_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _2897_vars;
	jule::Slice<_205a977d7_Log> _28913_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(_28843_toks, static_cast<jule::U64>(5LLU), true);
		_2897_vars = __jule_assign_result.__jule_result_arg0;
		_28913_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28913_errs);
	return _2897_vars;;
}



inline jule::Ptr<_1c48955e4_VarDecl> _1c5680a82_buildRangeKindKey(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _29438_tokens) {
	if (((*(_29438_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c48955e4_VarDecl> _2987_key = jule::new_ptr<_1c48955e4_VarDecl>(_1c48955e4_VarDecl{._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Token=(*(_29438_tokens))[0LL], ._field_Setter=(*(_29438_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	if (((*((*(_2987_key))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_2987_key.alloc)._field_Mutable=true;
		if (((*(_29438_tokens)).len() == 1LL)) {
			_1c567d83d_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_2987_key.alloc)._field_Token=(*(_29438_tokens))[1LL];
	} else if (((*(_29438_tokens)).len() > 1LL)) {
		_1c567d83d_pushErr(_self_, (*(_29438_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_2987_key))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c567d83d_pushErr(_self_, (*_2987_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2987_key.alloc)._field_Ident=(*(*(_2987_key))._field_Token.alloc)._field_Kind;
	return _2987_key;;
}



inline jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _1c5680dc3_buildRangeKindKeys(_1c567c573_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _32039_parts) {
	jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _32111_keys = nullptr;;
	{
		auto expr = _32039_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac18347c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _32215_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> &__jule_push_dest = _32111_keys; __jule_push_dest.push(_1c5680a82_buildRangeKindKey(_self_, &(_32215_tokens))); };
			}
			_iter_next_1ac18347c:;
			++it;
			goto _iter_begin_1ac18347c;
		}
		_iter_end_1ac18347c:;
	};
	return _32111_keys;;
}



inline void _1c5681236_setupRangeKindKeysPlain(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _32844_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _32866_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _3297_keyTokens = _1c5680741_getRangeKindKeysTokens(_self_, _32866_tokens);;
	if ((_3297_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_3297_keyTokens.len() > 2LL)) {
		_1c567d83d_pushErr(_self_, (*((*(_32844_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _3367_keys = _1c5680dc3_buildRangeKindKeys(_self_, &(_3297_keyTokens));;
	(*((*(_32844_rng))))._field_KeyA=_3367_keys[0LL];
	if ((_3367_keys.len() > 1LL)) {
		(*((*(_32844_rng))))._field_KeyB=_3367_keys[1LL];
	};
}



inline void _1c5681599_setupRangeKindKeysExplicit(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _34347_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _34369_tokens) {
	jule::I64 _3447_i = 0LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _3457_rang = _1c56992a4_range(&(_3447_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34369_tokens);;
	if ((_3447_i < (*(_34369_tokens)).len())) {
		_1c567d83d_pushErr(_self_, (*((*(_34347_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1c5681236_setupRangeKindKeysPlain(_self_, _34347_rng, &(_3457_rang));
}



inline void _1c568190c_setupRangeKindKeys(_1c567c573_scopeParser* _self_, jule::Ptr<_1c4897470_RangeKind>* _35239_rng, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _35261_tokens) {
	if (((*((*(_35261_tokens))[0LL]))._field_Id == static_cast<jule::U64>(74LLU))) {
		_1c5681599_setupRangeKindKeysExplicit(_self_, _35239_rng, _35261_tokens);
		return;;
	};
	_1c5681236_setupRangeKindKeysPlain(_self_, _35239_rng, _35261_tokens);
}



inline jule::Ptr<_1c4897470_RangeKind> _1c5681db3_buildRangeIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _36039_var_tokens, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _3618_exprTokens, jule::Ptr<_1c486c19d_Token>* _36135_inToken) {
	jule::Ptr<_1c4897470_RangeKind> _3627_rng = jule::new_ptr<_1c4897470_RangeKind>(_1c4897470_RangeKind{._field_InToken=(*(_36135_inToken)), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1c48955e4_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1c48955e4_VarDecl>(nullptr)});;
	if (((*(_3618_exprTokens)).len() == 0LL)) {
		_1c567d83d_pushErr(_self_, (*(_3627_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _3627_rng;;
	};
	(*_3627_rng.alloc)._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, _3618_exprTokens);
	if (((*(_36039_var_tokens)).len() > 0LL)) {
		_1c568190c_setupRangeKindKeys(_self_, &(_3627_rng), _36039_var_tokens);
	};
	return _3627_rng;;
}



inline jule::Any _1c56822ae_buildCommonIterKind(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37640_tokens, jule::Ptr<_1c486c19d_Token>* _37659_err_tok) {
	jule::I64 _3777_braceN = 0LL;;
	{
		auto expr = _37640_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac18cd49:;
		if (it != expr_end) {
			jule::I64 _3788_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _37815_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac18d7ea:;
						{
							(_3777_braceN)++;
							goto _iter_next_1ac18cd49;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac18dbc4:;
						{
							(_3777_braceN)--;
						}
					}
					_match_end_1ac18dad6:;
				};
				if ((_3777_braceN != 0LL)) {
					goto _iter_next_1ac18cd49;
				};
				{
					auto &_match_expr{ (*(_37815_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1ac18ec80:;
						{
							jule::Slice<jule::Ptr<_1c486c19d_Token>> _3959_declTokens = (*(_37640_tokens)).slice(0LL, _3788_i);;
							jule::Slice<jule::Ptr<_1c486c19d_Token>> _3969_exprTokens = (*(_37640_tokens)).slice((_3788_i + 1LL));;
							return jule::Any(_1c5681db3_buildRangeIterKind(_self_, &(_3959_declTokens), &(_3969_exprTokens), &(_37815_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1ac1903ac:;
				};
			}
			_iter_next_1ac18cd49:;
			++it;
			_3788_i++;
			goto _iter_begin_1ac18cd49;
		}
		_iter_end_1ac18cd49:;
	};
	return jule::Any(_1c5680400_buildWhileIterKind(_self_, _37640_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1c489623d_Iter> _1c5682600_buildCommonIter(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _40335_tokens) {
	jule::Ptr<_1c489623d_Iter> _4047_it = jule::new_ptr<_1c489623d_Iter>(_1c489623d_Iter{._field_Comptime=false, ._field_Token=_40335_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr)});;
	(_40335_tokens).mut_slice(1LL);;
	if ((_40335_tokens.len() == 0LL)) {
		_1c567cc27_stop(_self_);
		_1c567d83d_pushErr(_self_, (*(_4047_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _4147_exprTokens = _1c5695cb7_getBlockExpr(&(_40335_tokens));;
	if ((_4147_exprTokens.len() > 0LL)) {
		(*_4047_it.alloc)._field_Kind=_1c56822ae_buildCommonIterKind(_self_, &(_4147_exprTokens), &((*_4047_it.alloc)._field_Token));
	};
	jule::I64 _4187_i = _4147_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _4197_scopeTokens = _1c56992a4_range(&(_4187_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40335_tokens));;
	if ((_4197_scopeTokens == nullptr)) {
		_1c567cc27_stop(_self_);
		_1c567d83d_pushErr(_self_, (*_4047_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_4187_i < _40335_tokens.len())) {
		_1c567d83d_pushErr(_self_, _40335_tokens[_4187_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_4047_it.alloc)._field_Scope=_1c567e5db_buildScope(_self_, &(_4197_scopeTokens), _40335_tokens[(_4187_i - 1LL)]);
	return _4047_it;;
}



inline jule::Ptr<_1c489623d_Iter> _1c5682941_buildIterSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _43332_st) {
	if ((*((*(_43332_st))))._field_terminated) {
		return _1c56800ae_buildWhileNextIter(_self_, _43332_st);;
	};
	return _1c5682600_buildCommonIter(_self_, (*((*(_43332_st))))._field_tokens);;
}



inline jule::Ptr<_1c4897849_BreakSt> _1c5682c82_buildBreakSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _44033_tokens) {
	jule::Ptr<_1c4897849_BreakSt> _4417_brk = jule::new_ptr<_1c4897849_BreakSt>(_1c4897849_BreakSt{._field_Token=(*(_44033_tokens))[0LL], ._field_Label=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if (((*(_44033_tokens)).len() > 1LL)) {
		if (((*((*(_44033_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c567d83d_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c567dba1_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4417_brk))._field_Label=(*(_44033_tokens))[1LL];
			if (((*(_44033_tokens)).len() > 2LL)) {
				_1c567d83d_pushErr(_self_, (*(_44033_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4417_brk;;
}



inline jule::Ptr<_1c4897c23_ContSt> _1c56830c3_buildContSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _45832_tokens) {
	jule::Ptr<_1c4897c23_ContSt> _4597_cont = jule::new_ptr<_1c4897c23_ContSt>(_1c4897c23_ContSt{._field_Token=(*(_45832_tokens))[0LL], ._field_Label=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if (((*(_45832_tokens)).len() > 1LL)) {
		if (((*((*(_45832_tokens))[1LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c567d83d_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1c567dba1_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_4597_cont))._field_Label=(*(_45832_tokens))[1LL];
			if (((*(_45832_tokens)).len() > 2LL)) {
				_1c567d83d_pushErr(_self_, (*(_45832_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _4597_cont;;
}



inline jule::Ptr<_1c48981c9_If> _1c5683414_buildIf(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _47628_tokens) {
	jule::Ptr<_1c48981c9_If> _4777_model = jule::new_ptr<_1c48981c9_If>(_1c48981c9_If{._field_Token=(*(_47628_tokens))[0LL], ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr)});;
	((*(_47628_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _4817_exprTokens = _1c5695cb7_getBlockExpr(_47628_tokens);;
	jule::I64 _4827_i = 0LL;;
	if ((_4817_exprTokens.len() == 0LL)) {
		_1c567d83d_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_4827_i=_4817_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _4887_scopeTokens = _1c56992a4_range(&(_4827_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47628_tokens);;
	if ((_4887_scopeTokens == nullptr)) {
		_1c567cc27_stop(_self_);
		_1c567d83d_pushErr(_self_, (*(_4777_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c486c19d_Token> _4957_end = (*(_47628_tokens))[(_4827_i - 1LL)];;
	if ((_4827_i < (*(_47628_tokens)).len())) {
		if (((*((*(_47628_tokens))[_4827_i]))._field_Id == static_cast<jule::U64>(14LLU))) {
			((*(_47628_tokens))).mut_slice(_4827_i);;
		} else {
			_1c567d83d_pushErr(_self_, (*(_47628_tokens))[_4827_i], jule::Str::lit("invalid syntax", 14));
			(*(_47628_tokens))=nullptr;
		};
	};
	(*_4777_model.alloc)._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_4817_exprTokens));
	(*_4777_model.alloc)._field_Scope=_1c567e5db_buildScope(_self_, &(_4887_scopeTokens), _4957_end);
	return _4777_model;;
}



inline jule::Ptr<_1c48985a3_Else> _1c5683755_buildElse(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _50930_tokens) {
	jule::Ptr<_1c48985a3_Else> _5107_els = jule::new_ptr<_1c48985a3_Else>(_1c48985a3_Else{._field_Token=(*(_50930_tokens))[0LL], ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr)});;
	((*(_50930_tokens))).mut_slice(1LL);;
	jule::I64 _5147_i = 0LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _5157_scopeTokens = _1c56992a4_range(&(_5147_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50930_tokens);;
	if ((_5157_scopeTokens == nullptr)) {
		if ((_5147_i < (*(_50930_tokens)).len())) {
			_1c567d83d_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1c567cc27_stop(_self_);
			_1c567d83d_pushErr(_self_, (*(_5107_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_5147_i < (*(_50930_tokens)).len())) {
		_1c567d83d_pushErr(_self_, (*(_50930_tokens))[_5147_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_5107_els))._field_Scope=_1c567e5db_buildScope(_self_, &(_5157_scopeTokens), (*(_50930_tokens))[(_5147_i - 1LL)]);
	return _5107_els;;
}



inline jule::Ptr<_1c4898a59_Conditional> _1c5683a96_buildIfElseChain(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _53336_tokens) {
	jule::Ptr<_1c4898a59_Conditional> _5347_chain = jule::new_ptr<_1c4898a59_Conditional>(_1c4898a59_Conditional{._field_Head=_1c5683414_buildIf(_self_, &(_53336_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1c48981c9_If>>(nullptr), ._field_Default=jule::Ptr<_1c48985a3_Else>(nullptr)});;
	if (((*(_5347_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53336_tokens.len() != 0LL)) {
		{
			if (((*(_53336_tokens[0LL]))._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1ac1aa2d9;
			};
			if (((_53336_tokens.len() > 1LL) && ((*(_53336_tokens[1LL]))._field_Id == static_cast<jule::U64>(13LLU)))) {
				(_53336_tokens).mut_slice(1LL);;
				jule::Ptr<_1c48981c9_If> _5469_elif = _1c5683414_buildIf(_self_, &(_53336_tokens));;
				(*_5347_chain.alloc)._field_Tail=jule::append((*_5347_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48981c9_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5469_elif; __jule_collection; }));
				goto _iter_next_1ac1aa2d9;
			};
			(*_5347_chain.alloc)._field_Default=_1c5683755_buildElse(_self_, &(_53336_tokens));
			goto _iter_end_1ac1aa2d9;
		}
	_iter_next_1ac1aa2d9:;
	}
	_iter_end_1ac1aa2d9:;;
	return _5347_chain;;
}



inline jule::Ptr<_1c4886aad_Expr> _1c5683dd7_buildCoCallSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _55633_tokens) {
	jule::Ptr<_1c486c19d_Token> _5573_token = _55633_tokens[0LL];;
	(_55633_tokens).mut_slice(1LL);;
	jule::Ptr<_1c4886aad_Expr> _5597_e = _1c569bc8a_buildExpr((*(_self_))._field_p, &(_55633_tokens));;
	if ((_5597_e == nullptr)) {
		return _5597_e;;
	};
	{
		auto &_match_expr{ (*(_5597_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ac1aee48:;
			{
				(*((*(_5597_e))._field_Kind.unsafe_cast_ptr<_1c488a7d7_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ac1ae94d:;
			{
				_1c567d83d_pushErr(_self_, _5573_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1ac1ae8e8:;
	};
	return _5597_e;;
}



inline jule::Ptr<_1c4890237_GotoSt> _1c5684228_buildGotoSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _57232_tokens) {
	jule::Ptr<_1c4890237_GotoSt> _5737_gt = jule::new_ptr<_1c4890237_GotoSt>(_1c4890237_GotoSt{._field_Token=(*(_57232_tokens))[0LL], ._field_Label=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if (((*(_57232_tokens)).len() == 1LL)) {
		_1c567d83d_pushErr(_self_, (*(_5737_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57232_tokens)).len() > 2LL)) {
		_1c567d83d_pushErr(_self_, (*(_57232_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c486c19d_Token> _5827_identToken = (*(_57232_tokens))[1LL];;
	if (((*(_5827_identToken))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c567d83d_pushErr(_self_, _5827_identToken, jule::Str::lit("invalid syntax", 14));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _5737_gt;;
	};
	(*(_5737_gt))._field_Label=_5827_identToken;
	return _5737_gt;;
}



inline jule::Ptr<_1c4890534_FallSt> _1c5684569_buildFallSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _59232_tokens) {
	jule::Ptr<_1c4890534_FallSt> _5937_fll = jule::new_ptr<_1c4890534_FallSt>(_1c4890534_FallSt{._field_Token=(*(_59232_tokens))[0LL]});;
	if (((*(_59232_tokens)).len() > 1LL)) {
		_1c567d83d_pushErr(_self_, (*(_59232_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _5937_fll;;
}



inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c56848aa_buildTypeAliasSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _60237_tokens) {
	jule::Ptr<_1c4899296_TypeAliasDecl> _6037_tad = _1c569d52d_buildTypeAliasDecl((*(_self_))._field_p, _60237_tokens);;
	(*(_6037_tad))._field_Scope=(*(_self_))._field_s;
	return _6037_tad;;
}



inline void _1c5684d83_pushCaseExpr(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _60832_tokens, jule::Ptr<_1c486c19d_Token> _60854_token, jule::Bool _6093_typeMatch, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _60925_exprs) {
	if ((_60832_tokens.len() == 0LL)) {
		return;;
	};
	if (_6093_typeMatch) {
		jule::I64 _6148_i = 0LL;;
		jule::Ptr<_1c4882779_TypeDecl> _6158_t;
		jule::Bool _61511_ok;
		({
			__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &(_60832_tokens), (&(_6148_i)), true);
			_6158_t = __jule_assign_result.__jule_result_arg0;
			_61511_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61511_ok) {
			{ jule::Slice<jule::Ptr<_1c4886aad_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(jule::new_ptr<_1c4886aad_Expr>(_1c4886aad_Expr{._field_Token=_60832_tokens[0LL], ._field_End=_60832_tokens[(_60832_tokens.len() - 1LL)], ._field_Kind=jule::Any(_6158_t, &__jule_any_type89)})); };
			if ((_6148_i < _60832_tokens.len())) {
				_1c567d83d_pushErr(_self_, _60832_tokens[_6148_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c4886aad_Expr>> &__jule_push_dest = (*(_60925_exprs)); __jule_push_dest.push(_1c569bc8a_buildExpr((*(_self_))._field_p, &(_60832_tokens))); };
}



inline __jule_tuple_sx_1c4886aad_Expr__jule_tuple_bool _1c5685339_buildCaseExprs(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _63135_tokens, jule::Ptr<_1c486c19d_Token>* _63158_colon, jule::Bool _63173_typeMatch) {
	__jule_tuple_sx_1c4886aad_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _6327_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4886aad_Expr>(nullptr); __jule_collection; });;
	jule::I64 _6337_braceN = 0LL;;
	jule::I64 _6347_j = 0LL;;
	{
		auto expr = _63135_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1bad44:;
		if (it != expr_end) {
			jule::I64 _6358_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _63515_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63515_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac1bc197:;
						{
							(_6337_braceN)++;
							goto _iter_next_1ac1bad44;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac1bc571:;
						{
							(_6337_braceN)--;
							goto _iter_next_1ac1bad44;
						}
					}
					_match_end_1ac1bc483:;
				};
				if ((_6337_braceN != 0LL)) {
					goto _iter_next_1ac1bad44;
				};
				{
					
					if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1ac1bdc04:;
						{
							jule::Slice<jule::Ptr<_1c486c19d_Token>> _6545_exprTokens = (*(_63135_tokens)).slice(_6347_j, _6358_i);;
							if ((_6545_exprTokens.len() == 0LL)) {
								_1c567d83d_pushErr(_self_, _63515_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1c5684d83_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							};
							_6347_j=(_6358_i + 1LL);
						}
					}
					else if (((*(_63515_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1ac1bdc6a:;
						{
							(*(_63158_colon))=_63515_tok;
							_1c5684d83_pushCaseExpr(_self_, (*(_63135_tokens)).slice(_6347_j, _6358_i), _63515_tok, _63173_typeMatch, &(_6327_exprs));
							((*(_63135_tokens))).mut_slice((_6358_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _6327_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6358_i - _6347_j) == 0LL) || (_6327_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1ac1bd72b:;
				};
			}
			_iter_next_1ac1bad44:;
			++it;
			_6358_i++;
			goto _iter_begin_1ac1bad44;
		}
		_iter_end_1ac1bad44:;
	};
	_1c567d83d_pushErr(_self_, (*(_63135_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_63135_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1c489279a_ScopeTree> _1c568567a_buildCaseScope(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _67335_tokens) {
	jule::I64 _6747_n = 0LL;;
	for (;;) {
		{
			jule::I64 _6768_i = 0LL;;
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _6778_next;
			({
				__jule_tuple_sx_1c486c19d_Token__jule_tuple_bool __jule_assign_result = _1c567b8a2_skipSt(&(_6768_i), (*(_67335_tokens)).slice(_6747_n));
				_6778_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6778_next.len() == 0LL)) {
				goto _iter_end_1ac1c280c;
			};
			jule::Ptr<_1c486c19d_Token> _6814_tok = _6778_next[0LL];;
			if (((*(_6814_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_6747_n+=_6768_i;
				goto _iter_next_1ac1c280c;
			};
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _6868_scopeTokens = (*(_67335_tokens)).slice(0LL, _6747_n);;
			jule::Ptr<_1c489279a_ScopeTree> _6878_scope = _1c567e5db_buildScope(_self_, &(_6868_scopeTokens), (*(_67335_tokens))[_6747_n]);;
			((*(_67335_tokens))).mut_slice(_6747_n);;
			return _6878_scope;;
		}
	_iter_next_1ac1c280c:;
	}
	_iter_end_1ac1c280c:;;
	jule::Ptr<_1c486c19d_Token> _69111_end;;
	if (((*(_67335_tokens)).len() > 0LL)) {
		_69111_end=(*(_67335_tokens))[((*(_67335_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1c489279a_ScopeTree> _6957_scope = _1c567e5db_buildScope(_self_, _67335_tokens, _69111_end);;
	(*(_67335_tokens))=nullptr;
	return _6957_scope;;
}



inline __jule_tuple_x_1c489974c_Case__jule_tuple_bool _1c5685a76_buildCase(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70030_tokens, jule::Bool _70048_typeMatch) {
	__jule_tuple_x_1c489974c_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c489974c_Case> _7017_c = jule::new_ptr<_1c489974c_Case>(_1c489974c_Case{._field_Token=(*(_70030_tokens))[0LL], ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1c4886aad_Expr>>(nullptr)});;
	((*(_70030_tokens))).mut_slice(1LL);;
	jule::Ptr<_1c486c19d_Token> _70511_colon = nullptr;;
	jule::Bool _70612_ok;
	({
		__jule_tuple_sx_1c4886aad_Expr__jule_tuple_bool __jule_assign_result = _1c5685339_buildCaseExprs(_self_, _70030_tokens, &(_70511_colon), _70048_typeMatch);
		(*(_7017_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_7017_c.alloc)._field_Scope=_1c568567a_buildCaseScope(_self_, _70030_tokens);
	if (((*((*_7017_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_7017_c))._field_Scope.alloc)._field_End=_70511_colon;
	};
	jule::Bool _7113_isDefault = (_70612_ok && ((*_7017_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _7017_c;
	__jule_func_result.__jule_result_arg1 = _7113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c489974c_Case__jule_tuple_x_1c48985a3_Else _1c5685e72_buildCases(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _71530_tokens, jule::Bool _71548_typeMatch) {
	__jule_tuple_sx_1c489974c_Case__jule_tuple_x_1c48985a3_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1c489974c_Case>> _71611_cases = nullptr;;
	jule::Ptr<_1c48985a3_Else> _71711_def = nullptr;;
	jule::Bool _7187_defNotLast = false;;
	while ((_71530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c486c19d_Token> _7208_tok = _71530_tokens[0LL];;
			if (((*(_7208_tok))._field_Id != static_cast<jule::U64>(66LLU))) {
				_1c567d83d_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1ac1cad76;
			};
			jule::Ptr<_1c489974c_Case> _7258_c;
			jule::Bool _72511_isDefault;
			({
				__jule_tuple_x_1c489974c_Case__jule_tuple_bool __jule_assign_result = _1c5685a76_buildCase(_self_, &(_71530_tokens), _71548_typeMatch);
				_7258_c = __jule_assign_result.__jule_result_arg0;
				_72511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72511_isDefault) {
				(*(_7258_c))._field_Token=_7208_tok;
				if ((_71711_def == nullptr)) {
					_71711_def=jule::new_ptr<_1c48985a3_Else>(_1c48985a3_Else{._field_Token=(*_7258_c.alloc)._field_Token, ._field_Scope=(*_7258_c.alloc)._field_Scope});
				} else {
					_1c567d83d_pushErr(_self_, _7208_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_7187_defNotLast=(_7187_defNotLast || (_71711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1c489974c_Case>> &__jule_push_dest = _71611_cases; __jule_push_dest.push(_7258_c); };
			};
		}
	_iter_next_1ac1cad76:;
	}
	_iter_end_1ac1cad76:;;
	if (_7187_defNotLast) {
		_1c567d83d_pushErr(_self_, (*(_71711_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71611_cases;
	__jule_func_result.__jule_result_arg1 = _71711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1c489a066_MatchCase> _1c56862b3_buildMatchCase(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _74934_tokens) {
	jule::Ptr<_1c489a066_MatchCase> _7507_m = jule::new_ptr<_1c489a066_MatchCase>(_1c489a066_MatchCase{._field_Comptime=false, ._field_Token=_74934_tokens[0LL], ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1c489974c_Case>>(nullptr), ._field_Default=jule::Ptr<_1c48985a3_Else>(nullptr)});;
	(_74934_tokens).mut_slice(1LL);;
	if (((_74934_tokens.len() > 0LL) && ((*(_74934_tokens[0LL]))._field_Id == static_cast<jule::U64>(7LLU)))) {
		(*(_7507_m))._field_TypeMatch=true;
		(_74934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _7607_exprTokens = _1c5695cb7_getBlockExpr(&(_74934_tokens));;
	if ((_7607_exprTokens.len() > 0LL)) {
		(*_7507_m.alloc)._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_7607_exprTokens));
	} else if ((*_7507_m.alloc)._field_TypeMatch) {
		_1c567d83d_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I64 _7677_i = _7607_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _7687_blockToks = _1c56992a4_range(&(_7677_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74934_tokens));;
	if ((_7687_blockToks == nullptr)) {
		_1c567cc27_stop(_self_);
		_1c567d83d_pushErr(_self_, (*_7507_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1c567dba1_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7677_i < _74934_tokens.len())) {
		_1c567d83d_pushErr(_self_, _74934_tokens[_7677_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_7507_m.alloc)._field_End=_74934_tokens[(_7677_i - 1LL)];
	({
		__jule_tuple_sx_1c489974c_Case__jule_tuple_x_1c48985a3_Else __jule_assign_result = _1c5685e72_buildCases(_self_, _7687_blockToks, (*_7507_m.alloc)._field_TypeMatch);
		(*_7507_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7507_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7507_m;;
}



inline jule::Ptr<_1c489279a_ScopeTree> _1c5686604_buildScopeSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _78232_tokens) {
	jule::Bool _7837_isUnsafe = false;;
	jule::Bool _7847_isDeferred = false;;
	jule::Ptr<_1c486c19d_Token> _7857_token = _78232_tokens[0LL];;
	if (((*(_7857_token))._field_Id == static_cast<jule::U64>(31LLU))) {
		_7837_isUnsafe=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1c567d83d_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_7857_token=_78232_tokens[0LL];
		if (((*_7857_token.alloc)._field_Id == static_cast<jule::U64>(33LLU))) {
			_7847_isDeferred=true;
			(_78232_tokens).mut_slice(1LL);;
			if ((_78232_tokens.len() == 0LL)) {
				_1c567d83d_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_7857_token))._field_Id == static_cast<jule::U64>(33LLU))) {
		_7847_isDeferred=true;
		(_78232_tokens).mut_slice(1LL);;
		if ((_78232_tokens.len() == 0LL)) {
			_1c567d83d_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _8117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8127_scopeTokens = _1c56992a4_range(&(_8117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78232_tokens));;
	if ((_8127_scopeTokens == nullptr)) {
		_1c567d83d_pushErr(_self_, _7857_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_8117_i < _78232_tokens.len())) {
		_1c567d83d_pushErr(_self_, _78232_tokens[_8117_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1c489279a_ScopeTree> _8197_scope = _1c567e5db_buildScope(_self_, &(_8127_scopeTokens), _78232_tokens[(_8117_i - 1LL)]);;
	(*(_8197_scope))._field_Unsafety=_7837_isUnsafe;
	(*_8197_scope.alloc)._field_Deferred=_7847_isDeferred;
	return _8197_scope;;
}



inline jule::Ptr<_1c488ed5d_LabelSt> _1c5686945_buildLabelSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _82533_tokens) {
	jule::Ptr<_1c488ed5d_LabelSt> _8267_lbl = jule::new_ptr<_1c488ed5d_LabelSt>(_1c488ed5d_LabelSt{._field_Token=(*(_82533_tokens))[0LL], ._field_Ident=(*((*(_82533_tokens))[0LL]))._field_Kind});;
	if (((*(_82533_tokens)).len() > 2LL)) {
		((*(_82533_tokens))).mut_slice(2LL);;
		_1c567de59_insertAsNext(_self_, _82533_tokens);
	};
	return _8267_lbl;;
}



inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5686c86_buildIdSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _84030_tokens) {
	__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c486c19d_Token> _8457_token = (*(_84030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8457_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1ac1e1a90:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1c5686945_buildLabelSt(_self_, _84030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ac1e22ee:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c5697703_assignInfo> _1c56870c7_buildAssignInfo(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _85436_tokens) {
	jule::Ptr<_1c5697703_assignInfo> _8557_info = jule::new_ptr<_1c5697703_assignInfo>(_1c5697703_assignInfo{._field_l=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_setter=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_ok=true});;
	jule::I64 _8587_braceN = 0LL;;
	{
		auto expr = _85436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1e3a1a:;
		if (it != expr_end) {
			jule::I64 _8598_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _85915_token = *it;
			{
				{
					auto &_match_expr{ (*(_85915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac1e4499:;
						{
							(_8587_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac1e4851:;
						{
							(_8587_braceN)--;
						}
					}
					_match_end_1ac1e4763:;
				};
				{
					
					if ((_8587_braceN > 0LL)) {
						_case_begin_1ac1e59d9:;
						{
							goto _iter_next_1ac1e3a1a;
						}
					}
					else if (((!(_1c4871ee9_IsAssignOp((*(_85915_token))._field_Id))) && ((*_85915_token.alloc)._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1ac1e5a50:;
						{
							goto _iter_next_1ac1e3a1a;
						}
					}
					_match_end_1ac1e5984:;
				};
				(*(_8557_info))._field_l=(*(_85436_tokens)).slice(0LL, _8598_i);
				if (((*_8557_info.alloc)._field_l.len() == 0LL)) {
					(*_8557_info.alloc)._field_ok=false;
				};
				(*_8557_info.alloc)._field_setter=_85915_token;
				if (((_8598_i + 1LL) >= (*(_85436_tokens)).len())) {
					(*_8557_info.alloc)._field_r=nullptr;
					(*_8557_info.alloc)._field_ok=_1c4871c30_IsPostfixOp((*((*_8557_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1ac1e3a1a;
				};
				(*_8557_info.alloc)._field_r=(*(_85436_tokens)).slice((_8598_i + 1LL));
				if (_1c4871c30_IsPostfixOp((*(*(_8557_info))._field_setter.alloc)._field_Id)) {
					if (((*_8557_info.alloc)._field_r.len() > 0LL)) {
						_1c567d83d_pushErr(_self_, (*(_8557_info))._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_8557_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1ac1e3a1a;
			}
			_iter_next_1ac1e3a1a:;
			++it;
			_8598_i++;
			goto _iter_begin_1ac1e3a1a;
		}
		_iter_end_1ac1e3a1a:;
	};
	return _8557_info;;
}



inline jule::Ptr<_1c4890b94_AssignLeft> _1c5687418_buildAssignL(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _89933_tokens) {
	jule::Ptr<_1c4890b94_AssignLeft> _9007_l = jule::new_ptr<_1c4890b94_AssignLeft>(_1c4890b94_AssignLeft{._field_Token=(*(_89933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	if (((*((*(_89933_tokens))[0LL]))._field_Id == static_cast<jule::U64>(1LLU))) {
		(*(_9007_l))._field_Ident=(*((*_9007_l.alloc)._field_Token))._field_Kind;
	};
	(*_9007_l.alloc)._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, _89933_tokens);
	return _9007_l;;
}



inline jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> _1c5687759_buildAssignLs(_1c567c573_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _91034_parts) {
	jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> _91111_lefts = nullptr;;
	{
		auto expr = _91034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac1ed519:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _91215_part = *it;
			{
				jule::Ptr<_1c4890b94_AssignLeft> _9138_l = _1c5687418_buildAssignL(_self_, &(_91215_part));;
				{ jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> &__jule_push_dest = _91111_lefts; __jule_push_dest.push(_9138_l); };
			}
			_iter_next_1ac1ed519:;
			++it;
			goto _iter_begin_1ac1ed519;
		}
		_iter_end_1ac1ed519:;
	};
	return _91111_lefts;;
}



inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5687a9a_buildPlainAssign(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _91937_tokens) {
	__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c5697703_assignInfo> _9207_info = _1c56870c7_buildAssignInfo(_self_, _91937_tokens);;
	if ((!((*(_9207_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4891227_AssignSt> _9257_assign = jule::new_ptr<_1c4891227_AssignSt>(_1c4891227_AssignSt{._field_Declarative=false, ._field_Setter=(*_9207_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	if (((*((*_9207_info.alloc)._field_setter))._field_Id == static_cast<jule::U64>(38LLU))) {
		(*(_9257_assign))._field_Declarative=true;
		(*_9257_assign.alloc)._field_Right=_1c569bc8a_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
		jule::Bool _9334_ok = _1c5687e96_buildDeclAssign1(_self_, &((*_9207_info.alloc)._field_l), &(_9257_assign));;
		if ((!(_9334_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_9257_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1c4890b94_AssignLeft> _9428_left = (*(_9257_assign))._field_Left[0LL];;
		jule::Ptr<_1c48955e4_VarDecl> _9438_decl = jule::new_ptr<_1c48955e4_VarDecl>(_1c48955e4_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9428_left))._field_Token, ._field_Setter=(*_9257_assign.alloc)._field_Setter, ._field_Ident=(*_9428_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9428_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9428_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Expr=(*_9257_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_9438_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _9557_parts;
	jule::Slice<_205a977d7_Log> _95514_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&((*_9207_info.alloc)._field_l), static_cast<jule::U64>(5LLU), true);
		_9557_parts = __jule_assign_result.__jule_result_arg0;
		_95514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95514_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95514_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_9257_assign.alloc)._field_Left=_1c5687759_buildAssignLs(_self_, &(_9557_parts));
	if (((*_9207_info.alloc)._field_r != nullptr)) {
		(*_9257_assign.alloc)._field_Right=_1c569bc8a_buildExpr((*(_self_))._field_p, &((*_9207_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_9257_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1c5687e96_buildDeclAssign1(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _96937_lefts, jule::Ptr<_1c4891227_AssignSt>* _96959_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _9717_parts;
	jule::Slice<_205a977d7_Log> _97114_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(_96937_lefts, static_cast<jule::U64>(5LLU), true);
		_9717_parts = __jule_assign_result.__jule_result_arg0;
		_97114_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97114_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_97114_errs);
		return false;;
	};
	{
		auto expr = &(_9717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2092a0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _97715_part = *it;
			{
				jule::Bool _9788_isMut = false;;
				jule::Bool _9798_isRef = false;;
				jule::Ptr<_1c486c19d_Token> _9814_token = _97715_part[0LL];;
				if (((*(_9814_token))._field_Id == static_cast<jule::U64>(32LLU))) {
					_9788_isMut=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1c567d83d_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97715_part[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
					_9798_isRef=true;
					(_97715_part).mut_slice(1LL);;
					if ((_97715_part.len() == 0LL)) {
						_1c567d83d_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97715_part[0LL]))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(_97715_part[0LL]))._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1c567d83d_pushErr(_self_, _9814_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1c4890b94_AssignLeft> _10058_l = _1c5687418_buildAssignL(_self_, &(_97715_part));;
				(*(_10058_l))._field_Mutable=_9788_isMut;
				(*_10058_l.alloc)._field_Reference=_9798_isRef;
				{ jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>> &__jule_push_dest = (*((*(_96959_assign))))._field_Left; __jule_push_dest.push(_10058_l); };
			}
			_iter_next_1ac2092a0:;
			++it;
			goto _iter_begin_1ac2092a0;
		}
		_iter_end_1ac2092a0:;
	};
	return true;;
}



inline __jule_tuple_x_1c4891227_AssignSt__jule_tuple_bool _1c56882d7_buildDeclAssign(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _101435_tokens) {
	__jule_tuple_x_1c4891227_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101435_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101435_tokens).mut_slice(1LL);;
	jule::Ptr<_1c486c19d_Token> _10207_token = _101435_tokens[0LL];;
	if (((*(_10207_token))._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4891227_AssignSt> _10257_assign = jule::new_ptr<_1c4891227_AssignSt>(_1c4891227_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1c4890b94_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	jule::I64 _10297_i = 0LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _10307_rang = _1c56992a4_range(&(_10297_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_101435_tokens));;
	if ((_10307_rang == nullptr)) {
		_1c567d83d_pushErr(_self_, _10207_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10297_i + 1LL) < _101435_tokens.len())) {
		(*(_10257_assign))._field_Setter=_101435_tokens[_10297_i];
		if (((*((*_10257_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c567d83d_pushErr(_self_, (*_10257_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_10297_i)++;
		jule::Slice<jule::Ptr<_1c486c19d_Token>> _10408_exprTokens = _101435_tokens.slice(_10297_i);;
		(*_10257_assign.alloc)._field_Right=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_10408_exprTokens));
	};
	jule::Bool _10443_ok = _1c5687e96_buildDeclAssign1(_self_, &(_10307_rang), &(_10257_assign));;
	__jule_func_result.__jule_result_arg0 = _10257_assign;
	__jule_func_result.__jule_result_arg1 = _10443_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1c4891dd7_StmtData__jule_tuple_bool _1c5688628_buildAssignSt(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _104834_tokens) {
	__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1c5697aaa_checkAssignTokens(_104834_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104834_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ac219348:;
			{
				({
					__jule_tuple_x_1c4891227_AssignSt__jule_tuple_bool __jule_assign_result = _1c56882d7_buildDeclAssign(_self_, (*(_104834_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ac218501:;
			{
				({
					__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_assign_result = _1c5687a9a_buildPlainAssign(_self_, _104834_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ac218963:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1c4887482_UseExpr> _1c5688969_buildUseExpr(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _106133_tokens) {
	if (((*(_106133_tokens)).len() == 1LL)) {
		_1c567d83d_pushErr(_self_, (*(_106133_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1c4887482_UseExpr> _10667_ue = jule::new_ptr<_1c4887482_UseExpr>(_1c4887482_UseExpr{._field_Token=(*(_106133_tokens))[0LL], ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	((*(_106133_tokens))).mut_slice(1LL);;
	(*(_10667_ue))._field_Expr=_1c569bc8a_buildExpr((*(_self_))._field_p, _106133_tokens);
	return _10667_ue;;
}



inline jule::Any _1c5688caa_buildConstSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _107433_st) {
	if (((*((*(_107433_st))))._field_tokens.len() == 1LL)) {
		_1c567d83d_pushErr(_self_, (*((*(_107433_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107433_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac21d6b0:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c489623d_Iter> _10828_iter = _1c5682941_buildIterSt(_self_, _107433_st);;
				if ((_10828_iter != nullptr)) {
					(*_10828_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10828_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac21d4d4:;
			{
				((*((*(_107433_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1c489a066_MatchCase> _10898_mt = _1c56862b3_buildMatchCase(_self_, (*((*(_107433_st))))._field_tokens);;
				if ((_10898_mt != nullptr)) {
					(*_10898_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10898_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1ac21c04e:;
			{
				return jule::Any(_1c567e92c_buildVarSt(_self_, &((*((*(_107433_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1ac21d01c:;
	};
}



inline jule::Any _1c56890eb_buildSt(_1c567c573_scopeParser* _self_, jule::Ptr<_1c567bbd2_stmt>* _109928_st) {
	jule::Ptr<_1c486c19d_Token> _11007_token = (*((*(_109928_st))))._field_tokens[0LL];;
	if (((*(_11007_token))._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _11028_s;
		jule::Bool _110211_ok;
		({
			__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_assign_result = _1c5686c86_buildIdSt(_self_, &((*((*(_109928_st))))._field_tokens));
			_11028_s = __jule_assign_result.__jule_result_arg0;
			_110211_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110211_ok) {
			return _11028_s;;
		};
	};
	jule::Any _11087_s;
	jule::Bool _110810_ok;
	({
		__jule_tuple__1c4891dd7_StmtData__jule_tuple_bool __jule_assign_result = _1c5688628_buildAssignSt(_self_, &((*((*(_109928_st))))._field_tokens));
		_11087_s = __jule_assign_result.__jule_result_arg0;
		_110810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110810_ok) {
		return _11087_s;;
	};
	{
		auto &_match_expr{ (*(_11007_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac224562:;
			{
				return jule::Any(_1c5688969_buildUseExpr(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ac2243db:;
			{
				return _1c5688caa_buildConstSt(_self_, _109928_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ac2247c6:;
			{
				return jule::Any(_1c567e92c_buildVarSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ac22483c:;
			{
				return jule::Any(_1c567ec6d_buildRetSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ac2248a3:;
			{
				return jule::Any(_1c5682941_buildIterSt(_self_, _109928_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ac224919:;
			{
				return jule::Any(_1c5682c82_buildBreakSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ac224980:;
			{
				return jule::Any(_1c56830c3_buildContSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ac2249e6:;
			{
				return jule::Any(_1c5683a96_buildIfElseChain(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ac224a6d:;
			{
				return jule::Any(_1c5683dd7_buildCoCallSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1ac224ae5:;
			{
				return jule::Any(_1c5684228_buildGotoSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ac224b6c:;
			{
				return jule::Any(_1c5684569_buildFallSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ac224be4:;
			{
				return jule::Any(_1c56848aa_buildTypeAliasSt(_self_, &((*((*(_109928_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ac224c6b:;
			{
				return jule::Any(_1c56862b3_buildMatchCase(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac224ce3:;
			{
				if (((*((*(_109928_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1ac224232;
				};
				if ((((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(33LLU)) || ((*((*((*(_109928_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U64>(72LLU)))) {
					return jule::Any(_1c5686604_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ac224d6a:;
			{
				return jule::Any(_1c5686604_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac224de2:;
			{
				return jule::Any(_1c5686604_buildScopeSt(_self_, (*((*(_109928_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		_match_end_1ac224232:;
	};
	jule::Ptr<_1c4886aad_Expr> _11557_expr = _1c569bc8a_buildExpr((*(_self_))._field_p, &((*((*(_109928_st))))._field_tokens));;
	if ((_11557_expr != nullptr)) {
		return jule::Any(_11557_expr, &__jule_any_type52);;
	};
	_1c567d83d_pushErr(_self_, _11007_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1c568945e_build(_1c567c573_scopeParser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _116326_tokens, jule::Ptr<_1c489279a_ScopeTree>* _116349_s) {
	if (((*(_116349_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1c567c089_splitStmts(_116326_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116349_s));
	while (((!(_1c567d4ca_isLastSt(_self_))) && (!(_1c567d244_finished(_self_))))) {
		{
			jule::Ptr<_1c567bbd2_stmt> _11718_st = _1c567e1e0_next(_self_);;
			jule::Any _11728_data = _1c56890eb_buildSt(_self_, &(_11718_st));;
			if ((_11728_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1c489213a_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c489213a_Stmt{._field_Token=(*(_11718_st))._field_tokens[0LL], ._field_Data=_11728_data}; __jule_collection; }));
			};
			if (_1c567cead_stopped(_self_)) {
				goto _iter_end_1ac23210d;
			};
		}
	_iter_next_1ac23210d:;
	}
	_iter_end_1ac23210d:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c567c573_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c5689edc_exprBuilder_eq(_1c5689edc_exprBuilder *_self_, _1c5689edc_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1c568a7b2_pushErr(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _4523_token, jule::Str _4538_fmt, jule::Slice<jule::Any> _4551_args) {
	_1c569b5d6_pushErr((*(_self_))._field_p.ptr(), _4523_token, _4538_fmt, _4551_args);
}



inline void _1c568ab25_pushSuggestion(_1c5689edc_exprBuilder* _self_, jule::Str _5030_fmt, jule::Slice<jule::Any> _5043_args) {
	_1c569b949_pushSuggestion((*(_self_))._field_p.ptr(), _5030_fmt, _5043_args);
}



inline jule::Ptr<_1c48876a2_TupleExpr> _1c568ae66_buildTuple(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _5431_parts) {
	jule::Ptr<_1c48876a2_TupleExpr> _557_tuple = jule::new_ptr<_1c48876a2_TupleExpr>(_1c48876a2_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(0LL, (*(_5431_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4886aad_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _5431_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac256d8b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _5815_part = *it;
			{
				(*(_557_tuple))._field_Expr=jule::append((*_557_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c569535a_buildFromTokens(_self_, _5815_part); __jule_collection; }));
			}
			_iter_next_1ac256d8b:;
			++it;
			goto _iter_begin_1ac256d8b;
		}
		_iter_end_1ac256d8b:;
	};
	return _557_tuple;;
}



inline jule::Ptr<_1c4887a48_LitExpr> _1c568b2a7_buildLit(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _6424_token) {
	return jule::new_ptr<_1c4887a48_LitExpr>(_1c4887a48_LitExpr{._field_Token=_6424_token, ._field_Value=(*(_6424_token))._field_Kind});;
}



inline jule::Any _1c568b939_buildSingle(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token> _7531_token) {
	{
		auto &_match_expr{ (*(_7531_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ac258d05:;
			{
				return jule::Any(_1c568b2a7_buildLit(_self_, _7531_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ac258d7c:;
			{
				return jule::Any(jule::new_ptr<_1c4889044_VariadicExpr>(_1c4889044_VariadicExpr{._field_Token=_7531_token, ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)}), &__jule_any_type76);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ac258de3:;
			{
				return jule::Any(_1c5696713_buildIdentExpr(&(_7531_token)), &__jule_any_type44);;
			}
		}
		_match_end_1ac258c4a:;
	};
	_1c568a7b2_pushErr(_self_, _7531_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c48883c8_IdentExpr> _1c568bc7a_buildBindIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _9235_tokens) {
	if (((*((*(_9235_tokens))[0LL]))._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9235_tokens))[1LL]))._field_Id != static_cast<jule::U64>(17LLU))) {
		_1c568a7b2_pushErr(_self_, (*(_9235_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c486c19d_Token> _1007_token = (*(_9235_tokens))[2LL];;
	if (((*(_1007_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c568a7b2_pushErr(_self_, (*(_9235_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c48883c8_IdentExpr> _1067_expr = _1c5696713_buildIdentExpr(&(_1007_token));;
	(*(_1067_expr))._field_Binded=true;
	return _1067_expr;;
}



inline jule::Ptr<_1c4888b6a_UnaryExpr> _1c568c0bb_buildUnary(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _11130_tokens) {
	jule::Ptr<_1c486c19d_Token> _1127_op = _11130_tokens[0LL];;
	if ((_11130_tokens.len() == 1LL)) {
		_1c568a7b2_pushErr(_self_, _1127_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c486c8da_IsUnaryOp((*(_1127_op))._field_Id)))) {
		_1c568a7b2_pushErr(_self_, _1127_op, jule::Str::lit("invalid unary operator: @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_1127_op.alloc)._field_Kind, &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(_11130_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1c4888b6a_UnaryExpr>(_1c4888b6a_UnaryExpr{._field_Op=_1127_op, ._field_Expr=_1c569535a_buildFromTokens(_self_, _11130_tokens)});;
}



inline jule::Ptr<_1c4889bc1_SubIdentExpr> _1c568c40c_buildObjSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _13236_tokens) {
	jule::I64 _1337_i = (_13236_tokens.len() - 1LL);;
	jule::Ptr<_1c486c19d_Token> _1347_identToken = _13236_tokens[_1337_i];;
	(_1337_i)--;
	(_13236_tokens).mut_slice(0LL, _1337_i);;
	if ((_13236_tokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, _1347_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4889bc1_SubIdentExpr>(_1c4889bc1_SubIdentExpr{._field_Expr=_1c569535a_buildFromTokens(_self_, _13236_tokens), ._field_Ident=_1347_identToken});;
}



inline jule::Ptr<_1c48897e7_NsSelectionExpr> _1c568c74d_buildNsSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _14736_tokens) {
	jule::Ptr<_1c48897e7_NsSelectionExpr> _1487_ns = jule::new_ptr<_1c48897e7_NsSelectionExpr>(_1c48897e7_NsSelectionExpr{._field_Ns=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Ident=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if ((((*(_14736_tokens)).len() == 3LL) && ((*((*(_14736_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*_1487_ns.alloc)._field_Ns=(*(_14736_tokens)).slice(0LL, 1LL);
		(*_1487_ns.alloc)._field_Ident=(*(_14736_tokens))[2LL];
	} else {
		{
			auto expr = _14736_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac2653e9:;
			if (it != expr_end) {
				jule::I64 _1549_i = it - expr->begin();
				jule::Ptr<_1c486c19d_Token> _15416_token = *it;
				{
					if (((_1549_i & 1LL) == 0LL)) {
						if (((*(_15416_token))._field_Id != static_cast<jule::U64>(1LLU))) {
							_1c568a7b2_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1c568ab25_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_1487_ns.alloc)._field_Ns=jule::append((*_1487_ns.alloc)._field_Ns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15416_token; __jule_collection; }));
					} else if (((*(_15416_token))._field_Id != static_cast<jule::U64>(19LLU))) {
						_1c568a7b2_pushErr(_self_, _15416_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c568ab25_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ac2653e9:;
				++it;
				_1549_i++;
				goto _iter_begin_1ac2653e9;
			}
			_iter_end_1ac2653e9:;
		};
		(*_1487_ns.alloc)._field_Ident=(*_1487_ns.alloc)._field_Ns[((*_1487_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_1487_ns))._field_Ns).mut_slice(0LL, ((*(_1487_ns))._field_Ns.len() - 1LL));;
	};
	return _1487_ns;;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c568ca8e_buildType(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _17230_tokens) {
	jule::I64 _1737_i = 0LL;;
	jule::Ptr<_1c4882779_TypeDecl> _1747_t;
	jule::Bool _17410_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, _17230_tokens, (&(_1737_i)), false);
		_1747_t = __jule_assign_result.__jule_result_arg0;
		_17410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17410_ok))) {
		_1c568a7b2_pushErr(_self_, (*(_17230_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1737_i < (*(_17230_tokens)).len())) {
		_1c568a7b2_pushErr(_self_, (*(_17230_tokens))[_1737_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _1747_t;;
}



inline jule::Any _1c568cdd0_buildSubIdent(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _18634_tokens) {
	jule::I64 _1873_i = ((*(_18634_tokens)).len() - 2LL);;
	jule::Ptr<_1c486c19d_Token> _1883_token = (*(_18634_tokens))[_1873_i];;
	{
		auto &_match_expr{ (*(_1883_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1ac26d3e1:;
			{
				return jule::Any(_1c568c40c_buildObjSubIdent(_self_, (*(_18634_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac26d9eb:;
			{
				return jule::Any(_1c568c74d_buildNsSubIdent(_self_, _18634_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1ac26da62:;
			{
				return jule::Any(_1c568ca8e_buildType(_self_, _18634_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1ac26d677:;
	};
	if (_1c5696da6_isAnonFnHead(_18634_tokens)) {
		return jule::Any(_1c568ca8e_buildType(_self_, _18634_tokens), &__jule_any_type89);;
	};
	_1c568a7b2_pushErr(_self_, _1883_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1c4889044_VariadicExpr> _1c568d221_buildVariadic(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _20833_tokens) {
	jule::Ptr<_1c486c19d_Token> _2097_token = _20833_tokens[(_20833_tokens.len() - 1LL)];;
	(_20833_tokens).mut_slice(0LL, (_20833_tokens.len() - 1LL));;
	return jule::new_ptr<_1c4889044_VariadicExpr>(_1c4889044_VariadicExpr{._field_Token=_2097_token, ._field_Expr=_1c569535a_buildFromTokens(_self_, _20833_tokens)});;
}



inline jule::Ptr<_1c4886d77_RangeExpr> _1c568d562_buildBetweenParentheses(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _21743_tokens) {
	if ((_21743_tokens.len() == 2LL)) {
		_1c568a7b2_pushErr(_self_, _21743_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21743_tokens).mut_slice(1LL, (_21743_tokens.len() - 1LL));;
	return jule::new_ptr<_1c4886d77_RangeExpr>(_1c4886d77_RangeExpr{._field_Expr=_1c569535a_buildFromTokens(_self_, _21743_tokens)});;
}



inline jule::Ptr<_1c488941d_CastExpr> _1c568d8a3_tryBuildCast(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _22933_tokens) {
	jule::I64 _2307_rangeN = 0LL;;
	{
		auto expr = _22933_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2741d8:;
		if (it != expr_end) {
			jule::I64 _2317_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _23110_token = *it;
			{
				{
					auto &_match_expr{ (*(_23110_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac274bcd:;
						{
							(_2307_rangeN)++;
							goto _iter_next_1ac2741d8;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac2750a7:;
						{
							(_2307_rangeN)--;
						}
					}
					_match_end_1ac274eb9:;
				};
				if ((_2307_rangeN > 0LL)) {
					goto _iter_next_1ac2741d8;
				} else if (((_2317_i + 1LL) == (*(_22933_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _2508_typeTokens = (*(_22933_tokens)).slice(0LL, (_2317_i + 1LL));;
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _2518_exprTokens = (*(_22933_tokens)).slice((_2317_i + 1LL));;
				if ((_2518_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c486c19d_Token> _2584_tok = _2518_exprTokens[0LL];;
				if (((*(_2584_tok))._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1c488941d_CastExpr> _2638_cast = jule::new_ptr<_1c488941d_CastExpr>(_1c488941d_CastExpr{._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
				if ((_2518_exprTokens.len() == 2LL)) {
					_1c568a7b2_pushErr(_self_, _2518_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1c568ab25_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_2508_typeTokens.len() == 2LL)) {
					_1c568a7b2_pushErr(_self_, _2508_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1c568ab25_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_2508_typeTokens).mut_slice(1LL, (_2508_typeTokens.len() - 1LL));;
					jule::I64 _2779_typeIndex = 0LL;;
					jule::Ptr<_1c4882779_TypeDecl> _2789_t;
					jule::Bool _27812_ok;
					({
						__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &(_2508_typeTokens), (&(_2779_typeIndex)), true);
						_2789_t = __jule_assign_result.__jule_result_arg0;
						_27812_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27812_ok && (_2779_typeIndex < _2508_typeTokens.len()))) {
						_1c568a7b2_pushErr(_self_, _2508_typeTokens[_2779_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27812_ok))) {
						return _2638_cast;;
					};
					(*(_2638_cast))._field_Kind=_2789_t;
					if ((_2518_exprTokens.len() > 2LL)) {
						jule::I64 _28810_j = 0LL;;
						_1c56992a4_range(&(_28810_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_2518_exprTokens));
						if ((_28810_j < _2518_exprTokens.len())) {
							return nullptr;;
						};
						(_2518_exprTokens).mut_slice(0LL, _28810_j);;
						(*_2638_cast.alloc)._field_Expr=_1c569535a_buildFromTokens(_self_, _2518_exprTokens);
					};
				};
				return _2638_cast;;
			}
			_iter_next_1ac2741d8:;
			++it;
			_2317_i++;
			goto _iter_begin_1ac2741d8;
		}
		_iter_end_1ac2741d8:;
	};
	return nullptr;;
}



inline void _1c568dcc1_pushArg(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c4886aad_Expr>>* _30328_args, jule::Slice<jule::Ptr<_1c486c19d_Token>> _30347_tokens, jule::Ptr<_1c486c19d_Token> _30365_err_token) {
	if ((_30347_tokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, _30365_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1c4886aad_Expr>> &__jule_push_dest = (*(_30328_args)); __jule_push_dest.push(_1c569535a_buildFromTokens(_self_, _30347_tokens)); };
}



inline jule::Slice<jule::Ptr<_1c4886aad_Expr>> _1c568e112_buildArgs(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _31229_tokens) {
	if ((_31229_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _31811_args = nullptr;;
	jule::I64 _3197_last = 0LL;;
	jule::I64 _3207_rangeN = 0LL;;
	(_31229_tokens).mut_slice(1LL, (_31229_tokens.len() - 1LL));;
	{
		auto expr = &(_31229_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab74ec5:;
		if (it != expr_end) {
			jule::I64 _3227_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _32210_token = *it;
			{
				{
					auto &_match_expr{ (*(_32210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aab75adb:;
						{
							(_3207_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aab75eb5:;
						{
							(_3207_rangeN)--;
						}
					}
					_match_end_1aab75dc7:;
				};
				if (((_3207_rangeN > 0LL) || ((*(_32210_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aab74ec5;
				};
				_1c568dcc1_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last, _3227_i), _32210_token);
				_3197_last=(_3227_i + 1LL);
			}
			_iter_next_1aab74ec5:;
			++it;
			_3227_i++;
			goto _iter_begin_1aab74ec5;
		}
		_iter_end_1aab74ec5:;
	};
	if ((_3197_last < _31229_tokens.len())) {
		if ((_3197_last == 0LL)) {
			if ((_31229_tokens.len() > 0LL)) {
				_1c568dcc1_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[_3197_last]);
			};
		} else {
			_1c568dcc1_pushArg(_self_, &(_31811_args), _31229_tokens.slice(_3197_last), _31229_tokens[(_3197_last - 1LL)]);
		};
	};
	return _31811_args;;
}



inline jule::Ptr<_1c488a7d7_FnCallExpr> _1c568e909_buildFnCall(_1c5689edc_exprBuilder* _self_, jule::Ptr<_1c486c19d_Token>* _37832_token, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37852_expr, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37873_args) {
	return jule::new_ptr<_1c488a7d7_FnCallExpr>(_1c488a7d7_FnCallExpr{._field_Token=(*(_37832_token)), ._field_Expr=_1c569535a_buildFromTokens(_self_, (*(_37852_expr))), ._field_Args=_1c568e112_buildArgs(_self_, (*(_37873_args))), ._field_Exception=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1c568ec4a_buildParenthesesRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _38642_tokens) {
	jule::Ptr<_1c486c19d_Token> _3877_token = (*(_38642_tokens))[0LL];;
	if (((*(_3877_token))._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1c488941d_CastExpr> _3898_expr = _1c568d8a3_tryBuildCast(_self_, _38642_tokens);;
		if ((_3898_expr != nullptr)) {
			return jule::Any(_3898_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _3947_exprTokens;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _39423_argsTokens;
	({
		__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_assign_result = _1c569956d_rangeLast(_38642_tokens);
		_3947_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39423_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3947_exprTokens.len() == 0LL)) {
		return jule::Any(_1c568d562_buildBetweenParentheses(_self_, _39423_argsTokens), &__jule_any_type101);;
	};
	if (_1c5696da6_isAnonFnHead(&(_3947_exprTokens))) {
		return jule::Any(_1c568ca8e_buildType(_self_, _38642_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1c568e909_buildFnCall(_self_, &(_3877_token), &(_3947_exprTokens), &(_39423_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1c4887e22_UnsafeExpr> _1c569008b_buildUnsafeExpr(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _40835_tokens) {
	jule::Ptr<_1c486c19d_Token> _4097_token = _40835_tokens[0LL];;
	(_40835_tokens).mut_slice(1LL);;
	jule::I64 _4117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _4127_rangeTokens = _1c56992a4_range(&(_4117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40835_tokens));;
	if ((_4127_rangeTokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, _40835_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4887e22_UnsafeExpr>(_1c4887e22_UnsafeExpr{._field_Token=_4097_token, ._field_Expr=_1c569535a_buildFromTokens(_self_, _4127_rangeTokens)});;
}



inline jule::Ptr<_1c4894439_FnDecl> _1c56903cc_buildAnonFn(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _42332_tokens) {
	jule::Ptr<_1c4894439_FnDecl> _4247_f = _1c56a2774_buildFn((*(_self_))._field_p, _42332_tokens, false, false);;
	if ((!(_1c48947d0_IsAnon(_4247_f.ptr())))) {
		_1c568a7b2_pushErr(_self_, (*_4247_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _4247_f;;
}



inline jule::Any _1c569071d_buildUnsafe(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _43232_tokens) {
	{
		auto &_match_expr{ (*((*(_43232_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aab8844a:;
			{
				return jule::Any(_1c56903cc_buildAnonFn(_self_, _43232_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1aab87834:;
			{
				return jule::Any(_1c569008b_buildUnsafeExpr(_self_, (*(_43232_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1aab87c52:;
	};
}



inline void _1c5690b3b_pushRangeLitPart(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _44236_part, jule::Ptr<_1c486c19d_Token> _4433_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>* _44328_parts) {
	if ((_44236_part.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, _4433_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> &__jule_push_dest = (*(_44328_parts)); __jule_push_dest.push(_44236_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5690e7c_getBraceRangeLitExprParts(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _45345_tokens) {
	if ((_45345_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _45911_parts = nullptr;;
	jule::I64 _4617_last = 0LL;;
	jule::I64 _4627_rangeN = 0LL;;
	(_45345_tokens).mut_slice(1LL, (_45345_tokens.len() - 1LL));;
	{
		auto expr = &(_45345_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab8ba7a:;
		if (it != expr_end) {
			jule::I64 _4647_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _46410_token = *it;
			{
				{
					auto &_match_expr{ (*(_46410_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aab8c691:;
						{
							(_4627_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aab8ca6a:;
						{
							(_4627_rangeN)--;
						}
					}
					_match_end_1aab8c97c:;
				};
				if (((_4627_rangeN > 0LL) || ((*(_46410_token))._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1aab8ba7a;
				};
				_1c5690b3b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last, _4647_i), _46410_token, &(_45911_parts));
				_4617_last=(_4647_i + 1LL);
			}
			_iter_next_1aab8ba7a:;
			++it;
			_4647_i++;
			goto _iter_begin_1aab8ba7a;
		}
		_iter_end_1aab8ba7a:;
	};
	if ((_4617_last < _45345_tokens.len())) {
		if ((_4617_last == 0LL)) {
			if ((_45345_tokens.len() > 0LL)) {
				_1c5690b3b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[_4617_last], &(_45911_parts));
			};
		} else {
			_1c5690b3b_pushRangeLitPart(_self_, _45345_tokens.slice(_4617_last), _45345_tokens[(_4617_last - 1LL)], &(_45911_parts));
		};
	};
	return _45911_parts;;
}



inline jule::Ptr<_1c488b2cc_FieldExprPair> _1c56912bd_buildFieldExprPair(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _49538_tokens) {
	if (((_49538_tokens.len() - 2LL) == 0LL)) {
		_1c568a7b2_pushErr(_self_, _49538_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c488b2cc_FieldExprPair> _5007_pair = jule::new_ptr<_1c488b2cc_FieldExprPair>(_1c488b2cc_FieldExprPair{._field_Field=_49538_tokens[0LL], ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	(_49538_tokens).mut_slice(2LL);;
	(*(_5007_pair))._field_Expr=_1c569535a_buildFromTokens(_self_, _49538_tokens);
	return _5007_pair;;
}



inline jule::Ptr<_1c4886aad_Expr> _1c569160e_buildStructLitExpr(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _50839_tokens) {
	jule::Ptr<_1c486c19d_Token> _5097_token = (*(_50839_tokens))[0LL];;
	if ((((*(_5097_token))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_50839_tokens)).len() > 1LL))) {
		_5097_token=(*(_50839_tokens))[1LL];
		if (((*_5097_token.alloc)._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1c4886aad_Expr>(_1c4886aad_Expr{._field_Token=_5097_token, ._field_End=(*(_50839_tokens))[((*(_50839_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1c56912bd_buildFieldExprPair(_self_, (*(_50839_tokens))), &__jule_any_type78)});;
		};
	};
	return _1c569535a_buildFromTokens(_self_, (*(_50839_tokens)));;
}



inline jule::Slice<jule::Ptr<_1c4886aad_Expr>> _1c5691950_buildStructLitExprs(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _52340_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _5247_parts = _1c5690e7c_getBraceRangeLitExprParts(_self_, (*(_52340_tokens)));;
	if ((_5247_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4886aad_Expr>> _5297_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(0LL, _5247_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4886aad_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5247_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aab9639d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _53015_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c4886aad_Expr>> &__jule_push_dest = _5297_pairs; __jule_push_dest.push(_1c569160e_buildStructLitExpr(_self_, &(_53015_part))); };
			}
			_iter_next_1aab9639d:;
			++it;
			goto _iter_begin_1aab9639d;
		}
		_iter_end_1aab9639d:;
	};
	return _5297_pairs;;
}



inline jule::Ptr<_1c488bb07_StructLit> _1c5691c91_buildTypedStructLiteral(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _53643_tokens) {
	jule::I64 _5377_i = 0LL;;
	jule::Ptr<_1c4882779_TypeDecl> _5387_t;
	jule::Bool _53810_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &(_53643_tokens), (&(_5377_i)), true);
		_5387_t = __jule_assign_result.__jule_result_arg0;
		_53810_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53810_ok))) {
		return nullptr;;
	} else if ((_5377_i >= _53643_tokens.len())) {
		_1c568a7b2_pushErr(_self_, _53643_tokens[_5377_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53643_tokens).mut_slice(_5377_i);;
	jule::Ptr<_1c486c19d_Token> _5473_token = _53643_tokens[0LL];;
	if (((*(_5473_token))._field_Id != static_cast<jule::U64>(72LLU))) {
		_1c568a7b2_pushErr(_self_, _5473_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c488bb07_StructLit>(_1c488bb07_StructLit{._field_End=_53643_tokens[(_53643_tokens.len() - 1LL)], ._field_Kind=_5387_t, ._field_Exprs=_1c5691950_buildStructLitExprs(_self_, &(_53643_tokens))});;
}



inline jule::Ptr<_1c4886aad_Expr> _1c56920d2_buildBraceLitPart(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _56038_tokens) {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _5617_l;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _56114_r;
	({
		__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_assign_result = _1c5696180_splitDelim(_56038_tokens, static_cast<jule::U64>(8LLU));
		_5617_l = __jule_assign_result.__jule_result_arg0;
		_56114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5617_l != nullptr)) {
		return jule::new_ptr<_1c4886aad_Expr>(_1c4886aad_Expr{._field_Token=(*(_56038_tokens))[0LL], ._field_End=(*(_56038_tokens))[((*(_56038_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1c488c8d8_KeyValPair>(_1c488c8d8_KeyValPair{._field_Key=_1c569535a_buildFromTokens(_self_, _5617_l), ._field_Val=_1c569535a_buildFromTokens(_self_, _56114_r), ._field_Colon=(*(_56038_tokens))[_5617_l.len()]}), &__jule_any_type79)});;
	};
	return _1c569535a_buildFromTokens(_self_, (*(_56038_tokens)));;
}



inline jule::Ptr<_1c488c0ad_BraceLit> _1c5692423_buildBraceLit(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _57734_tokens) {
	jule::Ptr<_1c488c0ad_BraceLit> _5787_lit = jule::new_ptr<_1c488c0ad_BraceLit>(_1c488c0ad_BraceLit{._field_Token=(*(_57734_tokens))[0LL], ._field_End=(*(_57734_tokens))[((*(_57734_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1c4886aad_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _5837_parts = _1c5690e7c_getBraceRangeLitExprParts(_self_, (*(_57734_tokens)));;
	if ((_5837_parts == nullptr)) {
		return _5787_lit;;
	};
	(*(_5787_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(0LL, _5837_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4886aad_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5837_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aaba0e35:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _58915_part = *it;
			{
				(*_5787_lit.alloc)._field_Exprs=jule::append((*_5787_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c56920d2_buildBraceLitPart(_self_, &(_58915_part)); __jule_collection; }));
			}
			_iter_next_1aaba0e35:;
			++it;
			goto _iter_begin_1aaba0e35;
		}
		_iter_end_1aaba0e35:;
	};
	return _5787_lit;;
}



inline jule::Any _1c5692764_buildBraceRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _59636_tokens) {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _5977_exprTokens;
	jule::I64 _59719_rangeN;
	({
		__jule_tuple_sx_1c486c19d_Token__jule_tuple_int __jule_assign_result = _1c56969cc_getRangeExprTokens(_59636_tokens);
		_5977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5977_exprTokens.len() == 0LL)) {
			_case_begin_1aaba284e:;
			{
				return jule::Any(_1c5692423_buildBraceLit(_self_, _59636_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59719_rangeN > 0LL)) {
			_case_begin_1aaba28e8:;
			{
				_1c568a7b2_pushErr(_self_, (*(_59636_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aaba27b6:;
	};
	jule::Ptr<_1c486c19d_Token> _6083_elseToken = _5977_exprTokens[(_5977_exprTokens.len() - 1LL)];;
	if (((*(_5977_exprTokens[(_5977_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U64>(14LLU))) {
		(_5977_exprTokens).mut_slice(0LL, (_5977_exprTokens.len() - 1LL));;
		jule::Any _6118_d = _1c5694bc8_build(_self_, &(_5977_exprTokens));;
		if ((_6118_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _6118_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1aaba615a:;
				{
					((*(_59636_tokens))).mut_slice((_5977_exprTokens.len() + 1LL));;
					jule::I64 _6189_i = 0LL;;
					jule::Slice<jule::Ptr<_1c486c19d_Token>> _6199_rangeTokens = _1c56992a4_range(&(_6189_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _59636_tokens);;
					jule::Ptr<_1c488a7d7_FnCallExpr> _6209_model = _6118_d.unsafe_cast_ptr<_1c488a7d7_FnCallExpr>();;
					if (_1c488ae25_Ignored(_6209_model.ptr())) {
						_1c568a7b2_pushErr(_self_, _6083_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1c568ab25_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_6209_model.alloc)._field_Exception=_1c569c780_buildScope((*(_self_))._field_p, &(_6199_rangeTokens), (*(_59636_tokens))[(_6189_i - 1LL)]);
					return _6118_d;;
				}
			}
			else {
				_case_begin_1aaba5302:;
				{
					_1c568a7b2_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1aaba5742:;
		};
	};
	{
		auto &_match_expr{ (*(_5977_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aacba912:;
			{
				return _1c569071d_buildUnsafe(_self_, _59636_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1aacbae84:;
			{
				return jule::Any(_1c56903cc_buildAnonFn(_self_, _59636_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aacbaeea:;
			{
				return jule::Any(_1c5691c91_buildTypedStructLiteral(_self_, (*(_59636_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1aacb9900:;
			{
				_1c568a7b2_pushErr(_self_, _5977_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1aacba56b:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c5692aa5_getEnumerableParts(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _64838_tokens) {
	(_64838_tokens).mut_slice(1LL, (_64838_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _6507_parts;
	jule::Slice<_205a977d7_Log> _65014_errors;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&(_64838_tokens), static_cast<jule::U64>(5LLU), true);
		_6507_parts = __jule_assign_result.__jule_result_arg0;
		_65014_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65014_errors);
	return _6507_parts;;
}



inline jule::Ptr<_1c488d114_SliceExpr> _1c5692de6_buildSlice(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _65530_tokens) {
	jule::Ptr<_1c488d114_SliceExpr> _6567_slc = jule::new_ptr<_1c488d114_SliceExpr>(_1c488d114_SliceExpr{._field_Token=_65530_tokens[0LL], ._field_End=_65530_tokens[(_65530_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1c4886aad_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _6617_parts = _1c5692aa5_getEnumerableParts(_self_, _65530_tokens);;
	if ((_6617_parts.len() == 0LL)) {
		return _6567_slc;;
	};
	(*(_6567_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(0LL, _6617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4886aad_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aacc0e12:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _66715_p = *it;
			{
				if ((_66715_p.len() == 0LL)) {
					goto _iter_next_1aacc0e12;
				};
				(*_6567_slc.alloc)._field_Exprs=jule::append((*_6567_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4886aad_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c569535a_buildFromTokens(_self_, _66715_p); __jule_collection; }));
			}
			_iter_next_1aacc0e12:;
			++it;
			goto _iter_begin_1aacc0e12;
		}
		_iter_end_1aacc0e12:;
	};
	return _6567_slc;;
}



inline jule::Ptr<_1c488da71_IndexingExpr> _1c569339c_buildIndexing(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _67733_exprTokens, jule::Slice<jule::Ptr<_1c486c19d_Token>> _6787_tokens, jule::Ptr<_1c486c19d_Token> _67829_errorToken) {
	jule::Ptr<_1c486c19d_Token> _6797_end = _6787_tokens[(_6787_tokens.len() - 1LL)];;
	(_6787_tokens).mut_slice(1LL, (_6787_tokens.len() - 1LL));;
	if ((_6787_tokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, _67829_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4886aad_Expr> _6857_expr = _1c569535a_buildFromTokens(_self_, _67733_exprTokens);;
	if ((_6857_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4886aad_Expr> _6897_index = _1c569535a_buildFromTokens(_self_, _6787_tokens);;
	if ((_6897_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c488da71_IndexingExpr>(_1c488da71_IndexingExpr{._field_Token=_67829_errorToken, ._field_End=_6797_end, ._field_Expr=_6857_expr, ._field_Index=_6897_index});;
}



inline jule::Ptr<_1c488e1d1_SlicingExpr> _1c56939b8_buildSlicing(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70133_exprTokens, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _70160_start, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _7028_to, jule::Ptr<_1c486c19d_Token>* _70227_errorToken, jule::Ptr<_1c486c19d_Token> _70251_end) {
	jule::Ptr<_1c488e1d1_SlicingExpr> _7037_slc = jule::new_ptr<_1c488e1d1_SlicingExpr>(_1c488e1d1_SlicingExpr{._field_Token=(*(_70227_errorToken)), ._field_End=_70251_end, ._field_Expr=_1c569535a_buildFromTokens(_self_, (*(_70133_exprTokens))), ._field_Start=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_To=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	if (((*(_70160_start)).len() > 0LL)) {
		(*(_7037_slc))._field_Start=_1c569535a_buildFromTokens(_self_, (*(_70160_start)));
	};
	if (((*(_7028_to)).len() > 0LL)) {
		(*_7037_slc.alloc)._field_To=_1c569535a_buildFromTokens(_self_, (*(_7028_to)));
	};
	return _7037_slc;;
}



inline jule::Any _1c5693d09_buildBracketRange(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _71737_tokens) {
	jule::Ptr<_1c486c19d_Token> _7187_errorToken = _71737_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _7197_exprTokens;
	jule::I64 _71919_rangeN;
	({
		__jule_tuple_sx_1c486c19d_Token__jule_tuple_int __jule_assign_result = _1c56969cc_getRangeExprTokens(&(_71737_tokens));
		_7197_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71919_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_7197_exprTokens.len() == 0LL)) {
		return jule::Any(_1c5692de6_buildSlice(_self_, _71737_tokens), &__jule_any_type94);;
	} else if ((_71919_rangeN > 0LL)) {
		_1c568a7b2_pushErr(_self_, _7187_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71737_tokens).mut_slice(_7197_exprTokens.len());;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _7347_splitTokens = _71737_tokens.slice(1LL, (_71737_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _7357_start;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _73518_to;
	({
		__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_assign_result = _1c5696180_splitDelim(&(_7347_splitTokens), static_cast<jule::U64>(8LLU));
		_7357_start = __jule_assign_result.__jule_result_arg0;
		_73518_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7357_start != nullptr) || (_73518_to != nullptr))) {
		return jule::Any(_1c56939b8_buildSlicing(_self_, &(_7197_exprTokens), &(_7357_start), &(_73518_to), &(_7187_errorToken), _71737_tokens[(_71737_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1c569339c_buildIndexing(_self_, _7197_exprTokens, _71737_tokens, _7187_errorToken), &__jule_any_type104);;
}



inline jule::Any _1c569414a_buildExclRight(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _74235_tokens) {
	jule::Ptr<_1c486c19d_Token> _7433_token = (*(_74235_tokens))[((*(_74235_tokens)).len() - 1LL)];;
	((*(_74235_tokens))).mut_slice(0LL, ((*(_74235_tokens)).len() - 1LL));;
	jule::Any _7457_d = _1c5694bc8_build(_self_, _74235_tokens);;
	if ((_7457_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7457_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1aaccd936:;
			{
				(*(_7457_d.unsafe_cast_ptr<_1c488a7d7_FnCallExpr>()))._field_Exception=jule::new_ptr<_1c489279a_ScopeTree>(_1c489279a_ScopeTree{._field_Parent=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1c489213a_Stmt>(nullptr), ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr)});
				return _7457_d;;
			}
		}
		_match_end_1aaccdd76:;
	};
	_1c568a7b2_pushErr(_self_, _7433_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c569448b_buildData(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _76030_tokens) {
	{
		auto _match_expr{ (*(_76030_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1aacd043d:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1aacd04b5:;
			{
				return _1c568b939_buildSingle(_self_, (*(_76030_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1aacd052b:;
			{
				if (((*((*(_76030_tokens))[0LL]))._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1c568bc7a_buildBindIdent(_self_, _76030_tokens), &__jule_any_type44);;
				};
			}
		}
		_match_end_1aacce31b:;
	};
	jule::Ptr<_1c486c19d_Token> _7727_token = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
	if (((*(_7727_token))._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1c568d221_buildVariadic(_self_, (*(_76030_tokens))), &__jule_any_type76);;
	};
	_7727_token=(*(_76030_tokens))[0LL];
	if (_1c486c8da_IsUnaryOp((*_7727_token.alloc)._field_Id)) {
		if (((*(_76030_tokens)).len() > 1LL)) {
			_7727_token=(*(_76030_tokens))[1LL];
			if (((*_7727_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1c568ca8e_buildType(_self_, _76030_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1c568c0bb_buildUnary(_self_, (*(_76030_tokens))), &__jule_any_type88);;
	};
	if (((*(_76030_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7727_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1aacd5025:;
				{
					if (((*(_76030_tokens)).len() > 3LL)) {
						jule::Ptr<_1c486c19d_Token> _7986_t = (*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];;
						if (((*(_7986_t))._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1aacd4eae;
						};
					};
					jule::Ptr<_1c486c19d_Token> _8045_next = (*(_76030_tokens))[1LL];;
					if (((*(_8045_next))._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1aacd4eae;
					};
					return jule::Any(_1c568ca8e_buildType(_self_, _76030_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1aacd4eae:;
		};
	};
	_7727_token=(*(_76030_tokens))[((*(_76030_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7727_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1aacd817c:;
			{
				return _1c568cdd0_buildSubIdent(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1aacd8226:;
			{
				return _1c569414a_buildExclRight(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aacd828c:;
			{
				return _1c568ec4a_buildParenthesesRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aacd8303:;
			{
				return _1c5692764_buildBraceRange(_self_, _76030_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aacd8369:;
			{
				return _1c5693d09_buildBracketRange(_self_, (*(_76030_tokens)));;
			}
		}
		_match_end_1aacd8127:;
	};
	_1c568a7b2_pushErr(_self_, _7727_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1c5694887_buildBinary(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _82932_tokens, jule::I64 _82950_i) {
	jule::Ptr<_1c486c19d_Token> _8307_op = (*(_82932_tokens))[_82950_i];;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8317_leftTokens = (*(_82932_tokens)).slice(0LL, _82950_i);;
	if ((_1c56956e0_isTypeOp(&((*(_8307_op))._field_Id)) && _1c56959ed_isTypeRange(&(_8317_leftTokens)))) {
		return jule::Any(_1c568ca8e_buildType(_self_, _82932_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8367_rightTokens = (*(_82932_tokens)).slice((_82950_i + 1LL));;
	if ((_8317_leftTokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8367_rightTokens.len() == 0LL)) {
		_1c568a7b2_pushErr(_self_, (*(_82932_tokens))[_82950_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c568ab25_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1c488a177_BinaryExpr>(_1c488a177_BinaryExpr{._field_Left=_1c569535a_buildFromTokens(_self_, _8317_leftTokens), ._field_Right=_1c569535a_buildFromTokens(_self_, _8367_rightTokens), ._field_Op=_8307_op}), &__jule_any_type109);;
}



inline jule::Any _1c5694bc8_build(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _85426_tokens) {
	if (((*((*(_85426_tokens))[0LL]))._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1c568ca8e_buildType(_self_, _85426_tokens), &__jule_any_type89);;
	};
	jule::I64 _8583_i = _1c5696449_findLowestPrecOp(_85426_tokens);;
	if ((_8583_i == -1LL)) {
		return _1c569448b_buildData(_self_, _85426_tokens);;
	};
	return _1c5694887_buildBinary(_self_, _85426_tokens, _8583_i);;
}



inline jule::Any _1c5695019_buildKind(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _86530_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _8667_parts;
	jule::Slice<_205a977d7_Log> _86614_errors;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(_86530_tokens, static_cast<jule::U64>(5LLU), true);
		_8667_parts = __jule_assign_result.__jule_result_arg0;
		_86614_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86614_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86614_errors);
		return nullptr;;
	} else if ((_8667_parts.len() > 1LL)) {
		return jule::Any(_1c568ae66_buildTuple(_self_, &(_8667_parts)), &__jule_any_type80);;
	};
	return _1c5694bc8_build(_self_, _86530_tokens);;
}



inline jule::Ptr<_1c4886aad_Expr> _1c569535a_buildFromTokens(_1c5689edc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _87635_tokens) {
	if ((_87635_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8807_kind = _1c5695019_buildKind(_self_, &(_87635_tokens));;
	if ((_8807_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4886aad_Expr>(_1c4886aad_Expr{._field_Token=_87635_tokens[0LL], ._field_End=_87635_tokens[(_87635_tokens.len() - 1LL)], ._field_Kind=_8807_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1c5689edc_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c5697703_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1c569ae32_stop(_1c569ab02_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1c569b1b8_stopped(_1c569ab02_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1c569b5d6_pushErr(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token> _20823_token, jule::Str _20838_fmt, jule::Slice<jule::Any> _20851_args) {
	{ jule::Slice<_205a977d7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c569a1d9_compilerErr(&(_20823_token), &(_20838_fmt), _20851_args)); };
}



inline void _1c569b949_pushSuggestion(_1c569ab02_parser* _self_, jule::Str _21330_fmt, jule::Slice<jule::Any> _21343_args) {
	{
		_1c569a580_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21330_fmt, _21343_args);
	};
}



inline jule::Ptr<_1c4886aad_Expr> _1c569bc8a_buildExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _21731_tokens) {
	return _1c569535a_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21731_tokens)));;
}



inline jule::Ptr<_1c4881b96_Directive> _1c569c0cb_buildDirective(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _22134_tokens) {
	if ((_22134_tokens.len() == 1LL)) {
		_1c569b5d6_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22134_tokens[1LL]))._field_Column != ((*(_22134_tokens[0LL]))._field_Column + 1LL))) {
		_1c569b5d6_pushErr(_self_, _22134_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c4881b96_Directive>(_1c4881b96_Directive{._field_Tag=_22134_tokens[1LL], ._field_Args=_22134_tokens.slice(2LL)});;
}



inline void _1c569c384_pushDirective(_1c569ab02_parser* _self_, jule::Ptr<_1c4881b96_Directive> _23633_d) {
	if ((_23633_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad15110:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _24110_pd = *it;
			{
				if (((*((*(_23633_d))._field_Tag))._field_Kind == (*(*(_24110_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1aad15110:;
			++it;
			goto _iter_begin_1aad15110;
		}
		_iter_end_1aad15110:;
	};
	{ jule::Slice<jule::Ptr<_1c4881b96_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23633_d); };
}



inline jule::Ptr<_1c489279a_ScopeTree> _1c569c780_buildScope(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _24932_tokens, jule::Ptr<_1c486c19d_Token> _24954_end) {
	jule::Ptr<_1c489279a_ScopeTree> _2507_s = _1c567a98e_newScope();;
	(*(_2507_s))._field_End=_24954_end;
	_1c567c573_scopeParser _2527_sp = _1c567c573_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1c567bbd2_stmt>>(nullptr), ._field_pos=0};;
	_1c568945e_build(&_2527_sp, _24932_tokens, &(_2507_s));
	return _2507_s;;
}



inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c569cc36__buildType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _25939_tokens, jule::I64* _2607_i, jule::Bool _26016_err) {
	__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1c56acc24_typeBuilder _2617_tb = _1c56acc24_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25939_tokens)), ._field_i=_2607_i, ._field_err=_26016_err};;
	__jule_func_result = std::move(_1c56b0c38_build(&_2617_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c569d1dc_buildType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _27138_tokens, jule::I64* _2727_i, jule::Bool _27216_err) {
	__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c486c19d_Token> _2733_token = (*(_27138_tokens))[(*(_2727_i))];;
	jule::Ptr<_1c4882779_TypeDecl> _2747_t;
	jule::Bool _27410_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569cc36__buildType(_self_, _27138_tokens, _2727_i, _27216_err);
		_2747_t = __jule_assign_result.__jule_result_arg0;
		_27410_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27216_err && (!(_27410_ok)))) {
		_1c569b5d6_pushErr(_self_, _2733_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2747_t;
	__jule_func_result.__jule_result_arg1 = _27410_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c569d52d_buildTypeAliasDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _28140_tokens) {
	jule::I64 _2827_i = 1LL;;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c569b5d6_pushErr(_self_.ptr(), (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c4899296_TypeAliasDecl> _2877_tad = jule::new_ptr<_1c4899296_TypeAliasDecl>(_1c4899296_TypeAliasDecl{._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_28140_tokens))[1LL], ._field_Ident=(*((*(_28140_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
	jule::Ptr<_1c486c19d_Token> _2917_token = (*(_28140_tokens))[_2827_i];;
	if (((*(_2917_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, _2917_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	_2917_token=(*(_28140_tokens))[_2827_i];
	if (((*_2917_token.alloc)._field_Id != static_cast<jule::U64>(8LLU))) {
		_1c569b5d6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	(_2827_i)++;
	if ((_2827_i >= (*(_28140_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_28140_tokens))[(_2827_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _2877_tad;;
	};
	jule::Ptr<_1c4882779_TypeDecl> _3127_t;
	jule::Bool _31210_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _28140_tokens, (&(_2827_i)), true);
		_3127_t = __jule_assign_result.__jule_result_arg0;
		_31210_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2877_tad))._field_Kind=_3127_t;
	if ((_31210_ok && (_2827_i < (*(_28140_tokens)).len()))) {
		_1c569b5d6_pushErr(_self_, (*(_28140_tokens))[_2827_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_2877_tad.alloc)._field_Public=_1c494a27b_IsPub((*_2877_tad.alloc)._field_Ident);
	return _2877_tad;;
}



inline void _1c569d891_buildVarTypeAndExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c48955e4_VarDecl>* _32141_v, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _32159_tokens) {
	jule::I64 _3227_i = 0LL;;
	jule::Ptr<_1c486c19d_Token> _3237_tok = (*(_32159_tokens))[_3227_i];;
	if (((*(_3237_tok))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_3227_i)++;
		if (((_3227_i >= (*(_32159_tokens)).len()) || ((*((*(_32159_tokens))[_3227_i]))._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1c569b5d6_pushErr(_self_.ptr(), _3237_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1c4882779_TypeDecl> _3308_t;
		jule::Bool _33011_ok;
		({
			__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _32159_tokens, (&(_3227_i)), true);
			_3308_t = __jule_assign_result.__jule_result_arg0;
			_33011_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33011_ok) {
			(*((*(_32141_v))))._field_Kind=_3308_t;
			if ((_3227_i >= (*(_32159_tokens)).len())) {
				return;;
			};
			_3237_tok=(*(_32159_tokens))[_3227_i];
		};
	};
	if (((*_3237_tok.alloc)._field_Id != static_cast<jule::U64>(71LLU))) {
		_1c569b5d6_pushErr(_self_, _3237_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Setter=_3237_tok;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _3467_exprTokens = (*(_32159_tokens)).slice((_3227_i + 1LL));;
	if ((_3467_exprTokens.len() == 0LL)) {
		_1c569b5d6_pushErr(_self_, _3237_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32141_v))))._field_Expr=_1c569bc8a_buildExpr(_self_, &(_3467_exprTokens));
}



inline void _1c569dc04_buildVarCommon(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c48955e4_VarDecl>* _35436_v, jule::Slice<jule::Ptr<_1c486c19d_Token>> _35453_tokens) {
	(*((*(_35436_v))))._field_Token=_35453_tokens[0LL];
	if (((*((*((*(_35436_v))))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_.ptr(), (*((*(_35436_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35436_v))))._field_Ident=(*(*((*(_35436_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35436_v))))._field_Public=_1c494a27b_IsPub((*((*(_35436_v))))._field_Ident);
	(*((*(_35436_v))))._field_Kind=nullptr;
	if ((_35453_tokens.len() > 1LL)) {
		(_35453_tokens).mut_slice(1LL);;
		_1c569d891_buildVarTypeAndExpr(_self_, _35436_v, &(_35453_tokens));
	};
}



inline void _1c569e067_buildVarBegin(_1c569ab02_parser* _self_, jule::Ptr<_1c48955e4_VarDecl>* _37034_v, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _37052_tokens) {
	jule::Ptr<_1c486c19d_Token> _3713_tok = (*(_37052_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3713_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aad30c96:;
			{
				(*((*(_37034_v))))._field_Statically=true;
				goto _case_begin_1aad30922;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1aad30922:;
			{
				if (((*(_37052_tokens)).len() == 1LL)) {
					(*(_37052_tokens))=nullptr;
					_1c569b5d6_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37052_tokens))).mut_slice(1LL);;
				if (((*((*(_37052_tokens))[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
					(*((*(_37034_v))))._field_Mutable=true;
					((*(_37052_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1aad30614:;
			{
				(*((*(_37034_v))))._field_Constant=true;
				((*(_37052_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1aad302d4:;
			{
				(*(_37052_tokens))=nullptr;
				_1c569b5d6_pushErr(_self_, _3713_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1aad305ae:;
	};
}



inline jule::Ptr<_1c48955e4_VarDecl> _1c569e3a8_buildVar(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _39829_tokens) {
	jule::Ptr<_1c48955e4_VarDecl> _3997_v = jule::new_ptr<_1c48955e4_VarDecl>(_1c48955e4_VarDecl{._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Token=_39829_tokens[0LL], ._field_Setter=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	_1c569e067_buildVarBegin(_self_.ptr(), &(_3997_v), &(_39829_tokens));
	if ((_39829_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39829_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		(*(_3997_v))._field_Reference=true;
		if ((_39829_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39829_tokens).mut_slice(1LL);;
	};
	_1c569dc04_buildVarCommon(_self_, &(_3997_v), _39829_tokens);
	return _3997_v;;
}



inline jule::Ptr<_1c488e984_GenericDecl> _1c569e6e9_buildGeneric(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _41734_tokens) {
	jule::Ptr<_1c488e984_GenericDecl> _4187_g = jule::new_ptr<_1c488e984_GenericDecl>(_1c488e984_GenericDecl{._field_Token=(*(_41734_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1c488e4cd_Constraint>(nullptr)});;
	if (((*((*(_4187_g))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_.ptr(), (*_4187_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_4187_g.alloc)._field_Ident=(*(*(_4187_g))._field_Token.alloc)._field_Kind;
	if (((*(_41734_tokens)).len() > 1LL)) {
		if (((*((*(_41734_tokens))[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
			_1c569b5d6_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41734_tokens)).len() == 2LL)) {
			_1c569b5d6_pushErr(_self_, (*(_41734_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c486c19d_Token>> _4358_constraintTokens = (*(_41734_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _4368_parts;
		jule::Slice<_205a977d7_Log> _43615_errors;
		({
			__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&(_4358_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_4368_parts = __jule_assign_result.__jule_result_arg0;
			_43615_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43615_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43615_errors);
			return nullptr;;
		};
		(*_4187_g.alloc)._field_Constraint=jule::new_ptr<_1c488e4cd_Constraint>(_1c488e4cd_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, _4368_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4368_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac27e05b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _44216_part = *it;
				{
					jule::I64 _4439_i = 0LL;;
					jule::Ptr<_1c4882779_TypeDecl> _4449_kind;
					({
						__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_44216_part), (&(_4439_i)), true);
						_4449_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_4187_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_4187_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4449_kind; __jule_collection; }));
					if ((_4439_i < _44216_part.len())) {
						_1c569b5d6_pushErr(_self_, _44216_part[_4439_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ac27e05b:;
				++it;
				goto _iter_begin_1ac27e05b;
			}
			_iter_end_1ac27e05b:;
		};
	};
	return _4187_g;;
}



inline jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _1c569eae5_buildGenerics(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _45435_tokens, jule::Ptr<_1c486c19d_Token>* _45454_errorToken) {
	if (((*(_45435_tokens)).len() == 0LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), (*(_45454_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _4607_parts;
	jule::Slice<_205a977d7_Log> _46014_errors;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(_45435_tokens, static_cast<jule::U64>(5LLU), true);
		_4607_parts = __jule_assign_result.__jule_result_arg0;
		_46014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46014_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46014_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> _4667_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>::alloc(0LL, _4607_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c488e984_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4607_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac283d96:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _46715_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1c488e984_GenericDecl>> &__jule_push_dest = _4667_generics; __jule_push_dest.push(_1c569e6e9_buildGeneric(_self_, &(_46715_part))); };
			}
			_iter_next_1ac283d96:;
			++it;
			goto _iter_begin_1ac283d96;
		}
		_iter_end_1ac283d96:;
	};
	return _4667_generics;;
}



inline jule::Ptr<_1c4892ed7_ParamDecl> _1c569ee36_buildSelfParam(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _47434_tokens) {
	if ((_47434_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1c4892ed7_ParamDecl> _4797_param = jule::new_ptr<_1c4892ed7_ParamDecl>(_1c4892ed7_ParamDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_4797_param.alloc)._field_Mutable=true;
		if ((_47434_tokens.len() == 1LL)) {
			_1c569b5d6_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	_238b51e24_StrBuilder _4917_ident = static__238b52375_New(5LL);;
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(65LLU))) {
		_238b528d6_WriteStr(&_4917_ident, jule::Str::lit("&", 1));
		if ((_47434_tokens.len() == 1LL)) {
			_1c569b5d6_pushErr(_self_, _47434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47434_tokens).mut_slice(1LL);;
	};
	if (((*(_47434_tokens[0LL]))._field_Id == static_cast<jule::U64>(24LLU))) {
		_238b528d6_WriteStr(&_4917_ident, jule::Str::lit("self", 4));
		(*_4797_param.alloc)._field_Token=_47434_tokens[0LL];
		if ((_47434_tokens.len() != 1LL)) {
			_1c569b5d6_pushErr(_self_, _47434_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_4797_param.alloc)._field_Ident=_238b531cd_Str(&_4917_ident);
	return _4797_param;;
}



inline void _1c56a0354_paramTypeBegin(_1c569ab02_parser* _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _51435_param, jule::I64* _51459_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _51468_tokens) {
	for (; ((*(_51459_i)) < (*(_51468_tokens)).len()); ((*(_51459_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _5164_token = (*(_51468_tokens))[(*(_51459_i))];;
			if (((*(_5164_token))._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*((*(_51435_param))))._field_Variadic) {
				_1c569b5d6_pushErr(_self_, _5164_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1ac28bb90;
			};
			(*((*(_51435_param))))._field_Variadic=true;
		}
	_iter_next_1ac28bb90:;
	}
	_iter_end_1ac28bb90:;;
}



inline void _1c56a06b7_buildParamType(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _52936_param, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _52960_tokens) {
	jule::I64 _5307_i = 0LL;;
	_1c56a0354_paramTypeBegin(_self_.ptr(), _52936_param, &(_5307_i), _52960_tokens);
	if ((_5307_i >= (*(_52960_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _52960_tokens, (&(_5307_i)), true);
		(*((*(_52936_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_5307_i < (*(_52960_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_52960_tokens))[_5307_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1c56a0a2a_buildParamBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4892ed7_ParamDecl>* _54236_param, jule::Slice<jule::Ptr<_1c486c19d_Token>> _54259_tokens) {
	jule::Ptr<_1c486c19d_Token> _5437_tok = _54259_tokens[0LL];;
	if ((_54259_tokens.len() == 1LL)) {
		(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
		return;;
	} else if ((_54259_tokens.len() < 3LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), _5437_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54259_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU))) {
		(*((*(_54236_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c56a06b7_buildParamType(_self_, _54236_param, &(_54259_tokens));
		return;;
	};
	(*((*(_54236_param))))._field_Ident=(*(_5437_tok))._field_Kind;
	(_54259_tokens).mut_slice(2LL);;
	_1c56a06b7_buildParamType(_self_, _54236_param, &(_54259_tokens));
}



inline jule::Ptr<_1c4892ed7_ParamDecl> _1c56a0d6b_buildParam(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _56231_tokens) {
	jule::Ptr<_1c4892ed7_ParamDecl> _5637_param = jule::new_ptr<_1c4892ed7_ParamDecl>(_1c4892ed7_ParamDecl{._field_Token=_56231_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5637_param))._field_Token))._field_Id == static_cast<jule::U64>(32LLU))) {
		(*_5637_param.alloc)._field_Mutable=true;
		if ((_56231_tokens.len() == 1LL)) {
			_1c569b5d6_pushErr(_self_.ptr(), _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56231_tokens).mut_slice(1LL);;
		(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
	};
	if ((_56231_tokens.len() >= 3LL)) {
		if (((*(*(_5637_param))._field_Token.alloc)._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_56231_tokens.len() == 1LL)) {
				_1c569b5d6_pushErr(_self_, _56231_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56231_tokens[1LL]))._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_56231_tokens[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
				(*_5637_param.alloc)._field_Reference=true;
				(_56231_tokens).mut_slice(1LL);;
				(*_5637_param.alloc)._field_Token=_56231_tokens[0LL];
			};
		};
	};
	if (((*(*(_5637_param))._field_Token.alloc)._field_Id != static_cast<jule::U64>(1LLU))) {
		(*_5637_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1c56a06b7_buildParamType(_self_, &(_5637_param), &(_56231_tokens));
	} else {
		_1c56a0a2a_buildParamBody(_self_, &(_5637_param), _56231_tokens);
	};
	return _5637_param;;
}



inline void _1c56a1124_checkParams(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>>* _60532_params) {
	{
		auto expr = _60532_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac006a4d:;
		if (it != expr_end) {
			jule::Ptr<_1c4892ed7_ParamDecl> _60615_param = *it;
			{
				if ((_1c489338e_IsSelf(_60615_param.ptr()) || ((*_60615_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1ac006a4d;
				};
				if (((*_60615_param.alloc)._field_Token == nullptr)) {
					_1c569b5d6_pushErr(_self_, (*_60615_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60615_param.alloc)._field_Kind=jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*_60615_param.alloc)._field_Token, ._field_Ident=(*((*_60615_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)}), &__jule_any_type75)});
					(*_60615_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1ac006a4d:;
			++it;
			goto _iter_begin_1ac006a4d;
		}
		_iter_end_1ac006a4d:;
	};
}



inline jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> _1c56a1520_buildParams(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _62533_tokens, jule::Bool _62551_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _6267_parts;
	jule::Slice<_205a977d7_Log> _62614_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(_62533_tokens, static_cast<jule::U64>(5LLU), true);
		_6267_parts = __jule_assign_result.__jule_result_arg0;
		_62614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62614_errs);
	if ((_6267_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> _63211_params = nullptr;;
	if ((_62551_method && (_6267_parts.len() > 0LL))) {
		jule::Ptr<_1c4892ed7_ParamDecl> _6348_param = _1c569ee36_buildSelfParam(_self_, _6267_parts[0LL]);;
		if (((_6348_param != nullptr) && _1c489338e_IsSelf(_6348_param))) {
			{ jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6348_param); };
			(_6267_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_6267_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad3b7a7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _64115_part = *it;
			{
				if ((_64115_part.len() == 0LL)) {
					goto _iter_next_1aad3b7a7;
				};
				jule::Ptr<_1c4892ed7_ParamDecl> _6458_param = _1c56a0d6b_buildParam(_self_, _64115_part);;
				if ((_6458_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>> &__jule_push_dest = _63211_params; __jule_push_dest.push(_6458_param); };
				};
			}
			_iter_next_1aad3b7a7:;
			++it;
			goto _iter_begin_1aad3b7a7;
		}
		_iter_end_1aad3b7a7:;
	};
	_1c56a1124_checkParams(_self_, &(_63211_params));
	return _63211_params;;
}



inline __jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool _1c56a191b_buildMultiRetType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _65539_tokens, jule::I64* _65562_i) {
	__jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c488566c_RetTypeDecl>(_1c488566c_RetTypeDecl{._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr)});
	((*(_65562_i)))++;
	if (((*(_65562_i)) >= (*(_65539_tokens)).len())) {
		((*(_65562_i)))--;
		({
			__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _65539_tokens, (&((*(_65562_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65562_i)))--;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _6657_rangeTokens = _1c56992a4_range(_65562_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _65539_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _6677_parts;
	jule::Slice<_205a977d7_Log> _66714_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&(_6657_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_6677_parts = __jule_assign_result.__jule_result_arg0;
		_66714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66714_errs);
	if ((_6677_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _6737_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(0LL, _6677_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c486c19d_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6677_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad432c5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _67515_part = *it;
			{
				if ((_67515_part.len() == 0LL)) {
					goto _iter_next_1aad432c5;
				};
				jule::Ptr<_1c486c19d_Token> _6798_token = _67515_part[0LL];;
				jule::I64 _6808_offset = 0LL;;
				if ((_67515_part.len() > 1LL)) {
					_6798_token=_67515_part[1LL];
					if (((*(_6798_token))._field_Id == static_cast<jule::U64>(8LLU))) {
						_6808_offset=2LL;
						if ((_67515_part.len() < 3LL)) {
							_1c569b5d6_pushErr(_self_, _6798_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1aad432c5;
						};
					};
				};
				_6798_token=_67515_part[0LL];
				if ((_6808_offset != 2LL)) {
					jule::Ptr<_1c486c19d_Token> _6969_newToken = jule::new_ptr<_1c486c19d_Token>((*_6798_token.alloc));;
					(*_6969_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6969_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6798_token; __jule_collection; }));
				};
				jule::Ptr<_1c4882779_TypeDecl> _7038_tk;
				({
					__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_67515_part), (&(_6808_offset)), true);
					_7038_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6808_offset < _67515_part.len())) {
					_1c569b5d6_pushErr(_self_, _67515_part[_6808_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = _6737_types; __jule_push_dest.push(_7038_tk); };
			}
			_iter_next_1aad432c5:;
			++it;
			goto _iter_begin_1aad432c5;
		}
		_iter_end_1aad432c5:;
	};
	if ((_6737_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*(_65539_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1c4883ea6_TupleTypeDecl>(_1c4883ea6_TupleTypeDecl{._field_Types=_6737_types}), &__jule_any_type74)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6737_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool _1c56a1d17_buildRetType(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _72634_tokens, jule::I64* _72657_i) {
	__jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1c488566c_RetTypeDecl>(_1c488566c_RetTypeDecl{._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr)});
	if (((*(_72657_i)) >= (*(_72634_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c486c19d_Token> _7327_token = (*(_72634_tokens))[(*(_72657_i))];;
	{
		auto &_match_expr{ (*(_7327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1aad4be7c:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1aad4c004:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1aad4c06a:;
			{
				if ((((*(_72657_i)) + 1LL) >= (*(_72634_tokens)).len())) {
					_1c569b5d6_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72657_i)))++;
				_7327_token=(*(_72634_tokens))[(*(_72657_i))];
				{
					auto &_match_expr{ (*(_7327_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aad4d90c:;
						{
							({
								__jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c56a191b_buildMultiRetType(_self_, _72634_tokens, _72657_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1aad4de6d:;
						{
							_1c569b5d6_pushErr(_self_, _7327_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1aad4ddd5:;
				};
				({
					__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _72634_tokens, (&((*(_72657_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1aad4be27:;
	};
	((*(_72657_i)))++;
	_1c569b5d6_pushErr(_self_.ptr(), _7327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1c4894439_FnDecl> _1c56a22bd_buildFnPrototype(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _76538_tokens, jule::I64* _76561_i, jule::Bool _76569_method) {
	jule::Ptr<_1c4894439_FnDecl> _7667_f = jule::new_ptr<_1c4894439_FnDecl>(_1c4894439_FnDecl{._field_Token=(*(_76538_tokens))[(*(_76561_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1c488566c_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>>(nullptr)});;
	if (((*((*(_7667_f))._field_Token))._field_Id == static_cast<jule::U64>(34LLU))) {
		(*_7667_f.alloc)._field_Statically=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c569b5d6_pushErr(_self_.ptr(), (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	if (((*(*(_7667_f))._field_Token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		(*_7667_f.alloc)._field_Unsafety=true;
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Token=(*(_76538_tokens))[(*(_76561_i))];
	};
	((*(_76561_i)))++;
	if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c486c19d_Token> _7993_tok = (*(_76538_tokens))[(*(_76561_i))];;
	if (((*(_7993_tok))._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_76561_i)))++;
		if (((*(_76561_i)) >= (*(_76538_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, (*_7667_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7667_f.alloc)._field_Ident=(*_7993_tok.alloc)._field_Kind;
	} else {
		(*_7667_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1c486c19d_Token> _8113_errorToken = (*(_76538_tokens))[(*(_76561_i))];;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8127_genericsTokens = _1c56992a4_range(_76561_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _76538_tokens);;
	if ((_8127_genericsTokens != nullptr)) {
		(*_7667_f.alloc)._field_Generics=_1c569eae5_buildGenerics(_self_, &(_8127_genericsTokens), &(_8113_errorToken));
	};
	if (((*((*(_76538_tokens))[(*(_76561_i))]))._field_Id != static_cast<jule::U64>(74LLU))) {
		_1c569b5d6_pushErr(_self_, (*(_76538_tokens))[(*(_76561_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8227_paramsToks = _1c56992a4_range(_76561_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _76538_tokens);;
	if ((_8227_paramsToks.len() > 0LL)) {
		(*_7667_f.alloc)._field_Params=_1c56a1520_buildParams(_self_, &(_8227_paramsToks), _76569_method);
	};
	if (((*(_76561_i)) < (*(_76538_tokens)).len())) {
		jule::Ptr<_1c486c19d_Token> _8284_token = (*(_76538_tokens))[(*(_76561_i))];;
		if (((*(_8284_token))._field_Id == static_cast<jule::U64>(68LLU))) {
			(*_7667_f.alloc)._field_Exceptional=true;
			((*(_76561_i)))++;
		};
	};
	(*_7667_f.alloc)._field_Public=_1c494a27b_IsPub((*_7667_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1c488566c_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1c56a1d17_buildRetType(_self_, _76538_tokens, _76561_i);
		(*_7667_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7667_f;;
}



inline jule::Ptr<_1c4894439_FnDecl> _1c56a2774_buildFn(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _84229_tokens, jule::Bool _84247_method, jule::Bool _84261_prototype) {
	jule::I64 _8437_i = 0LL;;
	jule::Ptr<_1c4894439_FnDecl> _8447_f = _1c56a22bd_buildFnPrototype(_self_, _84229_tokens, &(_8437_i), _84247_method);;
	if (_84261_prototype) {
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, (*(_84229_tokens))[(_8437_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _8447_f;;
	} else if ((_8447_f == nullptr)) {
		return _8447_f;;
	};
	if ((_8437_i >= (*(_84229_tokens)).len())) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*(_8447_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8607_blockTokens = _1c56992a4_range(&(_8437_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _84229_tokens);;
	if ((_8607_blockTokens != nullptr)) {
		(*_8447_f.alloc)._field_Scope=_1c569c780_buildScope(_self_, &(_8607_blockTokens), (*(_84229_tokens))[(_8437_i - 1LL)]);
		(*((*_8447_f.alloc)._field_Scope))._field_Unsafety=(*_8447_f.alloc)._field_Unsafety;
		if ((_8437_i < (*(_84229_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, (*(_84229_tokens))[_8437_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*_8447_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8447_f;;
}



inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c56a2ab5_getUseDeclSelectors(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _87639_tokens) {
	jule::I64 _8777_i = 0LL;;
	_87639_tokens=_1c56992a4_range(&(_8777_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_87639_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _8797_parts;
	jule::Slice<_205a977d7_Log> _87914_errs;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&(_87639_tokens), static_cast<jule::U64>(5LLU), true);
		_8797_parts = __jule_assign_result.__jule_result_arg0;
		_87914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87914_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87914_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _8857_selectors = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(0LL, _8797_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c486c19d_Token>(nullptr); __jule_collection; });;
	{
		auto expr = &(_8797_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2d36cb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _88615_part = *it;
			{
				if ((_88615_part.len() > 1LL)) {
					_1c569b5d6_pushErr(_self_, _88615_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c486c19d_Token> _8908_tok = _88615_part[0LL];;
				if ((((*(_8908_tok))._field_Id != static_cast<jule::U64>(1LLU)) && ((*_8908_tok.alloc)._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1c569b5d6_pushErr(_self_, _8908_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1ac2d36cb;
				};
				{ jule::Slice<jule::Ptr<_1c486c19d_Token>> &__jule_push_dest = _8857_selectors; __jule_push_dest.push(_8908_tok); };
			}
			_iter_next_1ac2d36cb:;
			++it;
			goto _iter_begin_1ac2d36cb;
		}
		_iter_end_1ac2d36cb:;
	};
	return _8857_selectors;;
}



inline void _1c56a2e28_buildBindUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _90137_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _90154_tokens) {
	if (((*(_90154_tokens)).len() > 1LL)) {
		_1c569b5d6_pushErr(_self_, (*(_90154_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c486c19d_Token> _9053_token = (*(_90154_tokens))[0LL];;
	if ((((*(_9053_token))._field_Id != static_cast<jule::U64>(4LLU)) || (((*_9053_token.alloc)._field_Kind[0LL] != '`') && ((*_9053_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1c569b5d6_pushErr(_self_, _9053_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90137_decl))))._field_Binded=true;
	(*((*(_90137_decl))))._field_LinkPath=(*_9053_token.alloc)._field_Kind.slice(1LL, ((*_9053_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1c56a3269_useDeclTokstoa(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _91431_tokens) {
	jule::I64 _9157_n = 0LL;;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2dac77:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_91610_token = it;
			{
				if ((((*((*(_91610_token))))._field_Id != static_cast<jule::U64>(1LLU)) && ((*(*(_91610_token)).alloc)._field_Id != static_cast<jule::U64>(19LLU)))) {
					_1c569b5d6_pushErr(_self_, (*(_91610_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_9157_n+=(*(*(_91610_token)).alloc)._field_Kind.len();
			}
			_iter_next_1ac2dac77:;
			++it;
			goto _iter_begin_1ac2dac77;
		}
		_iter_end_1ac2dac77:;
	};
	_238b51e24_StrBuilder _9227_s = static__238b52375_New(_9157_n);;
	{
		auto expr = _91431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2dab23:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_92310_token = it;
			{
				_238b528d6_WriteStr(&_9227_s, (*((*(_92310_token))))._field_Kind);
			}
			_iter_next_1ac2dab23:;
			++it;
			goto _iter_begin_1ac2dab23;
		}
		_iter_end_1ac2dab23:;
	};
	return _238b531cd_Str(&_9227_s);;
}



inline void _1c56a35cc_buildStdUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _92936_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _92956_tokens) {
	(*((*(_92936_decl))))._field_Std=true;
	jule::Ptr<_1c486c19d_Token> _9327_token = _92956_tokens[0LL];;
	if ((_92956_tokens.len() < 3LL)) {
		_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92956_tokens).mut_slice(2LL);;
	_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_9327_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac2e072c:;
			{
				_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac2e07a4:;
			{
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _94512_selectors = nullptr;;
				({
					__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_assign_result = _1c569956d_rangeLast(&(_92956_tokens));
					_92956_tokens = __jule_assign_result.__jule_result_arg0;
					_94512_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92936_decl))))._field_Selected=_1c56a2ab5_getUseDeclSelectors(_self_, _94512_selectors);
				if ((_92956_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac2e081a:;
			{
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9327_token=_92956_tokens[(_92956_tokens.len() - 1LL)];
				if (((*(_9327_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92956_tokens).mut_slice(0LL, (_92956_tokens.len() - 1LL));;
				if ((_92956_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9327_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92936_decl))))._field_Full=true;
			}
		}
		_match_end_1ac2e06c7:;
	};
	if (((_92956_tokens.len() == 1LL) && ((*(_92956_tokens[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		(*((*(_92936_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92936_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1c56a3269_useDeclTokstoa(_self_, &(_92956_tokens)));
	};
}



inline void _1c56a3940_buildIdentUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _98738_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _98758_tokens) {
	(*((*(_98738_decl))))._field_Std=false;
	jule::Ptr<_1c486c19d_Token> _9907_token = _98758_tokens[(_98758_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_9907_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ac2e92e6:;
			{
				_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1ac2ea24d:;
			{
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _99612_selectors = nullptr;;
				({
					__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_assign_result = _1c569956d_rangeLast(&(_98758_tokens));
					_98758_tokens = __jule_assign_result.__jule_result_arg0;
					_99612_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98738_decl))))._field_Selected=_1c56a2ab5_getUseDeclSelectors(_self_, _99612_selectors);
				if ((_98758_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac2ea2b4:;
			{
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_9907_token=_98758_tokens[(_98758_tokens.len() - 1LL)];
				if (((*(_9907_token))._field_Id != static_cast<jule::U64>(19LLU))) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98758_tokens).mut_slice(0LL, (_98758_tokens.len() - 1LL));;
				if ((_98758_tokens.len() == 0LL)) {
					_1c569b5d6_pushErr(_self_, _9907_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98738_decl))))._field_Full=true;
			}
		}
		_match_end_1ac2ea12c:;
	};
	(*((*(_98738_decl))))._field_LinkPath=_1c56a3269_useDeclTokstoa(_self_, &(_98758_tokens));
}



inline void _1c56a3ca3_parseUseDecl(_1c569ab02_parser* _self_, jule::Ptr<_1c489a880_UseDecl>* _103533_decl, jule::Slice<jule::Ptr<_1c486c19d_Token>> _103553_tokens) {
	if ((*((*(_103533_decl))))._field_Binded) {
		_1c56a2e28_buildBindUseDecl(_self_, _103533_decl, &(_103553_tokens));
		return;;
	};
	jule::Ptr<_1c486c19d_Token> _10417_token = _103553_tokens[0LL];;
	if (((*(_10417_token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103553_tokens.len() > 2LL) && ((*(_103553_tokens[1LL]))._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*((*(_103533_decl))))._field_Alias=(*_10417_token.alloc)._field_Kind;
		if (((*(_103553_tokens[2LL]))._field_Id != static_cast<jule::U64>(1LLU))) {
			_1c569b5d6_pushErr(_self_, _10417_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103553_tokens).mut_slice(2LL);;
		_10417_token=_103553_tokens[0LL];
	};
	;
	{
		
		if ((*(_10417_token))._field_Kind.equal("std", 3)) {
			_case_begin_1ac307425:;
			{
				_1c56a35cc_buildStdUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		else {
			_case_begin_1ac30706d:;
			{
				_1c56a3940_buildIdentUseDecl(_self_, _103533_decl, _103553_tokens);
			}
		}
		_match_end_1ac307007:;
	};
}



inline jule::Ptr<_1c489a880_UseDecl> _1c56a419e_buildUseDecl(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _106932_tokens, jule::Bool _106950_binded) {
	jule::Ptr<_1c489a880_UseDecl> _10707_decl = jule::new_ptr<_1c489a880_UseDecl>(_1c489a880_UseDecl{._field_Token=_106932_tokens[0LL], ._field_LinkPath=jule::Str(), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Binded=_106950_binded, ._field_Std=false});;
	if ((_106932_tokens.len() < 2LL)) {
		_1c569b5d6_pushErr(_self_, (*(_10707_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106932_tokens).mut_slice(1LL);;
	_1c56a3ca3_parseUseDecl(_self_, &(_10707_decl), _106932_tokens);
	return _10707_decl;;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56a459a_buildTypeEnumItemKind(jule::Ptr<_1c569ab02_parser> _self_, jule::I64* _108343_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _108356_tokens) {
	jule::I64 _10847_braceN = 0LL;;
	jule::I64 _10853_exprStart = (*(_108343_i));;
	for (; ((*(_108343_i)) < (*(_108356_tokens)).len()); ((*(_108343_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _10874_t = (*(_108356_tokens))[(*(_108343_i))];;
			{
				auto &_match_expr{ (*(_10874_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac30b46d:;
					{
						(_10847_braceN)++;
						goto _iter_next_1ac30a901;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac30b77b:;
					{
						(_10847_braceN)--;
					}
				}
				_match_end_1ac30b726:;
			};
			if ((_10847_braceN > 0LL)) {
				goto _iter_next_1ac30a901;
			};
			if ((((*(_10874_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_108343_i)) + 1LL) >= (*(_108356_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _110313_kindTokens = nullptr;;
				if (((*_10874_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart, (*(_108343_i)));
				} else {
					_110313_kindTokens=(*(_108356_tokens)).slice(_10853_exprStart);
				};
				jule::I64 _11099_j = 0LL;;
				jule::Ptr<_1c4882779_TypeDecl> _11109_kind;
				({
					__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_110313_kindTokens), (&(_11099_j)), true);
					_11109_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_11099_j < _110313_kindTokens.len())) {
					_1c569b5d6_pushErr(_self_, _110313_kindTokens[_11099_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _11109_kind;;
			};
		}
	_iter_next_1ac30a901:;
	}
	_iter_end_1ac30a901:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>> _1c56a48db_buildTypeEnumItems(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _112040_tokens) {
	jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>> _11217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c489c222_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _11227_i = 0LL;;
	for (; (_11227_i < (*(_112040_tokens)).len()); (_11227_i)++) {
		{
			jule::Ptr<_1c486c19d_Token> _11248_t = (*(_112040_tokens))[_11227_i];;
			jule::Ptr<_1c489c222_TypeEnumItemDecl> _11258_item = jule::new_ptr<_1c489c222_TypeEnumItemDecl>(_1c489c222_TypeEnumItemDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
			(*_11258_item.alloc)._field_Token=_11248_t;
			if ((((*((*_11258_item.alloc)._field_Token))._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_112040_tokens)).len() - _11227_i) > 2LL))) {
				_11248_t=(*(_112040_tokens))[(_11227_i + 1LL)];
				if (((*(_11248_t))._field_Id == static_cast<jule::U64>(8LLU))) {
					(*_11258_item.alloc)._field_Ident=(*(*(_11258_item))._field_Token.alloc)._field_Kind;
					_11227_i+=2LL;
					if (((_11227_i >= (*(_112040_tokens)).len()) || ((*((*(_112040_tokens))[_11227_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1c569b5d6_pushErr(_self_.ptr(), _11248_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1ac3115e9;
					};
				};
			};
			(*_11258_item.alloc)._field_Kind=_1c56a459a_buildTypeEnumItemKind(_self_, &(_11227_i), _112040_tokens);
			{ jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>> &__jule_push_dest = _11217_items; __jule_push_dest.push(_11258_item); };
		}
	_iter_next_1ac3115e9:;
	}
	_iter_end_1ac3115e9:;;
	return _11217_items;;
}



inline jule::Ptr<_1c489c882_TypeEnumDecl> _1c56a4c2c_buildTypeEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _114439_tokens) {
	jule::I64 _11457_i = 1LL;;
	jule::Ptr<_1c489c882_TypeEnumDecl> _11467_e = jule::new_ptr<_1c489c882_TypeEnumDecl>(_1c489c882_TypeEnumDecl{._field_Token=(*(_114439_tokens))[_11457_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if (((*((*(_11467_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_.ptr(), (*_11467_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Ident=(*(*(_11467_e))._field_Token.alloc)._field_Kind;
	_11457_i+=3LL;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _11567_itemTokens = _1c56992a4_range(&(_11457_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _114439_tokens);;
	if ((_11567_itemTokens == nullptr)) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*_11467_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _11467_e;;
	} else if ((_11457_i < (*(_114439_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_114439_tokens))[_11457_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_11467_e.alloc)._field_Public=_1c494a27b_IsPub((*_11467_e.alloc)._field_Ident);
	(*_11467_e.alloc)._field_End=(*(_114439_tokens))[(_11457_i - 1LL)];
	(*_11467_e.alloc)._field_Items=_1c56a48db_buildTypeEnumItems(_self_, &(_11567_itemTokens));
	return _11467_e;;
}



inline jule::Ptr<_1c4886aad_Expr> _1c56a5128_buildEnumItemExpr(jule::Ptr<_1c569ab02_parser> _self_, jule::I64* _117139_i, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _117152_tokens) {
	jule::I64 _11727_braceN = 0LL;;
	jule::I64 _11733_exprStart = (*(_117139_i));;
	for (; ((*(_117139_i)) < (*(_117152_tokens)).len()); ((*(_117139_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _11754_t = (*(_117152_tokens))[(*(_117139_i))];;
			{
				auto &_match_expr{ (*(_11754_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac31e31b:;
					{
						(_11727_braceN)++;
						goto _iter_next_1ac31d79e;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac31e629:;
					{
						(_11727_braceN)--;
					}
				}
				_match_end_1ac31e5c4:;
			};
			if ((_11727_braceN > 0LL)) {
				goto _iter_next_1ac31d79e;
			};
			if ((((*(_11754_t))._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_117139_i)) + 1LL) >= (*(_117152_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _119113_exprTokens = nullptr;;
				if (((*_11754_t.alloc)._field_Id == static_cast<jule::U64>(5LLU))) {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart, (*(_117139_i)));
				} else {
					_119113_exprTokens=(*(_117152_tokens)).slice(_11733_exprStart);
				};
				return _1c569bc8a_buildExpr(_self_, &(_119113_exprTokens));;
			};
		}
	_iter_next_1ac31d79e:;
	}
	_iter_end_1ac31d79e:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> _1c56a5469_buildEnumItems(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _120336_tokens) {
	jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> _12047_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c489ad36_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I64 _12057_i = 0LL;;
	for (; (_12057_i < (*(_120336_tokens)).len()); (_12057_i)++) {
		{
			jule::Ptr<_1c486c19d_Token> _12078_t = (*(_120336_tokens))[_12057_i];;
			jule::Ptr<_1c489ad36_EnumItemDecl> _12088_item = jule::new_ptr<_1c489ad36_EnumItemDecl>(_1c489ad36_EnumItemDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
			(*_12088_item.alloc)._field_Token=_12078_t;
			if (((*((*_12088_item.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
				_1c569b5d6_pushErr(_self_.ptr(), (*_12088_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_12088_item.alloc)._field_Ident=(*(*(_12088_item))._field_Token.alloc)._field_Kind;
			if ((((_12057_i + 1LL) >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[(_12057_i + 1LL)]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_12057_i + 1LL) < (*(_120336_tokens)).len())) {
					(_12057_i)++;
				};
				{ jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
				goto _iter_next_1ac3231bb;
			};
			(_12057_i)++;
			_12078_t=(*(_120336_tokens))[_12057_i];
			(_12057_i)++;
			if (((*(_12078_t))._field_Id != static_cast<jule::U64>(8LLU))) {
				_1c569b5d6_pushErr(_self_, _12078_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1ac3231bb;
			};
			if (((_12057_i >= (*(_120336_tokens)).len()) || ((*((*(_120336_tokens))[_12057_i]))._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1c569b5d6_pushErr(_self_, _12078_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1ac3231bb;
			};
			(*_12088_item.alloc)._field_Expr=_1c56a5128_buildEnumItemExpr(_self_, &(_12057_i), _120336_tokens);
			{ jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>> &__jule_push_dest = _12047_items; __jule_push_dest.push(_12088_item); };
		}
	_iter_next_1ac3231bb:;
	}
	_iter_end_1ac3231bb:;;
	return _12047_items;;
}



inline jule::Ptr<_1c489b8e7_EnumDecl> _1c56a57aa_buildEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _124035_tokens) {
	if (((*(_124035_tokens)).len() < 3LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), (*(_124035_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c489b8e7_EnumDecl> _12457_e = jule::new_ptr<_1c489b8e7_EnumDecl>(_1c489b8e7_EnumDecl{._field_Token=(*(_124035_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr)});;
	if (((*((*(_12457_e))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Ident=(*(*(_12457_e))._field_Token.alloc)._field_Kind;
	jule::I64 _12537_i = 2LL;;
	if (((*((*(_124035_tokens))[_12537_i]))._field_Id == static_cast<jule::U64>(8LLU))) {
		(_12537_i)++;
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, (*(_124035_tokens))[(_12537_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _12457_e;;
		};
		({
			__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, _124035_tokens, (&(_12537_i)), true);
			(*_12457_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_12537_i >= (*(_124035_tokens)).len())) {
			_1c569ae32_stop(_self_);
			_1c569b5d6_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _12457_e;;
		};
	} else {
		(*_12457_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _12707_itemTokens = _1c56992a4_range(&(_12537_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _124035_tokens);;
	if ((_12707_itemTokens == nullptr)) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*_12457_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _12457_e;;
	} else if ((_12537_i < (*(_124035_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_124035_tokens))[_12537_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_12457_e.alloc)._field_Public=_1c494a27b_IsPub((*_12457_e.alloc)._field_Ident);
	(*_12457_e.alloc)._field_End=(*(_124035_tokens))[(_12537_i - 1LL)];
	(*_12457_e.alloc)._field_Items=_1c56a5469_buildEnumItems(_self_, &(_12707_itemTokens));
	return _12457_e;;
}



inline jule::Any _1c56a5aeb_buildNodeEnumDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _128539_tokens) {
	if ((((*(_128539_tokens)).len() > 3LL) && ((*((*(_128539_tokens))[2LL]))._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*((*(_128539_tokens))[3LL]))._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1c56a4c2c_buildTypeEnumDecl(_self_, _128539_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1c56a57aa_buildEnumDecl(_self_, _128539_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1c489cb4b_FieldDecl> _1c56a5e3c_buildField(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _129431_tokens) {
	jule::Ptr<_1c489cb4b_FieldDecl> _12957_f = jule::new_ptr<_1c489cb4b_FieldDecl>(_1c489cb4b_FieldDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	(*_12957_f.alloc)._field_Mutable=((*(_129431_tokens[0LL]))._field_Id == static_cast<jule::U64>(32LLU));
	if ((*_12957_f.alloc)._field_Mutable) {
		if ((_129431_tokens.len() == 1LL)) {
			_1c569b5d6_pushErr(_self_.ptr(), _129431_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(1LL);;
	};
	(*_12957_f.alloc)._field_Token=_129431_tokens[0LL];
	if (((*((*_12957_f.alloc)._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, (*_12957_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_12957_f.alloc)._field_Ident=(*(*(_12957_f))._field_Token.alloc)._field_Kind;
	if ((_129431_tokens.len() == 1LL)) {
		_1c569b5d6_pushErr(_self_, _129431_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129431_tokens.len() < 3LL) || ((*(_129431_tokens[1LL]))._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1c569b5d6_pushErr(_self_, _129431_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129431_tokens).mut_slice(2LL);;
	jule::I64 _13237_i = 0LL;;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_129431_tokens), (&(_13237_i)), true);
		(*_12957_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_13237_i < _129431_tokens.len())) {
		jule::Ptr<_1c486c19d_Token> _13264_token = _129431_tokens[_13237_i];;
		if (((*(_13264_token))._field_Id != static_cast<jule::U64>(71LLU))) {
			_1c569b5d6_pushErr(_self_, _129431_tokens[_13237_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13237_i)++;
		if ((_13237_i >= _129431_tokens.len())) {
			_1c569b5d6_pushErr(_self_, _13264_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129431_tokens).mut_slice(_13237_i);;
		(*_12957_f.alloc)._field_Default=_1c569bc8a_buildExpr(_self_, &(_129431_tokens));
	};
	(*_12957_f.alloc)._field_Public=_1c494a27b_IsPub((*_12957_f.alloc)._field_Ident);
	return _12957_f;;
}



inline jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>> _1c56a627d_buildStructDeclFields(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _134342_tokens) {
	jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>> _134411_fields = nullptr;;
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _13457_stmts = _1c567c089_splitStmts(&(_134342_tokens));;
	{
		auto expr = &(_13457_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac343054:;
		if (it != expr_end) {
			jule::Ptr<_1c567bbd2_stmt> _134615_stmt = *it;
			{
				_134342_tokens=(*(_134615_stmt))._field_tokens;
				jule::Ptr<_1c489cb4b_FieldDecl> _13488_f = _1c56a5e3c_buildField(_self_, _134342_tokens);;
				{ jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>> &__jule_push_dest = _134411_fields; __jule_push_dest.push(_13488_f); };
			}
			_iter_next_1ac343054:;
			++it;
			goto _iter_begin_1ac343054;
		}
		_iter_end_1ac343054:;
	};
	return _134411_fields;;
}



inline jule::Ptr<_1c489d542_StructDecl> _1c56a65be_buildStructDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _135437_tokens) {
	if (((*(_135437_tokens)).len() < 3LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), (*(_135437_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _13607_i = 1LL;;
	jule::Ptr<_1c489d542_StructDecl> _13617_s = jule::new_ptr<_1c489d542_StructDecl>(_1c489d542_StructDecl{._field_Token=(*(_135437_tokens))[_13607_i], ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>(nullptr)});;
	if (((*((*(_13617_s))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_13607_i)++;
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	(*_13617_s.alloc)._field_Ident=(*(*(_13617_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1c486c19d_Token> _13753_errorToken = (*(_135437_tokens))[_13607_i];;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _13767_genericsTokens = _1c56992a4_range(&(_13607_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _135437_tokens);;
	if ((_13767_genericsTokens != nullptr)) {
		(*_13617_s.alloc)._field_Generics=_1c569eae5_buildGenerics(_self_, &(_13767_genericsTokens), &(_13753_errorToken));
	};
	if ((_13607_i >= (*(_135437_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_135437_tokens))[(_13607_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _13867_bodyTokens = _1c56992a4_range(&(_13607_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _135437_tokens);;
	if ((_13867_bodyTokens == nullptr)) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*_13617_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _13617_s;;
	};
	if ((_13607_i < (*(_135437_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_135437_tokens))[_13607_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_13617_s.alloc)._field_Public=_1c494a27b_IsPub((*_13617_s.alloc)._field_Ident);
	(*_13617_s.alloc)._field_Fields=_1c56a627d_buildStructDeclFields(_self_, _13867_bodyTokens);
	(*_13617_s.alloc)._field_End=(*(_135437_tokens))[(_13607_i - 1LL)];
	return _13617_s;;
}



inline void _1c56a6877_checkMethodReceiver(_1c569ab02_parser* _self_, jule::Ptr<_1c4894439_FnDecl>* _140236_f) {
	if ((*((*(_140236_f))))._field_Statically) {
		if ((((*((*(_140236_f))))._field_Params.len() > 0LL) && _1c489338e_IsSelf((*((*(_140236_f))))._field_Params[0LL].ptr()))) {
			_1c569b5d6_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140236_f))))._field_Params.len() == 0LL)) {
		_1c569b5d6_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1c4892ed7_ParamDecl> _14143_param = (*((*(_140236_f))))._field_Params[0LL];;
	if ((!(_1c489338e_IsSelf(_14143_param.ptr())))) {
		_1c569b5d6_pushErr(_self_, (*((*(_140236_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1c56a6bda_buildTraitBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489dc7e_TraitDecl>* _142136_t, jule::Slice<jule::Ptr<_1c486c19d_Token>> _142155_tokens) {
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _14227_stmts = _1c567c089_splitStmts(&(_142155_tokens));;
	{
		auto expr = &(_14227_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae5a3ed:;
		if (it != expr_end) {
			jule::Ptr<_1c567bbd2_stmt> _142315_stmt = *it;
			{
				_142155_tokens=(*(_142315_stmt))._field_tokens;
				if ((_142155_tokens.len() == 0LL)) {
					goto _iter_next_1aae5a3ed;
				};
				{
					auto &_match_expr{ (*(_142155_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1abacc1e5:;
						{
							jule::Ptr<_1c4894439_FnDecl> _14309_f = _1c56a2774_buildFn(_self_, &(_142155_tokens), true, true);;
							if ((_14309_f == nullptr)) {
								goto _match_end_1aaba7c0b;
							};
							_1c56a6877_checkMethodReceiver(_self_, &(_14309_f));
							if (((*(_14309_f))._field_Generics.len() > 0LL)) {
								_1c569b5d6_pushErr(_self_, (*(_14309_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c4894439_FnDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Methods; __jule_push_dest.push(_14309_f); };
						}
					}
					else {
						_case_begin_1aaba7d71:;
						{
							jule::I64 _14409_i = 0LL;;
							jule::Ptr<_1c4882779_TypeDecl> _14419_ti;
							jule::Bool _144113_ok;
							({
								__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_142155_tokens), (&(_14409_i)), true);
								_14419_ti = __jule_assign_result.__jule_result_arg0;
								_144113_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144113_ok))) {
								goto _match_end_1aaba7c0b;
							};
							if ((_14409_i < _142155_tokens.len())) {
								_1c569b5d6_pushErr(_self_, _142155_tokens[_14409_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = (*((*(_142136_t))))._field_Inherits; __jule_push_dest.push(_14419_ti); };
						}
					}
					_match_end_1aaba7c0b:;
				};
			}
			_iter_next_1aae5a3ed:;
			++it;
			goto _iter_begin_1aae5a3ed;
		}
		_iter_end_1aae5a3ed:;
	};
}



inline jule::Ptr<_1c489dc7e_TraitDecl> _1c56a702b_buildTraitDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _145336_tokens) {
	if (((*(_145336_tokens)).len() < 3LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), (*(_145336_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c489dc7e_TraitDecl> _14587_t = jule::new_ptr<_1c489dc7e_TraitDecl>(_1c489dc7e_TraitDecl{._field_Token=(*(_145336_tokens))[1LL], ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c4894439_FnDecl>>(nullptr)});;
	if (((*((*(_14587_t))._field_Token))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c569b5d6_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Ident=(*(*(_14587_t))._field_Token.alloc)._field_Kind;
	jule::I64 _14667_i = 2LL;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _14677_bodyTokens = _1c56992a4_range(&(_14667_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _145336_tokens);;
	if ((_14677_bodyTokens == nullptr)) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, (*_14587_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14667_i < (*(_145336_tokens)).len())) {
		_1c569b5d6_pushErr(_self_, (*(_145336_tokens))[_14667_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_14587_t.alloc)._field_Public=_1c494a27b_IsPub((*_14587_t.alloc)._field_Ident);
	_1c56a6bda_buildTraitBody(_self_, &(_14587_t), _14677_bodyTokens);
	(*_14587_t.alloc)._field_End=(*(_145336_tokens))[(_14667_i - 1LL)];
	return _14587_t;;
}



inline jule::Ptr<_1c4894439_FnDecl> _1c56a736c_buildBindFn(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _148332_tokens) {
	(_148332_tokens).mut_slice(1LL);;
	jule::Ptr<_1c4894439_FnDecl> _14857_f = _1c56a2774_buildFn(_self_, &(_148332_tokens), false, true);;
	if ((_14857_f != nullptr)) {
		(*_14857_f.alloc)._field_Public=false;
		(*_14857_f.alloc)._field_Binded=true;
	};
	return _14857_f;;
}



inline jule::Ptr<_1c48955e4_VarDecl> _1c56a76ad_buildBindVar(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _149333_tokens) {
	(_149333_tokens).mut_slice(1LL);;
	jule::Ptr<_1c48955e4_VarDecl> _14957_v = _1c569e3a8_buildVar(_self_, _149333_tokens);;
	if ((_14957_v != nullptr)) {
		(*_14957_v.alloc)._field_Public=false;
		(*_14957_v.alloc)._field_Binded=true;
		if (((*_14957_v.alloc)._field_Expr != nullptr)) {
			_1c569b5d6_pushErr(_self_, (*_14957_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _14957_v;;
}



inline jule::Ptr<_1c489d542_StructDecl> _1c56a79ee_buildBindStruct(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _150636_tokens) {
	(_150636_tokens).mut_slice(1LL);;
	jule::Ptr<_1c489d542_StructDecl> _15087_s = _1c56a65be_buildStructDecl(_self_, &(_150636_tokens));;
	if ((_15087_s != nullptr)) {
		(*_15087_s.alloc)._field_Public=false;
		{
			auto expr = &((*_15087_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aabaa0c6:;
			if (it != expr_end) {
				jule::Ptr<_1c489cb4b_FieldDecl> _151116_f = *it;
				{
					(*(_151116_f))._field_Public=true;
				}
				_iter_next_1aabaa0c6:;
				++it;
				goto _iter_begin_1aabaa0c6;
			}
			_iter_end_1aabaa0c6:;
		};
		(*_15087_s.alloc)._field_Binded=true;
	};
	return _15087_s;;
}



inline jule::Ptr<_1c4899296_TypeAliasDecl> _1c56a7d40_buildBindTypeAlias(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _152039_tokens) {
	(_152039_tokens).mut_slice(1LL);;
	jule::Ptr<_1c4899296_TypeAliasDecl> _15227_t = _1c569d52d_buildTypeAliasDecl(_self_, &(_152039_tokens));;
	if ((_15227_t != nullptr)) {
		(*_15227_t.alloc)._field_Public=false;
		(*_15227_t.alloc)._field_Binded=true;
	};
	return _15227_t;;
}



inline jule::Ptr<_1c489a880_UseDecl> _1c56a8181_buildBindUse(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _153033_tokens) {
	if ((_153033_tokens.len() == 1LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), _153033_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153033_tokens).mut_slice(1LL);;
	;
	return _1c56a419e_buildUseDecl(_self_, _153033_tokens, true);;
}



inline jule::Any _1c56a84c2_buildBind(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _154131_tokens) {
	jule::Ptr<_1c486c19d_Token> _15427_token = (*(_154131_tokens))[0LL];;
	if (((*(_154131_tokens)).len() == 1LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_15427_token=(*(_154131_tokens))[1LL];
	{
		auto &_match_expr{ (*(_15427_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1abad2ad0:;
			{
				return jule::Any(_1c56a736c_buildBindFn(_self_, (*(_154131_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1abad2b46:;
			{
				return jule::Any(_1c56a76ad_buildBindVar(_self_, (*(_154131_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1abad275b:;
			{
				return jule::Any(_1c56a79ee_buildBindStruct(_self_, (*(_154131_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1abad27d3:;
			{
				return jule::Any(_1c56a7d40_buildBindTypeAlias(_self_, (*(_154131_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1abad1a35:;
			{
				_1c569b5d6_pushErr(_self_, _15427_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1abad26e5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4894439_FnDecl> _1c56a8813_getMethod(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _156531_tokens) {
	jule::I64 _15667_i = 0LL;;
	jule::Ptr<_1c486c19d_Token> _15677_token = (*(_156531_tokens))[_15667_i];;
	if (((*(_15677_token))._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1c569b5d6_pushErr(_self_.ptr(), _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_15667_i + 1LL) >= (*(_156531_tokens)).len())) {
			_1c569b5d6_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_15667_i)++;
		_15677_token=(*(_156531_tokens))[_15667_i];
	};
	if (((*_15677_token.alloc)._field_Id != static_cast<jule::U64>(29LLU))) {
		_1c569b5d6_pushErr(_self_, _15677_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1c56a2774_buildFn(_self_, _156531_tokens, true, false);;
}



inline void _1c56a8b76_parseImplBody(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489e3de_Impl>* _159435_ipl, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _159452_tokens) {
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _15957_stmts = _1c567c089_splitStmts(_159452_tokens);;
	{
		auto expr = &(_15957_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabb39b4:;
		if (it != expr_end) {
			jule::Ptr<_1c567bbd2_stmt> _159615_stmt = *it;
			{
				(*(_159452_tokens))=(*(_159615_stmt))._field_tokens;
				jule::Ptr<_1c486c19d_Token> _15988_token = (*(_159452_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1aabb40ad:;
						{
							_1c569c384_pushDirective(_self_.ptr(), _1c569c0cb_buildDirective(_self_, (*(_159452_tokens))));
							goto _iter_next_1aabb39b4;
						}
					}
					_match_end_1aabb4be6:;
				};
				{
					auto &_match_expr{ (*(_15988_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1ac351ea8:;
						{
							jule::Ptr<_1c48955e4_VarDecl> _16079_v = _1c569e3a8_buildVar(_self_, (*(_159452_tokens)));;
							if ((_16079_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Statics; __jule_push_dest.push(_16079_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac35201e:;
						{
							jule::Ptr<_1c4894439_FnDecl> _16149_f = _1c56a8813_getMethod(_self_, _159452_tokens);;
							if ((_16149_f != nullptr)) {
								_1c56a6877_checkMethodReceiver(_self_, &(_16149_f));
								_1c56a95b1_applyFnMeta(_self_, &(_16149_f));
								{ jule::Slice<jule::Ptr<_1c4894439_FnDecl>> &__jule_push_dest = (*((*(_159435_ipl))))._field_Methods; __jule_push_dest.push(_16149_f); };
							};
						}
					}
					else {
						_case_begin_1ac34e8bd:;
						{
							_1c569b5d6_pushErr(_self_, _15988_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1aabb39b4;
						}
					}
					_match_end_1ac351b12:;
				};
			}
			_iter_next_1aabb39b4:;
			++it;
			goto _iter_begin_1aabb39b4;
		}
		_iter_end_1aabb39b4:;
	};
}



inline jule::Ptr<_1c489e3de_Impl> _1c56a8eb7_buildImpl(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _162730_tokens) {
	jule::Ptr<_1c486c19d_Token> _16287_token = _162730_tokens[0LL];;
	if ((_162730_tokens.len() < 2LL)) {
		_1c569b5d6_pushErr(_self_.ptr(), _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _16347_i = 1LL;;
	jule::Ptr<_1c4882779_TypeDecl> _16367_base;
	jule::Bool _163617_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		_16367_base = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1c569b5d6_pushErr(_self_, _16287_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c489e3de_Impl> _16457_ipl = jule::new_ptr<_1c489e3de_Impl>(_1c489e3de_Impl{._field_End=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Base=_16367_base, ._field_Dest=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1c4894439_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c48955e4_VarDecl>>(nullptr)});;
	_16287_token=_162730_tokens[_16347_i];
	if (((*(_16287_token))._field_Id != static_cast<jule::U64>(9LLU))) {
		if (((*_16287_token.alloc)._field_Id == static_cast<jule::U64>(72LLU))) {
			std::swap((*(_16457_ipl))._field_Base, (*_16457_ipl.alloc)._field_Dest);
			goto _julec_label_1ac35d646;
		};
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_16347_i)++;
	if ((_16347_i >= _162730_tokens.len())) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType(_self_, &(_162730_tokens), (&(_16347_i)), true);
		(*_16457_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163617_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163617_ok))) {
		return nullptr;;
	};
	if ((_16347_i >= _162730_tokens.len())) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ac35d646:;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _16837_bodyTokens = _1c56992a4_range(&(_16347_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_162730_tokens));;
	if ((_16837_bodyTokens == nullptr)) {
		_1c569ae32_stop(_self_);
		_1c569b5d6_pushErr(_self_, _16287_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16347_i < _162730_tokens.len())) {
		_1c569b5d6_pushErr(_self_, _162730_tokens[_16347_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_16457_ipl.alloc)._field_End=_162730_tokens[(_16347_i - 1LL)];
	_1c56a8b76_parseImplBody(_self_, &(_16457_ipl), &(_16837_bodyTokens));
	return _16457_ipl;;
}



inline jule::Any _1c56a9308_buildNodeData(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _169835_tokens) {
	jule::Ptr<_1c486c19d_Token> _16997_token = (*(_169835_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_16997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1aabb3431:;
			{
				jule::Ptr<_1c4894439_FnDecl> _17038_f = _1c56a2774_buildFn(_self_, _169835_tokens, false, false);;
				if ((_17038_f != nullptr)) {
					(*_17038_f.alloc)._field_Global=true;
				};
				return jule::Any(_17038_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1aabb25d9:;
			{
				return jule::Any(_1c569e3a8_buildVar(_self_, (*(_169835_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1aabb2650:;
			{
				return jule::Any(_1c569d52d_buildTypeAliasDecl(_self_, _169835_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1aabb2cc1:;
			{
				return _1c56a5aeb_buildNodeEnumDecl(_self_, _169835_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1aabb2d37:;
			{
				return jule::Any(_1c56a65be_buildStructDecl(_self_, _169835_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1aabb2d9d:;
			{
				return jule::Any(_1c56a702b_buildTraitDecl(_self_, _169835_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1aabb2e14:;
			{
				return jule::Any(_1c56a8eb7_buildImpl(_self_, (*(_169835_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1aabb3ce4:;
			{
				return _1c56a84c2_buildBind(_self_, _169835_tokens);;
			}
		}
		else {
			_case_begin_1ac363607:;
			{
				_1c569b5d6_pushErr(_self_.ptr(), _16997_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac36388d:;
	};
}



inline void _1c56a95b1_applyFnMeta(_1c569ab02_parser* _self_, jule::Ptr<_1c4894439_FnDecl>* _173132_f) {
	(*((*(_173132_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1c56a9869_applyMeta(_1c569ab02_parser* _self_, _1c4881778_Node* _173630_node) {
	{
		auto &_match_expr{ (*(_173630_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ac293b42:;
			{
				jule::Ptr<_1c48955e4_VarDecl> _17398_v = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c48955e4_VarDecl>();;
				if ((_17398_v == nullptr)) {
					return;;
				};
				(*(_17398_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ac2938ab:;
			{
				jule::Ptr<_1c4894439_FnDecl> _17468_f = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c4894439_FnDecl>();;
				if ((_17468_f == nullptr)) {
					return;;
				};
				_1c56a95b1_applyFnMeta(_self_, &(_17468_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ac293bdb:;
			{
				jule::Ptr<_1c489d542_StructDecl> _17528_sd = (*(_173630_node))._field_Data.unsafe_cast_ptr<_1c489d542_StructDecl>();;
				if ((_17528_sd == nullptr)) {
					return;;
				};
				(*(_17528_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1ac293aba:;
	};
}



inline void _1c56a9b22_pushUseDecl(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c489a880_UseDecl>* _176133_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c489a880_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_176133_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1c569b5d6_pushErr(_self_, (*((*(_176133_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1c569b949_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1c56a9e63_pushMetaNodes(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _176935_tokens) {
	{
		auto &_match_expr{ (*((*(_176935_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ac29a000:;
			{
				;
				jule::Ptr<_1c489a880_UseDecl> _17738_decl = _1c56a419e_buildUseDecl(_self_.ptr(), (*(_176935_tokens)), false);;
				_1c56a9b22_pushUseDecl(_self_, &(_17738_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac29a077:;
			{
				if ((((*(_176935_tokens)).len() > 1LL) && ((*((*(_176935_tokens))[1LL]))._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1c489a880_UseDecl> _17789_decl = _1c56a8181_buildBindUse(_self_, (*(_176935_tokens)));;
					_1c56a9b22_pushUseDecl(_self_, &(_17789_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ac29a0dd:;
			{
				_1c569c384_pushDirective(_self_.ptr(), _1c569c0cb_buildDirective(_self_, (*(_176935_tokens))));
				return true;;
			}
		}
		_match_end_1ac299e01:;
	};
	return false;;
}



inline _1c4881778_Node _1c56aa2a4_parseNode(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _178931_st) {
	_1c4881778_Node _17907_node = _1c4881778_Node{._field_Token=(*(_178931_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1c56a9e63_pushMetaNodes(_self_, _178931_st)) {
		return _17907_node;;
	};
	jule::Any _17987_data = _1c56a9308_buildNodeData(_self_, _178931_st);;
	if ((_17987_data == nullptr)) {
		return _17907_node;;
	};
	_17907_node._field_Data=_17987_data;
	_1c56a9869_applyMeta(_self_, &(_17907_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c569b5d6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _17907_node;;
}



inline void _1c56aa55c_appendNode(jule::Ptr<_1c569ab02_parser> _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _181332_st) {
	if (((*(_181332_st)).len() == 0LL)) {
		return;;
	};
	_1c4881778_Node _18177_node = _1c56aa2a4_parseNode(_self_, _181332_st);;
	if (((_18177_node._field_Data != nullptr) && (!(_1c569b1b8_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1c4881778_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18177_node; __jule_collection; }));
	};
}



inline void _1c56aaa35_removeRange(_1c569ab02_parser* _self_, jule::I64 _182327_i, jule::U64 _182335_id, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _182349_tokens, jule::Slice<jule::I64>* _182372_ranges) {
	jule::U64 _18243_close = _1c5699caa_getCloseOfBrace(_182335_id);;
	for (; (_182327_i >= 0LL); (_182327_i)--) {
		{
			jule::Ptr<_1c486c19d_Token> _18264_tok = (*(_182349_tokens))[(*(_182372_ranges))[_182327_i]];;
			if (((*(_18264_tok))._field_Id != _18243_close)) {
				goto _iter_next_1ac2a524c;
			};
			(*(_182372_ranges))=jule::append((*(_182372_ranges)).slice(0LL, _182327_i),(*(_182372_ranges)).slice((_182327_i + 1LL)));
			goto _iter_end_1ac2a524c;
		}
	_iter_next_1ac2a524c:;
	}
	_iter_end_1ac2a524c:;;
}



inline void _1c56aae53_pushWrongOrderCloseErr(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token>* _183539_t, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _183551_tokens, jule::Slice<jule::I64>* _183570_ranges) {
	{
		auto &_match_expr{ (*((*(_183551_tokens))[(*(_183570_ranges))[((*(_183570_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1ac2a755c:;
			{
				_1c569b5d6_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1ac2a75d4:;
			{
				_1c569b5d6_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac2a764a:;
			{
				_1c569b5d6_pushErr(_self_, (*(_183539_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ac2a745d:;
	};
}



inline void _1c56ab42b_pushRangeClose(_1c569ab02_parser* _self_, jule::Ptr<_1c486c19d_Token> _184630_t, jule::U64 _184641_left, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _184657_tokens, jule::Slice<jule::I64>* _184680_ranges) {
	jule::I64 _18473_n = (*(_184680_ranges)).len();;
	if ((_18473_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184630_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1ac2aa263:;
				{
					_1c569b5d6_pushErr(_self_, _184630_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1ac2aa2da:;
				{
					_1c569b5d6_pushErr(_self_, _184630_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1ac2aa351:;
				{
					_1c569b5d6_pushErr(_self_, _184630_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1ac2aa1a8:;
		};
		return;;
	} else if (((*((*(_184657_tokens))[(*(_184680_ranges))[(_18473_n - 1LL)]]))._field_Id != _184641_left)) {
		_1c56aae53_pushWrongOrderCloseErr(_self_, &(_184630_t), _184657_tokens, _184680_ranges);
	};
	_1c56aaa35_removeRange(_self_, (_18473_n - 1LL), (*(_184630_t))._field_Id, _184657_tokens, _184680_ranges);
}



inline void _1c56ab6d4_checkRanges(_1c569ab02_parser* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _186428_tokens) {
	jule::Slice<jule::I64> _186511_ranges = nullptr;;
	{
		auto expr = _186428_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2ad211:;
		if (it != expr_end) {
			jule::I64 _18677_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> *_186710_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186710_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac2ae19b:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _186511_ranges; __jule_push_dest.push(_18677_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac2ae234:;
						{
							_1c56ab42b_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(74LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1ac2ae29a:;
						{
							_1c56ab42b_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(72LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac2ae311:;
						{
							_1c56ab42b_pushRangeClose(_self_, (*(_186710_token)), static_cast<jule::U64>(76LLU), _186428_tokens, &(_186511_ranges));
						}
					}
					_match_end_1ac2ae0e1:;
				};
			}
			_iter_next_1ac2ad211:;
			++it;
			_18677_i++;
			goto _iter_begin_1ac2ad211;
		}
		_iter_end_1ac2ad211:;
	};
	{
		auto expr = &(_186511_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2ad3dc:;
		if (it != expr_end) {
			jule::I64 _188210_i = *it;
			{
				jule::Ptr<_1c486c19d_Token> _18834_token = (*(_186428_tokens))[_188210_i];;
				{
					auto &_match_expr{ (*(_18834_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac2b217c:;
						{
							_1c569b5d6_pushErr(_self_, _18834_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac2b21e3:;
						{
							_1c569b5d6_pushErr(_self_, _18834_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac2b2259:;
						{
							_1c569b5d6_pushErr(_self_, _18834_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1ac2b2127:;
				};
			}
			_iter_next_1ac2ad3dc:;
			++it;
			goto _iter_begin_1ac2ad3dc;
		}
		_iter_end_1ac2ad3dc:;
	};
}



inline void _1c56ab98c_parse(jule::Ptr<_1c569ab02_parser> _self_, jule::Ptr<_1c4872934_File>* _189527_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1c48807bb_AST>(_1c48807bb_AST{._field_File=(*(_189527_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1c489a880_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1c4881778_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1c5689edc_exprBuilder>(_1c5689edc_exprBuilder{._field_p=_self_});
	_1c56ab6d4_checkRanges(_self_, &((*((*(_189527_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _19087_stmts = _1c567c089_splitStmts(&((*((*(_189527_f))))._field_Tokens));;
	jule::I64 _19117_i = 0LL;;
	for (; (_19117_i < _19087_stmts.len()); (_19117_i)++) {
		{
			jule::Ptr<_1c567bbd2_stmt> _19138_stmt = _19087_stmts[_19117_i];;
			if (((*(_19138_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_19138_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1ac2b59aa;
			};
			if ((!(_205a99542_IsTopDirective((*((*_19138_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1ac2b59aa;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4881b96_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c569c0cb_buildDirective(_self_, (*_19138_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1ac2b59aa:;
	}
	_iter_end_1ac2b59aa:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_19117_i < _19087_stmts.len()) && (!(_1c569b1b8_stopped(_self_)))); (_19117_i)++) {
		{
			_1c56aa55c_appendNode(_self_, &((*(_19087_stmts[_19117_i]))._field_tokens));
		}
	_iter_next_1ac2b8e31:;
	}
	_iter_end_1ac2b8e31:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1c569b5d6_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c569ab02_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1c56ad2eb_pushErr(_1c56acc24_typeBuilder* _self_, jule::Ptr<_1c486c19d_Token> _4123_token, jule::Str _4138_fmt) {
	if ((*(_self_))._field_err) {
		_1c569b5d6_pushErr((*(_self_))._field_p.ptr(), _4123_token, _4138_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1c56ad65e_pushSuggestion(_1c56acc24_typeBuilder* _self_, jule::Str _4830_fmt, jule::Slice<jule::Any> _4843_args) {
	if ((*(_self_))._field_err) {
		_1c569b949_pushSuggestion((*(_self_))._field_p.ptr(), _4830_fmt, _4843_args);
	};
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ad8e5_buildNamespace(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c4882779_TypeDecl> _557_t = jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1c4883527_NamespaceTypeDecl> _597_nst = jule::new_ptr<_1c4883527_NamespaceTypeDecl>(_1c4883527_NamespaceTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_Kind=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
	jule::I64 _607_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _628_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_607_n & 1LL) == 0LL)) {
				if (((*(_628_token))._field_Id != static_cast<jule::U64>(1LLU))) {
					_1c56ad2eb_pushErr(_self_, _628_token, jule::Str::lit("invalid syntax", 14));
					_1c56ad65e_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_597_nst.alloc)._field_Idents=jule::append((*_597_nst.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c486c19d_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _628_token; __jule_collection; }));
			} else if (((*(_628_token))._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1ac2be5c9;
			};
			(_607_n)++;
		}
	_iter_next_1ac2be5c9:;
	}
	_iter_end_1ac2be5c9:;;
	((*(_597_nst))._field_Idents).mut_slice(0LL, ((*(_597_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_597_nst.alloc)._field_Kind=_1c56ae198_buildIdent(_self_);
	(*(_557_t))._field_Kind=jule::Any(_597_nst, &__jule_any_type91);
	return _557_t;;
}



inline jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _1c56adb7b_buildGenerics(_1c56acc24_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c486c19d_Token> _883_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_883_token))._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _937_parts = _1c56ade12_identGenerics(_self_);;
	if ((_937_parts.len() == 0LL)) {
		_1c56ad2eb_pushErr(_self_, _883_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> _997_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>::alloc(0LL, _937_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4882779_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac437104:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _10015_part = *it;
			{
				jule::I64 _1018_j = 0LL;;
				jule::Ptr<_1c4882779_TypeDecl> _1028_t;
				({
					__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &(_10015_part), (&(_1018_j)), true);
					_1028_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_1018_j < _10015_part.len())) {
					_1c56ad2eb_pushErr(_self_, _10015_part[_1018_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1c4882779_TypeDecl>> &__jule_push_dest = _997_types; __jule_push_dest.push(_1028_t); };
			}
			_iter_next_1ac437104:;
			++it;
			goto _iter_begin_1ac437104;
		}
		_iter_end_1ac437104:;
	};
	return _997_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c56ade12_identGenerics(_1c56acc24_typeBuilder* _self_) {
	jule::I64 _1123_first = (*((*(_self_))._field_i));;
	jule::I64 _1137_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _1154_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1154_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1ac439c50:;
					{
						(_1137_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac43a05d:;
					{
						(_1137_rangeN)--;
					}
				}
				_match_end_1ac43a008:;
			};
			if ((_1137_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1ac438de7;
			};
		}
	_iter_next_1ac438de7:;
	}
	_iter_end_1ac438de7:;;
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _1277_tokens = (*(_self_))._field_tokens.slice((_1123_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1287_parts;
	jule::Slice<_205a977d7_Log> _12814_errors;
	({
		__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5699a24_parts(&(_1277_tokens), static_cast<jule::U64>(5LLU), true);
		_1287_parts = __jule_assign_result.__jule_result_arg0;
		_12814_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12814_errors);
	};
	return _1287_parts;;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae198_buildIdent(_1c56acc24_typeBuilder* _self_) {
	jule::Bool _1367_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1367_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1c56ad8e5_buildNamespace(_self_);;
	};
	jule::Ptr<_1c486c19d_Token> _1407_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c4882d84_IdentTypeDecl> _1417_it = jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=_1407_token, ._field_Ident=(*(_1407_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4882779_TypeDecl> _1477_itd = jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1417_it, &__jule_any_type75)});;
	if (((!(_1367_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		(*(_1417_it))._field_Generics=_1c56adb7b_buildGenerics(_self_);
		return _1477_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1c56ad2eb_pushErr(_self_, _1407_token, jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U64>(1LLU))) {
		_1c56ad2eb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _1477_itd;;
	};
	jule::Ptr<_1c488314d_SubIdentTypeDecl> _1647_sit = jule::new_ptr<_1c488314d_SubIdentTypeDecl>(_1c488314d_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>>(nullptr)});;
	(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1417_it; __jule_collection; }));
	jule::Ptr<_1c4882779_TypeDecl> _1667_ident = _1c56ae198_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1667_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ac445541:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1667_ident))._field_Kind.cast_ptr<_1c4882d84_IdentTypeDecl>(&__jule_any_type75); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1ac43eb56:;
			{
				(*_1647_sit.alloc)._field_Idents=jule::append((*_1647_sit.alloc)._field_Idents,(*((*(_1667_ident))._field_Kind.unsafe_cast_ptr<_1c488314d_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1ac443297:;
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_1407_token, ._field_Kind=jule::Any(_1647_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae42e_buildCppLink(_1c56acc24_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1c56ad2eb_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1c4882779_TypeDecl> _1857_t = _1c56ae198_buildIdent(_self_);;
	(*((*(_1857_t))._field_Kind.cast_ptr<_1c4882d84_IdentTypeDecl>(&__jule_any_type75)))._field_Binded=true;
	return _1857_t;;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae6b5_buildFn(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _1917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1c4894439_FnDecl> _1927_f = _1c56a22bd_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1927_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c48947d0_IsAnon(_1927_f.ptr())))) {
		_1c56ad2eb_pushErr(_self_, (*(_1927_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_1917_token, ._field_Kind=jule::Any(_1927_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ae94b_buildPtr(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _2067_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, _2067_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1c48842a3_PtrTypeDecl>(_1c48842a3_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type71)});;
	};
	jule::Ptr<_1c4882779_TypeDecl> _2237_elem = _1c56b09a2_step(_self_);;
	if ((_2237_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_2067_token, ._field_Kind=jule::Any(jule::new_ptr<_1c48842a3_PtrTypeDecl>(_1c48842a3_PtrTypeDecl{._field_Elem=_2237_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56aebd2_buildSptr(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _2377_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, _2377_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4882779_TypeDecl> _2447_elem = _1c56b09a2_step(_self_);;
	if ((_2447_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_2377_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4883824_SptrTypeDecl>(_1c4883824_SptrTypeDecl{._field_Elem=_2447_elem}), &__jule_any_type72)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56aee68_buildSlc(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _2587_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1c4882779_TypeDecl> _2607_elem = _1c56b09a2_step(_self_);;
	if ((_2607_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_2587_token, ._field_Kind=jule::Any(jule::new_ptr<_1c4883ba9_SlcTypeDecl>(_1c4883ba9_SlcTypeDecl{._field_Elem=_2607_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56b01ee_buildArr(_1c56acc24_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _2737_exprTokens = _1c56992a4_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c4882779_TypeDecl> _2797_elem = _1c56b09a2_step(_self_);;
	if ((_2797_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4884a45_ArrTypeDecl> _2847_arrt = jule::new_ptr<_1c4884a45_ArrTypeDecl>(_1c4884a45_ArrTypeDecl{._field_Elem=_2797_elem, ._field_Size=jule::Ptr<_1c4886aad_Expr>(nullptr)});;
	jule::Ptr<_1c486c19d_Token> _2887_token = _2737_exprTokens[0LL];;
	if (((_2737_exprTokens.len() == 1LL) && ((*(_2887_token))._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		(*(_2847_arrt))._field_Size=_1c569bc8a_buildExpr((*(_self_))._field_p, &(_2737_exprTokens));
	};
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_2887_token, ._field_Kind=jule::Any(_2847_arrt, &__jule_any_type69)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56b0485_buildMap(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _3027_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _3107_keyTokens = _1c56992a4_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_3107_keyTokens.len() == 0LL)) {
		_1c56ad2eb_pushErr(_self_, _3027_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1c4885293_MapTypeDecl> _3197_mapt = jule::new_ptr<_1c4885293_MapTypeDecl>(_1c4885293_MapTypeDecl{._field_Key=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1c4882779_TypeDecl>(nullptr)});;
	jule::I64 _3207_j = 0LL;;
	jule::Ptr<_1c4882779_TypeDecl> _3217_keyt;
	jule::Bool _32117_ok;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &(_3107_keyTokens), (&(_3207_j)), (*(_self_))._field_err);
		_3217_keyt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	} else if ((_3207_j < _3107_keyTokens.len())) {
		_1c56ad2eb_pushErr(_self_, _3107_keyTokens[_3207_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_3197_mapt.alloc)._field_Key=_3217_keyt;
	jule::Ptr<_1c4882779_TypeDecl> _3297_valt;
	({
		__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_assign_result = _1c569d1dc_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3297_valt = __jule_assign_result.__jule_result_arg0;
		_32117_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32117_ok))) {
		return nullptr;;
	};
	(*_3197_mapt.alloc)._field_Val=_3297_valt;
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=_3027_mapToken, ._field_Kind=jule::Any(_3197_mapt, &__jule_any_type73)});;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56b071b_buildEnumerable(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _3417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1c56ad2eb_pushErr(_self_, _3417_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3417_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3417_token))._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1c56aee68_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1c56b01ee_buildArr(_self_);;
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56b09a2_step(_1c56acc24_typeBuilder* _self_) {
	jule::Ptr<_1c486c19d_Token> _3563_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3563_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ac6eb918:;
			{
				return _1c56ae198_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1ac6ebd69:;
			{
				return _1c56ae42e_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac6ebe8a:;
			{
				return _1c56ae6b5_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac6eb60a:;
			{
				return _1c56ae94b_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac6eb671:;
			{
				return _1c56aebd2_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac6eb6d7:;
			{
				return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1c4883824_SptrTypeDecl>(_1c4883824_SptrTypeDecl{._field_Elem=_1c56aebd2_buildSptr(_self_)}), &__jule_any_type72)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1ac6eb74d:;
			{
				return _1c56b071b_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ac6eb7c5:;
			{
				return _1c56b0485_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1ac6eb2db:;
			{
				((*((*(_self_))._field_i)))++;
				_1c56ad2eb_pushErr(_self_, _3563_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ac6eb5a5:;
	};
}



inline __jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool _1c56b0c38_build(_1c56acc24_typeBuilder* _self_) {
	__jule_tuple_x_1c4882779_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c4882779_TypeDecl> _3887_root = _1c56b09a2_step(_self_);;
	if ((_3887_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1c56ac493_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3887_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56acc24_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c4c838e4_CompileInfo_eq(_1c4c838e4_CompileInfo *_self_, _1c4c838e4_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}



std::ostream &operator<<(std::ostream &_Stream, _1c4c838e4_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1c4c85451_pushErr(_1c4c84dbd_directiveEval* _self_, jule::Ptr<_1c486c19d_Token> _2123_t, jule::Str _2134_fmt, jule::Slice<jule::Any> _2147_args) {
	{ jule::Slice<_205a977d7_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_205a97c49_Logf(_2134_fmt, _2147_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1c4c8584c_splitOperans(_1c4c84dbd_directiveEval* _self_, jule::U64 _3328_op, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _3346_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr); __jule_collection; });;
	jule::I64 _357_i = 0LL;;
	jule::I64 _367_rangeN = 0LL;;
	jule::I64 _377_last = 0LL;;
	for (; (_357_i < ((*(_3346_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1c486c19d_Token> _394_b = (*(_3346_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac72191b:;
					{
						(_367_rangeN)++;
						goto _iter_next_1ac720e8c;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac721c29:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1ac721bc4:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1ac720e8c;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1ac720e8c:;
	}
	_iter_end_1ac720e8c:;;
	if ((_377_last < (*(_3346_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3346_tokens)).slice(_377_last)); };
	} else {
		_1c4c85451_pushErr(_self_, (*(_3346_tokens))[(_377_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1c4c85b8d_evalDirectiveIdent(_1c4c84dbd_directiveEval* _self_, jule::Str _6430_ident) {
	if ((_6430_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac724798:;
		if (it != expr_end) {
			jule::Str *_6810_var = it;
			{
				if (((*(_6810_var)) == _6430_ident)) {
					return true;;
				};
			}
			_iter_next_1ac724798:;
			++it;
			goto _iter_begin_1ac724798;
		}
		_iter_end_1ac724798:;
	};
	return false;;
}



inline jule::Bool _1c4c85ece_evalDirectivePart(_1c4c84dbd_directiveEval* _self_, jule::Slice<jule::Ptr<_1c486c19d_Token>> _7837_part) {
	jule::Bool _793_logicalNot = ((*(_7837_part[0LL]))._field_Id == static_cast<jule::U64>(68LLU));;
	if (_793_logicalNot) {
		(_7837_part).mut_slice(1LL);;
	};
	if ((_7837_part.len() > 1LL)) {
		_1c4c85451_pushErr(_self_, _7837_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _897_result = _1c4c85b8d_evalDirectiveIdent(_self_, (*(_7837_part[0LL]))._field_Kind);;
	if (_793_logicalNot) {
		_897_result=(!(_897_result));
	};
	return _897_result;;
}



inline jule::Bool _1c4c86265_eval(_1c4c84dbd_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1c4c85451_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _1027_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1047_logicalOrParts = _1c4c8584c_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_1047_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_1047_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7296d2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _10915_part = *it;
			{
				jule::Bool _1108_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> _1118_logicalAndParts = _1c4c8584c_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10915_part));;
				if ((_1118_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1118_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac72b9c0:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c486c19d_Token>> _11616_andPart = *it;
						{
							jule::Ptr<_1c486c19d_Token> _1175_first = _11616_andPart[0LL];;
							if (((*(_1175_first))._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1c486c19d_Token> _1196_end = _11616_andPart[(_11616_andPart.len() - 1LL)];;
								if (((*(_1196_end))._field_Id != static_cast<jule::U64>(75LLU))) {
									_1c4c85451_pushErr(_self_, _1175_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11616_andPart).mut_slice(1LL, (_11616_andPart.len() - 1LL));;
							};
							_1108_and=(_1108_and && _1c4c85ece_evalDirectivePart(_self_, _11616_andPart));
						}
						_iter_next_1ac72b9c0:;
						++it;
						goto _iter_begin_1ac72b9c0;
					}
					_iter_end_1ac72b9c0:;
				};
				_1027_result=(_1027_result || _1108_and);
			}
			_iter_next_1ac7296d2:;
			++it;
			goto _iter_begin_1ac7296d2;
		}
		_iter_end_1ac7296d2:;
	};
	return _1027_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c4c84dbd_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c56b1d5a_JuleImporter> static__1c56b2289_New(_1c4c838e4_CompileInfo _5816_info) {
	jule::Ptr<_1c56b1d5a_JuleImporter> _597_imp = jule::new_ptr<_1c56b1d5a_JuleImporter>(_1c56b1d5a_JuleImporter{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _205b5c072_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1c4c84274_initVars(&((*(_597_imp))._field_vars), &(_5816_info));
	return _597_imp;;
}



inline jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _1c56b2520_AllPackages(_1c56b1d5a_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1c56b2960_SetModPath(_1c56b1d5a_JuleImporter* _self_, jule::Str _7526_path) {
	(*(_self_))._field_mod=_7526_path;
}



inline jule::Str _1c56b2be6_GetModPath(_1c56b1d5a_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1c56b3037_ModById(_1c56b1d5a_JuleImporter* _self_, jule::I64 _8319_id) {
	return (*(_self_))._field_mods[_8319_id];;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c56b3378_GetImport(_1c56b1d5a_JuleImporter* _self_, jule::Str _8725_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac732d39:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _8815_p = *it;
			{
				if (((*(_8815_p))._field_Path == _8725_path)) {
					return _8815_p;;
				};
			}
			_iter_next_1ac732d39:;
			++it;
			goto _iter_begin_1ac732d39;
		}
		_iter_end_1ac732d39:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log _1c56b3774_ImportPackage(_1c56b1d5a_JuleImporter* _self_, jule::Str _9629_path, jule::Bool _9640_updateMod) {
	__jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_func_result;
	jule::Slice<jule::Ptr<_239654b57_DirEntry>> _977_dirents = ({
		auto except = static__205a00a09_Read(_9629_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_205a977d7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c56b1871_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9629_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_239654b57_DirEntry>>(nullptr);});
	});;
	if (_9640_updateMod) {
		jule::Str _1024_newMod = _1c4949665_FindModuleFileDeep(_9629_path);;
		if ((_1024_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_1024_newMod;
			jule::Slice<_205a977d7_Log> _1059_errs = _1c494992e_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_1059_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _1059_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1c48807bb_AST>> _1127_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48807bb_AST>>::alloc(0LL, _977_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48807bb_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_977_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac734489:;
		if (it != expr_end) {
			jule::Ptr<_239654b57_DirEntry> _11310_dirent = *it;
			{
				if ((_23965862d_IsDir((*(_11310_dirent))._field_Stat.ptr()) || (!(_2059e44c0_HasSuffix((*_11310_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1ac734489;
				};
				jule::Str _1194__path = _2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _9629_path; (*it++) = (*_11310_dirent.alloc)._field_Name; __jule_collection; }));;
				jule::Ptr<_1c4872934_File> _1208_file = _1c4873d0e_NewFileSet(_1194__path);;
				_1c4872d85_Fill(_1208_file.ptr(), _1c56b1563_readBuff((*_1208_file.alloc)._field_Path));
				jule::Slice<_205a977d7_Log> _1228_errors = _1c48802e3_Lex(_1208_file, static_cast<jule::I64>(0LL));;
				if ((_1228_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1228_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1c5635e77_FileInfo> _1278_finfo = _1c5679927_ParseFile(_1208_file);;
				if (((*(_1278_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1278_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1c4c8297b_isPassFileAnnotation((*_11310_dirent.alloc)._field_Name)))) {
					goto _iter_next_1ac734489;
				};
				jule::Bool _1374_r;
				jule::Slice<_205a977d7_Log> _13711_logs;
				({
					__jule_tuple_bool__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c56b3e5b_isPassBuildDirectives(_self_, &((*_1278_finfo.alloc)._field_Ast));
					_1374_r = __jule_assign_result.__jule_result_arg0;
					_13711_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13711_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13711_logs;
					return __jule_func_result;;
				};
				if ((!(_1374_r))) {
					goto _iter_next_1ac734489;
				};
				{ jule::Slice<jule::Ptr<_1c48807bb_AST>> &__jule_push_dest = _1127_asts; __jule_push_dest.push((*_1278_finfo.alloc)._field_Ast); };
			}
			_iter_next_1ac734489:;
			++it;
			goto _iter_begin_1ac734489;
		}
		_iter_end_1ac734489:;
	};
	__jule_func_result.__jule_result_arg0 = _1127_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c56b3a2c_Imported(_1c56b1d5a_JuleImporter* _self_, jule::Ptr<_1c492cd1e_ImportInfo> _15328_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac737118:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _15510_p = *it;
			{
				if ((((*(_15510_p))._field_Binded == (*(_15328_imp))._field_Binded) && ((*_15510_p.alloc)._field_LinkPath == (*_15328_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ac737118:;
			++it;
			goto _iter_begin_1ac737118;
		}
		_iter_end_1ac737118:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac73e6a3:;
			if (it != expr_end) {
				jule::I64 _1628_i = it - expr->begin();
				jule::Str _16211_mod = *it;
				{
					if (((*(_self_))._field_mod == _16211_mod)) {
						(*_15328_imp.alloc)._field_ModId=_1628_i;
						goto _julec_label_1ac73ed24;
					};
				}
				_iter_next_1ac73e6a3:;
				++it;
				_1628_i++;
				goto _iter_begin_1ac73e6a3;
			}
			_iter_end_1ac73e6a3:;
		};
		(*_15328_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1ac73ed24:;
	};
	{ jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15328_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_205a977d7_Log _1c56b3e5b_isPassBuildDirectives(_1c56b1d5a_JuleImporter* _self_, jule::Ptr<_1c48807bb_AST>* _17942_file) {
	__jule_tuple_bool__jule_tuple_s_205a977d7_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17942_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac74272d:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _18015_td = *it;
			{
				if ((!(*((*(_18015_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1ac74272d;
				};
				_1c4c84dbd_directiveEval _1848_de = _1c4c84dbd_directiveEval{._field_logs=jule::Slice<_205a977d7_Log>(nullptr), ._field_d=_18015_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1884_result = _1c4c86265_eval(&_1848_de);;
				if ((_1848_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1848_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1884_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ac74272d:;
			++it;
			goto _iter_begin_1ac74272d;
		}
		_iter_end_1ac74272d:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56b1d5a_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c56b8867_ExprInspector> static__1c56b8c0d_New(void) {
	return jule::new_ptr<_1c56b8867_ExprInspector>(_1c56b8867_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1c56b8eb6_args(_1c56b8867_ExprInspector* _self_, jule::Slice<jule::Any> _5724_args) {
	{
		auto expr = &(_5724_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac788a82:;
		if (it != expr_end) {
			jule::Any _5815_arg = *it;
			{
				_1c56b926e_inspect(_self_, &(_5815_arg));
			}
			_iter_next_1ac788a82:;
			++it;
			goto _iter_begin_1ac788a82;
		}
		_iter_end_1ac788a82:;
	};
}



inline void _1c56b926e_inspect(_1c56b8867_ExprInspector* _self_, jule::Any* _6328_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_6328_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6328_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac789e29:;
			{
				jule::Ptr<_1c48aa85c_BinaryExprModel> _718_b = (*(_6328_m)).cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111);;
				_1c56b926e_inspect(_self_, &((*((*(_718_b))._field_Left))._field_Model));
				_1c56b926e_inspect(_self_, &((*((*_718_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac78a116:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _758_u = (*(_6328_m)).cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110);;
				_1c56b926e_inspect(_self_, &((*((*(_758_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac789ec3:;
			{
				jule::Ptr<_1c48ab60a_StructLitExprModel> _788_lit = (*(_6328_m)).cast_ptr<_1c48ab60a_StructLitExprModel>(&__jule_any_type95);;
				{
					auto expr = &((*(_788_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac78e549:;
					if (it != expr_end) {
						jule::I64 _798_i = it - expr->begin();
						{
							_1c56b926e_inspect(_self_, &((*((*((*(_788_lit))._field_Args[_798_i]))._field_Expr))._field_Model));
						}
						_iter_next_1ac78e549:;
						++it;
						_798_i++;
						goto _iter_begin_1ac78e549;
					}
					_iter_end_1ac78e549:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac78a3e1:;
			{
				jule::Ptr<_1c48ab60a_StructLitExprModel> _838_lit = (*((*(_6328_m)).cast_ptr<_1c48ab907_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
				{
					auto expr = &((*(_838_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac790eda:;
					if (it != expr_end) {
						jule::I64 _848_i = it - expr->begin();
						{
							_1c56b926e_inspect(_self_, &((*((*((*(_838_lit))._field_Args[_848_i]))._field_Expr))._field_Model));
						}
						_iter_next_1ac790eda:;
						++it;
						_848_i++;
						goto _iter_begin_1ac790eda;
					}
					_iter_end_1ac790eda:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac78a457:;
			{
				jule::Ptr<_1c48abe8a_CastingExprModel> _888_c = (*(_6328_m)).cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93);;
				_1c56b926e_inspect(_self_, &((*((*(_888_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac78a4bd:;
			{
				jule::Ptr<_1c48ac83c_FnCallExprModel> _918_fc = (*(_6328_m)).cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33);;
				_1c56b926e_inspect(_self_, &((*(_918_fc))._field_Expr));
				_1c56b8eb6_args(_self_, (*_918_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ac78a534:;
			{
				jule::Ptr<_1c48acc16_SliceExprModel> _958_s = (*(_6328_m)).cast_ptr<_1c48acc16_SliceExprModel>(&__jule_any_type77);;
				_1c56b8eb6_args(_self_, (*(_958_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac78a59a:;
			{
				jule::Ptr<_1c48b0c2a_ArrayExprModel> _988_a = (*(_6328_m)).cast_ptr<_1c48b0c2a_ArrayExprModel>(&__jule_any_type85);;
				_1c56b8eb6_args(_self_, (*(_988_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac78a611:;
			{
				jule::Ptr<_1c48ad1bc_IndexingExprModel> _1018_i = (*(_6328_m)).cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45);;
				_1c56b926e_inspect(_self_, &((*((*(_1018_i))._field_Expr))._field_Model));
				_1c56b926e_inspect(_self_, &((*((*_1018_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac78a688:;
			{
				jule::Ptr<_1c48ae003_MapExprModel> _1058_mp = (*(_6328_m)).cast_ptr<_1c48ae003_MapExprModel>(&__jule_any_type99);;
				{
					auto expr = &((*(_1058_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7977d8:;
					if (it != expr_end) {
						jule::I64 _1068_i = it - expr->begin();
						{
							_1c56b926e_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Key));
							_1c56b926e_inspect(_self_, &((*((*(_1058_mp))._field_Entries[_1068_i]))._field_Val));
						}
						_iter_next_1ac7977d8:;
						++it;
						_1068_i++;
						goto _iter_begin_1ac7977d8;
					}
					_iter_end_1ac7977d8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac78a710:;
			{
				jule::Ptr<_1c48ae586_SlicingExprModel> _1118_s = (*(_6328_m)).cast_ptr<_1c48ae586_SlicingExprModel>(&__jule_any_type92);;
				_1c56b926e_inspect(_self_, &((*(_1118_s))._field_Expr));
				_1c56b926e_inspect(_self_, &((*_1118_s.alloc)._field_Left));
				if (((*_1118_s.alloc)._field_Right != nullptr)) {
					_1c56b926e_inspect(_self_, &((*_1118_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac78a787:;
			{
				jule::Ptr<_1c48aeb19_TraitSubIdentExprModel> _1188_t = (*(_6328_m)).cast_ptr<_1c48aeb19_TraitSubIdentExprModel>(&__jule_any_type97);;
				_1c56b926e_inspect(_self_, &((*(_1188_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac78a80e:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _1218_s = (*(_6328_m)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				_1c56b926e_inspect(_self_, &((*((*(_1218_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac78a886:;
			{
				jule::Ptr<_1c48b1027_TupleExprModel> _1248_t = (*(_6328_m)).cast_ptr<_1c48b1027_TupleExprModel>(&__jule_any_type81);;
				{
					auto expr = &((*(_1248_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac79cbb7:;
					if (it != expr_end) {
						jule::I64 _1258_i = it - expr->begin();
						{
							_1c56b926e_inspect(_self_, &((*((*(_1248_t))._field_Datas[_1258_i]))._field_Model));
						}
						_iter_next_1ac79cbb7:;
						++it;
						_1258_i++;
						goto _iter_begin_1ac79cbb7;
					}
					_iter_end_1ac79cbb7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac78a90d:;
			{
				jule::Ptr<_1c48b1ba4_BuiltinNewCallExprModel> _1298_b = (*(_6328_m)).cast_ptr<_1c48b1ba4_BuiltinNewCallExprModel>(&__jule_any_type113);;
				if (((*(_1298_b))._field_Init != nullptr)) {
					_1c56b926e_inspect(_self_, &((*_1298_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac78a985:;
			{
				jule::Ptr<_1c48b1401_BuiltinOutCallExprModel> _1348_c = (*(_6328_m)).cast_ptr<_1c48b1401_BuiltinOutCallExprModel>(&__jule_any_type26);;
				_1c56b926e_inspect(_self_, &((*(_1348_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac78aa0c:;
			{
				jule::Ptr<_1c48b17ca_BuiltinOutlnCallExprModel> _1378_c = (*(_6328_m)).cast_ptr<_1c48b17ca_BuiltinOutlnCallExprModel>(&__jule_any_type27);;
				_1c56b926e_inspect(_self_, &((*(_1378_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac78aa84:;
			{
				jule::Ptr<_1c48b207d_BuiltinPanicCallExprModel> _1408_c = (*(_6328_m)).cast_ptr<_1c48b207d_BuiltinPanicCallExprModel>(&__jule_any_type28);;
				_1c56b926e_inspect(_self_, &((*(_1408_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac78ab0b:;
			{
				jule::Ptr<_1c48b2534_BuiltinAssertCallExprModel> _1438_c = (*(_6328_m)).cast_ptr<_1c48b2534_BuiltinAssertCallExprModel>(&__jule_any_type29);;
				_1c56b926e_inspect(_self_, &((*(_1438_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac78ab83:;
			{
				jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> _1468_c = (*(_6328_m)).cast_ptr<_1c48b413a_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1c56b926e_inspect(_self_, &((*((*(_1468_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac78ac0a:;
			{
				jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel> _1498_b = (*(_6328_m)).cast_ptr<_1c48b29da_BuiltinMakeCallExprModel>(&__jule_any_type114);;
				if (((*(_1498_b))._field_Len != nullptr)) {
					_1c56b926e_inspect(_self_, &((*_1498_b.alloc)._field_Len));
				};
				if (((*_1498_b.alloc)._field_Cap != nullptr)) {
					_1c56b926e_inspect(_self_, &((*_1498_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac78ac82:;
			{
				jule::Ptr<_1c48b2db4_BuiltinAppendCallExprModel> _1578_b = (*(_6328_m)).cast_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(&__jule_any_type25);;
				_1c56b926e_inspect(_self_, &((*(_1578_b))._field_Dest));
				_1c56b926e_inspect(_self_, &((*_1578_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac78ad09:;
			{
				jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> _1618_l = (*(_6328_m)).cast_ptr<_1c48b31b1_BuiltinLenCallExprModel>(&__jule_any_type115);;
				_1c56b926e_inspect(_self_, &((*((*(_1618_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac78ad81:;
			{
				jule::Ptr<_1c48b34ad_BuiltinCapCallExprModel> _1648_c = (*(_6328_m)).cast_ptr<_1c48b34ad_BuiltinCapCallExprModel>(&__jule_any_type116);;
				_1c56b926e_inspect(_self_, &((*((*(_1648_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac78ae08:;
			{
				jule::Ptr<_1c48b3887_BuiltinDeleteCallExprModel> _1678_b = (*(_6328_m)).cast_ptr<_1c48b3887_BuiltinDeleteCallExprModel>(&__jule_any_type31);;
				_1c56b926e_inspect(_self_, &((*((*(_1678_b))._field_Dest))._field_Model));
				if (((*_1678_b.alloc)._field_Key != nullptr)) {
					_1c56b926e_inspect(_self_, &((*(*(_1678_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac78ae80:;
			{
				jule::Ptr<_1c48b47de_SizeofExprModel> _1738_s = (*(_6328_m)).cast_ptr<_1c48b47de_SizeofExprModel>(&__jule_any_type117);;
				_1c56b926e_inspect(_self_, &((*(_1738_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac78b007:;
			{
				jule::Ptr<_1c48b49cb_AlignofExprModel> _1768_a = (*(_6328_m)).cast_ptr<_1c48b49cb_AlignofExprModel>(&__jule_any_type118);;
				_1c56b926e_inspect(_self_, &((*(_1768_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac78b07e:;
			{
				jule::Ptr<_1c48b5070_IntegratedToStrExprModel> _1798_i = (*(_6328_m)).cast_ptr<_1c48b5070_IntegratedToStrExprModel>(&__jule_any_type119);;
				_1c56b926e_inspect(_self_, &((*(_1798_i))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac78b106:;
			{
				jule::Ptr<_1c48b5746_FreeExprModel> _1828_f = (*(_6328_m)).cast_ptr<_1c48b5746_FreeExprModel>(&__jule_any_type32);;
				_1c56b926e_inspect(_self_, &((*(_1828_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac78b17d:;
			{
				jule::Ptr<_1c48b5449_BackendEmitExprModel> _1858_e = (*(_6328_m)).cast_ptr<_1c48b5449_BackendEmitExprModel>(&__jule_any_type24);;
				_1c56b8eb6_args(_self_, (*(_1858_e))._field_Exprs);
			}
		}
		_match_end_1ac789ca3:;
	};
}



inline void _1c56b95d2_Inspect(_1c56b8867_ExprInspector* _self_, jule::Any* _19328_m, jule::Fn<void,jule::Any*> _19342_f) {
	(*(_self_))._field_handler=_19342_f;
	_1c56b926e_inspect(_self_, _19328_m);
}





std::ostream &operator<<(std::ostream &_Stream, _1c56b8867_ExprInspector _Src) {
	_Stream << "ExprInspector{";
	_Stream << "SkipChild:" << _Src._field_SkipChild << ", ";
	_Stream << "handler:" << _Src._field_handler;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56c4ac6_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c57e050a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c57e0928_ObjectDeadCode> static__1c57e0e01_new(jule::Ptr<_1c56b4830_IR>* _3621_ir) {
	return jule::new_ptr<_1c57e0928_ObjectDeadCode>(_1c57e0928_ObjectDeadCode{._field_live=_1c57e050a_liveTable{._field_vars=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1c48bb719_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1c48a6407_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>(nullptr)}, ._field_ir=(*(_3621_ir))});;
}



inline jule::Bool _1ac7ea297_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48cc1b9_Trait>* _4227_t) {
	jule::Slice<jule::Ptr<_1c48cc1b9_Trait>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1ac7ebead:;
			{
				_4311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1ac7ebd26:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7ed014:;
		if (it != expr_end) {
			jule::I64 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1ac7ed014:;
			++it;
			_547_i++;
			goto _iter_begin_1ac7ed014;
		}
		_iter_end_1ac7ed014:;
	};
	return false;;
}

inline jule::Bool _1ac800be8_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48bb719_FnIns>* _4227_t) {
	jule::Slice<jule::Ptr<_1c48bb719_FnIns>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1ac8027dd:;
			{
				_4311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1ac802733:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac802788:;
		if (it != expr_end) {
			jule::I64 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1ac802788:;
			++it;
			_547_i++;
			goto _iter_begin_1ac802788;
		}
		_iter_end_1ac802788:;
	};
	return false;;
}

inline jule::Bool _1ac806a45_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48a6407_StructIns>* _4227_t) {
	jule::Slice<jule::Ptr<_1c48a6407_StructIns>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1ac80b440:;
			{
				_4311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1ac80b31e:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac80c364:;
		if (it != expr_end) {
			jule::I64 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1ac80c364:;
			++it;
			_547_i++;
			goto _iter_begin_1ac80c364;
		}
		_iter_end_1ac80c364:;
	};
	return false;;
}

inline jule::Bool _1ac80dc8e_isLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49715b0_Var>* _4227_t) {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _4311_live = nullptr;;
	{
		
{
			_case_begin_1ac810653:;
			{
				_4311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1ac8107c9:;
	};
	{
		auto expr = &(_4311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8111ae:;
		if (it != expr_end) {
			jule::I64 _547_i = it - expr->begin();
			{
				if ((_4311_live[_547_i] == (*(_4227_t)))) {
					return true;;
				};
			}
			_iter_next_1ac8111ae:;
			++it;
			_547_i++;
			goto _iter_begin_1ac8111ae;
		}
		_iter_end_1ac8111ae:;
	};
	return false;;
}



inline void _1ac7ea63d_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48cc1b9_Trait> _6232_t) {
	{
		
{
			_case_begin_1ac7ee08c:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1ac7ed443:;
	};
}

inline void _1ac80108e_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48bb719_FnIns> _6232_t) {
	{
		
{
			_case_begin_1ac804d40:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48bb719_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1ac8044b0:;
	};
}

inline void _1ac8070ea_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48a6407_StructIns> _6232_t) {
	{
		
{
			_case_begin_1ac8087b1:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a6407_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1ac807b34:;
	};
}

inline void _1ac80e135_pushLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49715b0_Var> _6232_t) {
	{
		
{
			_case_begin_1ac812d4d:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6232_t; __jule_collection; }));
			}
		}
		_match_end_1ac812336:;
	};
}



inline void _1c57e17a3_setReferencesAsLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c48be8a4_ReferenceStack>* _7541_rs) {
	if (((*(_7541_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _797_i = 0LL;;
	for (; (_797_i < _1c48c00be_Len((*(_7541_rs)).ptr())); (_797_i)++) {
		{
			jule::Any _818_ref = _1c48c0410_At((*(_7541_rs)).ptr(), _797_i);;
			{
				auto &_match_expr{ _818_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ac7e8e66:;
					{
						jule::Ptr<_1c48cc1b9_Trait> _849_t = _818_ref.unsafe_cast_ptr<_1c48cc1b9_Trait>();;
						if (_1ac7ea297_isLive(_self_, &(_849_t))) {
							goto _iter_next_1ac7e7aad;
						};
						_1ac7ea63d_pushLive(_self_, _849_t);
						{
							auto expr = &((*(_849_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac7e9be2:;
							if (it != expr_end) {
								jule::Ptr<_1c48b8738_Fn> _8917_ins = *it;
								{
									{
										auto expr = &((*(_8917_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac7ee169:;
										if (it != expr_end) {
											jule::Ptr<_1c48bb719_FnIns> _9018_mins = *it;
											{
												if (_1ac800be8_isLive(_self_, &(_9018_mins))) {
													goto _iter_next_1ac7ee169;
												};
												_1ac80108e_pushLive(_self_, _9018_mins);
												_1c57e17a3_setReferencesAsLive(_self_, &((*(_9018_mins))._field_Refers));
											}
											_iter_next_1ac7ee169:;
											++it;
											goto _iter_begin_1ac7ee169;
										}
										_iter_end_1ac7ee169:;
									};
								}
								_iter_next_1ac7e9be2:;
								++it;
								goto _iter_begin_1ac7e9be2;
							}
							_iter_end_1ac7e9be2:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1ac7e8c9b:;
					{
						jule::Ptr<_1c48bb719_FnIns> _999_f = _818_ref.unsafe_cast_ptr<_1c48bb719_FnIns>();;
						if (_1ac800be8_isLive(_self_, &(_999_f))) {
							goto _match_end_1ac7e8d23;
						};
						if ((((*(_999_f))._field_Owner != nullptr) && (!((*((*_999_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1ac806a45_isLive(_self_, &((*_999_f.alloc)._field_Owner))))) {
								_1ac8070ea_pushLive(_self_, (*_999_f.alloc)._field_Owner);
								_1c57e17a3_setReferencesAsLive(_self_, &((*(*(_999_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1ac80108e_pushLive(_self_, _999_f);
						_1c57e17a3_setReferencesAsLive(_self_, &((*_999_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1ac7e8ecc:;
					{
						jule::Ptr<_1c49715b0_Var> _1129_v = _818_ref.unsafe_cast_ptr<_1c49715b0_Var>();;
						if (_1ac80dc8e_isLive(_self_, &(_1129_v))) {
							goto _match_end_1ac7e8d23;
						};
						_1ac80e135_pushLive(_self_, _1129_v);
						_1c57e17a3_setReferencesAsLive(_self_, &((*(_1129_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ac7e9043:;
					{
						jule::Ptr<_1c48a6407_StructIns> _1199_s = _818_ref.unsafe_cast_ptr<_1c48a6407_StructIns>();;
						if (_1ac806a45_isLive(_self_, &(_1199_s))) {
							goto _match_end_1ac7e8d23;
						};
						_1ac8070ea_pushLive(_self_, _1199_s);
						_1c57e17a3_setReferencesAsLive(_self_, &((*(_1199_s))._field_Refers));
						{
							auto expr = &((*_1199_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1ac8151d5:;
							if (it != expr_end) {
								jule::Ptr<_1c48b8738_Fn> _12517_m = *it;
								{
									{
										auto expr = &((*(_12517_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1ac815d95:;
										if (it != expr_end) {
											jule::Ptr<_1c48bb719_FnIns> _12618_ins = *it;
											{
												if (_1ac800be8_isLive(_self_, &(_12618_ins))) {
													goto _iter_next_1ac815d95;
												};
												if (_1c56c14b8_IsTraitMethod(&(_1199_s), &(_12618_ins))) {
													_1ac80108e_pushLive(_self_, _12618_ins);
													_1c57e17a3_setReferencesAsLive(_self_, &((*(_12618_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Eq)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Gt)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_GtEq)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Lt)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_LtEq)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Shl)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Shr)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Add)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Sub)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Div)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Mul)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Mod)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitAnd)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitOr)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitXor)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Neg)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_Pos)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitNot)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_AddAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_SubAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_DivAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_MulAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_ModAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_ShlAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_ShrAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12618_ins == (*_1199_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1ac80108e_pushLive(_self_, _12618_ins);
														_1c57e17a3_setReferencesAsLive(_self_, &((*_12618_ins.alloc)._field_Refers));
													};
												};
												;
												jule::Ptr<_1c48b8738_Fn> _15711_dispose = _1c48a74a2_FindMethod(_1199_s, jule::Str::lit("Dispose", 7), false);;
												if (((_15711_dispose != nullptr) && static__1c4972baa_Dispose(_15711_dispose))) {
													jule::Ptr<_1c48bb719_FnIns> _15912_fins = (*_15711_dispose.alloc)._field_Instances[0LL];;
													_1ac80108e_pushLive(_self_, _15912_fins);
													_1c57e17a3_setReferencesAsLive(_self_, &((*(_15912_fins))._field_Refers));
												};
												jule::Ptr<_1c48b8738_Fn> _16411__str = _1c48a74a2_FindMethod(_1199_s, jule::Str::lit("Str", 3), false);;
												if (((_16411__str != nullptr) && static__1c4972e74_Str(_16411__str))) {
													jule::Ptr<_1c48bb719_FnIns> _16612_fins = (*(_16411__str))._field_Instances[0LL];;
													_1ac80108e_pushLive(_self_, _16612_fins);
													_1c57e17a3_setReferencesAsLive(_self_, &((*(_16612_fins))._field_Refers));
												};
											}
											_iter_next_1ac815d95:;
											++it;
											goto _iter_begin_1ac815d95;
										}
										_iter_end_1ac815d95:;
									};
								}
								_iter_next_1ac8151d5:;
								++it;
								goto _iter_begin_1ac8151d5;
							}
							_iter_end_1ac8151d5:;
						};
					}
				}
				_match_end_1ac7e8d23:;
			};
		}
	_iter_next_1ac7e7aad:;
	}
	_iter_end_1ac7e7aad:;;
}



inline void _1c57e1a5b_inits(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _17627_pkg) {
	{
		auto expr = &((*((*(_17627_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7e8493:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _17715_file = *it;
			{
				{
					auto expr = &((*(_17715_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac835cc7:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _17816_f = *it;
						{
							if ((*(_17816_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1c48bb719_FnIns> _18010_ins = (*(_17816_f))._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48bb719_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _18010_ins; __jule_collection; }));
								_1c57e17a3_setReferencesAsLive(_self_, &((*(_18010_ins))._field_Refers));
							};
						}
						_iter_next_1ac835cc7:;
						++it;
						goto _iter_begin_1ac835cc7;
					}
					_iter_end_1ac835cc7:;
				};
			}
			_iter_next_1ac7e8493:;
			++it;
			goto _iter_begin_1ac7e8493;
		}
		_iter_end_1ac7e8493:;
	};
}



inline void _1c57e1d14_collectLivePackage(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _18840_pkg) {
	_1c57e1a5b_inits(_self_, _18840_pkg);
	if (_205b64662_Test) {
		{
			auto expr = &((*((*(_18840_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac838846:;
			if (it != expr_end) {
				jule::Ptr<_1c49c8bab_SymbolTable> _19416_file = *it;
				{
					{
						auto expr = &((*(_19416_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac839270:;
						if (it != expr_end) {
							jule::Ptr<_1c48b8738_Fn> _19517_f = *it;
							{
								if (_1c56c2c06_HasDirective(&((*(_19517_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1c48bb719_FnIns> _19711_ins = (*_19517_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48bb719_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _19711_ins; __jule_collection; }));
									_1c57e17a3_setReferencesAsLive(_self_, &((*(_19711_ins))._field_Refers));
								};
							}
							_iter_next_1ac839270:;
							++it;
							goto _iter_begin_1ac839270;
						}
						_iter_end_1ac839270:;
					};
				}
				_iter_next_1ac838846:;
				++it;
				goto _iter_begin_1ac838846;
			}
			_iter_end_1ac838846:;
		};
	};
}



inline void _1c57e2012_collectLive(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac835b51:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _20715_used = *it;
			{
				if ((!((*(_20715_used))._field_Binded))) {
					_1c57e1d14_collectLivePackage(_self_, &((*_20715_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac835b51:;
			++it;
			goto _iter_begin_1ac835b51;
		}
		_iter_end_1ac835b51:;
	};
	_1c57e1d14_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1c48b8738_Fn> _2157_main = _1c493230c_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1c48bb719_FnIns> _2167_ins = (*(_2157_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48bb719_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2167_ins; __jule_collection; }));
	_1c57e17a3_setReferencesAsLive(_self_, &((*(_2167_ins))._field_Refers));
}



inline void _1c57e22ba_removeDeadGlobals(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _22139_vars) {
	jule::I64 _2227_i = 0LL;;
	while ((_2227_i < (*(_22139_vars)).len())) {
		{
			jule::Ptr<_1c49715b0_Var> _2244_v = (*(_22139_vars))[_2227_i];;
			if (_1ac80dc8e_isLive(_self_, &(_2244_v))) {
				(_2227_i)++;
				goto _iter_next_1ac840474;
			};
			(*(_22139_vars))=jule::append((*(_22139_vars)).slice(0LL, _2227_i),(*(_22139_vars)).slice((_2227_i + 1LL)));
		}
	_iter_next_1ac840474:;
	}
	_iter_end_1ac840474:;;
}



inline void _1c57e2573_removeDeadFns(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _23335_funcs) {
	jule::I64 _2347_i = 0LL;;
	while ((_2347_i < (*(_23335_funcs)).len())) {
		{
			jule::Ptr<_1c48b8738_Fn> _2368_f = (*(_23335_funcs))[_2347_i];;
			jule::I64 _2378_j = 0LL;;
			while ((_2378_j < (*(_2368_f))._field_Instances.len())) {
				{
					jule::Ptr<_1c48bb719_FnIns> _2395_ins = (*(_2368_f))._field_Instances[_2378_j];;
					if (_1ac800be8_isLive(_self_, &(_2395_ins))) {
						(_2378_j)++;
						goto _iter_next_1ac842bc4;
					};
					(*_2368_f.alloc)._field_Instances=jule::append((*_2368_f.alloc)._field_Instances.slice(0LL, _2378_j),(*_2368_f.alloc)._field_Instances.slice((_2378_j + 1LL)));
				}
			_iter_next_1ac842bc4:;
			}
			_iter_end_1ac842bc4:;;
			if (((*_2368_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_23335_funcs))=jule::append((*(_23335_funcs)).slice(0LL, _2347_i),(*(_23335_funcs)).slice((_2347_i + 1LL)));
				goto _iter_next_1ac8420ad;
			};
			(_2347_i)++;
		}
	_iter_next_1ac8420ad:;
	}
	_iter_end_1ac8420ad:;;
}



inline void _1c57e282b_removeDeadStructs(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _25439_structs) {
	jule::I64 _2557_i = 0LL;;
	while ((_2557_i < (*(_25439_structs)).len())) {
		{
			jule::Ptr<_1c48a3679_Struct> _2578_s = (*(_25439_structs))[_2557_i];;
			jule::I64 _2588_j = 0LL;;
			while ((_2588_j < (*(_2578_s))._field_Instances.len())) {
				{
					jule::Ptr<_1c48a6407_StructIns> _2609_ins = (*(_2578_s))._field_Instances[_2588_j];;
					_1c57e2573_removeDeadFns(_self_, &((*(_2609_ins))._field_Methods));
					if ((((*_2609_ins.alloc)._field_Methods.len() != 0LL) || _1ac806a45_isLive(_self_, &(_2609_ins)))) {
						(_2588_j)++;
						goto _iter_next_1ac84690e;
					};
					(*_2578_s.alloc)._field_Instances=jule::append((*_2578_s.alloc)._field_Instances.slice(0LL, _2588_j),(*_2578_s.alloc)._field_Instances.slice((_2588_j + 1LL)));
				}
			_iter_next_1ac84690e:;
			}
			_iter_end_1ac84690e:;;
			if (((*_2578_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_25439_structs))=jule::append((*(_25439_structs)).slice(0LL, _2557_i),(*(_25439_structs)).slice((_2557_i + 1LL)));
				goto _iter_next_1ac845c60;
			};
			(_2557_i)++;
		}
	_iter_next_1ac845c60:;
	}
	_iter_end_1ac845c60:;;
}



inline void _1c57e2ad4_removeDeadTraits(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>* _27638_traits) {
	jule::I64 _2777_i = 0LL;;
	while ((_2777_i < (*(_27638_traits)).len())) {
		{
			jule::Ptr<_1c48cc1b9_Trait> _2798_t = (*(_27638_traits))[_2777_i];;
			if ((!(_1ac7ea297_isLive(_self_, &(_2798_t))))) {
				(*(_27638_traits))=jule::append((*(_27638_traits)).slice(0LL, _2777_i),(*(_27638_traits)).slice((_2777_i + 1LL)));
				goto _iter_next_1ac84a506;
			};
			jule::I64 _2848_j = 0LL;;
			while ((_2848_j < (*(_2798_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1c48a3679_Struct> _2865_s = (*(_2798_t))._field_Implemented[_2848_j];;
					if (((*(_2865_s))._field_Instances.len() > 0LL)) {
						(_2848_j)++;
						goto _iter_next_1ac84ae30;
					};
					(*_2798_t.alloc)._field_Implemented=jule::append((*_2798_t.alloc)._field_Implemented.slice(0LL, _2848_j),(*_2798_t.alloc)._field_Implemented.slice((_2848_j + 1LL)));
				}
			_iter_next_1ac84ae30:;
			}
			_iter_end_1ac84ae30:;;
			(_2777_i)++;
		}
	_iter_next_1ac84a506:;
	}
	_iter_end_1ac84a506:;;
}



inline void _1c57e2d8c_removeDeadsFile(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c49c8bab_SymbolTable>* _29737_file) {
	_1c57e2573_removeDeadFns(_self_, &((*((*(_29737_file))))._field_Funcs));
	_1c57e282b_removeDeadStructs(_self_, &((*((*(_29737_file))))._field_Structs));
	_1c57e2ad4_removeDeadTraits(_self_, &((*((*(_29737_file))))._field_Traits));
	_1c57e22ba_removeDeadGlobals(_self_, &((*((*(_29737_file))))._field_Vars));
}



inline void _1c57e3145_removeDeadsPackage(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_, jule::Ptr<_1c4930c45_Package>* _30440_pkg) {
	{
		auto expr = &((*((*(_30440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac850aa0:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _30515_file = *it;
			{
				_1c57e2d8c_removeDeadsFile(_self_, &(_30515_file));
			}
			_iter_next_1ac850aa0:;
			++it;
			goto _iter_begin_1ac850aa0;
		}
		_iter_end_1ac850aa0:;
	};
}



inline void _1c57e3343_removeDeads(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac851320:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _31115_used = *it;
			{
				if (((!((*(_31115_used))._field_Binded)) && (!(_1c56c1c16_IsImplicitImport(_31115_used))))) {
					_1c57e3145_removeDeadsPackage(_self_, &((*_31115_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac851320:;
			++it;
			goto _iter_begin_1ac851320;
		}
		_iter_end_1ac851320:;
	};
	_1c57e3145_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1c57e3541_elimanate(jule::Ptr<_1c57e0928_ObjectDeadCode> _self_) {
	_1c57e2012_collectLive(_self_);
	_1c57e3343_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1c57e0928_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c57e4575_scopeDeadCode_eq(_1c57e4575_scopeDeadCode *_self_, _1c57e4575_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1c57e4a92_optimizeChild(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _3935_s) {
	jule::Ptr<_1c57e4575_scopeDeadCode> _407_sdc = jule::new_ptr<_1c57e4575_scopeDeadCode>(_1c57e4575_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c57e74ac_optimizeStmts(_407_sdc);
	};
}



inline void _1c57e4d4a_optimizeBodyChildExceptional(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _4950_s) {
	jule::Ptr<_1c57e4575_scopeDeadCode> _507_sdc = jule::new_ptr<_1c57e4575_scopeDeadCode>(_1c57e4575_scopeDeadCode{._field_parent=jule::Ptr<_1c57e4575_scopeDeadCode>(nullptr), ._field_s=(*(_4950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1c57e74ac_optimizeStmts(_507_sdc);
	};
}



inline void _1c57e5103_optimizeBodyChild(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ac86_Scope>* _5939_s) {
	jule::Ptr<_1c57e4575_scopeDeadCode> _607_sdc = jule::new_ptr<_1c57e4575_scopeDeadCode>(_1c57e4575_scopeDeadCode{._field_parent=jule::Ptr<_1c57e4575_scopeDeadCode>(nullptr), ._field_s=(*(_5939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1c57e74ac_optimizeStmts(_607_sdc);
	};
}



inline void _1c57e53ab_optimizeExprModel(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Any* _6839_model) {
	_1c57e8c1c_exprDeadCode _693_edc = static__1c57e90d5_new(&(_self_));;
	_1c57e938d_optimize(&_693_edc, _6839_model);
}



inline void _1c57e55a9_eliminateFollowed(_1c57e4575_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1c57e4575_scopeDeadCode> _807_parent = (*(_self_))._field_parent;;
	while ((_807_parent != nullptr)) {
		{
			{
				((*((*(_807_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_807_parent))._field_i + 1LL));;
			};
			_807_parent=(*_807_parent.alloc)._field_parent;
		}
	_iter_next_1ac866a72:;
	}
	_iter_end_1ac866a72:;;
}



inline void _1c57e5862_pushGoto(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490da03_GotoSt> _8929_gt) {
	jule::I64 _907_i = 0LL;;
	for (; (_907_i < (*((*(_self_))._field_labels)).len()); (_907_i)++) {
		{
			if (((*(_8929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_907_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ac869e3d:;
	}
	_iter_end_1ac869e3d:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490da03_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _8929_gt; __jule_collection; }));
}



inline void _1c57e5b1a_pushLabel(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490d629_Label> _9930_l) {
	jule::I64 _1007_i = 0LL;;
	while ((_1007_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_9930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_1007_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_1007_i), (*((*(_self_))._field_gotos)).slice((_1007_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1ac86c11b;
			};
			(_1007_i)++;
		}
	_iter_next_1ac86c11b:;
	}
	_iter_end_1ac86c11b:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490d629_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _9930_l; __jule_collection; }));
}



inline void _1c57e5dc3_optimizeRangeIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490cabd_RangeIter> _11238_it) {
	_1c57e53ab_optimizeExprModel(_self_, &((*((*(_11238_it))._field_Expr))._field_Model));
	_1c57e5103_optimizeBodyChild(_self_, &((*_11238_it.alloc)._field_Scope));
}



inline void _1c57e617b_optimizeWhileIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490c172_WhileIter> _11738_it) {
	_1c57e53ab_optimizeExprModel(_self_, &((*(_11738_it))._field_Expr));
	if (((*_11738_it.alloc)._field_Next != nullptr)) {
		_1c57e72ae_optimizeStmt(_self_, (*_11738_it.alloc)._field_Next);
	};
	_1c57e5103_optimizeBodyChild(_self_, &((*_11738_it.alloc)._field_Scope));
}



inline void _1c57e6434_optimizeInfIter(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490bbbb_InfIter> _12536_it) {
	_1c57e5103_optimizeBodyChild(_self_, &((*(_12536_it))._field_Scope));
}



inline void _1c57e66dc_optimizeConditional(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490b8be_Conditional> _12940_c) {
	{
		auto expr = &((*(_12940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac873e7a:;
		if (it != expr_end) {
			jule::Ptr<_1c490b1a4_If> _13015_case = *it;
			{
				if ((_13015_case != nullptr)) {
					_1c57e53ab_optimizeExprModel(_self_, &((*_13015_case.alloc)._field_Expr));
					_1c57e5103_optimizeBodyChild(_self_, &((*_13015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1ac873e7a:;
			++it;
			goto _iter_begin_1ac873e7a;
		}
		_iter_end_1ac873e7a:;
	};
	if (((*_12940_c.alloc)._field_Default != nullptr)) {
		if (((*_12940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1c57e4a92_optimizeChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1c57e5103_optimizeBodyChild(_self_, &((*(*(_12940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c57e6995_optimizeMatch(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490ee99_Match> _14734_m) {
	{
		auto expr = &((*(_14734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8774ab:;
		if (it != expr_end) {
			jule::Ptr<_1c49109c2_Case> _14815_case = *it;
			{
				{
					auto expr = &((*(_14815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac877e29:;
					if (it != expr_end) {
						jule::Ptr<_1c49ce024_Data> _14916_expr = *it;
						{
							_1c57e53ab_optimizeExprModel(_self_, &((*(_14916_expr))._field_Model));
						}
						_iter_next_1ac877e29:;
						++it;
						goto _iter_begin_1ac877e29;
					}
					_iter_end_1ac877e29:;
				};
				_1c57e5103_optimizeBodyChild(_self_, &((*_14815_case.alloc)._field_Scope));
			}
			_iter_next_1ac8774ab:;
			++it;
			goto _iter_begin_1ac8774ab;
		}
		_iter_end_1ac8774ab:;
	};
	if (((*_14734_m.alloc)._field_Default != nullptr)) {
		if (((*_14734_m.alloc)._field_Cases.len() == 0LL)) {
			_1c57e4a92_optimizeChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1c57e5103_optimizeBodyChild(_self_, &((*(*(_14734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1c57e6c4d_optimizeAssign(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490e383_Assign> _16535_assign) {
	_1c57e53ab_optimizeExprModel(_self_, &((*((*(_16535_assign))._field_Left))._field_Model));
	_1c57e53ab_optimizeExprModel(_self_, &((*((*_16535_assign.alloc)._field_Right))._field_Model));
}



inline void _1c57e7006_optimizeMultiAssign(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Ptr<_1c490e839_MultiAssign> _17040_assign) {
	{
		auto expr = &((*(_17040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac87c2a2:;
		if (it != expr_end) {
			jule::Ptr<_1c49ce024_Data> _17115_l = *it;
			{
				if ((_17115_l != nullptr)) {
					_1c57e53ab_optimizeExprModel(_self_, &((*_17115_l.alloc)._field_Model));
				};
			}
			_iter_next_1ac87c2a2:;
			++it;
			goto _iter_begin_1ac87c2a2;
		}
		_iter_end_1ac87c2a2:;
	};
	_1c57e53ab_optimizeExprModel(_self_, &((*_17040_assign.alloc)._field_Right));
}



inline void _1c57e72ae_optimizeStmt(jule::Ptr<_1c57e4575_scopeDeadCode> _self_, jule::Any _17933_st) {
	{
		auto &_match_expr{ _17933_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ac87de1e:;
			{
				jule::Ptr<_1c490ac86_Scope> _1828_scope = _17933_st.unsafe_cast_ptr<_1c490ac86_Scope>();;
				if ((*(_1828_scope))._field_Deferred) {
					_1c57e77a9_eliminateDeadCodeOfScope(_1828_scope);
				} else {
					_1c57e4a92_optimizeChild(_self_, &(_1828_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ac87db99:;
			{
				_1c57e5dc3_optimizeRangeIter(_self_, _17933_st.cast_ptr<_1c490cabd_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ac87de96:;
			{
				_1c57e617b_optimizeWhileIter(_self_, _17933_st.cast_ptr<_1c490c172_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ac87e01d:;
			{
				_1c57e6434_optimizeInfIter(_self_, _17933_st.cast_ptr<_1c490bbbb_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ac87e095:;
			{
				_1c57e66dc_optimizeConditional(_self_, _17933_st.cast_ptr<_1c490b8be_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ac87e11c:;
			{
				_1c57e6995_optimizeMatch(_self_, _17933_st.cast_ptr<_1c490ee99_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1ac87e194:;
			{
				_1c57e6c4d_optimizeAssign(_self_, _17933_st.cast_ptr<_1c490e383_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ac87e21b:;
			{
				_1c57e7006_optimizeMultiAssign(_self_, _17933_st.cast_ptr<_1c490e839_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac87e293:;
			{
				jule::Ptr<_1c49ce024_Data> _2038_d = _17933_st.unsafe_cast_ptr<_1c49ce024_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1ac87dccb;
				};
				{
					auto &_match_expr{ (*(_2038_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1ac884bb1:;
						{
							_1c57e55a9_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1ac8852ee:;
						{
							_1c57e53ab_optimizeExprModel(_self_, &((*(_2038_d))._field_Model));
						}
					}
					_match_end_1ac885299:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ac87e31a:;
			{
				_1c57e55a9_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1ac87e392:;
			{
				_1c57e5862_pushGoto(_self_, _17933_st.cast_ptr<_1c490da03_GotoSt>(&__jule_any_type41));
				_1c57e55a9_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1ac87e419:;
			{
				_1c57e5b1a_pushLabel(_self_, _17933_st.cast_ptr<_1c490d629_Label>(&__jule_any_type20));
			}
		}
		_match_end_1ac87dccb:;
	};
}



inline void _1c57e74ac_optimizeStmts(jule::Ptr<_1c57e4575_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c57e72ae_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ac887bc5:;
	}
	_iter_end_1ac887bc5:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c57e4575_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c57e8c1c_exprDeadCode_eq(_1c57e8c1c_exprDeadCode *_self_, _1c57e8c1c_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1c57e8c1c_exprDeadCode static__1c57e90d5_new(jule::Ptr<_1c57e4575_scopeDeadCode>* _1821_s) {
	return _1c57e8c1c_exprDeadCode{._field_s=(*(_1821_s))};;
}



inline void _1c57e938d_optimize(_1c57e8c1c_exprDeadCode* _self_, jule::Any* _2425_model) {
	jule::Ptr<_1c56b8867_ExprInspector> _257_inspector = static__1c56b8c0d_New();;
	_1c56b95d2_Inspect(_257_inspector.ptr(), _2425_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ac88a7ee, jule::Ptr<__jule_anon_1ac88a7ee_ctx>::make(__jule_anon_1ac88a7ee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac88a7ee_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1c57e8c1c_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde173e_ExceptionalForwardingExprModel_eq(_21dde173e_ExceptionalForwardingExprModel *_self_, _21dde173e_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde173e_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde1ac4_SwapExprModel_eq(_21dde1ac4_SwapExprModel *_self_, _21dde1ac4_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde1ac4_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde1e9d_EmptyCompareExprModel_eq(_21dde1e9d_EmptyCompareExprModel *_self_, _21dde1e9d_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde1e9d_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde2322_RefExprModel_eq(_21dde2322_RefExprModel *_self_, _21dde2322_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde2322_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde2795_StrCompExprModel_eq(_21dde2795_StrCompExprModel *_self_, _21dde2795_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde2795_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde2d28_MutSlicingExprModel_eq(_21dde2d28_MutSlicingExprModel *_self_, _21dde2d28_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde2d28_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde3125_UnsafeBinaryExprModel_eq(_21dde3125_UnsafeBinaryExprModel *_self_, _21dde3125_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde3125_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde34aa_UnsafeIndexingExprModel_eq(_21dde34aa_UnsafeIndexingExprModel *_self_, _21dde34aa_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde34aa_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde3884_PushToSliceExprModel_eq(_21dde3884_PushToSliceExprModel *_self_, _21dde3884_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde3884_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde3c5d_AppendToSliceExprModel_eq(_21dde3c5d_AppendToSliceExprModel *_self_, _21dde3c5d_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde3c5d_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde4137_StrRuneIter_eq(_21dde4137_StrRuneIter *_self_, _21dde4137_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde4137_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde4434_UnsafeDerefExprModel_eq(_21dde4434_UnsafeDerefExprModel *_self_, _21dde4434_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde4434_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde4731_UnsafeCastingExprModel_eq(_21dde4731_UnsafeCastingExprModel *_self_, _21dde4731_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde4731_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _21dde5413_nilVar_eq(_21dde5413_nilVar *_self_, _21dde5413_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}



std::ostream &operator<<(std::ostream &_Stream, _21dde5413_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _21dde5be9_pushVar(_21dde5754_nils* _self_, jule::Uintptr _2923_var, jule::Bool _2937_safe) {
	if (((!(_1c56db4b1_Access)) || (_2923_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8db60d:;
		if (it != expr_end) {
			_21dde5413_nilVar _3415_v = *it;
			{
				if ((_3415_v._field_var == _2923_var)) {
					_3415_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ac8db60d:;
			++it;
			goto _iter_begin_1ac8db60d;
		}
		_iter_end_1ac8db60d:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8dc488:;
		if (it != expr_end) {
			_21dde5413_nilVar _4115_v = *it;
			{
				if ((_4115_v._field_var == 0LLU)) {
					_4115_v._field_var=_2923_var;
					_4115_v._field_safe=_2937_safe;
					return;;
				};
			}
			_iter_next_1ac8dc488:;
			++it;
			goto _iter_begin_1ac8dc488;
		}
		_iter_end_1ac8dc488:;
	};
	{ jule::Slice<_21dde5413_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_21dde5413_nilVar{._field_var=_2923_var, ._field_safe=_2937_safe}); };
}



inline jule::Bool _21dde603a_removeVar(_21dde5754_nils* _self_, jule::Uintptr _5225_var) {
	if ((_5225_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8de468:;
			if (it != expr_end) {
				_21dde5413_nilVar _5416_v = *it;
				{
					if ((_5416_v._field_var == _5225_var)) {
						_5416_v._field_var=0LLU;
						_5416_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1ac8de468:;
				++it;
				goto _iter_begin_1ac8de468;
			}
			_iter_end_1ac8de468:;
		};
	};
	return false;;
}



inline jule::Bool _21dde637b_isSafe(_21dde5754_nils* _self_, jule::Uintptr _6622_var) {
	if ((_6622_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac8e0ac9:;
			if (it != expr_end) {
				_21dde5413_nilVar _6811_v = *it;
				{
					if ((_6811_v._field_var == _6622_var)) {
						return _6811_v._field_safe;;
					};
				}
				_iter_next_1ac8e0ac9:;
				++it;
				goto _iter_begin_1ac8e0ac9;
			}
			_iter_end_1ac8e0ac9:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _21dde5754_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c56c637a_scopeOptimizer_eq(_1c56c637a_scopeOptimizer *_self_, _1c56c637a_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1c56c637a_scopeOptimizer> static__1c56c6930_new(jule::Ptr<_1c490ac86_Scope> _5120_scope) {
	jule::Ptr<_1c56c637a_scopeOptimizer> _527_sc = jule::new_ptr<_1c56c637a_scopeOptimizer>(_1c56c637a_scopeOptimizer{._field_parent=jule::Ptr<_1c56c637a_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_5120_scope, ._field_data=jule::new_ptr<_1c56d6236_data>(_1c56d6236_data{._field_boundary=jule::new_ptr<_1c56d7bb6_boundary>(_1c56d7bb6_boundary{._field_vars=jule::Slice<_1c56d7875_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_21dde5754_nils>(_21dde5754_nils{._field_vars=jule::Slice<_21dde5413_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1c56d35a7_dynamic>(_1c56d35a7_dynamic{._field_vars=jule::Slice<_1c56d3266_dynamicVar>(nullptr)})})});;
	return _527_sc;;
}



inline void _1c56c6bd8_setCurrentStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Any _6335_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6335_stmt))))));
}



inline void _1c56c6dd6_removeCurrent(jule::Ptr<_1c56c637a_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1c56c716c_isLastStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_) {
	jule::Ptr<_1c56c637a_scopeOptimizer> _737_r = _self_;;
	for (; (_737_r != nullptr); _737_r=(*_737_r.alloc)._field_parent) {
		{
			if ((((*((*_737_r.alloc)._field_scope))._field_Stmts.len() - (*_737_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1ac8eccc3:;
	}
	_iter_end_1ac8eccc3:;;
	return true;;
}



inline jule::Bool _1c56c7403_isIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_) {
	jule::Ptr<_1c56c637a_scopeOptimizer> _837_r = (*(_self_))._field_parent;;
	for (; (_837_r != nullptr); _837_r=(*_837_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_837_r))._field_scope))._field_Stmts[(*(_837_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1ac900534:;
					{
						return true;;
					}
				}
				_match_end_1ac90049b:;
			};
		}
	_iter_next_1ac8ee8b8:;
	}
	_iter_end_1ac8ee8b8:;;
	return false;;
}



inline void _1c56c76ab_optimizeData(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49ce024_Data> _9533_d) {
	{
		auto &_match_expr{ (*(_9533_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac9016cd:;
			{
				jule::Ptr<_1c48ac83c_FnCallExprModel> _988_m = (*(_9533_d))._field_Model.unsafe_cast_ptr<_1c48ac83c_FnCallExprModel>();;
				if (_205b65025_Production) {
					if (((!(_1c48bcbd2_IsBuiltin((*(_988_m))._field_Func.ptr()))) && _1c56c183c_IsStdPackage(&((*((*((*((*(*(_988_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1c56c6bd8_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1c56cd63a_optimizeData(&((*(_9533_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1c56dc935_Exceptional && (*(*((*(_988_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_988_m.alloc)._field_Except != nullptr)) && ((*(*(_988_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1c56c0495_IsForwarded(&((*_988_m.alloc)._field_Except))) && _1c56c716c_isLastStmt(_self_)) && (!(_1c56c7403_isIter(_self_))))) {
					_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde173e_ExceptionalForwardingExprModel>(_21dde173e_ExceptionalForwardingExprModel{._field_Expr=_988_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1ac901667:;
	};
	static__1c56cd63a_optimizeData(&((*_9533_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c56c7964_optimizeVar(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49715b0_Var> _12132_v) {
	if (((*(_12132_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _21dde6db5_isNilValidType((*((*_12132_v.alloc)._field_Kind))._field_Kind)) && _21dde6aeb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_12132_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_21dde5be9_pushVar((*((*(_self_))._field_data))._field_nils, _21dde7206_getNilVar(jule::Any(_12132_v, &__jule_any_type8)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1c4a1020e_TypeKind> _1309_kind = _1c56d4d7d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_12132_v))._field_Kind.alloc)._field_Kind, (*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1309_kind != nullptr)) {
				if (_1c56d494e_isDynamicValidType((*(*(_12132_v))._field_Kind.alloc)._field_Kind)) {
					_1c56d3a4c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c56d51be_getDynamicVar(jule::Any(_12132_v, &__jule_any_type8)), _1309_kind);
				};
			};
		};
		static__1c56cd63a_optimizeData(&((*(*((*(_12132_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1c56c7c1c_optimizeConditional(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490b8be_Conditional> _14240_c) {
	_1c56d5c3b_dataCheckpoint _1437_checkpoint = _1c56d65dd_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac90ebc5:;
		if (it != expr_end) {
			jule::Ptr<_1c490b1a4_If> _14415_elif = *it;
			{
				static__1c56cd63a_optimizeData(&((*(_14415_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1c56ca89b_optimizeChild(_self_, (*_14415_elif.alloc)._field_Scope);
				if ((((*(_14240_c))._field_Elifs.len() > 1LL) || ((*_14240_c.alloc)._field_Default != nullptr))) {
					_1c56d6896_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
				};
			}
			_iter_next_1ac90ebc5:;
			++it;
			goto _iter_begin_1ac90ebc5;
		}
		_iter_end_1ac90ebc5:;
	};
	if (((*_14240_c.alloc)._field_Default != nullptr)) {
		_1c56ca89b_optimizeChild(_self_, (*(*(_14240_c))._field_Default.alloc)._field_Scope);
		_1c56d6896_loadCheckpoint((*(_self_))._field_data, &(_1437_checkpoint));
	};
	if ((!(_1c56dbdda_Cond))) {
		return;;
	};
	jule::Bool _1607_constCase = false;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac913811:;
		if (it != expr_end) {
			jule::I64 _1638_i = it - expr->begin();
			jule::Ptr<_1c490b1a4_If> _16315_elif = *it;
			{
				if ((!(_1c56cae2e_isConstantValidConditionalCase(&(_16315_elif))))) {
					goto _iter_next_1ac913811;
				};
				_1607_constCase=true;
				((*(_14240_c))._field_Elifs).mut_slice(0LL, _1638_i);;
				(*_14240_c.alloc)._field_Default=jule::new_ptr<_1c490b4a1_Else>(_1c490b4a1_Else{._field_Scope=(*(_16315_elif))._field_Scope});
				goto _iter_end_1ac913811;
			}
			_iter_next_1ac913811:;
			++it;
			_1638_i++;
			goto _iter_begin_1ac913811;
		}
		_iter_end_1ac913811:;
	};
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c490b1a4_If>* _1807_i = (&((*(_14240_c))._field_Elifs[0LL]));;
	jule::Ptr<_1c490b1a4_If>* _1813_end = (&((*_14240_c.alloc)._field_Elifs[((*_14240_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1807_i <= _1813_end); (_1807_i)++) {
		{
			{
				if (_1c56cb847_isUnreachableConditionalCase(&((*(_1807_i))))) {
					(*(_1807_i))=nullptr;
				};
			};
		}
	_iter_next_1ac9164a1:;
	}
	_iter_end_1ac9164a1:;;
	if (((*_14240_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1607_constCase))) {
		return;;
	};
	jule::I64 _1997_only = -1LL;;
	{
		auto expr = &((*_14240_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac9187c2:;
		if (it != expr_end) {
			jule::I64 _2007_j = it - expr->begin();
			jule::Ptr<_1c490b1a4_If> _20010_elif = *it;
			{
				if ((_20010_elif != nullptr)) {
					if ((_1997_only != -1LL)) {
						return;;
					};
					_1997_only=_2007_j;
				};
			}
			_iter_next_1ac9187c2:;
			++it;
			_2007_j++;
			goto _iter_begin_1ac9187c2;
		}
		_iter_end_1ac9187c2:;
	};
	if ((_1997_only != -1LL)) {
		_1c56c6bd8_setCurrentStmt(_self_, jule::Any((*((*_14240_c.alloc)._field_Elifs[_1997_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1c56c813a_buildDefaultConstantTrueCase(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c49109c2_Case> _21649_case, jule::I64* _21667_i, jule::Ptr<_1c490ee99_Match>* _21680_m) {
	(*(_21649_case))._field_Exprs=nullptr;
	jule::I64 _2183_start = (*(_21667_i));;
	_julec_label_1ac91acad:;
	for (;;) {
		{
			if (((*((*_21649_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ac91ad46;
			};
			jule::Any *_2249_stmt = &((*(*(_21649_case))._field_Scope.alloc)._field_Stmts[((*(*(_21649_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2249_stmt)) };
				
				if (_match_expr.type == &__jule_any_type48) {
					_case_begin_1ac91d475:;
					{
						((*(_21667_i)))++;
						if (((*(_21667_i)) >= (*((*(_21680_m))))._field_Cases.len())) {
							(*(_2249_stmt))=jule::Any((*((*((*(_21680_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1ac91ad46;
						};
						_21649_case=(*((*(_21680_m))))._field_Cases[(*(_21667_i))];
						(*(_2249_stmt))=jule::Any((*_21649_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1ac91d585:;
					{
						goto _iter_end_1ac91ad46;
					}
				}
				_match_end_1ac91d420:;
			};
		}
	_iter_next_1ac91ad46:;
	}
	_iter_end_1ac91ad46:;;
	(*((*(_21680_m))))._field_Default=(*((*(_21680_m))))._field_Cases[_2183_start];
	((*((*(_21680_m))))._field_Cases).mut_slice(0LL, _2183_start);;
}



inline void _1c56c83e3_optimizeMatch(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ee99_Match> _24234_m) {
	jule::Uintptr _2437_var = 0LLU;;
	if ((_1c56dce96_Dynamic && (*(_24234_m))._field_TypeMatch)) {
		_2437_var=_1c56d51be_getDynamicVar((*((*_24234_m.alloc)._field_Expr))._field_Model);
	};
	_1c56d5c3b_dataCheckpoint _2477_checkpoint = _1c56d65dd_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac922b1c:;
		if (it != expr_end) {
			jule::Ptr<_1c49109c2_Case> _24815_case = *it;
			{
				{
					auto expr = &((*(_24815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac923502:;
					if (it != expr_end) {
						jule::Ptr<_1c49ce024_Data> _24916_expr = *it;
						{
							static__1c56cd63a_optimizeData(&((*(_24916_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1ac923502:;
						++it;
						goto _iter_begin_1ac923502;
					}
					_iter_end_1ac923502:;
				};
				if ((((*_24815_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1c4a1020e_TypeKind> _2549_kind = _1c56d4d7d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24815_case))._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_2549_kind != nullptr)) {
						_1c56d3a4c_pushVar((*((*(_self_))._field_data))._field_dynamic, _2437_var, _2549_kind);
					} else {
						_1c56d3d8d_removeVar((*((*(_self_))._field_data))._field_dynamic, _2437_var);
					};
				};
				_1c56ca89b_optimizeChild(_self_, (*_24815_case.alloc)._field_Scope);
				if ((((*_24234_m.alloc)._field_Cases.len() > 1LL) || ((*_24234_m.alloc)._field_Default != nullptr))) {
					_1c56d6896_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
				};
			}
			_iter_next_1ac922b1c:;
			++it;
			goto _iter_begin_1ac922b1c;
		}
		_iter_end_1ac922b1c:;
	};
	if (((*_24234_m.alloc)._field_Default != nullptr)) {
		_1c56ca89b_optimizeChild(_self_, (*(*(_24234_m))._field_Default.alloc)._field_Scope);
		_1c56d6896_loadCheckpoint((*(_self_))._field_data, &(_2477_checkpoint));
	};
	if ((!(_1c56dbdda_Cond))) {
		return;;
	};
	jule::Bool _2757_constCase = false;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac929e43:;
		if (it != expr_end) {
			jule::I64 _27812_i = it - expr->begin();
			jule::Ptr<_1c49109c2_Case> _27819_case = *it;
			{
				if ((!(_1c56cb506_isConstantValidMatchCase(&(_27819_case))))) {
					goto _iter_next_1ac929e43;
				};
				_2757_constCase=true;
				_1c56c813a_buildDefaultConstantTrueCase(_self_, _27819_case, &(_27812_i), &(_24234_m));
				goto _iter_end_1ac929e43;
			}
			_iter_next_1ac929e43:;
			++it;
			_27812_i++;
			goto _iter_begin_1ac929e43;
		}
		_iter_end_1ac929e43:;
	};
	if (((*_24234_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1c49109c2_Case>* _2927_i = (&((*(_24234_m))._field_Cases[0LL]));;
	jule::Ptr<_1c49109c2_Case>* _2933_end = (&((*_24234_m.alloc)._field_Cases[((*_24234_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2927_i <= _2933_end); (_2927_i)++) {
		{
			{
				if (_1c56cbacd_isUnreachableMatchCase(&((*(_2927_i))))) {
					(*(_2927_i))=nullptr;
				};
			};
		}
	_iter_next_1ac92ca39:;
	}
	_iter_end_1ac92ca39:;;
	if ((!(_2757_constCase))) {
		return;;
	};
	jule::I64 _3077_only = -1LL;;
	{
		auto expr = &((*_24234_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac92dcc1:;
		if (it != expr_end) {
			jule::I64 _3087_j = it - expr->begin();
			jule::Ptr<_1c49109c2_Case> _30810_case = *it;
			{
				if ((_30810_case != nullptr)) {
					if ((_3077_only != -1LL)) {
						return;;
					};
					_3077_only=_3087_j;
				};
			}
			_iter_next_1ac92dcc1:;
			++it;
			_3087_j++;
			goto _iter_begin_1ac92dcc1;
		}
		_iter_end_1ac92dcc1:;
	};
	if ((_3077_only != -1LL)) {
		_1c56c6bd8_setCurrentStmt(_self_, jule::Any((*((*_24234_m.alloc)._field_Cases[_3077_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1c56c869b_optimizeRangeIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490cabd_RangeIter> _32438_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32438_it))._field_KeyA != nullptr))) {
		_1c56d815b_pushVar((*((*(_self_))._field_data))._field_boundary, _1c56da0e7_getBoundaryVar((*((*_32438_it.alloc)._field_Expr))._field_Model), jule::Any((*_32438_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1c56ca89b_optimizeChild(_self_, (*_32438_it.alloc)._field_Scope);
	if (_1c56dcbdd_Iter) {
		{
			auto &_match_expr{ (*((*(_32438_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1ac933963:;
				{
					jule::Ptr<_1c48abe8a_CastingExprModel> _3369_cem = (*((*(_32438_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c48abe8a_CastingExprModel>();;
					jule::Ptr<_1c4a17cd8_Prim> _3375_eprim = _1c4a12893_Prim((*(_3369_cem))._field_ExprKind.ptr());;
					if (((_3375_eprim == nullptr) || (!(_1c4a1b2a3_IsStr(_3375_eprim.ptr()))))) {
						goto _match_end_1ac9338ec;
					};
					jule::Ptr<_1c4a1c2d7_Slc> _3419_s = _1c4a138e9_Slc((*_3369_cem.alloc)._field_Kind.ptr());;
					if ((_3419_s == nullptr)) {
						goto _match_end_1ac9338ec;
					};
					jule::Ptr<_1c4a17cd8_Prim> _3455_prim = _1c4a12893_Prim((*(_3419_s))._field_Elem.ptr());;
					if ((_3455_prim == nullptr)) {
						goto _match_end_1ac9338ec;
					};
					{
						
						if (_1c4a19713_IsU8(_3455_prim.ptr())) {
							_case_begin_1ac937318:;
							{
								(*_32438_it.alloc)._field_Expr=(*_3369_cem.alloc)._field_Expr;
							}
						}
						else if (_1c4a191e6_IsI32(_3455_prim.ptr())) {
							_case_begin_1ac9374d3:;
							{
								static__1c56cd63a_optimizeData(&((*((*_3369_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde4137_StrRuneIter>(_21dde4137_StrRuneIter{._field_Expr=(*_3369_cem.alloc)._field_Expr, ._field_Base=_32438_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1ac93712b:;
					};
				}
			}
			_match_end_1ac9338ec:;
		};
	};
	static__1c56cd63a_optimizeData(&((*(*(_32438_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1c56c8954_optimizeWhileIter(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490c172_WhileIter> _36938_it) {
	static__1c56cd63a_optimizeData(&((*(_36938_it))._field_Expr), &((*(_self_))._field_data));
	_1c56ca5e3_optimizeStmt(_self_, (*_36938_it.alloc)._field_Next);
	_1c56ca89b_optimizeChild(_self_, (*_36938_it.alloc)._field_Scope);
}



inline jule::Bool _1c56c8c95_substr(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _37527_a) {
	if (((*((*(_37527_a))._field_Op))._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac93c2da:;
			{
				jule::Ptr<_1c48ae586_SlicingExprModel> _3818_sem = (*((*(_37527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1c48ae586_SlicingExprModel>();;
				if (_21dde0b17_equalModels((*((*_37527_a.alloc)._field_Left))._field_Model, (*(_3818_sem))._field_Expr)) {
					_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde2d28_MutSlicingExprModel>(_21dde2d28_MutSlicingExprModel{._field_Token=(*_3818_sem.alloc)._field_Token, ._field_Expr=(*_3818_sem.alloc)._field_Expr, ._field_Left=(*_3818_sem.alloc)._field_Left, ._field_Right=(*_3818_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1ac93c274:;
	};
	return false;;
}



inline jule::Bool _1c56c90d6_strAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _39530_a) {
	if ((!(_1c56dc12c_Str))) {
		return false;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _3993_lp = _1c4a12893_Prim((*((*(_39530_a))._field_Left))._field_Kind.ptr());;
	if (((_3993_lp == nullptr) || (!(_1c4a1b2a3_IsStr(_3993_lp.ptr()))))) {
		return false;;
	};
	return _1c56c8c95_substr(_self_, _39530_a);;
}



inline jule::Bool _1c56c9427_sliceAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _40632_a) {
	if (((!(_1c56dc3c4_Slice)) || (_1c4a138e9_Slc((*((*(_40632_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1c56c8c95_substr(_self_, _40632_a);;
}



inline void _1c56c96d0_optimizePostfix(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ddcc_Postfix> _41436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1c56d979a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41436_postfix))._field_Expr);
	};
	static__1c56cd63a_optimizeData(&((*_41436_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1c56c9988_optimizeAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e383_Assign> _42135_assign) {
	if ((((*((*(_42135_assign))._field_Op))._field_Id == static_cast<jule::U64>(71LLU)) && _21dde0b17_equalModels((*((*_42135_assign.alloc)._field_Left))._field_Model, (*((*_42135_assign.alloc)._field_Right))._field_Model))) {
		_1c56c6dd6_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1c56d9a64_isBoundaryRiskyType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
			_1c56d979a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_21dde6aeb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Right.alloc)._field_Model)) {
			if (_21dde6db5_isNilValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				;
				_21dde5be9_pushVar((*((*(_self_))._field_data))._field_nils, _21dde7206_getNilVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_21dde6733_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1c4a1020e_TypeKind> _4458_kind = _1c56d4d7d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Right.alloc)._field_Kind, (*(*(_42135_assign))._field_Right.alloc)._field_Model);;
		if ((_4458_kind != nullptr)) {
			if (_1c56d494e_isDynamicValidType((*(*(_42135_assign))._field_Left.alloc)._field_Kind)) {
				_1c56d3a4c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c56d51be_getDynamicVar((*(*(_42135_assign))._field_Left.alloc)._field_Model), _4458_kind);
			};
		} else {
			_1c56d4641_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_42135_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1c56c90d6_strAssign(_self_, _42135_assign) || _1c56c9427_sliceAssign(_self_, _42135_assign)) {
			_case_begin_1ac94b86b:;
			{
				return;;
			}
		}
		_match_end_1ac94d4d8:;
	};
	static__1c56cd63a_optimizeData(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1c56cd63a_optimizeData(&((*(*(_42135_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac9520ad:;
			{
				if (((!(_1c56db208_Math)) || (_1c4a13e16_Struct((*(*(_42135_assign))._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1ac952047;
				};
				jule::U64 _4714_oldId;
				jule::Str _47111_oldKind;
				({
					jule::U64 ___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_42135_assign))._field_Op.alloc)._field_Kind;
					_4714_oldId = ___jule_assign_arg;
					_47111_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42135_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(43LLU)) {
						_case_begin_1ac954d5d:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(63LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U64>(44LLU)) {
						_case_begin_1ac954dc4:;
						{
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(64LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1ac954610:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:5"));;
						}
					}
					_match_end_1ac95492e:;
				};
				jule::Ptr<_1c48aa85c_BinaryExprModel> _4828_b = jule::new_ptr<_1c48aa85c_BinaryExprModel>(_1c48aa85c_BinaryExprModel{._field_Left=(*_42135_assign.alloc)._field_Left, ._field_Right=(*_42135_assign.alloc)._field_Right, ._field_Op=(*_42135_assign.alloc)._field_Op});;
				jule::Any _4878_model = jule::Any(_4828_b, &__jule_any_type111);;
				static__1c56cd63a_optimizeData(&(_4878_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ (*(((jule::Any*)((&(_4878_model)))))) };
					
					if (_match_expr.type == &__jule_any_type123) {
						_case_begin_1ac958966:;
						{
							(*_42135_assign.alloc)._field_Right=jule::new_ptr<_1c48aa362_OperandExprModel>((*(*(_42135_assign))._field_Right.alloc));
							(*(_4828_b))._field_Op=jule::new_ptr<_1c486c19d_Token>((*(*(_4828_b))._field_Op.alloc));
							(*(*(_42135_assign))._field_Op.alloc)._field_Id=static_cast<jule::U64>(71LLU);
							(*(*(_42135_assign))._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*(_42135_assign))._field_Right.alloc)._field_Model=_4878_model;
							return;;
						}
					}
					_match_end_1ac9588de:;
				};
				(*(*(_42135_assign))._field_Op.alloc)._field_Id=_4714_oldId;
				(*(*(_42135_assign))._field_Op.alloc)._field_Kind=_47111_oldKind;
				return;;
			}
		}
		_match_end_1ac952047:;
	};
	if (_1c56dae0b_Append) {
		{
			auto &_match_expr{ (*((*(_42135_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1ac95bd32:;
				{
					jule::Ptr<_1c48b2db4_BuiltinAppendCallExprModel> _5089_m = (*(*(_42135_assign))._field_Right.alloc)._field_Model.cast_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1c56d2474_areSameLvalueExprModel(&((*(*(_42135_assign))._field_Left.alloc)._field_Model), &((*(_5089_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5089_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type77) {
							_case_begin_1ac95d0b9:;
							{
								_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde3884_PushToSliceExprModel>(_21dde3884_PushToSliceExprModel{._field_Dest=(*_5089_m.alloc)._field_Dest, ._field_Elems=(*(_5089_m))._field_Elements.unsafe_cast_ptr<_1c48acc16_SliceExprModel>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1ac95d87d:;
							{
								_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde3c5d_AppendToSliceExprModel>(_21dde3c5d_AppendToSliceExprModel{._field_Dest=(*(*(_42135_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5089_m.alloc)._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1ac95d828:;
					};
				}
			}
			_match_end_1ac95bcbb:;
		};
	};
}



inline jule::Bool _1c56c9cc9_tryOptimizeSwap(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e839_MultiAssign>* _53037_assign) {
	if (((((!(_1c56dc67c_Assign)) || ((*((*(_53037_assign))))._field_Left.len() != 2LL)) || ((*((*(_53037_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_53037_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1c48b1027_TupleExprModel> _53511_tup;;
	{
		auto &_match_expr{ (*((*(_53037_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac962453:;
			{
				_53511_tup=(*((*(_53037_assign))))._field_Right.unsafe_cast_ptr<_1c48b1027_TupleExprModel>();
			}
		}
		_match_end_1ac9623dc:;
	};
	if (((_53511_tup == nullptr) || ((*(_53511_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_21dde0b17_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model) && _21dde0b17_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) {
		_1c56c6dd6_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_21dde0b17_equalModels((*((*((*(_53037_assign))))._field_Left[0LL]))._field_Model, (*((*(_53511_tup))._field_Datas[1LL]))._field_Model))) || (!(_21dde0b17_equalModels((*((*((*(_53037_assign))))._field_Left[1LL]))._field_Model, (*((*(_53511_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_21dde1ac4_SwapExprModel> _5577_model = jule::new_ptr<_21dde1ac4_SwapExprModel>(_21dde1ac4_SwapExprModel{._field_Left=(*((*(_53037_assign))))._field_Left[0LL], ._field_Right=(*((*(_53037_assign))))._field_Left[1LL]});;
	static__1c56cd63a_optimizeData(&((*((*(_5577_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1c56cd63a_optimizeData(&((*((*_5577_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1c56c6bd8_setCurrentStmt(_self_, jule::Any(_5577_model, &__jule_any_type126));
	return true;;
}



inline void _1c56ca082_optimizeMultiAssign(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490e839_MultiAssign> _56740_assign) {
	if (_1c56c9cc9_tryOptimizeSwap(_self_, &(_56740_assign))) {
		return;;
	};
	jule::Ptr<_1c48b1027_TupleExprModel> _5747_tup = static_cast<jule::Ptr<_1c48b1027_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56740_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac96ae51:;
			{
				_5747_tup=(*(_56740_assign))._field_Right.unsafe_cast_ptr<_1c48b1027_TupleExprModel>();
			}
		}
		_match_end_1ac96adda:;
	};
	{
		auto expr = &((*(_56740_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac96a082:;
		if (it != expr_end) {
			jule::I64 _5798_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _57915_l = *it;
			{
				if ((_57915_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1c56d9a64_isBoundaryRiskyType((*_57915_l.alloc)._field_Kind)) {
							_1c56d979a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_57915_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_5747_tup != nullptr) && _21dde6aeb_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Model))) {
							if (_21dde6db5_isNilValidType((*_57915_l.alloc)._field_Kind)) {
								;
								_21dde5be9_pushVar((*((*(_self_))._field_data))._field_nils, _21dde7206_getNilVar((*_57915_l.alloc)._field_Model), true);
							};
						} else {
							_21dde6733_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_57915_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_5747_tup != nullptr))) {
						jule::Ptr<_1c4a1020e_TypeKind> _59710_kind = _1c56d4d7d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_5747_tup.alloc)._field_Datas[_5798_i]))._field_Kind, (*((*(_5747_tup))._field_Datas[_5798_i]))._field_Model);;
						if ((_59710_kind != nullptr)) {
							if (_1c56d494e_isDynamicValidType((*_57915_l.alloc)._field_Kind)) {
								_1c56d3a4c_pushVar((*((*(_self_))._field_data))._field_dynamic, _1c56d51be_getDynamicVar((*_57915_l.alloc)._field_Model), _59710_kind);
							};
						} else {
							_1c56d4641_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_57915_l.alloc)._field_Model);
						};
					};
					static__1c56cd63a_optimizeData(&((*_57915_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1ac96a082:;
			++it;
			_5798_i++;
			goto _iter_begin_1ac96a082;
		}
		_iter_end_1ac96a082:;
	};
	static__1c56cd63a_optimizeData(&((*_56740_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1c56ca33a_optimizeRet(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c4911561_RetSt> _61332_r) {
	static__1c56cd63a_optimizeData(&((*(_61332_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1c56dc935_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_61332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1aabc1a5a:;
			{
				goto _match_end_1aabc1b15;
			}
		}
		else {
			_case_begin_1aabc1b6a:;
			{
				return;;
			}
		}
		_match_end_1aabc1b15:;
	};
	jule::Ptr<_1c48ac83c_FnCallExprModel> _6277_fc = (*_61332_r.alloc)._field_Expr.cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_6277_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6277_fc.alloc)._field_Except == nullptr)) || ((*((*_6277_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1c56c0495_IsForwarded(&((*_6277_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1c56c6bd8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_21dde173e_ExceptionalForwardingExprModel>(_21dde173e_ExceptionalForwardingExprModel{._field_Expr=_6277_fc}), &__jule_any_type120));
}



inline void _1c56ca5e3_optimizeStmt(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Any _63733_stmt) {
	{
		auto &_match_expr{ _63733_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aabc50d0:;
			{
				_1c56ca89b_optimizeChild(_self_, _63733_stmt.cast_ptr<_1c490ac86_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aabc4d27:;
			{
				_1c56c76ab_optimizeData(_self_, _63733_stmt.cast_ptr<_1c49ce024_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aabc5146:;
			{
				_1c56c7964_optimizeVar(_self_, _63733_stmt.cast_ptr<_1c49715b0_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1aabc51ac:;
			{
				_1c56c7c1c_optimizeConditional(_self_, _63733_stmt.cast_ptr<_1c490b8be_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aabc5223:;
			{
				_1c56c869b_optimizeRangeIter(_self_, _63733_stmt.cast_ptr<_1c490cabd_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aabc529a:;
			{
				_1c56c8954_optimizeWhileIter(_self_, _63733_stmt.cast_ptr<_1c490c172_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1aabc5322:;
			{
				_1c56ca89b_optimizeChild(_self_, (*(_63733_stmt.unsafe_cast_ptr<_1c490bbbb_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aabc5399:;
			{
				_1c56c9988_optimizeAssign(_self_, _63733_stmt.cast_ptr<_1c490e383_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aabc5421:;
			{
				_1c56ca082_optimizeMultiAssign(_self_, _63733_stmt.cast_ptr<_1c490e839_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aabc5498:;
			{
				_1c56c83e3_optimizeMatch(_self_, _63733_stmt.cast_ptr<_1c490ee99_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aabc5520:;
			{
				_1c56ca33a_optimizeRet(_self_, _63733_stmt.cast_ptr<_1c4911561_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aabc5597:;
			{
				_1c56c96d0_optimizePostfix(_self_, _63733_stmt.cast_ptr<_1c490ddcc_Postfix>(&__jule_any_type42));
			}
		}
		_match_end_1aabc4e8c:;
	};
}



inline void _1c56ca89b_optimizeChild(jule::Ptr<_1c56c637a_scopeOptimizer> _self_, jule::Ptr<_1c490ac86_Scope> _66634_child) {
	jule::Ptr<_1c56c637a_scopeOptimizer> _6677_so = static__1c56c6930_new(_66634_child);;
	(*(_6677_so))._field_parent=_self_;
	(*_6677_so.alloc)._field_data=(*(_self_))._field_data;
	_1c56caa99_optimize(_6677_so);
}



inline void _1c56caa99_optimize(jule::Ptr<_1c56c637a_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1c56ca5e3_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1ac44b06e:;
	}
	_iter_end_1ac44b06e:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56c637a_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c56ccd76_exprOptimizer_eq(_1c56ccd76_exprOptimizer *_self_, _1c56ccd76_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1c56cd34e_optimize(jule::Any* _3626_model) {
	static__1c56cd63a_optimizeData(_3626_model, &(_1c56d5840_emptyData));
}



inline void static__1c56cd63a_optimizeData(jule::Any* _4030_model, jule::Ptr<_1c56d6236_data>* _4053_d) {
	if (_1c57e9910_exprEnabled) {
		jule::Ptr<_1c56ccd76_exprOptimizer> _438_exop = jule::new_ptr<_1c56ccd76_exprOptimizer>(_1c56ccd76_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_4030_model)), ._field_data=(*(_4053_d)), ._field_inspector=static__1c56b8c0d_New()});;
		_1c56d1b6b_do(_438_exop.ptr());
	};
}



inline jule::Bool _1c56cd97b_selfCmpCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _5228_m) {
	if ((!(_21dde0b17_equalModels((*((*((*(_5228_m))))._field_Left))._field_Model, (*((*((*(_5228_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_5228_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac45aa40:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1dc545d81_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac45ae3b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1dc545d81_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1ac45992e:;
			{
				return false;;
			}
		}
		_match_end_1ac45a9c9:;
	};
}



inline jule::Bool _1c56cdcbc_boolCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _7625_m) {
	jule::Ptr<_1c4a17cd8_Prim> _773_lp = _1c4a12893_Prim((*((*((*(_7625_m))))._field_Left))._field_Kind.ptr());;
	if (((_773_lp == nullptr) || (!(_1c4a1b01c_IsBool(_773_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac4602e7:;
			{
				std::swap((*((*(_7625_m))))._field_Left, (*((*(_7625_m))))._field_Right);
			}
		}
		else {
			_case_begin_1ac45e505:;
			{
				{
					auto &_match_expr{ (*((*((*(_7625_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ac45d812:;
						{
							goto _match_end_1ac45ed1e;
						}
					}
					else {
						_case_begin_1ac45ed74:;
						{
							return false;;
						}
					}
					_match_end_1ac45ed1e:;
				};
			}
		}
		_match_end_1ac45e4a0:;
	};
	jule::Ptr<_1dc54537a_Const> _947_c = (*((*((*(_7625_m))))._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_7625_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ac461e0e:;
			{
				if (_1dc5472a0_ReadBool(_947_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				} else {
					_1dc548889_SetBool(_947_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ac461ea8:;
			{
				if (_1dc5472a0_ReadBool(_947_c.ptr())) {
					_1dc548889_SetBool(_947_c, true);
					(*((*(_self_))._field_model))=jule::Any(_947_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_7625_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1ac460072:;
		}
		_match_end_1ac461d87:;
	};
	return false;;
}



inline jule::Bool _1c56ce10d_strCond(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _12923_m) {
	jule::Ptr<_1c4a17cd8_Prim> _1303_lp = _1c4a12893_Prim((*((*(_12923_m))._field_Left))._field_Kind.ptr());;
	if (((_1303_lp == nullptr) || (!(_1c4a1b2a3_IsStr(_1303_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_12923_m.alloc)._field_Op))._field_Id != static_cast<jule::U64>(50LLU)) && ((*(*(_12923_m))._field_Op.alloc)._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac468a1a:;
			{
				std::swap((*_12923_m.alloc)._field_Left, (*_12923_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1ac467c28:;
			{
				{
					auto &_match_expr{ (*((*(_12923_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ac4667c6:;
						{
							goto _match_end_1ac468542;
						}
					}
					else {
						_case_begin_1ac468597:;
						{
							return false;;
						}
					}
					_match_end_1ac468542:;
				};
			}
		}
		_match_end_1ac467bc3:;
	};
	jule::Ptr<_1dc54537a_Const> _1507_c = (*((*_12923_m.alloc)._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_12923_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac4687a6:;
			{
				if ((_1dc547536_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1549_model = jule::Any(jule::new_ptr<_21dde1e9d_EmptyCompareExprModel>(_21dde1e9d_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1549_model))))));
					goto _match_end_1ac46a544;
				};
				jule::Any _1618_model = jule::Any(jule::new_ptr<_21dde2795_StrCompExprModel>(_21dde2795_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1618_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1ac46a5dd:;
			{
				if ((_1dc547536_ReadStr(_1507_c.ptr())).empty()) {
					jule::Any _1699_model = jule::Any(jule::new_ptr<_21dde1e9d_EmptyCompareExprModel>(_21dde1e9d_EmptyCompareExprModel{._field_Expr=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type127);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1699_model))))));
					goto _match_end_1ac46a544;
				};
				jule::Any _1768_model = jule::Any(jule::new_ptr<_21dde2795_StrCompExprModel>(_21dde2795_StrCompExprModel{._field_Left=(*(*(_12923_m))._field_Left.alloc)._field_Model, ._field_Right=_1507_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1768_model))))));
			}
		}
		_match_end_1ac46a544:;
	};
	return true;;
}



inline jule::Bool _1c56ce5b4_tryNeutralElement1(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _18635_m, jule::Ptr<_1dc54537a_Const> _18660_c, jule::Ptr<_1c48aa362_OperandExprModel>* _18672_nc) {
	if (_1dc549b32_IsStr(_18660_c.ptr())) {
		if ((!(_1c56dc12c_Str))) {
			return false;;
		};
		if (((_1dc547536_ReadStr(_18660_c.ptr())).empty() && ((*((*((*(_18635_m))))._field_Op))._field_Id == static_cast<jule::U64>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18672_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1c56db208_Math)) || (_1dc548070_AsF64(_18660_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18635_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac47421d:;
			{
				if (((*(_18672_nc)) == (*((*(_18635_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac474d9a:;
			{
				_1dc548328_SetI64(_18660_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18660_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac474e11:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18672_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1ac474c68:;
	};
	return false;;
}



inline jule::Bool _1c56ce905_tryNeutralElement(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _23034_m) {
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac478387:;
			{
				jule::Ptr<_1dc54537a_Const> _2348_c = (*((*((*(_23034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1dc54537a_Const>();;
				return _1c56ce5b4_tryNeutralElement1(_self_, _23034_m, _2348_c, &((*((*(_23034_m))))._field_Right));;
			}
		}
		_match_end_1ac478321:;
	};
	{
		auto &_match_expr{ (*((*((*(_23034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac47880a:;
			{
				jule::Ptr<_1dc54537a_Const> _2398_c = (*((*((*(_23034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1dc54537a_Const>();;
				return _1c56ce5b4_tryNeutralElement1(_self_, _23034_m, _2398_c, &((*((*(_23034_m))))._field_Left));;
			}
		}
		_match_end_1ac478794:;
	};
	return false;;
}



inline void _1c56cebad_checkBinaryForBoundary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _24539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac47bca3:;
			{
				jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> _2518_blc = (*((*((*(_24539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1c48b31b1_BuiltinLenCallExprModel>();;
				if ((!(_1c56d9d2d_isBoundaryValidType((*((*(_2518_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_24539_m))))._field_Op))._field_Id != static_cast<jule::U64>(70LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ac48004d:;
							{
								jule::Ptr<_1dc54537a_Const> _26310_c = jule::new_ptr<_1dc54537a_Const>((*((*((*((*(_24539_m))))._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19))));;
								_1dc54c409_Sub(_26310_c, (*(static__1dc5457ed_NewI64(1LL))));
								_1c56d815b_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c56da0e7_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), jule::Any(_26310_c, &__jule_any_type19));
							}
						}
						_match_end_1ac47eed7:;
					};
					return;;
				};
				_1c56d815b_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c56da0e7_getBoundaryVar((*(*(_2518_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ac47bc3c:;
	};
	{
		auto &_match_expr{ (*((*((*(_24539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac47c325:;
			{
				jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> _2748_blc = (*((*((*(_24539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1c48b31b1_BuiltinLenCallExprModel>();;
				if ((!(_1c56d9d2d_isBoundaryValidType((*(*(_2748_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(69LLU)) && ((*(*((*(_24539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U64>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_24539_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_24539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1ac4869c2:;
							{
								jule::Ptr<_1dc54537a_Const> _28610_c = jule::new_ptr<_1dc54537a_Const>((*((*((*((*(_24539_m))))._field_Left))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19))));;
								_1dc54c409_Sub(_28610_c, (*(static__1dc5457ed_NewI64(1LL))));
								_1c56d815b_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c56da0e7_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), jule::Any(_28610_c, &__jule_any_type19));
							}
						}
						_match_end_1ac48695b:;
					};
					return;;
				};
				_1c56d815b_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1c56da0e7_getBoundaryVar((*(*(_2748_blc))._field_Expr.alloc)._field_Model), (*(*((*(_24539_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1ac47c2ae:;
	};
}



inline void _1c56cee66_checkBinaryForNil(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel>* _29734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3017_var = _21dde7206_getNilVar((*((*((*(_29734_m))))._field_Left))._field_Model);;
	if ((_3017_var != 0LLU)) {
		if ((!(_21dde6db5_isNilValidType((*(*((*(_29734_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ac48c324:;
				{
					_21dde5be9_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*((*((*(_29734_m))))._field_Op))._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ac48c2ad:;
		};
		return;;
	};
	_3017_var=_21dde7206_getNilVar((*((*((*(_29734_m))))._field_Right))._field_Model);
	if ((_3017_var != 0LLU)) {
		if ((!(_21dde6db5_isNilValidType((*(*((*(_29734_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_29734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1ac48e9b9:;
				{
					_21dde5be9_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3017_var, ((*(*((*(_29734_m))))._field_Op.alloc)._field_Id == static_cast<jule::U64>(51LLU)));
				}
			}
			_match_end_1ac48e953:;
		};
		return;;
	};
}



inline void _1c56d021e_binary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _32922_m) {
	_1c56cebad_checkBinaryForBoundary(_self_, &(_32922_m));
	_1c56cee66_checkBinaryForNil(_self_, &(_32922_m));
	if (_1c56dbdda_Cond) {
		{
			
			if (_1c56ce10d_strCond(_self_, _32922_m) || _1c56cdcbc_boolCond(_self_, &(_32922_m)) || _1c56cd97b_selfCmpCond(_self_, &(_32922_m))) {
				_case_begin_1ac4918de:;
				{
					return;;
				}
			}
			_match_end_1ac4917ac:;
		};
	};
	if (_1c56ce905_tryNeutralElement(_self_, &(_32922_m))) {
		return;;
	};
	if ((!(_1c56db208_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac492824:;
			{
				goto _match_end_1ac492aaa;
			}
		}
		else {
			_case_begin_1ac492b10:;
			{
				return;;
			}
		}
		_match_end_1ac492aaa:;
	};
	jule::Ptr<_1c4a17cd8_Prim> _3623_lp = _1c4a12893_Prim((*((*(_32922_m))._field_Left))._field_Kind.ptr());;
	if ((_3623_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _3663_rp = _1c4a12893_Prim((*((*(_32922_m))._field_Right))._field_Kind);;
	if ((_3663_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_32922_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac4958b0:;
			{
				jule::Bool _3734_ok;
				jule::U64 _3738_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c56d20ab_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3734_ok = __jule_assign_result.__jule_result_arg0;
					_3738_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3734_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(56LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1dc54537a_Const> _3779_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
					_1dc5485d1_SetU64(_3779_c.ptr(), _3738_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac4954b4:;
			{
				jule::Bool _3844_ok;
				jule::U64 _3848_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1c56d20ab_checkForBitShiftOpt(&((*_32922_m.alloc)._field_Left), &((*_32922_m.alloc)._field_Right));
					_3844_ok = __jule_assign_result.__jule_result_arg0;
					_3848_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_3844_ok) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(57LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1dc54537a_Const> _3889_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
					_1dc5485d1_SetU64(_3889_c.ptr(), _3848_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac49553b:;
			{
				jule::Ptr<_1dc54537a_Const> _3958_c = (*((*_32922_m.alloc)._field_Right))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
				if ((_1dc548070_AsF64(_3958_c.ptr()) == 2LL)) {
					(*((*_32922_m.alloc)._field_Op))._field_Id=static_cast<jule::U64>(65LLU);
					(*(*(_32922_m))._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1dc548328_SetI64(_3958_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1ac49512e:;
			{
				return;;
			}
		}
		_match_end_1ac49544d:;
	};
	jule::Any _4107_model = jule::Any(jule::new_ptr<_21dde3125_UnsafeBinaryExprModel>(_21dde3125_UnsafeBinaryExprModel{._field_Node=_32922_m}), &__jule_any_type123);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4107_model))))));
}



inline void _1c56d04c7_unary(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48aac36_UnaryExprModel> _41421_m) {
	if ((!(_1c56dba22_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41421_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac49e842:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ac4a0832:;
						{
							jule::Ptr<_1c48aac36_UnaryExprModel> _4229_um = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>();;
							if (((*((*(_4229_um))._field_Op))._field_Id == static_cast<jule::U64>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_4229_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1ac4a07bb:;
				};
				if ((!(_1c56db4b1_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _21dde6db5_isNilValidType((*(*(_41421_m))._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _4365_var = _21dde7206_getNilVar((*(*(_41421_m))._field_Expr.alloc)._field_Model);;
					if (_21dde637b_isSafe((*((*(_self_))._field_data))._field_nils, _4365_var)) {
						jule::Any _43810_model = jule::Any(jule::new_ptr<_21dde4434_UnsafeDerefExprModel>(_21dde4434_UnsafeDerefExprModel{._field_Base=_41421_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_43810_model))))));
						return;;
					};
					_21dde5be9_pushVar((*((*(_self_))._field_data))._field_nils, _4365_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac49eb61:;
			{
				{
					auto &_match_expr{ (*((*(_41421_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ac4a632c:;
						{
							jule::Ptr<_1c49715b0_Var> _4489_v = (*((*(_41421_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
							if ((*(_4489_v))._field_Reference) {
								jule::Any _45010_model = jule::Any(jule::new_ptr<_21dde2322_RefExprModel>(_21dde2322_RefExprModel{._field_Var=_4489_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_45010_model))))));
							};
						}
					}
					_match_end_1ac4a62b6:;
				};
			}
		}
		_match_end_1ac49eab7:;
	};
}



inline void _1c56d0780_structureLit(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ab60a_StructLitExprModel> _45728_m) {
	{
		auto expr = &((*(_45728_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4a66b2:;
		if (it != expr_end) {
			jule::Ptr<_1c48ab264_StructArgExprModel> _45815_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1c56d9a64_isBoundaryRiskyType((*((*(_45815_arg))._field_Expr))._field_Kind)) {
						_1c56d979a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_45815_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_21dde6733_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1c56d4641_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45815_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1ac4a66b2:;
			++it;
			goto _iter_begin_1ac4a66b2;
		}
		_iter_end_1ac4a66b2:;
	};
}



inline void _1c56d0a38_casting(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48abe8a_CastingExprModel> _47323_m) {
	jule::Bool _4743_valid = _1c56d494e_isDynamicValidType((*(_47323_m))._field_ExprKind);;
	jule::Uintptr _4753_var = _1c56d51be_getDynamicVar((*((*_47323_m.alloc)._field_Expr))._field_Model);;
	if (((_4743_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1c56d4289_isFits((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind))) {
		jule::Any _4778_model = jule::Any(jule::new_ptr<_21dde4731_UnsafeCastingExprModel>(_21dde4731_UnsafeCastingExprModel{._field_Base=_47323_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4778_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _4743_valid)) {
		_1c56d3a4c_pushVar((*((*(_self_))._field_data))._field_dynamic, _4753_var, (*_47323_m.alloc)._field_Kind);
	};
}



inline void _1c56d0d9b_args(_1c56ccd76_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1c48ba691_ParamIns>> _48720_params, jule::Slice<jule::Any>* _48746_args) {
	{
		auto expr = _48746_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4b169a:;
		if (it != expr_end) {
			jule::I64 _4888_i = it - expr->begin();
			jule::Any _48815_arg = *it;
			{
				if ((_4888_i >= _48720_params.len())) {
					goto _iter_next_1ac4b169a;
				};
				jule::Ptr<_1c48ba691_ParamIns> _4928_p = _48720_params[_4888_i];;
				if (((*((*(_4928_p))._field_Decl))._field_Mutable && (*(*(_4928_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1c56d9a64_isBoundaryRiskyType((*_4928_p.alloc)._field_Kind)) {
							_1c56d979a_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _48815_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_21dde6733_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _48815_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1c56d4641_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _48815_arg);
					};
				};
			}
			_iter_next_1ac4b169a:;
			++it;
			_4888_i++;
			goto _iter_begin_1ac4b169a;
		}
		_iter_end_1ac4b169a:;
	};
}



inline void _1c56d1154_scope(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c490ac86_Scope>* _50922_s) {
	jule::Ptr<_1c56c637a_scopeOptimizer> _5107_scopt = static__1c56c6930_new((*(_50922_s)));;
	(*(_5107_scopt))._field_data=(*(_self_))._field_data;
	_1c56caa99_optimize(_5107_scopt);
}



inline void _1c56d140c_funcCall(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ac83c_FnCallExprModel> _51524_m) {
	_1c56d0d9b_args(_self_, (*((*(_51524_m))._field_Func))._field_Params, &((*_51524_m.alloc)._field_Args));
	if (((*_51524_m.alloc)._field_Except != nullptr)) {
		_1c56d1154_scope(_self_, &((*_51524_m.alloc)._field_Except));
	};
}



inline void _1c56d16b5_indexing(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ad1bc_IndexingExprModel> _52224_m) {
	if ((!(_1c56db4b1_Access))) {
		return;;
	};
	jule::Bool _5273_array = (_1c4a13663_Arr((*((*(_52224_m))._field_Expr))._field_Kind.ptr()) != nullptr);;
	if ((_5273_array && _1c49ce95e_IsConst((*_52224_m.alloc)._field_Index.ptr()))) {
		jule::Any _5308_model = jule::Any(jule::new_ptr<_21dde34aa_UnsafeIndexingExprModel>(_21dde34aa_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5308_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1c56d9d2d_isBoundaryValidType((*(*(_52224_m))._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _5364_var = _1c56da0e7_getBoundaryVar((*(*(_52224_m))._field_Expr.alloc)._field_Model);;
		if (_1c56d8898_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model)) {
			jule::Any _5389_model = jule::Any(jule::new_ptr<_21dde34aa_UnsafeIndexingExprModel>(_21dde34aa_UnsafeIndexingExprModel{._field_Node=_52224_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_5389_model))))));
			return;;
		};
		_1c56d815b_pushVar((*((*(_self_))._field_data))._field_boundary, _5364_var, (*(*(_52224_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1c56d196d_anonFunc(_1c56ccd76_exprOptimizer* _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _54624_m) {
	_1c56d1154_scope(_self_, &((*((*(_54624_m))._field_Func))._field_Scope));
}



inline void _1c56d1b6b_do(_1c56ccd76_exprOptimizer* _self_) {
	_1c56b95d2_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1ac4c092e, jule::Ptr<__jule_anon_1ac4c092e_ctx>::make(__jule_anon_1ac4c092e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac4c092e_ctx_handler));
}





std::ostream &operator<<(std::ostream &_Stream, _1c56ccd76_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "inspector:" << _Src._field_inspector;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c56d3266_dynamicVar_eq(_1c56d3266_dynamicVar *_self_, _1c56d3266_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}



std::ostream &operator<<(std::ostream &_Stream, _1c56d3266_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1c56d3a4c_pushVar(jule::Ptr<_1c56d35a7_dynamic> _self_, jule::Uintptr _3224_var, jule::Ptr<_1c4a1020e_TypeKind> _3242_kind) {
	if (((!(_1c56dce96_Dynamic)) || (_3224_var == 0LLU))) {
		return;;
	};
	_3242_kind=_1c56d4d7d_isTypeGuaranteedDynamicData(&(_self_), _3242_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4d009d:;
		if (it != expr_end) {
			_1c56d3266_dynamicVar _3815_v = *it;
			{
				if ((_3815_v._field_var == _3224_var)) {
					_3815_v._field_kind=_3242_kind;
					return;;
				};
			}
			_iter_next_1ac4d009d:;
			++it;
			goto _iter_begin_1ac4d009d;
		}
		_iter_end_1ac4d009d:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4d0a82:;
		if (it != expr_end) {
			_1c56d3266_dynamicVar _4515_v = *it;
			{
				if ((_4515_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3224_var;
						jule::Ptr<_1c4a1020e_TypeKind> _1___jule_assign_arg = _3242_kind;
						_4515_v._field_var = ___jule_assign_arg;
						_4515_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1ac4d0a82:;
			++it;
			goto _iter_begin_1ac4d0a82;
		}
		_iter_end_1ac4d0a82:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1c56d3266_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1c56d3266_dynamicVar{._field_var=_3224_var, ._field_kind=_3242_kind}; __jule_collection; }));
}



inline jule::Bool _1c56d3d8d_removeVar(_1c56d35a7_dynamic* _self_, jule::Uintptr _5525_var) {
	if ((_5525_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac4d2c4e:;
			if (it != expr_end) {
				_1c56d3266_dynamicVar _5716_v = *it;
				{
					if ((_5716_v._field_var == _5525_var)) {
						_5716_v._field_var=0LLU;
						_5716_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1ac4d2c4e:;
				++it;
				goto _iter_begin_1ac4d2c4e;
			}
			_iter_end_1ac4d2c4e:;
		};
	};
	return false;;
}



inline jule::Bool _1c56d4289_isFits(_1c56d35a7_dynamic* _self_, jule::Uintptr _6922_var, jule::Ptr<_1c4a1020e_TypeKind> _6936_kind) {
	if ((_6922_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac4d45d0:;
			if (it != expr_end) {
				_1c56d3266_dynamicVar _7111_v = *it;
				{
					if ((_7111_v._field_var == _6922_var)) {
						return ((_7111_v._field_kind != nullptr) && _1c4a1094b_Equal(_7111_v._field_kind, _6936_kind));;
					};
				}
				_iter_next_1ac4d45d0:;
				++it;
				goto _iter_begin_1ac4d45d0;
			}
			_iter_end_1ac4d45d0:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56d35a7_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c56d6236_data_eq(_1c56d6236_data *_self_, _1c56d6236_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline _1c56d5c3b_dataCheckpoint _1c56d65dd_getCheckpoint(_1c56d6236_data* _self_) {
	_1c56d5c3b_dataCheckpoint _257_c = _1c56d5c3b_dataCheckpoint{._field_boundary=_1c56d7bb6_boundary{._field_vars=jule::Slice<_1c56d7875_boundaryVar>(nullptr)}, ._field_nils=_21dde5754_nils{._field_vars=jule::Slice<_21dde5413_nilVar>(nullptr)}, ._field_dynamic=_1c56d35a7_dynamic{._field_vars=jule::Slice<_1c56d3266_dynamicVar>(nullptr)}};;
	_257_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1c56d7875_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c56d7875_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_257_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4d658d:;
		if (it != expr_end) {
			jule::I64 _277_i = it - expr->begin();
			{
				_257_c._field_boundary._field_vars[_277_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_257_c._field_boundary._field_vars[_277_i]._field_maxSize);
			}
			_iter_next_1ac4d658d:;
			++it;
			_277_i++;
			goto _iter_begin_1ac4d658d;
		}
		_iter_end_1ac4d658d:;
	};
	_257_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_21dde5413_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _21dde5413_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_257_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1c56d3266_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c56d3266_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _257_c;;
}



inline void _1c56d6896_loadCheckpoint(_1c56d6236_data* _self_, _1c56d5c3b_dataCheckpoint* _3535_c) {
	(*((*(_self_))._field_boundary))=(*(_3535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3535_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56d6236_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56d7875_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1c56d815b_pushVar(_1c56d7bb6_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1c56db4b1_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1c56d8c2d_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4ea5c4:;
		if (it != expr_end) {
			_1c56d7875_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac4eb33e:;
						if (it != expr_end) {
							jule::I64 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1c56d946a_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1ac4eb33e:;
							++it;
							_349_i++;
							goto _iter_begin_1ac4eb33e;
						}
						_iter_end_1ac4eb33e:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ac4ea5c4:;
			++it;
			goto _iter_begin_1ac4ea5c4;
		}
		_iter_end_1ac4ea5c4:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4eadcc:;
		if (it != expr_end) {
			_1c56d7875_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1ac4eadcc:;
			++it;
			goto _iter_begin_1ac4eadcc;
		}
		_iter_end_1ac4eadcc:;
	};
	{ jule::Slice<_1c56d7875_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1c56d7875_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1c56d8898_fitsMaxSize(_1c56d7bb6_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac500bc3:;
			if (it != expr_end) {
				_1c56d7875_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1c56d90e6_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1ac500bc3:;
				++it;
				goto _iter_begin_1ac500bc3;
			}
			_iter_end_1ac500bc3:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56d7bb6_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c57e9d3e_Optimizer_eq(_1c57e9d3e_Optimizer *_self_, _1c57e9d3e_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1c57e9d3e_Optimizer> static__1c57ea2e5_New(jule::Ptr<_1c56b4830_IR>* _2621_ir) {
	return jule::new_ptr<_1c57e9d3e_Optimizer>(_1c57e9d3e_Optimizer{._field_ir=(*(_2621_ir))});;
}



inline void _1c57ea59d_optimizeGlobal(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c49715b0_Var>* _3235_v) {
	if ((!((*((*(_3235_v))))._field_Binded))) {
		static__1c56cd34e_optimize(&((*((*((*((*(_3235_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1c57ea856_optimizeFunction(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c48b8738_Fn>* _3837_func) {
	if ((*((*(_3837_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3837_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac505e81:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _4215_ins = *it;
			{
				jule::Ptr<_1c56c637a_scopeOptimizer> _438_so = static__1c56c6930_new((*(_4215_ins))._field_Scope);;
				_1c56caa99_optimize(_438_so);
			}
			_iter_next_1ac505e81:;
			++it;
			goto _iter_begin_1ac505e81;
		}
		_iter_end_1ac505e81:;
	};
}



inline void _1c57eab0e_optimizeStruct(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c48a3679_Struct>* _4835_s) {
	if ((*((*(_4835_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac507636:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _5215_ins = *it;
			{
				{
					auto expr = &((*(_5215_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac50802c:;
					if (it != expr_end) {
						jule::Ptr<_1c48a5857_FieldIns> _5316_f = *it;
						{
							if (((*(_5316_f))._field_Default != nullptr)) {
								static__1c56cd34e_optimize(&((*(*(_5316_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1ac50802c:;
						++it;
						goto _iter_begin_1ac50802c;
					}
					_iter_end_1ac50802c:;
				};
				{
					auto expr = &((*_5215_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac50845b:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _5816_m = *it;
						{
							_1c57ea856_optimizeFunction(_self_, &(_5816_m));
						}
						_iter_next_1ac50845b:;
						++it;
						goto _iter_begin_1ac50845b;
					}
					_iter_end_1ac50845b:;
				};
			}
			_iter_next_1ac507636:;
			++it;
			goto _iter_begin_1ac507636;
		}
		_iter_end_1ac507636:;
	};
}



inline void _1c57eadb7_optimizeGlobals(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _6436_p) {
	{
		auto expr = &((*((*(_6436_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac50978c:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _6515_f = *it;
			{
				{
					auto expr = &((*(_6515_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac50a590:;
					if (it != expr_end) {
						jule::Ptr<_1c49715b0_Var> _6616_v = *it;
						{
							_1c57ea59d_optimizeGlobal(_self_, &(_6616_v));
						}
						_iter_next_1ac50a590:;
						++it;
						goto _iter_begin_1ac50a590;
					}
					_iter_end_1ac50a590:;
				};
			}
			_iter_next_1ac50978c:;
			++it;
			goto _iter_begin_1ac50978c;
		}
		_iter_end_1ac50978c:;
	};
}



inline void _1c57eb170_optimizeFunctions(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _7238_p) {
	{
		auto expr = &((*((*(_7238_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac50ab23:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _7315_f = *it;
			{
				{
					auto expr = &((*(_7315_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac50b98c:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _7416_func = *it;
						{
							_1c57ea856_optimizeFunction(_self_, &(_7416_func));
						}
						_iter_next_1ac50b98c:;
						++it;
						goto _iter_begin_1ac50b98c;
					}
					_iter_end_1ac50b98c:;
				};
			}
			_iter_next_1ac50ab23:;
			++it;
			goto _iter_begin_1ac50ab23;
		}
		_iter_end_1ac50ab23:;
	};
}



inline void _1c57eb428_optimizeStructs(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _8036_p) {
	{
		auto expr = &((*((*(_8036_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac50c020:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _8115_f = *it;
			{
				{
					auto expr = &((*(_8115_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac50cd89:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _8216_s = *it;
						{
							_1c57eab0e_optimizeStruct(_self_, &(_8216_s));
						}
						_iter_next_1ac50cd89:;
						++it;
						goto _iter_begin_1ac50cd89;
					}
					_iter_end_1ac50cd89:;
				};
			}
			_iter_next_1ac50c020:;
			++it;
			goto _iter_begin_1ac50c020;
		}
		_iter_end_1ac50c020:;
	};
}



inline void _1c57eb6d1_optimizePackage(_1c57e9d3e_Optimizer* _self_, jule::Ptr<_1c4930c45_Package>* _8836_p) {
	_1c57eadb7_optimizeGlobals(_self_, _8836_p);
	_1c57eb170_optimizeFunctions(_self_, _8836_p);
	_1c57eb428_optimizeStructs(_self_, _8836_p);
}



inline void _1c57eb8ce_Optimize(_1c57e9d3e_Optimizer* _self_) {
	_1c57ebb43_detectEnabled();
	if (_1c56dab53_Deadcode) {
		_1c57e383d_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1c57e9b52_scopeEnabled || _1c57e9910_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac50edad:;
			if (it != expr_end) {
				jule::Ptr<_1c492cd1e_ImportInfo> _10416_u = *it;
				{
					if ((!((*(_10416_u))._field_Binded))) {
						_1c57eb6d1_optimizePackage(_self_, &((*_10416_u.alloc)._field_Package));
					};
				}
				_iter_next_1ac50edad:;
				++it;
				goto _iter_begin_1ac50edad;
			}
			_iter_end_1ac50edad:;
		};
		_1c57eb6d1_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1c56dab53_Deadcode) {
		_1c57e8447_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1c57e9d3e_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c58212e9_AnsiEscape_eq(_1c58212e9_AnsiEscape *_self_, _1c58212e9_AnsiEscape _other_) { return true; }

inline void static__1c57ec0e9_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1c5820172_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::out(_1918_escape);
	jule::out(_1931_text);
	static__1c57ec0e9_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1c58212e9_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1c58228a0_Logger_eq(_1c58228a0_Logger *_self_, _1c58228a0_Logger _other_) { return true; }

inline void static__1c5822b7a_LogFlat(_205a977d7_Log* _1421_l) {
	jule::outln((*(_1421_l))._field_Text);
}



inline void static__1c5822dab_LogError(_205a977d7_Log* _1922_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1922_l))._field_Text);
	static__1c57ec0e9_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1922_l))._field_Path);
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1dc536d2d_Itoa((*(_1922_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1dc536d2d_Itoa((*(_1922_l))._field_Column));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _2059eae66_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_2059e99e2_Replace(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1), -1LL);
		jule::I64 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _434_row = _1dc536d2d_Itoa((*(_1922_l))._field_Row);;
		jule::out(_434_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_388_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_2059e3c83_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_2059e3c83_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_2059e3c83_Repeat(jule::Str::lit(" ", 1), _434_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1c5820172_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1922_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1c58230dc_Log(_205a977d7_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ac518c0d:;
			{
				static__1c5822b7a_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1ac51bd32:;
			{
				static__1c5822dab_LogError(_6417_l);
			}
		}
		_match_end_1ac51bc44:;
	};
}



inline void static__1c582331d_PrintLogs(jule::Slice<_205a977d7_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac51c816:;
		if (it != expr_end) {
			_205a977d7_Log *_7510_l = it;
			{
				static__1c58230dc_Log(_7510_l);
			}
			_iter_next_1ac51c816:;
			++it;
			goto _iter_begin_1ac51c816;
		}
		_iter_end_1ac51c816:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1dc536d2d_Itoa((*(_7423_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1c58228a0_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97d00d7_AbsTime_eq(_1a97d00d7_AbsTime *_self_, _1a97d00d7_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}



std::ostream &operator<<(std::ostream &_Stream, _1a97d00d7_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97d07ad_Time_eq(_1a97d07ad_Time *_self_, _1a97d07ad_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1a97d07ad_Time static__1a97d0b98_Unix(jule::U64 _9117_sec) {
	return _1a97d07ad_Time{._field_sec=_9117_sec};;
}



inline _1a97d07ad_Time static__1a97d0da7_Now(void) {
	return static__1a97d0b98_Unix(_1a97d289d_unix());;
}



inline _1a97d00d7_AbsTime _1a97d2590_Abs(_1a97d07ad_Time* _self_) {
	jule::U64 _1273_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (((_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (365LLU + _1607_leap))) {
		_1647_yDay-=(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1a97ce548_mdays[static_cast<jule::I64>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1a97ce548_mdays[static_cast<jule::I64>(_1697_months)];
		}
	_iter_next_1ac54a514:;
	}
	_iter_end_1ac54a514:;;
	_1a97d00d7_AbsTime _1747_t = _1a97d00d7_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=((((_1547_remYears + (4LLU * _1487_qCycles)) + (100LLU * _1427_cCycles)) + (400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(jule::div(_1297_remSecs,60LLU) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a97d07ad_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a9706daa_scopeCoder_eq(_1a9706daa_scopeCoder *_self_, _1a9706daa_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1a9706daa_scopeCoder> static__1a9707581_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _7321_oc) {
	return jule::new_ptr<_1a9706daa_scopeCoder>(_1a9706daa_scopeCoder{._field_oc=(*(_7321_oc))});;
}



inline void _1aca1cbc3_iterHead(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _8029_it, jule::Bool* _8041_ref, jule::Str _8052_begin) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c56da856_Copy && _1a970ec4d_isCopyOptimizable(&((*((*(_8029_it))))._field_Expr)))) {
		(*(_8041_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8029_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aca2107d:;
				{
					jule::Ptr<_1c49715b0_Var> _895_v = (*((*((*(_8029_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
					if ((*(_895_v))._field_Reference) {
						_1a9722018_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
						goto _match_end_1aca216cc;
					};
					goto _case_begin_1aca21732;
				}
			}
			else {
				_case_begin_1aca21732:;
				{
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a9722018_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aca216cc:;
		};
	} else {
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_8029_it))))._field_Expr))._field_Model);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8041_ref))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8041_ref))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, _8052_begin);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
}



inline void _1a9707c57_rangeIndexIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _12936_it) {
	_238b51e24_StrBuilder _1307_sb = static__238b52375_New(64LL);;
	static__1a972b9a1_iterBegin(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1323_begin = _238b531cd_Str(&_1307_sb);;
	_238b533cb_Clear(&_1307_sb);
	static__1a972c078_iterNext(&(_1307_sb), static_cast<jule::Uintptr>((*(_12936_it))));
	jule::Str _1353_next = _238b531cd_Str(&_1307_sb);;
	jule::Bool _1377_ref = false;;
	_1aca1cbc3_iterHead(_self_, _12936_it, &(_1377_ref), _1323_begin);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		_1a97e331a_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12936_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aca2d6a6, jule::Ptr<__jule_anon_1aca2d6a6_ctx>::make(__jule_anon_1aca2d6a6_ctx{._self_=_self_,._1377_ref=_1377_ref}).as<jule::Uintptr>(), __jule_anon_1aca2d6a6_ctx_handler));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	if (((*((*(_12936_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12936_it))))._field_KeyB.alloc)._field_Reference=(_1c56da856_Copy && _1a9710116_isIterCopyOptimizable(&((*((*(_12936_it))))._field_Expr), &((*((*(_12936_it))))._field_KeyB)));
		_1a97e331a_varInitExpr((*(_self_))._field_oc, &((*((*(_12936_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aca3216b, jule::Ptr<__jule_anon_1aca3216b_ctx>::make(__jule_anon_1aca3216b_ctx{._self_=_self_,._12936_it=_12936_it}).as<jule::Uintptr>(), __jule_anon_1aca3216b_ctx_handler));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a970dee4_scope(_self_, (*((*(_12936_it))))._field_Scope);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, _1353_next);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((*((*(_12936_it))))._field_KeyA != nullptr)) {
		static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_12936_it))))._field_KeyA);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a97db7ca_write((*(_self_))._field_oc, _1323_begin);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972bc8c_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12936_it))));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9708010_rangeHashmapIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter>* _19638_it) {
	_238b51e24_StrBuilder _1977_sb = static__238b52375_New(64LL);;
	static__1a972b9a1_iterBegin(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _1993_begin = _238b531cd_Str(&_1977_sb);;
	_238b533cb_Clear(&_1977_sb);
	static__1a972c078_iterNext(&(_1977_sb), static_cast<jule::Uintptr>((*(_19638_it))));
	jule::Str _2023_next = _238b531cd_Str(&_1977_sb);;
	jule::Bool _2047_ref = false;;
	_1aca1cbc3_iterHead(_self_, _19638_it, &(_2047_ref), _1993_begin);
	if (((*((*(_19638_it))))._field_KeyA != nullptr)) {
		_1a97e331a_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19638_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aca41642, jule::Ptr<__jule_anon_1aca41642_ctx>::make(__jule_anon_1aca41642_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aca41642_ctx_handler));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	if (((*((*(_19638_it))))._field_KeyB != nullptr)) {
		_1a97e331a_varInitExpr((*(_self_))._field_oc, &((*((*(_19638_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1aca43ab7, jule::Ptr<__jule_anon_1aca43ab7_ctx>::make(__jule_anon_1aca43ab7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aca43ab7_ctx_handler));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a970dee4_scope(_self_, (*((*(_19638_it))))._field_Scope);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, _2023_next);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a97db7ca_write((*(_self_))._field_oc, _1993_begin);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972bc8c_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19638_it))));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a97082b8_strRuneIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde4137_StrRuneIter> _24332_it) {
	_238b51e24_StrBuilder _2447_sb = static__238b52375_New(64LL);;
	static__1a972b9a1_iterBegin(&(_2447_sb), static_cast<jule::Uintptr>((*(_24332_it))._field_Base));
	jule::Str _2463_begin = _238b531cd_Str(&_2447_sb);;
	_238b533cb_Clear(&_2447_sb);
	static__1a972c078_iterNext(&(_2447_sb), static_cast<jule::Uintptr>((*_24332_it.alloc)._field_Base));
	jule::Str _2493_next = _238b531cd_Str(&_2447_sb);;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	jule::Bool _2557_ref = false;;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1c56da856_Copy && _1a970ec4d_isCopyOptimizable(&((*_24332_it.alloc)._field_Expr)))) {
		_2557_ref=true;
		{
			auto &_match_expr{ (*((*(_24332_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1aca519d7:;
				{
					jule::Ptr<_1c49715b0_Var> _2615_v = (*((*(_24332_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
					if ((*(_2615_v))._field_Reference) {
						_1a9722018_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1aca52136;
					};
					goto _case_begin_1aca5218b;
				}
			}
			else {
				_case_begin_1aca5218b:;
				{
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1a9722018_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1aca52136:;
		};
	} else {
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24332_it.alloc)._field_Expr))._field_Model);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_2557_ref) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_2557_ref) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((*((*_24332_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1a97e331a_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1aca5c7e5, jule::Ptr<__jule_anon_1aca5c7e5_ctx>::make(__jule_anon_1aca5c7e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aca5c7e5_ctx_handler));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1a97e331a_varInitExpr((*(_self_))._field_oc, &((*(*(_24332_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a97db7ca_write((*(_self_))._field_oc, _2463_begin);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a970dee4_scope(_self_, (*(*(_24332_it))._field_Base.alloc)._field_Scope);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, _2493_next);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((*(*(_24332_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24332_it))._field_Base.alloc)._field_KeyA);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1a97db7ca_write((*(_self_))._field_oc, _2463_begin);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9708571_ifCase(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490b1a4_If> _35127_i) {
	if (((*(_35127_i))._field_Expr != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35127_i.alloc)._field_Expr);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1a970dee4_scope(_self_, (*_35127_i.alloc)._field_Scope);
}



inline void _1a9708829_conditional(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490b8be_Conditional> _36032_c) {
	jule::Bool _3617_writed = false;;
	{
		auto expr = &((*(_36032_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca7271c:;
		if (it != expr_end) {
			jule::Ptr<_1c490b1a4_If> _36215_elif = *it;
			{
				if ((_36215_elif == nullptr)) {
					goto _iter_next_1aca7271c;
				};
				if (_3617_writed) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3617_writed=true;
				_1a9708571_ifCase(_self_, _36215_elif);
			}
			_iter_next_1aca7271c:;
			++it;
			goto _iter_begin_1aca7271c;
		}
		_iter_end_1aca7271c:;
	};
	if (((*_36032_c.alloc)._field_Default != nullptr)) {
		if (_3617_writed) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1a970dee4_scope(_self_, (*(*(_36032_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1a9708ad2_infIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490bbbb_InfIter> _38028_it) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a970dee4_scope(_self_, (*(_38028_it))._field_Scope);
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972c078_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972bc8c_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38028_it));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a9708d8a_whileIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490c172_WhileIter> _39730_it) {
	if ((((*(_39730_it))._field_Expr != nullptr) && ((*_39730_it.alloc)._field_Next == nullptr))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39730_it))._field_Expr != nullptr)) {
			_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39730_it.alloc)._field_Expr);
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39730_it.alloc)._field_Next != nullptr)) {
			_1a970d983_st(_self_, (*_39730_it.alloc)._field_Next);
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39730_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a970dee4_scope(_self_, (*_39730_it.alloc)._field_Scope);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972c078_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972bc8c_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39730_it));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1a9709143_rangeIter(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490cabd_RangeIter> _43630_it) {
	{
		
		if ((_1c4a138e9_Slc((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca8803a:;
			{
				_1a9707c57_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1c4a13663_Arr((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca87be9:;
			{
				_1a9707c57_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		else if ((_1c4a14433_Map((*((*(_43630_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aca87c60:;
			{
				_1a9708010_rangeHashmapIter(_self_, &(_43630_it));
			}
		}
		else {
			_case_begin_1aca87b83:;
			{
				_1a9707c57_rangeIndexIter(_self_, &(_43630_it));
			}
		}
		_match_end_1aca87a84:;
	};
}



inline void _1a97093eb_cont(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ce53_ContSt> _44921_c) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a972c078_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_44921_c))._field_It);
}



inline void _1a97096a4_label(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490d629_Label> _45422_l) {
	static__1a972c364_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45422_l));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1a970995c_gotoSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490da03_GotoSt> _45923_gt) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a972c364_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45923_gt))._field_Label));
}



inline void _1a9709c15_postfix(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ddcc_Postfix> _46428_p) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46428_p))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1a97db7ca_write((*(_self_))._field_oc, (*_46428_p.alloc)._field_Op);
}



inline void _1a9709ebd_assignLeft(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Any* _47132_model) {
	{
		auto &_match_expr{ (*(_47132_model)) };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aca92011:;
			{
				jule::Ptr<_1c48ad1bc_IndexingExprModel> _4748_iem = (*(_47132_model)).cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45);;
				jule::Ptr<_1c4a1d97b_Map> _4754__map = _1c4a14433_Map((*((*(_4748_iem))._field_Expr))._field_Kind.ptr());;
				if ((_4754__map == nullptr)) {
					goto _match_end_1aca91eab;
				};
				_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(*(_4748_iem))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4748_iem.alloc)._field_Index))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
				return;;
			}
		}
		_match_end_1aca91eab:;
	};
	_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47132_model)));
}



inline void _1a970a276_divByZeroAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e383_Assign> _49036_a) {
	_1a9709ebd_assignLeft(_self_, &((*((*(_49036_a))._field_Left))._field_Model));
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1a97157ae_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_49036_a.alloc)._field_Op), &((*_49036_a.alloc)._field_Left), &((*_49036_a.alloc)._field_Right));
}



inline void _1a970a74e_operatorOverloadingAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _49647_s, jule::Ptr<_1c48aa362_OperandExprModel>* _49673_l, jule::Ptr<_1c48aa362_OperandExprModel>* _4978_r, jule::U64 _49736_op) {
	;
	jule::Ptr<_1c48bb719_FnIns> _4993_f = _1c56c3ee3_FindOperator(_49647_s, _49736_op, false);;
	if ((_4993_f == nullptr)) {
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:501:4"));;
	};
	static__1a972a43e_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_4993_f));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a9709ebd_assignLeft(_self_, &((*((*(_49673_l))))._field_Model));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_4978_r))))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a970aa07_assign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e383_Assign> _51127_a) {
	{
		auto &_match_expr{ (*((*(_51127_a))._field_Op))._field_Kind };
		
		if (_match_expr == jule::Str::lit("/=", 2) || _match_expr == jule::Str::lit("%=", 2)) {
			_case_begin_1aca9d281:;
			{
				if ((_1c4a13e16_Struct((*((*(_51127_a))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a970a276_divByZeroAssign(_self_, _51127_a);
					return;;
				};
			}
		}
		_match_end_1aca9d1c6:;
	};
	if ((((*((*_51127_a.alloc)._field_Op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c4a13e16_Struct((*((*(_51127_a))._field_Left))._field_Kind) != nullptr))) {
		jule::Ptr<_1c48a6407_StructIns> _5228_s = _1c4a13e16_Struct((*((*(_51127_a))._field_Left))._field_Kind);;
		_1a970a74e_operatorOverloadingAssign(_self_, &(_5228_s), &((*_51127_a.alloc)._field_Left), &((*_51127_a.alloc)._field_Right), (*(*(_51127_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1a9709ebd_assignLeft(_self_, &((*(*(_51127_a))._field_Left.alloc)._field_Model));
	_1a97db7ca_write((*_self_.alloc)._field_oc, (*(*(_51127_a))._field_Op.alloc)._field_Kind);
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_51127_a.alloc)._field_Right))._field_Model);
}



inline void _1a970acb0_mapLookupAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _53237_a) {
	jule::Ptr<_1c48ad1bc_IndexingExprModel> _5337_iem = (*((*(_53237_a))))._field_Right.cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45);;
	_1a9709ebd_assignLeft(_self_, &((*((*(_5337_iem))._field_Expr))._field_Model));
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5337_iem.alloc)._field_Index))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_53237_a))))._field_Left[0LL] != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_53237_a))))._field_Left[0LL]))._field_Model);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_53237_a))))._field_Left[1LL] != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_53237_a))))._field_Left[1LL]))._field_Model);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a970b068_multiAssignTup(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _55536_a) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1c48b1027_TupleExprModel> _5597_tup = (*((*(_55536_a))))._field_Right.cast_ptr<_1c48b1027_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_5597_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac973ce4:;
		if (it != expr_end) {
			jule::I64 _5618_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _56115_r = *it;
			{
				_1a97dc17c_indent((*(_self_))._field_oc);
				jule::Ptr<_1c49ce024_Data> _5638_l = (*((*(_55536_a))))._field_Left[_5618_i];;
				if ((_5638_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5638_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1ac976b2c:;
							{
								jule::Ptr<_1c49715b0_Var> _56710_v = (*(_5638_l))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
								if (((*(_56710_v))._field_Reference && (!(_1c49719bc_IsInitialized(_56710_v))))) {
									static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _56710_v);
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
									_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_56115_r))._field_Model);
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_55536_a))))._field_Left[_5618_i]=nullptr;
									goto _iter_next_1ac973ce4;
								};
							}
						}
						_match_end_1ac976ac7:;
					};
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5638_l.alloc)._field_Kind);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1a9729916_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a970664b_assignArgName, static_cast<jule::Uintptr>(_5618_i));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_56115_r.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac973ce4:;
			++it;
			_5618_i++;
			goto _iter_begin_1ac973ce4;
		}
		_iter_end_1ac973ce4:;
	};
	{
		auto expr = &((*((*(_55536_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac97ca12:;
		if (it != expr_end) {
			jule::I64 _5888_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _58815_l = *it;
			{
				if ((_58815_l == nullptr)) {
					goto _iter_next_1ac97ca12;
				};
				_1a97dc17c_indent((*(_self_))._field_oc);
				_1a9709ebd_assignLeft(_self_, &((*(_58815_l))._field_Model));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1a9729916_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1a970664b_assignArgName, static_cast<jule::Uintptr>(_5888_i));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac97ca12:;
			++it;
			_5888_i++;
			goto _iter_begin_1ac97ca12;
		}
		_iter_end_1ac97ca12:;
	};
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a970b321_multiAssignFn(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign>* _60435_a) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	jule::Ptr<_1c48ac83c_FnCallExprModel> _6097_f = (*((*(_60435_a))))._field_Right.cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33);;
	_1a9805e54_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6097_f))._field_Func))._field_Result));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_60435_a))))._field_Right);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1c4a1cdcb_Tuple> _6157_tup = _1c4a146b9_Tup((*(*(_6097_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_60435_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac987038:;
		if (it != expr_end) {
			jule::I64 _6168_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _61615_l = *it;
			{
				if ((_61615_l == nullptr)) {
					goto _iter_next_1ac987038;
				};
				;
				_1a97dc17c_indent((*(_self_))._field_oc);
				_1a9709ebd_assignLeft(_self_, &((*(_61615_l))._field_Model));
				{
					
					if (_1c4a1094b_Equal((*(_6157_tup))._field_Types[_6168_i], (*(_61615_l))._field_Kind)) {
						_case_begin_1ac9922eb:;
						{
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_6168_i));
						}
					}
					else if (_1c56c0a6c_IsAny(&((*(_61615_l))._field_Kind))) {
						_case_begin_1ac98e20a:;
						{
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_6168_i));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1a97dce91_pushAnyType((*(_self_))._field_oc, (*(_6157_tup))._field_Types[_6168_i])));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1ac988204:;
						{
							if ((_1c4a1419c_Trait((*(_6157_tup))._field_Types[_6168_i].ptr()) != nullptr)) {
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1c48cc1b9_Trait> _63710_t1 = _1c4a1419c_Trait((*(_61615_l))._field_Kind.ptr());;
								jule::Ptr<_1c48cc1b9_Trait> _63810_t2 = _1c4a1419c_Trait((*(_6157_tup))._field_Types[_6168_i].ptr());;
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_6168_i));
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1a97dd865_pushAndWriteMaskMapper((*(_self_))._field_oc, _63710_t1, _63810_t2);
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1ac989337;
							};
							jule::Ptr<_1c48cc1b9_Trait> _6465_t = _1c4a1419c_Trait((*(_61615_l))._field_Kind);;
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_6168_i));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1a972a72a_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6465_t);
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1c56c3ab4_FindTraitTypeOffset(_6465_t, (*(_6157_tup))._field_Types[_6168_i])));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1ac989337:;
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac987038:;
			++it;
			_6168_i++;
			goto _iter_begin_1ac987038;
		}
		_iter_end_1ac987038:;
	};
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a970b5c9_multiAssign(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490e839_MultiAssign> _66332_a) {
	{
		auto expr = &((*(_66332_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac997c3b:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _66615_d = *it;
			{
				_1a97e331a_varInitExpr((*(_self_))._field_oc, &(_66615_d), nullptr);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1a97dc17c_indent((*(_self_))._field_oc);
			}
			_iter_next_1ac997c3b:;
			++it;
			goto _iter_begin_1ac997c3b;
		}
		_iter_end_1ac997c3b:;
	};
	{
		auto &_match_expr{ (*(_66332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac998456:;
			{
				_1a970acb0_mapLookupAssign(_self_, &(_66332_a));
				return;;
			}
		}
		_match_end_1ac998401:;
	};
	{
		auto &_match_expr{ (*(_66332_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac99a711:;
			{
				_1a970b068_multiAssignTup(_self_, &(_66332_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac999e5d:;
			{
				_1a970b321_multiAssignFn(_self_, &(_66332_a));
			}
		}
		else {
			_case_begin_1ac999de7:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:685:4"));;
			}
		}
		_match_end_1ac999d92:;
	};
}



inline jule::Fn<void> _1a970b91a_matchExpr(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _68930_m) {
	if ((!(_1c49ce95e_IsConst((*(_68930_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ac99c339, jule::Ptr<__jule_anon_1ac99c339_ctx>::make(__jule_anon_1ac99c339_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ac99c339_ctx_handler);;
	};
	if (((!(_1dc54989b_IsBool((*(*(_68930_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1dc5472a0_ReadBool((*((*(_68930_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1ac99d648, jule::Ptr<__jule_anon_1ac99d648_ctx>::make(__jule_anon_1ac99d648_ctx{._self_=_self_,._68930_m=_68930_m}).as<jule::Uintptr>(), __jule_anon_1ac99d648_ctx_handler);;
	};
	return nullptr;;
}



inline void _1a970bc7d_case(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _69925_m, jule::Ptr<_1c49109c2_Case> _69940_c) {
	if ((((*(_69940_c))._field_Exprs.len() != 0LL) && (!((*(_69925_m))._field_Comptime)))) {
		if ((((*_69925_m.alloc)._field_Cases.len() > 0LL) && ((*(_69925_m))._field_Cases[0LL] == _69940_c))) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_69940_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac9a276d:;
			if (it != expr_end) {
				jule::I64 _7069_i = it - expr->begin();
				jule::Ptr<_1c49ce024_Data> _70616_expr = *it;
				{
					{
						
						if ((!((*_69925_m.alloc)._field_TypeMatch))) {
							_case_begin_1ac9ab1b1:;
							{
								jule::Fn<void> _7096_caseExpr = _1a970b91a_matchExpr(_self_, _69925_m);;
								if (_1c49ceca0_GoodOperand((*_69925_m.alloc)._field_Expr.ptr(), &(_70616_expr))) {
									if ((_7096_caseExpr != nullptr)) {
										_7096_caseExpr();
										_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_70616_expr))._field_Model);
								} else {
									_1a971764b_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_70616_expr))._field_Model);
									if ((_7096_caseExpr != nullptr)) {
										_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7096_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1ac9a3450:;
							{
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1c4a1020e_TypeKind> _72510_tk = (*(_70616_expr))._field_Model.cast_ptr<_1c4a1020e_TypeKind>(&__jule_any_type84);;
								if ((_1c4a1419c_Trait((*((*_69925_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1a971411a_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1c4a12b29_Sptr((*(_70616_expr))._field_Kind) != nullptr));
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1a972a72a_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c4a1419c_Trait((*((*(_69925_m))._field_Expr))._field_Kind));
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1c56c3ab4_FindTraitTypeOffset(_1c4a1419c_Trait((*((*(_69925_m))._field_Expr))._field_Kind), (*_70616_expr.alloc)._field_Kind)));
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I64 _7357_j = _1a97dce91_pushAnyType((*(_self_))._field_oc, _72510_tk);;
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_7357_j));
								};
							}
						}
						_match_end_1ac9a3351:;
					};
					if ((((*_69940_c.alloc)._field_Exprs.len() - _7069_i) > 1LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1ac9a276d:;
				++it;
				_7069_i++;
				goto _iter_begin_1ac9a276d;
			}
			_iter_end_1ac9a276d:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_69925_m))._field_Default == _69940_c) && ((*_69925_m.alloc)._field_Cases.len() != 0LL))) {
		_1a97dc17c_indent((*(_self_))._field_oc);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972c93b_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_69940_c));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_69940_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1a97dc17c_indent((*(_self_))._field_oc);
		_1a970dee4_scope(_self_, (*_69940_c.alloc)._field_Scope);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a970c036_matchSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ee99_Match> _76928_m) {
	if ((((*(_76928_m))._field_Cases.len() == 0LL) && ((*_76928_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_76928_m.alloc)._field_Comptime && (((*_76928_m.alloc)._field_Default == nullptr) || ((*((*((*_76928_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((!((*_76928_m.alloc)._field_Comptime)) && (!(_1c49ce95e_IsConst((*_76928_m.alloc)._field_Expr.ptr()))))) {
		if ((_1c56da856_Copy && _1a970ec4d_isCopyOptimizable(&((*_76928_m.alloc)._field_Expr)))) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_76928_m))._field_Expr.alloc)._field_Model);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1a97dc17c_indent((*(_self_))._field_oc);
	};
	if (((*_76928_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_76928_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acb2e5cb:;
			if (it != expr_end) {
				jule::Ptr<_1c49109c2_Case> _79716_c = *it;
				{
					if ((_79716_c == nullptr)) {
						goto _iter_next_1acb2e5cb;
					};
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a97dc17c_indent((*(_self_))._field_oc);
					_1a970bc7d_case(_self_, _76928_m, _79716_c);
				}
				_iter_next_1acb2e5cb:;
				++it;
				goto _iter_begin_1acb2e5cb;
			}
			_iter_end_1acb2e5cb:;
		};
	};
	if (((*_76928_m.alloc)._field_Default != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1a970bc7d_case(_self_, _76928_m, (*_76928_m.alloc)._field_Default);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972c650_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_76928_m));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a970c2de_fallSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c49111ba_FallSt> _82423_f) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1a972c93b_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_82423_f))._field_DestCase);
}



inline void _1a970c597_breakSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490d32c_BreakSt> _82924_b) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_82924_b))._field_It != 0LLU)) {
		static__1a972bc8c_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_82924_b.alloc)._field_It);
	} else {
		static__1a972c650_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_82924_b))._field_Mtch);
	};
}



inline void _1a970c850_setResult(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c4911561_RetSt> _83830_r) {
	if (((*((*((*((*(_83830_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_83830_r.alloc)._field_Expr);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1a97dc17c_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_83830_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1acb3952b:;
			{
				jule::Slice<jule::Ptr<_1c49ce024_Data>> _8488_datas = (*((*(_83830_r))._field_Expr.unsafe_cast_ptr<_1c48b1027_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_8488_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acb3d1bc:;
					if (it != expr_end) {
						jule::I64 _8498_i = it - expr->begin();
						jule::Ptr<_1c49ce024_Data> _84911_data = *it;
						{
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_8498_i));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_84911_data))._field_Model);
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1a97dc17c_indent((*(_self_))._field_oc);
						}
						_iter_next_1acb3d1bc:;
						++it;
						_8498_i++;
						goto _iter_begin_1acb3d1bc;
					}
					_iter_end_1acb3d1bc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1acb3c188:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1a9722018_model((*((*(_self_))._field_oc))._field_ec, (*_83830_r.alloc)._field_Expr);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1acb3bcae:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:862:4"));;
			}
		}
		_match_end_1acb3bc59:;
	};
}



inline void _1a970cb08_retSt(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c4911561_RetSt> _86626_r) {
	if (_1c48b8bde_IsVoid((*((*(_86626_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_86626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_86626_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_86626_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_86626_r))._field_Func.alloc)._field_Result);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_86626_r.alloc)._field_Expr);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_86626_r.alloc)._field_Expr);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_86626_r))._field_Expr != nullptr)) {
		_1a970c850_setResult(_self_, _86626_r);
	};
	if ((*((*((*_86626_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1a9805e54_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_86626_r))._field_Func.alloc)._field_Result));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1a970cdb1_var(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c49715b0_Var> _90224_v) {
	if ((!((*(_90224_v))._field_Constant))) {
		_1a97e35c3_var((*(_self_))._field_oc, _90224_v);
	};
}



inline void _1a970d169_mutSlicing(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde2d28_MutSlicingExprModel> _90831_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90831_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_205b65025_Production))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_90831_m.alloc)._field_Token));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_90831_m.alloc)._field_Left);
	if (((*_90831_m.alloc)._field_Right != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_90831_m.alloc)._field_Right);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a970d422_swap(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde1ac4_SwapExprModel> _92525_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1a971764b_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_92525_m))._field_Left))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a971764b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_92525_m.alloc)._field_Right))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a970d6ca_exceptionalForwarding(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_21dde173e_ExceptionalForwardingExprModel> _93342_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1a971932e_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_93342_m))._field_Expr));
}



inline void _1a970d983_st(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Any _93923_st) {
	if ((_93923_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _93923_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1acb5a173:;
			{
				_1a970dee4_scope(_self_, _93923_st.cast_ptr<_1c490ac86_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acb5a409:;
			{
				_1a970cdb1_var(_self_, _93923_st.cast_ptr<_1c49715b0_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1acb5a470:;
			{
				_1a9722018_model((*((*(_self_))._field_oc))._field_ec, (*(_93923_st.unsafe_cast_ptr<_1c49ce024_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1acb5ab9b:;
			{
				_1a9708829_conditional(_self_, _93923_st.cast_ptr<_1c490b8be_Conditional>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1acb5ac12:;
			{
				_1a9708ad2_infIter(_self_, _93923_st.cast_ptr<_1c490bbbb_InfIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1acb5ac78:;
			{
				_1a9708d8a_whileIter(_self_, _93923_st.cast_ptr<_1c490c172_WhileIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1acb5acde:;
			{
				_1a9709143_rangeIter(_self_, _93923_st.cast_ptr<_1c490cabd_RangeIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1acb5ad55:;
			{
				_1a97093eb_cont(_self_, _93923_st.cast_ptr<_1c490ce53_ContSt>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1acb5adbb:;
			{
				_1a97096a4_label(_self_, _93923_st.cast_ptr<_1c490d629_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1acb5ae32:;
			{
				_1a970995c_gotoSt(_self_, _93923_st.cast_ptr<_1c490da03_GotoSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1acb5ae98:;
			{
				_1a9709c15_postfix(_self_, _93923_st.cast_ptr<_1c490ddcc_Postfix>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1acb5b00e:;
			{
				_1a970aa07_assign(_self_, _93923_st.cast_ptr<_1c490e383_Assign>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1acb5b075:;
			{
				_1a970b5c9_multiAssign(_self_, _93923_st.cast_ptr<_1c490e839_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1acb5b0db:;
			{
				_1a970c036_matchSt(_self_, _93923_st.cast_ptr<_1c490ee99_Match>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1acb5b163:;
			{
				_1a970c2de_fallSt(_self_, _93923_st.cast_ptr<_1c49111ba_FallSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1acb5b1da:;
			{
				_1a970c597_breakSt(_self_, _93923_st.cast_ptr<_1c490d32c_BreakSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1acb5b262:;
			{
				_1a970cb08_retSt(_self_, _93923_st.cast_ptr<_1c4911561_RetSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1acb5b2d9:;
			{
				_1a971e741_pushToSlice((*((*(_self_))._field_oc))._field_ec, _93923_st.cast_ptr<_21dde3884_PushToSliceExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1acb5b361:;
			{
				_1a971e9e9_appendToSlice((*((*(_self_))._field_oc))._field_ec, _93923_st.cast_ptr<_21dde3c5d_AppendToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1acb5b3d8:;
			{
				_1a970d169_mutSlicing(_self_, _93923_st.cast_ptr<_21dde2d28_MutSlicingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1acb5b460:;
			{
				_1a970d422_swap(_self_, _93923_st.cast_ptr<_21dde1ac4_SwapExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1acb5b4d7:;
			{
				_1a970d6ca_exceptionalForwarding(_self_, _93923_st.cast_ptr<_21dde173e_ExceptionalForwardingExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1acb5b55e:;
			{
				_1a97082b8_strRuneIter(_self_, _93923_st.cast_ptr<_21dde4137_StrRuneIter>(&__jule_any_type121));
			}
		}
		else {
			_case_begin_1acb59edb:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1acb59e86:;
	};
}



inline void _1a970dc3b_scopeStmts(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ac86_Scope>* _99532_s) {
	{
		auto expr = &((*((*(_99532_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb6944b:;
		if (it != expr_end) {
			jule::Any _99615_st = *it;
			{
				_1a97dc17c_indent((*(_self_))._field_oc);
				_1a970d983_st(_self_, _99615_st);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1acb6944b:;
			++it;
			goto _iter_begin_1acb6944b;
		}
		_iter_end_1acb6944b:;
	};
}



inline void _1a970dee4_scope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c490ac86_Scope> _100426_s) {
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	if ((*(_100426_s))._field_Deferred) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a970dc3b_scopeStmts(_self_, &(_100426_s));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_100426_s.alloc)._field_Deferred) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1a970e29c_commonFuncScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _101937_f) {
	if ((!(_1c48b8bde_IsVoid((*((*(_101937_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1c4a1cdcb_Tuple> _10218_tup = _1c4a146b9_Tup((*((*(_101937_f))))._field_Result.ptr());;
		if ((_10218_tup != nullptr)) {
			_1a97dc17c_indent((*(_self_))._field_oc);
			_1a980577d_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10218_tup);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10218_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1aae721b2:;
				if (it != expr_end) {
					jule::I64 _102610_i = it - expr->begin();
					jule::Ptr<_1c4a1020e_TypeKind> _102617_t = *it;
					{
						if (_1a9807d68_shouldInitialized(&(_102617_t))) {
							_1a97dc17c_indent((*(_self_))._field_oc);
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_102610_i));
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1a97231d4_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _102617_t);
							_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1aae721b2:;
					++it;
					_102610_i++;
					goto _iter_begin_1aae721b2;
				}
				_iter_end_1aae721b2:;
			};
		} else if (((*((*(*((*(_101937_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1a97dc17c_indent((*(_self_))._field_oc);
			_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_101937_f))))._field_Result);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1a9807d68_shouldInitialized(&((*((*(_101937_f))))._field_Result))) {
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a97231d4_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_101937_f))))._field_Result);
			};
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1a970dc3b_scopeStmts(_self_, &((*((*(_101937_f))))._field_Scope));
	if (((*(*((*(_101937_f))))._field_Decl.alloc)._field_Exceptional && _1c48b8bde_IsVoid((*((*(_101937_f))))._field_Decl))) {
		_1a97dc17c_indent((*_self_.alloc)._field_oc);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1a970e610_anonFuncScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _105934_m, jule::Str _105955_ident) {
	if (((*((*(_105934_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10633_closure = _1c56c0dad_IsClosure(&(_105934_m));;
	if (_10633_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c49715b0_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1c49715b0_Var>>((void*)__jule_anon_1acaae35d, jule::Ptr<__jule_anon_1acaae35d_ctx>::make(__jule_anon_1acaae35d_ctx{._self_=_self_,._105934_m=_105934_m}).as<jule::Uintptr>(), __jule_anon_1acaae35d_ctx_handler); __jule_collection; }));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	if (_10633_closure) {
		_1a97dc17c_indent((*(_self_))._field_oc);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1a97db7ca_write((*(_self_))._field_oc, _105955_ident);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1a97db7ca_write((*(_self_))._field_oc, _105955_ident);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1a970e29c_commonFuncScope(_self_, &((*_105934_m.alloc)._field_Func));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_10633_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1a970e8b8_funcScope(jule::Ptr<_1a9706daa_scopeCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _109130_f) {
	if (((*(_109130_f))._field_Scope == nullptr)) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a970e29c_commonFuncScope(_self_, &(_109130_f));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9706daa_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a97136ad_exprCoder> static__1a9713aa9_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _12021_oc) {
	return jule::new_ptr<_1a97136ad_exprCoder>(_1a97136ad_exprCoder{._field_oc=(*(_12021_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1c49715b0_Var>>>(nullptr)});;
}



inline void _1a9713d62_string(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _12624_c) {
	jule::Str _1273_content = _1dc547536_ReadStr((*(_12624_c)).ptr());;
	if ((_1273_content.len() == 0LL)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1323_len = _1dc536a64_FmtInt(static_cast<jule::I64>(_1273_content.len()), 10LL);;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1a9723e93_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1273_content);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a97db7ca_write((*(_self_))._field_oc, _1323_len);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971411a_boolean(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Bool _14124_b) {
	if (_14124_b) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1a9714318_nilLit(jule::Ptr<_1a97136ad_exprCoder> _self_) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1a9714659_ftoaSpecialCases(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::F64* _15334_x) {
	{
		
		if (_1dc4db398_IsNaN((*(_15334_x)))) {
			_case_begin_1acad42b7:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1dc4dba2a_IsInf((*(_15334_x)), 1LL)) {
			_case_begin_1acad4361:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1dc4dba2a_IsInf((*(_15334_x)), -1LL)) {
			_case_begin_1acad43d8:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1acad422e:;
			{
				return false;;
			}
		}
		_match_end_1acad4130:;
	};
	return true;;
}



inline void _1a9714912_float32(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _16725_c) {
	jule::F64 _1683_x = _1dc548070_AsF64((*(_16725_c)).ptr());;
	if (_1a9714659_ftoaSpecialCases(_self_, &(_1683_x))) {
		return;;
	};
	{
		
		if ((_1683_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1acad84ec:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1683_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1acad75c8:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1acad7562:;
			{
				_1a9724339_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1683_x, 32LL);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1acad7452:;
	};
}



inline void _1a9714bba_float64(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const>* _18625_c) {
	jule::F64 _1873_x = _1dc548070_AsF64((*(_18625_c)).ptr());;
	if (_1a9714659_ftoaSpecialCases(_self_, &(_1873_x))) {
		return;;
	};
	{
		
		if ((_1873_x == jule::MAX_F64)) {
			_case_begin_1acadad7e:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1873_x == jule::MIN_F64)) {
			_case_begin_1acadae8e:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1acadaa4e:;
			{
				_1a9724339_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1873_x, 64LL);
			}
		}
		_match_end_1acada93e:;
	};
}



inline void _1a9714e73_constant(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1dc54537a_Const> _20429_c) {
	{
		
		if (_1dc549b32_IsStr(_20429_c.ptr())) {
			_case_begin_1acadccd7:;
			{
				_1a9713d62_string(_self_, &(_20429_c));
			}
		}
		else if (_1dc54989b_IsBool(_20429_c.ptr())) {
			_case_begin_1acadcd4d:;
			{
				_1a971411a_boolean(_self_, _1dc5472a0_ReadBool(_20429_c));
			}
		}
		else if (_1dc549db8_IsF64(_20429_c.ptr())) {
			_case_begin_1acadcdb4:;
			{
				{
					
					if ((*(_20429_c))._field_Kind.equal("f32", 3)) {
						_case_begin_1acae078a:;
						{
							_1a9714912_float32(_self_, &(_20429_c));
						}
					}
					else {
						_case_begin_1acae0405:;
						{
							_1a9714bba_float64(_self_, &(_20429_c));
						}
					}
					_match_end_1acae0306:;
				};
			}
		}
		else if (_1dc54937e_IsI64(_20429_c.ptr())) {
			_case_begin_1acadce2a:;
			{
				_1a9724625_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1dc546c83_ReadI64(_20429_c));
			}
		}
		else if (_1dc549615_IsU64(_20429_c.ptr())) {
			_case_begin_1acadce91:;
			{
				_1a9724911_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1dc547019_ReadU64(_20429_c));
			}
		}
		else if (_1dc54a14e_IsNil(_20429_c.ptr())) {
			_case_begin_1acadd007:;
			{
				_1a9714318_nilLit(_self_);
			}
		}
		else {
			_case_begin_1acadcc71:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1acadcb72:;
	};
}



inline void _1a9715391_operatorOverloadingUnary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _22846_s, jule::U64 _22861_op, jule::Any _22878_e) {
	;
	jule::Ptr<_1c48bb719_FnIns> _2303_f = _1c56c3ee3_FindOperator(_22846_s, _22861_op, true);;
	if ((_2303_f == nullptr)) {
		jule::panic(jule::Str::lit("unary operator overloading is not exist, this is an implementation mistake", 74) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:4"));;
	};
	static__1a972a43e_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_2303_f));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1a971764b_possibleRefExpr(_self_, _22878_e);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a97157ae_divByZeroBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c486c19d_Token>* _24033_op, jule::Ptr<_1c48aa362_OperandExprModel>* _24050_l, jule::Ptr<_1c48aa362_OperandExprModel>* _24077_r) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_24033_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1acae67c4:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1acae7264:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1acae71cb:;
	};
	if ((!(_205b65025_Production))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a97ddb1d_locInfo((*(_self_))._field_oc, _24033_op);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\",", 2));
	};
	_1a971764b_possibleRefExpr(_self_, (*((*(_24050_l))))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a971764b_possibleRefExpr(_self_, (*((*(_24077_r))))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9715ea7__unsafeBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, _238b51e24_StrBuilder* _26235_buf, jule::Str* _26253_l, jule::Str* _26262_r, jule::Ptr<_1c4a1020e_TypeKind>* _2638_lk, jule::Ptr<_1c4a1020e_TypeKind>* _26328_rk, jule::U64 _26343_op, jule::Str _26356_kind) {
	if ((_1c4a13e16_Struct((*(_2638_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1c48a6407_StructIns> _2668_s = _1c4a13e16_Struct((*(_2638_lk)).ptr());;
		_1a9725060_operatorOverloadingBinary(_26235_buf, &(_2668_s), _26253_l, _26262_r, _26343_op, _26356_kind);
		return;;
	};
	if (((_26343_op == static_cast<jule::U64>(50LLU)) || (_26343_op == static_cast<jule::U64>(51LLU)))) {
		{
			
			if (_1c56c0a6c_IsAny(_2638_lk)) {
				_case_begin_1acaede3b:;
				{
					if (((!(_1c4a11320_IsNil((*(_26328_rk)).ptr()))) && (!(_1c56c0a6c_IsAny(_26328_rk))))) {
						_238b52b8e_WriteByte(_26235_buf, '(');
						if ((_26343_op == static_cast<jule::U64>(51LLU))) {
							_238b52b8e_WriteByte(_26235_buf, '!');
						};
						jule::I64 _2826_i = _1a97dce91_pushAnyType((*(_self_))._field_oc, (*(_26328_rk)));;
						_238b528d6_WriteStr(_26235_buf, jule::Str::lit("__jule_any_type", 15));
						_238b528d6_WriteStr(_26235_buf, _1dc536d2d_Itoa(_2826_i));
						_238b528d6_WriteStr(_26235_buf, jule::Str::lit("_compare(", 9));
						_238b528d6_WriteStr(_26235_buf, (*(_26253_l)));
						_238b528d6_WriteStr(_26235_buf, jule::Str::lit(", ", 2));
						_238b528d6_WriteStr(_26235_buf, (*(_26262_r)));
						_238b528d6_WriteStr(_26235_buf, jule::Str::lit("))", 2));
						return;;
					};
				}
			}
			else if ((_1c4a13663_Arr((*(_2638_lk)).ptr()) != nullptr)) {
				_case_begin_1acaeded5:;
				{
					jule::Ptr<_1c4a1e608_Arr> _2955_arr = _1c4a13663_Arr((*(_2638_lk)).ptr());;
					jule::Ptr<_1c48b8738_Fn> _2969_f = _1c4754ae1_RuntimeFindFn(&((*((*((*(_self_))._field_oc))._field_ir))._field_Runtime), jule::Str::lit("arrayCmp", 8));;
					jule::Ptr<_1c48bb719_FnIns> _2979_ins = _1c56c4367_FindGenericInstance(&(_2969_f), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2955_arr))._field_Elem; __jule_collection; }));;
					static__1a972a43e_funcIns(_26235_buf, &(_2979_ins));
					if ((_26343_op == static_cast<jule::U64>(51LLU))) {
						_238b52b8e_WriteByte(_26235_buf, '!');
					};
					_238b52b8e_WriteByte(_26235_buf, '(');
					_238b528d6_WriteStr(_26235_buf, (*(_26253_l)));
					_238b528d6_WriteStr(_26235_buf, jule::Str::lit(".begin(), ", 10));
					_238b528d6_WriteStr(_26235_buf, (*(_26262_r)));
					_238b528d6_WriteStr(_26235_buf, jule::Str::lit(".begin(), ", 10));
					_238b528d6_WriteStr(_26235_buf, _1dc536d2d_Itoa((*_2955_arr.alloc)._field_N));
					_238b52b8e_WriteByte(_26235_buf, ')');
					return;;
				}
			}
			_match_end_1acaedd5e:;
		};
	};
	_238b52b8e_WriteByte(_26235_buf, '(');
	_238b528d6_WriteStr(_26235_buf, (*(_26253_l)));
	_238b52b8e_WriteByte(_26235_buf, ' ');
	_238b528d6_WriteStr(_26235_buf, _26356_kind);
	_238b52b8e_WriteByte(_26235_buf, ' ');
	_238b528d6_WriteStr(_26235_buf, (*(_26262_r)));
	_238b52b8e_WriteByte(_26235_buf, ')');
}



inline void _1a9716260_unsafeBinary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _32133_m) {
	jule::I64 _3223_i = _238b53662_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _3237_oldbuf = _238b53b7e_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1a971764b_possibleRefExpr(_self_, (*((*(_32133_m))._field_Left))._field_Model);
	jule::Str _3253_l = static_cast<jule::Str>(_238b53b7e_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3223_i));;
	{
		_238b53e37_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3237_oldbuf);
	};
	_1a971764b_possibleRefExpr(_self_, (*((*_32133_m.alloc)._field_Right))._field_Model);
	jule::Str _3283_r = static_cast<jule::Str>(_238b53b7e_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_3223_i));;
	{
		_238b53e37_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _3237_oldbuf);
	};
	_1a9715ea7__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3253_l), &(_3283_r), &((*(*(_32133_m))._field_Left.alloc)._field_Kind), &((*(*(_32133_m))._field_Right.alloc)._field_Kind), (*((*_32133_m.alloc)._field_Op))._field_Id, (*(*(_32133_m))._field_Op.alloc)._field_Kind);
}



inline void _1a9716518_binary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aa85c_BinaryExprModel> _33327_m) {
	{
		auto &_match_expr{ (*((*(_33327_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1acb0e897:;
			{
				if ((_1c4a13e16_Struct((*((*(_33327_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1a97157ae_divByZeroBinary(_self_, &((*_33327_m.alloc)._field_Op), &((*_33327_m.alloc)._field_Left), &((*_33327_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1acb0e7dc:;
	};
	_1a9716260_unsafeBinary(_self_, _33327_m);
}



inline void _1a97167c1_var(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c49715b0_Var> _34524_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb11b1e:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1c49715b0_Var>> _34610_prefix = *it;
			{
				if (_34610_prefix(_34524_m)) {
					return;;
				};
			}
			_iter_next_1acb11b1e:;
			++it;
			goto _iter_begin_1acb11b1e;
		}
		_iter_end_1acb11b1e:;
	};
	if ((*(_34524_m))._field_Binded) {
		jule::Ptr<_1c4881b96_Directive> _3524_d = _1c56c283d_FindDirective(&((*_34524_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_3524_d != nullptr)) {
			_1a97dba83_writeBytes((*_self_.alloc)._field_oc, _1a97e85b7_concatAllParts((*_3524_d.alloc)._field_Args));
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _34524_m);
}



inline void _1a9716a79_structureIns(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns> _36133_m) {
	_1a97ee25a_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _36133_m);
}



inline void _1a9716d32_unary(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aac36_UnaryExprModel> _36526_m) {
	if ((_1c4a13e16_Struct((*((*(_36526_m))._field_Expr))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1c48a6407_StructIns> _3688_s = _1c4a13e16_Struct((*((*(_36526_m))._field_Expr))._field_Kind);;
		_1a9715391_operatorOverloadingUnary(_self_, &(_3688_s), (*((*_36526_m.alloc)._field_Op))._field_Id, (*(*(_36526_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_36526_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1acb17c46:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1a971764b_possibleRefExpr(_self_, (*(*(_36526_m))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1acc78ea6:;
			{
				if ((_205b65025_Production || (_1c4a12b29_Sptr((*((*(_36526_m))._field_Expr))._field_Kind) == nullptr))) {
					goto _match_end_1acc78e1d;
				};
				_1a971764b_possibleRefExpr(_self_, (*(*(_36526_m))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_36526_m.alloc)._field_Op));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1acc78e1d:;
	};
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1a97db7ca_write((*(_self_))._field_oc, (*(*(_36526_m))._field_Op.alloc)._field_Kind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971764b_possibleRefExpr(_self_, (*(*(_36526_m))._field_Expr.alloc)._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1a97170da_structureLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ab60a_StructLitExprModel> _39633_m) {
	if ((*((*((*(_39633_m))._field_Strct))._field_Decl))._field_Binded) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1a97ee25a_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_39633_m.alloc)._field_Strct);
	if ((*(*((*(_39633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	_julec_label_1acc838c8:;
	{
		auto expr = &((*(*(_39633_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acc84005:;
		if (it != expr_end) {
			jule::I64 _4088_i = it - expr->begin();
			jule::Ptr<_1c48a5857_FieldIns> _40815_f = *it;
			{
				{
					auto expr = &((*_39633_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acc84d19:;
					if (it != expr_end) {
						jule::Ptr<_1c48ab264_StructArgExprModel> _40916_arg = *it;
						{
							if (((*(_40916_arg))._field_Field == _40815_f)) {
								if ((_4088_i > 0LL)) {
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1a972b3c9_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_40815_f))._field_Decl));
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1a971764b_possibleRefExpr(_self_, (*((*_40916_arg.alloc)._field_Expr))._field_Model);
								goto _iter_next_1acc84005;
							};
						}
						_iter_next_1acc84d19:;
						++it;
						goto _iter_begin_1acc84d19;
					}
					_iter_end_1acc84d19:;
				};
				if ((*(*((*(_39633_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					goto _iter_next_1acc84005;
				};
				if ((_4088_i > 0LL)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_1a9722359_handleFieldByDefault(_self_, &(_40815_f));
			}
			_iter_next_1acc84005:;
			++it;
			_4088_i++;
			goto _iter_begin_1acc84005;
		}
		_iter_end_1acc84005:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a9717393_allocStructure(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ab907_AllocStructLitExprModel> _43635_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1a972b0dd_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_43635_m))._field_Lit))._field_Strct));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a97170da_structureLit(_self_, (*_43635_m.alloc)._field_Lit);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971764b_possibleRefExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _44432_expr) {
	{
		auto &_match_expr{ _44432_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1acc8cb02:;
			{
				jule::Ptr<_1c49715b0_Var> _4474_v = _44432_expr.unsafe_cast_ptr<_1c49715b0_Var>();;
				if ((*(_4474_v))._field_Reference) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1a9722018_model(_self_, _44432_expr);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1acc8ca9c:;
	};
	_1a9722018_model(_self_, _44432_expr);
}



inline void _1a9717a69_castTraitFromTrait(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48abe8a_CastingExprModel>* _45840_m, jule::Ptr<_1c48cc1b9_Trait> _45866_t1, jule::Ptr<_1c48cc1b9_Trait> _45882_t2) {
	_1a971764b_possibleRefExpr(_self_, (*((*((*(_45840_m))))._field_Expr))._field_Model);
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1a97dd865_pushAndWriteMaskMapper((*(_self_))._field_oc, _45866_t1, _45882_t2);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9717d22_casting(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48abe8a_CastingExprModel> _47128_m) {
	{
		
		if (_1c56c0a6c_IsAny(&((*(_47128_m))._field_Kind))) {
			_case_begin_1acc926b7:;
			{
				if (_1c4a11320_IsNil((*_47128_m.alloc)._field_ExprKind.ptr())) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1c4a133cc_TypeEnum((*(_47128_m))._field_ExprKind) != nullptr)) {
					_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I64 _4824_i = _1a97dce91_pushAnyType((*(_self_))._field_oc, (*_47128_m.alloc)._field_ExprKind);;
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_47128_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1acc956ba:;
						{
							jule::Ptr<_1c4a17cd8_Prim> _4865_prim = _1c4a12893_Prim((*(_47128_m))._field_ExprKind);;
							if (((_4865_prim != nullptr) && _1dc54427a_IsInt((*_4865_prim.alloc)._field_Kind))) {
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1a97eb9c7_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4865_prim);
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1a971764b_possibleRefExpr(_self_, (*(*(_47128_m))._field_Expr.alloc)._field_Model);
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1acc9659a;
							};
							goto _case_begin_1acc96600;
						}
					}
					else {
						_case_begin_1acc96600:;
						{
							_1a971764b_possibleRefExpr(_self_, (*(*(_47128_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1acc9659a:;
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_4824_i));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1c56c0a6c_IsAny(&((*(_47128_m))._field_ExprKind))) {
			_case_begin_1acc92761:;
			{
				_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c4a12b29_Sptr((*_47128_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c4a12b29_Sptr((*(_47128_m))._field_Kind)))._field_Elem);
				} else {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47128_m.alloc)._field_Kind);
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_205b65025_Production))) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_47128_m.alloc)._field_Token));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1a97dce91_pushAnyType((*(_self_))._field_oc, (*_47128_m.alloc)._field_Kind)));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c4a12db0_Ptr((*(_47128_m))._field_ExprKind.ptr()) != nullptr) || (_1c4a12db0_Ptr((*_47128_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc927c7:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47128_m.alloc)._field_Kind);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1c4a1419c_Trait((*(_47128_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1acc9283d:;
			{
				if ((_1c4a1419c_Trait((*_47128_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a9717a69_castTraitFromTrait(_self_, &(_47128_m), _1c4a1419c_Trait((*(_47128_m))._field_Kind), _1c4a1419c_Trait((*(_47128_m))._field_ExprKind));
					return;;
				};
				_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1c4a12b29_Sptr((*(_47128_m))._field_Kind) != nullptr)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c4a12b29_Sptr((*(_47128_m))._field_Kind)))._field_Elem);
				} else {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47128_m.alloc)._field_Kind);
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_205b65025_Production))) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_47128_m.alloc)._field_Token));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1a972a72a_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c4a1419c_Trait((*(_47128_m))._field_ExprKind));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1c56c3ab4_FindTraitTypeOffset(_1c4a1419c_Trait((*(_47128_m))._field_ExprKind), (*_47128_m.alloc)._field_Kind)));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1c4a1419c_Trait((*(_47128_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acc928a4:;
			{
				_1a9800ea4_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47128_m.alloc)._field_Kind);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1a972a72a_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1c4a1419c_Trait((*(_47128_m))._field_Kind));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_1c56c3ab4_FindTraitTypeOffset(_1c4a1419c_Trait((*(_47128_m))._field_Kind), (*_47128_m.alloc)._field_ExprKind)));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1acc92541:;
	};
	jule::Ptr<_1c4a17cd8_Prim> _5683_prim = _1c4a12893_Prim((*(_47128_m))._field_Kind.ptr());;
	jule::Ptr<_1c4a17cd8_Prim> _5693_eprim = _1c4a12893_Prim((*_47128_m.alloc)._field_ExprKind.ptr());;
	if ((((_5693_eprim != nullptr) && (_5683_prim != nullptr)) && _1c4a1b2a3_IsStr(_5683_prim))) {
		if (_1c4a19713_IsU8(_5693_eprim)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1a971764b_possibleRefExpr(_self_, (*((*_47128_m.alloc)._field_Expr))._field_Model);
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47128_m.alloc)._field_Kind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1a971764b_possibleRefExpr(_self_, (*(*(_47128_m))._field_Expr.alloc)._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9718383_args(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _59926_m) {
	jule::I64 _6007_j = 0LL;;
	if (((((*((*((*(_59926_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_59926_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_59926_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1c48b73b3_IsSelf((*((*((*((*(_59926_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6007_j)++;
	};
	{
		auto expr = &((*((*(_59926_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1accc3ab1:;
		if (it != expr_end) {
			jule::I64 _6057_i = it - expr->begin();
			jule::Any _60510_arg = *it;
			{
				jule::Ptr<_1c48ba691_ParamIns> _6064_p = (*(*((*(_59926_m))))._field_Func.alloc)._field_Params[_6007_j];;
				if ((((*(_6064_p))._field_Decl != nullptr) && (*(*(_6064_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _60510_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1accc68a5:;
							{
								jule::Ptr<_1c49715b0_Var> _6106_v = _60510_arg.unsafe_cast_ptr<_1c49715b0_Var>();;
								if ((*(_6106_v))._field_Reference) {
									_1a9722018_model(_self_, _60510_arg);
									goto _julec_label_1accc62bc;
								};
							}
						}
						_match_end_1accc6850:;
					};
					_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1a9722018_model(_self_, _60510_arg);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1accc62bc;
				};
				_1a971764b_possibleRefExpr(_self_, _60510_arg);
				_julec_label_1accc62bc:;
				if ((((*((*(_59926_m))))._field_Args.len() - _6057_i) > 1LL)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6007_j)++;
			}
			_iter_next_1accc3ab1:;
			++it;
			_6057_i++;
			goto _iter_begin_1accc3ab1;
		}
		_iter_end_1accc3ab1:;
	};
}



inline void _1a971863b_modelForCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _63033_expr) {
	{
		auto &_match_expr{ _63033_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1acccb6ac:;
			{
				_1a971bbb1_funcIns(_self_, _63033_expr.cast_ptr<_1c48bb719_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1acccb514:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _6368_ssie = _63033_expr.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>();;
				if (((*(_6368_ssie))._field_Method != nullptr)) {
					_1a971bbb1_funcIns(_self_, (*_6368_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1acccb646:;
	};
	_1a971764b_possibleRefExpr(_self_, _63033_expr);
}



inline void _1a97188e4_pushCallInf(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _64529_m) {
	if ((_205b65025_Production || (!((*((*((*(_64529_m))))._field_Func))._field_Anon)))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_64529_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_64529_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1accd01e9:;
				{
					if ((*((*((*((*((*((*(_64529_m))))._field_Expr.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1accd0194:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*((*(_64529_m))))._field_Token));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_64529_m))))._field_Args.len() != 0LL)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1a9718c35_isWrapped(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _66831_m) {
	if ((((!(_1c48bcbd2_IsBuiltin((*((*(_66831_m))))._field_Func.ptr()))) && ((*((*(*((*(_66831_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1c48b73b3_IsSelf((*((*((*((*(_66831_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_66831_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1accd4e57:;
				{
					jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _6729_ssie = (*((*(_66831_m))))._field_Expr.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>();;
					{
						
						if (_1c48b7649_IsRef((*((*((*((*(_66831_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1c4a12b29_Sptr((*((*(_6729_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1accd6ba1:;
							{
								goto _match_end_1accd5d9d;
							}
						}
						else {
							_case_begin_1accd5e14:;
							{
								if ((_1c4a13e16_Struct((*((*(_6729_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*(_6729_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1a9722018_model(_self_, (*(*(_6729_ssie))._field_Expr.alloc)._field_Model);
										_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1accd5d9d:;
					};
				}
			}
			_match_end_1accd4e02:;
		};
	};
	return false;;
}



inline jule::Bool _1a9719076_writeReceiver(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _69234_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _69234_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1accdb6bc:;
			{
				_1a971764b_possibleRefExpr(_self_, (*((*(_69234_m.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1accdb8ba:;
			{
				_1a971764b_possibleRefExpr(_self_, (*((*((*(_69234_m.unsafe_cast_ptr<_21dde4434_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1accdb854:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:701:4"));;
			}
		}
		_match_end_1accdb7ee:;
	};
}



inline void _1a971932e_pureFuncCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _70534_m) {
	jule::Bool _7063_wrapped = _1a9718c35_isWrapped(_self_, _70534_m);;
	_1a971863b_modelForCall(_self_, (*((*(_70534_m))))._field_Expr);
	if ((!(_1c48bcbd2_IsBuiltin((*((*(_70534_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_70534_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_70534_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1c56c2c06_HasDirective(&((*(*((*((*(_70534_m))))._field_Func))._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_70534_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acce0a67:;
					if (it != expr_end) {
						jule::I64 _71211_i = it - expr->begin();
						jule::Ptr<_1c4a0d828_InsGeneric> _71218_g = *it;
						{
							_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_71218_g))._field_Kind);
							if ((((*(*((*(_70534_m))))._field_Func.alloc)._field_Generics.len() - _71211_i) > 1LL)) {
								_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1acce0a67:;
						++it;
						_71211_i++;
						goto _iter_begin_1acce0a67;
					}
					_iter_end_1acce0a67:;
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1a97188e4_pushCallInf(_self_, _70534_m);
	if (((*(*((*(_70534_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_70534_m))))._field_Func.alloc)._field_Anon)))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_70534_m))))._field_Args.len() > 0LL)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1c48bcbd2_IsBuiltin((*((*(_70534_m))))._field_Func))) && ((*(*((*((*(_70534_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1c48b73b3_IsSelf((*((*((*((*(_70534_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_70534_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1acce770b:;
				{
					jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _7369_ssie = (*((*(_70534_m))))._field_Expr.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>();;
					{
						
						if (_1c48b7649_IsRef((*((*((*((*(_70534_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1acceb90d:;
							{
								_1a9719076_writeReceiver(_self_, (*((*(_7369_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1c4a12b29_Sptr((*((*(_7369_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1accece81:;
							{
								jule::Bool _7436_safe = _1a9719076_writeReceiver(_self_, (*(*(_7369_ssie))._field_Expr.alloc)._field_Model);;
								if (_7436_safe) {
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_205b65025_Production))) {
										_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*((*(_70534_m))))._field_Token));
										_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1acce8740:;
							{
								if ((_1c4a13e16_Struct((*((*(_7369_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7369_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1acce906a:;
											{
												jule::Ptr<_1c49715b0_Var> _7578_v = (*((*(_7369_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
												if ((*(_7578_v))._field_Reference) {
													goto _match_end_1acce9543;
												};
												goto _case_begin_1acce9598;
											}
										}
										else {
											_case_begin_1acce9598:;
											{
												_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1acce9543:;
									};
								};
								if (_7063_wrapped) {
									_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1c4a12db0_Ptr((*((*(_7369_ssie))._field_Expr))._field_Kind) == nullptr)) {
									_1a9722018_model(_self_, (*(*(_7369_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1a971764b_possibleRefExpr(_self_, (*((*((*(*(_7369_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1acce86c9:;
					};
					if (((*((*(_70534_m))))._field_Args.len() > 0LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1acce73ba:;
				{
					_1a971764b_possibleRefExpr(_self_, (*((*((*(_70534_m))))._field_Expr.unsafe_cast_ptr<_1c48aeb19_TraitSubIdentExprModel>()))._field_Expr);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_70534_m))))._field_Args.len() > 0LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1acce7695:;
		};
	};
	_1a9718383_args(_self_, _70534_m);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7063_wrapped) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1a97195d7_coFuncCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel>* _79532_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_238b51e24_StrBuilder _7987_head = static__238b52375_New(32LL);;
	_238b528d6_WriteStr(&_7987_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_79532_m))))._field_Func))._field_Owner != nullptr)) {
		_238b528d6_WriteStr(&_7987_head, jule::Str::lit("_self_", 6));
		if (((*((*(_79532_m))))._field_Args.len() > 0LL)) {
			_238b528d6_WriteStr(&_7987_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_79532_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd0b577:;
		if (it != expr_end) {
			jule::I64 _8067_i = it - expr->begin();
			jule::Any _80610_arg = *it;
			{
				if ((_8067_i > 0LL)) {
					_238b528d6_WriteStr(&_7987_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _80610_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1acd0c2e2:;
						{
							jule::Ptr<_1c49715b0_Var> _8129_v = _80610_arg.unsafe_cast_ptr<_1c49715b0_Var>();;
							static__1a972b6b5_var(&(_7987_head), _8129_v);
							goto _iter_next_1acd0b577;
						}
					}
					_match_end_1acd0c28c:;
				};
				jule::Str _8164_name = (jule::Str::lit("_co_arg_", 8) + _1dc536d2d_Itoa(_8067_i));;
				_238b528d6_WriteStr(&_7987_head, _8164_name);
				_1a97dc17c_indent((*(_self_))._field_oc);
				_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(*((*(_79532_m))))._field_Func.alloc)._field_Params[_8067_i]))._field_Kind);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*((*((*(_79532_m))))._field_Func))._field_Params[_8067_i]))._field_Decl))._field_Reference) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
				};
				_1a97db7ca_write((*(_self_))._field_oc, _8164_name);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1a971764b_possibleRefExpr(_self_, _80610_arg);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _8284_argS = jule::Any(_8164_name, &__jule_any_type4);;
				(*((*(_79532_m))))._field_Args[_8067_i]=(*(((jule::Any*)((&(_8284_argS))))));
			}
			_iter_next_1acd0b577:;
			++it;
			_8067_i++;
			goto _iter_begin_1acd0b577;
		}
		_iter_end_1acd0b577:;
	};
	_1a97dc17c_indent((*(_self_))._field_oc);
	_238b5262d_Write(&(*(*(_self_))._field_oc.alloc)._field_Buf, _238b53b7e_Buf(&_7987_head));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a971932e_pureFuncCall(_self_, _79532_m);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a971994a_writeUseExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _84634_f, jule::Ptr<_1c49ce024_Data> _84649_d) {
	if ((_1c4a146b9_Tup((*(_84649_d))._field_Kind.ptr()) == nullptr)) {
		_1a971764b_possibleRefExpr(_self_, (*_84649_d.alloc)._field_Model);
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1c48b1027_TupleExprModel> _8527_tup = (*_84649_d.alloc)._field_Model.cast_ptr<_1c48b1027_TupleExprModel>(&__jule_any_type81);;
	_1a980577d_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1c4a146b9_Tup((*((*(_84634_f))))._field_Result.ptr()));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_8527_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd1b015:;
		if (it != expr_end) {
			jule::I64 _8557_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _85510_data = *it;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_8557_i));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1a971764b_possibleRefExpr(_self_, (*(_85510_data))._field_Model);
				if ((((*(_8527_tup))._field_Datas.len() - _8557_i) > 1LL)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1acd1b015:;
			++it;
			_8557_i++;
			goto _iter_begin_1acd1b015;
		}
		_iter_end_1acd1b015:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1a9719c03_funcCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ac83c_FnCallExprModel> _86729_m) {
	if ((*(_86729_m))._field_IsCo) {
		_1a97195d7_coFuncCall(_self_, &(_86729_m));
		return;;
	};
	if (((_1c48bcbd2_IsBuiltin((*_86729_m.alloc)._field_Func.ptr()) || (!((*((*(*(_86729_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_86729_m.alloc)._field_Except != nullptr) && ((*(*(_86729_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1a971932e_pureFuncCall(_self_, &(_86729_m));
		return;;
	};
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1a971932e_pureFuncCall(_self_, &(_86729_m));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	if (((*_86729_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_86729_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_86729_m.alloc)._field_Assigned)))) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1a970dee4_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_86729_m.alloc)._field_Except);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _8955_forwarded = _1c56c0495_IsForwarded(&((*_86729_m.alloc)._field_Except));;
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_8955_forwarded) {
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9009_stmt = (*(*(_86729_m))._field_Except.alloc)._field_Stmts[((*(*(_86729_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9009_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1acd29b39:;
					{
						((*((*(_86729_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_86729_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1a97dbc81_addIndent((*(_self_))._field_oc);
						_1a970dc3b_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_86729_m.alloc)._field_Except));
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a97dc17c_indent((*(_self_))._field_oc);
						_1a971994a_writeUseExpr(_self_, &((*_86729_m.alloc)._field_Func), _9009_stmt.cast_ptr<_1c49ce024_Data>(&__jule_any_type23));
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1a97dbe7e_doneIndent((*(_self_))._field_oc);
						_1a97dc17c_indent((*(_self_))._field_oc);
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1acd2b146:;
					{
						_1a970dee4_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_86729_m.alloc)._field_Except);
					}
				}
				_match_end_1acd2b0e1:;
			};
			if (_8955_forwarded) {
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a97231d4_initExpr(_self_, (*(*(_86729_m))._field_Func.alloc)._field_Result);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_86729_m.alloc)._field_Token));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1c48b8bde_IsVoid((*((*(_86729_m))._field_Func))._field_Decl)))) {
			_1a97dc17c_indent((*(_self_))._field_oc);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	};
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a9719eab_slice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48acc16_SliceExprModel> _94026_m) {
	if (((*(_94026_m))._field_Elems.len() == 0LL)) {
		_1a97ed3ad_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_94026_m.alloc)._field_ElemKind);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a97ed3ad_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_94026_m.alloc)._field_ElemKind);
	jule::Str _9483_size = _1dc536d2d_Itoa((*_94026_m.alloc)._field_Elems.len());;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a97db7ca_write((*(_self_))._field_oc, _9483_size);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a97db7ca_write((*(_self_))._field_oc, _9483_size);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_94026_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd3e92e:;
		if (it != expr_end) {
			jule::I64 _9587_i = it - expr->begin();
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a971764b_possibleRefExpr(_self_, (*(_94026_m))._field_Elems[_9587_i]);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1acd3e92e:;
			++it;
			_9587_i++;
			goto _iter_begin_1acd3e92e;
		}
		_iter_end_1acd3e92e:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1a971a264_indexing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ad1bc_IndexingExprModel> _96929_m) {
	{
		auto &_match_expr{ (*((*(_96929_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1acd43e61:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_205b65025_Production))) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*(_96929_m))._field_Token));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _9804_s = _1dc547536_ReadStr((*((*(_96929_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1dc54537a_Const>().ptr());;
				_1a9723e93_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _9804_s);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_9804_s.len()));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1a971764b_possibleRefExpr(_self_, (*((*_96929_m.alloc)._field_Index))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1acd43e0b:;
	};
	{
		
		if ((_1c4a14433_Map((*((*_96929_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1acd4cb7e:;
			{
				;
				;
				jule::Ptr<_1c4a1d97b_Map> _9958__map = _1c4a14433_Map((*((*(_96929_m))._field_Expr))._field_Kind);;
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
				_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_9958__map))._field_Val);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Bool", 10));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				_1a971764b_possibleRefExpr(_self_, (*(*(_96929_m))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".lookup(", 8));
				_1a971764b_possibleRefExpr(_self_, (*(*(_96929_m))._field_Index.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", &", 3));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", &", 3));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
				if (_1a9807a8d_ableToInit(&((*_9958__map.alloc)._field_Val))) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_ok", 11));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1a97231d4_initExpr(_self_, (*_9958__map.alloc)._field_Val);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
				};
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__lookup_val", 12));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
			}
		}
		else if (_205b65025_Production || (_1c4a12db0_Ptr((*((*_96929_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr) || _1c56c07a3_IsExprComesFromBind(&((*_96929_m.alloc)._field_Expr))) {
			_case_begin_1acd4a275:;
			{
				_1a971764b_possibleRefExpr(_self_, (*(*(_96929_m))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1a971764b_possibleRefExpr(_self_, (*(*(_96929_m))._field_Index.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1acd4a176:;
			{
				_1a971764b_possibleRefExpr(_self_, (*((*_96929_m.alloc)._field_Expr))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_96929_m.alloc)._field_Token));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1a971764b_possibleRefExpr(_self_, (*(*(_96929_m))._field_Index.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1acd476e5:;
	};
}



inline void _1a971a51c_unsafeIndexing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde34aa_UnsafeIndexingExprModel> _104235_m) {
	_1a971764b_possibleRefExpr(_self_, (*((*((*(_104235_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_205b65025_Production || (_1c4a12db0_Ptr((*(*((*(_104235_m))._field_Node))._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1c4a14433_Map((*((*((*(_104235_m))._field_Node))._field_Expr))._field_Kind) != nullptr)) {
			_case_begin_1acd5e8c7:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1a971764b_possibleRefExpr(_self_, (*((*(*(_104235_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1acd5d92b:;
			{
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1a971764b_possibleRefExpr(_self_, (*((*(*(_104235_m))._field_Node.alloc)._field_Index))._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1acd5e520:;
	};
}



inline void _1a971a7c5_anonFunc(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel> _105929_m) {
	jule::Bool _10603_closure = _1c56c0dad_IsClosure(&(_105929_m));;
	jule::Str _10613_ident = _1a97dcb50_pushAnonFn((*(_self_))._field_oc, &(_105929_m));;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1a98007cd_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_105929_m))._field_Func);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1a97db7ca_write((*(_self_))._field_oc, _10613_ident);
	if (_10603_closure) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1a97db7ca_write((*(_self_))._field_oc, _10613_ident);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1a97db7ca_write((*(_self_))._field_oc, _10613_ident);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_105929_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd6920b:;
			if (it != expr_end) {
				jule::I64 _10739_i = it - expr->begin();
				jule::Ptr<_1c49715b0_Var> _107316_v = *it;
				{
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1a972b6b5_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _107316_v);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a97167c1_var(_self_, _107316_v);
					if ((((*_105929_m.alloc)._field_Captured.len() - _10739_i) > 1LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1acd6920b:;
				++it;
				_10739_i++;
				goto _iter_begin_1acd6920b;
			}
			_iter_end_1acd6920b:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1a97db7ca_write((*(_self_))._field_oc, _10613_ident);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1a971aa7d_mapExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ae003_MapExprModel> _109028_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_109028_m))._field_KeyKind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a9800ea4_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_109028_m.alloc)._field_ValKind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">({", 3));
	if (((*_109028_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_109028_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1acd725dd:;
			if (it != expr_end) {
				jule::I64 _10979_i = it - expr->begin();
				jule::Ptr<_1c48ada4c_KeyValPairExprModel> _109716_pair = *it;
				{
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
					_1a971764b_possibleRefExpr(_self_, (*(_109716_pair))._field_Key);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					_1a971764b_possibleRefExpr(_self_, (*_109716_pair.alloc)._field_Val);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					if ((((*_109028_m.alloc)._field_Entries.len() - _10979_i) > 1LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1acd725dd:;
				++it;
				_10979_i++;
				goto _iter_begin_1acd725dd;
			}
			_iter_end_1acd725dd:;
		};
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1a971ad36_slicing(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48ae586_SlicingExprModel> _111128_m) {
	_1a971764b_possibleRefExpr(_self_, (*(_111128_m))._field_Expr);
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_205b65025_Production))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_111128_m.alloc)._field_Token));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1a971764b_possibleRefExpr(_self_, (*_111128_m.alloc)._field_Left);
	if (((*_111128_m.alloc)._field_Right != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a971764b_possibleRefExpr(_self_, (*_111128_m.alloc)._field_Right);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971b0de_traitSub(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48aeb19_TraitSubIdentExprModel> _112729_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1a972a72a_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112729_m))._field_Trt);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1a971764b_possibleRefExpr(_self_, (*_112729_m.alloc)._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_205b65025_Production))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_112729_m.alloc)._field_Token));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1a972a153_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_112729_m.alloc)._field_Method));
}



inline void _1a971b397_structureSub(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _114333_m) {
	_1a971764b_possibleRefExpr(_self_, (*((*(_114333_m))._field_Expr))._field_Model);
	if (((*_114333_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1a972b3c9_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_114333_m.alloc)._field_Field))._field_Decl));
}



inline void _1a971b650_array(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b0c2a_ArrayExprModel> _115226_m) {
	if ((((*((*(_115226_m))._field_Kind))._field_N == 0LL) || (((*_115226_m.alloc)._field_Elems.len() == 0LL) && (!(_1a9807a8d_ableToInit(&((*(*(_115226_m))._field_Kind.alloc)._field_Elem))))))) {
		_1a97ee5bd_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115226_m.alloc)._field_Kind);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_115226_m.alloc)._field_Elems.len() == 2LL) && ((*(_115226_m))._field_Elems[1LL] == nullptr))) {
		_1a97ee5bd_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115226_m.alloc)._field_Kind);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a971764b_possibleRefExpr(_self_, (*(_115226_m))._field_Elems[0LL]);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a97ee5bd_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115226_m.alloc)._field_Kind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_115226_m.alloc)._field_Elems.len() != (*(*(_115226_m))._field_Kind.alloc)._field_N)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_115226_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd8e275:;
		if (it != expr_end) {
			jule::I64 _11857_i = it - expr->begin();
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1a971764b_possibleRefExpr(_self_, (*_115226_m.alloc)._field_Elems[_11857_i]);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1acd8e275:;
			++it;
			_11857_i++;
			goto _iter_begin_1acd8e275;
		}
		_iter_end_1acd8e275:;
	};
	if ((((*_115226_m.alloc)._field_Elems.len() != (*(*(_115226_m))._field_Kind.alloc)._field_N) && _1a9807a8d_ableToInit(&((*(*(_115226_m))._field_Kind.alloc)._field_Elem)))) {
		_1a97228ba_fillCollectionByDefault(_self_, &((*(*(_115226_m))._field_Kind.alloc)._field_Elem));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1a971b908_funcInsCommon(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _120234_m) {
	_1a9800b41_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _120234_m);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971bbb1_funcIns(_self_, _120234_m);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971bbb1_funcIns(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _120928_m) {
	if ((((*(_120928_m))._field_Decl != nullptr) && (*(*(_120928_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1c4881b96_Directive> _12114_d = _1c56c283d_FindDirective(&((*(*(_120928_m))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_12114_d != nullptr)) {
			_1a97dba83_writeBytes((*(_self_))._field_oc, _1a97e85b7_concatAllParts((*_12114_d.alloc)._field_Args));
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1a972a43e_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_120928_m));
}



inline void _1a971be69_tuple(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1027_TupleExprModel> _122026_m) {
	{
		auto expr = &((*_122026_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acd99a88:;
		if (it != expr_end) {
			jule::I64 _12218_i = it - expr->begin();
			jule::Ptr<_1c49ce024_Data> _122115_d = *it;
			{
				_1a971764b_possibleRefExpr(_self_, (*(_122115_d))._field_Model);
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_122026_m))._field_Datas.len() - _12218_i) > 1LL)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1a97dc17c_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1acd99a88:;
			++it;
			_12218_i++;
			goto _iter_begin_1acd99a88;
		}
		_iter_end_1acd99a88:;
	};
}



inline void _1a971c222_newCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1ba4_BuiltinNewCallExprModel> _123128_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_123128_m))._field_Kind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_123128_m.alloc)._field_Init != nullptr)) {
		_1a971764b_possibleRefExpr(_self_, (*_123128_m.alloc)._field_Init);
	} else if (_1a9807a8d_ableToInit(&((*_123128_m.alloc)._field_Kind))) {
		_1a97231d4_initExpr(_self_, (*_123128_m.alloc)._field_Kind);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971c4ca_outCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b1401_BuiltinOutCallExprModel> _124328_m) {
	if (((*(_124328_m))._field_Debug && _205b65025_Production)) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1a971764b_possibleRefExpr(_self_, (*_124328_m.alloc)._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971c783_outlnCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b17ca_BuiltinOutlnCallExprModel> _125230_m) {
	if (((*(_125230_m))._field_Debug && _205b65025_Production)) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1a971764b_possibleRefExpr(_self_, (*_125230_m.alloc)._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971ca3b_panicCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b207d_BuiltinPanicCallExprModel> _126130_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1a971764b_possibleRefExpr(_self_, (*(_126130_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_126130_m.alloc)._field_Token));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a971cce4_assertCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b2534_BuiltinAssertCallExprModel> _126931_m) {
	if (_205b65025_Production) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1a971764b_possibleRefExpr(_self_, (*(_126931_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1a9723e93_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_126931_m.alloc)._field_Log);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1a97ddb1d_locInfo((*(_self_))._field_oc, &((*_126931_m.alloc)._field_Token));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1a971d09c_errorCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b413a_BuiltinErrorCallExprModel> _128230_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1c48b8bde_IsVoid((*((*(_128230_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_128230_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acdab968:;
				{
					jule::Ptr<_1c49715b0_Var> _12875_v = (*((*(_128230_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
					if ((*(_12875_v))._field_Ident.equal("error", 5)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1acdab913:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1a9805e54_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_128230_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_128230_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1acdb0d9b:;
				{
					jule::Ptr<_1c49715b0_Var> _12995_v = (*((*(_128230_m))._field_Err))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>();;
					if ((*(_12995_v))._field_Ident.equal("error", 5)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1acdb0d46:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1a971764b_possibleRefExpr(_self_, (*((*(_128230_m))._field_Err))._field_Model);
	jule::I64 _13083_i = _1a97dce91_pushAnyType((*(_self_))._field_oc, (*(*(_128230_m))._field_Err.alloc)._field_Kind);;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_13083_i));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1a971d355_copyCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b3c61_BuiltinCopyCallExprModel> _131429_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1a971764b_possibleRefExpr(_self_, (*((*(_131429_m))._field_Dest))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a971764b_possibleRefExpr(_self_, (*((*_131429_m.alloc)._field_Src))._field_Model);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971d60d_lenCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b31b1_BuiltinLenCallExprModel> _132228_m) {
	_1a971764b_possibleRefExpr(_self_, (*((*(_132228_m))._field_Expr))._field_Model);
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1a971d8b6_capCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b34ad_BuiltinCapCallExprModel> _132728_m) {
	_1a971764b_possibleRefExpr(_self_, (*((*(_132728_m))._field_Expr))._field_Model);
	_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1a971db6e_deleteCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b3887_BuiltinDeleteCallExprModel> _133231_m) {
	_1a971764b_possibleRefExpr(_self_, (*((*(_133231_m))._field_Dest))._field_Model);
	if (((*_133231_m.alloc)._field_Key != nullptr)) {
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1a971764b_possibleRefExpr(_self_, (*(*(_133231_m))._field_Key.alloc)._field_Model);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1a971de27_makeCallSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel>* _134335_m) {
	jule::Ptr<_1c4a1c2d7_Slc> _13447_slice = _1c4a138e9_Slc((*((*(_134335_m))))._field_Kind.ptr());;
	jule::Bool _13453_init = _1a9807a8d_ableToInit(&((*(_13447_slice))._field_Elem));;
	if (_13453_init) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_134335_m))))._field_Kind);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a971764b_possibleRefExpr(_self_, (*((*(_134335_m))))._field_Len);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_134335_m))))._field_Cap != nullptr)) {
		_1a971764b_possibleRefExpr(_self_, (*((*(_134335_m))))._field_Cap);
	} else {
		_1a971764b_possibleRefExpr(_self_, (*((*(_134335_m))))._field_Len);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_13453_init))) {
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1a9722b73_initCollection(_self_, &((*_13447_slice.alloc)._field_Elem));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a971e1d0_makeCallStr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel>* _136733_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1a971764b_possibleRefExpr(_self_, (*((*(_136733_m))))._field_Len);
	if (((*((*(_136733_m))))._field_Cap != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1a971764b_possibleRefExpr(_self_, (*((*(_136733_m))))._field_Cap);
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a971e488_makeCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel> _137829_m) {
	if ((_1c4a138e9_Slc((*(_137829_m))._field_Kind.ptr()) != nullptr)) {
		_1a971de27_makeCallSlice(_self_, &(_137829_m));
		return;;
	};
	_1a971e1d0_makeCallStr(_self_, &(_137829_m));
}



inline void _1a971e741_pushToSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde3884_PushToSliceExprModel> _138632_m) {
	;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1a97ed3ad_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_138632_m))._field_Elems))._field_ElemKind);
	jule::Bool _13947_ptr = false;;
	{
		auto &_match_expr{ (*(_138632_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac37b9c7:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _13988_u = (*(_138632_m))._field_Dest.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>();;
				if ((_1c4a12db0_Ptr((*((*(_13988_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1a971764b_possibleRefExpr(_self_, (*(*(_13988_u))._field_Expr.alloc)._field_Model);
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_13947_ptr=true;
					goto _match_end_1ac37d721;
				};
				goto _case_begin_1ac37d776;
			}
		}
		else {
			_case_begin_1ac37d776:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1a971764b_possibleRefExpr(_self_, (*_138632_m.alloc)._field_Dest);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1ac37d721:;
	};
	if (((*(*(_138632_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_13947_ptr) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1a971764b_possibleRefExpr(_self_, (*((*(_138632_m))._field_Elems))._field_Elems[0LL]);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_13947_ptr) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa((*(*(_138632_m))._field_Elems.alloc)._field_Elems.len()));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_138632_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac38523e:;
		if (it != expr_end) {
			jule::Any _143215_e = *it;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_13947_ptr) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1a971764b_possibleRefExpr(_self_, _143215_e);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1ac38523e:;
			++it;
			goto _iter_begin_1ac38523e;
		}
		_iter_end_1ac38523e:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a971e9e9_appendToSlice(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde3c5d_AppendToSliceExprModel> _144634_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971764b_possibleRefExpr(_self_, (*(_144634_m))._field_Dest);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1a971764b_possibleRefExpr(_self_, (*_144634_m.alloc)._field_Slice);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1a971eca2_appendCall(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b2db4_BuiltinAppendCallExprModel> _145431_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1a971764b_possibleRefExpr(_self_, (*(_145431_m))._field_Dest);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1a971764b_possibleRefExpr(_self_, (*_145431_m.alloc)._field_Elements);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a972005a_sizeof(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b47de_SizeofExprModel> _146227_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1a971764b_possibleRefExpr(_self_, (*(_146227_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9720313_alignof(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b49cb_AlignofExprModel> _146828_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1a971764b_possibleRefExpr(_self_, (*(_146828_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a97205bb_runeLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b4c73_RuneExprModel> _147424_m) {
	if (((*(_147424_m))._field_Code <= 127LL)) {
		_238b52b8e_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _14778_b = _1a9723877_sbtoa(static_cast<jule::U8>((*_147424_m.alloc)._field_Code));;
		if (_14778_b.equal("'", 1)) {
			_238b52b8e_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
		};
		_238b528d6_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _14778_b);
		_238b52b8e_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1a9724625_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_147424_m.alloc)._field_Code));
}



inline void _1a9720874_structureStatic(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b0851_StructStaticIdentExprModel> _148836_m) {
	static__1a972a43e_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_148836_m))._field_Method));
}



inline void _1a9720b2c_integratedToStr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5070_IntegratedToStrExprModel> _149236_m) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1a971764b_possibleRefExpr(_self_, (*(_149236_m))._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1a9720dd5_backendEmit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5449_BackendEmitExprModel> _149832_m) {
	if (((*(_149832_m))._field_Exprs.len() == 0LL)) {
		_1a97db7ca_write((*(_self_))._field_oc, (*_149832_m.alloc)._field_Code);
		return;;
	};
	jule::I64 _15033_n = _238b53662_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15047_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_149832_m.alloc)._field_Exprs.len(), (*_149832_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_149832_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac594393:;
		if (it != expr_end) {
			jule::I64 _15058_i = it - expr->begin();
			jule::Any _150515_expr = *it;
			{
				_1a971764b_possibleRefExpr(_self_, _150515_expr);
				jule::Slice<jule::U8> _15078_buf = _238b53b7e_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15047_args[_15058_i]=jule::Any(static_cast<jule::Str>(_15078_buf.slice(_15033_n)), &__jule_any_type4);
				{
					_238b53e37_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15078_buf.slice(0LL, _15033_n));
				};
			}
			_iter_next_1ac594393:;
			++it;
			_15058_i++;
			goto _iter_begin_1ac594393;
		}
		_iter_end_1ac594393:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, _21ddce034_Format((*_149832_m.alloc)._field_Code, _15047_args));
}



inline void _1a972118d_free(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48b5746_FreeExprModel> _151425_m) {
	_1a971764b_possibleRefExpr(_self_, (*(_151425_m))._field_Expr);
	if (_205b6491a_RC) {
		_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1a9721446_strComp(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde2795_StrCompExprModel> _152328_m) {
	if ((*(_152328_m))._field_NotEq) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _15273_s = _1dc547536_ReadStr((*_152328_m.alloc)._field_Right.ptr());;
	_1a971764b_possibleRefExpr(_self_, (*_152328_m.alloc)._field_Left);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1a9723e93_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _15273_s);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_15273_s.len()));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_152328_m.alloc)._field_NotEq) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1a97216ee_emptyCompare(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde1e9d_EmptyCompareExprModel> _153933_m) {
	if ((*(_153933_m))._field_Neg) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1a971764b_possibleRefExpr(_self_, (*_153933_m.alloc)._field_Expr);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1a97219a7_unsafeDeref(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde4434_UnsafeDerefExprModel> _154832_m) {
	{
		
		if ((_1c4a12b29_Sptr((*((*((*(_154832_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac393e62:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1a971764b_possibleRefExpr(_self_, (*(*((*(_154832_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1ac393aaa:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1555:4"));;
			}
		}
		_match_end_1ac3939ab:;
	};
}



inline void _1a9721c60_unsafeCasting(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_21dde4731_UnsafeCastingExprModel> _155934_m) {
	{
		
		if (_1c56c0a6c_IsAny(&((*((*(_155934_m))._field_Base))._field_ExprKind))) {
			_case_begin_1ac396b13:;
			{
				_1a971764b_possibleRefExpr(_self_, (*((*(*(_155934_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1c4a12b29_Sptr((*(*(_155934_m))._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1c4a12b29_Sptr((*((*(_155934_m))._field_Base))._field_Kind)))._field_Elem);
				} else {
					_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1a9800ea4_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_155934_m))._field_Base.alloc)._field_Kind);
				};
				_1a97db7ca_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1ac39675b:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1572:4"));;
			}
		}
		_match_end_1ac39666d:;
	};
}



inline void _1a9722018_model(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Any _157626_m) {
	{
		auto &_match_expr{ _157626_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ac39c2cd:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, _157626_m.cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ac39c476:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, (*(_157626_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ac39c4dc:;
			{
				_1a9800ea4_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _157626_m.cast_ptr<_1c4a1020e_TypeKind>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac39c553:;
			{
				_1a9714e73_constant(_self_, _157626_m.cast_ptr<_1dc54537a_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac39c5b9:;
			{
				_1a97167c1_var(_self_, _157626_m.cast_ptr<_1c49715b0_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ac39c630:;
			{
				_1a9716a79_structureIns(_self_, _157626_m.cast_ptr<_1c48a6407_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ac39c696:;
			{
				_1a971b908_funcInsCommon(_self_, _157626_m.cast_ptr<_1c48bb719_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ac39d301:;
			{
				_1a9716260_unsafeBinary(_self_, (*(_157626_m.unsafe_cast_ptr<_21dde3125_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac39d367:;
			{
				_1a9716518_binary(_self_, _157626_m.cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac39d3cd:;
			{
				_1a9716d32_unary(_self_, _157626_m.cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac39d444:;
			{
				_1a97170da_structureLit(_self_, _157626_m.cast_ptr<_1c48ab60a_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ac39d4aa:;
			{
				_1a9717393_allocStructure(_self_, _157626_m.cast_ptr<_1c48ab907_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac39d521:;
			{
				_1a9717d22_casting(_self_, _157626_m.cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac39d587:;
			{
				_1a9719c03_funcCall(_self_, _157626_m.cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1ac39d60e:;
			{
				_1a9719eab_slice(_self_, _157626_m.cast_ptr<_1c48acc16_SliceExprModel>(&__jule_any_type77));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ac39d686:;
			{
				_1a971b650_array(_self_, _157626_m.cast_ptr<_1c48b0c2a_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1ac39d70d:;
			{
				_1a971a51c_unsafeIndexing(_self_, _157626_m.cast_ptr<_21dde34aa_UnsafeIndexingExprModel>(&__jule_any_type133));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac39d785:;
			{
				_1a971a264_indexing(_self_, _157626_m.cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac39d80c:;
			{
				_1a971a7c5_anonFunc(_self_, _157626_m.cast_ptr<_1c48ad673_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ac39d884:;
			{
				_1a971aa7d_mapExpr(_self_, _157626_m.cast_ptr<_1c48ae003_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1ac39d90b:;
			{
				_1a971ad36_slicing(_self_, _157626_m.cast_ptr<_1c48ae586_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ac39d983:;
			{
				_1a971b0de_traitSub(_self_, _157626_m.cast_ptr<_1c48aeb19_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac39da0a:;
			{
				_1a971b397_structureSub(_self_, _157626_m.cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ac39da82:;
			{
				_1a971be69_tuple(_self_, _157626_m.cast_ptr<_1c48b1027_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ac39db09:;
			{
				_1a971c4ca_outCall(_self_, _157626_m.cast_ptr<_1c48b1401_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ac39db81:;
			{
				_1a971c783_outlnCall(_self_, _157626_m.cast_ptr<_1c48b17ca_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac39dc08:;
			{
				_1a971c222_newCall(_self_, _157626_m.cast_ptr<_1c48b1ba4_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ac39dc80:;
			{
				_1a971ca3b_panicCall(_self_, _157626_m.cast_ptr<_1c48b207d_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ac39dd07:;
			{
				_1a971cce4_assertCall(_self_, _157626_m.cast_ptr<_1c48b2534_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ac39dd7e:;
			{
				_1a971d09c_errorCall(_self_, _157626_m.cast_ptr<_1c48b413a_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ac39de06:;
			{
				_1a971e488_makeCall(_self_, _157626_m.cast_ptr<_1c48b29da_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ac39de7d:;
			{
				_1a971eca2_appendCall(_self_, _157626_m.cast_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ac39e005:;
			{
				_1a971d355_copyCall(_self_, _157626_m.cast_ptr<_1c48b3c61_BuiltinCopyCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ac39e07c:;
			{
				_1a971d60d_lenCall(_self_, _157626_m.cast_ptr<_1c48b31b1_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ac39e104:;
			{
				_1a971d8b6_capCall(_self_, _157626_m.cast_ptr<_1c48b34ad_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ac39e17b:;
			{
				_1a971db6e_deleteCall(_self_, _157626_m.cast_ptr<_1c48b3887_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ac39e203:;
			{
				_1a972005a_sizeof(_self_, _157626_m.cast_ptr<_1c48b47de_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1ac39e27a:;
			{
				_1a9720313_alignof(_self_, _157626_m.cast_ptr<_1c48b49cb_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ac39e302:;
			{
				_1a97205bb_runeLit(_self_, _157626_m.cast_ptr<_1c48b4c73_RuneExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ac39e379:;
			{
				_1a9720874_structureStatic(_self_, _157626_m.cast_ptr<_1c48b0851_StructStaticIdentExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ac39e401:;
			{
				_1a9720b2c_integratedToStr(_self_, _157626_m.cast_ptr<_1c48b5070_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ac39e478:;
			{
				_1a9720dd5_backendEmit(_self_, _157626_m.cast_ptr<_1c48b5449_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ac39e500:;
			{
				_1a972118d_free(_self_, _157626_m.cast_ptr<_1c48b5746_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1ac39e577:;
			{
				_1a9721446_strComp(_self_, _157626_m.cast_ptr<_21dde2795_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1ac39e5ee:;
			{
				_1a97167c1_var(_self_, (*(_157626_m.unsafe_cast_ptr<_21dde2322_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ac39e676:;
			{
				_1a97216ee_emptyCompare(_self_, _157626_m.cast_ptr<_21dde1e9d_EmptyCompareExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1ac39e6ed:;
			{
				_1a97219a7_unsafeDeref(_self_, _157626_m.cast_ptr<_21dde4434_UnsafeDerefExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1ac39e775:;
			{
				_1a9721c60_unsafeCasting(_self_, _157626_m.cast_ptr<_21dde4731_UnsafeCastingExprModel>(&__jule_any_type132));
			}
		}
		else {
			_case_begin_1ac39c410:;
			{
				_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1ac39c3aa:;
	};
}



inline jule::Bool _1a9722359_handleFieldByDefault(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a5857_FieldIns>* _168042_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_168042_f))))._field_Default != nullptr)) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1a972b3c9_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_168042_f))))._field_Decl));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1a971764b_possibleRefExpr(_self_, (*(*((*(_168042_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a9807a8d_ableToInit(&((*((*(_168042_f))))._field_Kind))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1a972b3c9_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_168042_f))))._field_Decl));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1a97231d4_initExpr(_self_, (*((*(_168042_f))))._field_Kind);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a9722612_initStructLit(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _170135_s) {
	if ((*((*((*(_170135_s))))._field_Decl))._field_Binded) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1a97ee25a_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_170135_s)));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1a97ee25a_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_170135_s)));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17107_inited = false;;
	{
		auto expr = &((*((*(_170135_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3c01be:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> _171115_f = *it;
			{
				if (_17107_inited) {
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17107_inited=_1a9722359_handleFieldByDefault(_self_, &(_171115_f));
			}
			_iter_next_1ac3c01be:;
			++it;
			goto _iter_begin_1ac3c01be;
		}
		_iter_end_1ac3c01be:;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1a97228ba_fillCollectionByDefault(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _172345_elem) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a97231d4_initExpr(_self_, (*(_172345_elem)));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1a9722b73_initCollection(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _173836_elem) {
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1a97228ba_fillCollectionByDefault(_self_, _173836_elem);
}



inline void _1a9722e2b_initArray(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1e608_Arr>* _175231_arr) {
	if (((*((*(_175231_arr))))._field_N == 0LL)) {
		_1a97ee5bd_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_175231_arr)));
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1a97ee5bd_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_175231_arr)));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1a9722b73_initCollection(_self_, &((*((*(_175231_arr))))._field_Elem));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1a97231d4_initExpr(jule::Ptr<_1a97136ad_exprCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _176629_t) {
	if (_1c4a120e0_NilCompatible(_176629_t.ptr())) {
		if ((_1c4a12db0_Ptr(_176629_t) != nullptr)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1a9800ea4_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _176629_t);
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1c4a1cdcb_Tuple> _17767_tup = _1c4a146b9_Tup(_176629_t);;
	if ((_17767_tup != nullptr)) {
		_1a980577d_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _17767_tup);
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_17767_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac3d69ee:;
			if (it != expr_end) {
				jule::I64 _17809_i = it - expr->begin();
				jule::Ptr<_1c4a1020e_TypeKind> _178016_tt = *it;
				{
					if ((!(_1a9807d68_shouldInitialized(&(_178016_tt))))) {
						goto _iter_next_1ac3d69ee;
					};
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1a97db7ca_write((*(_self_))._field_oc, _1dc536d2d_Itoa(_17809_i));
					_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1a97231d4_initExpr(_self_, _178016_tt);
					if ((((*_17767_tup.alloc)._field_Types.len() - _17809_i) > 1LL)) {
						_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1ac3d69ee:;
				++it;
				_17809_i++;
				goto _iter_begin_1ac3d69ee;
			}
			_iter_end_1ac3d69ee:;
		};
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1c48ce8c5_Enum> _17957_enm = _1c4a13146_Enum(_176629_t);;
	if ((_17957_enm != nullptr)) {
		_1a9722018_model(_self_, (*((*((*((*_17957_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _18003_prim = _1c4a12893_Prim(_176629_t);;
	if ((_18003_prim != nullptr)) {
		if (_1dc544852_IsNum((*_18003_prim.alloc)._field_Kind)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1c4a1b01c_IsBool(_18003_prim)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1c4a1b2a3_IsStr(_18003_prim)) {
			_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1c4a13663_Arr(_176629_t) != nullptr)) {
		jule::Ptr<_1c4a1e608_Arr> _18128_arr = _1c4a13663_Arr(_176629_t);;
		_1a9722e2b_initArray(_self_, &(_18128_arr));
		return;;
	};
	jule::Ptr<_1c48a6407_StructIns> _18167_s = _1c4a13e16_Struct(_176629_t);;
	if ((_18167_s != nullptr)) {
		_1a9722612_initStructLit(_self_, &(_18167_s));
		return;;
	};
	_1a9800ea4_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _176629_t);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a97136ad_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97260a5_TestCoder_eq(_1a97260a5_TestCoder *_self_, _1a97260a5_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1a97260a5_TestCoder> static__1a972655b_New(jule::Ptr<_1a97db0e3_ObjectCoder>* _2921_oc) {
	return jule::new_ptr<_1a97260a5_TestCoder>(_1a97260a5_TestCoder{._field_t=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_oc=(*(_2921_oc))});;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1a97267e2_findTestingPackage(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3e2c08:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _3615_imp = *it;
			{
				if ((*(_3615_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3615_imp;;
				};
			}
			_iter_next_1ac3e2c08:;
			++it;
			goto _iter_begin_1ac3e2c08;
		}
		_iter_end_1ac3e2c08:;
	};
	return nullptr;;
}



inline void _1a9726a9a_appendTest(jule::Ptr<_1a97260a5_TestCoder> _self_, jule::Ptr<_1c48bb719_FnIns> _4431_f) {
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97272d7_callTmReset(_self_);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a9723e93_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_4431_f))._field_Decl))._field_Ident);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1a97dc17c_indent((*(_self_))._field_oc);
	static__1a972a43e_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4431_f));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1a9726d53_appendPackageTests(jule::Ptr<_1a97260a5_TestCoder> _self_, jule::Ptr<_1c4930c45_Package>* _5940_p) {
	{
		auto expr = &((*((*(_5940_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aabce1e9:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _6015_file = *it;
			{
				{
					auto expr = &((*(_6015_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aabceb67:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _6116_f = *it;
						{
							if (_1c56c2c06_HasDirective(&((*(_6116_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1a9726a9a_appendTest(_self_, (*_6116_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1aabceb67:;
						++it;
						goto _iter_begin_1aabceb67;
					}
					_iter_end_1aabceb67:;
				};
			}
			_iter_next_1aabce1e9:;
			++it;
			goto _iter_begin_1aabce1e9;
		}
		_iter_end_1aabce1e9:;
	};
}



inline jule::Bool _1a97270d9_readyTestingPackage(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	jule::Ptr<_1c492cd1e_ImportInfo> _707_p = _1a97267e2_findTestingPackage(_self_);;
	if ((_707_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1c492e02e_FindStruct(_707_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1c48a74a2_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1c48a74a2_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1c48a74a2_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1a97272d7_callTmReset(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	static__1a972a153_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a97274d5_callTmFailed(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	static__1a972a153_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a97276d3_callTmSkipped(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	static__1a972a153_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1a97278d1_Serialize(jule::Ptr<_1a97260a5_TestCoder> _self_) {
	_1a97e8034_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1a97e79c3_end((*(_self_))._field_oc);
	});;
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	if ((!(_1a97270d9_readyTestingPackage(_self_)))) {
		_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		_1a97dbe7e_doneIndent((*(_self_))._field_oc);
		return;;
	};
	_238b51e24_StrBuilder _1187_tb = static__238b52375_New(40LL);;
	_1a97ee25a_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1187_tb), (*_self_.alloc)._field_t);
	_1a97ec19d_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _238b53b7e_Buf(&_1187_tb));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1a97dba83_writeBytes((*(_self_))._field_oc, _238b53b7e_Buf(&_1187_tb));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1a97dbc81_addIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1a97274d5_callTmFailed(_self_);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1a97276d3_callTmSkipped(_self_);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1a9726d53_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1a97dbe7e_doneIndent((*(_self_))._field_oc);
	_1a97dc17c_indent((*(_self_))._field_oc);
	_1a97db7ca_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1a97260a5_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a9729031_identCoder_eq(_1a9729031_identCoder *_self_, _1a9729031_identCoder _other_) { return true; }

inline void static__1a9729570_writeIdentTo(_238b51e24_StrBuilder* _3530_buf, jule::Str* _3548_ident) {
	{
		auto expr = _3548_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aae85857:;
		if (it != expr_end) {
			jule::U8 *_3610_b = it;
			{
				if (((*(_3610_b)) >= 128LLU)) {
					goto _julec_label_1aae85bcb;
				};
			}
			_iter_next_1aae85857:;
			++it;
			goto _iter_begin_1aae85857;
		}
		_iter_end_1aae85857:;
	};
	_238b528d6_WriteStr(_3530_buf, (*(_3548_ident)));
	return;;
	_julec_label_1aae85bcb:;
	{
		auto expr = _3548_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4610_r;
		_iter_begin_1ac597929:;
		std::tie(_4610_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4610_r < 128LL)) {
					_238b52b8e_WriteByte(_3530_buf, static_cast<jule::U8>(_4610_r));
					goto _iter_next_1ac597929;
				};
				_238b528d6_WriteStr(_3530_buf, _1dc536a64_FmtInt(static_cast<jule::I64>(_4610_r), 15LL));
			}
			_iter_next_1ac597929:;
			it += len;
			goto _iter_begin_1ac597929;
		}
	};
}



inline void static__1a9729916_toOut(_238b51e24_StrBuilder* _6323_buf, jule::Str _6340_ident, jule::Uintptr _6352_addr) {
	_238b52b8e_WriteByte(_6323_buf, '_');
	if ((_6352_addr != 0LLU)) {
		_238b528d6_WriteStr(_6323_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_6352_addr), 15LL));
		_238b52b8e_WriteByte(_6323_buf, '_');
	};
	static__1a9729570_writeIdentTo(_6323_buf, &(_6340_ident));
}



inline void static__1a9729d67_toLocal(_238b51e24_StrBuilder* _7825_buf, jule::I64 _7842_row, jule::I64 _7852_col, jule::Str* _7863_ident) {
	_238b52b8e_WriteByte(_7825_buf, '_');
	_238b528d6_WriteStr(_7825_buf, _1dc536d2d_Itoa(_7842_row));
	_238b528d6_WriteStr(_7825_buf, _1dc536d2d_Itoa(_7852_col));
	_238b52b8e_WriteByte(_7825_buf, '_');
	static__1a9729570_writeIdentTo(_7825_buf, _7863_ident);
}



inline void static__1a972a153_func(_238b51e24_StrBuilder* _8622_buf, jule::Ptr<_1c48b8738_Fn>* _8640_f) {
	{
		
		if ((*((*(_8640_f))))._field_Binded) {
			_case_begin_1ac59c258:;
			{
				_238b528d6_WriteStr(_8622_buf, (*((*(_8640_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8640_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1ac59c302:;
			{
				_238b528d6_WriteStr(_8622_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1c48b8e75_IsMethod((*(_8640_f)).ptr())) {
			_case_begin_1ac59c368:;
			{
				if ((*((*(_8640_f))))._field_Statically) {
					_238b528d6_WriteStr(_8622_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1ac59c104:;
	};
	static__1a9729916_toOut(_8622_buf, (*((*(_8640_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8640_f))));
}



inline void static__1a972a43e_funcIns(_238b51e24_StrBuilder* _10225_buf, jule::Ptr<_1c48bb719_FnIns>* _10243_f) {
	if (_1c48bcbd2_IsBuiltin((*(_10243_f)).ptr())) {
		_238b528d6_WriteStr(_10225_buf, jule::Str::lit("jule::", 6));
		_238b528d6_WriteStr(_10225_buf, (*((*((*(_10243_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10243_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10243_f))))._field_Generics.len() == 0LL))) {
		static__1a972a153_func(_10225_buf, &((*((*(_10243_f))))._field_Decl));
		return;;
	};
	static__1a9729916_toOut(_10225_buf, (*(*((*(_10243_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10243_f))));
}



inline void static__1a972a72a_traitDecl(_238b51e24_StrBuilder* _11727_buf, jule::Ptr<_1c48cc1b9_Trait> _11744_t) {
	static__1a9729916_toOut(_11727_buf, (*(_11744_t))._field_Ident, static_cast<jule::Uintptr>(_11744_t));
}



inline void static__1a972aa16_param(_238b51e24_StrBuilder* _12123_buf, jule::Ptr<_1c48b6c64_Param>* _12141_p) {
	if ((_1c486ed4e_IsAnonIdent((*((*(_12141_p))))._field_Ident) || _1c486ea85_IsIgnoreIdent((*((*(_12141_p))))._field_Ident))) {
		return;;
	};
	if (_1c48b73b3_IsSelf((*(_12141_p)).ptr())) {
		_238b528d6_WriteStr(_12123_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12141_p))))._field_Token == nullptr)) {
		static__1a9729d67_toLocal(_12123_buf, 0LL, 0LL, &((*((*(_12141_p))))._field_Ident));
		return;;
	};
	static__1a9729d67_toLocal(_12123_buf, (*((*((*(_12141_p))))._field_Token))._field_Row, (*((*((*(_12141_p))))._field_Token))._field_Column, &((*((*(_12141_p))))._field_Ident));
}



inline void static__1a972ad02_structure(_238b51e24_StrBuilder* _13627_buf, jule::Ptr<_1c48a3679_Struct>* _13645_s) {
	if ((*((*(_13645_s))))._field_Binded) {
		if ((!(_1c56c2c06_HasDirective(&((*((*(_13645_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_238b528d6_WriteStr(_13627_buf, jule::Str::lit("struct ", 7));
		};
		_238b528d6_WriteStr(_13627_buf, (*((*(_13645_s))))._field_Ident);
		return;;
	};
	static__1a9729916_toOut(_13627_buf, (*((*(_13645_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13645_s))));
}



inline void static__1a972b0dd_structureIns(_238b51e24_StrBuilder* _14730_buf, jule::Ptr<_1c48a6407_StructIns>* _14748_s) {
	if (((*((*((*(_14748_s))))._field_Decl))._field_Binded || ((*((*(_14748_s))))._field_Generics.len() == 0LL))) {
		static__1a972ad02_structure(_14730_buf, &((*((*(_14748_s))))._field_Decl));
		return;;
	};
	static__1a9729916_toOut(_14730_buf, (*(*((*(_14748_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14748_s))));
}



inline void static__1a972b3c9_field(_238b51e24_StrBuilder* _15523_buf, jule::Ptr<_1c48a0753_Field>* _15541_f) {
	if ((*((*((*(_15541_f))))._field_Owner))._field_Binded) {
		_238b528d6_WriteStr(_15523_buf, (*((*(_15541_f))))._field_Ident);
		return;;
	};
	_238b528d6_WriteStr(_15523_buf, jule::Str::lit("_field_", 7));
	static__1a9729570_writeIdentTo(_15523_buf, &((*((*(_15541_f))))._field_Ident));
}



inline void static__1a972b6b5_var(_238b51e24_StrBuilder* _16521_buf, jule::Ptr<_1c49715b0_Var> _16542_v) {
	{
		
		if ((*(_16542_v))._field_Binded) {
			_case_begin_1ac5aa9c5:;
			{
				_238b528d6_WriteStr(_16521_buf, (*_16542_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("error", 5)) {
			_case_begin_1ac5aaa3b:;
			{
				_238b528d6_WriteStr(_16521_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16542_v))._field_Ident.equal("self", 4)) {
			_case_begin_1ac5aaaa2:;
			{
				_238b528d6_WriteStr(_16521_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16542_v))._field_RetOrder == -1LL)) {
			_case_begin_1ac5aab18:;
			{
				_238b528d6_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16542_v))._field_RetOrder >= 0LL)) {
			_case_begin_1ac5aab7e:;
			{
				_238b528d6_WriteStr(_16521_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_238b528d6_WriteStr(_16521_buf, _1dc536d2d_Itoa((*_16542_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16542_v))._field_Scope != nullptr)) {
			_case_begin_1ac5aabe5:;
			{
				static__1a9729d67_toLocal(_16521_buf, (*((*_16542_v.alloc)._field_Token))._field_Row, (*(*(_16542_v))._field_Token.alloc)._field_Column, &((*_16542_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1ac5aa95e:;
			{
				static__1a9729916_toOut(_16521_buf, (*(_16542_v))._field_Ident, static_cast<jule::Uintptr>(_16542_v));
			}
		}
		_match_end_1ac5aa860:;
	};
}



inline void static__1a972b9a1_iterBegin(_238b51e24_StrBuilder* _18727_buf, jule::Uintptr _18744_it) {
	_238b528d6_WriteStr(_18727_buf, jule::Str::lit("_iter_begin_", 12));
	_238b528d6_WriteStr(_18727_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_18744_it), 15LL));
}



inline void static__1a972bc8c_iterEnd(_238b51e24_StrBuilder* _19225_buf, jule::Uintptr _19242_it) {
	_238b528d6_WriteStr(_19225_buf, jule::Str::lit("_iter_end_", 10));
	_238b528d6_WriteStr(_19225_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_19242_it), 15LL));
}



inline void static__1a972c078_iterNext(_238b51e24_StrBuilder* _19726_buf, jule::Uintptr _19743_it) {
	_238b528d6_WriteStr(_19726_buf, jule::Str::lit("_iter_next_", 11));
	_238b528d6_WriteStr(_19726_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_19743_it), 15LL));
}



inline void static__1a972c364_label(_238b51e24_StrBuilder* _20223_buf, jule::Uintptr _20240_u) {
	_238b528d6_WriteStr(_20223_buf, jule::Str::lit("_julec_label_", 13));
	_238b528d6_WriteStr(_20223_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_20240_u), 15LL));
}



inline void static__1a972c650_matchEnd(_238b51e24_StrBuilder* _20726_buf, jule::Uintptr _20743_m) {
	_238b528d6_WriteStr(_20726_buf, jule::Str::lit("_match_end_", 11));
	_238b528d6_WriteStr(_20726_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_20743_m), 15LL));
}



inline void static__1a972c93b_caseBegin(_238b51e24_StrBuilder* _21227_buf, jule::Uintptr _21244_c) {
	_238b528d6_WriteStr(_21227_buf, jule::Str::lit("_case_begin_", 12));
	_238b528d6_WriteStr(_21227_buf, _1dc53669b_FmtUint(static_cast<jule::U64>(_21244_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1a9729031_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97d9344_SerializationInfo_eq(_1a97d9344_SerializationInfo *_self_, _1a97d9344_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}



std::ostream &operator<<(std::ostream &_Stream, _1a97d9344_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97d9762_traitCast_eq(_1a97d9762_traitCast *_self_, _1a97d9762_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}



std::ostream &operator<<(std::ostream &_Stream, _1a97d9762_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97d9b3b_anonHash_eq(_1a97d9b3b_anonHash *_self_, _1a97d9b3b_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}



std::ostream &operator<<(std::ostream &_Stream, _1a97d9b3b_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a97db0e3_ObjectCoder> static__1a97db522_New(jule::Ptr<_1c56b4830_IR>* _11721_ir, _1a97d9344_SerializationInfo _11730_info) {
	jule::Ptr<_1a97db0e3_ObjectCoder> _1187_oc = jule::new_ptr<_1a97db0e3_ObjectCoder>(_1a97db0e3_ObjectCoder{._field_Buf=_238b51e24_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_238b51e24_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_238b51e24_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_238b51e24_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_238b51e24_StrBuilder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11721_ir)), ._field_info=_11730_info, ._field_anons=jule::Slice<jule::Ptr<_1a97d9b3b_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=jule::Map<jule::Str,jule::Bool>(nullptr), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>(nullptr), ._field_traitCastMap=jule::Slice<_1a97d9762_traitCast>(nullptr), ._field_traitMetMap=jule::Map<jule::Ptr<_1c48bb719_FnIns>,jule::Slice<jule::Uintptr>>(nullptr), ._field_ec=jule::Ptr<_1a97136ad_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1a9706daa_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1a97eaca1_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0});;
	(*(_1187_oc))._field_ec=static__1a9713aa9_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_sc=static__1a9707581_new(&(_1187_oc));
	(*_1187_oc.alloc)._field_tc=static__1a97eb301_new(&(_1187_oc));
	return _1187_oc;;
}



inline void _1a97db7ca_write(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Str _12822_s) {
	_238b528d6_WriteStr(&(*(_self_))._field_Buf, _12822_s);
}



inline void _1a97dba83_writeBytes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Slice<jule::U8> _13227_b) {
	_238b5262d_Write(&(*(_self_))._field_Buf, _13227_b);
}



inline void _1a97dbc81_addIndent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1a97dbe7e_doneIndent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1a97dc17c_indent(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_238b5262d_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I64 _1a97dc4bd_findAnyType(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind>* _15133_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3eb6a1:;
		if (it != expr_end) {
			jule::I64 _1528_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _15215_at = *it;
			{
				if (_1c4a1094b_Equal(_15215_at, (*(_15133_t)))) {
					return _1528_i;;
				};
			}
			_iter_next_1ac3eb6a1:;
			++it;
			_1528_i++;
			goto _iter_begin_1ac3eb6a1;
		}
		_iter_end_1ac3eb6a1:;
	};
	return -1LL;;
}



inline jule::I64 _1a97dc80e_pushDealloc(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _16032_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac3ec240:;
		if (it != expr_end) {
			jule::I64 _1617_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _16110_dt = *it;
			{
				if (_1c4a1094b_Equal(_16110_dt, _16032_t)) {
					return _1617_i;;
				};
			}
			_iter_next_1ac3ec240:;
			++it;
			_1617_i++;
			goto _iter_begin_1ac3ec240;
		}
		_iter_end_1ac3ec240:;
	};
	jule::I64 _1663_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16032_t; __jule_collection; }));
	_238b528d6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_238b528d6_WriteStr(&(*_self_.alloc)._field_deallocObj, _1dc536d2d_Itoa(_1663_i));
	_238b528d6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1a9800ea4_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _16032_t);
	_238b528d6_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1663_i;;
}



inline jule::Str _1a97dcb50_pushAnonFn(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _17632_m) {
	jule::Str __jule_func_result;
	jule::Bool _1773_closure = _1c56c0dad_IsClosure(_17632_m);;
	if (_1773_closure) {
		_238b528d6_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I64 _1814_l = _238b53662_Len(&(*_self_.alloc)._field_anonObj);;
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_238b53b7e_Buf(&(*_self_.alloc)._field_anonObj).slice(_1814_l));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17632_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ac4044bc:;
			if (it != expr_end) {
				jule::Ptr<_1c49715b0_Var> _18616_v = *it;
				{
					_238b52b8e_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1a9800ea4_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18616_v))._field_Kind))._field_Kind);
					_238b52b8e_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18616_v.alloc)._field_Reference) {
						_238b52b8e_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1a972b6b5_var(&((*_self_.alloc)._field_anonObj), _18616_v);
					_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ac4044bc:;
				++it;
				goto _iter_begin_1ac4044bc;
			}
			_iter_end_1ac4044bc:;
		};
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17632_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1a97d9b3b_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1a97d9b3b_anonHash>(_1a97d9b3b_anonHash{._field_expr=(*(_17632_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1a97e3936_anonFuncInsDecl(_self_, _17632_m, __jule_func_result);
	_238b52b8e_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I64 _1a97dce91_pushAnyType(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4a1020e_TypeKind> _21632_t) {
	if ((_1c4a13146_Enum(_21632_t.ptr()) != nullptr)) {
		_21632_t=(*((*(_1c4a13146_Enum(_21632_t)))._field_Kind))._field_Kind;
	};
	jule::I64 _2207_i = _1a97dc4bd_findAnyType(_self_, &(_21632_t));;
	if ((_2207_i != -1LL)) {
		return _2207_i;;
	};
	_2207_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _21632_t; __jule_collection; }));
	jule::Str _2263_si = _1dc536d2d_Itoa(_2207_i);;
	if ((_1c4a12b29_Sptr(_21632_t) != nullptr)) {
		_238b51e24_StrBuilder _2288_elemKind = static__238b52375_New(40LL);;
		_1a9800ea4_kind((*_self_.alloc)._field_tc.ptr(), &(_2288_elemKind), (*(_1c4a12b29_Sptr(_21632_t)))._field_Elem);
		jule::I64 _2324_di = _1a97dc80e_pushDealloc(_self_, (*(_1c4a12b29_Sptr(_21632_t)))._field_Elem);;
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _1dc536d2d_Itoa(_2324_di));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1a97ec19d_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _238b53b7e_Buf(&_2288_elemKind));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _2514_comparable = _1c4a1183c_Comparable(_21632_t);;
		_238b51e24_StrBuilder _2528_kindB = static__238b52375_New(40LL);;
		_1a9800ea4_kind((*_self_.alloc)._field_tc.ptr(), &(_2528_kindB), _21632_t);
		jule::Str _2544_kind = _238b531cd_Str(&_2528_kindB);;
		jule::I64 _2574_di = _1a97dc80e_pushDealloc(_self_, _21632_t);;
		if (_2514_comparable) {
			jule::Str _2639_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
			_2639_lmodel+=_2544_kind;
			_2639_lmodel+=jule::Str::lit("*>(", 3);
			jule::Str _2669_rmodel = _2639_lmodel;;
			_2669_rmodel+=jule::Str::lit("other)", 6);
			_2639_lmodel+=jule::Str::lit("alloc)", 6);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return ", 48));
			_1a9715ea7__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_2639_lmodel), &(_2669_rmodel), &(_21632_t), &(_21632_t), static_cast<jule::U64>(50LLU), jule::Str::lit("==", 2));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
		};
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1c4a12db0_Ptr(_21632_t) == nullptr)) {
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
		} else {
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _1dc536d2d_Itoa(_2574_di));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_2514_comparable) {
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
		_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_2514_comparable) {
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2544_kind);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _2263_si);
			_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _2207_i;;
}



inline void _1a97dd249_pushResultIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _32235_f) {
	jule::Str _3233_s = static_cast<jule::Str>(_1a9806262_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_32235_f))))._field_Result)));;
	jule::Bool _3246_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3233_s, nullptr, &(_3246_ok));
	if (_3246_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3233_s]=false;
	_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, _3233_s);
	_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1c4a146b9_Tup((*((*(_32235_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac429569:;
		if (it != expr_end) {
			jule::I64 _3328_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _33215_t = *it;
			{
				_238b52b8e_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1a9800ea4_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _33215_t);
				_238b52b8e_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, _1dc536d2d_Itoa(_3328_i));
				_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ac429569:;
			++it;
			_3328_i++;
			goto _iter_begin_1ac429569;
		}
		_iter_end_1ac429569:;
	};
	_238b528d6_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1a97dd502_pushResult(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _34332_f) {
	if ((_1c48b8bde_IsVoid((*(_34332_f)).ptr()) || ((*((*((*(_34332_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _3477_n = (*((*(_34332_f))))._field_Instances.len();;
	if (((*((*(_34332_f))))._field_Generics.len() == 0LL)) {
		_3477_n=1LL;
	};
	{
		auto expr = (*((*(_34332_f))))._field_Instances.slice(0LL, _3477_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1acdd41cc:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _35115_ins = *it;
			{
				_1a97dd249_pushResultIns(_self_, &(_35115_ins));
			}
			_iter_next_1acdd41cc:;
			++it;
			goto _iter_begin_1acdd41cc;
		}
		_iter_end_1acdd41cc:;
	};
}



inline void _1a97dd865_pushAndWriteMaskMapper(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait> _35643_t1, jule::Ptr<_1c48cc1b9_Trait> _35659_t2) {
	_238b51e24_StrBuilder _3577_ident = static__238b52375_New(32LL);;
	_238b528d6_WriteStr(&_3577_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_238b528d6_WriteStr(&_3577_ident, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35659_t2)), 15LL));
	_238b528d6_WriteStr(&_3577_ident, jule::Str::lit("_to_", 4));
	_238b528d6_WriteStr(&_3577_ident, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_35643_t1)), 15LL));
	_238b5262d_Write(&(*(_self_))._field_Buf, _238b53b7e_Buf(&_3577_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdd7048:;
		if (it != expr_end) {
			_1a97d9762_traitCast _36510_m = *it;
			{
				if (((_36510_m._field_t1 == _35643_t1) && (_36510_m._field_t2 == _35659_t2))) {
					return;;
				};
			}
			_iter_next_1acdd7048:;
			++it;
			goto _iter_begin_1acdd7048;
		}
		_iter_end_1acdd7048:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1a97d9762_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a97d9762_traitCast{._field_t1=_35643_t1, ._field_t2=_35659_t2}; __jule_collection; }));
	;
	_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_238b5262d_Write(&(*_self_.alloc)._field_anyObj, _238b53b7e_Buf(&_3577_ident));
	_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_238b51e24_StrBuilder _3797_t1Ident = static__238b52375_New(16LL);;
	_238b51e24_StrBuilder _3807_t2Ident = static__238b52375_New(16LL);;
	static__1a972a72a_traitDecl(&(_3797_t1Ident), _35643_t1);
	static__1a972a72a_traitDecl(&(_3807_t2Ident), _35659_t2);
	{
		auto expr = &((*(_35643_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdd7664:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _38415_s1 = *it;
			{
				{
					auto expr = &((*(_35659_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1acddb646:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _38511_s2 = *it;
						{
							if ((_38415_s1 == _38511_s2)) {
								{
									auto expr = &((*(_38415_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1acddc515:;
									if (it != expr_end) {
										jule::Ptr<_1c48a6407_StructIns> _38718_s1i = *it;
										{
											jule::I64 _3887_i1 = _1c56c3740_FindTraitTypeOffsetS(_35643_t1, _38718_s1i);;
											jule::I64 _3897_i2 = _1c56c3740_FindTraitTypeOffsetS(_35659_t2, _38718_s1i);;
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_238b5262d_Write(&(*_self_.alloc)._field_anyObj, _238b53b7e_Buf(&_3807_t2Ident));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _1dc536d2d_Itoa(_3897_i2));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_238b5262d_Write(&(*_self_.alloc)._field_anyObj, _238b53b7e_Buf(&_3797_t1Ident));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, _1dc536d2d_Itoa(_3887_i1));
											_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1acddc515:;
										++it;
										goto _iter_begin_1acddc515;
									}
									_iter_end_1acddc515:;
								};
							};
						}
						_iter_next_1acddb646:;
						++it;
						goto _iter_begin_1acddb646;
					}
					_iter_end_1acddb646:;
				};
			}
			_iter_next_1acdd7664:;
			++it;
			goto _iter_begin_1acdd7664;
		}
		_iter_end_1acdd7664:;
	};
	_238b528d6_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1a97ddb1d_locInfo(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c486c19d_Token>* _40725_t) {
	jule::Str *_4084_loc = &((*((*((*(_40725_t))))._field_File))._field_Path);;
	if (_205b65025_Production) {
		{
			
			if (_2059e414b_HasPrefix((*(_4084_loc)), _205b5c072_PathStdlib)) {
				_case_begin_1acde29c1:;
				{
					_1a9723b63_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)).slice((_205a000d0_Dir(_205b5c072_PathStdlib).len() + 1LL)));
				}
			}
			else if (_2059e414b_HasPrefix((*(_4084_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1acde2aae:;
				{
					_1a9723b63_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_4084_loc)).slice((_205a000d0_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1acde2608:;
				{
					_1a9723b63_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
				}
			}
			_match_end_1acde253c:;
		};
	} else {
		_1a9723b63_cstrBytes(&((*(_self_))._field_Buf), (*(_4084_loc)));
	};
	_1a97db7ca_write(_self_, jule::Str::lit(":", 1));
	_1a97db7ca_write(_self_, _1dc536d2d_Itoa((*((*(_40725_t))))._field_Row));
	_1a97db7ca_write(_self_, jule::Str::lit(":", 1));
	_1a97db7ca_write(_self_, _1dc536d2d_Itoa((*((*(_40725_t))))._field_Column));
}



inline void _1a97ddd1b_head(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97d07ad_Time _4343_time = static__1a97d0da7_Now();;
	_1a97d00d7_AbsTime _4353_abs = _1a97d2590_Abs(&_4343_time);;
	_1a97db7ca_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1a97db7ca_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1a97db7ca_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
	_1a97db7ca_write(_self_, jule::Str::lit("// Date: ", 9));
	_1a97db7ca_write(_self_, _1dc53669b_FmtUint(_4353_abs._field_Day, 10LL));
	_1a97db7ca_write(_self_, jule::Str::lit("/", 1));
	_1a97db7ca_write(_self_, _1dc53669b_FmtUint(_4353_abs._field_Month, 10LL));
	_1a97db7ca_write(_self_, jule::Str::lit("/", 1));
	_1a97db7ca_write(_self_, _1dc53669b_FmtUint(_4353_abs._field_Year, 10LL));
	_1a97db7ca_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a97db7ca_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
	_1a97db7ca_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	if (_205b65025_Production) {
		_1a97db7ca_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_205b6491a_RC))) {
		_1a97db7ca_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_205b64cd3_Safety))) {
		_1a97db7ca_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a97de019_links(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1a97db7ca_write(_self_, _205b5c825_PathApi);
	_1a97db7ca_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1a97de019_links(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acdee0d7:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _47210_used = *it;
			{
				{
					
					if ((!((*(_47210_used))._field_Binded))) {
						_case_begin_1acdeedeb:;
						{
							goto _iter_next_1acdee0d7;
						}
					}
					else if (_205a8a1c0_IsStdHeaderPath((*(_47210_used))._field_Path)) {
						_case_begin_1acdeee84:;
						{
							_1a97db7ca_write(_self_, jule::Str::lit("#include ", 9));
							_1a97db7ca_write(_self_, (*_47210_used.alloc)._field_Path);
							_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_205a8a49a_IsValidHeaderExt(_2059ee673_Ext((*(_47210_used))._field_Path))) {
						_case_begin_1acdeeeea:;
						{
							_1a97db7ca_write(_self_, jule::Str::lit("#include \"", 10));
							_1a97db7ca_write(_self_, (*_47210_used.alloc)._field_Path);
							_1a97db7ca_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1acdeeca8:;
				};
			}
			_iter_next_1acdee0d7:;
			++it;
			goto _iter_begin_1acdee0d7;
		}
		_iter_end_1acdee0d7:;
	};
}



inline void _1a97de2c2_prepareStructure(_1a97db0e3_ObjectCoder* _self_, jule::Ptr<_1c48a3679_Struct>* _48837_s) {
	{
		auto expr = &((*((*(_48837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace01ccc:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _48915_ins = *it;
			{
				{
					auto expr = &((*(_48915_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace03718:;
					if (it != expr_end) {
						jule::Ptr<_1c48b8738_Fn> _49016_m = *it;
						{
							if ((*(_49016_m))._field_Statically) {
								goto _iter_next_1ace03718;
							};
							{
								auto expr = &((*_49016_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ace042b8:;
								if (it != expr_end) {
									jule::Ptr<_1c48bb719_FnIns> _49417_mins = *it;
									{
										jule::Ptr<_1c48ba691_ParamIns> _49510_p = (*(_49417_mins))._field_Params[0LL];;
										_238b51e24_StrBuilder _49610_kind = static__238b52375_New(40LL);;
										_1a9800ea4_kind((*(_self_))._field_tc.ptr(), &(_49610_kind), (*(_49510_p))._field_Kind);
										if ((!(_1c48b7649_IsRef((*_49510_p.alloc)._field_Decl.ptr())))) {
											_238b528d6_WriteStr(&_49610_kind, jule::Str::lit("*", 1));
										};
										(*_49510_p.alloc)._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1a97ea168_customType>(_1a97ea168_customType{._field_kind=_238b531cd_Str(&_49610_kind)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data27)});
									}
									_iter_next_1ace042b8:;
									++it;
									goto _iter_begin_1ace042b8;
								}
								_iter_end_1ace042b8:;
							};
						}
						_iter_next_1ace03718:;
						++it;
						goto _iter_begin_1ace03718;
					}
					_iter_end_1ace03718:;
				};
			}
			_iter_next_1ace01ccc:;
			++it;
			goto _iter_begin_1ace01ccc;
		}
		_iter_end_1ace01ccc:;
	};
}



inline void _1a97de4c0_prepareStructures(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace025d5:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _51215_s = *it;
			{
				if (((*(_51215_s))._field_Token != nullptr)) {
					_1a97de2c2_prepareStructure(_self_.ptr(), &(_51215_s));
				};
			}
			_iter_next_1ace025d5:;
			++it;
			goto _iter_begin_1ace025d5;
		}
		_iter_end_1ace025d5:;
	};
}



inline void _1a97de778_structurePlainDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _51940_s) {
	{
		auto expr = &((*((*(_51940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace08850:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _52015_ins = *it;
			{
				_1a97db7ca_write(_self_, jule::Str::lit("struct ", 7));
				static__1a972b0dd_structureIns(&((*_self_.alloc)._field_Buf), &(_52015_ins));
				_1a97db7ca_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1ace08850:;
			++it;
			goto _iter_begin_1ace08850;
		}
		_iter_end_1ace08850:;
	};
}



inline void _1a97de976_structurePlainDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace09d07:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _52815_s = *it;
			{
				if (((*(_52815_s))._field_Token != nullptr)) {
					_1a97de778_structurePlainDecl(_self_, &(_52815_s));
				};
			}
			_iter_next_1ace09d07:;
			++it;
			goto _iter_begin_1ace09d07;
		}
		_iter_end_1ace09d07:;
	};
}



inline void _1a97dec2e_fieldDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a5857_FieldIns>* _53531_f) {
	_1a9800ea4_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_53531_f))))._field_Kind);
	_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
	static__1a972b3c9_field(&((*_self_.alloc)._field_Buf), &((*((*(_53531_f))))._field_Decl));
	_1a97db7ca_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a97deed7_structureDestructor(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _54241_s) {
	;
	jule::Ptr<_1c48b8738_Fn> _5453_disposeMethod = _1c48a74a2_FindMethod((*(_54241_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _5467_disposed = static__1c4972baa_Dispose(_5453_disposeMethod);;
	if ((!(_5467_disposed))) {
		return;;
	};
	_1a97db7ca_write(_self_, jule::Str::lit("~", 1));
	static__1a972b0dd_structureIns(&((*_self_.alloc)._field_Buf), _54241_s);
	_1a97db7ca_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1a972a153_func(&((*_self_.alloc)._field_Buf), &(_5453_disposeMethod));
	_1a97db7ca_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1a97e0405_structureOperatorEq(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Str _55836_ident, jule::Ptr<_1c48a6407_StructIns>* _55853_s, jule::Bool _55868_decl) {
	if ((!(_1a97e8b8e_defaultEq(_55853_s)))) {
		return;;
	};
	_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
	if (_1c56db769_Inline) {
		_1a97db7ca_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1a97db7ca_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1a97db7ca_write(_self_, _55836_ident);
	_1a97db7ca_write(_self_, jule::Str::lit("_eq", 3));
	_1a97db7ca_write(_self_, jule::Str::lit("(", 1));
	_1a97db7ca_write(_self_, _55836_ident);
	_1a97db7ca_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1a97db7ca_write(_self_, _55836_ident);
	_1a97db7ca_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_55868_decl) {
		_1a97db7ca_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1a97db7ca_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_55853_s))))._field_Fields.len() == 0LL)) {
		_1a97db7ca_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1a97dbc81_addIndent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("return ", 7));
	_1a97dbc81_addIndent(_self_);
	jule::Bool _5897_writed = false;;
	jule::Str _5927_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _5937_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_55853_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace17b4a:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> _59515_f = *it;
			{
				jule::Ptr<_1c48a6407_StructIns> _5974_strct = _1c4a13e16_Struct((*(_59515_f))._field_Kind.ptr());;
				if ((((_5974_strct != nullptr) && ((*_5974_strct.alloc)._field_Decl != nullptr)) && (*(*(_5974_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1ace17b4a;
				};
				if (_5897_writed) {
					_1a97db7ca_write(_self_, jule::Str::lit(" &&", 3));
				};
				_5897_writed=true;
				_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
				_1a97dc17c_indent(_self_);
				_238b51e24_StrBuilder _6088_fIdent = static__238b52375_New((*((*_59515_f.alloc)._field_Decl))._field_Ident.len());;
				static__1a972b3c9_field(&(_6088_fIdent), &((*_59515_f.alloc)._field_Decl));
				_5927_lmodel+=_238b5142e_BytesStr(_238b53b7e_Buf(&_6088_fIdent));
				_5937_rmodel+=_238b5142e_BytesStr(_238b53b7e_Buf(&_6088_fIdent));
				_1a9715ea7__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_5927_lmodel), &(_5937_rmodel), &((*_59515_f.alloc)._field_Kind), &((*_59515_f.alloc)._field_Kind), static_cast<jule::U64>(50LLU), jule::Str::lit("==", 2));
				(_5927_lmodel).mut_slice(0LL, (_5927_lmodel.len() - _238b53662_Len(&_6088_fIdent)));;
				_5937_rmodel=_5927_lmodel.slice(0LL, (_5937_rmodel.len() - _238b53662_Len(&_6088_fIdent)));
			}
			_iter_next_1ace17b4a:;
			++it;
			goto _iter_begin_1ace17b4a;
		}
		_iter_end_1ace17b4a:;
	};
	_1a97dbe7e_doneIndent(_self_);
	if ((!(_5897_writed))) {
		_1a97db7ca_write(_self_, jule::Str::lit("true", 4));
	};
	_1a97db7ca_write(_self_, jule::Str::lit(";\n", 2));
	_1a97dbe7e_doneIndent(_self_);
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1a97e0768_structureOperators(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _62640_s, jule::Bool _62655_decl) {
	_238b51e24_StrBuilder _6277_sb = static__238b52375_New(40LL);;
	static__1a972b0dd_structureIns(&(_6277_sb), _62640_s);
	jule::Str _6293_ident = _238b531cd_Str(&_6277_sb);;
	_1a97e0405_structureOperatorEq(_self_, _6293_ident, _62640_s, _62655_decl);
}



inline void _1a97e0a21_structureInsDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _63538_s) {
	{
		auto expr = &((*((*(_63538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace21d1e:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _63615_m = *it;
			{
				if (_1a97e88c5_isHeadDecl(&(_63615_m))) {
					_1a97e1d74_funcDecl(_self_, &(_63615_m), false);
				};
			}
			_iter_next_1ace21d1e:;
			++it;
			goto _iter_begin_1ace21d1e;
		}
		_iter_end_1ace21d1e:;
	};
	_1a97db7ca_write(_self_, jule::Str::lit("struct ", 7));
	static__1a972b0dd_structureIns(&((*_self_.alloc)._field_Buf), _63538_s);
	_1a97db7ca_write(_self_, jule::Str::lit(" {\n", 3));
	_1a97dbc81_addIndent(_self_);
	{
		auto expr = &((*((*(_63538_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace23705:;
		if (it != expr_end) {
			jule::Ptr<_1c48a5857_FieldIns> _64715_f = *it;
			{
				_1a97dc17c_indent(_self_);
				_1a97dec2e_fieldDecl(_self_, &(_64715_f));
				_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1ace23705:;
			++it;
			goto _iter_begin_1ace23705;
		}
		_iter_end_1ace23705:;
	};
	_1a97dc17c_indent(_self_);
	_1a97deed7_structureDestructor(_self_, _63538_s);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	_1a97dbe7e_doneIndent(_self_);
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("};", 2));
	;
	_1a97e0768_structureOperators(_self_, _63538_s, true);
}



inline void _1a97e0cc9_structureDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _66535_s) {
	{
		auto expr = &((*((*(_66535_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace27385:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _66615_ins = *it;
			{
				_1a97e0a21_structureInsDecl(_self_, &(_66615_ins));
			}
			_iter_next_1ace27385:;
			++it;
			goto _iter_begin_1ace27385;
		}
		_iter_end_1ace27385:;
	};
}



inline void _1a97e0ec7_structureDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace27b05:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _67215_s = *it;
			{
				if (((*(_67215_s))._field_Token != nullptr)) {
					_1a97e0cc9_structureDecl(_self_, &(_67215_s));
					_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1ace27b05:;
			++it;
			goto _iter_begin_1ace27b05;
		}
		_iter_end_1ace27b05:;
	};
}



inline void _1a97e11c5_structureMethodDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace28b17:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _68115_s = *it;
			{
				if (((*(_68115_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_68115_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace2ac18:;
						if (it != expr_end) {
							jule::Ptr<_1c48a6407_StructIns> _68317_ins = *it;
							{
								{
									auto expr = &((*(_68317_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ace2b653:;
									if (it != expr_end) {
										jule::Ptr<_1c48b8738_Fn> _68418_m = *it;
										{
											if ((!(_1a97e88c5_isHeadDecl(&(_68418_m))))) {
												_1a97dd502_pushResult(_self_, &(_68418_m));
												_1a97e1d74_funcDecl(_self_, &(_68418_m), false);
											};
										}
										_iter_next_1ace2b653:;
										++it;
										goto _iter_begin_1ace2b653;
									}
									_iter_end_1ace2b653:;
								};
							}
							_iter_next_1ace2ac18:;
							++it;
							goto _iter_begin_1ace2ac18;
						}
						_iter_end_1ace2ac18:;
					};
				};
			}
			_iter_next_1ace28b17:;
			++it;
			goto _iter_begin_1ace28b17;
		}
		_iter_end_1ace28b17:;
	};
}



inline void _1a97e169d_funcHead(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _69930_buf, jule::Ptr<_1c48bb719_FnIns>* _69952_f, jule::Bool _69963_ptr, jule::Str _69974_ident) {
	if ((((!(_69963_ptr)) && _1c56db769_Inline) && (!(_1c48b920b_IsEntryPoint((*((*(_69952_f))))._field_Decl.ptr()))))) {
		_238b528d6_WriteStr(_69930_buf, jule::Str::lit("inline ", 7));
	};
	_1a980046a_funcInsResult((*(_self_))._field_tc.ptr(), _69930_buf, _69952_f);
	if (_69963_ptr) {
		_238b528d6_WriteStr(_69930_buf, jule::Str::lit("(*", 2));
		static__1a972a43e_funcIns(_69930_buf, _69952_f);
		_238b52b8e_WriteByte(_69930_buf, ')');
	} else {
		_238b52b8e_WriteByte(_69930_buf, ' ');
		if ((_69974_ident).empty()) {
			static__1a972a43e_funcIns(_69930_buf, _69952_f);
		} else {
			_238b528d6_WriteStr(_69930_buf, _69974_ident);
		};
	};
}



inline void _1a97e1a11_funcDeclIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _71833_f, jule::Bool _71844_ptr) {
	_1a97dc17c_indent(_self_);
	_1a97e169d_funcHead(_self_, &((*_self_.alloc)._field_Buf), _71833_f, _71844_ptr, jule::Str());
	_1a97e2ea7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _71833_f);
	_1a97db7ca_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1a97e1d74_funcDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _72530_f, jule::Bool _72538_ptr) {
	{
		auto expr = &((*((*(_72530_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace32813:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _72615_c = *it;
			{
				_1a97e1a11_funcDeclIns(_self_, &(_72615_c), _72538_ptr);
			}
			_iter_next_1ace32813:;
			++it;
			goto _iter_begin_1ace32813;
		}
		_iter_end_1ace32813:;
	};
}



inline void _1a97e212c_funcDeclTrait(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _73135_f) {
	{
		auto expr = &((*((*(_73135_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace33726:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _73215_c = *it;
			{
				jule::Ptr<_1c4a1020e_TypeKind> _7338_k = (*((*(_73215_c))._field_Params[0LL]))._field_Kind;;
				(*((*(_73215_c))._field_Params[0LL]))._field_Kind=_1a97d907a_generalGCPtr;
				_1a97e1a11_funcDeclIns(_self_, &(_73215_c), true);
				(*((*(_73215_c))._field_Params[0LL]))._field_Kind=_7338_k;
			}
			_iter_next_1ace33726:;
			++it;
			goto _iter_begin_1ace33726;
		}
		_iter_end_1ace33726:;
	};
}



inline void _1a97e232a_funcDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1c56b725b_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1ace3643d, jule::Ptr<__jule_anon_1ace3643d_ctx>::make(__jule_anon_1ace3643d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace3643d_ctx_handler));
}



inline void _1a97e25d3_traitDataTypeMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _75342_t) {
	_1c56b8108_IterTraitMethods(_75342_t, jule::__new_closure<void,jule::Ptr<_1c48b8738_Fn>*>((void*)__jule_anon_1ace3794a, jule::Ptr<__jule_anon_1ace3794a_ctx>::make(__jule_anon_1ace3794a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace3794a_ctx_handler));
}



inline void _1a97e27d1_traitDataTypes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1c56b725b_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1ace3d06b, jule::Ptr<__jule_anon_1ace3d06b_ctx>::make(__jule_anon_1ace3d06b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace3d06b_ctx_handler));
}



inline void _1a97e2b44_paramIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _78930_buf, jule::Ptr<_1c48ba691_ParamIns>* _78952_p) {
	_1a97eec94_paramIns((*(_self_))._field_tc.ptr(), _78930_buf, _78952_p);
	_238b52b8e_WriteByte(_78930_buf, ' ');
	static__1a972aa16_param(_78930_buf, &((*((*(_78952_p))))._field_Decl));
}



inline void _1a97e2ea7_paramsIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _79531_buf, jule::Ptr<_1c48bb719_FnIns>* _79553_f) {
	if (((!((*((*(_79553_f))))._field_AsAnon)) && ((*((*(_79553_f))))._field_Params.len() == 0LL))) {
		_238b528d6_WriteStr(_79531_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_238b52b8e_WriteByte(_79531_buf, '(');
	if ((*((*(_79553_f))))._field_AsAnon) {
		_238b528d6_WriteStr(_79531_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_79553_f))))._field_Params.len() > 0LL)) {
			_238b528d6_WriteStr(_79531_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_79553_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace4630a:;
		if (it != expr_end) {
			jule::I64 _8078_i = it - expr->begin();
			jule::Ptr<_1c48ba691_ParamIns> _80715_p = *it;
			{
				_1a97e2b44_paramIns(_self_, _79531_buf, &(_80715_p));
				if ((((*((*(_79553_f))))._field_Params.len() - _8078_i) > 1LL)) {
					_238b528d6_WriteStr(_79531_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1ace4630a:;
			++it;
			_8078_i++;
			goto _iter_begin_1ace4630a;
		}
		_iter_end_1ace4630a:;
	};
	_238b52b8e_WriteByte(_79531_buf, ')');
}



inline void _1a97e331a_varInitExpr(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c49715b0_Var>* _81633_v, jule::Fn<void> _81642_init) {
	if ((*((*(_81633_v))))._field_Statically) {
		_1a97db7ca_write(_self_, jule::Str::lit("static ", 7));
	};
	_1a9800ea4_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_81633_v))))._field_Kind))._field_Kind);
	_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_81633_v))))._field_Reference) {
		_1a97db7ca_write(_self_, jule::Str::lit("*", 1));
	};
	static__1a972b6b5_var(&((*_self_.alloc)._field_Buf), (*(_81633_v)));
	if ((_81642_init != nullptr)) {
		_1a97db7ca_write(_self_, jule::Str::lit(" = ", 3));
		_81642_init();
	};
	_1a97db7ca_write(_self_, jule::Str::lit(";", 1));
}



inline void _1a97e35c3_var(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c49715b0_Var> _83424_v) {
	if (_1c486ea85_IsIgnoreIdent((*(_83424_v))._field_Ident)) {
		return;;
	};
	if ((((*_83424_v.alloc)._field_Value != nullptr) && ((*(*(_83424_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_83424_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_83424_v.alloc)._field_Reference) {
				_1a97e331a_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1ace4d653, jule::Ptr<__jule_anon_1ace4d653_ctx>::make(__jule_anon_1ace4d653_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1ace4d653_ctx_handler));
			} else {
				_1a97e331a_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1ace50721, jule::Ptr<__jule_anon_1ace50721_ctx>::make(__jule_anon_1ace50721_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1ace50721_ctx_handler));
			};
			return;;
		};
		_1a97e331a_varInitExpr(_self_, &(_83424_v), nullptr);
		return;;
	};
	if ((*_83424_v.alloc)._field_Reference) {
		_1a97e331a_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1ace52e0a, jule::Ptr<__jule_anon_1ace52e0a_ctx>::make(__jule_anon_1ace52e0a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace52e0a_ctx_handler));
		return;;
	};
	if (_1a9807d68_shouldInitialized(&((*((*_83424_v.alloc)._field_Kind))._field_Kind))) {
		_1a97e331a_varInitExpr(_self_, &(_83424_v), jule::__new_closure<void>((void*)__jule_anon_1ace54082, jule::Ptr<__jule_anon_1ace54082_ctx>::make(__jule_anon_1ace54082_ctx{._self_=_self_,._83424_v=_83424_v}).as<jule::Uintptr>(), __jule_anon_1ace54082_ctx_handler));
		return;;
	};
	_1a97e331a_varInitExpr(_self_, &(_83424_v), nullptr);
}



inline void _1a97e3936_anonFuncInsDecl(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _86537_m, jule::Str _86558_ident) {
	_1a97e169d_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_86537_m))))._field_Func), false, _86558_ident);
	_1a97e2ea7_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_86537_m))))._field_Func));
	_238b52b8e_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1a97e3c99_anonFuncIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48ad673_AnonFnExprModel>* _87133_m, jule::Str _87154_ident) {
	_1a97e169d_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_87133_m))))._field_Func), false, _87154_ident);
	_1a97e2ea7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_87133_m))))._field_Func));
	_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
	_1a970e610_anonFuncScope((*_self_.alloc)._field_sc, (*(_87133_m)), _87154_ident);
	if (((*((*((*(_87133_m))))._field_Func))._field_Scope != nullptr)) {
		_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a97e410c_funcIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48bb719_FnIns>* _88129_f, jule::Str _88140_ident) {
	_1a97e169d_funcHead(_self_, &((*_self_.alloc)._field_Buf), _88129_f, false, _88140_ident);
	_1a97e2ea7_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _88129_f);
	_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
	_1a970e8b8_funcScope((*_self_.alloc)._field_sc, (*(_88129_f)));
	if (((*((*(_88129_f))))._field_Scope != nullptr)) {
		_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1a97e43b5_func(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _89126_f) {
	{
		auto expr = &((*((*(_89126_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace5c83d:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _89215_ins = *it;
			{
				_1a97e410c_funcIns(_self_, &(_89215_ins), jule::Str());
			}
			_iter_next_1ace5c83d:;
			++it;
			goto _iter_begin_1ace5c83d;
		}
		_iter_end_1ace5c83d:;
	};
}



inline void _1a97e4728_funcTrait(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _89727_s, jule::Ptr<_1c48bb719_FnIns>* _89747_f) {
	(*((*(_89747_f))))._field_Scope=nullptr;
	_238b51e24_StrBuilder _9007_nident = static__238b52375_New(30LL);;
	_238b528d6_WriteStr(&_9007_nident, jule::Str::lit("__jule_trait_method_", 20));
	_238b528d6_WriteStr(&_9007_nident, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_89747_f)))), 15LL));
	_238b528d6_WriteStr(&_9007_nident, jule::Str::lit("_", 1));
	_238b528d6_WriteStr(&_9007_nident, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_89727_s)))), 15LL));
	jule::Ptr<_1c4a1020e_TypeKind> _9067_k = (*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind=_1a97d907a_generalGCPtr;
	_1a97e410c_funcIns(_self_, _89747_f, _238b531cd_Str(&_9007_nident));
	(*((*((*(_89747_f))))._field_Params[0LL]))._field_Kind=_9067_k;
}



inline __jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool _1a97e4a69_findTraitMetMap(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48b8738_Fn>* _91237_m) {
	__jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c48bb719_FnIns> _9137_mins = (*((*(_91237_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace63107:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _91412_f = it->first;
			{
				if (((((*((*(_91412_f))._field_Decl))._field_Public == (*((*(_91237_m))))._field_Public) && ((*(*(_91412_f))._field_Decl.alloc)._field_Ident == (*((*(_91237_m))))._field_Ident)) && _1c48bc374_EqualFn(_91412_f, &(_9137_mins)))) {
					__jule_func_result.__jule_result_arg0 = _91412_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ace63107:;
			++it;
			goto _iter_begin_1ace63107;
		}
		_iter_end_1ace63107:;
	};
	__jule_func_result.__jule_result_arg0 = _9137_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1a97e4dcc_traitWrapper(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _92434_t, jule::Ptr<_1c48b8738_Fn>* _92450_m) {
	_julec_label_1ace65813:;
	{
		auto expr = &((*((*(_92434_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace659ab:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _92615_imp = *it;
			{
				jule::Ptr<_1c48bb719_FnIns> _9278_mepf;
				jule::Bool _92714_exist;
				({
					__jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool __jule_assign_result = _1a97e4a69_findTraitMetMap(_self_, _92450_m);
					_9278_mepf = __jule_assign_result.__jule_result_arg0;
					_92714_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_92714_exist) {
					jule::Slice<jule::Uintptr> _9309_vals = ({ jule::Slice<jule::Uintptr> __lookup_val; jule::Bool __lookup_ok; (*_self_.alloc)._field_traitMetMap.lookup(_9278_mepf, &__lookup_val, &__lookup_ok); if (!__lookup_ok) __lookup_val = jule::Slice<jule::Uintptr>(nullptr); __lookup_val; });;
					{
						auto expr = &(_9309_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ace67848:;
						if (it != expr_end) {
							jule::Uintptr _93112_val = *it;
							{
								if ((_93112_val == static_cast<jule::Uintptr>(_92615_imp))) {
									goto _iter_next_1ace659ab;
								};
							}
							_iter_next_1ace67848:;
							++it;
							goto _iter_begin_1ace67848;
						}
						_iter_end_1ace67848:;
					};
					(*_self_.alloc)._field_traitMetMap[_9278_mepf]=jule::append(_9309_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_92615_imp); __jule_collection; }));
				} else {
					(*_self_.alloc)._field_traitMetMap[_9278_mepf]=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_92615_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_92615_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace6866d:;
					if (it != expr_end) {
						jule::Ptr<_1c48a6407_StructIns> _94116_ins = *it;
						{
							_1a97e4728_funcTrait(_self_, &(_94116_ins), &(_9278_mepf));
							jule::Ptr<_1c48b8738_Fn> _9449_sm = _1c48a74a2_FindMethod(_94116_ins.ptr(), (*((*(_92450_m))))._field_Ident, false);;
							if (((_9449_sm == nullptr) || ((*(_9449_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1a97dbc81_addIndent(_self_);
							_1a97db7ca_write(_self_, jule::Str::lit("{\n", 2));
							_1a97dc17c_indent(_self_);
							if (((*((*(_92450_m))))._field_Exceptional || (!(_1c48b8bde_IsVoid((*(_92450_m)).ptr()))))) {
								_1a97db7ca_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1a972a153_func(&((*_self_.alloc)._field_Buf), &(_9449_sm));
							_1a97db7ca_write(_self_, jule::Str::lit("(", 1));
							_1a97db7ca_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1a97ee25a_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _94116_ins);
							_1a97db7ca_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _9615_ptr = (!(_1c48b7649_IsRef((*((*(_92450_m))))._field_Params[0LL].ptr())));;
							if (_9615_ptr) {
								_1a97db7ca_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_92450_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1ace6ee5a:;
								if (it != expr_end) {
									jule::Ptr<_1c48b6c64_Param> _96512_mp = *it;
									{
										_1a97db7ca_write(_self_, jule::Str::lit(", ", 2));
										static__1a972aa16_param(&((*_self_.alloc)._field_Buf), &(_96512_mp));
									}
									_iter_next_1ace6ee5a:;
									++it;
									goto _iter_begin_1ace6ee5a;
								}
								_iter_end_1ace6ee5a:;
							};
							_1a97db7ca_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1a97dbe7e_doneIndent(_self_);
						}
						_iter_next_1ace6866d:;
						++it;
						goto _iter_begin_1ace6866d;
					}
					_iter_end_1ace6866d:;
				};
			}
			_iter_next_1ace659ab:;
			++it;
			goto _iter_begin_1ace659ab;
		}
		_iter_end_1ace659ab:;
	};
}



inline void _1a97e50ca_traitWrappers(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1c56b725b_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1ace722c0, jule::Ptr<__jule_anon_1ace722c0_ctx>::make(__jule_anon_1ace722c0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace722c0_ctx_handler));
}



inline void _1a97e543d_traitDataMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _99038_t, jule::Ptr<_1c48a6407_StructIns> _99049_s) {
	_1c56b8108_IterTraitMethods(_99038_t, jule::__new_closure<void,jule::Ptr<_1c48b8738_Fn>*>((void*)__jule_anon_1ace73656, jule::Ptr<__jule_anon_1ace73656_ctx>::make(__jule_anon_1ace73656_ctx{._self_=_self_,._99049_s=_99049_s}).as<jule::Uintptr>(), __jule_anon_1ace73656_ctx_handler));
}



inline void _1a97e585b_traitData(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48cc1b9_Trait>* _100731_t, jule::I64 _100742_i, jule::Ptr<_1c48a6407_StructIns>* _100755_s) {
	_238b51e24_StrBuilder _10087_ident = static__238b52375_New((*((*(_100731_t))))._field_Ident.len());;
	static__1a972a72a_traitDecl(&(_10087_ident), (*(_100731_t)));
	_1a97db7ca_write(_self_, jule::Str::lit("static ", 7));
	_1a97dba83_writeBytes(_self_, _238b53b7e_Buf(&_10087_ident));
	_1a97db7ca_write(_self_, jule::Str::lit("MptrData ", 9));
	_1a97dba83_writeBytes(_self_, _238b53b7e_Buf(&_10087_ident));
	_1a97db7ca_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1a97db7ca_write(_self_, _1dc536d2d_Itoa(_100742_i));
	_1a97db7ca_write(_self_, jule::Str::lit(" {\n", 3));
	_1a97dbc81_addIndent(_self_);
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1a97db7ca_write(_self_, _1dc536d2d_Itoa(_1a97dc80e_pushDealloc(_self_, jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_100755_s)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)}))));
	_1a97db7ca_write(_self_, jule::Str::lit(",\n", 2));
	_1a97e543d_traitDataMethods(_self_, _100731_t, (*(_100755_s)));
	_1a97dbe7e_doneIndent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1a97e5a59_traitDatas(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1c56b725b_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1ace8108c, jule::Ptr<__jule_anon_1ace8108c_ctx>::make(__jule_anon_1ace8108c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace8108c_ctx_handler));
}



inline void _1a97e5c57_globalDecls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace807ea:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _104415_v = *it;
			{
				_1a9800ea4_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_104415_v))._field_Kind))._field_Kind);
				_1a97db7ca_write(_self_, jule::Str::lit(" ", 1));
				static__1a972b6b5_var(&((*_self_.alloc)._field_Buf), _104415_v);
				_1a97db7ca_write(_self_, jule::Str::lit(";", 1));
			}
			_iter_next_1ace807ea:;
			++it;
			goto _iter_begin_1ace807ea;
		}
		_iter_end_1ace807ea:;
	};
}



inline void _1a97e5e55_decls(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97de976_structurePlainDecls(_self_);
	_1a97e0ec7_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_238b53662_Len(&(*_self_.alloc)._field_Buf);
	_1a97e11c5_structureMethodDecls(_self_);
	_1a97e232a_funcDecls(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	_1a97e27d1_traitDataTypes(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_238b53662_Len(&(*_self_.alloc)._field_Buf);
	_1a97e50ca_traitWrappers(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	_1a97e5a59_traitDatas(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_238b53662_Len(&(*_self_.alloc)._field_Buf);
	_1a97e5c57_globalDecls(_self_);
}



inline void _1a97e620d_structureMethods(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _107038_s) {
	{
		auto expr = &((*((*(_107038_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace8ad00:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _107115_f = *it;
			{
				_1a97e43b5_func(_self_, &(_107115_f));
				_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ace8ad00:;
			++it;
			goto _iter_begin_1ace8ad00;
		}
		_iter_end_1ace8ad00:;
	};
}



inline void _1a97e64b6_structureOstream(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _107738_s) {
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1a972b0dd_structureIns(&((*_self_.alloc)._field_Buf), _107738_s);
	_1a97db7ca_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1a97dbc81_addIndent(_self_);
	_1a97dc17c_indent(_self_);
	jule::Ptr<_1c48b8738_Fn> _10857_fts = _1c48a74a2_FindMethod((*(_107738_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1c4972e74_Str(_10857_fts)) {
		_1a97db7ca_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1a972a153_func(&((*_self_.alloc)._field_Buf), &(_10857_fts));
		_1a97db7ca_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1a97db7ca_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1a9723b63_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_107738_s))))._field_Decl))._field_Ident);
		_1a97db7ca_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_107738_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ace9093c:;
			if (it != expr_end) {
				jule::I64 _10959_i = it - expr->begin();
				jule::Ptr<_1c48a5857_FieldIns> _109516_f = *it;
				{
					_1a97dc17c_indent(_self_);
					_1a97db7ca_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1a9723b63_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_109516_f))._field_Decl))._field_Ident);
					_1a97db7ca_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1c48a6407_StructIns> _11025_strct = _1c4a13e16_Struct((*_109516_f.alloc)._field_Kind.ptr());;
					if ((((_11025_strct != nullptr) && ((*_11025_strct.alloc)._field_Decl != nullptr)) && (*(*(_11025_strct))._field_Decl.alloc)._field_Binded)) {
						_1a97db7ca_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1a972b3c9_field(&((*_self_.alloc)._field_Buf), &((*_109516_f.alloc)._field_Decl));
						_1a97db7ca_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1a97db7ca_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1a972b3c9_field(&((*_self_.alloc)._field_Buf), &((*_109516_f.alloc)._field_Decl));
					};
					if (((_10959_i + 1LL) < (*((*(_107738_s))))._field_Fields.len())) {
						_1a97db7ca_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1a97db7ca_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1ace9093c:;
				++it;
				_10959_i++;
				goto _iter_begin_1ace9093c;
			}
			_iter_end_1ace9093c:;
		};
		_1a97dc17c_indent(_self_);
		_1a97db7ca_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1a97dc17c_indent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1a97dbe7e_doneIndent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("}", 1));
}



inline void _1a97e676e_structureIns(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a6407_StructIns>* _112834_s) {
	;
	_1a97e0768_structureOperators(_self_, _112834_s, false);
	_1a97e620d_structureMethods(_self_, _112834_s);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	_1a97e64b6_structureOstream(_self_, _112834_s);
}



inline void _1a97e6a27_structure(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c48a3679_Struct>* _113631_s) {
	{
		auto expr = &((*((*(_113631_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace9a57e:;
		if (it != expr_end) {
			jule::Ptr<_1c48a6407_StructIns> _113715_ins = *it;
			{
				_1a97e676e_structureIns(_self_, &(_113715_ins));
				_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1ace9a57e:;
			++it;
			goto _iter_begin_1ace9a57e;
		}
		_iter_end_1ace9a57e:;
	};
}



inline void _1a97e6c25_structures(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace9accc:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _114415_s = *it;
			{
				if (((*(_114415_s))._field_Token != nullptr)) {
					_1a97e6a27_structure(_self_, &(_114415_s));
					_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1ace9accc:;
			++it;
			goto _iter_begin_1ace9accc;
		}
		_iter_end_1ace9accc:;
	};
}



inline void _1a97e6e23_funcs(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1c56b725b_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1ace9d8a1, jule::Ptr<__jule_anon_1ace9d8a1_ctx>::make(__jule_anon_1ace9d8a1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace9d8a1_ctx_handler));
}



inline void _1a97e71cb_pushInit(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, jule::Ptr<_1c4930c45_Package>* _116830_pkg) {
	_1c56b758b_IterFiles(_116830_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace9ed69, jule::Ptr<__jule_anon_1ace9ed69_ctx>::make(__jule_anon_1ace9ed69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ace9ed69_ctx_handler));
}



inline void _1a97e73c9_anonHashes(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_julec_label_1acea393e:;
	jule::Slice<jule::Ptr<_1a97d9b3b_anonHash>> _11857_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_11857_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acea4e07:;
		if (it != expr_end) {
			jule::Ptr<_1a97d9b3b_anonHash> _118715_h = *it;
			{
				_1a97e3c99_anonFuncIns(_self_, &((*(_118715_h))._field_expr), (*_118715_h.alloc)._field_ident);
			}
			_iter_next_1acea4e07:;
			++it;
			goto _iter_begin_1acea4e07;
		}
		_iter_end_1acea4e07:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1acea393e;
	};
}



inline void _1a97e75c7_initGlobals(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acea6b84:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _119615_v = *it;
			{
				static__1a972b6b5_var(&((*(_self_))._field_Buf), _119615_v);
				_1a97db7ca_write(_self_, jule::Str::lit(" = ", 3));
				_1a9722018_model((*_self_.alloc)._field_ec, (*((*((*(_119615_v))._field_Value))._field_Data))._field_Model);
				_1a97db7ca_write(_self_, jule::Str::lit(";\n", 2));
				_238b52b8e_WriteByte(&(*_self_.alloc)._field_Buf, 9LLU);
			}
			_iter_next_1acea6b84:;
			++it;
			goto _iter_begin_1acea6b84;
		}
		_iter_end_1acea6b84:;
	};
}



inline void _1a97e77c5_initCaller(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97db7ca_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1a97dbc81_addIndent(_self_);
	_1c56b725b_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1c4930c45_Package>*>((void*)__jule_anon_1aceaa638, jule::Ptr<__jule_anon_1aceaa638_ctx>::make(__jule_anon_1aceaa638_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aceaa638_ctx_handler));
	_1a97dbe7e_doneIndent(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1a97e79c3_end(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97db7ca_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n\tjule::setup_argv(argc, argv);\n\tjule::setup_envp(envp);\n\n\t", 107));
	_1a97e75c7_initGlobals(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("__jule_call_initializers();\n\t", 29));
	if (_205b64662_Test) {
		_1a97db7ca_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1a97db7ca_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1a97e7d36_insertBuf(jule::Ptr<_1a97db0e3_ObjectCoder> _self_, _238b51e24_StrBuilder* _123731_buf, jule::I64 _123748_pos) {
	if ((_238b53662_Len(_123731_buf) > 0LL)) {
		jule::Slice<jule::U8> _12398_head = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_238b53662_Len(&(*(_self_))._field_Buf) + _238b53662_Len(_123731_buf))); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
		(_12398_head).append(_238b53b7e_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _123748_pos));;
		(_12398_head).append(_238b53b7e_Buf(_123731_buf));;
		(_12398_head).append(_238b53b7e_Buf(&(*_self_.alloc)._field_Buf).slice(_123748_pos));;
		{
			_238b53e37_SetBuf(&(*_self_.alloc)._field_Buf, _12398_head);
		};
	};
}



inline void _1a97e8034_serializeHead(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97de4c0_prepareStructures(_self_);
	_1a97ddd1b_head(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
	_1a97e5e55_decls(_self_);
	_1a97e7d36_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_238b53662_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_238b53662_Len(&(*_self_.alloc)._field_resultDecls);
	_1a97db7ca_write(_self_, jule::Str::lit("\n", 1));
	_1a97e6c25_structures(_self_);
	_1a97e6e23_funcs(_self_);
	_1a97e77c5_initCaller(_self_);
	_1a97db7ca_write(_self_, jule::Str::lit("\n\n", 2));
	_1a97e73c9_anonHashes(_self_);
	_1a97e7d36_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_238b53662_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_238b53662_Len(&(*_self_.alloc)._field_deallocObj);
	_1a97e7d36_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_238b53662_Len(&(*_self_.alloc)._field_anyObj);
	_1a97e7d36_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_238b53662_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1a97e8232_Serialize(jule::Ptr<_1a97db0e3_ObjectCoder> _self_) {
	_1a97e8034_serializeHead(_self_);
	_1a97e79c3_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1a97db0e3_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a97ea168_customType_eq(_1a97ea168_customType *_self_, _1a97ea168_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1a97ea564_Str(_1a97ea168_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a97ea8a5_Equal(jule::Ptr<_1a97ea168_customType> _self_, jule::Ptr<_1c4a1020e_TypeKind> _4418_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1a97ea168_customType _Src) {
	_Stream << _1a97ea564_Str(&_Src);
	return _Stream;
}




inline jule::Bool _1a97eaca1_typeCoder_eq(_1a97eaca1_typeCoder *_self_, _1a97eaca1_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1a97eaca1_typeCoder> static__1a97eb301_new(jule::Ptr<_1a97db0e3_ObjectCoder>* _6921_oc) {
	jule::Ptr<_1a97eaca1_typeCoder> _707_tc = jule::new_ptr<_1a97eaca1_typeCoder>(_1a97eaca1_typeCoder{._field_oc=(*(_6921_oc)), ._field_rc=jule::Ptr<_1a980388b_resultCoder>(nullptr)});;
	(*(_707_tc))._field_rc=static__1a9803d97_new(&(_707_tc));
	return _707_tc;;
}



inline void _1a97eb664_toType(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _7627_buf, jule::Str _7648_id) {
	if ((!_7648_id.equal("uintptr", 7))) {
		_7648_id=_1dc538e95_RealKindOf(_7648_id);
	};
	_238b528d6_WriteStr(_7627_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7648_id[0LL]) && (_7648_id[0LL] <= 122LLU))) {
		_238b52b8e_WriteByte(_7627_buf, (_7648_id[0LL] - 32LLU));
	} else {
		_238b52b8e_WriteByte(_7627_buf, _7648_id[0LL]);
	};
	_238b528d6_WriteStr(_7627_buf, _7648_id.slice(1LL));
}



inline void _1a97eb9c7_prim(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _9025_buf, jule::Ptr<_1c4a17cd8_Prim> _9042_p) {
	_1a97eb664_toType(_self_, _9025_buf, (*(_9042_p))._field_Kind);
}



inline void _1a97ebd3a_tuple(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _9526_buf, jule::Ptr<_1c4a1cdcb_Tuple> _9547_t) {
	_238b528d6_WriteStr(_9526_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9547_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acec4377:;
		if (it != expr_end) {
			jule::I64 _978_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> _9715_tk = *it;
			{
				_1a9800ea4_kind(_self_, _9526_buf, _9715_tk);
				if ((((*(_9547_t))._field_Types.len() - _978_i) > 1LL)) {
					_238b52b8e_WriteByte(_9526_buf, ',');
				};
			}
			_iter_next_1acec4377:;
			++it;
			_978_i++;
			goto _iter_begin_1acec4377;
		}
		_iter_end_1acec4377:;
	};
	_238b52b8e_WriteByte(_9526_buf, '>');
}



inline void _1a97ec19d_asSptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _10727_buf, jule::Slice<jule::U8> _10744_elem) {
	_238b528d6_WriteStr(_10727_buf, jule::Str::lit("jule::Ptr<", 10));
	_238b5262d_Write(_10727_buf, _10744_elem);
	_238b52b8e_WriteByte(_10727_buf, '>');
}



inline void _1a97ec511_sptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _11425_buf, jule::Ptr<_1c4a1b814_Sptr> _11446_sptr) {
	_238b528d6_WriteStr(_11425_buf, jule::Str::lit("jule::Ptr<", 10));
	_1a9800ea4_kind(_self_, _11425_buf, (*(_11446_sptr))._field_Elem);
	_238b52b8e_WriteByte(_11425_buf, '>');
}



inline void _1a97ec874_ptr(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _12124_buf, jule::Ptr<_1c4a200cb_Ptr> _12145_p) {
	;
	if (_1c4a20b48_IsUnsafe(_12145_p.ptr())) {
		_238b528d6_WriteStr(_12124_buf, jule::Str::lit("void*", 5));
	} else {
		_1a9800ea4_kind(_self_, _12124_buf, (*(_12145_p))._field_Elem);
		_238b528d6_WriteStr(_12124_buf, jule::Str::lit("*", 1));
	};
}



inline void _1a97ecbd7_enumDecl(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _13229_buf, jule::Ptr<_1c48ce8c5_Enum> _13250_e) {
	_1a9800ea4_kind(_self_, _13229_buf, (*((*(_13250_e))._field_Kind))._field_Kind);
}



inline void _1a97ed04a_typeEnumDecl(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _13733_buf, jule::Ptr<_1c48d10d0_TypeEnum> _13754_e) {
	_238b528d6_WriteStr(_13733_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1a97ed3ad_asSlice(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _14128_buf, jule::Ptr<_1c4a1020e_TypeKind> _14149_elem) {
	_238b528d6_WriteStr(_14128_buf, jule::Str::lit("jule::Slice<", 12));
	_1a9800ea4_kind(_self_, _14128_buf, _14149_elem);
	_238b52b8e_WriteByte(_14128_buf, '>');
}



inline void _1a97ed721_slice(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _14826_buf, jule::Ptr<_1c4a1c2d7_Slc> _14847_s) {
	_1a97ed3ad_asSlice(_self_, _14826_buf, (*(_14847_s))._field_Elem);
}



inline void _1a97eda84_mapType(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _15328_buf, jule::Ptr<_1c4a1d97b_Map> _15349_m) {
	_238b528d6_WriteStr(_15328_buf, jule::Str::lit("jule::Map<", 10));
	_1a9800ea4_kind(_self_, _15328_buf, (*(_15349_m))._field_Key);
	_238b52b8e_WriteByte(_15328_buf, ',');
	_1a9800ea4_kind(_self_, _15328_buf, (*_15349_m.alloc)._field_Val);
	_238b52b8e_WriteByte(_15328_buf, '>');
}



inline void _1a97ee25a_structureIns(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _16733_buf, jule::Ptr<_1c48a6407_StructIns> _16754_s) {
	if ((!((*((*(_16754_s))._field_Decl))._field_Binded))) {
		static__1a972b0dd_structureIns(_16733_buf, &(_16754_s));
		return;;
	};
	jule::Ptr<_1c4881b96_Directive> _1723_d = _1c56c283d_FindDirective(&((*(*(_16754_s))._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1723_d != nullptr)) {
		_238b5262d_Write(_16733_buf, _1a97e85b7_concatAllParts((*_1723_d.alloc)._field_Args));
		_238b528d6_WriteStr(_16733_buf, jule::Str::lit("::", 2));
	};
	static__1a972b0dd_structureIns(_16733_buf, &(_16754_s));
	if (((*_16754_s.alloc)._field_Generics.len() > 0LL)) {
		_238b52b8e_WriteByte(_16733_buf, '<');
		{
			auto expr = &((*_16754_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aced0d23:;
			if (it != expr_end) {
				jule::I64 _1809_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> _18016_g = *it;
				{
					_1a9800ea4_kind(_self_, _16733_buf, (*(_18016_g))._field_Kind);
					if ((((*_16754_s.alloc)._field_Generics.len() - _1809_i) > 1LL)) {
						_238b52b8e_WriteByte(_16733_buf, ',');
					};
				}
				_iter_next_1aced0d23:;
				++it;
				_1809_i++;
				goto _iter_begin_1aced0d23;
			}
			_iter_end_1aced0d23:;
		};
		_238b52b8e_WriteByte(_16733_buf, '>');
	};
}



inline void _1a97ee5bd_array(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _19126_buf, jule::Ptr<_1c4a1e608_Arr> _19147_a) {
	_238b528d6_WriteStr(_19126_buf, jule::Str::lit("jule::Array<", 12));
	_1a9800ea4_kind(_self_, _19126_buf, (*(_19147_a))._field_Elem);
	_238b52b8e_WriteByte(_19126_buf, ',');
	_238b528d6_WriteStr(_19126_buf, _1dc536d2d_Itoa((*_19147_a.alloc)._field_N));
	_238b52b8e_WriteByte(_19126_buf, '>');
}



inline void _1a97eec94_paramIns(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _21429_buf, jule::Ptr<_1c48ba691_ParamIns>* _21451_p) {
	if ((*((*((*(_21451_p))))._field_Decl))._field_Variadic) {
		_238b528d6_WriteStr(_21429_buf, jule::Str::lit("jule::Slice<", 12));
		_1a9800ea4_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
		_238b52b8e_WriteByte(_21429_buf, '>');
	} else {
		_1a9800ea4_kind(_self_, _21429_buf, (*((*(_21451_p))))._field_Kind);
	};
	if ((*((*((*(_21451_p))))._field_Decl))._field_Reference) {
		_238b52b8e_WriteByte(_21429_buf, '*');
	};
}



inline void _1a980046a_funcInsResult(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _24634_s, jule::Ptr<_1c48bb719_FnIns>* _24654_f) {
	if (_1c48b8bde_IsVoid((*((*(_24654_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
			_238b528d6_WriteStr(_24634_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_238b528d6_WriteStr(_24634_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24654_f))))._field_Decl.alloc)._field_Exceptional) {
		_238b528d6_WriteStr(_24634_s, jule::Str::lit("jule::Exceptional<", 18));
		_1a9805e54_codeMut1((*(_self_))._field_rc.ptr(), _24634_s, &((*((*(_24654_f))))._field_Result));
		_238b52b8e_WriteByte(_24634_s, '>');
		return;;
	};
	_1a9805e54_codeMut1((*(_self_))._field_rc, _24634_s, &((*((*(_24654_f))))._field_Result));
}



inline void _1a98007cd_anonFunc(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _26429_buf, jule::Ptr<_1c48bb719_FnIns> _26450_f) {
	if ((((*(_26450_f))._field_Result != nullptr) && (_1c4a146b9_Tup((*(_26450_f))._field_Result) != nullptr))) {
		_1a97dd249_pushResultIns((*(_self_))._field_oc, &(_26450_f));
	};
	_1a980046a_funcInsResult(_self_, _26429_buf, &(_26450_f));
	if (((*_26450_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_238b52b8e_WriteByte(_26429_buf, ',');
	{
		auto expr = &((*_26450_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acee37c5:;
		if (it != expr_end) {
			jule::I64 _2738_i = it - expr->begin();
			jule::Ptr<_1c48ba691_ParamIns> _27315_param = *it;
			{
				if (_1c48b73b3_IsSelf((*(_27315_param))._field_Decl.ptr())) {
					goto _iter_next_1acee37c5;
				};
				_1a97eec94_paramIns(_self_, _26429_buf, &(_27315_param));
				if ((((*_26450_f.alloc)._field_Params.len() - _2738_i) > 1LL)) {
					_238b52b8e_WriteByte(_26429_buf, ',');
				};
			}
			_iter_next_1acee37c5:;
			++it;
			_2738_i++;
			goto _iter_begin_1acee37c5;
		}
		_iter_end_1acee37c5:;
	};
}



inline void _1a9800b41_func(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _28525_buf, jule::Ptr<_1c48bb719_FnIns> _28546_f) {
	_238b528d6_WriteStr(_28525_buf, jule::Str::lit("jule::Fn<", 9));
	_1a98007cd_anonFunc(_self_, _28525_buf, _28546_f);
	_238b52b8e_WriteByte(_28525_buf, '>');
}



inline void _1a9800ea4_kind(_1a97eaca1_typeCoder* _self_, _238b51e24_StrBuilder* _29225_buf, jule::Ptr<_1c4a1020e_TypeKind> _29246_k) {
	{
		
		if ((_1c4a13e16_Struct(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee6cc3:;
			{
				_1a97ee25a_structureIns(_self_, _29225_buf, _1c4a13e16_Struct(_29246_k));
				return;;
			}
		}
		else if (_1c4a11089_Binded(_29246_k.ptr())) {
			_case_begin_1acee6d6c:;
			{
				_238b528d6_WriteStr(_29225_buf, (*_29246_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1c4a12893_Prim(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee6dd3:;
			{
				_1a97eb9c7_prim(_self_, _29225_buf, _1c4a12893_Prim(_29246_k));
				return;;
			}
		}
		else if ((_1c4a146b9_Tup(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee6e49:;
			{
				_1a97ebd3a_tuple(_self_, _29225_buf, _1c4a146b9_Tup(_29246_k));
				return;;
			}
		}
		else if ((_1c4a12b29_Sptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee6eb0:;
			{
				_1a97ec511_sptr(_self_, _29225_buf, _1c4a12b29_Sptr(_29246_k));
				return;;
			}
		}
		else if ((_1c4a12db0_Ptr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee7037:;
			{
				_1a97ec874_ptr(_self_, _29225_buf, _1c4a12db0_Ptr(_29246_k));
				return;;
			}
		}
		else if ((_1c4a13146_Enum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee70ae:;
			{
				_1a97ecbd7_enumDecl(_self_, _29225_buf, _1c4a13146_Enum(_29246_k));
				return;;
			}
		}
		else if ((_1c4a133cc_TypeEnum(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee7136:;
			{
				_1a97ed04a_typeEnumDecl(_self_, _29225_buf, _1c4a133cc_TypeEnum(_29246_k));
				return;;
			}
		}
		else if ((_1c4a138e9_Slc(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee71ad:;
			{
				_1a97ed721_slice(_self_, _29225_buf, _1c4a138e9_Slc(_29246_k));
				return;;
			}
		}
		else if ((_1c4a14433_Map(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee7235:;
			{
				_1a97eda84_mapType(_self_, _29225_buf, _1c4a14433_Map(_29246_k));
				return;;
			}
		}
		else if ((_1c4a1419c_Trait(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee72ac:;
			{
				_238b528d6_WriteStr(_29225_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1c4a13663_Arr(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee7334:;
			{
				_1a97ee5bd_array(_self_, _29225_buf, _1c4a13663_Arr(_29246_k));
				return;;
			}
		}
		else if ((_1c4a13b80_Fn(_29246_k.ptr()) != nullptr)) {
			_case_begin_1acee73ab:;
			{
				_1a9800b41_func(_self_, _29225_buf, _1c4a13b80_Fn(_29246_k));
				return;;
			}
		}
		_match_end_1acee6ae7:;
	};
	{
		auto &_match_expr{ (*(_29246_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data27)) {
			_case_begin_1acee7444:;
			{
				_238b528d6_WriteStr(_29225_buf, (*((*(_29246_k))._field_Kind.cast_ptr<_1a97ea168_customType>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1ad000a46:;
			{
				_238b528d6_WriteStr(_29225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1ad0009e1:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1a97eaca1_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1a980388b_resultCoder_eq(_1a980388b_resultCoder *_self_, _1a980388b_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1a980388b_resultCoder> static__1a9803d97_new(jule::Ptr<_1a97eaca1_typeCoder>* _35921_tc) {
	return jule::new_ptr<_1a980388b_resultCoder>(_1a980388b_resultCoder{._field_tc=(*(_35921_tc))});;
}



inline void _1a980420a_ptr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _36324_s, jule::Ptr<_1c4a200cb_Ptr> _36343_p) {
	_238b528d6_WriteStr(_36324_s, jule::Str::lit("p", 1));
	_1a9805ae1_codeMut(_self_, _36324_s, &((*(_36343_p))._field_Elem));
}



inline void _1a980456d_sptr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _36825_s, jule::Ptr<_1c4a1b814_Sptr> _36844_p) {
	_238b528d6_WriteStr(_36825_s, jule::Str::lit("x", 1));
	_1a9805ae1_codeMut(_self_, _36825_s, &((*(_36844_p))._field_Elem));
}



inline void _1a98048d1_mapType(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _37328_s, jule::Ptr<_1c4a1d97b_Map> _37347_p) {
	_238b528d6_WriteStr(_37328_s, jule::Str::lit("m", 1));
	_1a9805ae1_codeMut(_self_, _37328_s, &((*(_37347_p))._field_Key));
	_1a9805ae1_codeMut(_self_, _37328_s, &((*_37347_p.alloc)._field_Val));
}



inline void _1a9804c44_slice(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _37926_s, jule::Ptr<_1c4a1c2d7_Slc> _37945_slc) {
	_238b528d6_WriteStr(_37926_s, jule::Str::lit("s", 1));
	_1a9805ae1_codeMut(_self_, _37926_s, &((*(_37945_slc))._field_Elem));
}



inline void _1a98050a7_arr(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _38424_s, jule::Ptr<_1c4a1e608_Arr> _38443_arr) {
	_238b528d6_WriteStr(_38424_s, jule::Str::lit("a", 1));
	_238b528d6_WriteStr(_38424_s, _1dc536a64_FmtInt(static_cast<jule::I64>((*(_38443_arr))._field_N), 16LL));
	_1a9805ae1_codeMut(_self_, _38424_s, &((*_38443_arr.alloc)._field_Elem));
}



inline void _1a980541a_func(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _39025_s, jule::Ptr<_1c48bb719_FnIns> _39044_f) {
	_238b528d6_WriteStr(_39025_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39044_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad007ec1:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _39215_p = *it;
			{
				if ((*((*(_39215_p))._field_Decl))._field_Reference) {
					_238b528d6_WriteStr(_39025_s, jule::Str::lit("r", 1));
				};
				_1a9805ae1_codeMut(_self_, _39025_s, &((*_39215_p.alloc)._field_Kind));
			}
			_iter_next_1ad007ec1:;
			++it;
			goto _iter_begin_1ad007ec1;
		}
		_iter_end_1ad007ec1:;
	};
	if (((*_39044_f.alloc)._field_Result != nullptr)) {
		_1a9805ae1_codeMut(_self_, _39025_s, &((*_39044_f.alloc)._field_Result));
	};
}



inline void _1a980577d_tup(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _40324_s, jule::Ptr<_1c4a1cdcb_Tuple> _40343_tup) {
	{
		auto expr = &((*(_40343_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad00a622:;
		if (it != expr_end) {
			jule::Ptr<_1c4a1020e_TypeKind> _40415_t = *it;
			{
				_238b528d6_WriteStr(_40324_s, jule::Str::lit("__jule_tuple_", 13));
				_1a9805ae1_codeMut(_self_, _40324_s, &(_40415_t));
			}
			_iter_next_1ad00a622:;
			++it;
			goto _iter_begin_1ad00a622;
		}
		_iter_end_1ad00a622:;
	};
}



inline void _1a9805ae1_codeMut(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _41028_s, jule::Ptr<_1c4a1020e_TypeKind>* _41048_t) {
	{
		auto &_match_expr{ (*((*(_41048_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26)) {
			_case_begin_1ad00b832:;
			{
				_1a980420a_ptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a200cb_Ptr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)) {
			_case_begin_1ad00c04c:;
			{
				_1a980456d_sptr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a1b814_Sptr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24)) {
			_case_begin_1ad00bbd9:;
			{
				_1a98048d1_mapType(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a1d97b_Map>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)) {
			_case_begin_1ad00bc50:;
			{
				_1a9804c44_slice(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a1c2d7_Slc>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25)) {
			_case_begin_1ad00bcb6:;
			{
				_1a98050a7_arr(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a1e608_Arr>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)) {
			_case_begin_1ad00bd2c:;
			{
				_1a980541a_func(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c48bb719_FnIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3)) {
			_case_begin_1ad00c28e:;
			{
				jule::Ptr<_1c48ce8c5_Enum> _4254_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1c48ce8c5_Enum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3);;
				static__1a9729916_toOut(_41028_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4)) {
			_case_begin_1ad00c305:;
			{
				jule::Ptr<_1c48d10d0_TypeEnum> _4284_te = (*((*(_41048_t))))._field_Kind.cast_ptr<_1c48d10d0_TypeEnum>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data4);;
				static__1a9729916_toOut(_41028_s, (*(_4284_te))._field_Ident, static_cast<jule::Uintptr>(_4284_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)) {
			_case_begin_1ad00c36b:;
			{
				jule::Ptr<_1c48a6407_StructIns> _4318_si = (*((*(_41048_t))))._field_Kind.cast_ptr<_1c48a6407_StructIns>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0);;
				static__1a972b0dd_structureIns(_41028_s, &(_4318_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data2)) {
			_case_begin_1ad00c3d2:;
			{
				jule::Ptr<_1c48cc1b9_Trait> _4348_trt = (*((*(_41048_t))))._field_Kind.cast_ptr<_1c48cc1b9_Trait>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data2);;
				static__1a972a72a_traitDecl(_41028_s, _4348_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)) {
			_case_begin_1ad00c459:;
			{
				_238b528d6_WriteStr(_41028_s, (*((*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a17cd8_Prim>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23)) {
			_case_begin_1ad00c4d1:;
			{
				_1a980577d_tup(_self_, _41028_s, (*((*(_41048_t))))._field_Kind.cast_ptr<_1c4a1cdcb_Tuple>((jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1ad00bb73:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:4"));;
			}
		}
		_match_end_1ad00bb1d:;
	};
}



inline void _1a9805e54_codeMut1(_1a980388b_resultCoder* _self_, _238b51e24_StrBuilder* _44529_s, jule::Ptr<_1c4a1020e_TypeKind>* _44549_t) {
	jule::Ptr<_1c4a1cdcb_Tuple> _4467_tup = _1c4a146b9_Tup((*(_44549_t)).ptr());;
	if ((_4467_tup != nullptr)) {
		_1a980577d_tup(_self_, _44529_s, _4467_tup);
	} else {
		_1a9800ea4_kind((*(_self_))._field_tc.ptr(), _44529_s, (*(_44549_t)));
	};
}



inline jule::Slice<jule::U8> _1a9806262_code(_1a980388b_resultCoder* _self_, jule::Ptr<_1c4a1020e_TypeKind>* _45425_t) {
	_238b51e24_StrBuilder _4557_s = static__238b52375_New(20LL);;
	_1a9805ae1_codeMut(_self_, &(_4557_s), _45425_t);
	return _238b53b7e_Buf(&_4557_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1a980388b_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}




inline jule::Bool _1ad018223_Flag_eq(_1ad018223_Flag *_self_, _1ad018223_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad018641_Name(_1ad018223_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad018795_What(_1ad018223_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad0188e9_Reset(_1ad018223_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad018a4d_Short(_1ad018223_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad018223_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1ad01bcc6_Flag_eq(_1ad01bcc6_Flag *_self_, _1ad01bcc6_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad01b952_Name(_1ad01bcc6_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad01c0b2_What(_1ad01bcc6_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad01c205_Reset(_1ad01bcc6_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad01c348_Short(_1ad01bcc6_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad01bcc6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1ad020439_Flag_eq(_1ad020439_Flag *_self_, _1ad020439_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad0200b5_Name(_1ad020439_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad020725_What(_1ad020439_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad020868_Reset(_1ad020439_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad0209ab_Short(_1ad020439_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad020439_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1ad023ae1_Flag_eq(_1ad023ae1_Flag *_self_, _1ad023ae1_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad02376c_Name(_1ad023ae1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad023dcc_What(_1ad023ae1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad024020_Reset(_1ad023ae1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad024163_Short(_1ad023ae1_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad023ae1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}


inline jule::Bool _1ad027254_Flag_eq(_1ad027254_Flag *_self_, _1ad027254_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1ad026dd0_Name(_1ad027254_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1ad027540_What(_1ad027254_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1ad027683_Reset(_1ad027254_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1ad0277c6_Short(_1ad027254_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad027254_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c520226e_FlagSet> static__1c520258d_New(void) {
	return jule::new_ptr<_1c520226e_FlagSet>(_1c520226e_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1c5202a44_FindFlag(_1c520226e_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0321e8:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1c520069b_CommonFlagMptrData*)_7215_flag.safe_type())->_1c51eed2c_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1ad0321e8:;
			++it;
			goto _iter_begin_1ad0321e8;
		}
		_iter_end_1ad0321e8:;
	};
	return nullptr;;
}



inline jule::Trait _1c5310b52_FindFlagShort(_1c520226e_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad032759:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1c520069b_CommonFlagMptrData*)_8215_flag.safe_type())->_1c52000b3_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1ad032759:;
			++it;
			goto _iter_begin_1ad032759;
		}
		_iter_end_1ad032759:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1c53111c4_Parse(_1c520226e_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1c5ccb9c4_argParser _1167_ap = _1c5ccb9c4_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1c5ccce8c_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1ad027254_Flag> _1ad097648_addFlagCommon(_1c520226e_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1c5202a44_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1c5310b52_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad027254_Flag> _1407_flag = jule::new_ptr<_1ad027254_Flag>(_1ad027254_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1ad023ae1_Flag> _1ad09e94c_addFlagCommon(_1c520226e_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1c5202a44_FindFlag(_self_, _13132_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1c5310b52_FindFlagShort(_self_, _13143_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1ad023ae1_Flag> _1407_flag = jule::new_ptr<_1ad023ae1_Flag>(_1ad023ae1_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1ad094e3c_AddVar(_1c520226e_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad027254_Flag> _1717_flag = _1ad097648_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1ad09c285_AddVar(_1c520226e_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1ad023ae1_Flag> _1717_flag = _1ad09e94c_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1c520226e_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1ad03ed3d_parseInteger(_1c5ccb9c4_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad04288a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad042c53:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad0423d4:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad04244a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad0424b1:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad04236d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad04226e:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1ad047719_parseInteger(_1c5ccb9c4_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1ad04a2bb:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1ad04a684:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1ad049d15:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2059e414b_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1ad049d7b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1ad049de2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ad049c9e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ad049ba0:;
	};
	return __jule_func_result;;
}



inline jule::Str _1c5ccc277_getData(_1c5ccb9c4_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1c5ccc530_processFlag(_1c5ccb9c4_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data3)) {
			_case_begin_1ad037143:;
			{
				jule::Ptr<_1ad023ae1_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1ad023ae1_Flag>((jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1ad0370dd:;
	};
	jule::Str _2203_data = _1c5ccc277_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c520069b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c51eed2c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data0)) {
			_case_begin_1ad039024:;
			{
				jule::Ptr<_1ad018223_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1ad018223_Flag>((jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1ad03ed3d_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad0400d5, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c520069b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c51eed2c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data1)) {
			_case_begin_1ad0388b4:;
			{
				jule::Ptr<_1ad01bcc6_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1ad01bcc6_Flag>((jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ad047719_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I64>((void*)__jule_anon1ad049980, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c520069b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c51eed2c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data2)) {
			_case_begin_1ad03908a:;
			{
				jule::Ptr<_1ad020439_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1ad020439_Flag>((jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1dc52bcce_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1c520069b_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1c51eed2c_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data4)) {
			_case_begin_1ad039101:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1ad027254_Flag>((jule::Trait::Type*)&_1c520069b_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1ad0387c6:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c5ccc7d8_singleDash(_1c5ccb9c4_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25710_r;
		_iter_begin_1ad051a86:;
		std::tie(_25710_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1c5310b52_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25710_r)), &__jule_any_type4)};
				};
				({
					auto except = _1c5ccc530_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1ad051a86:;
			it += len;
			goto _iter_begin_1ad051a86;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c5ccca91_doubleDash(_1c5ccb9c4_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _2707_flag = _1c5202a44_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1c5ccc530_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c5cccc8e_tryArg(_1c5ccb9c4_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1c5ccca91_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1c5ccc7d8_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1c5ccce8c_parse(_1c5ccb9c4_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1c5cccc8e_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1ad056717:;
	}
	_iter_end_1ad056717:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1c5ccb9c4_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_205b5494e_Cmd> static__205b54d7d_New(jule::Str _2616_path) {
	return jule::new_ptr<_205b5494e_Cmd>(_205b5494e_Cmd{._field_attrs=_205b58b95_cmdAttrs{._field_hProcess=nullptr, ._field_hThread=nullptr}, ._field_path=_2616_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _205b5507b_Spawn(_205b5494e_Cmd* _self_) {
	return _205b5904c_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _205b55510_Wait(_205b5494e_Cmd* _self_) {
	return _205b594d1_wait(_self_);
}



inline jule::VoidExceptional _205b5904c_spawn(_205b5494e_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _2396135d8_UTF16FromStr(_205b59b1e_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _205b59ee8_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_205b5b219_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I64> _205b594d1_wait(_205b5494e_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_23963c667_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_23963c667_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I64>{.result=static_cast<jule::I64>(_897_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _205b5494e_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1c56d5c3b_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1c56b4830_IR__jule_tuple_s_205a977d7_Log static__1c56b4d08_Build(jule::Str _2918_path, jule::I64 _2929_flags) {
	__jule_tuple_x_1c56b4830_IR__jule_tuple_s_205a977d7_Log __jule_func_result;
	jule::Ptr<_1c56b1d5a_JuleImporter> _307_importer = static__1c56b2289_New(_1c56b67aa_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1c48807bb_AST>> _327_files;
	jule::Slice<_205a977d7_Log> _3218_logs;
	({
		__jule_tuple_sx_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c56b3774_ImportPackage(_307_importer.ptr(), _2918_path, true);
		_327_files = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Str _363_root = _2918_path;;
	if ((_327_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	_1c56b6a63_pushRuntimeToAST(&(_327_files[0LL]));
	jule::Ptr<_1c4930c45_Package> _467_pkg;
	({
		__jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c4a31807_AnalyzePackage(_327_files, jule::Trait(_307_importer, (jule::Trait::Type*)&_1c4929e09_Importer_mptr_data0), _2929_flags);
		_467_pkg = __jule_assign_result.__jule_result_arg0;
		_3218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3218_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3218_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1c56b4830_IR> _517_ir = jule::new_ptr<_1c56b4830_IR>(_1c56b4830_IR{._field_Root=_363_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_467_pkg, ._field_Runtime=jule::Ptr<_1c492cd1e_ImportInfo>(nullptr), ._field_Used=_1c56b2520_AllPackages(_307_importer), ._field_Ordered=_1c56c4ac6_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)}});;
	(*(_517_ir))._field_Passes=_1c56b659b_getAllUniquePasses(&((*_517_ir.alloc)._field_Main), (*_517_ir.alloc)._field_Used);
	(*_517_ir.alloc)._field_Runtime=(*((*(_467_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _517_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1c56b52e2_appendStructs(_1c56b4830_IR* _self_, jule::Ptr<_1c4930c45_Package>* _6630_p, jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _6654_buffer) {
	{
		auto expr = &((*((*(_6630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76cadd:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _6715_f = *it;
			{
				{
					auto expr = &((*(_6715_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac76d539:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _6816_s = *it;
						{
							if ((!((*(_6816_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1c48a3679_Struct>> &__jule_push_dest = (*(_6654_buffer)); __jule_push_dest.push(_6816_s); };
							};
						}
						_iter_next_1ac76d539:;
						++it;
						goto _iter_begin_1ac76d539;
					}
					_iter_end_1ac76d539:;
				};
			}
			_iter_next_1ac76cadd:;
			++it;
			goto _iter_begin_1ac76cadd;
		}
		_iter_end_1ac76cadd:;
	};
}



inline jule::Slice<jule::Ptr<_1c48a3679_Struct>> _1c56b5578_GetAllStructures(_1c56b4830_IR* _self_) {
	jule::Slice<jule::Ptr<_1c48a3679_Struct>> _7911_buffer = nullptr;;
	_1c56b52e2_appendStructs(_self_, &((*(_self_))._field_Main), &(_7911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76e705:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _8115_u = *it;
			{
				if ((!((*(_8115_u))._field_Binded))) {
					_1c56b52e2_appendStructs(_self_, &((*_8115_u.alloc)._field_Package), &(_7911_buffer));
				};
			}
			_iter_next_1ac76e705:;
			++it;
			goto _iter_begin_1ac76e705;
		}
		_iter_end_1ac76e705:;
	};
	return _7911_buffer;;
}



inline void _1c56b58db_appendGlobals(_1c56b4830_IR* _self_, jule::Ptr<_1c4930c45_Package>* _8930_p, jule::Slice<jule::Ptr<_1c49715b0_Var>>* _8954_buffer) {
	{
		auto expr = &((*((*(_8930_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76d23c:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _9015_f = *it;
			{
				{
					auto expr = &((*(_9015_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac770a25:;
					if (it != expr_end) {
						jule::Ptr<_1c49715b0_Var> _9116_v = *it;
						{
							if (((((*(_9116_v))._field_Token != nullptr) && (!((*_9116_v.alloc)._field_Binded))) && (!((*_9116_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*(_8954_buffer)); __jule_push_dest.push(_9116_v); };
							};
						}
						_iter_next_1ac770a25:;
						++it;
						goto _iter_begin_1ac770a25;
					}
					_iter_end_1ac770a25:;
				};
			}
			_iter_next_1ac76d23c:;
			++it;
			goto _iter_begin_1ac76d23c;
		}
		_iter_end_1ac76d23c:;
	};
}



inline jule::Slice<jule::Ptr<_1c49715b0_Var>> _1c56b5b72_GetAllGlobals(_1c56b4830_IR* _self_) {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _10211_buffer = nullptr;;
	_1c56b58db_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10211_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac772a7c:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _10415_u = *it;
			{
				if ((!((*(_10415_u))._field_Binded))) {
					_1c56b58db_appendGlobals(_self_, &((*_10415_u.alloc)._field_Package), &(_10211_buffer));
				};
			}
			_iter_next_1ac772a7c:;
			++it;
			goto _iter_begin_1ac772a7c;
		}
		_iter_end_1ac772a7c:;
	};
	return _10211_buffer;;
}



inline void _1c56b5d70_Order(_1c56b4830_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1c56b5b72_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1c56b5578_GetAllStructures(_self_);
	_1ac774661_order((*(_self_))._field_Ordered._field_Globals);
	_1ac77b39e_order((*(_self_))._field_Ordered._field_Structs);
}





std::ostream &operator<<(std::ostream &_Stream, _1c56b4830_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Runtime:" << _Src._field_Runtime << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a98c0936_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1a98c210d:;
	}
	_iter_end_1a98c210d:;;
	return true;;
}

inline jule::Bool _1aa85c020_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I64 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1aa85d6a3:;
	}
	_iter_end_1aa85d6a3:;;
	return true;;
}



inline jule::I32 _239612670_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _239612939_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _239612c7a_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I64 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c53138e1:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1c53138e1:;
			++it;
			goto _iter_begin_1c53138e1;
		}
		_iter_end_1c53138e1:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5315151:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1c5315cde:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1c53159c0:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _239612939_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1c5315959:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1c531585a:;
				};
			}
			_iter_next_1c5315151:;
			++it;
			goto _iter_begin_1c5315151;
		}
		_iter_end_1c5315151:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _239613011_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1216_n = 0LL;;
	jule::I64 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1c47c3764:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1c47c380d:;
					{
						_1206_a[_1216_n]=_239612670_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_239441889:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_239441823:;
			};
			(_1216_n)++;
		}
	_iter_next_1c5c0658b:;
	}
	_iter_end_1c5c0658b:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _239613385_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1c5b44e14:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1c5b44ead:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _239612939_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1c5b44d04:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _2396135d8_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _202_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _216_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _202_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_202_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5b4394b:;
		if (it != expr_end) {
			jule::I32 *_229_r = it;
			{
				if (((*(_229_r)) == 0LL)) {
					goto _iter_end_1c5b4394b;
				};
				_216_buff=_239613385_AppendRune(_216_buff, (*(_229_r)));
			}
			_iter_next_1c5b4394b:;
			++it;
			goto _iter_begin_1c5b4394b;
		}
		_iter_end_1c5b4394b:;
	};
	return _239613385_AppendRune(_216_buff, 0LL);;
}



inline jule::Str _2396138e6_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _386_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_238db84a9:;
		if (it != expr_end) {
			jule::I64 _396_i = it - expr->begin();
			jule::U16 *_399_v = it;
			{
				if (((*(_399_v)) == 0LLU)) {
					(_386_codePage).mut_slice(0LL, _396_i);;
					goto _iter_end_238db84a9;
				};
			}
			_iter_next_238db84a9:;
			++it;
			_396_i++;
			goto _iter_begin_238db84a9;
		}
		_iter_end_238db84a9:;
	};
	return static_cast<jule::Str>(_239613011_Decode(_386_codePage));;
}



inline jule::Str _239613bb0_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5510_codePage;;
	jule::I64 _566_i = 0LL;;
	for (; ; (_566_i)++) {
		{
			jule::U16 _583_r = _5023_s[_566_i];;
			if ((_583_r == 0LLU)) {
				return static_cast<jule::Str>(_239613011_Decode(_5510_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5510_codePage; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1c53178b2:;
	}
	_iter_end_1c53178b2:;;
	return jule::Str();;
}



inline jule::I64 _239405b28_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _23963c39d_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _23963c667_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I64 _23963c9db_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I64 _23963ce1a_Wopen(jule::U16* _7317_path, jule::I64 _7329_flag, jule::I64 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _23963d129_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _23963d49d_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _23963da31_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _23963dcea_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _23963e0b4_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _23963e59d_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1092_buff, jule::U16** _10914_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1092_buff)), ((wchar_t**)(_10914_fname)));;
}



inline jule::Bool _23963e922_GetConsoleMode(jule::Uintptr _11419_handle, jule::I64* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _23964002c_SetConsoleMode(jule::Uintptr _11919_handle, jule::I64 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _23964057c_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I64 _12454_toWrite, jule::I64* _1257_written, void* _12521_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_1257_written)))), _12521_reserved);;
}



inline jule::Bool _239640a66_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I64 _13257_toRead, jule::I64* _1337_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_1337_readed)), nullptr);;
}



inline jule::Uintptr _2396410e9_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I64 _23964146d_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I64 _239641737_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I64 _239643816_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I64 _239643be0_Close(jule::I64 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I64 _239644097_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _2396442c8_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _21d8015e4_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _21d80035c_first[static_cast<jule::I64>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = static_cast<jule::I32>(((_1872_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1952_sz = static_cast<jule::I64>((_1872_x & 7LLU));;
	_21d800912_acceptRange _1962_accept = _21d800ca8_acceptRanges[static_cast<jule::I64>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21d801935_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _21d80035c_first[static_cast<jule::I64>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = static_cast<jule::I32>(((_2342_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2422_sz = static_cast<jule::I64>((_2342_x & 7LLU));;
	_21d800912_acceptRange _2432_accept = _21d800ca8_acceptRanges[static_cast<jule::I64>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _21d801e85_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _3212_end = _31722_s.len();;
	jule::I64 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_21d8036a1_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1a987d74b;
			};
		}
	_iter_next_1a987d74b:;
	}
	_iter_end_1a987d74b:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I64 _21d80224e_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1a98804d9:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1a98808d5:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1a988095c:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1a98809d4:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1a9880a5b:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1a9880550:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1a9880473:;
			{
				return -1LL;;
			}
		}
		_match_end_1a9880374:;
	};
}



inline jule::I64 _21d8026d3_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1a9885203:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1a988592e:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1a9883476:;
			{
				_37434_r=65533LL;
				goto _case_begin_1a98857ec;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1a98857ec:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1a98830be:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1a9883058:;
	};
}



inline jule::Slice<jule::U8> _21d8029d0_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _21d802d54_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _21d802d54_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1a988cbcd:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1a988b7ae:;
			{
				_41242_r=128LL;
				goto _case_begin_1a988b825;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1a988b825:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1a988b061:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1a988aeea:;
	};
}



inline jule::I64 _21d8033d7_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1a9896225;
			};
			jule::U8 _4823_x = _21d80035c_first[static_cast<jule::I64>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1a9896225;
			};
			jule::I64 _4877_size = static_cast<jule::I64>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1a9896225;
			};
			_21d800912_acceptRange _4923_accept = _21d800ca8_acceptRanges[static_cast<jule::I64>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1a9896225:;
	}
	_iter_end_1a9896225:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _21d8036a1_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _21d80aa1b_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _21d80b148_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_21d80aa1b_handleRW(_814_b);
}



inline jule::Str _238b44ce6_Str(jule::U8* _108_b, jule::I64 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1a98b5ec0_Slice(jule::U8* _2216_e, jule::I64 _2226_len, jule::I64 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _238b51198_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1a98b5ec0_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _238b5142e_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _238b44ce6_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _238b516e8_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I64 _21d87dc48_getLastOsErrorWindows(void) {
	jule::U32 _162_err = _23963d129_GetLastError();;
	{
		auto &_match_expr{ _162_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1c5c1aa45:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c5c1aaab:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c5c1ab22:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1c5c1ab88:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else {
			_case_begin_1c5c1a8d0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1c5c1a9e0:;
	};
}



inline jule::Slice<jule::Str> _21d87ecc1_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _21d880233_WorkingDir(void) {
	return _21d880b7e_getwd();
}



inline jule::Exceptional<jule::Str> _21d880b7e_getwd(void) {
	jule::Array<jule::U16,261> _1510_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _162_n = _23963d49d_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1510_buf[0LL])));;
	if ((_162_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_21d87dc48_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_239613bb0_U16PtrToStr((&(_1510_buf[0LL])))};;
}



inline jule::Bool _20593b291_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_205999013__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _2059a245b_isExcludingLatin(_205945267_Letter, _7613_r);;
}



inline jule::Bool _2059a17ce_is16(jule::Slice<_20599ea41_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa0a86e5:;
			if (it != expr_end) {
				jule::I64 _1937_i = it - expr->begin();
				{
					_20599ea41_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_1944_range))._field_Lo),(*(_1944_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aa0a86e5:;
				++it;
				_1937_i++;
				goto _iter_begin_1aa0a86e5;
			}
			_iter_end_1aa0a86e5:;
		};
		return false;;
	};
	jule::I64 _2086_lo = 0LL;;
	jule::I64 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I64 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_20599ea41_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2123_range))._field_Lo),(*(_2123_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1aa0a755c:;
	}
	_iter_end_1aa0a755c:;;
	return false;;
}



inline jule::Bool _2059a1b53_is32(jule::Slice<_2059a006e_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aa0aea92:;
			if (it != expr_end) {
				jule::I64 _2307_i = it - expr->begin();
				{
					_2059a006e_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2314_range))._field_Lo),(*(_2314_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1aa0aea92:;
				++it;
				_2307_i++;
				goto _iter_begin_1aa0aea92;
			}
			_iter_end_1aa0aea92:;
		};
		return false;;
	};
	jule::I64 _2456_lo = 0LL;;
	jule::I64 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I64 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_2059a006e_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2493_range))._field_Lo),(*(_2493_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1aa0ab7a3:;
	}
	_iter_end_1aa0ab7a3:;;
	return false;;
}



inline jule::Bool _2059a245b_isExcludingLatin(jule::Ptr<_2059a04e2_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20599ea41_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I64 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _2059a17ce_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_2059a006e_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _2059a1b53_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _2059a269d_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_205999013__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _2059a245b_isExcludingLatin(_20594b537_Upper, _29512_r);;
}



inline jule::I64 _2059e2ed5_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I64)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1aa53915e:;
	}
	_iter_end_1aa53915e:;;
	return -1LL;;
}



inline jule::I64 _2059e3612_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa539527:;
		if (it != expr_end) {
			jule::I64 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1aa539527:;
			++it;
			_706_i++;
			goto _iter_begin_1aa539527;
		}
		_iter_end_1aa539527:;
	};
	return -1LL;;
}



inline jule::I64 _2059e3986_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _2059e2ed5_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _2059e3c83_Repeat(jule::Str _1111_s, jule::I64 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(jule::MAX_I64,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_238b51e24_StrBuilder _186_ss = static__238b52375_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_238b528d6_WriteStr(&_186_ss, _1111_s);
		}
	_iter_next_1aa54c53a:;
	}
	_iter_end_1aa54c53a:;;
	return _238b531cd_Str(&_186_ss);;
}



inline jule::Bool _2059e414b_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _2059e44c0_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I64 _2059e4976_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I64 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_2059e414b_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1aa5511a9:;
	}
	_iter_end_1aa5511a9:;;
	return -1LL;;
}



inline jule::I64 _2059e4cb7_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _2059e4976_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I64 _2059e51e6_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I64 _6233_i) {
	jule::I64 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1aa552c49:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I64 _697_k = _636_j;;
			jule::I64 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I64 ___jule_assign_arg = (_697_k + 1LL);
				jule::I64 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1aa553a6e;
					};
				}
			_iter_next_1aa554a09:;
			}
			_iter_end_1aa554a09:;;
			return _636_j;;
		}
	_iter_next_1aa553a6e:;
	}
	_iter_end_1aa553a6e:;;
	return -1LL;;
}



inline jule::I64 _2059e556a_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _2059e51e6_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I64 _2059e6d52_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _2059e3986_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I64 _2059e71c6_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I64 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I64 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1aa55c3b3:;
	}
	_iter_end_1aa55c3b3:;;
	return -1LL;;
}



inline jule::I64 _2059e7b00_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I64 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I64 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2059e71c6_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1aa5606e6:;
	}
	_iter_end_1aa5606e6:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2059e8293_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I64 _21532_n) {
	jule::I64 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I64 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I64 _2293_j = _2059e4976_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1aa418d1e;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1aa418d1e:;
	}
	_iter_end_1aa418d1e:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Bool _2059e8617_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_2059e4976_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _2059e9184_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_2059e7b00_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I64 _2059e9508_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _2686_n = 0LL;;
	jule::I64 _2696_i = 0LL;;
	for (;;) {
		{
			jule::I64 _2713_j = _2059e4976_FindAt(_26410_s, _26418_sub, _2696_i);;
			if ((_2713_j == -1LL)) {
				goto _iter_end_1aa0b802e;
			};
			(_2686_n)++;
			_2696_i=(_2713_j + _26418_sub.len());
		}
	_iter_next_1aa0b802e:;
	}
	_iter_end_1aa0b802e:;;
	return _2686_n;;
}



inline jule::Str _2059e99e2_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I64 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I64 _2892_m = _2059e9508_Count(_28412_s, _28420_sub);;
	if ((_2892_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2892_m < _28444_n))) {
		_28444_n=_2892_m;
	};
	_238b51e24_StrBuilder _2976_ss = static__238b52375_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I64 _2986_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I64 _3003_j = _2059e4976_FindAt(_28412_s, _28420_sub, _2986_i);;
			if ((_3003_j == -1LL)) {
				goto _iter_end_1aa0bba05;
			};
			_238b528d6_WriteStr(&_2976_ss, _28412_s.slice(_2986_i, _3003_j));
			_238b528d6_WriteStr(&_2976_ss, _28430_new);
			_2986_i=(_3003_j + _28420_sub.len());
		}
	_iter_next_1aa0bba05:;
	}
	_iter_end_1aa0bba05:;;
	_238b528d6_WriteStr(&_2976_ss, _28412_s.slice(_2986_i));
	return _238b531cd_Str(&_2976_ss);;
}



inline jule::Str _2059ea76d_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I64 _3426_i = 0LL;;
	while ((_3426_i < _34117_s.len())) {
		{
			jule::I32 _3443_r;
			jule::I64 _3446_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_34117_s.slice(_3426_i));
				_3443_r = __jule_assign_result.__jule_result_arg0;
				_3446_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2059e71c6_FindRune(_34125_cutset, _3443_r) == -1LL)) {
				return _34117_s.slice(_3426_i);;
			};
			_3426_i+=_3446_n;
		}
	_iter_next_1aa563111:;
	}
	_iter_end_1aa563111:;;
	return jule::Str();;
}



inline jule::Str _2059eaae2_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I64 _3566_i = _35514_s.len();;
	while ((_3566_i > 0LL)) {
		{
			jule::I32 _3583_r;
			jule::I64 _3586_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801e85_DecodeLastRuneStr(_35514_s.slice(0LL, _3566_i));
				_3583_r = __jule_assign_result.__jule_result_arg0;
				_3586_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_2059e71c6_FindRune(_35522_cutset, _3583_r) == -1LL)) {
				return _35514_s.slice(0LL, _3566_i);;
			};
			_3566_i-=_3586_n;
		}
	_iter_next_1aa5652cd:;
	}
	_iter_end_1aa5652cd:;;
	return jule::Str();;
}



inline jule::Str _2059eae66_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _2059ea76d_TrimLeft(_2059eaae2_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _238b54960_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _238b54c6d_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _238b55037_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I64 _238b5560e_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_238b54c6d_isSlash(_8318_path[0LL]))) || (!(_238b54c6d_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _238b558c8_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _238b558c8_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_238b55037_toUpper(_976_p2[0LL]) == 'U')) && (_238b55037_toUpper(_976_p2[1LL]) == 'N')) && (_238b55037_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _238b558c8_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _238b558c8_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _238b558c8_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa581dcc:;
		if (it != expr_end) {
			jule::I64 _1216_i = it - expr->begin();
			{
				if (_238b54c6d_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aa581dcc:;
			++it;
			_1216_i++;
			goto _iter_begin_1aa581dcc;
		}
		_iter_end_1aa581dcc:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _238b55b92_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _2396135d8_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I64>(_1326_n), static_cast<jule::I64>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_23963e59d_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _2396138e6_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I64>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1aa5837d5:;
	}
	_iter_end_1aa5837d5:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _238b5606b_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _238b55b92_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _2059ed9c4_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _238b562ad_join(jule::Slice<jule::Str> _16013_elem) {
	_238b51e24_StrBuilder _1616_s = static__238b52375_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa5882ac:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_238b53662_Len(&_1616_s) == 0LL)) {
						_case_begin_1aa58905a:;
					}
					else if (_238b54c6d_isSlash(_1626_lastChar)) {
						_case_begin_1aa589423:;
						{
							while (((_16314_e.len() > 0LL) && _238b54c6d_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1aa589a50:;
							}
							_iter_end_1aa589a50:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1aa588c3b:;
					}
					else {
						_case_begin_1aa588bc5:;
						{
							_238b52b8e_WriteByte(&_1616_s, '\\');
							_1626_lastChar='\\';
						}
					}
					_match_end_1aa588ac6:;
				};
				if ((_16314_e.len() > 0LL)) {
					_238b528d6_WriteStr(&_1616_s, _16314_e);
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1aa5882ac:;
			++it;
			goto _iter_begin_1aa5882ac;
		}
		_iter_end_1aa5882ac:;
	};
	if ((_238b53662_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _2059ed9c4_Clean(_238b531cd_Str(&_1616_s));;
}



inline jule::Str _2059ed9c4_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I64 _1112_volLen = _238b5560e_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _238b54960_IsPathSep(_1102_originalPath[0LL])) && _238b54960_IsPathSep(_1102_originalPath[1LL]))) {
			return _2059ee09b_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _238b54960_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1272_n = _10914_path.len();;
	_2059ecb38_lazyBuff _1286_out = _2059ecb38_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I64 _1336_r;
	jule::I64 _13313_dotdot;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_2059ed3a8_append(&_1286_out, 92LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_238b54960_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1aa594373:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _238b54960_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1aa590dec:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _238b54960_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1aa590e63:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1aa59740e:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_238b54960_IsPathSep(_2059ed100_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1aa597b90:;
									}
									_iter_end_1aa597b90:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1aa5974a8:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_2059ed3a8_append(&_1286_out, 92LLU);
									};
									_2059ed3a8_append(&_1286_out, '.');
									_2059ed3a8_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1aa59709b:;
						};
					}
				}
				else {
					_case_begin_1aa590d86:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_2059ed3a8_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I64 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_238b54960_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_2059ed3a8_append(&_1286_out, '.');
										_2059ed3a8_append(&_1286_out, 92LLU);
										goto _iter_end_1aa5928b0;
									};
								}
							_iter_next_1aa5928b0:;
							}
							_iter_end_1aa5928b0:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_238b54960_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_2059ed3a8_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1aa592250:;
						}
						_iter_end_1aa592250:;;
					}
				}
				_match_end_1aa590b00:;
			};
		}
	_iter_next_1aa5904a1:;
	}
	_iter_end_1aa5904a1:;;
	if ((_1286_out._field_w == 0LL)) {
		_2059ed3a8_append(&_1286_out, '.');
	};
	return _2059ee09b_FromSlash(_2059ed63e_string(&_1286_out));;
}



inline jule::Str _2059ee09b_FromSlash(jule::Str _21214_path) {
	;
	return _2059e99e2_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _2059ee3dc_Join(jule::Slice<jule::Str> _2269_elem) {
	return _238b562ad_join(_2269_elem);;
}



inline jule::Str _2059ee673_Ext(jule::Str _2318_path) {
	jule::I64 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_238b54960_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1aa59b677:;
	}
	_iter_end_1aa59b677:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _2059ee93c_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_238b5606b_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _2059eec06_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _238b54960_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1aa59c9ec:;
	}
	_iter_end_1aa59c9ec:;;
	(_25213_path).mut_slice(_205a00322_VolumeName(_25213_path).len());;
	jule::I64 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_238b54960_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1aa59ce09:;
	}
	_iter_end_1aa59ce09:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _205a000d0_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _205a00322_VolumeName(_2838_path);;
	jule::I64 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_238b54960_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1aa5a1649:;
	}
	_iter_end_1aa5a1649:;;
	jule::Str _2892_dir = _2059ed9c4_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _205a00322_VolumeName(jule::Str _30115_path) {
	return _2059ee09b_FromSlash(_30115_path.slice(0LL, _238b5560e_volumeNameLen(_30115_path)));;
}



inline jule::I64 _239654508_getLastFsError(void) {
	jule::I64 _722_err = _239405b28_GetLastErrno();;
	{
		auto &_match_expr{ _722_err };
		
		if (_match_expr == 13LL) {
			_case_begin_238d86b2b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_238d86a2c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_238d86466:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_238d864cc:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_238d86543:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_238d865ba:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_238d86642:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_238d866b9:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_238d86cc4:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_238d86d4b:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_238d86dc3:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_238d86e4a:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_238d86ec2:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_238d87049:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_238d870c1:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_238d87148:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_238d871c0:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_238d87247:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_238d872be:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_238d87346:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_238d873bd:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_238d87445:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_238d874bc:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_238d87544:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_238d875bb:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_238d87643:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_238d876ba:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_238d87742:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_238d86301:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_238d86411:;
	};
}



inline jule::Bool _21d80c38b_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _23963ba95_STDIN) || (_11620_handle == _23963bd3c_STDOUT)) || (_11620_handle == _23963c139_STDERR));;
}



inline void _205b59855_appendEscapeArg(_238b51e24_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_238b528d6_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I64 _1106_i = 0LL;;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1aa459a96:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1aa459d93:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1aa459c83:;
			};
		}
	_iter_next_1aa459601:;
	}
	_iter_end_1aa459601:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		_238b528d6_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		_238b52b8e_WriteByte(_10225_s, '\"');
		_238b528d6_WriteStr(_10225_s, _10240_arg);
		_238b52b8e_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1096_hasSpace) {
		_238b52b8e_WriteByte(_10225_s, '\"');
	};
	jule::I64 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10240_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10240_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1aa45d1d7:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1aa45d2a3:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								_238b52b8e_WriteByte(_10225_s, '\\');
							}
						_iter_next_1aa45d9ac:;
						}
						_iter_end_1aa45d9ac:;;
						_238b52b8e_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1aa45cc64:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1aa45cd74:;
			};
			_238b52b8e_WriteByte(_10225_s, _1393_c);
		}
	_iter_next_1aa45c44a:;
	}
	_iter_end_1aa45c44a:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				_238b52b8e_WriteByte(_10225_s, '\\');
			}
		_iter_next_1aa45e54b:;
		}
		_iter_end_1aa45e54b:;;
		_238b52b8e_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _205b59b1e_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_238b51e24_StrBuilder _1646_s = static__238b52375_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa46023e:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_238b53662_Len(&_1646_s) > 0LL)) {
					_238b52b8e_WriteByte(&_1646_s, ' ');
				};
				_205b59855_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1aa46023e:;
			++it;
			goto _iter_begin_1aa46023e;
		}
		_iter_end_1aa46023e:;
	};
	return _238b531cd_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _205b59ee8_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_239612c7a_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I64 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa461b25:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_2059e3612_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1aa461b25:;
			++it;
			goto _iter_begin_1aa461b25;
		}
		_iter_end_1aa461b25:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa46385d:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19310_c;
					_iter_begin_1aa4640bc:;
					std::tie(_19310_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1916_b=_239613385_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1aa4640bc:;
						it += len;
						goto _iter_begin_1aa4640bc;
					}
				};
				_1916_b=_239613385_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1aa46385d:;
			++it;
			goto _iter_begin_1aa46385d;
		}
		_iter_end_1aa46385d:;
	};
	_1916_b=_239613385_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I64 _205b5aee9_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1aa465552:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1aa464dd1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1aa462ce1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1aa4649a2:;
	};
}



inline jule::I64 _205b5b219_getLastProcessError(void) {
	return _205b5aee9_processErrorFromCode(static_cast<jule::I64>(_23963d129_GetLastError()));;
}



inline void _205b5ba33_Exit(jule::I64 _129_code) {
	_2396442c8_Exit(_129_code);
}



inline jule::Str _205b5bc42_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _205a8a1c0_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _205a8a49a_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_205a02302_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5c6296b:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c5c6296b:;
			++it;
			goto _iter_begin_1c5c6296b;
		}
		_iter_end_1c5c6296b:;
	};
	return false;;
}



inline jule::Bool _205a8a764_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_205a03666_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5c633c8:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1c5c633c8:;
			++it;
			goto _iter_begin_1c5c633c8;
		}
		_iter_end_1c5c633c8:;
	};
	{
		auto expr = &(_205a88454_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5c64440:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1c5c64440:;
			++it;
			goto _iter_begin_1c5c64440;
		}
		_iter_end_1c5c64440:;
	};
	return false;;
}



inline jule::Str _205a97c49_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _205a986d9_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _205a98057_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c5c659d5:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c5c653ec:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c5c65463:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1c5c65386:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c5c65001:;
	};
}



inline jule::I64 _205a98321_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5c6581a:;
		if (it != expr_end) {
			jule::I64 _3416_i = it - expr->begin();
			jule::U8 *_3419_b = it;
			{
				if (((*(_3419_b)) == '@')) {
					return _3416_i;;
				};
			}
			_iter_next_1c5c6581a:;
			++it;
			_3416_i++;
			goto _iter_begin_1c5c6581a;
		}
		_iter_end_1c5c6581a:;
	};
	return -1LL;;
}



inline jule::Str _205a986d9_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_238b51e24_StrBuilder _3506_s = static__238b52375_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5c677c8:;
		if (it != expr_end) {
			jule::Any *_3519_arg = it;
			{
				jule::I64 _3523_i = _205a98321_findNextFmt(_34917_fmt);;
				if ((_3523_i == -1LL)) {
					goto _iter_end_1c5c677c8;
				};
				_238b528d6_WriteStr(&_3506_s, _34917_fmt.slice(0LL, _3523_i));
				_238b528d6_WriteStr(&_3506_s, _205a98057_argToStr((*(_3519_arg))));
				(_34917_fmt).mut_slice((_3523_i + 1LL));;
			}
			_iter_next_1c5c677c8:;
			++it;
			goto _iter_begin_1c5c677c8;
		}
		_iter_end_1c5c677c8:;
	};
	_238b528d6_WriteStr(&_3506_s, _34917_fmt);
	return _238b531cd_Str(&_3506_s);;
}



inline jule::Bool _205a99542_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _205a9a961_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _205a9ac6e_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _205a9b038_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _205a9b379_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _205a9b610_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _205a9b8c9_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _205a9bb93_IsUnix(jule::Str _5511_os) {
	return (_205a9ac6e_IsDarwin(_5511_os) || _205a9b038_IsLinux(_5511_os));;
}



inline jule::Bool _205a9c06c_Is32Bit(jule::Str _5812_arch) {
	return _205a9b379_IsI386(_5812_arch);;
}



inline jule::Bool _205a9c2ae_Is64Bit(jule::Str _6112_arch) {
	return (_205a9b610_IsAmd64(_6112_arch) || _205a9b8c9_IsArm64(_6112_arch));;
}



inline void _205b5cec9_init(void) {
	jule::Str _256_path = _205b5bc42_Executable();;
	if ((_256_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_205b5c528_PathWd=({
			auto except = _21d880233_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_205b5c281_PathExec=_205a000d0_Dir(_256_path);
		_205b5c072_PathStdlib=_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _205b5c281_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_205b5c825_PathApi=_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _205b5c281_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::I64 _1dc4c9023_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1dc4d18aa_Len64(_6119_x));;
}



inline jule::I64 _1dc4c9e69_TrailingZeros(jule::U64 _8318_x) {
	;
	return _1dc4cab18_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I64 _1dc4ca84e_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(_1dc4c9661__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I64 _1dc4cab18_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(_1dc4c9c05__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I64 _1dc4d15e1_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I64 _1dc4d18aa_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I64>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I64>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc4d2647_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1dc4d3e51_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5012_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5022_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5032_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5042_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5052_w0 = (_5012_x0 * _5032_y0);;
	jule::U64 _5062_t = ((_5022_x1 * _5032_y0) + (_5052_w0 >> 32LLU));;
	jule::U64 _5076_w1 = (_5062_t & 4294967295LLU);;
	jule::U64 _5082_w2 = (_5062_t >> 32LLU);;
	_5076_w1+=(_5012_x0 * _5042_y1);
	__jule_func_result.__jule_result_arg0=(((_5022_x1 * _5042_y1) + _5082_w2) + (_5076_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1dc3d5c32_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1dc3d6040_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1dc3d6309_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1dc3d664a_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1dc3d8bad_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aa5b4283:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1dc4dba2a_IsInf(_4714_f, 0LL) || _1dc4db398_IsNaN(_4714_f)) {
			_case_begin_1aa5b432c:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aa5b41a6:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc4dbce4_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1dc3d6309_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1dc3d664a_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1dc4db08a_NaN(void) {
	return _1dc3d664a_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1dc4db398_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1dc4db662_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1dc3d664a_F64FromBits(9218868437227405312LLU);;
	};
	return _1dc3d664a_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1dc4dba2a_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1dc4dbce4_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1dc4de19d_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1dc4dd7b8_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1dc4db398_IsNaN(_1118_x) || _1dc4dba2a_IsInf(_1118_x, 1LL)) {
			_case_begin_1c481c7be:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c481c868:;
			{
				return _1dc4db08a_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c481c8ce:;
			{
				return _1dc4db662_Inf(-1LL);;
			}
		}
		_match_end_1c481c703:;
	};
	jule::F64 _1336_f1;
	jule::I64 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc3d8bad_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = jule::div(_1382_f,(2LL + _1382_f));;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1dc4de19d_Abs(jule::F64 _438_x) {
	return _1dc3d664a_F64FromBits((_1dc3d6309_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1dc4e5c76_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1dc4de19d_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1aa7579cb:;
		}
		_iter_end_1aa7579cb:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1dc4e657e_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I64 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1dc3d8bad_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1dc4dd7b8_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1dc520025_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I64 _7932_prec, jule::I64 _7943_bitSize) {
	return _238b516e8_StrFromBytes(_1dc52060d_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1dc5239b8_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1dc52060d_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I64 _8758_prec, jule::I64 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1dc51dd15_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa98ed01:;
			{
				_886_bits=static_cast<jule::U64>(_1dc3d5c32_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1dc51dd15_floatInfo>)((&(_1dc51e211_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa98ed67:;
			{
				_886_bits=_1dc3d6309_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1dc51dd15_floatInfo>)((&(_1dc51e50d_f64info))));
			}
		}
		else {
			_case_begin_1aa98c98b:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1aa98e5c5:;
	};
	jule::Bool _1012_neg = ((_886_bits >> ((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I64 _1026_exp = (static_cast<jule::I64>((_886_bits >> (*_8910_flt.alloc)._field_mantbits)) & static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & ((static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << (*_8910_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1aa993bb2:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1aa9955ba:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1aa995444:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1aa994cc3:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1aa994bc4:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa993ca0:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1aa992d26:;
			{
				_1036_mant|=(static_cast<jule::U64>(1LLU) << (*_8910_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1aa992ebe:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1dc522b3d_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1dc5232c0_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1dc51e992_decimalSlice _1376_digs = _1dc51e992_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1dc52d918_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa99814a:;
				{
					_8758_prec=_1dc5239b8_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa99914b:;
				{
					_8758_prec=_1dc5239b8_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa9991b2:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1aa998359:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I64 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa99b11a:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa99b208:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1aa99abca:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1aa99969b:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1dc52c65e_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1dc52cb04_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I64>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1dc520d17_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1dc5214dd_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1dc520d17_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I64 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I64 _18813_exp, _1dc51dd15_floatInfo* _18824_flt) {
	_1dc5326ec_decimal _1896_d = _1dc5326ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dc532ad7_assign(&_1896_d, _1882_mant);
	_1dc532d90_shift(&_1896_d, (_18813_exp - static_cast<jule::I64>((*(_18824_flt))._field_mantbits)));
	_1dc51e992_decimalSlice _1926_digs = _1dc51e992_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1dc52190b_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1dc51e992_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa9a2be3:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa9a2d69:;
				{
					_18733_prec=_1dc5239b8_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa9a2dd0:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1aa9a2044:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa9a1c7a:;
				{
					_1dc5336a9_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa9a1ce1:;
				{
					_1dc5336a9_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa9a1d57:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1dc5336a9_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1aa9a4530:;
		};
		_1926_digs=_1dc51e992_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1dc5214dd_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1dc5214dd_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1dc51e992_decimalSlice _2252_digs, jule::I64 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa9a7544:;
			{
				return _1dc521ea0_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa9a75aa:;
			{
				return _1dc522489_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa9a7621:;
			{
				jule::I64 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I64 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1dc521ea0_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), ((_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1dc522489_fmtF(_22418_dst, _22447_neg, _2252_digs, _1dc5239b8_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1aa9a749a:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1dc52190b_roundShortest(_1dc5326ec_decimal* _26223_d, jule::U64 _26235_mant, jule::I64 _26246_exp, _1dc51dd15_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1dc5326ec_decimal _2926_upper = _1dc5326ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dc532ad7_assign(&_2926_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1dc532d90_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I64 _3036_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1dc5326ec_decimal _3116_lower = _1dc5326ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1dc532ad7_assign(&_3116_lower, ((_3026_mantlo << 1LLU) + 1LLU));
	_1dc532d90_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I64>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I64 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I64 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1aa9b3d9c;
			};
			jule::I64 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1aa9b8a1c:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1aa9b8ab6:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1aa9b8b2c:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1aa9b8951:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1aa9bb569:;
					{
						_1dc5336a9_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1aa9bb613:;
					{
						_1dc533148_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1aa9bb679:;
					{
						_1dc533401_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1aa9b8b93:;
			};
		}
	_iter_next_1aa9b3d9c:;
	}
	_iter_end_1aa9b3d9c:;;
}



inline jule::Slice<jule::U8> _1dc521ea0_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1dc51e992_decimalSlice _40137_d, jule::I64 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I64 _4177_i = 1LL;;
		jule::I64 _4183_m = _1dc523644_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa9c068e:;
		}
		_iter_end_1aa9c068e:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I64 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1aa9c2d01:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1aa9c27a1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa9c26d5:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_4306_exp,10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa9c22c8:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1dc522489_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1dc51e992_decimalSlice _45637_d, jule::I64 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I64 _4647_m = _1dc523644_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1aa9c6c4a:;
		}
		_iter_end_1aa9c6c4a:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I64 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1aa9c8158:;
		}
		_iter_end_1aa9c8158:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1dc522b3d_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I64 _48952_exp, _1dc51dd15_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc537999_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I64>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc537999_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1dc5232c0_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I64 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I64 _51221_exp, _1dc51dd15_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant<<=(60LLU - (*(_51232_flt))._field_mantbits);
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant<<=1LLU;
			(_51221_exp)--;
		}
	_iter_next_1aa9cce1b:;
	}
	_iter_end_1aa9cce1b:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U64 _5263_shift = static_cast<jule::U64>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = ((_5126_mant << _5263_shift) & 1152921504606846975LLU);;
		_5126_mant>>=(60LLU - _5263_shift);
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant<<=(60LLU - _5263_shift);
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant>>=1LLU;
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1aa9d38d3:;
		}
		_iter_end_1aa9d38d3:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I64 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I64>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant<<=4LLU;
			}
		_iter_next_1aa9d50cc:;
		}
		_iter_end_1aa9d50cc:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1dc524656_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1c4847c6c:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1c4845e46:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1aa9d7200:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>(jule::div(_51221_exp,100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((jule::div(_51221_exp,10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1aa9d64eb:;
	};
	return _51113_dst;;
}



inline jule::I64 _1dc523644_min(jule::I64 _5968_a, jule::I64 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I64 _1dc5239b8_max(jule::I64 _6038_a, jule::I64 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1dc524656_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError _1dc524ac9_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c485496b:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c48548a0:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1dc524656_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1aaab29d4:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dc524656_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1aaab2a8e:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1dc524656_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1aaab28a2:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c4856011:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c4855e45:;
					};
				};
			}
		}
		else {
			_case_begin_1c4853d00:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c4854372:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_238d913d8:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_238d910b9:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_238d906d4:;
			{
				_906_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_238d90ecb:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_238d91130:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_238d8e826:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_238d92582:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_238d930dd:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_238d94782:;
						{
							_1107_d=(_1099_c - '0');
						}
					}
					else if ((('a' <= _1dc524656_lower(_1099_c)) && (_1dc524656_lower(_1099_c) <= 'z'))) {
						_case_begin_238d946b6:;
						{
							_1107_d=((_1dc524656_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_238d942cb:;
						{
							goto _iter_next_238d930dd;
						}
					}
					else {
						_case_begin_238d94265:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_238d94210:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_238d930dd:;
			++it;
			goto _iter_begin_238d930dd;
		}
		_iter_end_238d930dd:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1dc525008_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I64 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc524ac9_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1dc5254ae_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I64 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc524ac9_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I64>(0LL)) && (_18710_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc52616e_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1dc3d664a_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _572_clz = _1dc4c9023_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_572_clz);
	;
	jule::U64 _606_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_4122_man, _1dc526ed8_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_4122_man, _1dc526ed8_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((_6817_mergedLo + 1LLU) == 0LLU)) && ((_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = (_636_xHi >> (_792_msb + 9LLU));;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa>>=1LLU;
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa>>=1LLU;
		_606_retExp2+=1LLU;
	};
	if (((_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1dc3d664a_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc5265e2_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1dc3d6040_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1322_clz = _1dc4c9023_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1322_clz);
	;
	jule::U64 _1356_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_11022_man, _1dc526ed8_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_11022_man, _1dc526ed8_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14318_merged_lo + 1LLU) == 0LLU)) && ((_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = (_1386_x_hi >> (_1542_msb + 38LLU));;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa>>=1LLU;
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa>>=1LLU;
		_1356_retExp2+=1LLU;
	};
	if (((_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1dc3d6040_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1dc5283c4_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I64 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I64 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1aa0ca3d7:;
	}
	_iter_end_1aa0ca3d7:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1dc5286d2_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _736_sign = 1LL;;
	jule::I64 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aa0cdd47:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aa0cddbe;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aa0cddbe:;
			{
				jule::I64 _887_caseN = _1dc5283c4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1dc4db662_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aa0cde35:;
			{
				if ((_1dc5283c4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1dc4db08a_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aa0cdc9d:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1dc52899b_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aa0d40a0:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aa0d449b:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aa0d404a:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I64 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1dc524656_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I64 _1346_nd = 0LL;;
	jule::I64 _1356_ndMant = 0LL;;
	jule::I64 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1aa0d94b2:;
					{
						goto _iter_next_1aa0d87e1;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1aa0d955b:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1aa0ddeab;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1aa0d87e1;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1aa0d95c2:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1aa0d87e1;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa0d87e1;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1dc524656_lower(_1383_c))) && (_1dc524656_lower(_1383_c) <= 'f'))) {
					_case_begin_1aa0d9638:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1dc524656_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aa0d87e1;
					}
				}
				_match_end_1aa0d93d5:;
			};
			goto _iter_end_1aa0d87e1;
		}
	_iter_next_1aa0d87e1:;
	}
	_iter_end_1aa0d87e1:;;
	_julec_label_1aa0ddeab:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1dc524656_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1aa0e180a;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1aa0e180a:;
		}
		_iter_end_1aa0e180a:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1dc52a4e7_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1dc51e50d_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1aa0ea803:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1aa0ea869:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc5298ae_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1dc5298ae_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1aa0ea8d0:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1dc5298ae_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa0ea726:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1dc52a926_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1dc51e211_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1aa0eea49:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1aa0eeab0:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1dc529bde_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1dc529bde_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1aa0eeb26:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1dc529bde_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa0ee96c:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError _1dc52aeba_atofHex(_1dc51dd15_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5572_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1aa1033ee:;
	}
	_iter_end_1aa1033ee:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa10549a:;
	}
	_iter_end_1aa10549a:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aa105ad8:;
	}
	_iter_end_1aa105ad8:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _6036_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6106_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6106_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (_1dc51dd15_floatInfo_eq(&(*(_55613_flt)), _1dc51e211_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1dc3d6040_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1dc3d664a_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b394_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I64 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5286d2_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I64 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I64 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc52899b_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc52aeba_atofHex(&(_1dc51e211_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc52a926_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc5265e2_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1dc5265e2_eiselLemire32((_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc5326ec_decimal _6676_d = _1dc5326ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1dc529161_set(&_6676_d, _238b51198_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc5294a2_floatBits(&_6676_d, &(_1dc51e211_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1dc3d6040_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b5d6_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I64 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5286d2_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I64 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I64 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc52899b_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc52aeba_atofHex(&(_1dc51e50d_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc52a4e7_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc52616e_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1dc52616e_eiselLemire64((_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1dc5326ec_decimal _7246_d = _1dc5326ec_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1dc529161_set(&_7246_d, _238b51198_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1dc5294a2_floatBits(&_7246_d, &(_1dc51e50d_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1dc3d664a_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError _1dc52b95a_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I64 _7386_n;
		jule::I64 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc52b394_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1dc52b5d6_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1dc52bcce_ParseFloat(jule::Str _76815_s, jule::I64 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I64 _7695_n;
	jule::I64 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1dbc8d2bb_ConvError __jule_assign_result = _1dc52b95a_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I64>(0LL)) || (_7698_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0)};
	};
	if ((_7698_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1dc52c65e_ryuFtoaFixed32(_1dc51e992_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _626_e2 = _4956_exp;;
	jule::I64 _632_b = _1dc4d15e1_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _632_b));
		_626_e2+=(static_cast<jule::I64>(_632_b) - 25LL);
	};
	jule::I64 _742_q = (((-(_1dc52db9e_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I64 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc530596_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1dc530d49_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U64 _942_extra = static_cast<jule::U64>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>(((1LL << _942_extra) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_816_di >> _942_extra);
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > (1LLU << (_942_extra - 1LLU))) || ((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && (!(_8121_d0)))) || (((_976_dfrac == (1LLU << (_942_extra - 1LLU))) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=((_976_dfrac >> (_942_extra - 1LLU)) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1dc52d440_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1dc52cb04_ryuFtoaFixed64(_1dc51e992_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _1316_e2 = _12156_exp;;
	jule::I64 _1322_b = _1dc4d18aa_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U64>((55LL - _1322_b)));
		_1316_e2+=(static_cast<jule::I64>(_1322_b) - 55LL);
	};
	jule::I64 _1462_q = (((-(_1dc52db9e_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I64 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5309c5_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1dc530d49_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U64 _1662_extra = static_cast<jule::U64>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>(((1LL << _1662_extra) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1536_di >> _1662_extra);
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > (1LLU << (_1662_extra - 1LLU))) || ((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && (!(_15321_d0)))) || (((_1696_dfrac == (1LLU << (_1662_extra - 1LLU))) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=((_1696_dfrac >> (_1662_extra - 1LLU)) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1dc52d440_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1dc52d440_formatDecimal(_1dc51e992_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2012_max = _1dc52ce45_u64pow10[_20088_prec];;
	jule::I64 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aac4bd7c:;
	}
	_iter_end_1aac4bd7c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U64 _2296_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1aac4e80d:;
	}
	_iter_end_1aac4e80d:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1aac55e41:;
	}
	_iter_end_1aac55e41:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1dc52d918_ryuFtoaShortest(_1dc51e992_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1dc51dd15_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1dc4cab18_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1dc52e9e6_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I64 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1dc52e397_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1dc52e9e6_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I64 _2792_q = (_1dc52db9e_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1dc51dd15_floatInfo_eq(&(*(_26168_flt)), _1dc51e211_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc530596_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc530596_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc530596_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5309c5_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5309c5_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1dc5309c5_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1dc530d49_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1dc530d49_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1dc530d49_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U64 _3252_extra = static_cast<jule::U64>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>(((1LL << _3252_extra) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2836_dl >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2846_dc >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2856_du >> _3252_extra);
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > (1LLU << (_3252_extra - 1LLU))) || ((_3306_fracc == (1LLU << (_3252_extra - 1LLU))) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=((_3306_fracc >> (_3252_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1dc52e9e6_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I64 _1dc52db9e_mulByLog2Log10(jule::I64 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I64 _1dc52de68_mulByLog10Log2(jule::I64 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1dc52e397_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1dc51dd15_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3963_flt))._field_mantbits)) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1dc52e9e6_ryuDigits(_1dc51e992_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc531113_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc531113_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1dc531113_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1dc530167_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1dc530167_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _4287_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_4287_n)]=static_cast<jule::U8>((_4318_v2 + '0'));
			}
		_iter_next_1aa86a407:;
		}
		_iter_end_1aa86a407:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I64>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I64>((9LL - _4287_n));
		_1dc530167_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1aa86d0a8:;
	}
	_iter_end_1aa86d0a8:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1aa86ae63:;
	}
	_iter_end_1aa86ae63:;;
}



inline void _1dc530167_ryuDigits32(_1dc51e992_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I64 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I64 _4606_trimmed = 0LL;;
	jule::I64 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1aad7996b;
			};
			if (((_4703_l == (_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I64>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1aad7996b:;
	}
	_iter_end_1aad7996b:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I64 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(((2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1aa5e36d0:;
	}
	_iter_end_1aa5e36d0:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1dc530596_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1dc526ed8_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1dc52de68_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1dc5309c5_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1dc526ed8_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1dc52de68_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d3e51_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1dc4d2647_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1dc530d49_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1aa602348:;
	}
	_iter_end_1aa602348:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1dc531113_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1dc53404a_trim(_1dc5326ec_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aa605824:;
	}
	_iter_end_1aa605824:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1dc534336_rightShift(_1dc5326ec_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _2856_r = 0LL;;
	jule::I64 _2866_w = 0LL;;
	jule::U64 _2896_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2896_n >> _28432_k) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2896_n >> _28432_k) == 0LLU)) {
					{
						_2896_n=(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1aa608a36:;
				}
				_iter_end_1aa608a36:;;
				goto _iter_end_1aa60746e;
			};
			jule::U64 _3033_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(((_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1aa60746e:;
	}
	_iter_end_1aa60746e:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U64 _3082_mask = (static_cast<jule::U64>((1LL << _28432_k)) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U64 _3123_c = static_cast<jule::U64>((*(_28420_a))._field_d[_2856_r]);;
			jule::U64 _3133_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(((_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1aa608cde:;
	}
	_iter_end_1aa608cde:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U64 _3223_dig = (_2896_n >> _28432_k);;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(_2896_n * 10LLU);
		}
	_iter_next_1aa60c452:;
	}
	_iter_end_1aa60c452:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1dc53404a_trim(_28420_a);
}



inline jule::Bool _1dc5347dc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1aa610224:;
	}
	_iter_end_1aa610224:;;
	return false;;
}



inline void _1dc534a95_leftShift(_1dc5326ec_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _3536_delta = _1dc532114_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1dc5347dc_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1dc532114_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I64 _3586_r = (*(_35219_a))._field_nd;;
	jule::I64 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U64 _3626_n = static_cast<jule::U64>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_3586_r]) - '0') << _35231_k);
			jule::U64 _3663_quo = (_3626_n / 10LLU);;
			jule::U64 _3673_rem = (_3626_n - (10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1aa613458:;
	}
	_iter_end_1aa613458:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U64 _3793_quo = (_3626_n / 10LLU);;
			jule::U64 _3803_rem = (_3626_n - (10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1aa615d0c:;
	}
	_iter_end_1aa615d0c:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1dc53404a_trim(_35219_a);
}



inline jule::Bool _1dc534e19_shouldRoundUp(_1dc5326ec_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1dc53669b_FmtUint(jule::U64 _6112_i, jule::I64 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1dc53716e_small(static_cast<jule::I64>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc537999_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1dc536a64_FmtInt(jule::I64 _7211_i, jule::I64 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1dc53716e_small(static_cast<jule::I64>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1dc537999_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1dc536d2d_Itoa(jule::I64 _819_i) {
	return _1dc536a64_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1dc53716e_small(jule::I64 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _238b516e8_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1dc537405_isPowerOfTwo(jule::I64 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1dc537999_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I64 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1aa64e032:;
			{
				;
				jule::U64 _1547_us = static_cast<jule::U64>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U64 _1564_is = ((_1547_us % 100LL) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1564_is));
					}
				_iter_next_1aa650ac2:;
				}
				_iter_end_1aa650ac2:;;
				jule::U64 _1643_is = (_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>((_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I64>(_1643_is));
				};
			}
		}
		else if (_1dc537405_isPowerOfTwo(_10541_base)) {
			_case_begin_1aa64e6e7:;
			{
				jule::U64 _1793_shift = (static_cast<jule::U64>(_1dc4c9e69_TrailingZeros(static_cast<jule::U64>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U64 _1813_m = (static_cast<jule::U64>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>((static_cast<jule::U64>(_10533_u) & _1813_m)));
						_10533_u>>=_1793_shift;
					}
				_iter_next_1aa658822:;
				}
				_iter_end_1aa658822:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		else {
			_case_begin_1aa64d0ca:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = jule::div(_10533_u,_1923_b);;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>((_10533_u - (_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1aa64dd12:;
				}
				_iter_end_1aa64dd12:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I64>(static_cast<jule::U64>(_10533_u)));
			}
		}
		_match_end_1aa64d3a5:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I64 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_238b516e8_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline jule::Str _1dc538e95_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa669d2d:;
			{
				return _1dc5384b1_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa66d491:;
			{
				return _1dc538769_SysUint;;
			}
		}
		else {
			_case_begin_1aa66acda:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aa66c6d2:;
	};
}



inline jule::I64 _1dc53925e_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa66e3c6:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa66e5e6:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa66e65c:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa66e43c:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa66e4a3:;
			{
				return _1dc5381b4_BitSize;;
			}
		}
		else {
			_case_begin_1aa66e20b:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa66e32c:;
	};
}



inline jule::Str _1dc5395a0_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa671a16:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa67183a:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa6718a1:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa671a7c:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1aa6710ed:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa67121e:;
	};
}



inline jule::Str _1dc539836_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa672c8c:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa672550:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa6725b6:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa672d03:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1aa672808:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa6724a6:;
	};
}



inline jule::Str _1dc539b00_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aa674266:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa6737d7:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1aa673a7e:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa67372c:;
	};
}



inline jule::Bool _1dc53a705_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1dc52bcce_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1dc53a9be_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa678d92:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa67880e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa67808e:;
	};
}



inline jule::I64 _1dc53ac88_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aa679aeb:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aa679bc8:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aa679c3e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa67915b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa67907e:;
	};
}



inline jule::I64 _1dc53b052_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aa67b669:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aa67a855:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aa67a8bb:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa67a7cd:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa67ac73:;
	};
}



inline void _1dc53b1ea_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _205b5cd86_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aa67b724:;
				{
					_1dc5381b4_BitSize=64LLU;
					_1dc5384b1_SysInt=jule::Str::lit("i64", 3);
					_1dc538769_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aa67c648:;
				{
					_1dc5381b4_BitSize=32LLU;
					_1dc5384b1_SysInt=jule::Str::lit("i32", 3);
					_1dc538769_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1aa67c549:;
		};
	};
}



inline void _1dc53b371_init(void) {
	_1dc53b1ea_UpdateTarget();
}



inline jule::I64 _1dc53eece_MinI(jule::Str _6113_k) {
	_6113_k=_1dc538e95_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa67ed32:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa67eaac:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa67eb23:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa67eb9a:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aa67b812:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa67b8cd:;
	};
}



inline jule::I64 _1dc5402dc_MaxI(jule::Str _7913_k) {
	_7913_k=_1dc538e95_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aa680d44:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa680daa:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aa680e21:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aa680e87:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aa680be0:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa680b8a:;
	};
}



inline jule::U64 _1dc5405a6_MaxU(jule::Str _9713_k) {
	_9713_k=_1dc538e95_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aa68243e:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aa6824a5:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aa68251b:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aa682582:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aa6822da:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa682285:;
	};
}



inline jule::F64 _1dc5408e7_Min(jule::Str _11512_k) {
	_11512_k=_1dc538e95_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1dc53eece_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa684ab2:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa684672:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aa684298:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa683e79:;
	};
}



inline jule::F64 _1dc540b7d_Max(jule::Str _13312_k) {
	_13312_k=_1dc538e95_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1dc5402dc_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1dc5405a6_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aa686dc2:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aa686982:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aa6865a8:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa686267:;
	};
}



inline jule::Bool _1dc541134_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1dc541442_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1dc54170b_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1dc541a4c_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1dc541cd3_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1dc54209c_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1dc542366_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1dc542740_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1dc542a3c_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aa68a5bd:;
			{
				return _1dc543ba3_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aa68a634:;
			{
				return _1dc543eb1_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aa68a69a:;
			{
				return _1dc543eb1_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aa68a722:;
			{
				return _1dc541134_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aaed4a0a:;
			{
				return _1dc541442_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aaed4a82:;
			{
				return _1dc54170b_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aaed4b09:;
			{
				return _1dc541a4c_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aaed4b81:;
			{
				return _1dc541cd3_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aaed4c91:;
			{
				return _1dc54209c_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aaed4d07:;
			{
				return _1dc542366_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aaed4d6d:;
			{
				return _1dc542740_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aaed4dd4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa68a36a:;
			{
				return false;;
			}
		}
		_match_end_1aa688d6e:;
	};
}



inline jule::Bool _1dc543ba3_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1dc543eb1_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1dc54427a_IsInt(jule::Str _4610_k) {
	return (_1dc543ba3_IsSigInt(_4610_k) || _1dc543eb1_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1dc5445bb_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1dc544852_IsNum(jule::Str _5610_k) {
	return (_1dc54427a_IsInt(_5610_k) || _1dc5445bb_IsFloat(_5610_k));;
}



inline jule::Bool _1dc544b1b_IsSigNum(jule::Str _6113_k) {
	return (_1dc543ba3_IsSigInt(_6113_k) || _1dc5445bb_IsFloat(_6113_k));;
}



inline void _1dc54e395_lshiftUnsig(_1dc54537a_Const* _59021_c, _1dc54537a_Const* _59032_x) {
	jule::U64 _5912_l = _1dc547cd9_AsU64(_59021_c);;
	jule::U64 _5922_r = _1dc547cd9_AsU64(_59032_x);;
	_1dc5485d1_SetU64(_59021_c, (_5912_l << _5922_r));
}



inline void _1dc54e6c5_rshiftUnsig(_1dc54537a_Const* _59621_c, _1dc54537a_Const* _59632_x) {
	jule::U64 _5972_l = _1dc547cd9_AsU64(_59621_c);;
	jule::U64 _5982_r = _1dc547cd9_AsU64(_59632_x);;
	_1dc5485d1_SetU64(_59621_c, (_5972_l >> _5982_r));
}



inline jule::Bool _1c486c8da_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1c34c9603_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab08c541:;
		if (it != expr_end) {
			jule::U64 *_3359_op = it;
			{
				if ((_33414_id == (*(_3359_op)))) {
					return true;;
				};
			}
			_iter_next_1ab08c541:;
			++it;
			goto _iter_begin_1ab08c541;
		}
		_iter_end_1ab08c541:;
	};
	return false;;
}



inline jule::Bool _1c486cbe8_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1c48660a9_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab08ca4c:;
		if (it != expr_end) {
			jule::U64 *_3459_op = it;
			{
				if ((_34412_id == (*(_3459_op)))) {
					return true;;
				};
			}
			_iter_next_1ab08ca4c:;
			++it;
			goto _iter_begin_1ab08ca4c;
		}
		_iter_end_1ab08ca4c:;
	};
	return false;;
}



inline jule::Bool _1c486d303_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1c486d589_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c486d589_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c486d853_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c486e238_IsFloat(jule::Str _38012_k) {
	if (_2059e414b_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _2059e9184_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _2059e9184_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1c486e502_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3932_b = _38810_k[0LL];;
	return ((_3932_b == '.') || (('0' <= _3932_b) && (_3932_b <= '9')));;
}



inline jule::Bool _1c486ea85_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c486ed4e_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c48703d2_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c34c9317_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab094e2d:;
		if (it != expr_end) {
			jule::I32 *_4209_cr = it;
			{
				if ((_41912_r == (*(_4209_cr)))) {
					return true;;
				};
			}
			_iter_next_1ab094e2d:;
			++it;
			goto _iter_begin_1ab094e2d;
		}
		_iter_end_1ab094e2d:;
	};
	return false;;
}



inline jule::Bool _1c48708cc_IsLetter(jule::I32 _42913_r) {
	return _20593b291_IsLetter(_42913_r);;
}



inline jule::Bool _1c4870d50_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c4871119_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c48713d3_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c487169c_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ab09899d:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ab098a47:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ab098abe:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab098926:;
			{
				return false;;
			}
		}
		_match_end_1ab09876c:;
	};
}



inline jule::Bool _1c4871966_IsAssign(jule::U64 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU))) || (_47313_id == static_cast<jule::U64>(65LLU)));;
}



inline jule::Bool _1c4871c30_IsPostfixOp(jule::U64 _48516_id) {
	{
		auto expr = &(_1c4866681_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab09a0cb:;
		if (it != expr_end) {
			jule::U64 *_4869_op = it;
			{
				if ((_48516_id == (*(_4869_op)))) {
					return true;;
				};
			}
			_iter_next_1ab09a0cb:;
			++it;
			goto _iter_begin_1ab09a0cb;
		}
		_iter_end_1ab09a0cb:;
	};
	return false;;
}



inline jule::Bool _1c4871ee9_IsAssignOp(jule::U64 _49515_id) {
	if (_1c4871c30_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1c486696c_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab09c5a6:;
		if (it != expr_end) {
			jule::U64 *_4999_op = it;
			{
				if ((_49515_id == (*(_4999_op)))) {
					return true;;
				};
			}
			_iter_next_1ab09c5a6:;
			++it;
			goto _iter_begin_1ab09c5a6;
		}
		_iter_end_1ab09c5a6:;
	};
	return false;;
}



inline jule::Ptr<_1c4872934_File> _1c4873d0e_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c4872934_File>(_1c4872934_File{._field_Path=_5715_path, ._field_Data=jule::Slice<jule::U8>(nullptr), ._field_Tokens=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr)});;
}



inline _205a977d7_Log _1c4875838_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1c4872934_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_205a97c49_Logf(_10043_fmt, _10056_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1c4875c01_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab0a7a12:;
		if (it != expr_end) {
			jule::I64 _1146_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1146_i] != _11035_prefix[_1146_i])) {
					return false;;
				};
			}
			_iter_next_1ab0a7a12:;
			++it;
			_1146_i++;
			goto _iter_begin_1ab0a7a12;
		}
		_iter_end_1ab0a7a12:;
	};
	return true;;
}



inline jule::Str _1c4876075_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1286_b = (*(_12215_txt))[_12232_i];;
	if ((_1286_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1286_b == '+') || (_1286_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1422_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1286_b=(*(_12215_txt))[_12232_i];
			if (((_1286_b != '_') && (!(_1c4870d50_IsDecimal(_1286_b))))) {
				goto _iter_end_1ab0a9edc;
			};
		}
	_iter_next_1ab0a9edc:;
	}
	_iter_end_1ab0a9edc:;;
	if ((_12232_i == _1422_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c487643d_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1c4876075_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c48767b2_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ab0ac71a:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1683_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1683_b == '_') || _1c4870d50_IsDecimal(_1683_b)) {
					_case_begin_1ab0ad771:;
					{
						goto _iter_next_1ab0accc0;
					}
				}
				else if (_1c4878143_isFloatFmtP(_1683_b, _16036_i)) {
					_case_begin_1ab0ad81a:;
					{
						return _1c487643d_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ab0ad6e9:;
					{
						goto _iter_end_1ab0accc0;
					}
				}
				_match_end_1ab0ad683:;
			};
		}
	_iter_next_1ab0accc0:;
	}
	_iter_end_1ab0accc0:;;
	return jule::Str();;
}



inline jule::Str _1c4876b36_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1c4876075_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c4876eaa_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1c4876075_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c487743e_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2013_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2013_b == 'e') || (_2013_b == 'E')))) {
				__jule_func_result = _1c4876075_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2013_b != '_') && (!(_1c4870d50_IsDecimal(_2013_b))))) {
				goto _iter_end_1ab0b1576;
			};
		}
	_iter_next_1ab0b1576:;
	}
	_iter_end_1ab0b1576:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c4877681_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _2176_i = 0LL;;
	_julec_label_1ab0b32c0:;
	for (; (_2176_i < (*(_21615_txt)).len()); (_2176_i)++) {
		{
			jule::U8 _2203_b = (*(_21615_txt))[_2176_i];;
			{
				
				if ((_2203_b == '.')) {
					_case_begin_1ab0b4667:;
					{
						__jule_func_result = _1c487743e_floatNum(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((_2203_b == '_')) {
					_case_begin_1ab0b4711:;
					{
						goto _iter_next_1ab0b3a62;
					}
				}
				else if (_1c4877cbe_isFloatFmtE(_2203_b, _2176_i)) {
					_case_begin_1ab0b4777:;
					{
						__jule_func_result = _1c4876075_floatFmtE(_21615_txt, _2176_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c4870d50_IsDecimal(_2203_b)))) {
					_case_begin_1ab0b47dd:;
					{
						goto _iter_end_1ab0b3a62;
					}
				}
				_match_end_1ab0b458a:;
			};
		}
	_iter_next_1ab0b3a62:;
	}
	_iter_end_1ab0b3a62:;;
	if ((_2176_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2176_i));
	return __jule_func_result;;
}



inline jule::Str _1c487794a_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c4875c01_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _2486_i = 2LL;;
	for (; (_2486_i < (*(_23915_txt)).len()); (_2486_i)++) {
		{
			if ((((*(_23915_txt))[_2486_i] != '_') && (!(_1c4871119_IsBinary((*(_23915_txt))[_2486_i]))))) {
				goto _iter_end_1ab0b7549;
			};
		}
	_iter_next_1ab0b7549:;
	}
	_iter_end_1ab0b7549:;;
	if ((_2486_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2486_i));
	return __jule_func_result;;
}



inline jule::Bool _1c4877cbe_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c4878143_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c48784b7_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ab0ba618:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2763_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2763_b == '_') || _1c4870d50_IsDecimal(_2763_b)) {
					_case_begin_1ab0bb141:;
					{
						goto _iter_next_1ab0ba5b3;
					}
				}
				else if (_1c4878143_isFloatFmtP(_2763_b, _26938_i)) {
					_case_begin_1ab0bb1da:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ab0bb0b9:;
					{
						goto _iter_end_1ab0ba5b3;
					}
				}
				_match_end_1ab0bb053:;
			};
		}
	_iter_next_1ab0ba5b3:;
	}
	_iter_end_1ab0ba5b3:;;
	return false;;
}



inline jule::Bool _1c487883b_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ab0bc450:;
			{
				goto _case_begin_1ab0bc4e9;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ab0bc4e9:;
			{
				goto _case_begin_1ab0bc571;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ab0bc571:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab0bc3b7:;
			{
				return true;;
			}
		}
		_match_end_1ab0bc2da:;
	};
}



inline jule::Bool _1c4878bb0_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ab0be210:;
			{
				goto _case_begin_1ab0be276;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ab0be276:;
			{
				goto _case_begin_1ab0be2dc;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ab0be2dc:;
			{
				goto _case_begin_1ab0be364;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ab0be364:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab0be144:;
			{
				return true;;
			}
		}
		_match_end_1ab0bdc04:;
	};
}



inline jule::Str _1c48791aa_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _3266_octalStart = 1LL;;
	jule::Bool _3286_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3266_octalStart)++;
		_3286_o=true;
	};
	jule::I64 _3376_i = _3266_octalStart;;
	for (; (_3376_i < (*(_31814_txt)).len()); (_3376_i)++) {
		{
			jule::U8 _3393_b = (*(_31814_txt))[_3376_i];;
			if ((_3393_b == '.')) {
				if (_3286_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c487743e_floatNum(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (_1c4877cbe_isFloatFmtE(_3393_b, _3376_i)) {
				__jule_func_result = _1c4876075_floatFmtE(_31814_txt, _3376_i);
				return __jule_func_result;;
			};
			if (((_3393_b != '_') && (!(_1c48713d3_IsOctal(_3393_b))))) {
				goto _iter_end_1ab0c3434;
			};
		}
	_iter_next_1ab0c3434:;
	}
	_iter_end_1ab0c3434:;;
	if ((_3376_i == _3266_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3376_i));
	return __jule_func_result;;
}



inline jule::Str _1c4879386_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3696_i = 2LL;;
	_julec_label_1ab0c7328:;
	for (; (_3696_i < (*(_36012_txt)).len()); (_3696_i)++) {
		{
			jule::U8 _3723_b = (*(_36012_txt))[_3696_i];;
			{
				
				if (_1c487883b_isFloatFmtDotp(_36012_txt, _3696_i)) {
					_case_begin_1ab0c802c:;
					{
						__jule_func_result = _1c4876eaa_floatFmtDotp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c4878bb0_isFloatFmtDotfp(_36012_txt, _3696_i)) {
					_case_begin_1ab0c80c6:;
					{
						__jule_func_result = _1c4876b36_floatFmtDotfp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c4878143_isFloatFmtP(_3723_b, _3696_i)) {
					_case_begin_1ab0c813c:;
					{
						__jule_func_result = _1c487643d_floatFmtP(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (_1c48784b7_isFloatFmtDotnp(_36012_txt, _3696_i)) {
					_case_begin_1ab0c81a3:;
					{
						__jule_func_result = _1c48767b2_floatFmtDotnp(_36012_txt, _3696_i);
						return __jule_func_result;;
					}
				}
				else if (((_3723_b != '_') && (!(_1c487169c_IsHex(_3723_b))))) {
					_case_begin_1ab0c8219:;
					{
						goto _iter_end_1ab0c748d;
					}
				}
				_match_end_1ab0c7e3e:;
			};
		}
	_iter_next_1ab0c748d:;
	}
	_iter_end_1ab0c748d:;;
	if ((_3696_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3696_i));
	return __jule_func_result;;
}



inline jule::Str _1c48796d8_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _3996_i = 2LL;;
	for (; (_3996_i < _39328_n); (_3996_i)++) {
		{
			if ((!(_1c487169c_IsHex((*(_39315_txt))[_3996_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ab0ca79e:;
	}
	_iter_end_1ab0ca79e:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c48799a2_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c48796d8_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c4879c6b_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c48796d8_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c487a035_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c48796d8_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c487a2ee_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c48713d3_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c48713d3_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c48713d3_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_205a977d7_Log> _1c48802e3_Lex(jule::Ptr<_1c4872934_File> _80612_f, jule::I64 _80622_mode) {
	if ((_80612_f == nullptr)) {
		return nullptr;;
	};
	_1c487aa6e_lex _8116_lex = _1c487aa6e_lex{._field_mode=_80622_mode, ._field_tokens=jule::Slice<jule::Ptr<_1c486c19d_Token>>(nullptr), ._field_file=_80612_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_205a977d7_Log>(nullptr)};;
	_1c487d8b8_newLine(&_8116_lex);
	_1c487b696_lex(&_8116_lex);
	if ((_8116_lex._field_errors.len() > 0LL)) {
		return _8116_lex._field_errors;;
	};
	(*(_80612_f))._field_Tokens=_8116_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1c49493ac_FindModuleFile(jule::Slice<jule::Ptr<_239654b57_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab162a01:;
		if (it != expr_end) {
			jule::Ptr<_239654b57_DirEntry> *_149_d = it;
			{
				if (((!(_23965862d_IsDir((*((*(_149_d))))._field_Stat.ptr()))) && (*((*(_149_d))))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1ab162a01:;
			++it;
			goto _iter_begin_1ab162a01;
		}
		_iter_end_1ab162a01:;
	};
	return false;;
}



inline jule::Str _1c4949665_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_239654b57_DirEntry>> _277_dirents = ({
				auto except = static__205a00a09_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ab16343b;
				} jule::Slice<jule::Ptr<_239654b57_DirEntry>>(nullptr);});
			});;
			jule::Bool _313_exist = _1c49493ac_FindModuleFile(&(_277_dirents));;
			if (_313_exist) {
				return _2527_path;;
			};
			jule::I64 _363_n = _2527_path.len();;
			_2527_path=_205a000d0_Dir(_2527_path);
			if ((_2527_path.len() == _363_n)) {
				goto _iter_end_1ab16343b;
			};
		}
	_iter_next_1ab16343b:;
	}
	_iter_end_1ab16343b:;;
	return jule::Str();;
}



inline jule::Slice<_205a977d7_Log> _1c494992e_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _482_bytes = ({
		auto except = static__239656ac1_Read(_2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4721_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_205a977d7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _205a977d7_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _542_s = _2059eae66_Trim(_238b5142e_BytesStr(_482_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_542_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_205a977d7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _205a977d7_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1c494a27b_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _2059a269d_IsUpper(_142_r);;
}



inline jule::Bool _1c4993071_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1c49ad19b_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I64 _247_i = 0LL;;
		_216_r=_1c49add06_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1c49ad3aa_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1c49ad6eb_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab170349:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1ab170349;
				};
			}
			_iter_next_1ab170349:;
			++it;
			goto _iter_begin_1ab170349;
		}
		_iter_end_1ab170349:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I64 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1c49ae19c_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I64 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d801935_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_21d8029d0_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1ab17233a:;
	}
	_iter_end_1ab17233a:;;
	return _238b516e8_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1c49ad982_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1ab174837:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1ab175030:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1ab175096:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1ab17510c:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1ab175173:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1ab1751ea:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1ab175272:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1ab1752e9:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1ab175371:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1ab1753e8:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1ab174da9:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1c49add06_runeFromEsqSeq(jule::Str _11319_s, jule::I64* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1c49ad982_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1ab179ee1:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1dc525008_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ab179d04:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1dc525008_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ab17971b:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1dc525008_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1ab17851c:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1dc525008_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1ab178b27:;
	};
}



inline void _1c49ae19c_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I64* _14545_i) {
	jule::I32 _1462_r = _1c49add06_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_21d8029d0_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I64 _21ddcab8a_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _133_r;
			jule::I64 _136_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_133_r = __jule_assign_result.__jule_result_arg0;
				_136_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_133_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_136_size;
		}
	_iter_next_1ab1a5e95:;
	}
	_iter_end_1ab1a5e95:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _21ddcaeba_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _282_start = (*(_2724_i));;
	jule::I64 _296_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _313_r;
			jule::I64 _316_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _21d8015e4_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_313_r = __jule_assign_result.__jule_result_arg0;
				_316_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_316_size;
			{
				auto &_match_expr{ _313_r };
				
				if (_match_expr == '{') {
					_case_begin_1ab1a8904:;
					{
						(_296_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1ab1a8b68:;
					{
						(_296_braces)--;
						if ((_296_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_282_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1ab1a89c0:;
			};
		}
	_iter_next_1ab1a7a02:;
	}
	_iter_end_1ab1a7a02:;;
	return nullptr;;
}



inline void _21ddcb2a6_FmtByDefault(_238b51e24_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_238b528d6_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1ab1aa5b5:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc520025_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type136)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ab1a7e20:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc520025_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1ab1aa1ca:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc536a64_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1ab1aa241:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc536a64_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ab1aa2a7:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc536a64_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ab1aa31d:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc536a64_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1ab1aa8d4:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc53669b_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1ab1aa94a:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc53669b_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1ab1aa9b1:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc53669b_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type140)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ab1aaa27:;
			{
				_238b528d6_WriteStr(_4722_buf, _1dc53669b_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ab1aaa8d:;
			{
				_238b528d6_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ab1aab04:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_238b528d6_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_238b528d6_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1ab1a9b25:;
			{
				_238b528d6_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1ab1a99d2:;
	};
}



inline void _21ddcb6c4_applyFmtByDefault(_238b51e24_StrBuilder* _8627_buf, jule::I64* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _872_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_21ddcb2a6_FmtByDefault(_8627_buf, &(_872_arg));
}



inline void _21ddcbae2_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _238b51e24_StrBuilder* _9436_buf, jule::I64* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_21ddcb6c4_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_238b528d6_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_238b5262d_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _21ddcbe66_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1166_fmtBytes = _238b51198_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1206_i = _21ddcab8a_findFormatPrefix(&(_1166_fmtBytes), 0LL);;
	if ((_1206_i == -1LL)) {
		return _1166_fmtBytes;;
	};
	jule::I64 _1246_j = 0LL;;
	jule::I64 _1256_last = 0LL;;
	_238b51e24_StrBuilder _1266_buf = static__238b52375_New(_11511_fmt.len());;
	for (; (_1206_i != -1LL); _1206_i=_21ddcab8a_findFormatPrefix(&(_1166_fmtBytes), _1206_i)) {
		{
			_238b5262d_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last, _1206_i));
			jule::Slice<jule::U8> _1297_format = _21ddcaeba_getFormatRange(&(_1206_i), &(_1166_fmtBytes));;
			if ((_1297_format == nullptr)) {
				goto _iter_next_1ab1b7d20;
			};
			_21ddcbae2_applyFmt(&(_1297_format), &(_1266_buf), &(_1246_j), _11521_args);
			if ((_1246_j >= _11521_args.len())) {
				_238b5262d_Write(&_1266_buf, _1166_fmtBytes.slice(_1206_i));
				_1256_last=_1166_fmtBytes.len();
				goto _iter_end_1ab1b7d20;
			};
			_1256_last=_1206_i;
		}
	_iter_next_1ab1b7d20:;
	}
	_iter_end_1ab1b7d20:;;
	if ((_1256_last < _1166_fmtBytes.len())) {
		_238b5262d_Write(&_1266_buf, _1166_fmtBytes.slice(_1256_last));
	};
	return _238b53b7e_Buf(&_1266_buf);;
}



inline jule::Str _21ddce034_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _238b516e8_StrFromBytes(_21ddcbe66_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1c48b8738_Fn> _1dc55071a_runtimeFindFn(jule::Ptr<_1c492cd1e_ImportInfo>* _923_runtime, jule::Str _945_ident) {
	;
	jule::Ptr<_1c48b8738_Fn> _116_f = _1c492e42a_FindFn((*(_923_runtime)).ptr(), _945_ident, false);;
	if ((_116_f == nullptr)) {
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: std/jule/sema/runtime.jule:13:3"));;
	};
	return _116_f;;
}



inline jule::Bool _1c48bd9e6_parameterUsesGenerics(jule::Ptr<_1c48ba691_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _38546_generics) {
	if (_1c48b73b3_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1c4a2a966_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1c4a173d1_TypeSymbol> _1c48c1224_buildType(jule::Ptr<_1c4882779_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=_9418_t, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)});;
}



inline jule::Ptr<_1c49d019b_Value> _1c48c1532_buildExpr(jule::Ptr<_1c4886aad_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=_10318_expr, ._field_Data=jule::Ptr<_1c49ce024_Data>(nullptr)});;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c48c17eb_buildTypeAlias(jule::Ptr<_1c4899296_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1c48c1224_buildType((*_11223_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1c48a0753_Field> _1c48c1b3c_buildField(jule::Ptr<_1c489cb4b_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1c48a0753_Field>(_1c48a0753_Field{._field_Owner=jule::Ptr<_1c48a3679_Struct>(nullptr), ._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1c48c1224_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1c48a0753_Field>> _1c48c1dc3_buildFields(jule::Slice<jule::Ptr<_1c489cb4b_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1c48a0753_Field>> _1356_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a0753_Field>>::alloc(0LL, (*(_13421_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48a0753_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa899ee7:;
		if (it != expr_end) {
			jule::Ptr<_1c489cb4b_FieldDecl> _13614_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48a0753_Field>> &__jule_push_dest = _1356_fields; __jule_push_dest.push(_1c48c1b3c_buildField(_13614_decl)); };
			}
			_iter_next_1aa899ee7:;
			++it;
			goto _iter_begin_1aa899ee7;
		}
		_iter_end_1aa899ee7:;
	};
	return _1356_fields;;
}



inline jule::Ptr<_1c48a3679_Struct> _1c48c218c_buildStruct(jule::Ptr<_1c489d542_StructDecl> _14220_decl) {
	return jule::new_ptr<_1c48a3679_Struct>(_1c48a3679_Struct{._field_sema=jule::Ptr<_1c494d290_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr), ._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1c48c1dc3_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1c48b8738_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c48a6407_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1c48b6c64_Param> _1c48c2456_buildParam(jule::Ptr<_1c4892ed7_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1c48b6c64_Param>(_1c48b6c64_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1c48c1224_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1c48b6c64_Param>> _1c48c2830_buildParams(jule::Slice<jule::Ptr<_1c4892ed7_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1c48b6c64_Param>> _1666_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48b6c64_Param>>::alloc(0LL, (*(_16521_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48b6c64_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa89da12:;
		if (it != expr_end) {
			jule::Ptr<_1c4892ed7_ParamDecl> _16714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48b6c64_Param>> &__jule_push_dest = _1666_params; __jule_push_dest.push(_1c48c2456_buildParam(_16714_decl)); };
			}
			_iter_next_1aa89da12:;
			++it;
			goto _iter_begin_1aa89da12;
		}
		_iter_end_1aa89da12:;
	};
	return _1666_params;;
}



inline jule::Ptr<_1c48b6549_RetType> _1c48c2a72_buildRetType(jule::Ptr<_1c488566c_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1c48b6549_RetType>(_1c48b6549_RetType{._field_Kind=_1c48c1224_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1c48b8738_Fn> _1c48c2d3b_buildFunc(jule::Ptr<_1c4894439_FnDecl> _18318_decl) {
	return jule::new_ptr<_1c48b8738_Fn>(_1c48b8738_Fn{._field_sema=jule::Ptr<_1c494d290_sema>(nullptr), ._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1c48c2a72_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1c48c2830_buildParams(&((*_18318_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1c48a3679_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c48bb719_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1c48b8738_Fn>> _1c48c3105_buildMethods(jule::Slice<jule::Ptr<_1c4894439_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1c48b8738_Fn>> _2026_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48b8738_Fn>>::alloc(0LL, (*(_20122_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48b8738_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8a045e:;
		if (it != expr_end) {
			jule::Ptr<_1c4894439_FnDecl> _20314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48b8738_Fn>> &__jule_push_dest = _2026_methods; __jule_push_dest.push(_1c48c2d3b_buildFunc(_20314_decl)); };
			}
			_iter_next_1aa8a045e:;
			++it;
			goto _iter_begin_1aa8a045e;
		}
		_iter_end_1aa8a045e:;
	};
	return _2026_methods;;
}



inline jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>> _1c48c33be_buildTraitInherits(jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>> _2106_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a173d1_TypeSymbol>(nullptr); __jule_collection; });;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8a4c05:;
		if (it != expr_end) {
			jule::Ptr<_1c4882779_TypeDecl> _21114_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1c4a173d1_TypeSymbol>> &__jule_push_dest = _2106_symbols; __jule_push_dest.push(_1c48c1224_buildType(_21114_it)); };
			}
			_iter_next_1aa8a4c05:;
			++it;
			goto _iter_begin_1aa8a4c05;
		}
		_iter_end_1aa8a4c05:;
	};
	return _2106_symbols;;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c48c3688_buildTrait(jule::Ptr<_1c489dc7e_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1c48cc1b9_Trait>(_1c48cc1b9_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1c48c33be_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1c48c3105_buildMethods(&((*_21719_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr)});;
}



inline jule::Ptr<_1c48cdd58_EnumItem> _1c48c3952_buildEnumItem(jule::Ptr<_1c489ad36_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1c48cdd58_EnumItem>(_1c48cdd58_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1c48c1532_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _1c48c3c1b_buildEnumItems(jule::Slice<jule::Ptr<_1c489ad36_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> _2366_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>>::alloc(0LL, (*(_23524_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48cdd58_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8a70d1:;
		if (it != expr_end) {
			jule::Ptr<_1c489ad36_EnumItemDecl> _23714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48cdd58_EnumItem>> &__jule_push_dest = _2366_items; __jule_push_dest.push(_1c48c3952_buildEnumItem(_23714_decl)); };
			}
			_iter_next_1aa8a70d1:;
			++it;
			goto _iter_begin_1aa8a70d1;
		}
		_iter_end_1aa8a70d1:;
	};
	return _2366_items;;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c48c4216_buildEnum(jule::Ptr<_1c489b8e7_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1c48ce8c5_Enum>(_1c48ce8c5_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1c48c1224_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1c48c3c1b_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c48d0a08_TypeEnumItem> _1c48c43e2_buildTypeEnumItem(jule::Ptr<_1c489c222_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1c48d0a08_TypeEnumItem>(_1c48d0a08_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1c48c1224_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _1c48c4689_buildTypeEnumItems(jule::Slice<jule::Ptr<_1c489c222_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> _2626_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c48d0a08_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aa8aa37b:;
		if (it != expr_end) {
			jule::Ptr<_1c489c222_TypeEnumItemDecl> _26314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c48d0a08_TypeEnumItem>> &__jule_push_dest = _2626_items; __jule_push_dest.push(_1c48c43e2_buildTypeEnumItem(_26314_decl)); };
			}
			_iter_next_1aa8aa37b:;
			++it;
			goto _iter_begin_1aa8aa37b;
		}
		_iter_end_1aa8aa37b:;
	};
	return _2626_items;;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c48c4953_buildTypeEnum(jule::Ptr<_1c489c882_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1c48d10d0_TypeEnum>(_1c48d10d0_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1c48c4689_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1c49715b0_Var> _1c48c4c1c_buildVar(jule::Ptr<_1c48955e4_VarDecl> _27817_decl) {
	return jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1c48c1224_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1c48c1532_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1c48bebc3_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1c49715b0_Var>> _1c48c4ed6_buildVars(jule::Slice<jule::Ptr<_1c48955e4_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1c49715b0_Var>> _2966_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49715b0_Var>>::alloc(0LL, _29518_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49715b0_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aadc9779:;
		if (it != expr_end) {
			jule::Ptr<_1c48955e4_VarDecl> _29714_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = _2966_vars; __jule_push_dest.push(_1c48c4c1c_buildVar(_29714_decl)); };
			}
			_iter_next_1aadc9779:;
			++it;
			goto _iter_begin_1aadc9779;
		}
		_iter_end_1aadc9779:;
	};
	return _2966_vars;;
}



inline jule::Ptr<_1c4905830_Impl> _1c48c52a0_buildImpl(jule::Ptr<_1c489e3de_Impl> _30318_decl) {
	return jule::new_ptr<_1c4905830_Impl>(_1c4905830_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1c48c3105_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1c48c4ed6_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1c48cb6b3_isImplicitImport(jule::Ptr<_1c492cd1e_ImportInfo> _80421_imp) {
	return ((*(_80421_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1c49ce024_Data> _1c4900d14_buildAsComptimeMethodData(jule::Ptr<_1c48bb719_FnIns>* _142135_f) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c492cd1e_ImportInfo> _1c4901122_findComptimePackage(jule::Ptr<_1c494d290_sema>* _142929_s) {
	return _1c494d768_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1c492cd1e_ImportInfo>>((void*)__jule_anon1aae40c63, nullptr, nullptr));;
}



inline jule::Ptr<_1c49ce024_Data> _1c4901496_buildComptimeTypeInfoData(jule::Ptr<_1c494d290_sema>* _143535_s, jule::Ptr<_1c4a1020e_TypeKind>* _143550_t) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c494cb0d_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _1c49017d7_buildComptimeValue(jule::Ptr<_1c49ce024_Data>* _144328_d) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48ea10a_comptimeValue>(_1c48ea10a_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Str _1c49047c9_toStrConstraints(jule::Ptr<_1c4a0d828_InsGeneric> _14321_g) {
	_238b51e24_StrBuilder _1446_sb = static__238b52375_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4607d2:;
		if (it != expr_end) {
			jule::I64 _1456_i = it - expr->begin();
			jule::Ptr<_1c4a1020e_TypeKind> *_1459_c = it;
			{
				_238b528d6_WriteStr(&_1446_sb, _1c4a1060a_Str((*(_1459_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					_238b528d6_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1ab4607d2:;
			++it;
			_1456_i++;
			goto _iter_begin_1ab4607d2;
		}
		_iter_end_1ab4607d2:;
	};
	return _238b531cd_Str(&_1446_sb);;
}



inline jule::Bool _1c4904b92_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1c4a1020e_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1ab46265d:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _1573_prim = _1c4a12893_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1dc544b1b_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1ab4626c4:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _1633_prim = _1c4a12893_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1dc543eb1_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1ab46273a:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _1693_prim = _1c4a12893_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1dc5445bb_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1ab4627b2:;
			{
				jule::Ptr<_1c4a17cd8_Prim> _1753_prim = _1c4a12893_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1dc544852_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1ab46297c:;
			{
				return _1c4a11ac3_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1ab4629e3:;
			{
				return (!(_1c4a11ac3_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1ab462a59:;
			{
				return _1c4a1183c_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1ab462ac0:;
			{
				return _1c4a11d59_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1ab461a8b:;
			{
				return false;;
			}
		}
		_match_end_1ab46251a:;
	};
}



inline jule::Bool _1c4904e5b_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1c4902b90_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab4687da:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1ab4687da:;
			++it;
			goto _iter_begin_1ab4687da;
		}
		_iter_end_1ab4687da:;
	};
	return false;;
}



inline jule::Ptr<_1c4913244_scopeChecker> _1c4907a63_newScopeCheckerBase(jule::Ptr<_1c494d290_sema>* _5829_s, jule::Ptr<_1c48bb719_FnIns> _5843_owner) {
	return jule::new_ptr<_1c4913244_scopeChecker>(_1c4913244_scopeChecker{._field_calledFrom=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_parent=jule::Ptr<_1c4913244_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1c49c8bab_SymbolTable>(_1c49c8bab_SymbolTable{._field_File=jule::Ptr<_1c4872934_File>(nullptr), ._field_Passes=jule::Slice<_1c48c0db1_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1c48a3679_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1c48b8738_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1c48cc1b9_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1c48ce8c5_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1c48d10d0_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1c4905830_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_tree=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1c49715b0_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1c4911bc1_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1c4912254_scopeGoto>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1c4913244_scopeChecker> _1c4907e2b_newScopeChecker(jule::Ptr<_1c494d290_sema>* _6625_s, jule::Ptr<_1c48bb719_FnIns> _6639_owner) {
	jule::Ptr<_1c4913244_scopeChecker> _676_base = _1c4907a63_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_676_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1c4911bc1_scopeLabel>>>(nullptr);
	(*_676_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1c4912254_scopeGoto>>>(nullptr);
	return _676_base;;
}



inline jule::Ptr<_1c4911bc1_scopeLabel> _1c49082a0_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1c4913244_scopeChecker> _7637_scope) {
	jule::Ptr<_1c4911bc1_scopeLabel> _776_label = _1c491737a_findLabelScope(_7637_scope, _7621_ident);;
	while ((_776_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_776_label=_1c491737a_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1ab482507:;
	}
	_iter_end_1ab482507:;;
	return _776_label;;
}



inline jule::Bool _1c4908668_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1c490ac86_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ab484394:;
			{
				jule::Ptr<_1c48ac83c_FnCallExprModel> _933_fcem = _9021_Model.unsafe_cast_ptr<_1c48ac83c_FnCallExprModel>();;
				if (((*(_933_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab482c11:;
			{
				jule::Ptr<_1c49ce024_Data> _983_d = _9021_Model.unsafe_cast_ptr<_1c49ce024_Data>();;
				return _1c4908668_modelIsGotoScope((*(_983_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1ab48433e:;
	};
	return false;;
}



inline jule::Bool _1c49089dc_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1c490ac86_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab4860aa:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1c490ac86_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab48693a:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1c490bbbb_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ab4869a1:;
			{
				jule::Ptr<_1c490cabd_RangeIter> _1113_it = (*(_10421_stmt)).cast_ptr<_1c490cabd_RangeIter>(&__jule_any_type39);;
				return (((*(_1113_it))._field_Scope == (*(_10434_sc))) || _1c4908668_modelIsGotoScope((*((*_1113_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab48652d:;
			{
				jule::Ptr<_1c490c172_WhileIter> _1143_it = (*(_10421_stmt)).cast_ptr<_1c490c172_WhileIter>(&__jule_any_type37);;
				return ((((*(_1143_it))._field_Scope == (*(_10434_sc))) || _1c4908668_modelIsGotoScope((*_1143_it.alloc)._field_Expr, _10434_sc)) || _1c4908668_modelIsGotoScope((*_1143_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ab486594:;
			{
				jule::Ptr<_1c490ee99_Match> _1193_m = (*(_10421_stmt)).cast_ptr<_1c490ee99_Match>(&__jule_any_type47);;
				{
					auto expr = &((*(_1193_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab48ad90:;
					if (it != expr_end) {
						jule::Ptr<_1c49109c2_Case> *_12010_c = it;
						{
							if (((*((*(_12010_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12010_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab48bd08:;
								if (it != expr_end) {
									jule::Ptr<_1c49ce024_Data> *_12411_expr = it;
									{
										if (_1c4908668_modelIsGotoScope((*((*(_12411_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ab48bd08:;
									++it;
									goto _iter_begin_1ab48bd08;
								}
								_iter_end_1ab48bd08:;
							};
						}
						_iter_next_1ab48ad90:;
						++it;
						goto _iter_begin_1ab48ad90;
					}
					_iter_end_1ab48ad90:;
				};
				return (((*_1193_m.alloc)._field_Default != nullptr) && ((*(*(_1193_m))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ab48660a:;
			{
				jule::Ptr<_1c490b8be_Conditional> _1323_c = (*(_10421_stmt)).cast_ptr<_1c490b8be_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1323_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab48d8a9:;
					if (it != expr_end) {
						jule::Ptr<_1c490b1a4_If> *_13310_elif = it;
						{
							if ((((*((*(_13310_elif))))._field_Scope == (*(_10434_sc))) || _1c4908668_modelIsGotoScope((*(*(_13310_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ab48d8a9:;
						++it;
						goto _iter_begin_1ab48d8a9;
					}
					_iter_end_1ab48d8a9:;
				};
				return (((*_1323_c.alloc)._field_Default != nullptr) && ((*(*(_1323_c))._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab486671:;
			{
				jule::Ptr<_1c49ce024_Data> _1403_d = (*(_10421_stmt)).cast_ptr<_1c49ce024_Data>(&__jule_any_type23);;
				return _1c4908668_modelIsGotoScope((*(_1403_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ab484927:;
			{
				return false;;
			}
		}
		_match_end_1ab4848c2:;
	};
}



inline jule::I64 _1c4908d61_countMatchType(jule::Ptr<_1c490ee99_Match>* _14720_m, jule::Ptr<_1c4a1020e_TypeKind>* _14732_t) {
	jule::I64 _1486_n = 0LL;;
	jule::Str _1492_kind = _1c4a1060a_Str((*(_14732_t)).ptr());;
	_julec_label_1ab4917e1:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab491c20:;
		if (it != expr_end) {
			jule::Ptr<_1c49109c2_Case> *_1519_c = it;
			{
				if (((*(_1519_c)) == nullptr)) {
					goto _iter_next_1ab491c20;
				};
				{
					auto expr = &((*((*(_1519_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab49298a:;
					if (it != expr_end) {
						jule::Ptr<_1c49ce024_Data> *_15610_expr = it;
						{
							if (((*(_15610_expr)) == nullptr)) {
								goto _iter_end_1ab491c20;
							};
							if ((_1492_kind == _1c4a1060a_Str((*((*(_15610_expr))))._field_Model.cast_ptr<_1c4a1020e_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1486_n)++;
							};
						}
						_iter_next_1ab49298a:;
						++it;
						goto _iter_begin_1ab49298a;
					}
					_iter_end_1ab49298a:;
				};
			}
			_iter_next_1ab491c20:;
			++it;
			goto _iter_begin_1ab491c20;
		}
		_iter_end_1ab491c20:;
	};
	return _1486_n;;
}



inline jule::Slice<jule::Ptr<_1c49ce024_Data>> _1c490912a_getDatasFromTupleData(jule::Ptr<_1c49ce024_Data>* _17131_d) {
	if ((_1c4a146b9_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1ab4965e8:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1c48b1027_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1ab4944d6:;
				{
					jule::Ptr<_1c4a1cdcb_Tuple> _1778_t = _1c4a146b9_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1c49ce024_Data>> _1788_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(0LL, (*(_1778_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49ce024_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_1778_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab495cbd:;
						if (it != expr_end) {
							jule::Ptr<_1c4a1020e_TypeKind> _17916_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1c49ce024_Data>> &__jule_push_dest = _1788_r; __jule_push_dest.push(jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_17916_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})); };
							}
							_iter_next_1ab495cbd:;
							++it;
							goto _iter_begin_1ab495cbd;
						}
						_iter_end_1ab495cbd:;
					};
					return _1788_r;;
				}
			}
			_match_end_1ab494481:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49ce024_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_17131_d)); __jule_collection; });;
	};
}



inline jule::Bool _1c4909966_checkMut(jule::Ptr<_1c494d290_sema>* _20618_s, jule::Ptr<_1c49ce024_Data>* _20629_left, jule::Ptr<_1c49ce024_Data> _20646_right, jule::Ptr<_1c486c19d_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1ab49a069:;
			{
				_1c4950e0d_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1c4a11ac3_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1ab49a465:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U64>(71LLU)) && (_1c4a13e16_Struct((*(_20646_right))._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1c4950e0d_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_20646_right))._field_Kind), &__jule_any_type4); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab49a003:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab499e59:;
	};
}



inline jule::Bool _1c4909e50_checkAssign(jule::Ptr<_1c494d290_sema>* _22521_s, jule::Ptr<_1c49ce024_Data>* _22536_left, jule::Ptr<_1c49ce024_Data> _22553_right, jule::Ptr<_1c486c19d_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1c48bb719_FnIns> _2262_f = _1c4a13b80_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2262_f != nullptr) && ((*_2262_f.alloc)._field_Decl != nullptr)) && (*(*(_2262_f))._field_Decl.alloc)._field_Global)) {
		_1c4950e0d_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1c49ce95e_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ab4a0800:;
			{
				_1c4950e0d_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1c4951271_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1ab4a0899:;
			{
				_1c4950e0d_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1c4909966_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ab4a0921:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ab4a0789:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab4a0646:;
	};
}



inline jule::Bool _1c490a219_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ab4a09a9:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1c4891227_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ab4a2a88:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab4a2945:;
			{
				return false;;
			}
		}
		_match_end_1ab4a28e0:;
	};
}



inline jule::Bool _1c490a4d3_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1ab4a324d:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab4a3bee:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1c49ce024_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1ab4a4617:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ab4a4e42:;
						{
							return false;;
						}
					}
					_match_end_1ab4a4ddc:;
				};
			}
		}
		else {
			_case_begin_1ab4a3935:;
			{
				return false;;
			}
		}
		_match_end_1ab4a32c5:;
	};
}



inline jule::Bool _1c490a79c_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab4a53b5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ab4a44d5:;
			{
				return false;;
			}
		}
		_match_end_1ab4a4480:;
	};
}



inline jule::U64 _1c4925652_removeEqFromOp(jule::U64 _222519_op) {
	{
		auto &_match_expr{ _222519_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab4a6174:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ab4a61da:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ab4a5d99:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ab4a5e10:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ab4a62c8:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ab4a633e:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ab4a63a5:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ab4a642c:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ab4a64a4:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ab4a6581:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1ab4a57b1:;
			{
				return _222519_op;;
			}
		}
		_match_end_1ab4a5cbc:;
	};
}



inline void _1c4925883_makeComptimeRange(jule::Ptr<_1c49ce024_Data>* _225427_d) {
	{
		
		if ((_1c4a14bd6_comptimeStructFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4a697c:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a14bd6_comptimeStructFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else if ((_1c4a15203_comptimeEnumFields((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4a9ee1:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a15203_comptimeEnumFields((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else if ((_1c4a15ec3_comptimeTypeInfos((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4aa057:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a15ec3_comptimeTypeInfos((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else if ((_1c4a15720_comptimeParams((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4a69e3:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a15720_comptimeParams((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else if ((_1c4a164e0_comptimeStatics((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4a6a59:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a164e0_comptimeStatics((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else if ((_1c4a17029_comptimeFiles((*((*(_225427_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab4a6ac0:;
			{
				(*((*(_225427_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48d42c0_comptimeRange>(_1c48d42c0_comptimeRange{._field_kind=jule::Trait(_1c4a17029_comptimeFiles((*((*(_225427_d))))._field_Kind), (jule::Trait::Type*)&_1c48d40a0_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1ab4a6916:;
			{
				(*((*(_225427_d))))._field_Decl=true;
			}
		}
		_match_end_1ab4a9bb1:;
	};
}



inline jule::Bool _1c4925d7d_canComptimeMatch(jule::Ptr<_1c49ce024_Data>* _227526_d) {
	if ((!(_1c49c7ca9_isGoodValueToInfer(_227526_d)))) {
		return false;;
	};
	return (_1c49ce95e_IsConst((*(_227526_d)).ptr()) || (_1c4a16259_comptimeTypeInfo((*((*(_227526_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1c49715b0_Var> _1c492a305_findVarInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6912c6:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _4714_f = *it;
			{
				jule::Ptr<_1c49715b0_Var> _487_v = _1c49c95c4_FindVar(_4714_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_487_v != nullptr)) {
					return _487_v;;
				};
			}
			_iter_next_1ab6912c6:;
			++it;
			goto _iter_begin_1ab6912c6;
		}
		_iter_end_1ab6912c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _1c492a778_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69285a:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _5914_f = *it;
			{
				jule::Ptr<_1c4a0e41c_TypeAlias> _607_ta = _1c49c99c0_FindTypeAlias(_5914_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_607_ta != nullptr)) {
					return _607_ta;;
				};
			}
			_iter_next_1ab69285a:;
			++it;
			goto _iter_begin_1ab69285a;
		}
		_iter_end_1ab69285a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48a3679_Struct> _1c492aba7_findStructInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab693d67:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _7114_f = *it;
			{
				jule::Ptr<_1c48a3679_Struct> _727_s = _1c49c9dbb_FindStruct(_7114_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_727_s != nullptr)) {
					return _727_s;;
				};
			}
			_iter_next_1ab693d67:;
			++it;
			goto _iter_begin_1ab693d67;
		}
		_iter_end_1ab693d67:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48b8738_Fn> _1c492b15d_findFnInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab695374:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _8314_file = *it;
			{
				jule::Ptr<_1c48b8738_Fn> _847_f = _1c49ca2b7_FindFn(_8314_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_847_f != nullptr)) {
					return _847_f;;
				};
			}
			_iter_next_1ab695374:;
			++it;
			goto _iter_begin_1ab695374;
		}
		_iter_end_1ab695374:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48cc1b9_Trait> _1c492b49e_findTraitInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab696331:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _9514_f = *it;
			{
				jule::Ptr<_1c48cc1b9_Trait> _967_t = _1c49ca608_FindTrait(_9514_f.ptr(), (*(_9452_ident)));;
				if ((_967_t != nullptr)) {
					return _967_t;;
				};
			}
			_iter_next_1ab696331:;
			++it;
			goto _iter_begin_1ab696331;
		}
		_iter_end_1ab696331:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48ce8c5_Enum> _1c492b823_findEnumInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab697b4b:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _10714_f = *it;
			{
				jule::Ptr<_1c48ce8c5_Enum> _1087_e = _1c49ca949_FindEnum(_10714_f.ptr(), (*(_10651_ident)));;
				if ((_1087_e != nullptr)) {
					return _1087_e;;
				};
			}
			_iter_next_1ab697b4b:;
			++it;
			goto _iter_begin_1ab697b4b;
		}
		_iter_end_1ab697b4b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1c48d10d0_TypeEnum> _1c492bb97_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab698e7c:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _11914_f = *it;
			{
				jule::Ptr<_1c48d10d0_TypeEnum> _1207_e = _1c49cac8a_FindTypeEnum(_11914_f.ptr(), (*(_11855_ident)));;
				if ((_1207_e != nullptr)) {
					return _1207_e;;
				};
			}
			_iter_next_1ab698e7c:;
			++it;
			goto _iter_begin_1ab698e7c;
		}
		_iter_end_1ab698e7c:;
	};
	return nullptr;;
}



inline jule::Any _1c492c1d6_defByIdentPackage(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab69a324:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _13014_file = *it;
			{
				jule::Any _1317_def = _1c49cbc58_defByIdent(_13014_file.ptr(), _12951_ident, _12963_binded);;
				if ((_1317_def != nullptr)) {
					return _1317_def;;
				};
			}
			_iter_next_1ab69a324:;
			++it;
			goto _iter_begin_1ab69a324;
		}
		_iter_end_1ab69a324:;
	};
	return nullptr;;
}



inline jule::Bool _1c4933220_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _2059e414b_HasPrefix((*(_35518_f)), _2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _205b5c072_PathStdlib; (*it++) = _35526_p; __jule_collection; })));;
}



inline jule::Bool _1c494a853_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab6aaea0:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab6ab016:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _187_model = (*(_1328_m)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_187_model))._field_Field != nullptr) && _1c494a853_isValidModelForRef(&((*((*_187_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab6ab07c:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _217_unary = (*(_1328_m)).cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_217_unary))._field_Op))._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1c4a12db0_Ptr((*((*_217_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1c4a12b29_Sptr((*((*(_217_unary))._field_Expr))._field_Kind) == nullptr)) {
					return false;;
				};
				return _1c494a853_isValidModelForRef(&((*(*(_217_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ab6ab0e3:;
			{
				jule::Ptr<_1c48ad1bc_IndexingExprModel> _357_indexing = (*(_1328_m)).cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45);;
				return _1c494a853_isValidModelForRef(&((*((*(_357_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1ab6aa6ca:;
			{
				return false;;
			}
		}
		_match_end_1ab6aa675:;
	};
}



inline _205a977d7_Log _1c494ad09_compilerErr(jule::Ptr<_1c486c19d_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_205a977d7_Log _436_log = _205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_205a97c49_Logf(_4244_fmt, _4257_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4232_line) {
		_436_log._field_Line=_1c4873979_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _436_log;;
}



inline jule::Bool _1c494b17d_impIsLookupable(jule::Ptr<_1c492cd1e_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1c49306d4_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1c494b4ad_appendRetVars(jule::Slice<jule::Ptr<_1c49715b0_Var>>* _6823_dest, jule::Ptr<_1c48bb719_FnIns>* _6842_f) {
	if ((_1c48b8bde_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _736_types = _1c48bc94b_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6b6c36:;
		if (it != expr_end) {
			jule::I64 _747_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _7414_ident = *it;
			{
				if ((_1c486ea85_IsIgnoreIdent((*(_7414_ident))._field_Kind) || _1c486ed4e_IsAnonIdent((*_7414_ident.alloc)._field_Kind))) {
					goto _iter_next_1ab6b6c36;
				};
				{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7414_ident, ._field_Ident=(*_7414_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=_736_types[_747_i]}), ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=_747_i, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)})); };
			}
			_iter_next_1ab6b6c36:;
			++it;
			_747_i++;
			goto _iter_begin_1ab6b6c36;
		}
		_iter_end_1ab6b6c36:;
	};
	if ((((*(*((*((*(_6842_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1c494b799_appendParamVars(jule::Slice<jule::Ptr<_1c49715b0_Var>>* _9825_dest, jule::Ptr<_1c48bb719_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6c1416:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _10314_p = *it;
			{
				if ((_1c486ea85_IsIgnoreIdent((*((*(_10314_p))._field_Decl))._field_Ident) || _1c486ed4e_IsAnonIdent((*(*(_10314_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1ab6c1416;
				};
				jule::Ptr<_1c49715b0_Var> _1087_v = jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*(_10314_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_10314_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_10314_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_10314_p))._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)}), ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
				{
					
					if (_1c48b73b3_IsSelf((*(_10314_p))._field_Decl)) {
						_case_begin_1ab6c5261:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)});
							(*_1087_v.alloc)._field_Reference=(!(_1c48b7649_IsRef((*(_10314_p))._field_Decl)));
							if (_1c48b7649_IsRef((*(_10314_p))._field_Decl)) {
								((*(_1087_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1087_v))._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1087_v))._field_Kind))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*(_10314_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1ab6c4e97:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1c2d7_Slc>(_1c4a1c2d7_Slc{._field_Elem=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=(*((*_10314_p.alloc)._field_Kind))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_10314_p))._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1ab6c4e31:;
						{
							(*((*(_1087_v))._field_Kind))._field_Kind=(*_10314_p.alloc)._field_Kind;
						}
					}
					_match_end_1ab6c4d10:;
				};
				{ jule::Slice<jule::Ptr<_1c49715b0_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_1087_v); };
			}
			_iter_next_1ab6c1416:;
			++it;
			goto _iter_begin_1ab6c1416;
		}
		_iter_end_1ab6c1416:;
	};
}



inline void _1c494ba85_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _15834_dest, jule::Ptr<_1c48bb719_FnIns>* _15859_f) {
	jule::I64 _1596_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1596_size+=(*(*((*((*(_15859_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1596_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6cd6a9:;
		if (it != expr_end) {
			jule::I64 _1687_i = it - expr->begin();
			jule::Ptr<_1c4a0d828_InsGeneric> _16814_g = *it;
			{
				jule::Ptr<_1c488e984_GenericDecl> _1697_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_1687_i];;
				{ jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1697_decl.alloc)._field_Token, ._field_Ident=(*(_1697_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_16814_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1ab6cd6a9:;
			++it;
			_1687_i++;
			goto _iter_begin_1ab6cd6a9;
		}
		_iter_end_1ab6cd6a9:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1c48a6407_StructIns> _1817_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_1817_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab6cebd8:;
			if (it != expr_end) {
				jule::I64 _1828_i = it - expr->begin();
				jule::Ptr<_1c4a0d828_InsGeneric> _18215_g = *it;
				{
					jule::Ptr<_1c488e984_GenericDecl> _1838_decl = (*((*(_1817_owner))._field_Decl))._field_Generics[_1828_i];;
					{ jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1838_decl.alloc)._field_Token, ._field_Ident=(*(_1838_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_18215_g))._field_Kind}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1ab6cebd8:;
				++it;
				_1828_i++;
				goto _iter_begin_1ab6cebd8;
			}
			_iter_end_1ab6cebd8:;
		};
	};
}



inline jule::Ptr<_1c49c8bab_SymbolTable> _1c494be09_findFile(jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>* _19618_files, jule::Ptr<_1c4872934_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d0469:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _19714_fl = *it;
			{
				if (((*(_19714_fl))._field_File == (*(_19642_handler)))) {
					return _19714_fl;;
				};
			}
			_iter_next_1ab6d0469:;
			++it;
			goto _iter_begin_1ab6d0469;
		}
		_iter_end_1ab6d0469:;
	};
	return nullptr;;
}



inline void _1c494c3b0_pushSuggestion(_205a977d7_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_205a97c49_Logf(_20541_fmt, _20554_args);
}



inline void _1c496ec95_pushImplemented(jule::Ptr<_1c48cc1b9_Trait> _294524_t, jule::Ptr<_1c48a3679_Struct>* _294540_d) {
	_julec_label_1ab6d5ace:;
	{
		
		if (((*(_294524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1ab6d633d:;
			{
				{
					auto expr = &((*_294524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab6d73a5:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _294910_s = *it;
						{
							if ((_294910_s == (*(_294540_d)))) {
								goto _match_end_1ab6d5e0e;
							};
						}
						_iter_next_1ab6d73a5:;
						++it;
						goto _iter_begin_1ab6d73a5;
					}
					_iter_end_1ab6d73a5:;
				};
				goto _case_begin_1ab6d5ea8;
			}
		}
		else {
			_case_begin_1ab6d5ea8:;
			{
				(*(_294524_t))._field_Implemented=jule::append((*_294524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c48a3679_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_294540_d)); __jule_collection; }));
			}
		}
		_match_end_1ab6d5e0e:;
	};
	{
		auto expr = &((*(_294524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6d7cac:;
		if (it != expr_end) {
			jule::Ptr<_1c4a173d1_TypeSymbol> _295814_i = *it;
			{
				_1c496ec95_pushImplemented(_1c4a1419c_Trait((*(_295814_i))._field_Kind.ptr()), _294540_d);
			}
			_iter_next_1ab6d7cac:;
			++it;
			goto _iter_begin_1ab6d7cac;
		}
		_iter_end_1ab6d7cac:;
	};
}



inline void _1c4970081_pushImplements(jule::Ptr<_1c48a3679_Struct>* _296324_s, jule::Ptr<_1c48cc1b9_Trait> _296340_t) {
	_julec_label_1ab6d8b37:;
	{
		
		if (((*((*(_296324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1ab6d92a8:;
			{
				{
					auto expr = &((*((*(_296324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab6da320:;
					if (it != expr_end) {
						jule::Ptr<_1c48cc1b9_Trait> _296710_b = *it;
						{
							if ((_296710_b == _296340_t)) {
								goto _match_end_1ab6d8d79;
							};
						}
						_iter_next_1ab6da320:;
						++it;
						goto _iter_begin_1ab6da320;
					}
					_iter_end_1ab6da320:;
				};
				goto _case_begin_1ab6d8e23;
			}
		}
		else {
			_case_begin_1ab6d8e23:;
			{
				{ jule::Slice<jule::Ptr<_1c48cc1b9_Trait>> &__jule_push_dest = (*((*(_296324_s))))._field_Implements; __jule_push_dest.push(_296340_t); };
			}
		}
		_match_end_1ab6d8d79:;
	};
	{
		auto expr = &((*(_296340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab6dac27:;
		if (it != expr_end) {
			jule::Ptr<_1c4a173d1_TypeSymbol> _297614_i = *it;
			{
				_1c4970081_pushImplements(_296324_s, _1c4a1419c_Trait((*(_297614_i))._field_Kind.ptr()));
			}
			_iter_next_1ab6dac27:;
			++it;
			goto _iter_begin_1ab6dac27;
		}
		_iter_end_1ab6dac27:;
	};
}



inline jule::Bool _1c49ae950_traitHasReferenceReceiver(jule::Ptr<_1c48cc1b9_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3d0664:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> *_299_f = it;
			{
				if ((*((*(_299_f))))._field_Statically) {
					goto _iter_next_1ab3d0664;
				};
				jule::Ptr<_1c48b6c64_Param> _353_p = (*(*(_299_f)).alloc)._field_Params[0LL];;
				if ((_1c48b7649_IsRef(_353_p.ptr()) && _1c48b73b3_IsSelf(_353_p))) {
					return true;;
				};
			}
			_iter_next_1ab3d0664:;
			++it;
			goto _iter_begin_1ab3d0664;
		}
		_iter_end_1ab3d0664:;
	};
	return false;;
}



inline jule::Bool _1c49aecd5_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1c49ce024_Data>* _4333_d) {
	jule::Str _442_value = _1dc520025_FmtFloat(_1dc548070_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1dc53a705_CheckBitFloat(_442_value, _1dc53925e_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1c49b0159_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1c49ce024_Data>* _4830_d) {
	jule::F64 _492_min = _1dc5408e7_Min(_4818_kind);;
	jule::F64 _502_max = _1dc540b7d_Max(_4818_kind);;
	{
		
		if (_1dc549db8_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3d41a1:;
			{
				jule::F64 _533_x = _1dc5477bc_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _543_i;
				jule::F64 _546_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc4e5c76_Modf(_533_x);
					_543_i = __jule_assign_result.__jule_result_arg0;
					_546_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_546_frac != 0LL)) {
					return false;;
				};
				return ((_543_i >= _492_min) && (_543_i <= _502_max));;
			}
		}
		else if (_1dc549615_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3d4217:;
			{
				jule::F64 _603_x = _1dc548070_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_603_x <= _502_max)) {
					return true;;
				};
			}
		}
		else if (_1dc54937e_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1ab3d428e:;
			{
				jule::F64 _653_x = _1dc548070_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_492_min <= _653_x) && (_653_x <= _502_max));;
			}
		}
		_match_end_1ab3d4091:;
	};
	return false;;
}



inline jule::Bool _1c49b0522_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1c49ce024_Data>* _7132_d) {
	jule::F64 _722_max = _1dc540b7d_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1c4993071_IsAscii(static_cast<jule::I32>(_1dc546c83_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1dc549db8_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab3d9d77:;
			{
				jule::F64 _793_x = _1dc5477bc_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_793_x < 0LL)) {
					return false;;
				};
				jule::F64 _833_i;
				jule::F64 _836_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1dc4e5c76_Modf(_793_x);
					_833_i = __jule_assign_result.__jule_result_arg0;
					_836_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_836_frac != 0LL)) {
					return false;;
				};
				return (_833_i <= _722_max);;
			}
		}
		else if (_1dc549615_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab3d9ddd:;
			{
				jule::F64 _893_x = _1dc548070_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_893_x <= _722_max)) {
					return true;;
				};
			}
		}
		else if (_1dc54937e_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1ab3d9e54:;
			{
				jule::F64 _943_x = _1dc548070_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _943_x) && (_943_x <= _722_max));;
			}
		}
		_match_end_1ab3d9140:;
	};
	return false;;
}



inline jule::Bool _1c49b0896_intAssignable(jule::Str _10018_kind, jule::Ptr<_1c49ce024_Data>* _10030_d) {
	{
		
		if (_1dc543ba3_IsSigInt(_10018_kind)) {
			_case_begin_1ab3de9d6:;
			{
				return _1c49b0159_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1dc543eb1_IsUnsigInt(_10018_kind)) {
			_case_begin_1ab3dea6e:;
			{
				return _1c49b0522_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1ab3de4ec:;
			{
				return false;;
			}
		}
		_match_end_1ab3de431:;
	};
}



inline void _1c49c1b1b_checkMutRiskOfStructLit(jule::Ptr<_1c494d290_sema>* _92033_s, jule::Ptr<_1c48ab60a_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab3e0ae7:;
		if (it != expr_end) {
			jule::Ptr<_1c48ab264_StructArgExprModel> *_9219_arg = it;
			{
				if ((*((*((*((*(_9219_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1ab3e0ae7;
				};
				if (((!((*((*(*(_9219_arg)).alloc)._field_Expr))._field_Mutable)) && _1c4a11ac3_Mutable((*(*((*(_9219_arg))))._field_Expr.alloc)._field_Kind.ptr()))) {
					_1c4950e0d_pushErr((*(_92033_s)).ptr(), (*(*(_9219_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*((*(_9219_arg))))._field_Expr))._field_Kind), &__jule_any_type4); __jule_collection; }));
				};
			}
			_iter_next_1ab3e0ae7:;
			++it;
			goto _iter_begin_1ab3e0ae7;
		}
		_iter_end_1ab3e0ae7:;
	};
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c49c7957_lenKind(void) {
	return _21ddd16da_primInt;;
}



inline jule::Bool _1c49c7ca9_isGoodValueToInfer(jule::Ptr<_1c49ce024_Data>* _142124_d) {
	return (!(_1c49ce442_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1c4881b96_Directive> _1c4a076ac_findDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _424523_directives, jule::Str _424554_d) {
	{
		auto expr = _424523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc17660:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _424614_dr = *it;
			{
				if (((*((*(_424614_dr))._field_Tag))._field_Kind == _424554_d)) {
					return _424614_dr;;
				};
			}
			_iter_next_1abc17660:;
			++it;
			goto _iter_begin_1abc17660;
		}
		_iter_end_1abc17660:;
	};
	return nullptr;;
}



inline jule::Any _1c4a07a75_findBuiltinsImport(jule::Str* _425424_ident, jule::Ptr<_1c492cd1e_ImportInfo> _425436_imp) {
	return _21ddd4ce8_findPackageBuiltinDef(&((*(_425436_imp))._field_LinkPath), _425424_ident);;
}



inline void _1c4a07ca6_fitBitsize(jule::Ptr<_1c49ce024_Data>* _426320_d) {
	jule::Ptr<_1c4a17cd8_Prim> _42646_prim = _1c4a12893_Prim((*((*(_426320_d))))._field_Kind.ptr());;
	jule::I64 _42652_z = _1dc53925e_BitsizeOf(_1c4a1815c_Str(_42646_prim.ptr()));;
	{
		
		if (_1dc54937e_IsI64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1abc1ab5d:;
			{
				jule::I64 _42683_k = _1dc53ac88_BitsizeOfInt(_1dc546c83_ReadI64((*((*(_426320_d))))._field_Constant));;
				if (((_42683_k > _42652_z) || _1dc543eb1_IsUnsigInt((*_42646_prim.alloc)._field_Kind))) {
					(*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind=_1dc5395a0_IntFromBits(_42683_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_21ddd3a3e_findBuiltinTypeAlias((*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dc549615_IsU64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1abc1abc4:;
			{
				jule::I64 _42743_k = _1dc53b052_BitsizeOfUint(_1dc547019_ReadU64((*((*(_426320_d))))._field_Constant));;
				if (((_42743_k > _42652_z) || _1dc543ba3_IsSigInt((*_42646_prim.alloc)._field_Kind))) {
					(*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind=_1dc539836_UintFromBits(_42743_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_21ddd3a3e_findBuiltinTypeAlias((*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1dc549db8_IsF64((*((*(_426320_d))))._field_Constant.ptr())) {
			_case_begin_1abc1ac4b:;
			{
				if ((_42652_z == 64LLU)) {
					return;;
				};
				jule::I64 _42843_k = _1dc53a9be_BitsizeOfFloat(_1dc5477bc_ReadF64((*((*(_426320_d))))._field_Constant));;
				if ((_42843_k > _42652_z)) {
					(*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind=_1dc539b00_FloatFromBits(_42843_k);
					(*((*(_426320_d))))._field_Kind=(*((*(_21ddd3a3e_findBuiltinTypeAlias((*(*((*(_426320_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1abc1aa4d:;
	};
}



inline void _1c4a080d6_makeStructLitAlloc(jule::Ptr<_1c49ce024_Data>* _429228_d, jule::Ptr<_1c48ab60a_StructLitExprModel>* _429243_lit) {
	(*((*(_429228_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_429243_lit))))._field_Strct, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)});
	(*((*(_429228_d))))._field_Model=jule::Any(jule::new_ptr<_1c48ab907_AllocStructLitExprModel>(_1c48ab907_AllocStructLitExprModel{._field_Lit=(*(_429243_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1c49715b0_Var> _1c4a0845a_buildErrorVar(jule::Ptr<_1c490ac86_Scope>* _430323_s, jule::Ptr<_1c488a7d7_FnCallExpr>* _430339_fc) {
	return jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=(*(_430323_s)), ._field_Token=(*((*(_430339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
}



inline jule::Any _1c4a087ce_findBuiltinsSema(jule::Str* _431822_ident, jule::Ptr<_1c494d290_sema> _431838_s) {
	{
		auto expr = &((*((*(_431838_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc2732e:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _431914_imp = *it;
			{
				if (((*(_431914_imp))._field_ImportAll || _1c49306d4_existIdent(_431914_imp, (*(_431822_ident))))) {
					jule::Any _43218_def = _1c4a07a75_findBuiltinsImport(_431822_ident, _431914_imp);;
					if ((_43218_def != nullptr)) {
						return _43218_def;;
					};
				};
			}
			_iter_next_1abc2732e:;
			++it;
			goto _iter_begin_1abc2732e;
		}
		_iter_end_1abc2732e:;
	};
	jule::Str _43296_ppath = _1c487311b_Dir((*(*(_431838_s))._field_file.alloc)._field_File.ptr());;
	if (_2059e414b_HasPrefix(_43296_ppath, _205b5c072_PathStdlib)) {
		(_43296_ppath).mut_slice(_205b5c072_PathStdlib.len());;
		_43296_ppath=(jule::Str::lit("std", 3) + _2059e99e2_Replace(_43296_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _21ddd4ce8_findPackageBuiltinDef(&(_43296_ppath), _431822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1c4a08a98_isOkForShifting(jule::Ptr<_1c49ce024_Data>* _434325_d) {
	if (_1c49ce95e_IsConst((*(_434325_d)).ptr())) {
		{
			
			if (_1dc54937e_IsI64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1abc2a772:;
				{
					return (_1dc546c83_ReadI64((*((*(_434325_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1dc549615_IsU64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1abc2a81b:;
				{
					return true;;
				}
			}
			else if (_1dc549db8_IsF64((*((*(_434325_d))))._field_Constant.ptr())) {
				_case_begin_1abc2a893:;
				{
					return (_1dc5477bc_ReadF64((*((*(_434325_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1abc2a6d9:;
				{
					return false;;
				}
			}
			_match_end_1abc2a61d:;
		};
	};
	jule::Ptr<_1c4a17cd8_Prim> _43562_prim = _1c4a12893_Prim((*((*(_434325_d))))._field_Kind.ptr());;
	return ((_43562_prim != nullptr) && _1dc54427a_IsInt(_1c4a1815c_Str(_43562_prim)));;
}



inline jule::Bool _1c4a08e72_isInstancedStruct(jule::Ptr<_1c48a6407_StructIns> _436022_s) {
	return ((*((*(_436022_s))._field_Decl))._field_Generics.len() == (*_436022_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1c4a0926e_isPtrArithmeticCompatible(jule::Ptr<_1c49ce024_Data>* _436435_l, jule::Ptr<_1c49ce024_Data>* _436450_r) {
	jule::Ptr<_1c4a200cb_Ptr> _43652_ptr = _1c4a12db0_Ptr((*((*(_436450_r))))._field_Kind.ptr());;
	if ((_43652_ptr != nullptr)) {
		return _1c4a1094b_Equal((*(_1c4a12db0_Ptr((*((*(_436435_l))))._field_Kind)))._field_Elem, (*_43652_ptr.alloc)._field_Elem);;
	};
	if ((_1c49ce95e_IsConst((*(_436450_r)).ptr()) && (*((*(_436450_r))))._field_untyped)) {
		return (_1c49b0896_intAssignable(jule::Str::lit("int", 3), _436450_r) || _1c49b0896_intAssignable(jule::Str::lit("uint", 4), _436450_r));;
	};
	_1c49b0d80_typeCompatibilityChecker _43746_tcc = _1c49b0d80_typeCompatibilityChecker{._field_s=jule::Ptr<_1c494d290_sema>(nullptr), ._field_dest=_21ddd16da_primInt, ._field_src=(*((*(_436450_r))))._field_Kind, ._field_errorToken=jule::Ptr<_1c486c19d_Token>(nullptr)};;
	if (_1c49b73d6_check(&_43746_tcc)) {
		return true;;
	};
	_43746_tcc._field_dest=_21ddd1322_primUint;
	return _1c49b73d6_check(&_43746_tcc);;
}



inline void _1c4a09615_applyCastKindModel(jule::Ptr<_1c49ce024_Data>* _438528_d, jule::Ptr<_1c4a1020e_TypeKind>* _438543_t, jule::Ptr<_1c486c19d_Token>* _438562_token) {
	(*((*(_438528_d))))._field_Model=jule::Any(jule::new_ptr<_1c48abe8a_CastingExprModel>(_1c48abe8a_CastingExprModel{._field_Token=(*(_438562_token)), ._field_Expr=jule::new_ptr<_1c49ce024_Data>((*((*(_438528_d))))), ._field_Kind=(*(_438543_t)), ._field_ExprKind=(*((*(_438528_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1c4a099ab_applyCastKind(jule::Ptr<_1c49ce024_Data>* _439423_d, jule::Ptr<_1c4a1020e_TypeKind>* _439438_t, jule::Ptr<_1c486c19d_Token>* _439457_token) {
	_1c4a09615_applyCastKindModel(_439423_d, _439438_t, _439457_token);
	(*((*(_439423_d))))._field_Kind=(*(_439438_t));
}



inline jule::Ptr<_1c49ce024_Data> _1c4a09bba_buildVoidData(void) {
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0453_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Str _1c4a0a03e_checkDataForIntegerIndexing(jule::Ptr<_1c49ce024_Data>* _440537_d, jule::Ptr<_1c486c19d_Token>* _440552_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_440537_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1c4a12893_Prim((*((*(_440537_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1abc35b67:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1dc54427a_IsInt(_1c4a1815c_Str(_1c4a12893_Prim((*((*(_440537_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1abc35bcd:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1c49ce95e_IsConst((*(_440537_d)).ptr())) {
			_case_begin_1abc35c44:;
			{
				if ((_1dc548070_AsF64((*((*(_440537_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1c4a12893_Prim((*((*(_440537_d))))._field_Kind.ptr()) == nullptr) || _1c49ce95e_IsConst((*(_440537_d)).ptr()) || (_1dc538e95_RealKindOf(_1c4a1815c_Str(_1c4a12893_Prim((*((*(_440537_d))))._field_Kind).ptr())) != _1dc538e95_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1abc35caa:;
			{
				_1c4a099ab_applyCastKind(_440537_d, &(_21ddd16da_primInt), _440552_token);
			}
		}
		_match_end_1abc357c1:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1c4a0a3d5_applyCastModelByEnum(jule::Ptr<_1c49ce024_Data>* _443030_d, jule::Ptr<_1c48ce8c5_Enum> _443044_e, jule::Ptr<_1c486c19d_Token>* _443059_token) {
	if ((_443044_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _44342_p = _1c4a12893_Prim((*((*(_443044_e))._field_Kind))._field_Kind.ptr());;
	if (_1c4a1b2a3_IsStr(_44342_p.ptr())) {
		return;;
	};
	_1c4a09615_applyCastKindModel(_443030_d, &((*(*(_443044_e))._field_Kind.alloc)._field_Kind), _443059_token);
}



inline void _1c4a0a6c1_castConstByType(jule::Str* _444121_t, jule::Ptr<_1c49ce024_Data>* _444134_d) {
	{
		
		if (_1dc543ba3_IsSigInt((*(_444121_t)))) {
			_case_begin_1abc3bad5:;
			{
				{
					auto _match_expr{ _1dc53925e_BitsizeOf(_1dc538e95_RealKindOf((*(_444121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abc3c696:;
						{
							_1dc548328_SetI64((*((*(_444134_d))))._field_Constant.ptr(), _1dc547a53_AsI64((*((*(_444134_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abc3c71d:;
						{
							_1dc548328_SetI64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1dc547a53_AsI64((*((*(_444134_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abc3c784:;
						{
							_1dc548328_SetI64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1dc547a53_AsI64((*((*(_444134_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abc3c7ea:;
						{
							_1dc548328_SetI64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1dc547a53_AsI64((*((*(_444134_d))))._field_Constant))));
						}
					}
					_match_end_1abc3c377:;
				};
			}
		}
		else if (_1dc543eb1_IsUnsigInt((*(_444121_t)))) {
			_case_begin_1abc3bb7e:;
			{
				{
					auto _match_expr{ _1dc53925e_BitsizeOf(_1dc538e95_RealKindOf((*(_444121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abc417cc:;
						{
							_1dc5485d1_SetU64((*((*(_444134_d))))._field_Constant.ptr(), _1dc547cd9_AsU64((*((*(_444134_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abc41854:;
						{
							_1dc5485d1_SetU64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1dc547cd9_AsU64((*((*(_444134_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1abc418ba:;
						{
							_1dc5485d1_SetU64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1dc547cd9_AsU64((*((*(_444134_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1abc41931:;
						{
							_1dc5485d1_SetU64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1dc547cd9_AsU64((*((*(_444134_d))))._field_Constant))));
						}
					}
					_match_end_1abc40798:;
				};
			}
		}
		else if (_1dc5445bb_IsFloat((*(_444121_t)))) {
			_case_begin_1abc3bbe5:;
			{
				{
					auto _match_expr{ _1dc53925e_BitsizeOf(_1dc538e95_RealKindOf((*(_444121_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1abc41c72:;
						{
							_1dc548dea_SetF64((*((*(_444134_d))))._field_Constant.ptr(), _1dc548070_AsF64((*((*(_444134_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1abc45935:;
						{
							_1dc548dea_SetF64((*((*(_444134_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1dc548070_AsF64((*((*(_444134_d))))._field_Constant))));
						}
					}
					_match_end_1abc448ce:;
				};
			}
		}
		_match_end_1abc3b981:;
	};
}



inline void _1c4a0abdd_updateModelToGenericIns(jule::Any* _447533_m, jule::Ptr<_1c48bb719_FnIns>* _447552_f) {
	{
		auto &_match_expr{ (*(_447533_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abc3bee2:;
			{
				(*(_447533_m))=jule::Any((*(_447552_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abc45c21:;
			{
				(*((*(_447533_m)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_447552_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1abc3c07a:;
			{
				(*((*(_447533_m)).cast_ptr<_1c48b0851_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_447552_f));
			}
		}
		_match_end_1abc4ae02:;
	};
}



inline jule::Bool _1c4a0ae52_pushSubIdentFromExpr(jule::Any _448629_expr, jule::Ptr<_1c488314d_SubIdentTypeDecl>* _448650_t) {
	{
		auto &_match_expr{ _448629_expr };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1abc4da2b:;
			{
				jule::Ptr<_1c48883c8_IdentExpr> _44897_e = _448629_expr.unsafe_cast_ptr<_1c48883c8_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>> &__jule_push_dest = (*((*(_448650_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*(_44897_e))._field_Token, ._field_Ident=(*_44897_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1abc4e620:;
			{
				jule::Ptr<_1c4889bc1_SubIdentExpr> _44957_e = _448629_expr.unsafe_cast_ptr<_1c4889bc1_SubIdentExpr>();;
				if ((!(_1c4a0ae52_pushSubIdentFromExpr((*((*(_44957_e))._field_Expr))._field_Kind, _448650_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1c4882d84_IdentTypeDecl>> &__jule_push_dest = (*((*(_448650_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1c4882d84_IdentTypeDecl>(_1c4882d84_IdentTypeDecl{._field_Token=(*_44957_e.alloc)._field_Ident, ._field_Ident=(*((*_44957_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1c4882779_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1abc4e1be:;
			{
				return false;;
			}
		}
		_match_end_1abc4e169:;
	};
	return true;;
}



inline jule::Str _1c4a0b21b_constoa(jule::Ptr<_1dc54537a_Const>* _450913_c) {
	{
		
		if (_1dc54937e_IsI64((*(_450913_c)).ptr())) {
			_case_begin_1abc524d0:;
			{
				return _1dc536a64_FmtInt(_1dc546c83_ReadI64((*(_450913_c)).ptr()), 10LL);;
			}
		}
		else if (_1dc549615_IsU64((*(_450913_c)).ptr())) {
			_case_begin_1abc5239d:;
			{
				return _1dc53669b_FmtUint(_1dc547019_ReadU64((*(_450913_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1abc4e80c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abc516ee:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _1c4a0b64a_evalEnumStatic(jule::Ptr<_1c48ce8c5_Enum>* _452024_enm, jule::Ptr<_1c48cdd58_EnumItem>* _452041_item, jule::Ptr<_1c486c19d_Token>* _452063_token) {
	jule::Ptr<_1c49ce024_Data> _45216_d = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_452024_enm)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if (((*(_452041_item)) != nullptr)) {
		(*(_45216_d))._field_Constant=jule::new_ptr<_1dc54537a_Const>((*(*((*((*((*(_452041_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45216_d.alloc)._field_Model=jule::Any((*_45216_d.alloc)._field_Constant, &__jule_any_type19);
		_1c4a0a3d5_applyCastModelByEnum(&(_45216_d), (*(_452024_enm)), _452063_token);
	};
	return _45216_d;;
}



inline jule::Ptr<_1c48ab60a_StructLitExprModel> _1c4a0b914_isLitBased(jule::Any* _453720_m) {
	{
		auto &_match_expr{ (*(_453720_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1abc5712d:;
			{
				return (*(_453720_m)).cast_ptr<_1c48ab60a_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1abc57194:;
			{
				return (*((*(_453720_m)).cast_ptr<_1c48ab907_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1abc5720a:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _45447_ssi = (*(_453720_m)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1c4a0b914_isLitBased(&((*((*(_45447_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1abc57271:;
			{
				jule::Ptr<_1c48abe8a_CastingExprModel> _45477_c = (*(_453720_m)).cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93);;
				return _1c4a0b914_isLitBased(&((*((*(_45477_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1abc56bbb:;
			{
				return nullptr;;
			}
		}
		_match_end_1abc543c2:;
	};
}



inline void _1c4a0bc00_makeImplicitDeref(jule::Ptr<_1c49ce024_Data>* _455427_d, jule::Ptr<_1c486c19d_Token> _455441_baseToken) {
	jule::Ptr<_1c48aac36_UnaryExprModel> _45556_unary = jule::new_ptr<_1c48aac36_UnaryExprModel>(_1c48aac36_UnaryExprModel{._field_Expr=jule::new_ptr<_1c49ce024_Data>((*((*(_455427_d))))), ._field_Op=jule::new_ptr<_1c486c19d_Token>((*(_455441_baseToken)))});;
	(*((*(_45556_unary))._field_Op))._field_Id=static_cast<jule::U64>(62LLU);
	(*(*(_45556_unary))._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_455427_d))))._field_Model=jule::Any(_45556_unary, &__jule_any_type110);
}



inline void _1abc8a9d0_updateRefer(jule::Ptr<_1c48be8a4_ReferenceStack> _456523_ref, jule::Ptr<_1c48bb719_FnIns>* _456546_old, jule::Ptr<_1c48bb719_FnIns>* _456559_new) {
	{
		auto expr = &((*(_456523_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1abc8c3b6:;
		if (it != expr_end) {
			jule::I64 _45666_i = it - expr->begin();
			jule::Any _45669_sym = *it;
			{
				if ((__jule_any_type7_compare(_45669_sym, (*(_456546_old))))) {
					(*(_456523_ref))._field_buffer[_45666_i]=jule::Any((*(_456559_new)), &__jule_any_type7);
				};
			}
			_iter_next_1abc8c3b6:;
			++it;
			_45666_i++;
			goto _iter_begin_1abc8c3b6;
		}
		_iter_end_1abc8c3b6:;
	};
}



inline void _1c4a0c382_makeVariadic(jule::Ptr<_1c49ce024_Data>* _457322_d, jule::Ptr<_1c4a1020e_TypeKind> _457336_elem) {
	(*((*(_457322_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=(*_457336_elem.alloc)._field_BindIdent, ._field_Generic=(*(_457336_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_457336_elem.alloc)._field_Kind});
}



inline jule::Bool _1c4a0c7b1_isVarCaptured(jule::Ptr<_1c4913244_scopeChecker> _458718_r, jule::Ptr<_1c4913244_scopeChecker> _458740_s, jule::Ptr<_1c49715b0_Var> _458758_v) {
	if (((*(_458758_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_458740_s))._field_scope == (*_458758_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_458740_s.alloc)._field_parent == nullptr) || (_458740_s == _458718_r))) {
				goto _iter_end_1aaab8820;
			};
			_458740_s=(*_458740_s.alloc)._field_parent;
		}
	_iter_next_1aaab8820:;
	}
	_iter_end_1aaab8820:;;
	return true;;
}



inline jule::Bool _1c4a2a966_kindUsesGenerics(jule::Ptr<_1c4a1020e_TypeKind>* _172226_k, jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>* _172241_generics) {
	{
		auto expr = _172241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a4022:;
		if (it != expr_end) {
			jule::Ptr<_1c488e984_GenericDecl> *_17239_g = it;
			{
				if (static__1c4a2a56a_exist(&((*((*(_17239_g))))._field_Ident), _172226_k)) {
					return true;;
				};
			}
			_iter_next_1ab8a4022:;
			++it;
			goto _iter_begin_1ab8a4022;
		}
		_iter_end_1ab8a4022:;
	};
	return false;;
}



inline jule::Bool _1c4a2ad2e_hasDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _173222_directives, jule::Str _173253_tag) {
	{
		auto expr = _173222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a51dd:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _173314_dr = *it;
			{
				if (((*((*(_173314_dr))._field_Tag))._field_Kind == _173253_tag)) {
					return true;;
				};
			}
			_iter_next_1ab8a51dd:;
			++it;
			goto _iter_begin_1ab8a51dd;
		}
		_iter_end_1ab8a51dd:;
	};
	return false;;
}



inline jule::Bool _1c4a2b0e8_canGetPtr(jule::Ptr<_1c49ce024_Data>* _174119_d) {
	{
		
		if ((!((*((*(_174119_d))))._field_Lvalue)) || _1c49ce95e_IsConst((*(_174119_d)).ptr())) {
			_case_begin_1ab8a61cd:;
			{
				return false;;
			}
		}
		else if ((_1c4a13b80_Fn((*((*(_174119_d))))._field_Kind.ptr()) != nullptr) || (_1c4a13146_Enum((*((*(_174119_d))))._field_Kind) != nullptr)) {
			_case_begin_1ab8a65c9:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab8a551d:;
			{
				return true;;
			}
		}
		_match_end_1ab8a5908:;
	};
}



inline jule::Bool _1c4a2b439_isValidForSptrType(jule::Ptr<_1c4a1020e_TypeKind>* _175328_t) {
	jule::Ptr<_1c48a6407_StructIns> _17546_s = _1c4a13e16_Struct((*(_175328_t)).ptr());;
	if ((((_17546_s != nullptr) && ((*_17546_s.alloc)._field_Decl != nullptr)) && (*(*(_17546_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1c4a2b6c0_isValidForRef(jule::Ptr<_1c4a1020e_TypeKind>* _176223_t) {
	return (_1c4a13b80_Fn((*(_176223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1c4a2b989_isBuiltinStrConvertable(jule::Ptr<_1c4a1020e_TypeKind>* _176533_t) {
	return ((((!(_1c4a115a6_Void((*(_176533_t)).ptr()))) && (_1c4a13b80_Fn((*(_176533_t)).ptr()) == nullptr)) && (_1c4a146b9_Tup((*(_176533_t)).ptr()) == nullptr)) && (!(_1c4a14950_comptime((*(_176533_t)).ptr()))));;
}



inline jule::Str _1c4a2bc53_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _176927_tokens) {
	if ((((*(_176927_tokens)).len() == 1LL) && ((*((*(_176927_tokens))[0LL]))._field_Id == static_cast<jule::U64>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I64 _17736_n = 0LL;;
	{
		auto expr = _176927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8ac0a2:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_17749_token = it;
			{
				_17736_n+=(*((*(_17749_token))))._field_Kind.len();
				_17736_n+=2LL;
			}
			_iter_next_1ab8ac0a2:;
			++it;
			goto _iter_begin_1ab8ac0a2;
		}
		_iter_end_1ab8ac0a2:;
	};
	_238b51e24_StrBuilder _17786_s = static__238b52375_New(_17736_n);;
	{
		auto expr = _176927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8a9c70:;
		if (it != expr_end) {
			jule::I64 _17796_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> *_17799_token = it;
			{
				_238b528d6_WriteStr(&_17786_s, (*((*(_17799_token))))._field_Kind);
				if ((((*(_176927_tokens)).len() - _17796_i) > 1LL)) {
					_238b528d6_WriteStr(&_17786_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1ab8a9c70:;
			++it;
			_17796_i++;
			goto _iter_begin_1ab8a9c70;
		}
		_iter_end_1ab8a9c70:;
	};
	return _238b531cd_Str(&_17786_s);;
}



inline jule::Ptr<_1c4a17cd8_Prim> _1c4a2c12c_buildPrimType(jule::Str _178818_kind) {
	return jule::new_ptr<_1c4a17cd8_Prim>(_1c4a17cd8_Prim{._field_Kind=_178818_kind});;
}



inline void _1c4a2c715_applyImplicitCast(jule::Ptr<_1c4a1020e_TypeKind>* _181627_dest, jule::Ptr<_1c49ce024_Data>* _181649_d, jule::Ptr<_1c486c19d_Token>* _181664_token) {
	if (_1c4a11320_IsNil((*((*(_181649_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _18202_destPrim = _1c4a12893_Prim((*(_181627_dest)).ptr());;
	if (((_18202_destPrim != nullptr) && _1c4a1b539_IsAny(_18202_destPrim))) {
		jule::Ptr<_1c4a17cd8_Prim> _18223_prim = _1c4a12893_Prim((*((*(_181649_d))))._field_Kind);;
		if (((_18223_prim == nullptr) || (!(_1c4a1b539_IsAny(_18223_prim.ptr()))))) {
			_1c4a099ab_applyCastKind(_181649_d, _181627_dest, _181664_token);
		};
		return;;
	};
	jule::Ptr<_1c48cc1b9_Trait> _18292_dt = _1c4a1419c_Trait((*(_181627_dest)).ptr());;
	if ((_18292_dt != nullptr)) {
		jule::Ptr<_1c48cc1b9_Trait> _18313_bt = _1c4a1419c_Trait((*((*(_181649_d))))._field_Kind);;
		if (((_18313_bt == nullptr) || (_18313_bt != _18292_dt))) {
			_1c4a09615_applyCastKindModel(_181649_d, _181627_dest, _181664_token);
			return;;
		};
	};
	if (((_1c4a133cc_TypeEnum((*(_181627_dest)).ptr()) != nullptr) && (_1c4a133cc_TypeEnum((*((*(_181649_d))))._field_Kind) == nullptr))) {
		_1c4a09615_applyCastKindModel(_181649_d, _181627_dest, _181664_token);
		return;;
	};
}



inline jule::Bool _1c4a2c9ce_validTypeForXof(jule::Ptr<_1c4a1020e_TypeKind>* _184425_t) {
	return ((!(_1c4a115a6_Void((*(_184425_t)).ptr()))) && (_1c4a13b80_Fn((*(_184425_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log _1c4a30ae2_buildSymbols(jule::Ptr<_1c48807bb_AST>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1c48c5866_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log __jule_func_result;
	jule::Ptr<_1c48c5866_symbolBuilder> _176_sb = jule::new_ptr<_1c48c5866_symbolBuilder>(_1c48c5866_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_errors=jule::Slice<_205a977d7_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1c49c8bab_SymbolTable>(nullptr)});;
	_1c48cb2ea_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1c4a30e22_collectImplicitImports(jule::Ptr<_1c494d290_sema>* _3132_s, jule::Ptr<_1c49c8bab_SymbolTable>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba29917:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1c48cb6b3_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1aba29917;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std::runtime", 12)) {
						_case_begin_1aba2aab1:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1aba2a187:;
						{
							jule::panic(jule::Str::lit("implementation mistake in implicit import collection, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1aba2a71a:;
				};
			}
			_iter_next_1aba29917:;
			++it;
			goto _iter_begin_1aba29917;
		}
		_iter_end_1aba29917:;
	};
}



inline __jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log _1c4a31351_analyzePackage(jule::Slice<jule::Ptr<_1c48807bb_AST>>* _4524_files, jule::Trait* _4544_importer, jule::I64* _4565_flags) {
	__jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c49c8bab_SymbolTable>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aba2b7b5:;
		if (it != expr_end) {
			jule::Ptr<_1c48807bb_AST> _4814_f = *it;
			{
				jule::Ptr<_1c49c8bab_SymbolTable> _497_table;
				jule::Slice<_205a977d7_Log> _4918_errors;
				({
					__jule_tuple_x_1c49c8bab_SymbolTable__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c4a30ae2_buildSymbols(&(_4814_f), _4544_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1aba2b7b5:;
			++it;
			goto _iter_begin_1aba2b7b5;
		}
		_iter_end_1aba2b7b5:;
	};
	jule::Ptr<_1c494d290_sema> _566_sema = jule::new_ptr<_1c494d290_sema>(_1c494d290_sema{._field_errors=jule::Slice<_205a977d7_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1c49c8bab_SymbolTable>>(nullptr), ._field_file=jule::Ptr<_1c49c8bab_SymbolTable>(nullptr), ._field_flags=(*(_4565_flags)), ._field_meta=jule::new_ptr<_1c494c668_commonSemaMeta>(_1c494c668_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1c48e3ae8_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1c492cd1e_ImportInfo>(nullptr)})});;
	_1c4a30e22_collectImplicitImports(&(_566_sema), &(_476_tables[0LL]));
	_1c496ce5d_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1c4930c45_Package> _706_pkg = jule::new_ptr<_1c4930c45_Package>(_1c4930c45_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _706_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log _1c4a31807_AnalyzePackage(jule::Slice<jule::Ptr<_1c48807bb_AST>> _9423_files, jule::Trait _9442_importer, jule::I64 _9462_flags) {
	__jule_tuple_x_1c4930c45_Package__jule_tuple_s_205a977d7_Log __jule_func_result;
	if ((_9423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1c4a31351_analyzePackage(&(_9423_files), &(_9442_importer), &(_9462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1c48bb719_FnIns> _21ddcea3a_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1aba36517:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _2914_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd559b_builtinCallerOut), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1aba3657d:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _3214_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd59ca_builtinCallerOutln), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1aba365e4:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _3514_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd5e09_builtinCallerNew), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1aba3666b:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _3814_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd6338_builtinCallerPanic), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1aba367e2:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _4114_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd6998_builtinCallerMake), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1aba36858:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _4414_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd6cb7_builtinCallerAppend), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1aba368d0:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _4714_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd76d0_builtinCallerCopy), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1aba36957:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _5014_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd8d74_builtinCallerLen), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1aba36a78:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _5314_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddd9627_builtinCallerCap), ._field_reloaded=false});;
				return _5314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1aba36ade:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _5614_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddda040_builtinCallerDelete), ._field_reloaded=false});;
				return _5614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1aba36b55:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _5914_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddda46e_builtinCallerAssert), ._field_reloaded=false});;
				return _5914_f;;
			}
		}
		else {
			_case_begin_1aba3601c:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba36391:;
	};
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _21ddced48_primTypeAlias(jule::Ptr<_1c4a1020e_TypeKind>* _6623_k) {
	return jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=(*(_6623_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1c49715b0_Var> _21ddd36ed_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1aba3de15:;
			{
				static jule::Ptr<_1c49715b0_Var> _9714_v = jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=_21ddd0156_primNil}), ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc546623_NewNil()})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
				return _9714_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1aba3deae:;
			{
				static jule::Ptr<_1c49715b0_Var> _11214_v = jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc545d81_NewBool(true)})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
				return _11214_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1aba3e036:;
			{
				static jule::Ptr<_1c49715b0_Var> _12514_v = jule::new_ptr<_1c49715b0_Var>(_1c49715b0_Var{._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Kind=(*(_21ddd3a3e_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1c49d019b_Value>(_1c49d019b_Value{._field_Expr=jule::Ptr<_1c4886aad_Expr>(nullptr), ._field_Data=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1dc545d81_NewBool(false)})}), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1c49715b0_Var>>(nullptr)});;
				return _12514_v;;
			}
		}
		else {
			_case_begin_1aba3d640:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba37ae0:;
	};
}



inline jule::Ptr<_1c4a0e41c_TypeAlias> _21ddd3a3e_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aba43cc7:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _14514_t = _21ddced48_primTypeAlias(&(_21ddd070b_primAny));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1aba43e4d:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _14814_t = _21ddced48_primTypeAlias(&(_21ddd0a08_primStr));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1aba43eb4:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _15114_t = _21ddced48_primTypeAlias(&(_21ddd0cb1_primBool));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aba4404c:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _15414_t = _21ddced48_primTypeAlias(&(_21ddd1069_primUintptr));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aba440b3:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _15714_t = _21ddced48_primTypeAlias(&(_21ddd1322_primUint));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aba44129:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _16014_t = _21ddced48_primTypeAlias(&(_21ddd16da_primInt));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aba44190:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _16314_t = _21ddced48_primTypeAlias(&(_21ddd192c_primI8));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aba44217:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _16614_t = _21ddced48_primTypeAlias(&(_21ddd1bc4_primI16));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aba442e4:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _16914_t = _21ddced48_primTypeAlias(&(_21ddd2235_primI64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aba4436b:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _17214_t = _21ddced48_primTypeAlias(&(_21ddd2796_primU16));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aba443e3:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _17514_t = _21ddced48_primTypeAlias(&(_21ddd2a4e_primU32));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aba4446a:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _17814_t = _21ddced48_primTypeAlias(&(_21ddd3038_primU64));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aba444e2:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _18114_t = _21ddced48_primTypeAlias(&(_21ddd327a_primF32));;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aba44569:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _18414_t = _21ddced48_primTypeAlias(&(_21ddd3489_primF64));;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aba445e1:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _18714_t = _21ddced48_primTypeAlias(&(_21ddd24dd_primU8));;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aba44668:;
			{
				static jule::Ptr<_1c4a0e41c_TypeAlias> _19014_t = _21ddced48_primTypeAlias(&(_21ddd1e7c_primI32));;
				return _19014_t;;
			}
		}
		else {
			_case_begin_1aba3e553:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba3e630:;
	};
}



inline jule::Any _21ddd3cc5_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1c49715b0_Var> _1986_v = _21ddd36ed_findBuiltinVar(_19720_ident);;
	if ((_1986_v != nullptr)) {
		return jule::Any(_1986_v, &__jule_any_type8);;
	};
	jule::Ptr<_1c48bb719_FnIns> _2026_f = _21ddcea3a_findBuiltinFunc(_19720_ident);;
	if ((_2026_f != nullptr)) {
		return jule::Any(_2026_f, &__jule_any_type7);;
	};
	jule::Ptr<_1c4a0e41c_TypeAlias> _2066_ta = _21ddd3a3e_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2066_ta != nullptr)) {
		return jule::Any(_2066_ta, &__jule_any_type66);;
	};
	return nullptr;;
}



inline jule::Any _21ddd408e_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1aba4ddd1:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _21614_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddddc14_builtinCallerStdDebugOut), ._field_reloaded=false});;
				return jule::Any(_21614_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1aba4de69:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _21914_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddde143_builtinCallerStdDebugOutln), ._field_reloaded=false});;
				return jule::Any(_21914_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1aba4d809:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba4cbb0:;
	};
}



inline jule::Any _21ddd4358_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1aba50795:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _22914_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddc619_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1aba50b08:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _23214_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddca48_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1aba5082d:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _23514_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddce77_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1aba509c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba4e2cc:;
	};
}



inline jule::Any _21ddd4732_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1aba52c92:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _24514_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21ddda89d_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24514_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1aba5306c:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _24814_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddb01e_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1aba530d3:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _25114_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddb44d_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25114_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1aba52d08:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _25414_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddb87c_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25414_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1aba52d80:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _25714_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddbcab_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25714_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1aba5319e:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _26014_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddc1da_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_26014_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1aba52e4b:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba51004:;
	};
}



inline jule::Any _21ddd4974_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1aba53446:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _27014_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1c48b8738_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddd3a6_builtinCallerStdJuleIntegratedToStr), ._field_reloaded=false});;
				return jule::Any(_27014_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1aba5745b:;
			{
				static jule::Ptr<_1c48bb719_FnIns> _27314_f = jule::new_ptr<_1c48bb719_FnIns>(_1c48bb719_FnIns{._field_Owner=jule::Ptr<_1c48a6407_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1c48b8738_Fn>(_1c48b8738_Fn{._field_sema=jule::Ptr<_1c494d290_sema>(nullptr), ._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c488e984_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c488e984_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1c48b6549_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48b6c64_Param>>(nullptr), ._field_Owner=jule::Ptr<_1c48a3679_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1c48bb719_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0d828_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1c48ba691_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1c4a1020e_TypeKind>(nullptr), ._field_Scope=jule::Ptr<_1c490ac86_Scope>(nullptr), ._field_Refers=jule::Ptr<_1c48be8a4_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_caller=jule::Fn<jule::Ptr<_1c49ce024_Data>,jule::Ptr<_1c49d0c4b_eval>*,jule::Ptr<_1c488a7d7_FnCallExpr>*,jule::Ptr<_1c49ce024_Data>*>(_21dddd7d5_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_27314_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1aba5733a:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba5724c:;
	};
}



inline jule::Any _21ddd4ce8_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1aba5954b:;
			{
				return _21ddd4732_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1aba595b2:;
			{
				return _21ddd408e_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1aba59628:;
			{
				return _21ddd4358_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1aba5968e:;
			{
				return _21ddd4974_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1aba576ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1aba591e9:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _21ddd516c_builtinCallerError(jule::Ptr<_1c49d0c4b_eval>* _30028_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _3086_expr = _1c49edede_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3086_expr == nullptr)) {
		return nullptr;;
	};
	if (_1c49ce442_IsNil(_3086_expr.ptr())) {
		_1c49d12ce_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c49ce024_Data> _3176_d = _1c4a09bba_buildVoidData();;
	(*(_3176_d))._field_Model=jule::Any(jule::new_ptr<_1c48b413a_BuiltinErrorCallExprModel>(_1c48b413a_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1c48bb719_FnIns>(nullptr), ._field_Err=_3086_expr}), &__jule_any_type22);
	return _3176_d;;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd559b_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _32226_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _32241_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("out", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _3316_expr = _1c49edede_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3316_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4a2b989_isBuiltinStrConvertable(&((*(_3316_expr))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _3416_d = _1c4a09bba_buildVoidData();;
	(*(_3416_d))._field_Model=jule::Any(jule::new_ptr<_1c48b1401_BuiltinOutCallExprModel>(_1c48b1401_BuiltinOutCallExprModel{._field_Expr=(*(_3316_expr))._field_Model, ._field_Debug=false}), &__jule_any_type26);
	return _3416_d;;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd59ca_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _34628_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _34643_fc, jule::Ptr<_1c49ce024_Data>* _34665_d) {
	(*(_34665_d))=_21ddd559b_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b17ca_BuiltinOutlnCallExprModel>(_1c48b17ca_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1c48b1401_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, ._field_Debug=false}), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd5e09_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _35826_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _35841_fc, jule::Ptr<_1c49ce024_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1c49d12ce_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _3676_t = _1c49ed1ca_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3676_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3676_t))._field_Decl))) {
		_1c49d12ce_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1c4a2b439_isValidForSptrType(&((*(_3676_t))._field_Kind))))) {
		jule::Ptr<_1c48a6407_StructIns> _3787_s = _1c4a13e16_Struct((*(_3676_t))._field_Kind.ptr());;
		if ((((_3787_s != nullptr) && ((*_3787_s.alloc)._field_Decl != nullptr)) && (*(*(_3787_s))._field_Decl.alloc)._field_Binded)) {
			_1c49d12ce_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=(*(_3676_t))._field_Kind}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c4a1020e_TypeKind> _3927_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3676_t))._field_Kind;
		jule::Ptr<_1c49ce024_Data> _3957_init = _1c49edede_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_3927_old;
		if ((_3957_init != nullptr)) {
			jule::Ptr<_1c486c19d_Token> _4008_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1c495cca5_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3676_t))._field_Kind), &(_3957_init), &(_4008_token));
			_1c495891b_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3676_t))._field_Kind), &(_3957_init), _4008_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b1ba4_BuiltinNewCallExprModel>(_1c48b1ba4_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=(*_3957_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b1ba4_BuiltinNewCallExprModel>(_1c48b1ba4_BuiltinNewCallExprModel{._field_Kind=(*(_3676_t))._field_Kind, ._field_Init=jule::Any(nullptr)}), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd6338_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _42028_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _42043_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _4296_expr = _1c49edede_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4296_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c4a12893_Prim((*(_4296_expr))._field_Kind.ptr()) == nullptr) || (!(_1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_4296_expr))._field_Kind).ptr()))))) {
		_1c49d12ce_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c49ce024_Data> _4386_d = _1c4a09bba_buildVoidData();;
	(*(_4386_d))._field_Model=jule::Any(jule::new_ptr<_1c48b207d_BuiltinPanicCallExprModel>(_1c48b207d_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4296_expr))._field_Model}), &__jule_any_type28);
	return _4386_d;;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd6998_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44627_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44642_fc, jule::Ptr<_1c49ce024_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1c49d12ce_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c49d12ce_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1c49d12ce_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _4596_t = _1c49ed1ca_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4596_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4596_t))._field_Decl))) {
		_1c49d12ce_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1c4a138e9_Slc((*(_4596_t))._field_Kind.ptr()) == nullptr)) {
		_1c49d12ce_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_4596_t))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4596_t))._field_Kind;
	jule::Ptr<_1c49ce024_Data> _4746_lenExpr = _1c49edede_evalExpr(_1c4958069_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4746_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1c49d9eb9_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4746_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1c48b29da_BuiltinMakeCallExprModel> _4816_model = jule::new_ptr<_1c48b29da_BuiltinMakeCallExprModel>(_1c48b29da_BuiltinMakeCallExprModel{._field_Kind=(*(_4596_t))._field_Kind, ._field_Len=(*(_4746_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44664_d))))._field_Model=jule::Any(_4816_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1c49ce024_Data> _4877_capExpr = _1c49edede_evalExpr(_1c4958069_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4596_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_4877_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1c49d9eb9_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4877_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4816_model))._field_Cap=(*(_4877_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd6cb7_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _49729_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _49744_fc, jule::Ptr<_1c49ce024_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _5076_t = _1c49edede_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5076_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _5126_s = _1c4a138e9_Slc((*(_5076_t))._field_Kind.ptr());;
	if ((_5126_s == nullptr)) {
		_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1c495cca5_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5076_t))._field_Kind), &(_5076_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1c495891b_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5076_t))._field_Kind), &(_5076_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1c4a1020e_TypeKind> _5276_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5076_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5276_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=(*(_5076_t))._field_Kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aba94487:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c49ce024_Data> _5417_e1 = _1c49edede_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1c4889044_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1c4a12893_Prim((*(_5126_s))._field_Elem.ptr()) != nullptr) && _1c4a19713_IsU8(_1c4a12893_Prim((*(_5126_s))._field_Elem).ptr()))) {
					if (((_1c4a12893_Prim((*(_5417_e1))._field_Kind) != nullptr) && _1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_5417_e1))._field_Kind).ptr()))) {
						_1c4a0c382_makeVariadic(&(_5417_e1), _21ddd24dd_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(_1c48b2db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1c4a1260c_Variadicable((*(_5417_e1))._field_Kind)))) {
					_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_5417_e1))._field_Kind), &__jule_any_type4); __jule_collection; }));
					return nullptr;;
				};
				_1c4a0c382_makeVariadic(&(_5417_e1), (*(_5126_s))._field_Elem);
				if (_1c495cca5_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5417_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1c495891b_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5417_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(_1c48b2db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1aba943dd:;
	};
	jule::Ptr<_1c49ce024_Data> _5756_e1 = _1c49edede_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5756_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c48acc16_SliceExprModel> _5806_slice = jule::new_ptr<_1c48acc16_SliceExprModel>(_1c48acc16_SliceExprModel{._field_ElemKind=(*(_5126_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1abaa1719:;
		if (it != expr_end) {
			jule::Ptr<_1c4886aad_Expr> _58414_arg = *it;
			{
				_5756_e1=_1c49edede_evalExpr((*(_49729_e)), _58414_arg);
				if ((_5756_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5756_e1))._field_Kind.alloc)._field_Variadic) {
					_1c49d12ce_pushErr((*(_49729_e)).ptr(), (*(_58414_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1c495cca5_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5126_s))._field_Elem), &(_5756_e1), &((*_58414_arg.alloc)._field_Token))) {
					_1c495891b_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5126_s))._field_Elem), &(_5756_e1), (*_58414_arg.alloc)._field_Token);
				};
				(*(_5806_slice))._field_Elems=jule::append((*_5806_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5756_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1abaa1719:;
			++it;
			goto _iter_begin_1abaa1719;
		}
		_iter_end_1abaa1719:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b2db4_BuiltinAppendCallExprModel>(_1c48b2db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5076_t))._field_Model, ._field_Elements=jule::Any(_5806_slice, &__jule_any_type77)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd72a1_callerCopySlice(jule::Ptr<_1c49ce024_Data>* _60625_dest, jule::Ptr<_1c49d0c4b_eval>* _60643_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _60658_fc, jule::Ptr<_1c49ce024_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1c49d12ce_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c49ce024_Data> _6116_src = _1c49edede_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6116_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c4a1c2d7_Slc> _6156_slc = _1c4a138e9_Slc((*(_6116_src))._field_Kind.ptr());;
	if ((_6156_slc != nullptr)) {
		if (((!((*(_6116_src))._field_Mutable)) && _1c4a11ac3_Mutable((*_6156_slc.alloc)._field_Elem.ptr()))) {
			_1c49d12ce_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1c4a1094b_Equal((*((*(_60625_dest))))._field_Kind, (*(_6116_src))._field_Kind)))) {
			_1c49d12ce_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_6116_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1c4a17cd8_Prim> _6253_destPrim = _1c4a12893_Prim((*(_1c4a138e9_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1c4a17cd8_Prim> _6263_prim = _1c4a12893_Prim((*(_6116_src))._field_Kind);;
		if (((((_6253_destPrim == nullptr) || (_6263_prim == nullptr)) || (!(_1c4a1b2a3_IsStr(_6263_prim.ptr())))) || (!(_1c4a19713_IsU8(_6253_destPrim.ptr()))))) {
			_1c49d12ce_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_6116_src))._field_Kind), &__jule_any_type4); __jule_collection; }));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b3c61_BuiltinCopyCallExprModel>(_1c48b3c61_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6116_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd76d0_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _64027_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _64042_fc, jule::Ptr<_1c49ce024_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1c49d12ce_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		_1c49d12ce_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1c49d12ce_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _6536_dest = _1c49edede_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6536_dest == nullptr)) {
			_case_begin_1abab7026:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4a138e9_Slc((*(_6536_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abab708c:;
			{
				return _21ddd72a1_callerCopySlice(&(_6536_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1abab5ed1:;
			{
				_1c49d12ce_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abab44a7:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _21ddd7a54_callerLenSlice(jule::Ptr<_1c49ce024_Data>* _66524_expr, jule::Ptr<_1c49ce024_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b31b1_BuiltinLenCallExprModel>(_1c48b31b1_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd7dc8_callerLenMap(jule::Ptr<_1c49ce024_Data>* _67322_expr, jule::Ptr<_1c49ce024_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b31b1_BuiltinLenCallExprModel>(_1c48b31b1_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd824c_callerLenArr(jule::Ptr<_1c49ce024_Data>* _68122_expr, jule::Ptr<_1c49ce024_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>((*(_1c4a13663_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd85c1_callerLenStr(jule::Ptr<_1c49ce024_Data>* _68822_expr, jule::Ptr<_1c49ce024_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1c49c7957_lenKind();
	if (_1c49ce95e_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_1dc547536_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b31b1_BuiltinLenCallExprModel>(_1c48b31b1_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd8945_callerLenComptime(jule::Ptr<_1c49ce024_Data>* _70127_d, jule::I64 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1dc5457ed_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd8d74_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _70826_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _70841_fc, jule::Ptr<_1c49ce024_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _7166_dest = _1c49edb9d_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7166_dest == nullptr)) {
			_case_begin_1abac4473:;
			{
				return nullptr;;
			}
		}
		else if ((_1c4a138e9_Slc((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac33b7:;
			{
				return _21ddd7a54_callerLenSlice(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1c4a13663_Arr((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac342d:;
			{
				return _21ddd824c_callerLenArr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1c4a14433_Map((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac3494:;
			{
				return _21ddd7dc8_callerLenMap(&(_7166_dest), _70863_d);;
			}
		}
		else if (((_1c4a12893_Prim((*(_7166_dest))._field_Kind.ptr()) != nullptr) && _1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_7166_dest))._field_Kind).ptr()))) {
			_case_begin_1abac350a:;
			{
				return _21ddd85c1_callerLenStr(&(_7166_dest), _70863_d);;
			}
		}
		else if ((_1c4a14bd6_comptimeStructFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac3571:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a14bd6_comptimeStructFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c4a15203_comptimeEnumFields((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac35d7:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a15203_comptimeEnumFields((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c4a15ec3_comptimeTypeInfos((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac4572:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a15ec3_comptimeTypeInfos((*(_7166_dest))._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1c4a15720_comptimeParams((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac45d8:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a15720_comptimeParams((*(_7166_dest))._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1c4a164e0_comptimeStatics((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac464e:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a164e0_comptimeStatics((*(_7166_dest))._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1c4a17029_comptimeFiles((*(_7166_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abac46b5:;
			{
				return _21ddd8945_callerLenComptime(_70863_d, (*(_1c4a17029_comptimeFiles((*(_7166_dest))._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1abac3351:;
			{
				_1c49d12ce_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1abac1827:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _21ddd91e8_callerCapSlice(jule::Ptr<_1c49ce024_Data>* _74624_expr, jule::Ptr<_1c49ce024_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1c49c7957_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1c48b34ad_BuiltinCapCallExprModel>(_1c48b34ad_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddd9627_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _75426_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _75441_fc, jule::Ptr<_1c49ce024_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _7626_dest = _1c49edede_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7626_dest == nullptr)) {
			_case_begin_1ac065bcd:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7626_dest))._field_Decl) {
			_case_begin_1ac065c44:;
			{
				_1c49d12ce_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4a138e9_Slc((*(_7626_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac065caa:;
			{
				return _21ddd91e8_callerCapSlice(&(_7626_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1ac064b88:;
			{
				_1c49d12ce_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac06315e:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _21ddd9b11_callerDeleteMap(jule::Ptr<_1c49d0c4b_eval>* _77725_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _77740_fc, jule::Ptr<_1c49ce024_Data>* _77762_expr, jule::Ptr<_1c49ce024_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1c49d12ce_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1c4a09bba_buildVoidData();
	jule::Ptr<_1c48b3887_BuiltinDeleteCallExprModel> _7826_model = jule::new_ptr<_1c48b3887_BuiltinDeleteCallExprModel>(_1c48b3887_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), ._field_Key=jule::Ptr<_1c49ce024_Data>(nullptr)});;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c49ce024_Data> _7867_key = _1c49edede_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7867_key == nullptr)) {
				_case_begin_1ac06ba2a:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7867_key))._field_Decl) {
				_case_begin_1ac06a672:;
				{
					_1c49d12ce_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ac06a60b:;
				{
					;
					jule::Ptr<_1c4a1020e_TypeKind> _7958_keyType = (*(_1c4a14433_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1c495891b_checkAssignType((*((*(_77725_e))))._field_s, false, &(_7958_keyType), &(_7867_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ac06a595:;
		};
		(*(_7826_model))._field_Key=_7867_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7826_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddda040_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _80629_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _80644_fc, jule::Ptr<_1c49ce024_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1c49d12ce_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _8146_dest = _1c49edede_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8146_dest == nullptr)) {
			_case_begin_1ac073746:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8146_dest))._field_Decl) {
			_case_begin_1ac0737ac:;
			{
				_1c49d12ce_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1c4a14433_Map((*(_8146_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ac073823:;
			{
				return _21ddd9b11_callerDeleteMap(_80629_e, _80644_fc, &(_8146_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1ac072701:;
			{
				_1c49d12ce_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac070bc7:;
	};
}



inline jule::Ptr<_1c49ce024_Data> _21ddda46e_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _82929_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _82944_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1c49d12ce_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _8386_expr = _1c49edede_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8386_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1c4a12893_Prim((*(_8386_expr))._field_Kind.ptr()) == nullptr) || (!(_1c4a1b01c_IsBool(_1c4a12893_Prim((*(_8386_expr))._field_Kind).ptr()))))) {
		_1c49d12ce_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c48b2534_BuiltinAssertCallExprModel> _8476_model = jule::new_ptr<_1c48b2534_BuiltinAssertCallExprModel>(_1c48b2534_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8386_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1c49ce024_Data> _8557_log = _1c49edede_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_8557_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1c49ce95e_IsConst(_8557_log.ptr()))) || (_1c4a12893_Prim((*(_8557_log))._field_Kind) == nullptr)) || (!(_1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_8557_log))._field_Kind).ptr()))))) {
			_1c49d12ce_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_8557_log))._field_Kind), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		(*(_8476_model))._field_Log=_1dc547536_ReadStr((*(_8557_log))._field_Constant.ptr());
	};
	jule::Ptr<_1c49ce024_Data> _8686_d = _1c4a09bba_buildVoidData();;
	(*(_8686_d))._field_Model=jule::Any(_8476_model, &__jule_any_type29);
	return _8686_d;;
}



inline jule::Ptr<_1c49ce024_Data> _21ddda89d_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _87340_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _87355_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _8826_d = _1c49ed1ca_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8826_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c48bb719_FnIns> _8862_f = _1c4a13b80_Fn((*(_8826_d))._field_Kind.ptr());;
	if ((_8862_f != nullptr)) {
		if (_1c48bcbd2_IsBuiltin(_8862_f)) {
			_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8862_f.alloc)._field_Generics.len() != (*((*_8862_f.alloc)._field_Decl))._field_Generics.len())) {
			_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1c48a6407_StructIns> _8972_s = _1c4a13e16_Struct((*(_8826_d))._field_Kind);;
	if (((_8972_s != nullptr) && ((*_8972_s.alloc)._field_Generics.len() != (*((*_8972_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1c4a14950_comptime((*(_8826_d))._field_Kind)) {
		_1c49d12ce_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_8826_d))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c4901496_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8826_d))._field_Kind));;
}



inline jule::Ptr<_1c49ce024_Data> _21dddb01e_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _90941_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _90956_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _9176_d = _1c49edede_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9176_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c49c7ca9_isGoodValueToInfer(&(_9176_d))))) {
		_1c49d12ce_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_9176_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	return _1c49017d7_buildComptimeValue(&(_9176_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21dddb44d_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _92938_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _92953_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1dc54537a_Const> _9336_constant = static__1dc5457ed_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd16da_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9336_constant, &__jule_any_type19), ._field_Decl=false, ._field_Constant=_9336_constant});;
}



inline jule::Ptr<_1c49ce024_Data> _21dddb87c_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _94138_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _94153_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48ee054_comptimeFile>(_1c48ee054_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _21dddbcab_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _95439_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _95454_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1c49d12ce_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4); __jule_collection; }));
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c48ec959_comptimeFiles>(_1c48ec959_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _21dddc1da_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _96743_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _96758_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ac09a0db:;
			{
				goto _match_end_1ac09c341;
			}
		}
		else {
			_case_begin_1ac09c3a7:;
			{
				_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1c49d1642_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ac09c341:;
	};
	jule::Ptr<_1c486c19d_Token> _9886_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1c48883c8_IdentExpr>(&__jule_any_type44)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0)) {
			_case_begin_1ac09e695:;
			{
				goto _match_end_1ac09e8d7;
			}
		}
		else {
			_case_begin_1ac09e93c:;
			{
				_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ac09e8d7:;
	};
	jule::Ptr<_1c4913244_scopeChecker> _9976_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1c4913244_scopeChecker>((jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data0);;
	jule::Ptr<_1c4a0e41c_TypeAlias> _9986_alias = jule::new_ptr<_1c4a0e41c_TypeAlias>(_1c4a0e41c_TypeAlias{._field_Scope=(*(_9976_sc))._field_tree, ._field_Public=_1c494a27b_IsPub((*(_9886_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9886_ident, ._field_Ident=(*_9886_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1c4a173d1_TypeSymbol>(_1c4a173d1_TypeSymbol{._field_Decl=jule::Ptr<_1c4882779_TypeDecl>(nullptr), ._field_Kind=jule::Ptr<_1c4a1020e_TypeKind>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>(nullptr)});;
	jule::Ptr<_1c49ce024_Data> _10086_t = _1c49ed51b_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10086_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10086_t))._field_Decl) {
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10086_t))._field_Kind;
	} else {
		jule::Ptr<_1c48e3ae8_comptimeTypeInfo> _10157_cti = _1c4a16259_comptimeTypeInfo((*(_10086_t))._field_Kind.ptr());;
		if ((_10157_cti == nullptr)) {
			_1c49d12ce_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1c49d1642_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9986_alias))._field_Kind))._field_Kind=(*(_10157_cti))._field_base;
	};
	_1c4918128_checkTypeAlias(_9976_sc, &(_9986_alias));
	return _1c4a09bba_buildVoidData();;
}



inline jule::Ptr<_1c49ce024_Data> _21dddc619_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _102735_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _102750_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<_1c49ce024_Data> _10286_result = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd1322_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10286_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _10406_d = _1c49ed1ca_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10406_d == nullptr)) {
		return _10286_result;;
	};
	if ((!(_1c4a2c9ce_validTypeForXof(&((*(_10406_d))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_10406_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10286_result))._field_Model=jule::Any(jule::new_ptr<_1c48b47de_SizeofExprModel>(_1c48b47de_SizeofExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type117);
	return _10286_result;;
}



inline jule::Ptr<_1c49ce024_Data> _21dddca48_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _105236_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _105251_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<_1c49ce024_Data> _10536_result = jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd1322_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4); __jule_collection; }));
		return _10536_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _10656_d = _1c49ed1ca_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10656_d == nullptr)) {
		return _10536_result;;
	};
	if ((!(_1c4a2c9ce_validTypeForXof(&((*(_10656_d))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1c4a1060a_Str((*(_10656_d))._field_Kind.ptr()), &__jule_any_type4); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4); __jule_collection; }));
	};
	(*(_10536_result))._field_Model=jule::Any(jule::new_ptr<_1c48b49cb_AlignofExprModel>(_1c48b49cb_AlignofExprModel{._field_Expr=(*(_10656_d))._field_Model}), &__jule_any_type118);
	return _10536_result;;
}



inline jule::Ptr<_1c49ce024_Data> _21dddce77_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _107733_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _107748_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _10866_d = _1c49edede_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10866_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4a12376_PerformsRC((*(_10866_d))._field_Kind.ptr())))) {
		_1c49d12ce_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c49ce024_Data> _10956_result = _1c4a09bba_buildVoidData();;
	(*(_10956_result))._field_Model=jule::Any(jule::new_ptr<_1c48b5746_FreeExprModel>(_1c48b5746_FreeExprModel{._field_Expr=(*(_10866_d))._field_Model}), &__jule_any_type32);
	return _10956_result;;
}



inline jule::Ptr<_1c49ce024_Data> _21dddd3a6_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _110045_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _110060_fc, jule::Ptr<_1c49ce024_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1c49d12ce_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4); __jule_collection; }));
	};
	jule::Ptr<_1c49ce024_Data> _11096_d = _1c49edede_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11096_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1c4a2b989_isBuiltinStrConvertable(&((*(_11096_d))._field_Kind))))) {
		_1c49d12ce_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1c49ce024_Data>(_1c49ce024_Data{._field_untyped=false, ._field_Kind=_21ddd0a08_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1c48b5070_IntegratedToStrExprModel>(_1c48b5070_IntegratedToStrExprModel{._field_Expr=(*(_11096_d))._field_Model}), &__jule_any_type119), ._field_Decl=false, ._field_Constant=jule::Ptr<_1dc54537a_Const>(nullptr)});;
}



inline jule::Ptr<_1c49ce024_Data> _21dddd7d5_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _112744_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _112759_fc, jule::Ptr<_1c49ce024_Data>* _112781_d) {
	if ((!(_1c49d1cc4_isUnsafe((*(_112744_e)).ptr())))) {
		_1c49d12ce_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1c49d12ce_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _11376_argd = _1c49edede_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11376_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1c4a12893_Prim((*(_11376_argd))._field_Kind.ptr()) == nullptr) || (!(_1c4a1b2a3_IsStr(_1c4a12893_Prim((*(_11376_argd))._field_Kind).ptr()))))) {
		_1c49d12ce_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type4); (*it++) = jule::Any(_1c4a1060a_Str((*(_11376_argd))._field_Kind), &__jule_any_type4); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1c49ce95e_IsConst(_11376_argd.ptr()))) || (!(_1dc549b32_IsStr((*(_11376_argd))._field_Constant.ptr()))))) {
		_1c49d12ce_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c49ce024_Data> _11526_r = _1c4a09bba_buildVoidData();;
	jule::Ptr<_1c48bb719_FnIns> _11546_f = _1c4a13b80_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11546_f))._field_Generics.len() > 0LL)) {
		(*(_11526_r))._field_Kind=(*((*(_11546_f))._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1c48b5449_BackendEmitExprModel> _11596_model = jule::new_ptr<_1c48b5449_BackendEmitExprModel>(_1c48b5449_BackendEmitExprModel{._field_Code=_1dc547536_ReadStr((*(_11376_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11596_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1ac0c9549:;
			if (it != expr_end) {
				jule::Ptr<_1c4886aad_Expr> _116515_arg = *it;
				{
					_11376_argd=_1c49ed51b_eval1((*(_112744_e)), _116515_arg);
					if ((_11376_argd == nullptr)) {
						return nullptr;;
					};
					(*_11596_model.alloc)._field_Exprs=jule::append((*_11596_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_11376_argd))._field_Model; __jule_collection; }));
				}
				_iter_next_1ac0c9549:;
				++it;
				goto _iter_begin_1ac0c9549;
			}
			_iter_end_1ac0c9549:;
		};
	};
	(*_11526_r.alloc)._field_Model=jule::Any(_11596_model, &__jule_any_type24);
	return _11526_r;;
}



inline jule::Ptr<_1c49ce024_Data> _21ddddc14_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _117834_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _117849_fc, jule::Ptr<_1c49ce024_Data>* _117871_d) {
	(*(_117871_d))=_21ddd559b_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1c48b1401_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1c49ce024_Data> _21ddde143_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _118736_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _118751_fc, jule::Ptr<_1c49ce024_Data>* _118773_d) {
	(*(_118773_d))=_21ddd59ca_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1c48b17ca_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1c5635e77_FileInfo> _1c5679927_ParseFile(jule::Ptr<_1c4872934_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1c5635e77_FileInfo> _276_finf = jule::new_ptr<_1c5635e77_FileInfo>(_1c5635e77_FileInfo{._field_Ast=jule::Ptr<_1c48807bb_AST>(nullptr), ._field_Errors=jule::Slice<_205a977d7_Log>(nullptr)});;
	({
		__jule_tuple_x_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_assign_result = _1c5679ebb_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1c48807bb_AST__jule_tuple_s_205a977d7_Log _1c5679ebb_parseFileset(jule::Ptr<_1c4872934_File> _5521_f) {
	__jule_tuple_x_1c48807bb_AST__jule_tuple_s_205a977d7_Log __jule_func_result;
	jule::Ptr<_1c569ab02_parser> _566_p = jule::new_ptr<_1c569ab02_parser>(_1c569ab02_parser{._field_ast=jule::Ptr<_1c48807bb_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1c4881b96_Directive>>(nullptr), ._field_errors=jule::Slice<_205a977d7_Log>(nullptr), ._field_ep=jule::Ptr<_1c5689edc_exprBuilder>(nullptr)});;
	_1c56ab98c_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1c489279a_ScopeTree> _1c567a98e_newScope(void) {
	return jule::new_ptr<_1c489279a_ScopeTree>(_1c489279a_ScopeTree{._field_Parent=jule::Ptr<_1c489279a_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1c489213a_Stmt>(nullptr), ._field_End=jule::Ptr<_1c486c19d_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1c567ace1_isSt(jule::Ptr<_1c486c19d_Token> _499_current, jule::Ptr<_1c486c19d_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U64>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c567b165_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c486c19d_Token> _613_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_613_prev))._field_Id == static_cast<jule::U64>(17LLU)) || (_1c486cbe8_IsBinOp((*_613_prev.alloc)._field_Id) && ((*_613_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c567b52d_nextStPos(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _696_braceN = 0LL;;
	jule::I64 _706_i = _6833_start;;
	for (; (_706_i < (*(_6815_tokens)).len()); (_706_i)++) {
		{
			jule::Bool _727_ok = false;;
			jule::Bool _737_terminated = false;;
			jule::Ptr<_1c486c19d_Token> _743_tok = (*(_6815_tokens))[_706_i];;
			{
				auto &_match_expr{ (*(_743_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac157286:;
					{
						if (((_696_braceN == 0LL) && (_706_i > _6833_start))) {
							if ((!(_1c567b165_prevIsIncompleteExpr(_6815_tokens, &(_706_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c567ace1_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
									_727_ok = __jule_assign_result.__jule_result_arg0;
									_737_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_727_ok) {
									goto _julec_label_1ac15ce29;
								};
							};
						};
						(_696_braceN)++;
						goto _iter_next_1ac155d45;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac1574ea:;
					{
						(_696_braceN)--;
						if (((_696_braceN == 0LL) && ((_706_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c567ace1_isSt((*(_6815_tokens))[(_706_i + 1LL)], _743_tok);
								_727_ok = __jule_assign_result.__jule_result_arg0;
								_737_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_727_ok) {
								(_706_i)++;
								goto _julec_label_1ac15ce29;
							};
						};
						goto _iter_next_1ac155d45;
					}
				}
				_match_end_1ac157473:;
			};
			if ((_696_braceN != 0LL)) {
				goto _iter_next_1ac155d45;
			};
			if ((_706_i > _6833_start)) {
				if (_1c567b165_prevIsIncompleteExpr(_6815_tokens, &(_706_i))) {
					goto _iter_next_1ac155d45;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c567ace1_isSt(_743_tok, (*(_6815_tokens))[(_706_i - 1LL)]);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c567ace1_isSt(_743_tok, _743_tok);
					_727_ok = __jule_assign_result.__jule_result_arg0;
					_737_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_727_ok))) {
				goto _iter_next_1ac155d45;
			};
			_julec_label_1ac15ce29:;
			if (_737_terminated) {
				(_706_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _706_i;
			__jule_func_result.__jule_result_arg1 = _737_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ac155d45:;
	}
	_iter_end_1ac155d45:;;
	__jule_func_result.__jule_result_arg0 = _706_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_bool _1c567b8a2_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1c486c19d_Token>> _13028_tokens) {
	__jule_tuple_sx_1c486c19d_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1312_start = (*(_13016_i));;
	jule::Bool _1326_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c567b52d_nextStPos(&(_13028_tokens), _1312_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1326_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c486c19d_Token>> _1346_stTokens = _13028_tokens.slice(_1312_start, (*(_13016_i)));;
	if (_1326_terminated) {
		if ((_1346_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1c567b8a2_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1346_stTokens).mut_slice(0LL, (_1346_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1346_stTokens;
	__jule_func_result.__jule_result_arg1 = _1326_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _1c567c089_splitStmts(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1c567bbd2_stmt>> _1526_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c567bbd2_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c567bbd2_stmt>(nullptr); __jule_collection; });;
	jule::I64 _1536_pos = 0LL;;
	while ((_1536_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c486c19d_Token>> _1557_stmt;
			jule::Bool _15513_terminated;
			({
				__jule_tuple_sx_1c486c19d_Token__jule_tuple_bool __jule_assign_result = _1c567b8a2_skipSt(&(_1536_pos), (*(_15120_tokens)));
				_1557_stmt = __jule_assign_result.__jule_result_arg0;
				_15513_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1c567bbd2_stmt>> &__jule_push_dest = _1526_stmts; __jule_push_dest.push(jule::new_ptr<_1c567bbd2_stmt>(_1c567bbd2_stmt{._field_tokens=_1557_stmt, ._field_terminated=_15513_terminated})); };
		}
	_iter_next_1ac160bb8:;
	}
	_iter_end_1ac160bb8:;;
	return _1526_stmts;;
}



inline jule::Bool _1c56956e0_isTypeOp(jule::U64* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U64>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U64>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1c56959ed_isTypeRange(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _90021_tokens) {
	jule::Bool _9016_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac2359e6:;
		if (it != expr_end) {
			jule::I64 _9026_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _9029_token = *it;
			{
				if (((*(_9029_token))._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_9016_op) {
						return true;;
					};
					jule::I64 _9078_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c486c19d_Token>> _9088_lTokens = (*(_90021_tokens)).slice(_9026_i);;
					{
						auto expr = &(_9088_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac237465:;
						if (it != expr_end) {
							jule::Ptr<_1c486c19d_Token> _90911_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90911_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1ac237c07:;
										{
											(_9078_rangeN)++;
											goto _iter_next_1ac237465;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1ac2380d1:;
										{
											(_9078_rangeN)--;
											goto _iter_next_1ac237465;
										}
									}
									_match_end_1ac237ee3:;
								};
								if ((_9078_rangeN == 0LL)) {
									return _1c56956e0_isTypeOp(&((*(_90911_lToken))._field_Id));;
								};
							}
							_iter_next_1ac237465:;
							++it;
							goto _iter_begin_1ac237465;
						}
						_iter_end_1ac237465:;
					};
					return true;;
				};
				if ((!(_1c56956e0_isTypeOp(&((*_9029_token.alloc)._field_Id))))) {
					return false;;
				};
				_9016_op=true;
			}
			_iter_next_1ac2359e6:;
			++it;
			_9026_i++;
			goto _iter_begin_1ac2359e6;
		}
		_iter_end_1ac2359e6:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c5695cb7_getBlockExpr(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _93322_tokens) {
	jule::I64 _9346_braceN = 0LL;;
	jule::I64 _9356_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac23670b:;
		if (it != expr_end) {
			jule::I64 _9366_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _9369_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9369_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1ac23ac71:;
						{
							if (((((*(_93322_tokens)).len() - _9366_i) > 1LL) && ((*((*(_93322_tokens))[(_9366_i + 1LL)]))._field_Id == static_cast<jule::U64>(72LLU)))) {
								(_9356_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac23ad09:;
						{
							if (((_9346_braceN > 0LL) || (_9356_skipToNextBraceClose > 0LL))) {
								if ((_9356_skipToNextBraceClose > 0LL)) {
									(_9356_skipToNextBraceClose)--;
								};
								(_9346_braceN)++;
								goto _match_end_1ac23abb6;
							};
							return (*(_93322_tokens)).slice(0LL, _9366_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1ac23ad70:;
						{
							(_9346_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1ac23add6:;
						{
							(_9346_braceN)--;
						}
					}
					_match_end_1ac23abb6:;
				};
			}
			_iter_next_1ac23670b:;
			++it;
			_9366_i++;
			goto _iter_begin_1ac23670b;
		}
		_iter_end_1ac23670b:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token _1c5696180_splitDelim(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _96520_tokens, jule::U64 _96538_delim) {
	__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_func_result;
	jule::I64 _9666_func = -1LL;;
	jule::I64 _9676_rangeN = 0LL;;
	jule::I64 _9686_i = 0LL;;
	for (; (_9686_i < (*(_96520_tokens)).len()); (_9686_i)++) {
		{
			jule::Ptr<_1c486c19d_Token> _9703_token = (*(_96520_tokens))[_9686_i];;
			{
				auto &_match_expr{ (*(_9703_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(29LLU)) {
					_case_begin_1ac2408ad:;
					{
						_9666_func=_9676_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac240924:;
					{
						(_9676_rangeN)++;
						goto _iter_next_1ac23e109;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac24098a:;
					{
						(_9676_rangeN)--;
						if ((_9666_func == _9676_rangeN)) {
							_9666_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9686_i) > 1LL) && ((*((*(_96520_tokens))[(_9686_i + 1LL)]))._field_Id == static_cast<jule::U64>(8LLU)))) {
								(_9686_i)++;
								goto _iter_next_1ac23e109;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1ac240a01:;
					{
						(_9676_rangeN)--;
					}
				}
				_match_end_1ac240858:;
			};
			if ((((*(_9703_token))._field_Id == _96538_delim) && (_9676_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _9948_l = (*(_96520_tokens)).slice(0LL, _9686_i);;
				jule::Slice<jule::Ptr<_1c486c19d_Token>> _9958_r = (*(_96520_tokens)).slice((_9686_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9948_l;
				__jule_func_result.__jule_result_arg1 = _9958_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac23e109:;
	}
	_iter_end_1ac23e109:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1c5696449_findLowestPrecOp(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _100422_tokens) {
	jule::U8 _10096_prec = 255LLU;;
	jule::I64 _10106_precPos = -1LL;;
	jule::I64 _10126_braceN = 0LL;;
	jule::Bool _10136_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac245bc1:;
		if (it != expr_end) {
			jule::I64 _10146_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> *_10149_token = it;
			{
				{
					auto &_match_expr{ (*((*(_10149_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1ac24695d:;
						{
							_10136_skipToNextBraceOpen=false;
							goto _case_begin_1ac2469e6;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1ac2469e6:;
						{
							(_10126_braceN)++;
							goto _iter_next_1ac245bc1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1ac246a5c:;
						{
							(_10126_braceN)--;
							goto _iter_next_1ac245bc1;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1ac246ac3:;
						{
							_10136_skipToNextBraceOpen=true;
							goto _iter_next_1ac245bc1;
						}
					}
					_match_end_1ac2468a3:;
				};
				{
					
					if (_10136_skipToNextBraceOpen) {
						_case_begin_1ac2482de:;
						{
							goto _iter_next_1ac245bc1;
						}
					}
					else if ((_10146_i == 0LL)) {
						_case_begin_1ac248355:;
						{
							goto _iter_next_1ac245bc1;
						}
					}
					else if ((_10126_braceN > 0LL)) {
						_case_begin_1ac2483bb:;
						{
							goto _iter_next_1ac245bc1;
						}
					}
					else if ((!(_1c486cbe8_IsBinOp((*((*(_10149_token))))._field_Id)))) {
						_case_begin_1ac248432:;
						{
							goto _iter_next_1ac245bc1;
						}
					}
					_match_end_1ac248157:;
				};
				jule::Ptr<_1c486c19d_Token> _10433_left = (*(_100422_tokens))[(_10146_i - 1LL)];;
				if ((_1c486c8da_IsUnaryOp((*(_10433_left))._field_Id) || ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ac245bc1;
				};
				if (((_10146_i > 1LL) && ((*_10433_left.alloc)._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1c486c19d_Token> _10514_lleft = (*(_100422_tokens))[(_10146_i - 2LL)];;
					if (((*(_10514_lleft))._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*((*(_10149_token))))._field_Id == static_cast<jule::U64>(65LLU)) || ((*(*(_10149_token)).alloc)._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1ac245bc1;
						};
					};
				};
				jule::U8 _10603_p = _1c486c555_Prec((*(_10149_token)));;
				if (((_10603_p != 0LLU) && (_10603_p <= _10096_prec))) {
					_10096_prec=_10603_p;
					_10106_precPos=_10146_i;
				};
			}
			_iter_next_1ac245bc1:;
			++it;
			_10146_i++;
			goto _iter_begin_1ac245bc1;
		}
		_iter_end_1ac245bc1:;
	};
	return _10106_precPos;;
}



inline jule::Ptr<_1c48883c8_IdentExpr> _1c5696713_buildIdentExpr(jule::Ptr<_1c486c19d_Token>* _106924_token) {
	return jule::new_ptr<_1c48883c8_IdentExpr>(_1c48883c8_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_int _1c56969cc_getRangeExprTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _107728_tokens) {
	__jule_tuple_sx_1c486c19d_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _10786_rangeN = 0LL;;
	jule::I64 _10796_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10796_i >= 0LL); (_10796_i)--) {
		{
			jule::Ptr<_1c486c19d_Token> _10813_tok = (*(_107728_tokens))[_10796_i];;
			{
				auto &_match_expr{ (*(_10813_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1ac250307:;
					{
						(_10786_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1ac250615:;
					{
						(_10786_rangeN)--;
					}
				}
				_match_end_1ac2505b0:;
			};
			if ((_10786_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10796_i);
				__jule_func_result.__jule_result_arg1 = _10786_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ac24e89a:;
	}
	_iter_end_1ac24e89a:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10786_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1c5696da6_isAnonFnHead(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ac252084:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U64>(29LLU)))) {
					goto _match_end_1ac2524b3;
				};
				goto _case_begin_1ac2525e5;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ac2525e5:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U64>(73LLU))) {
					goto _match_end_1ac2524b3;
				};
				return true;;
			}
		}
		_match_end_1ac2524b3:;
	};
	return false;;
}



inline jule::Bool _1c5697aaa_checkAssignTokens(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c4871966_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I64 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aace6993:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aace719c:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aace7554:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1aace7466:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1aace86dc:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1aace8775:;
						{
							goto _iter_next_1aace6993;
						}
					}
					else if (_1c4871ee9_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1aace87db:;
						{
							return true;;
						}
					}
					_match_end_1aace8687:;
				};
			}
			_iter_next_1aace6993:;
			++it;
			goto _iter_begin_1aace6993;
		}
		_iter_end_1aace6993:;
	};
	return false;;
}



inline _205a977d7_Log _1c5698c76_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1c4872934_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_205a97c49_Logf(_5143_fmt, _5156_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1c486c19d_Token>> _1c56992a4_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1c486c19d_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c486c19d_Token> _732_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_732_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _786_rangeN = 1LL;;
	jule::I64 _792_start = (*(_6915_i));;
	for (; ((_786_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c486c19d_Token> _813_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_813_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1aaced77a:;
					{
						(_786_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1aacedacc:;
					{
						(_786_rangeN)--;
					}
				}
				_match_end_1aaceda55:;
			};
		}
	_iter_next_1aacecb86:;
	}
	_iter_end_1aacecb86:;;
	return (*(_6959_tokens)).slice(_792_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token _1c569956d_rangeLast(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c486c19d_Token__jule_tuple_sx_1c486c19d_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1032_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1032_first != static_cast<jule::U64>(73LLU)) && (_1032_first != static_cast<jule::U64>(76LLU))) && (_1032_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1096_braceN = 0LL;;
	jule::I64 _1106_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1106_i >= 0LL); (_1106_i)--) {
		{
			jule::Ptr<_1c486c19d_Token> _1123_token = (*(_9919_tokens))[_1106_i];;
			{
				auto &_match_expr{ (*(_1123_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1aad02a59:;
					{
						(_1096_braceN)++;
						goto _iter_next_1aad01d22;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1aad02d67:;
					{
						(_1096_braceN)--;
					}
				}
				_match_end_1aad02d12:;
			};
			if ((_1096_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1106_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1106_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1aad01d22:;
	}
	_iter_end_1aad01d22:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log _1c5699a24_parts(jule::Slice<jule::Ptr<_1c486c19d_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c486c19d_Token__jule_tuple_s_205a977d7_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _1416_rangeN = 0LL;;
	jule::I64 _1426_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aad05ba0:;
		if (it != expr_end) {
			jule::I64 _1436_i = it - expr->begin();
			jule::Ptr<_1c486c19d_Token> _1439_token = *it;
			{
				{
					auto &_match_expr{ (*(_1439_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1aad06bc3:;
						{
							(_1416_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1aad06c4a:;
						{
							(_1416_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1aad06cb1:;
						{
							if ((_1416_rangeN > 0LL)) {
								goto _iter_next_1aad05ba0;
							};
							if ((_13746_exprMust && ((_1436_i - _1426_last) <= 0LL))) {
								_205a977d7_Log _1545_err = _1c5698c76_makeErr((*(_1439_token))._field_Row, (*_1439_token.alloc)._field_Column, &((*_1439_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_205a977d7_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1545_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last, _1436_i)); };
							_1426_last=(_1436_i + 1LL);
						}
					}
					_match_end_1aad06b18:;
				};
			}
			_iter_next_1aad05ba0:;
			++it;
			_1436_i++;
			goto _iter_begin_1aad05ba0;
		}
		_iter_end_1aad05ba0:;
	};
	if ((_1426_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c486c19d_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1426_last)); };
	};
	return __jule_func_result;;
}



inline jule::U64 _1c5699caa_getCloseOfBrace(jule::U64 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1aad0a237:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1aad0671c:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1aad0a2c0:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1aad07e8d:;
			{
				return _16720_left;;
			}
		}
		_match_end_1aad06640:;
	};
}



inline _205a977d7_Log _1c569a1d9_compilerErr(jule::Ptr<_1c486c19d_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_205a97c49_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1c4873979_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1c569a580_pushSuggestion(_205a977d7_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_205a97c49_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1c4882779_TypeDecl> _1c56ac493_buildVoidType(void) {
	return jule::new_ptr<_1c4882779_TypeDecl>(_1c4882779_TypeDecl{._field_Token=jule::Ptr<_1c486c19d_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1c3ac9a6b_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1ac70c918:;
			{
				__jule_func_result.__jule_result_arg0=_205a9a961_IsWindows(_205b5cacd_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1ac70c97e:;
			{
				__jule_func_result.__jule_result_arg0=_205a9ac6e_IsDarwin(_205b5cacd_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1ac70c64e:;
			{
				__jule_func_result.__jule_result_arg0=_205a9b038_IsLinux(_205b5cacd_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1ac70c6b5:;
			{
				__jule_func_result.__jule_result_arg0=_205a9bb93_IsUnix(_205b5cacd_Os);
			}
		}
		else {
			_case_begin_1ac70c0bb:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac70c53e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1c4c826c3_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1ac70eae6:;
			{
				__jule_func_result.__jule_result_arg0=_205a9b379_IsI386(_205b5cd86_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1ac70eb5c:;
			{
				__jule_func_result.__jule_result_arg0=_205a9b610_IsAmd64(_205b5cd86_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1ac70e82c:;
			{
				__jule_func_result.__jule_result_arg0=_205a9b8c9_IsArm64(_205b5cd86_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1ac70e893:;
			{
				__jule_func_result.__jule_result_arg0=_205a9c2ae_Is64Bit(_205b5cd86_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1ac70e909:;
			{
				__jule_func_result.__jule_result_arg0=_205a9c06c_Is32Bit(_205b5cd86_Arch);
			}
		}
		else {
			_case_begin_1ac70e299:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ac70e71c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1c4c8297b_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_2059eec06_Base(_5029_p);
	jule::I64 _522_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_522_n - _2059ee673_Ext(_5029_p).len()));;
	jule::Str _586_a1 = jule::Str();;
	jule::Str _616_a2 = jule::Str();;
	jule::I64 _646_i = _2059e6d52_FindLastByte(_5029_p, '_');;
	if ((_646_i == -1LL)) {
		jule::Bool _677_ok;
		jule::Bool _6715_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c3ac9a6b_checkOs(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6715_exist) {
			return _677_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4c826c3_checkArch(_5029_p);
			_677_ok = __jule_assign_result.__jule_result_arg0;
			_6715_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6715_exist)) || _677_ok);;
	};
	if (((_646_i + 1LL) >= _522_n)) {
		return true;;
	};
	_586_a1=_5029_p.slice((_646_i + 1LL));
	(_5029_p).mut_slice(0LL, _646_i);;
	_646_i=_2059e6d52_FindLastByte(_5029_p, '_');
	if ((_646_i != -1LL)) {
		_616_a2=_5029_p.slice((_646_i + 1LL));
	};
	if ((_616_a2).empty()) {
		jule::Bool _887_ok;
		jule::Bool _8815_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c3ac9a6b_checkOs(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8815_exist) {
			return _887_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4c826c3_checkArch(_586_a1);
			_887_ok = __jule_assign_result.__jule_result_arg0;
			_8815_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8815_exist)) || _887_ok);;
	};
	jule::Bool _966_ok;
	jule::Bool _9614_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c4c826c3_checkArch(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9614_exist) {
		if ((!(_966_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c3ac9a6b_checkOs(_616_a2);
			_966_ok = __jule_assign_result.__jule_result_arg0;
			_9614_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9614_exist)) || _966_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1c3ac9a6b_checkOs(_586_a1);
		_966_ok = __jule_assign_result.__jule_result_arg0;
		_9614_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9614_exist)) || _966_ok);;
}



inline void _1c4c83c13_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_205b5cacd_Os); };
	if (_205a9bb93_IsUnix(_205b5cacd_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1c4c83e88_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_205b5cd86_Arch); };
	if (_205a9c2ae_Is64Bit(_205b5cd86_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_205a9c06c_Is32Bit(_205b5cd86_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1c4c84274_initVars(jule::Slice<jule::Str>* _5518_vars, _1c4c838e4_CompileInfo* _5532_info) {
	_1c4c83c13_setOsVars(_5518_vars);
	_1c4c83e88_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac71a2a5:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac71a140:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1ac71a0da:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac71a1a6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac71adcc:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac71ae43:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1ac71b5e7:;
	};
}



inline jule::Slice<jule::U8> _1c56b1563_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__239656ac1_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_205b5ba33_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _205a977d7_Log _1c56b1871_flatCompilerErr(jule::Str _4120_text) {
	return _205a977d7_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_4120_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1c48b8738_Fn> _1c4754ae1_RuntimeFindFn(jule::Ptr<_1c492cd1e_ImportInfo>* _1123_runtime, jule::Str _1145_ident) {
	;
	jule::Ptr<_1c48b8738_Fn> _136_f = _1c492e42a_FindFn((*(_1123_runtime)).ptr(), _1145_ident, false);;
	if ((_136_f == nullptr)) {
		jule::outln(_1145_ident);
		jule::panic(jule::Str::lit("runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 103) + jule::Str("\nlocation: julec/obj/runtime.jule:16:3"));;
	};
	return _136_f;;
}



inline void _1c56b61d3_pushPasses(jule::Ptr<_1c4930c45_Package>* _12120_p, jule::Slice<jule::Str>* _12144_passes) {
	{
		auto expr = &((*((*(_12120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac75c946:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _12214_f = *it;
			{
				_julec_label_1ac75d073:;
				{
					auto expr = &((*(_12214_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac75d4c4:;
					if (it != expr_end) {
						_1c48c0db1_Pass _12410_pass = *it;
						{
							if ((_12410_pass._field_Text).empty()) {
								goto _iter_next_1ac75d4c4;
							};
							{
								auto expr = _12144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ac75e0c9:;
								if (it != expr_end) {
									jule::Str _12811_cpass = *it;
									{
										if ((_12811_cpass == _12410_pass._field_Text)) {
											goto _iter_next_1ac75d4c4;
										};
									}
									_iter_next_1ac75e0c9:;
									++it;
									goto _iter_begin_1ac75e0c9;
								}
								_iter_end_1ac75e0c9:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12144_passes)); __jule_push_dest.push(_12410_pass._field_Text); };
						}
						_iter_next_1ac75d4c4:;
						++it;
						goto _iter_begin_1ac75d4c4;
					}
					_iter_end_1ac75d4c4:;
				};
			}
			_iter_next_1ac75c946:;
			++it;
			goto _iter_begin_1ac75c946;
		}
		_iter_end_1ac75c946:;
	};
}



inline jule::Slice<jule::Str> _1c56b659b_getAllUniquePasses(jule::Ptr<_1c4930c45_Package>* _13828_pkg, jule::Slice<jule::Ptr<_1c492cd1e_ImportInfo>> _13853_uses) {
	jule::Slice<jule::Str> _13910_passes = nullptr;;
	_1c56b61d3_pushPasses(_13828_pkg, &(_13910_passes));
	{
		auto expr = &(_13853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac76066e:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _14214_u = *it;
			{
				if ((!((*(_14214_u))._field_Binded))) {
					_1c56b61d3_pushPasses(&((*_14214_u.alloc)._field_Package), &(_13910_passes));
				};
			}
			_iter_next_1ac76066e:;
			++it;
			goto _iter_begin_1ac76066e;
		}
		_iter_end_1ac76066e:;
	};
	return _13910_passes;;
}



inline _1c4c838e4_CompileInfo _1c56b67aa_buildCompileInfo(void) {
	_1c4c838e4_CompileInfo _1526_info = _1c4c838e4_CompileInfo{._field_Prod=_205b65025_Production, ._field_Test=_205b64662_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _205b627b4_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ac761a5a:;
			{
				_1526_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ac761bc0:;
			{
				_1526_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1ac761b48:;
	};
	{
		auto &_match_expr{ _205b63dc0_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ac761c58:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ac7627e7:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ac762088:;
			{
				_1526_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1ac7629a1:;
	};
	return _1526_info;;
}



inline void _1c56b6a63_pushRuntimeToAST(jule::Ptr<_1c48807bb_AST>* _17726_f) {
	jule::Ptr<_1c489a880_UseDecl> _1786_decl = jule::new_ptr<_1c489a880_UseDecl>(_1c489a880_UseDecl{._field_Token=nullptr, ._field_LinkPath=jule::Str::lit("std::runtime", 12), ._field_Alias=jule::Str(), ._field_Full=false, ._field_Selected=nullptr, ._field_Binded=false, ._field_Std=true});;
	{ jule::Slice<jule::Ptr<_1c489a880_UseDecl>> &__jule_push_dest = (*((*(_17726_f))))._field_UseDecls; __jule_push_dest.push(_1786_decl); };
	if (((*((*(_17726_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17726_f))))._field_UseDecls[((*((*(_17726_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17726_f))))._field_UseDecls[0LL];
		(*((*(_17726_f))))._field_UseDecls[0LL]=_1786_decl;
	};
}



inline void _1c56b725b_IterPackages(jule::Ptr<_1c56b4830_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1c4930c45_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac782bbe:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1ac782bbe:;
			++it;
			goto _iter_begin_1ac782bbe;
		}
		_iter_end_1ac782bbe:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1c56b758b_IterFiles(jule::Ptr<_1c4930c45_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1c49c8bab_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78430d:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _1714_file = *it;
			{
				_1634_f(&(_1714_file));
			}
			_iter_next_1ac78430d:;
			++it;
			goto _iter_begin_1ac78430d;
		}
		_iter_end_1ac78430d:;
	};
}



inline void _1c56b7932_iterTraitInheritMethods(jule::Ptr<_1c48cc1b9_Trait>* _2233_base, jule::Ptr<_1c48cc1b9_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _2263_f) {
	_1c56b7d50_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac785441:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _2414_m = *it;
			{
				if ((!(_1c56c307a_ContainsTraitMethod(_2233_base, &((*(_2414_m))._field_Ident))))) {
					_2263_f(&(_2414_m));
				};
			}
			_iter_next_1ac785441:;
			++it;
			goto _iter_begin_1ac785441;
		}
		_iter_end_1ac785441:;
	};
}



inline void _1c56b7d50_iterTraitInheritMethods1(jule::Ptr<_1c48cc1b9_Trait>* _3134_base, jule::Ptr<_1c48cc1b9_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7867b6:;
		if (it != expr_end) {
			jule::Ptr<_1c4a173d1_TypeSymbol> _3214_inh = *it;
			{
				jule::Ptr<_1c48cc1b9_Trait> _337_t2 = _1c4a1419c_Trait((*(_3214_inh))._field_Kind.ptr());;
				_1c56b7932_iterTraitInheritMethods(_3134_base, &(_337_t2), _3164_f);
			}
			_iter_next_1ac7867b6:;
			++it;
			goto _iter_begin_1ac7867b6;
		}
		_iter_end_1ac7867b6:;
	};
}



inline void _1c56b8108_IterTraitMethods(jule::Ptr<_1c48cc1b9_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1c48b8738_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac787c4b:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _4014_m = *it;
			{
				_3937_f(&(_4014_m));
			}
			_iter_next_1ac787c4b:;
			++it;
			goto _iter_begin_1ac787c4b;
		}
		_iter_end_1ac787c4b:;
	};
	_1c56b7d50_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1c56c0495_IsForwarded(jule::Ptr<_1c490ac86_Scope>* _2417_s) {
	jule::Any _252_last = (*((*(_2417_s))))._field_Stmts[((*((*(_2417_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _252_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ac7b005e:;
			{
				{
					auto &_match_expr{ (*(_252_last.cast_ptr<_1c49ce024_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ac7b023a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ac7b0e0b:;
						{
							return false;;
						}
					}
					_match_end_1ac7b0da6:;
				};
			}
		}
		else {
			_case_begin_1ac7b01c4:;
			{
				return true;;
			}
		}
		_match_end_1ac7b016e:;
	};
}



inline jule::Bool _1c56c07a3_IsExprComesFromBind(jule::Ptr<_1c49ce024_Data>* _4025_d) {
	{
		auto &_match_expr{ (*((*(_4025_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac7b05e2:;
			{
				return (*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1c49715b0_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac7b1aaa:;
			{
				return (*((*((*((*((*(_4025_d))))._field_Model.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1ac7b15e3:;
			{
				return false;;
			}
		}
		_match_end_1ac7b158d:;
	};
}



inline jule::Bool _1c56c0a6c_IsAny(jule::Ptr<_1c4a1020e_TypeKind>* _5215_t) {
	if ((_1c4a133cc_TypeEnum((*(_5215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _562_prim = _1c4a12893_Prim((*(_5215_t)).ptr());;
	return ((_562_prim != nullptr) && _1c4a1b539_IsAny(_562_prim));;
}



inline jule::Bool _1c56c0dad_IsClosure(jule::Ptr<_1c48ad673_AnonFnExprModel>* _6115_m) {
	return ((*((*(_6115_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1c56c1144_IsOpMethod(jule::Ptr<_1c48b8738_Fn>* _6416_m) {
	if ((((*((*(_6416_m))))._field_Generics.len() > 0LL) || ((*((*(_6416_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1c48bb719_FnIns> _682_mi = (*((*(_6416_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_682_mi == (*(*(_682_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1c56c14b8_IsTraitMethod(jule::Ptr<_1c48a6407_StructIns>* _8023_owner, jule::Ptr<_1c48bb719_FnIns>* _8043_f) {
	{
		auto expr = &((*((*((*(_8023_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7b72db:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _8114_t = *it;
			{
				if ((_1c48ccd9b_FindMethod(_8114_t.ptr(), (*((*((*(_8043_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1ac7b72db:;
			++it;
			goto _iter_begin_1ac7b72db;
		}
		_iter_end_1ac7b72db:;
	};
	return false;;
}



inline jule::Bool _1c56c183c_IsStdPackage(jule::Str* _9318_f, jule::Str _9326_p) {
	return _2059e414b_HasPrefix((*(_9318_f)), _2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _205b5c072_PathStdlib; (*it++) = _9326_p; __jule_collection; })));;
}



inline jule::Bool _1c56c1c16_IsImplicitImport(jule::Ptr<_1c492cd1e_ImportInfo> _10121_imp) {
	return ((*(_10121_imp))._field_Token == nullptr);;
}



inline jule::Ptr<_1c4881b96_Directive> _1c56c283d_FindDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c257c:;
		if (it != expr_end) {
			jule::Ptr<_1c4881b96_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1ac7c257c:;
			++it;
			goto _iter_begin_1ac7c257c;
		}
		_iter_end_1ac7c257c:;
	};
	return nullptr;;
}



inline jule::Bool _1c56c2c06_HasDirective(jule::Slice<jule::Ptr<_1c4881b96_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1c56c283d_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::Bool _1c56c307a_ContainsTraitMethod(jule::Ptr<_1c48cc1b9_Trait>* _2629_t, jule::Str* _2641_ident) {
	{
		auto expr = &((*((*(_2629_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c4282:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _279_m = *it;
			{
				if (((*(_279_m))._field_Ident == (*(_2641_ident)))) {
					return true;;
				};
			}
			_iter_next_1ac7c4282:;
			++it;
			goto _iter_begin_1ac7c4282;
		}
		_iter_end_1ac7c4282:;
	};
	return false;;
}



inline jule::I64 _1c56c3740_FindTraitTypeOffsetS(jule::Ptr<_1c48cc1b9_Trait> _3925_t, jule::Ptr<_1c48a6407_StructIns> _3940_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7c5e98:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> *_449_si = it;
			{
				if (((*(_3940_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ac7c6d34:;
						if (it != expr_end) {
							jule::Ptr<_1c48a6407_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3940_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1ac7c6d34:;
							++it;
							goto _iter_begin_1ac7c6d34;
						}
						_iter_end_1ac7c6d34:;
					};
					goto _iter_end_1ac7c5e98;
				} else {
					_436_i+=(*((*(_449_si))))._field_Instances.len();
				};
			}
			_iter_next_1ac7c5e98:;
			++it;
			goto _iter_begin_1ac7c5e98;
		}
		_iter_end_1ac7c5e98:;
	};
	return -1LL;;
}



inline jule::I64 _1c56c3ab4_FindTraitTypeOffset(jule::Ptr<_1c48cc1b9_Trait> _6224_t, jule::Ptr<_1c4a1020e_TypeKind> _6239_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1c48a6407_StructIns> _6610_s = nullptr;;
	if ((_1c4a12b29_Sptr(_6239_k.ptr()) != nullptr)) {
		_6239_k=(*(_1c4a12b29_Sptr(_6239_k)))._field_Elem;
	};
	_6610_s=_1c4a13e16_Struct(_6239_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1c56c3740_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1c48bb719_FnIns> _1c56c3ee3_FindOperator(jule::Ptr<_1c48a6407_StructIns>* _7822_s, jule::U64 _7837_op, jule::Bool _7850_unary) {
	{
		auto &_match_expr{ _7837_op };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1ac7ca794:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1ac7ca5a7:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ac7ca61d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1ac7ca80a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1ac7ca882:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1ac7ca909:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1ac7caa2a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1ac7caa91:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1ac7cab07:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1ac7cab6d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1ac7cabd4:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1ac7cac5b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ac7cacd3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1ac7cad5a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ac7cadd2:;
			{
				if (_7850_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ac7cae59:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1ac7caed1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1ac7cb058:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1ac7cb0d0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1ac7cb157:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1ac7cb1ce:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1ac7cb256:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1ac7cb2cd:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1ac7cb355:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1ac7cb3cc:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1ac7ca200:;
			{
				return nullptr;;
			}
		}
		_match_end_1ac7ca332:;
	};
}



inline jule::Ptr<_1c48bb719_FnIns> _1c56c4367_FindGenericInstance(jule::Ptr<_1c48b8738_Fn>* _14729_f, jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>> _14737_generics) {
	_julec_label_1ac7d1aca:;
	{
		auto expr = &((*((*(_14729_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac7d2856:;
		if (it != expr_end) {
			jule::Ptr<_1c48bb719_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac7d324c:;
					if (it != expr_end) {
						jule::I64 _1507_i = it - expr->begin();
						{
							if ((!(_1c4a1094b_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Kind, _14737_generics[_1507_i])))) {
								goto _iter_next_1ac7d2856;
							};
						}
						_iter_next_1ac7d324c:;
						++it;
						_1507_i++;
						goto _iter_begin_1ac7d324c;
					}
					_iter_end_1ac7d324c:;
				};
				return _14914_ins;;
			}
			_iter_next_1ac7d2856:;
			++it;
			goto _iter_begin_1ac7d2856;
		}
		_iter_end_1ac7d2856:;
	};
	jule::panic(jule::Str::lit("generic instance lookup failed, this is an implementation mistake", 65) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Bool _1ac776e8d_isOrdered(jule::Ptr<_1c49715b0_Var>* _1418_t, jule::Slice<jule::Ptr<_1c49715b0_Var>> _1425_s) {
	_julec_label_1ac7793be:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac77980e:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1ac77a0e5:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1ac77980e;
							};
						}
					}
					_match_end_1ac77a07e:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac77a7bb:;
					if (it != expr_end) {
						jule::Ptr<_1c49715b0_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac77980e;
							};
						}
						_iter_next_1ac77a7bb:;
						++it;
						goto _iter_begin_1ac77a7bb;
					}
					_iter_end_1ac77a7bb:;
				};
				return false;;
			}
			_iter_next_1ac77980e:;
			++it;
			goto _iter_begin_1ac77980e;
		}
		_iter_end_1ac77980e:;
	};
	return true;;
}

inline jule::Bool _1ac77db21_isOrdered(jule::Ptr<_1c48a3679_Struct>* _1418_t, jule::Slice<jule::Ptr<_1c48a3679_Struct>> _1425_s) {
	_julec_label_1ac78100d:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac78144d:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac781a58:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1ac78144d;
							};
						}
						_iter_next_1ac781a58:;
						++it;
						goto _iter_begin_1ac781a58;
					}
					_iter_end_1ac781a58:;
				};
				return false;;
			}
			_iter_next_1ac78144d:;
			++it;
			goto _iter_begin_1ac78144d;
		}
		_iter_end_1ac78144d:;
	};
	return true;;
}



inline void _1ac774661_order(jule::Slice<jule::Ptr<_1c49715b0_Var>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac774ad4:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac775cd3:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1c49715b0_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac776a4d:;
				if (it != expr_end) {
					jule::Ptr<_1c49715b0_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac775442;
						};
					}
					_iter_next_1ac776a4d:;
					++it;
					goto _iter_begin_1ac776a4d;
				}
				_iter_end_1ac776a4d:;
			};
			if (_1ac776e8d_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac775442:;
	}
	_iter_end_1ac775442:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ac774ad4;
	};
}

inline void _1ac77b39e_order(jule::Slice<jule::Ptr<_1c48a3679_Struct>> _3717_s) {
	jule::I64 _386_i = 0LL;;
	_julec_label_1ac77b7ab:;
	jule::I64 _406_j = _386_i;;
	_julec_label_1ac77c966:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1c48a3679_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1ac77d6d1:;
				if (it != expr_end) {
					jule::Ptr<_1c48a3679_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1ac77c0c5;
						};
					}
					_iter_next_1ac77d6d1:;
					++it;
					goto _iter_begin_1ac77d6d1;
				}
				_iter_end_1ac77d6d1:;
			};
			if (_1ac77db21_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1ac77c0c5:;
	}
	_iter_end_1ac77c0c5:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1ac77b7ab;
	};
}



inline void _1c57e383d_EliminateDefines(jule::Ptr<_1c56b4830_IR>* _32626_ir) {
	jule::Ptr<_1c57e0928_ObjectDeadCode> _3276_ocd = static__1c57e0e01_new(_32626_ir);;
	_1c57e3541_elimanate(_3276_ocd);
}



inline void _1c57e77a9_eliminateDeadCodeOfScope(jule::Ptr<_1c490ac86_Scope> _23833_s) {
	jule::Slice<jule::Ptr<_1c490d629_Label>> _2392_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490d629_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c490d629_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1c490da03_GotoSt>> _2402_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1c490da03_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c490da03_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1c57e4575_scopeDeadCode> _2416_sdc = jule::new_ptr<_1c57e4575_scopeDeadCode>(_1c57e4575_scopeDeadCode{._field_parent=jule::Ptr<_1c57e4575_scopeDeadCode>(nullptr), ._field_s=_23833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1c490d629_Label>>>)((&(_2392_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1c490da03_GotoSt>>>)((&(_2402_gotos)))), ._field_except=false});;
	{
		_1c57e74ac_optimizeStmts(_2416_sdc);
	};
}



inline void _1c57e7a2e_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1c48b8738_Fn>>* _25033_funcs) {
	{
		auto expr = _25033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac859aa9:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _25114_func = *it;
			{
				{
					auto expr = &((*(_25114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac85bc54:;
					if (it != expr_end) {
						jule::Ptr<_1c48bb719_FnIns> _25215_ins = *it;
						{
							_1c57e77a9_eliminateDeadCodeOfScope((*(_25215_ins))._field_Scope);
						}
						_iter_next_1ac85bc54:;
						++it;
						goto _iter_begin_1ac85bc54;
					}
					_iter_end_1ac85bc54:;
				};
			}
			_iter_next_1ac859aa9:;
			++it;
			goto _iter_begin_1ac859aa9;
		}
		_iter_end_1ac859aa9:;
	};
}



inline void _1c57e7c60_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1c48a3679_Struct>>* _25937_structs) {
	{
		auto expr = _25937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac85c6e4:;
		if (it != expr_end) {
			jule::Ptr<_1c48a3679_Struct> _26014_s = *it;
			{
				{
					auto expr = &((*(_26014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac85cd43:;
					if (it != expr_end) {
						jule::Ptr<_1c48a6407_StructIns> _26115_ins = *it;
						{
							_1c57e7a2e_eliminateScopeFunctions(&((*(_26115_ins))._field_Methods));
						}
						_iter_next_1ac85cd43:;
						++it;
						goto _iter_begin_1ac85cd43;
					}
					_iter_end_1ac85cd43:;
				};
			}
			_iter_next_1ac85c6e4:;
			++it;
			goto _iter_begin_1ac85c6e4;
		}
		_iter_end_1ac85c6e4:;
	};
}



inline void _1c57e8018_eliminateFunctionsScopePackage(jule::Ptr<_1c4930c45_Package>* _26740_pkg) {
	{
		auto expr = &((*((*(_26740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac85cae0:;
		if (it != expr_end) {
			jule::Ptr<_1c49c8bab_SymbolTable> _26814_f = *it;
			{
				_1c57e7a2e_eliminateScopeFunctions(&((*(_26814_f))._field_Funcs));
				_1c57e7c60_eliminateScopeStructMethods(&((*_26814_f.alloc)._field_Structs));
			}
			_iter_next_1ac85cae0:;
			++it;
			goto _iter_begin_1ac85cae0;
		}
		_iter_end_1ac85cae0:;
	};
}



inline void _1c57e8216_eliminateScopePackage(jule::Ptr<_1c4930c45_Package>* _27431_pkg) {
	_1c57e8018_eliminateFunctionsScopePackage(_27431_pkg);
}



inline void _1c57e8447_EliminateScopes(jule::Ptr<_1c56b4830_IR>* _27925_ir) {
	jule::I64 _2806_i = ((*((*(_27925_ir))))._field_Used.len() - 1LL);;
	for (; (_2806_i >= 0LL); (_2806_i)--) {
		{
			jule::Ptr<_1c492cd1e_ImportInfo> _2827_u = (*((*(_27925_ir))))._field_Used[_2806_i];;
			if ((!((*(_2827_u))._field_Binded))) {
				_1c57e8216_eliminateScopePackage(&((*_2827_u.alloc)._field_Package));
			};
		}
	_iter_next_1ac860340:;
	}
	_iter_end_1ac860340:;;
	_1c57e8216_eliminateScopePackage(&((*((*(_27925_ir))))._field_Main));
}



inline jule::Uintptr _21ddde495_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _21ddde85d_equalConst(jule::Ptr<_1dc54537a_Const> _2115_l, jule::Ptr<_1dc54537a_Const> _2126_r) {
	{
		
		if (_1dc54937e_IsI64(_2115_l.ptr())) {
			_case_begin_1ac8c1ed9:;
			{
				return (_1dc54937e_IsI64(_2126_r.ptr()) && (_1dc546c83_ReadI64(_2115_l) == _1dc546c83_ReadI64(_2126_r)));;
			}
		}
		else if (_1dc549615_IsU64(_2115_l.ptr())) {
			_case_begin_1ac8c2050:;
			{
				return (_1dc549615_IsU64(_2126_r.ptr()) && (_1dc547019_ReadU64(_2115_l) == _1dc547019_ReadU64(_2126_r)));;
			}
		}
		else if (_1dc549db8_IsF64(_2115_l.ptr())) {
			_case_begin_1ac8c20b6:;
			{
				return (_1dc549db8_IsF64(_2126_r.ptr()) && (_1dc5477bc_ReadF64(_2115_l) == _1dc5477bc_ReadF64(_2126_r)));;
			}
		}
		else if (_1dc549b32_IsStr(_2115_l.ptr())) {
			_case_begin_1ac8c213d:;
			{
				return (_1dc549b32_IsStr(_2126_r.ptr()) && (_1dc547536_ReadStr(_2115_l) == _1dc547536_ReadStr(_2126_r)));;
			}
		}
		else if (_1dc54989b_IsBool(_2115_l.ptr())) {
			_case_begin_1ac8c21b5:;
			{
				return (_1dc54989b_IsBool(_2126_r.ptr()) && (_1dc5472a0_ReadBool(_2115_l) == _1dc5472a0_ReadBool(_2126_r)));;
			}
		}
		else if (_1dc54a14e_IsNil(_2115_l.ptr())) {
			_case_begin_1ac8c2308:;
			{
				return _1dc54a14e_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1ac8c1deb:;
			{
				return false;;
			}
		}
		_match_end_1ac8c1945:;
	};
}



inline jule::Bool _21dddebd2_equalCasting(jule::Ptr<_1c48abe8a_CastingExprModel> _4017_l, jule::Ptr<_1c48abe8a_CastingExprModel> _4039_r) {
	if ((!(_1c4a1094b_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _21dde0b17_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*(_4039_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _21dde009a_equalUnary(jule::Ptr<_1c48aac36_UnaryExprModel> _4715_l, jule::Ptr<_1c48aac36_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*(_4715_l))._field_Op.alloc)._field_Kind != (*(*(_4735_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _21dde0b17_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*(_4735_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _21dde041e_equalIndexing(jule::Ptr<_1c48ad1bc_IndexingExprModel> _5418_l, jule::Ptr<_1c48ad1bc_IndexingExprModel> _5441_r) {
	return (_21dde0b17_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _21dde0b17_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*(_5441_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _21dde0793_equalBinary(jule::Ptr<_1c48aa85c_BinaryExprModel> _5916_l, jule::Ptr<_1c48aa85c_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*(_5916_l))._field_Op.alloc)._field_Kind != (*(*(_5937_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_21dde0b17_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*(_5937_r))._field_Left.alloc)._field_Model) && _21dde0b17_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*(_5937_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _21dde0b17_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_21ddde495_typeData(&(_7016_l)) != _21ddde495_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8d0aca:;
			{
				return (_7016_l.unsafe_cast_ptr<_1c49715b0_Var>() == _7030_r.cast_ptr<_1c49715b0_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac8d1647:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _783_li = _7016_l.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>();;
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _793_ri = _7030_r.cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_783_li))._field_Field == (*(_793_ri))._field_Field) && _21dde0b17_equalModels((*((*_783_li.alloc)._field_Expr))._field_Model, (*(*(_793_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8d16ad:;
			{
				return _21ddde85d_equalConst(_7016_l.cast_ptr<_1dc54537a_Const>(&__jule_any_type19), _7030_r.cast_ptr<_1dc54537a_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac8d1229:;
			{
				return _21dddebd2_equalCasting(_7016_l.cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93), _7030_r.cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac8d1290:;
			{
				return _21dde009a_equalUnary(_7016_l.cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110), _7030_r.cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac8d1306:;
			{
				return _21dde041e_equalIndexing(_7016_l.cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45), _7030_r.cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac8d136c:;
			{
				return _21dde0793_equalBinary(_7016_l.cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111), _7030_r.cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1ac8d0ea4:;
			{
				return false;;
			}
		}
		_match_end_1ac8ccd08:;
	};
}



inline void _21dde6733_possibleNilRemove(jule::Ptr<_21dde5754_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_21dde603a_removeVar((*(_7827_n)).ptr(), _21dde7206_getNilVar(_7837_m));
	};
}



inline jule::Bool _21dde6aeb_isGuaranteedNonNilExpr(jule::Ptr<_21dde5754_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ac8d74b6:;
			{
				return true;;
			}
		}
		_match_end_1ac8d73c8:;
	};
	return (((*(_8432_n)) != nullptr) && _21dde637b_isSafe((*(_8432_n)).ptr(), _21dde7206_getNilVar(_8442_m)));;
}



inline jule::Bool _21dde6db5_isNilValidType(jule::Ptr<_1c4a1020e_TypeKind> _9223_t) {
	return (_1c4a12b29_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _21dde7206_getNilVar(jule::Any _9414_m) {
	if ((!(_1c56db4b1_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac8d8a4a:;
			{
				jule::Ptr<_1c49715b0_Var> _1003_v = _9414_m.unsafe_cast_ptr<_1c49715b0_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1c49715b0_Var>());;
				};
				return _21dde7206_getNilVar((*((*((*_1003_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac8d8ee0:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1ac8d88d5:;
	};
	return 0LLU;;
}



inline jule::Bool _1c56cae2e_isConstantValidConditionalCase(jule::Ptr<_1c490b1a4_If>* _68236_i) {
	{
		auto &_match_expr{ (*((*(_68236_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8e0db5:;
			{
				jule::Ptr<_1dc54537a_Const> _6853_c = (*((*(_68236_i))))._field_Expr.unsafe_cast_ptr<_1dc54537a_Const>();;
				return (_1dc54989b_IsBool(_6853_c.ptr()) && _1dc5472a0_ReadBool(_6853_c));;
			}
		}
		_match_end_1ac8e158b:;
	};
	return false;;
}



inline jule::Bool _1c56cb23c_isUnreachableExpr(jule::Any* _69123_expr) {
	{
		auto &_match_expr{ (*(_69123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac8e1b52:;
			{
				jule::Ptr<_1dc54537a_Const> _6943_c = (*(_69123_expr)).cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
				return (_1dc54989b_IsBool(_6943_c.ptr()) && (!(_1dc5472a0_ReadBool(_6943_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac8e0e4d:;
			{
				jule::Ptr<_1c48aa85c_BinaryExprModel> _6973_m = (*(_69123_expr)).cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6973_m))._field_Op))._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1c56cb23c_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Left))._field_Model)) || _1c56cb23c_isUnreachableExpr(&((*((*_6973_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1ac8e1aec:;
	};
	return false;;
}



inline jule::Bool _1c56cb506_isConstantValidMatchCase(jule::Ptr<_1c49109c2_Case>* _70630_case) {
	{
		auto expr = &((*((*(_70630_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e5eb9:;
		if (it != expr_end) {
			jule::Ptr<_1c49ce024_Data> *_7079_expr = it;
			{
				if (((_1c49ce95e_IsConst((*(_7079_expr)).ptr()) && _1dc54989b_IsBool((*(*(_7079_expr)).alloc)._field_Constant.ptr())) && _1dc5472a0_ReadBool((*((*(_7079_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1ac8e5eb9:;
			++it;
			goto _iter_begin_1ac8e5eb9;
		}
		_iter_end_1ac8e5eb9:;
	};
	return false;;
}



inline jule::Bool _1c56cb847_isUnreachableConditionalCase(jule::Ptr<_1c490b1a4_If>* _71534_i) {
	return _1c56cb23c_isUnreachableExpr(&((*((*(_71534_i))))._field_Expr));;
}



inline jule::Bool _1c56cbacd_isUnreachableMatchCase(jule::Ptr<_1c49109c2_Case>* _71928_case) {
	{
		auto expr = &((*((*(_71928_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac8e7eaa:;
		if (it != expr_end) {
			jule::Ptr<_1c49ce024_Data> *_7209_expr = it;
			{
				if ((!(_1c56cb23c_isUnreachableExpr(&((*((*(_7209_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1ac8e7eaa:;
			++it;
			goto _iter_begin_1ac8e7eaa;
		}
		_iter_end_1ac8e7eaa:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1c56d20ab_checkForBitShiftOpt(jule::Ptr<_1c48aa362_OperandExprModel>* _58325_l, jule::Ptr<_1c48aa362_OperandExprModel>* _58348_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1dc54427a_IsInt(_1c4a1060a_Str((*((*(_58325_l))))._field_Kind.ptr())))) || (!(_1dc54427a_IsInt(_1c4a1060a_Str((*((*(_58348_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1dc547cd9_AsU64((*((*(_58348_r))))._field_Model.cast_ptr<_1dc54537a_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _5912_j = _1dc4e657e_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _5922_z = static_cast<jule::U64>(_5912_j);;
	if ((static_cast<jule::F64>(_5922_z) != _5912_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _5922_z;
	return __jule_func_result;;
}



inline jule::Bool _1c56d2474_areSameLvalueExprModel(jule::Any* _60028_l, jule::Any* _60043_r) {
	{
		auto &_match_expr{ (*(_60028_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac451d00:;
			{
				return ((*(_60043_r)) == (*(_60028_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac451b35:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1ac4527c3:;
						{
							goto _match_end_1ac452949;
						}
					}
					else {
						_case_begin_1ac45299e:;
						{
							return false;;
						}
					}
					_match_end_1ac452949:;
				};
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _6133_lsi = (*(_60028_l)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _6143_rsi = (*(_60043_r)).cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_6133_lsi))._field_Field != (*(_6143_rsi))._field_Field)) {
					return false;;
				};
				return _1c56d2474_areSameLvalueExprModel(&((*((*_6133_lsi.alloc)._field_Expr))._field_Model), &((*(*(_6143_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac451d88:;
			{
				{
					auto &_match_expr{ (*(_60043_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1ac455001:;
						{
							jule::Ptr<_1c48aac36_UnaryExprModel> _6264_ul = (*(_60028_l)).cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1c48aac36_UnaryExprModel> _6274_ur = (*(_60043_r)).cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_6264_ul))._field_Op))._field_Id != (*(*(_6274_ur))._field_Op.alloc)._field_Id) || ((*(*(_6264_ul))._field_Op.alloc)._field_Kind != (*(*(_6274_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1c56d2474_areSameLvalueExprModel(&((*((*_6264_ul.alloc)._field_Expr))._field_Model), &((*(*(_6274_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1ac454451:;
				};
			}
		}
		_match_end_1ac44eb33:;
	};
	return false;;
}



inline void _1c56d4641_possibleDynamicRemove(jule::Ptr<_1c56d35a7_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1c56d3d8d_removeVar((*(_8131_d)).ptr(), _1c56d51be_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1c56d494e_isDynamicValidType(jule::Ptr<_1c4a1020e_TypeKind> _8727_t) {
	return _1c56c0a6c_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1c4a1020e_TypeKind> _1c56d4d7d_isTypeGuaranteedDynamicData(jule::Ptr<_1c56d35a7_dynamic>* _8937_dy, jule::Ptr<_1c4a1020e_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _902_isAny = _1c56c0a6c_IsAny(&(_8955_t));;
	if (((!(_902_isAny)) && (_1c4a1419c_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_902_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac4c765b:;
			{
				jule::Ptr<_1c48abe8a_CastingExprModel> _997_cem = _8973_m.unsafe_cast_ptr<_1c48abe8a_CastingExprModel>();;
				return _1c56d4d7d_isTypeGuaranteedDynamicData(_8937_dy, (*(_997_cem))._field_ExprKind, (*((*_997_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1ac4c7a02:;
	};
	jule::Uintptr _1022_var = _1c56d51be_getDynamicVar(_8973_m);;
	if ((_1022_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4c951a:;
		if (it != expr_end) {
			_1c56d3266_dynamicVar _10614_v = *it;
			{
				if ((_10614_v._field_var == _1022_var)) {
					return _10614_v._field_kind;;
				};
			}
			_iter_next_1ac4c951a:;
			++it;
			goto _iter_begin_1ac4c951a;
		}
		_iter_end_1ac4c951a:;
	};
	return nullptr;;
}



inline jule::Uintptr _1c56d51be_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1c56dce96_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac4c9bad:;
			{
				jule::Ptr<_1c49715b0_Var> _1203_v = _11418_m.unsafe_cast_ptr<_1c49715b0_Var>();;
				if ((!((*(_1203_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1c49715b0_Var>());;
				};
				return _1c56d51be_getDynamicVar((*((*((*_1203_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac4ca829:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac4c9c46:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _1313_uem = _11418_m.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>();;
				if (((*((*(_1313_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c56d51be_getDynamicVar((*((*_1313_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ac4c9a26:;
	};
	return 0LLU;;
}



inline jule::Bool _1c56d8c2d_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1c56d946a_fitsSize(_8424_m, _8424_m);;
}



inline jule::I64 _1c56d90e6_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4d9bac:;
		if (it != expr_end) {
			jule::I64 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1c56d946a_fitsSize((*(_909_m)), _8934_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1ac4d9bac:;
			++it;
			_906_i++;
			goto _iter_begin_1ac4d9bac;
		}
		_iter_end_1ac4d9bac:;
	};
	return -1LL;;
}



inline jule::Bool _1c56d946a_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_21ddde495_typeData(&(_9813_e1)) != _21ddde495_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1ac4db6c5:;
			{
				jule::Ptr<_1dc54537a_Const> _1043_exprConst = _9828_e2.cast_ptr<_1dc54537a_Const>(&__jule_any_type19);;
				return ((_1dc548070_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1dc54bc77_GtEq(_9813_e1.unsafe_cast_ptr<_1dc54537a_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac4db73b:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac4db7a2:;
			{
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>();;
				jule::Ptr<_1c48b04aa_StructSubIdentExprModel> _1103_ssi2 = _9828_e2.cast_ptr<_1c48b04aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_21dde0b17_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac4db818:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>();;
				jule::Ptr<_1c48aac36_UnaryExprModel> _1143_uem2 = _9828_e2.cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U64>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1c56d946a_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1ac4da394:;
			{
				return false;;
			}
		}
		_match_end_1ac4da33e:;
	};
}



inline void _1c56d979a_possibleBoundaryRemove(jule::Ptr<_1c56d7bb6_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac4dbb37:;
		if (it != expr_end) {
			_1c56d7875_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ac4e3545:;
					if (it != expr_end) {
						jule::I64 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_21dde0b17_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1ac4e3545;
							};
						}
						_iter_next_1ac4e3545:;
						++it;
						_1277_i++;
						goto _iter_begin_1ac4e3545;
					}
					_iter_end_1ac4e3545:;
				};
			}
			_iter_next_1ac4dbb37:;
			++it;
			goto _iter_begin_1ac4dbb37;
		}
		_iter_end_1ac4dbb37:;
	};
}



inline jule::Bool _1c56d9a64_isBoundaryRiskyType(jule::Ptr<_1c4a1020e_TypeKind> _13628_t) {
	return (_1c4a13663_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1c56d9d2d_isBoundaryValidType(jule::Ptr<_1c4a1020e_TypeKind> _14128_t) {
	return ((_1c4a138e9_Slc(_14128_t.ptr()) != nullptr) || (_1c4a13663_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1c56da0e7_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1c56db4b1_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ac4e5d50:;
			{
				jule::Ptr<_1c49715b0_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1c49715b0_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1c49715b0_Var>());;
				};
				return _1c56da0e7_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ac4e5dd8:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1c48b04aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac4e5965:;
			{
				jule::Ptr<_1c48aac36_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1c48aac36_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U64>(62LLU))) {
					return _1c56da0e7_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1ac4e3d09:;
	};
	return 0LLU;;
}



inline void _1c56dd172_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _332_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	_1c56da856_Copy=_332_l1;
	_1c56dab53_Deadcode=_332_l1;
	_1c56dae0b_Append=_332_l1;
	_1c56db208_Math=_332_l1;
	_1c56db4b1_Access=_332_l1;
	_1c56db769_Inline=_332_l1;
	_1c56dba22_Ptr=_332_l1;
	_1c56dbdda_Cond=_332_l1;
	_1c56dc12c_Str=_332_l1;
	_1c56dc3c4_Slice=_332_l1;
	_1c56dc67c_Assign=_332_l1;
	_1c56dc935_Exceptional=_332_l1;
	_1c56dcbdd_Iter=_332_l1;
	_1c56dce96_Dynamic=_332_l1;
}



inline void _1c57ebb43_detectEnabled(void) {
	_1c57e9910_exprEnabled=(((_1c56dba22_Ptr || _1c56db208_Math) || _1c56db4b1_Access) || _1c56dbdda_Cond);
	_1c57e9b52_scopeEnabled=((((((((_1c56dbdda_Cond || _1c56dae0b_Append) || _1c56da856_Copy) || _1c56dc12c_Str) || _1c56dc3c4_Slice) || _1c56dc67c_Assign) || _1c56dc935_Exceptional) || _1c56dcbdd_Iter) || _1c56dce96_Dynamic);
}



inline void _1c5823c9c_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_205b5ba33_Exit(1LL);
}



inline jule::U64 _1a97d289d_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1a970ec4d_isCopyOptimizable(jule::Ptr<_1c49ce024_Data>* _110423_expr) {
	if ((!((*((*(_110423_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_110423_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1aca16bbc:;
			{
				return false;;
			}
		}
		_match_end_1aca16b67:;
	};
	return true;;
}



inline jule::Bool _1a9710116_isIterCopyOptimizable(jule::Ptr<_1c49ce024_Data>* _111527_expr, jule::Ptr<_1c49715b0_Var>* _111541_v) {
	if (((!((*((*(_111527_expr))))._field_Lvalue)) && (!(_1c4a11ac3_Mutable((*((*(_111527_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_111541_v))))._field_Mutable)) && (!((*((*(_111527_expr))))._field_Mutable)));;
}



inline jule::Bool _1a9710545_captureVarHandling(jule::Ptr<_1a97db0e3_ObjectCoder>* _112228_oc, jule::Ptr<_1c48ad673_AnonFnExprModel>* _112251_m, jule::Ptr<_1c49715b0_Var>* _112277_v) {
	{
		auto expr = &((*((*(_112251_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aca18d67:;
		if (it != expr_end) {
			jule::Ptr<_1c49715b0_Var> _11239_cv = *it;
			{
				if ((_11239_cv == (*(_112277_v)))) {
					_1a97db7ca_write((*(_112228_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1a972b6b5_var(&((*((*(_112228_oc))))._field_Buf), (*(_112277_v)));
					return true;;
				};
			}
			_iter_next_1aca18d67:;
			++it;
			goto _iter_begin_1aca18d67;
		}
		_iter_end_1aca18d67:;
	};
	return false;;
}



inline jule::Str _1a9723569_decomposeCommonEsq(jule::U8 _182623_b) {
	{
		auto &_match_expr{ _182623_b };
		
		if (_match_expr == '\\') {
			_case_begin_1acab9b0a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1acab9973:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1acab99d9:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1acab94de:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1acab9555:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1acab95cc:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1acab9654:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1acab96cb:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1acab9b71:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1acab9bd7:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1acab7c4b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1acab9489:;
	};
}



inline jule::Str _1a9723877_sbtoa(jule::U8 _185310_b) {
	if ((_185310_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_185310_b < 128LLU)) {
		jule::Str _18583_seq = _1a9723569_decomposeCommonEsq(_185310_b);;
		if (!(_18583_seq).empty()) {
			return _18583_seq;;
		};
		if (((32LL <= _185310_b) && (_185310_b <= 126LLU))) {
			return jule::Str::from_byte(_185310_b);;
		};
	};
	jule::Str _18662_seq = _1dc53669b_FmtUint(static_cast<jule::U64>(_185310_b), 8LL);;
	if ((_18662_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _18662_seq);;
	};
	return (jule::Str::lit("\\", 1) + _18662_seq);;
}



inline void _1a9723b63_cstrBytes(_238b51e24_StrBuilder* _187319_s, jule::Str _187334_ctx) {
	{
		auto expr = &(_187334_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acabe68c:;
		if (it != expr_end) {
			jule::U8 *_18749_b = it;
			{
				_238b528d6_WriteStr(_187319_s, _1a9723877_sbtoa((*(_18749_b))));
			}
			_iter_next_1acabe68c:;
			++it;
			goto _iter_begin_1acabe68c;
		}
		_iter_end_1acabe68c:;
	};
}



inline void _1a9723e93_cstrLit(_238b51e24_StrBuilder* _187917_s, jule::Str _187932_ctx) {
	_238b52b8e_WriteByte(_187917_s, '\"');
	_1a9723b63_cstrBytes(_187917_s, _187932_ctx);
	_238b52b8e_WriteByte(_187917_s, '\"');
}



inline void _1a9724339_ftoa(_238b51e24_StrBuilder* _188514_s, jule::F64 _188529_f, jule::I64 _188537_bitsize) {
	if ((_188537_bitsize != 32LL)) {
		if ((_188529_f == static_cast<jule::F64>(static_cast<jule::I64>(_188529_f)))) {
			_1a9724625_itoa(_188514_s, static_cast<jule::I64>(_188529_f));
			return;;
		};
		if ((_188529_f == static_cast<jule::F64>(static_cast<jule::U64>(_188529_f)))) {
			_1a9724911_utoa(_188514_s, static_cast<jule::U64>(_188529_f));
			return;;
		};
	};
	jule::Str _18962_m = _1dc520025_FmtFloat(_188529_f, 'f', -1LL, _188537_bitsize);;
	_238b528d6_WriteStr(_188514_s, _18962_m);
	if ((!(_2059e8617_Contains(_18962_m, jule::Str::lit(".", 1))))) {
		_238b528d6_WriteStr(_188514_s, jule::Str::lit(".0", 2));
	};
}



inline void _1a9724625_itoa(_238b51e24_StrBuilder* _190314_s, jule::I64 _190329_x) {
	{
		
		if ((_190329_x == jule::MAX_I64)) {
			_case_begin_1acac3bbe:;
			{
				_238b528d6_WriteStr(_190314_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_190329_x == jule::MIN_I64)) {
			_case_begin_1acac3c68:;
			{
				_238b528d6_WriteStr(_190314_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1acac3aae:;
	};
	_238b528d6_WriteStr(_190314_s, _1dc536a64_FmtInt(_190329_x, 10LL));
	if (_205a9c2ae_Is64Bit(jule::Str::lit("arm64", 5))) {
		_238b52b8e_WriteByte(_190314_s, 'L');
	};
	_238b52b8e_WriteByte(_190314_s, 'L');
}



inline void _1a9724911_utoa(_238b51e24_StrBuilder* _192014_s, jule::U64 _192029_x) {
	{
		
		if ((_192029_x == jule::MAX_U64)) {
			_case_begin_1acac5d14:;
			{
				_238b528d6_WriteStr(_192014_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1acac5bd2:;
	};
	_238b528d6_WriteStr(_192014_s, _1dc53669b_FmtUint(_192029_x, 10LL));
	if (_205a9c2ae_Is64Bit(jule::Str::lit("arm64", 5))) {
		_238b52b8e_WriteByte(_192014_s, 'L');
	};
	_238b528d6_WriteStr(_192014_s, jule::Str::lit("LU", 2));
}



inline void _1a9725060_operatorOverloadingBinary(_238b51e24_StrBuilder* _193435_buf, jule::Ptr<_1c48a6407_StructIns>* _193457_s, jule::Str* _193473_l, jule::Str* _19353_r, jule::U64 _193511_op, jule::Str _193524_kind) {
	;
	jule::Ptr<_1c48bb719_FnIns> _19376_f = static_cast<jule::Ptr<_1c48bb719_FnIns>>(nullptr);;
	if ((_193511_op == static_cast<jule::U64>(51LLU))) {
		_19376_f=_1c56c3ee3_FindOperator(_193457_s, static_cast<jule::U64>(50LLU), false);
		_238b52b8e_WriteByte(_193435_buf, '!');
	} else {
		_19376_f=_1c56c3ee3_FindOperator(_193457_s, _193511_op, false);
	};
	if ((_19376_f == nullptr)) {
		if (((_193511_op == static_cast<jule::U64>(50LLU)) || (_193511_op == static_cast<jule::U64>(51LLU)))) {
			static__1a972b0dd_structureIns(_193435_buf, _193457_s);
			_238b528d6_WriteStr(_193435_buf, jule::Str::lit("_eq", 3));
			goto _julec_label_1acaca8a7;
		};
		jule::panic(jule::Str::lit("binary operator overloading is not exist, this is an implementation mistake", 75) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1951:3"));;
	};
	static__1a972a43e_funcIns(_193435_buf, &(_19376_f));
	_julec_label_1acaca8a7:;
	_238b528d6_WriteStr(_193435_buf, jule::Str::lit("(&", 2));
	_238b528d6_WriteStr(_193435_buf, (*(_193473_l)));
	_238b528d6_WriteStr(_193435_buf, jule::Str::lit(", ", 2));
	_238b528d6_WriteStr(_193435_buf, (*(_19353_r)));
	_238b52b8e_WriteByte(_193435_buf, ')');
}



inline jule::Slice<jule::U8> _1a97e85b7_concatAllParts(jule::Slice<jule::Ptr<_1c486c19d_Token>> _128319_parts) {
	jule::I64 _12846_n = 0LL;;
	{
		auto expr = &(_128319_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b57b0:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_12859_part = it;
			{
				_12846_n+=(*((*(_12859_part))))._field_Kind.len();
			}
			_iter_next_1ac5b57b0:;
			++it;
			goto _iter_begin_1ac5b57b0;
		}
		_iter_end_1ac5b57b0:;
	};
	if ((_12846_n == 0LL)) {
		return nullptr;;
	};
	_238b51e24_StrBuilder _12916_s = static__238b52375_New(_12846_n);;
	{
		auto expr = &(_128319_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac5b5ded:;
		if (it != expr_end) {
			jule::Ptr<_1c486c19d_Token> *_12929_p = it;
			{
				_238b528d6_WriteStr(&_12916_s, (*((*(_12929_p))))._field_Kind);
			}
			_iter_next_1ac5b5ded:;
			++it;
			goto _iter_begin_1ac5b5ded;
		}
		_iter_end_1ac5b5ded:;
	};
	return _238b53b7e_Buf(&_12916_s);;
}



inline jule::Bool _1a97e88c5_isHeadDecl(jule::Ptr<_1c48b8738_Fn>* _129920_m) {
	if ((((*((*(_129920_m))))._field_Generics.len() > 0LL) || ((*((*(_129920_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1c56c1144_IsOpMethod(_129920_m)) {
		return true;;
	};
	jule::Ptr<_1c48bb719_FnIns> _13066_mi = (*((*(_129920_m))))._field_Instances[0LL];;
	;
	return static__1c4972baa_Dispose(_1c48a74a2_FindMethod((*(_13066_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1a97e8b8e_defaultEq(jule::Ptr<_1c48a6407_StructIns>* _131215_s) {
	return ((*((*(_131215_s))))._field_Comparable && ((*((*(_131215_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1a9807a8d_ableToInit(jule::Ptr<_1c4a1020e_TypeKind>* _46220_t) {
	return (!(_1c4a11089_Binded((*(_46220_t)).ptr())));;
}



inline jule::Bool _1a9807d68_shouldInitialized(jule::Ptr<_1c4a1020e_TypeKind>* _46927_t) {
	if ((!(_1a9807a8d_ableToInit(_46927_t)))) {
		return false;;
	};
	jule::Ptr<_1c4a17cd8_Prim> _4732_prim = _1c4a12893_Prim((*(_46927_t)).ptr());;
	if ((_4732_prim != nullptr)) {
		return ((!(_1c4a1b539_IsAny(_4732_prim))) && (!(_1c4a1b2a3_IsStr(_4732_prim))));;
	};
	{
		
		if ((_1c4a12b29_Sptr((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1aceba14d:;
			{
				return false;;
			}
		}
		else if ((_1c4a14433_Map((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1aceba1b4:;
			{
				return false;;
			}
		}
		else if ((_1c4a138e9_Slc((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1aceba22a:;
			{
				return false;;
			}
		}
		else if ((_1c4a1419c_Trait((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1acebadeb:;
			{
				return false;;
			}
		}
		else if ((_1c4a13b80_Fn((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1acebb061:;
			{
				return false;;
			}
		}
		else if ((_1c4a13663_Arr((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1acebb0c7:;
			{
				jule::Ptr<_1c4a1e608_Arr> _4897_arr = _1c4a13663_Arr((*(_46927_t)).ptr());;
				return _1a9807a8d_ableToInit(&((*(_4897_arr))._field_Elem));;
			}
		}
		else if ((_1c4a13e16_Struct((*(_46927_t)).ptr()) != nullptr)) {
			_case_begin_1acebb13d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aceba04e:;
			{
				return true;;
			}
		}
		_match_end_1aceba45b:;
	};
}



inline void _205b663bc_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _205b66642_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _416_max = _205b661e1_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_205b661e1_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad0662d7:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I64 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1ad0662d7:;
			++it;
			goto _iter_begin_1ad0662d7;
		}
		_iter_end_1ad0662d7:;
	};
	_238b51e24_StrBuilder _496_s = static__238b52375_New(32LL);;
	;
	{
		auto expr = &(_205b661e1_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad067b24:;
		if (it != expr_end) {
			jule::I64 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				_238b528d6_WriteStr(&_496_s, (*(_519_part))[0LL]);
				_238b528d6_WriteStr(&_496_s, _2059e3c83_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
				_238b528d6_WriteStr(&_496_s, (*(_519_part))[1LL]);
				if (((_516_i + 1LL) < 5LL)) {
					_238b52b8e_WriteByte(&_496_s, '\n');
				};
			}
			_iter_next_1ad067b24:;
			++it;
			_516_i++;
			goto _iter_begin_1ad067b24;
		}
		_iter_end_1ad067b24:;
	};
	jule::outln(_496_s);
}



inline void _205b66873_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _205b66a82_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _205b66be7_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _205b66de5_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1ad06d960:;
			{
				_205b66a82_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1ad06da2b:;
			{
				_205b66be7_toolDistarch();
			}
		}
		else {
			_case_begin_1ad06c552:;
			{
				_205b663bc_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1ad06d553:;
	};
}



inline void _205b67126_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: arm64", 19));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _205b627b4_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _205b63dc0_CppStd));
}



inline void _205b67467_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1ad07204b:;
			{
				({
					auto except = static__239656e67_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_205b663bc_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1ad070b71:;
			{
				_205b663bc_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1ad071a62:;
	};
}



inline jule::Bool _205b676a9_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1ad073525:;
			{
				_205b66642_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1ad07358b:;
			{
				_205b66873_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1ad073602:;
			{
				_205b66de5_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1ad072cd8:;
			{
				_205b67126_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1ad072d4e:;
			{
				_205b67467_mod(_15320_args);
			}
		}
		else {
			_case_begin_1ad071ba5:;
			{
				return false;;
			}
		}
		_match_end_1ad072711:;
	};
	return true;;
}



inline void _205b67852_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1896_args = _21d87ecc1_Args();;
	if ((_1896_args.len() < 2LL)) {
		_205b67852_showInfo();
		return;;
	};
	if (_205b676a9_processCommand(&(_1896_args))) {
		return;;
	};
	_1c520666e_compileCommand(&(_1896_args));
}



inline void _205b6837a_enableVtp(void) {
	jule::Uintptr _192_hOut = _23963c39d_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));;
	if ((_192_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I64 _246_dwMode = 0LL;;
	if ((!(_23963e922_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_23964002c_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _205b68545_init(void) {
	_205b6837a_enableVtp();
}



inline void _1c520358e_init(void) {
	_205b627b4_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_2396560dc_File> _1c5203858_openOutput(jule::Str* _4316_path) {
	jule::Str _442_dir = _205a000d0_Dir((*(_4316_path)));;
	({
		auto except = static__205a018c8_Of(_442_dir);
		if (!except.ok()) {
			({
				auto except = static__205a00c3a_Create(_442_dir);
				if (!except.ok()) {
					_1c5823c9c_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__239656807_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1c5823c9c_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1c5203a01_clearObjects(void) {
	({
		auto except = static__21d80b885_Remove(_1c5204b56_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__205a00e6b_Remove(_1c5202deb_OutDir);
}



inline void _1c5203d0e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_205b5494e_Cmd> _736_cmd = static__205b54d7d_New(_7214_compiler);;
	(*(_736_cmd))._field_Args=_2059e8293_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _205b5507b_Spawn(_736_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad07a9a0:;
					{
						static__1c5820172_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1ad07a670:;
					{
						static__1c5820172_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1ad07a4a5:;
					{
						static__1c5820172_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1ad07a5b5:;
			};
			_1c5823c9c_Throw(jule::Str());
		}
	});
	jule::I64 _862_status = ({
		auto except = _205b55510_Wait(_736_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:12"));
		(except.result);
	});;
	if ((_862_status != 0LL)) {
		jule::Str _883_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _205b627b4_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1c5820172_Print(jule::Str::lit("\033[31m", 5), _883_errorMessage);
		_1c5823c9c_Throw(jule::Str());
	};
	_1c5203a01_clearObjects();
}



inline jule::Bool _1c52040c8_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1002_offset = _2059e6d52_FindLastByte(_9920_path, '.');;
	if ((_1002_offset == -1LL)) {
		return false;;
	};
	return _205a8a764_IsValidCppExt(_9920_path.slice(_1002_offset));;
}



inline void _1c5204309_pushCompCmdClang(_238b51e24_StrBuilder* _10726_cmd) {
	_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _205b63dc0_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad07d61d:;
			{
				_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad07e685:;
			{
				_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad07e6eb:;
			{
				_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad07dd6b:;
	};
	_238b52b8e_WriteByte(_10726_cmd, ' ');
	if (_205b65025_Production) {
		_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_238b528d6_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1c520453a_pushCompCmdGcc(_238b51e24_StrBuilder* _13324_cmd) {
	_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _205b63dc0_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1ad080c19:;
			{
				_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1ad082644:;
			{
				_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad0826aa:;
			{
				_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1ad080ca2:;
	};
	_238b52b8e_WriteByte(_13324_cmd, ' ');
	if (_205b65025_Production) {
		_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_238b528d6_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1c52049be_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1c56b4830_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1603_compiler = &(_205b63bb1_CompilerPath);;
	_238b51e24_StrBuilder _1616_cmd = static__238b52375_New(64LL);;
	{
		auto &_match_expr{ _205b627b4_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad08535b:;
			{
				_1c520453a_pushCompCmdGcc(&(_1616_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad08589a:;
			{
				_1c5204309_pushCompCmdClang(&(_1616_cmd));
			}
		}
		_match_end_1ad085636:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad085b53:;
		if (it != expr_end) {
			jule::Ptr<_1c492cd1e_ImportInfo> *_1719_u = it;
			{
				if (((*((*(_1719_u))))._field_Binded && _1c52040c8_isCppSourceFile((*(*(_1719_u)).alloc)._field_Path))) {
					_238b528d6_WriteStr(&_1616_cmd, (*(*(_1719_u)).alloc)._field_Path);
					_238b52b8e_WriteByte(&_1616_cmd, ' ');
				};
			}
			_iter_next_1ad085b53:;
			++it;
			goto _iter_begin_1ad085b53;
		}
		_iter_end_1ad085b53:;
	};
	if (!(_1c52033d5_Out).empty()) {
		_238b528d6_WriteStr(&_1616_cmd, jule::Str::lit("-o ", 3));
		_238b528d6_WriteStr(&_1616_cmd, _1c52033d5_Out);
		_238b52b8e_WriteByte(&_1616_cmd, ' ');
	};
	_238b528d6_WriteStr(&_1616_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad08866c:;
		if (it != expr_end) {
			jule::Str *_1869_pass = it;
			{
				_238b52b8e_WriteByte(&_1616_cmd, ' ');
				_238b528d6_WriteStr(&_1616_cmd, (*(_1869_pass)));
			}
			_iter_next_1ad08866c:;
			++it;
			goto _iter_begin_1ad08866c;
		}
		_iter_end_1ad08866c:;
	};
	if (_205b5cacd_Os.equal("windows", 7)) {
		_238b528d6_WriteStr(&_1616_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1603_compiler));
	__jule_func_result.__jule_result_arg1 = _238b531cd_Str(&_1616_cmd);
	return __jule_func_result;;
}



inline jule::Str _1c5204b56_getCompilePath(void) {
	return _2059ee3dc_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1c5202deb_OutDir; (*it++) = _1c520313d_OutName; __jule_collection; }));;
}



inline void _1c5204d87_applyTargetIndependentOptimizations(jule::Ptr<_1c56b4830_IR>* _20545_ir) {
	jule::Ptr<_1c57e9d3e_Optimizer> _2066_opt = static__1c57ea2e5_New(_20545_ir);;
	_1c57eb8ce_Optimize(_2066_opt.ptr());
}



inline void _1c5205030_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _205b627b4_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1ad08ad34:;
			{
				_1c5823c9c_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1ad08ac68:;
			{
				if ((_205b63bb1_CompilerPath).empty()) {
					_205b63bb1_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1ad08a949:;
			{
				if ((_205b63bb1_CompilerPath).empty()) {
					_205b63bb1_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1ad08a52b:;
			{
				_1c5823c9c_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _205b627b4_Compiler));
			}
		}
		_match_end_1ad08a77e:;
	};
}



inline void _1c520523e_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1c5823c9c_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1c5205470_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1c5823c9c_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1c52056a1_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1c5823c9c_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2482_parts = _2059e8293_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2482_parts.len() != 2LL)) {
		_1c5823c9c_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2532_os;
	jule::Str _2536_arch;
	({
		jule::Str ___jule_assign_arg = _2482_parts[0LL];
		jule::Str _1___jule_assign_arg = _2482_parts[1LL];
		_2532_os = ___jule_assign_arg;
		_2536_arch = _1___jule_assign_arg;
	});
	if ((!_2532_os.equal("native", 6))) {
		_1c5205470_checkTargetOs(_2532_os);
		_205b5cacd_Os=_2532_os;
	};
	if ((!_2536_arch.equal("native", 6))) {
		_1c520523e_checkTargetArch(_2536_arch);
		_205b5cd86_Arch=_2536_arch;
	};
	_1dc53b1ea_UpdateTarget();
}



inline void _1c52058d2_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1c5823c9c_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1ad0926a9:;
			{
				goto _match_end_1ad091ea0;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1ad092786:;
			{
				_1c56dd172_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1ad09208d:;
			{
				_1c5823c9c_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1ad091ea0:;
	};
}



inline void _1c5205c9a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _205b63dc0_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1ad093567:;
			{
				goto _match_end_1ad09304a;
			}
		}
		else {
			_case_begin_1ad092104:;
			{
				_1c5823c9c_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _205b63dc0_CppStd));
			}
		}
		_match_end_1ad09304a:;
	};
}



inline jule::Slice<jule::Str> _1c5205e65_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2936_opt = jule::Str::lit("L0", 2);;
	jule::Str _2946_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1c520226e_FlagSet> _2966_fs = static__1c520258d_New();;
	_1ad094e3c_AddVar(_2966_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2936_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1ad094e3c_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_2946_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1ad094e3c_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_1c52033d5_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_205b64101_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_205b643a9_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1ad094e3c_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_205b627b4_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1ad094e3c_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_205b63bb1_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_205b65025_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_205b6491a_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_205b64cd3_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1ad094e3c_AddVar(_2966_fs, ((jule::Ptr<jule::Str>)((&(_205b63dc0_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56da856_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dab53_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dae0b_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56db208_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56db4b1_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56db769_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dba22_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dbdda_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dc12c_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dc3c4_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dc67c_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dc935_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dcbdd_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1ad09c285_AddVar(_2966_fs, ((jule::Ptr<jule::Bool>)((&(_1c56dce96_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3246_content = ({
		auto except = _1c53111c4_Parse(_2966_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1c5823c9c_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1c5205030_checkCompilerFlag();
	_1c5205c9a_checkCppStdFlag();
	_1c52056a1_checkTargetFlag(&(_2946_target));
	_1c52058d2_checkOptFlag(&(_2936_opt));
	return _3246_content;;
}



inline void _1c5206174_setupSemaFlags(jule::I64* _33724_flags) {
	if (_205b64101_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1c56b4830_IR> _1c520643d_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3442_content = _1c5205e65_checkFlags(_34313_args);;
	jule::I64 _3466_semaFlags = static_cast<jule::I64>(0LL);;
	_1c5206174_setupSemaFlags(&(_3466_semaFlags));
	if ((_3442_content.len() == 0LL)) {
		_1c5823c9c_Throw(_205a97c49_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3442_content.len() > 1LL)) {
		_1c5823c9c_Throw((jule::Str::lit("undefined content: ", 19) + _3442_content[1LL]));
	};
	jule::Str _3546_path;
	jule::Bool _35412_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _2059ee93c_Abs(_3442_content[0LL]);
		_3546_path = __jule_assign_result.__jule_result_arg0;
		_35412_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35412_ok))) {
		_1c5823c9c_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_239658221_Status> _3602_inf = ({
		auto except = static__205a018c8_Of(_205b5c072_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1c5823c9c_Throw(_205a97c49_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_239658221_Status>(nullptr);});
	});;
	if ((!(_23965862d_IsDir(_3602_inf.ptr())))) {
		_1c5823c9c_Throw(_205a97c49_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1c56b4830_IR> _3686_ir;
	jule::Slice<_205a977d7_Log> _36810_logs;
	({
		__jule_tuple_x_1c56b4830_IR__jule_tuple_s_205a977d7_Log __jule_assign_result = static__1c56b4d08_Build(_3546_path, _3466_semaFlags);
		_3686_ir = __jule_assign_result.__jule_result_arg0;
		_36810_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3686_ir == nullptr) && (_36810_logs == nullptr))) {
		_1c5823c9c_Throw(_205a97c49_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3546_path, &__jule_any_type4); __jule_collection; })));
	};
	if ((_36810_logs != nullptr)) {
		static__1c582331d_PrintLogs(&(_36810_logs));
		_1c5823c9c_Throw(jule::Str());
	};
	return _3686_ir;;
}



inline void _1c520666e_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_205b64662_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1c56b4830_IR> _3896_ir = _1c520643d_buildIr(_38324_args);;
	;
	if ((!(_205b64662_Test))) {
		jule::Ptr<_1c48b8738_Fn> _3947_main = _1c493230c_FindFn((*(_3896_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_3947_main == nullptr)) {
			_1c5823c9c_Throw(_205a97c49_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1c5204d87_applyTargetIndependentOptimizations(&(_3896_ir));
	_1c56b5d70_Order(_3896_ir);
	jule::Str _4052_compPath = _1c5204b56_getCompilePath();;
	jule::Str _4062_compiler;
	jule::Str _40612_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1c52049be_genCompileCmd(_4052_compPath, &(_3896_ir));
		_4062_compiler = __jule_assign_result.__jule_result_arg0;
		_40612_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a97db0e3_ObjectCoder> _4086_oc = static__1a97db522_New(&(_3896_ir), _1a97d9344_SerializationInfo{._field_Compiler=_4062_compiler, ._field_CompilerCommand=_40612_compilerCmd});;
	if (_205b64662_Test) {
		jule::Ptr<_1a97260a5_TestCoder> _4137_tc = static__1a972655b_New(&(_4086_oc));;
		_1a97278d1_Serialize(_4137_tc);
	} else {
		_1a97e8232_Serialize(_4086_oc);
	};
	jule::Ptr<_2396560dc_File> _4196_file = _1c5203858_openOutput(&(_4052_compPath));;
	({
		auto except = _21d80bc09_Write(_4196_file.ptr(), _238b53b7e_Buf(&(*(_4086_oc))._field_Buf));
		if (!except.ok()) {
			_1c5823c9c_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _2396576a4_Close(_4196_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:2"));
	});
	if ((!(_205b643a9_Transpilation))) {
		_1c5203d0e_compileIr(_4062_compiler, _40612_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_205b5cec9_init();
	_1dc53b371_init();
	_205b68545_init();
	_1c520358e_init();

}

inline jule::Bool __jule_anon1aadab162(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48ba691_ParamIns> _24021_p1, jule::Ptr<_1c48ba691_ParamIns> _24036_p2) {
	if (((*((*(_24021_p1))._field_Decl))._field_Mutable != (*(*(_24036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1c48b73b3_IsSelf((*(_24021_p1))._field_Decl)) {
		if ((!(_1c48b73b3_IsSelf((*(_24036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1c48b7649_IsRef((*(_24021_p1))._field_Decl) != _1c48b7649_IsRef((*(_24036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Reference != (*(*(_24036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_24021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_24036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1c4a1094b_Equal((*_24021_p1.alloc)._field_Kind, (*(_24036_p2))._field_Kind);;
}

inline jule::Bool __jule_anon_1aadeda01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _49935_spkg) {
	jule::Ptr<__jule_anon_1aadeda01_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aadeda01_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49828_pkg))))._field_Path == (*(_49935_spkg))._field_Path);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae4c863(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _8821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _8836_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aae4c863_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aae4c863_ctx>();
	return _1c48d5a74__Name(__jule_closure_ctx.alloc->_self_, _8821_e, _8836_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae4e7bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _9521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _9536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aae4e7bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aae4e7bb_ctx>();
	return _1c48d636b__Public(__jule_closure_ctx.alloc->_self_, _9521_e, _9536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aae51724(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _10221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _10236_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aae51724_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aae51724_ctx>();
	return _1c48d5e70__Type(__jule_closure_ctx.alloc->_self_, _10221_e, _10236_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e220a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _21121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _21136_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aa9e220a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa9e220a_ctx>();
	return _1c48d8d74__Name(__jule_closure_ctx.alloc->_self_, _21121_e, _21136_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e41a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _21821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _21836_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aa9e41a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa9e41a7_ctx>();
	return _1c48d966b__Public(__jule_closure_ctx.alloc->_self_, _21821_e, _21836_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aa9e6110(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _22521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _22536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aa9e6110_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aa9e6110_ctx>();
	return _1c48d9270__Type(__jule_closure_ctx.alloc->_self_, _22521_e, _22536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa02e96(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _31321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _31336_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaa02e96_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaa02e96_ctx>();
	return _1c48dc086__Name(__jule_closure_ctx.alloc->_self_, _31321_e, _31336_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa17a16(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _43521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _43536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaa17a16_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaa17a16_ctx>();
	return _1c48dec04__Name(__jule_closure_ctx.alloc->_self_, _43521_e, _43536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1996e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44236_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaa1996e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaa1996e_ctx>();
	return _1c48e04eb__Variadic(__jule_closure_ctx.alloc->_self_, _44221_e, _44236_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1b8c7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _44921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _44936_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaa1b8c7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaa1b8c7_ctx>();
	return _1c48e08e7__Reference(__jule_closure_ctx.alloc->_self_, _44921_e, _44936_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaa1d830(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _45621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _45636_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaa1d830_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaa1d830_ctx>();
	return _1c48e0100__Type(__jule_closure_ctx.alloc->_self_, _45621_e, _45636_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa0e9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _99821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _99836_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaa0e9a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaa0e9a_ctx>();
	return _1c48e4940__Str(__jule_closure_ctx.alloc->_self_, _99821_e, _99836_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa2e03(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _100521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _100536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaa2e03_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaa2e03_ctx>();
	return _1c48e5237__Bits(__jule_closure_ctx.alloc->_self_, _100521_e, _100536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa4d5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _101221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _101236_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaa4d5b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaa4d5b_ctx>();
	return _1c48e5633__Elem(__jule_closure_ctx.alloc->_self_, _101221_e, _101236_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa6cb4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _101921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _101936_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaa6cb4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaa6cb4_ctx>();
	return _1c48e5a2e__Size(__jule_closure_ctx.alloc->_self_, _101921_e, _101936_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaa8c1c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _102621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _102636_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaa8c1c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaa8c1c_ctx>();
	return _1c48e5e2a__Key(__jule_closure_ctx.alloc->_self_, _102621_e, _102636_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1aaaaab75(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _103321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _103336_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1aaaaab75_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aaaaab75_ctx>();
	return _1c48e6326__Value(__jule_closure_ctx.alloc->_self_, _103321_e, _103336_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab406bc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _104021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _104036_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab406bc9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab406bc9_ctx>();
	return _1c48e6722__Fields(__jule_closure_ctx.alloc->_self_, _104021_e, _104036_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab408a99(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _104721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _104736_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab408a99_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab408a99_ctx>();
	return _1c48e6b1d__Statics(__jule_closure_ctx.alloc->_self_, _104721_e, _104736_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40ac77(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _105421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _105436_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab40ac77_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab40ac77_ctx>();
	return _1c48e99de__Params(__jule_closure_ctx.alloc->_self_, _105421_e, _105436_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40cbd0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _106121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _106136_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab40cbd0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab40cbd0_ctx>();
	return _1c48e8504__Types(__jule_closure_ctx.alloc->_self_, _106121_e, _106136_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab40eb38(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _106821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _106836_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab40eb38_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab40eb38_ctx>();
	return _1c48e7019__Public(__jule_closure_ctx.alloc->_self_, _106821_e, _106836_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab411a91(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _107521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _107536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab411a91_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab411a91_ctx>();
	return _1c48e7415__Binded(__jule_closure_ctx.alloc->_self_, _107521_e, _107536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4139e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _108221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _108236_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab4139e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab4139e9_ctx>();
	return _1c48e7811__Ordered(__jule_closure_ctx.alloc->_self_, _108221_e, _108236_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab415952(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _108921_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _108936_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab415952_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab415952_ctx>();
	return _1c48e7c0c__Comparable(__jule_closure_ctx.alloc->_self_, _108921_e, _108936_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4178aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _109621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _109636_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab4178aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab4178aa_ctx>();
	return _1c48e8108__Mutable(__jule_closure_ctx.alloc->_self_, _109621_e, _109636_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab419813(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _110321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _110336_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab419813_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab419813_ctx>();
	return _1c48e8900__Exceptional(__jule_closure_ctx.alloc->_self_, _110321_e, _110336_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab41b76b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _111021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _111036_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab41b76b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab41b76b_ctx>();
	return _1c48e8ceb__CanNil(__jule_closure_ctx.alloc->_self_, _111021_e, _111036_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab41d6c4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _111721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _111736_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab41d6c4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab41d6c4_ctx>();
	return _1c48e91e7__RC(__jule_closure_ctx.alloc->_self_, _111721_e, _111736_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab42062c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _112421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _112436_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab42062c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab42062c_ctx>();
	return _1c48e95e3__Result(__jule_closure_ctx.alloc->_self_, _112421_e, _112436_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab422585(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _113121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _113136_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab422585_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab422585_ctx>();
	return _1c48e4d3b__Kind(__jule_closure_ctx.alloc->_self_, _113121_e, _113136_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab43c77b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _124721_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _124736_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab43c77b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab43c77b_ctx>();
	return _1c48ead53__Unwrap(__jule_closure_ctx.alloc->_self_, _124721_e, _124736_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab43e6d4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _125421_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _125436_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab43e6d4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab43e6d4_ctx>();
	return _1c48eb24e__Type(__jule_closure_ctx.alloc->_self_, _125421_e, _125436_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab44163c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _126121_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _126136_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab44163c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab44163c_ctx>();
	return _1c48eb64a__Lvalue(__jule_closure_ctx.alloc->_self_, _126121_e, _126136_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab443595(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _126821_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _126836_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab443595_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab443595_ctx>();
	return _1c48eba46__Mutable(__jule_closure_ctx.alloc->_self_, _126821_e, _126836_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab4454ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _127521_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _127536_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab4454ed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab4454ed_ctx>();
	return _1c48ebe42__Const(__jule_closure_ctx.alloc->_self_, _127521_e, _127536_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab447456(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _128221_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _128236_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab447456_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab447456_ctx>();
	return _1c48ec33d__Field(__jule_closure_ctx.alloc->_self_, _128221_e, _128236_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab459e4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _139621_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _139636_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab459e4c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab459e4c_ctx>();
	return _1c48eed8a__Path(__jule_closure_ctx.alloc->_self_, _139621_e, _139636_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab45bda5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _140321_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _140336_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab45bda5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab45bda5_ctx>();
	return _1c4900286__Name(__jule_closure_ctx.alloc->_self_, _140321_e, _140336_fc);;
}

inline jule::Ptr<_1c49ce024_Data> __jule_anon_1ab45dd0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49d0c4b_eval>* _141021_e, jule::Ptr<_1c488a7d7_FnCallExpr>* _141036_fc, jule::Ptr<_1c49ce024_Data>* ) {
	jule::Ptr<__jule_anon_1ab45dd0d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab45dd0d_ctx>();
	return _1c4900682__Dir(__jule_closure_ctx.alloc->_self_, _141021_e, _141036_fc);;
}

inline jule::Bool __jule_anon_1ab469841(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c494d290_sema>* _6415_sema, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1ab469841_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab469841_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab46a941:;
		if (it != expr_end) {
			jule::I64 _659_i = it - expr->begin();
			jule::Ptr<_1c488e984_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1c4a0d828_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1ab46a941;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1c4a1020e_TypeKind>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab46d6ad:;
					if (it != expr_end) {
						jule::Ptr<_1c4882779_TypeDecl> _7117_mask = *it;
						{
							jule::I64 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1c4a1020e_TypeKind> _7310_kind = _1c4955d8b_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1c4a2ed00_Lookup_mptr_data3), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type75) {
										_case_begin_1ab4704d4:;
										{
											jule::Ptr<_1c4882d84_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1c4882d84_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1c4904e5b_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1ab46baa7;
											};
										}
									}
									_match_end_1ab47046d:;
								};
								return false;;
							};
							_julec_label_1ab46baa7:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1c4a1020e_TypeKind>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1ab46d6ad:;
						++it;
						goto _iter_begin_1ab46d6ad;
					}
					_iter_end_1ab46d6ad:;
				};
			}
			_iter_next_1ab46a941:;
			++it;
			_659_i++;
			goto _iter_begin_1ab46a941;
		}
		_iter_end_1ab46a941:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1ab7a287c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c494d290_sema>* _111237_sema, jule::Slice<jule::Ptr<_1c4a0e41c_TypeAlias>>* _111255_generics) {
	jule::Ptr<__jule_anon_1ab7a287c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ab7a287c_ctx>();
	jule::Bool _11138_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7a3d23:;
		if (it != expr_end) {
			jule::Ptr<_1c48ba691_ParamIns> _111416_p = *it;
			{
				if (_1c48b73b3_IsSelf((*(_111416_p))._field_Decl.ptr())) {
					if (_1c48b7649_IsRef((*(_111416_p))._field_Decl)) {
						(*_111416_p.alloc)._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)});
					} else {
						(*_111416_p.alloc)._field_Kind=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Owner, (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data0)});
					};
				} else {
					(*(_111416_p))._field_Kind=_1c4957035_buildTypeWithGenerics((*(_111237_sema)), &((*((*((*_111416_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_111255_generics)), (*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Refers);
					if (((*_111416_p.alloc)._field_Kind != nullptr)) {
						_1c495ba51_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_111416_p));
					} else {
						_11138_ok=false;
					};
				};
			}
			_iter_next_1ab7a3d23:;
			++it;
			goto _iter_begin_1ab7a3d23;
		}
		_iter_end_1ab7a3d23:;
	};
	if ((!(_1c48b8bde_IsVoid((*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Result=_1c4957035_buildTypeWithGenerics((*(_111237_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_110837_f))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_111255_generics)), (*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Refers);
		_11138_ok=(((*__jule_closure_ctx.alloc->_110837_f.alloc)._field_Result != nullptr) && _11138_ok);
	};
	return _11138_ok;;
}

inline jule::Bool __jule_anon_1abd333e6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _181943_imp) {
	jule::Ptr<__jule_anon_1abd333e6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1abd333e6_ctx>();
	if ((((*__jule_closure_ctx.alloc->_181731_s.alloc)._field_Ns.len() == 1LL) && ((*(_181943_imp))._field_Alias == __jule_closure_ctx.alloc->_18183_path))) {
		return true;;
	};
	return (((*_181943_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18183_path) && _1c493096a_isAccessibleViaSelection(_181943_imp));;
}

inline jule::Str __jule_anon1ab928959(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85019_def) {
	{
		auto &_match_expr{ (*(_85019_def)) };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ab9299e3:;
			{
				return (*((*(_85019_def)).cast_ptr<_1c4a0e41c_TypeAlias>(&__jule_any_type66)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ab929817:;
			{
				return (*((*(_85019_def)).cast_ptr<_1c48a3679_Struct>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else {
			_case_begin_1ab9293d8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab929383:;
	};
}

inline jule::Bool __jule_anon_1ac038e04(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _152543_imp) {
	jule::Ptr<__jule_anon_1ac038e04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac038e04_ctx>();
	if ((((*__jule_closure_ctx.alloc->_152336_decl.alloc)._field_Idents.len() == 1LL) && ((*(_152543_imp))._field_Alias == __jule_closure_ctx.alloc->_15243_path))) {
		return true;;
	};
	return (((*_152543_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15243_path) && _1c493096a_isAccessibleViaSelection(_152543_imp));;
}

inline void __jule_anon_1ac88a7ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2636_expr) {
	jule::Ptr<__jule_anon_1ac88a7ee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac88a7ee_ctx>();
	{
		auto &_match_expr{ (*(_2636_expr)) };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac88b239:;
			{
				jule::Ptr<_1c48ac83c_FnCallExprModel> _299_m = (*(_2636_expr)).cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33);;
				if (((*(_299_m))._field_Except != nullptr)) {
					{
						_1c57e4d4a_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_299_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac88b091:;
			{
				jule::Ptr<_1c48ad673_AnonFnExprModel> _349_m = (*(_2636_expr)).cast_ptr<_1c48ad673_AnonFnExprModel>(&__jule_any_type100);;
				_1c57e77a9_eliminateDeadCodeOfScope((*((*(_349_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1ac88b1c3:;
	};
}

inline void __jule_anon_1ac4c092e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _55147_m) {
	jule::Ptr<__jule_anon_1ac4c092e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac4c092e_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_55147_m));
	};
	{
		auto &_match_expr{ (*(_55147_m)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ac4c129d:;
			{
				{
					_1c56d021e_binary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48aa85c_BinaryExprModel>(&__jule_any_type111));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ac4c1501:;
			{
				{
					_1c56d04c7_unary(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48aac36_UnaryExprModel>(&__jule_any_type110));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ac4c1314:;
			{
				{
					_1c56d0780_structureLit(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48ab60a_StructLitExprModel>(&__jule_any_type95));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ac4c137a:;
			{
				{
					_1c56d0a38_casting(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48abe8a_CastingExprModel>(&__jule_any_type93));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1ac4c13e1:;
			{
				{
					_1c56d140c_funcCall(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48ac83c_FnCallExprModel>(&__jule_any_type33));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1ac4c1c0a:;
			{
				{
					_1c56d16b5_indexing(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48ad1bc_IndexingExprModel>(&__jule_any_type45));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ac4c1c71:;
			{
				{
					_1c56d196d_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_55147_m)).cast_ptr<_1c48ad673_AnonFnExprModel>(&__jule_any_type100));
				};
			}
		}
		_match_end_1ac4c11b0:;
	};
}

inline void __jule_anon_1aca2d6a6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aca2d6a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca2d6a6_ctx>();
	if (__jule_closure_ctx.alloc->_1377_ref) {
		_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1aca3216b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aca3216b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca3216b_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12936_it))))._field_KeyB.alloc)._field_Reference) {
			_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1aca41642(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aca41642_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca41642_ctx>();
	_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1aca43ab7(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aca43ab7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca43ab7_ctx>();
	_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1aca5c7e5(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1aca5c7e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aca5c7e5_ctx>();
	_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1ac99c339(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac99c339_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac99c339_ctx>();
	_1a97db7ca_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1ac99d648(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ac99d648_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ac99d648_ctx>();
	_1a971764b_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_68930_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1acaae35d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49715b0_Var> _106567_v) {
	jule::Ptr<__jule_anon_1acaae35d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1acaae35d_ctx>();
	return _1a9710545_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_105934_m), &(_106567_v));;
}

inline void __jule_anon_1ace3643d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _74138_pkg) {
	jule::Ptr<__jule_anon_1ace3643d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace3643d_ctx>();
	_1c56b758b_IterFiles(_74138_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace37362, jule::Ptr<__jule_anon_1ace37362_ctx>::make(__jule_anon_1ace37362_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ace37362_ctx_handler));
}

inline void __jule_anon_1ace3794a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _75436_m) {
	jule::Ptr<__jule_anon_1ace3794a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace3794a_ctx>();
	jule::Ptr<_1c48bb719_FnIns> _7558_ins = (*((*(_75436_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_7558_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ace3ab29:;
		if (it != expr_end) {
			jule::I64 _7569_i = it - expr.begin();
			jule::Ptr<_1c48ba691_ParamIns> _75616_ip = *it;
			{
				if (_1c486ed4e_IsAnonIdent((*((*(_75616_ip))._field_Decl))._field_Ident)) {
					(*(*(_75616_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1dc536d2d_Itoa(_7569_i));
				};
			}
			_iter_next_1ace3ab29:;
			++it;
			_7569_i++;
			goto _iter_begin_1ace3ab29;
		}
		_iter_end_1ace3ab29:;
	};
	_1a97dd502_pushResult(__jule_closure_ctx.alloc->_self_, _75436_m);
	_1a97e212c_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _75436_m);
}

inline void __jule_anon_1ace3d06b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _76738_pkg) {
	jule::Ptr<__jule_anon_1ace3d06b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace3d06b_ctx>();
	_1c56b758b_IterFiles(_76738_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace3de6d, jule::Ptr<__jule_anon_1ace3de6d_ctx>::make(__jule_anon_1ace3de6d_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ace3de6d_ctx_handler));
}

inline void __jule_anon_1ace4d653(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ace4d653_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace4d653_ctx>();
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1a9722018_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_83424_v))._field_Value))._field_Data.alloc)._field_Model);
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1ace50721(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ace50721_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace50721_ctx>();
	_1a971764b_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_83424_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1ace52e0a(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ace52e0a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace52e0a_ctx>();
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1ace54082(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1ace54082_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace54082_ctx>();
	_1a97231d4_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_83424_v))._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1ace722c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _97638_pkg) {
	jule::Ptr<__jule_anon_1ace722c0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace722c0_ctx>();
	_1c56b758b_IterFiles(_97638_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace731c2, jule::Ptr<__jule_anon_1ace731c2_ctx>::make(__jule_anon_1ace731c2_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ace731c2_ctx_handler));
}

inline void __jule_anon_1ace73656(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _99136_m) {
	jule::Ptr<__jule_anon_1ace73656_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace73656_ctx>();
	_1a97dc17c_indent(__jule_closure_ctx.alloc->_self_);
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1a972a153_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _99136_m);
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1c48bb719_FnIns> _9964_mepf;
	jule::Bool _99610_exist;
	({
		__jule_tuple_x_1c48bb719_FnIns__jule_tuple_bool __jule_assign_result = _1a97e4a69_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _99136_m);
		_9964_mepf = __jule_assign_result.__jule_result_arg0;
		_99610_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_99610_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:998:5"));;
	};
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_9964_mepf)), 15LL));
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, _1dc53669b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_99049_s)), 15LL));
	_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1ace8108c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _102838_pkg) {
	jule::Ptr<__jule_anon_1ace8108c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace8108c_ctx>();
	_1c56b758b_IterFiles(_102838_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace81e8e, jule::Ptr<__jule_anon_1ace81e8e_ctx>::make(__jule_anon_1ace81e8e_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ace81e8e_ctx_handler));
}

inline void __jule_anon_1ace9d8a1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _115338_pkg) {
	jule::Ptr<__jule_anon_1ace9d8a1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace9d8a1_ctx>();
	_1c56b758b_IterFiles(_115338_pkg, jule::__new_closure<void,jule::Ptr<_1c49c8bab_SymbolTable>*>((void*)__jule_anon_1ace9e7a3, jule::Ptr<__jule_anon_1ace9e7a3_ctx>::make(__jule_anon_1ace9e7a3_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1ace9e7a3_ctx_handler));
}

inline void __jule_anon_1ace9ed69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _116931_file) {
	jule::Ptr<__jule_anon_1ace9ed69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace9ed69_ctx>();
	{
		auto expr = &((*((*(_116931_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acea2cc3:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _117011_f = *it;
			{
				if ((*(_117011_f))._field_Ident.equal("init", 4)) {
					_1a97dc17c_indent(__jule_closure_ctx.alloc->_self_);
					static__1a972a153_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_117011_f));
					_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1acea2cc3:;
			++it;
			goto _iter_begin_1acea2cc3;
		}
		_iter_end_1acea2cc3:;
	};
}

inline void __jule_anon_1aceaa638(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c4930c45_Package>* _120838_pkg) {
	jule::Ptr<__jule_anon_1aceaa638_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aceaa638_ctx>();
	_1a97e71cb_pushInit(__jule_closure_ctx.alloc->_self_, _120838_pkg);
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1ad0400d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I64 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1dc5254ae_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1ad049980(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I64 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1dc525008_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1aae40c63(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c492cd1e_ImportInfo> _143025_pkg) {
	return (*(_143025_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1ace37362(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _74232_file) {
	jule::Ptr<__jule_anon_1ace37362_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace37362_ctx>();
	{
		auto expr = &((*((*(_74232_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace37d13:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _74317_f = *it;
			{
				if (((!((*(_74317_f))._field_Binded)) && ((*_74317_f.alloc)._field_Token != nullptr))) {
					_1a97dd502_pushResult(__jule_closure_ctx.alloc->_self_, &(_74317_f));
					_1a97e1d74_funcDecl(__jule_closure_ctx.alloc->_self_, &(_74317_f), false);
				};
			}
			_iter_next_1ace37d13:;
			++it;
			goto _iter_begin_1ace37d13;
		}
		_iter_end_1ace37d13:;
	};
}

inline void __jule_anon_1ace3de6d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _76832_file) {
	jule::Ptr<__jule_anon_1ace3de6d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace3de6d_ctx>();
	{
		auto expr = &((*((*(_76832_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace3e8ec:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _76917_t = *it;
			{
				if (((*(_76917_t))._field_Token == nullptr)) {
					goto _iter_next_1ace3e8ec;
				};
				_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1a972a72a_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _76917_t);
				_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1a97dbc81_addIndent(__jule_closure_ctx.alloc->_self_);
				_1a97dc17c_indent(__jule_closure_ctx.alloc->_self_);
				_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1a97e25d3_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_76917_t));
				_1a97dbe7e_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1a97dc17c_indent(__jule_closure_ctx.alloc->_self_);
				_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1ace3e8ec:;
			++it;
			goto _iter_begin_1ace3e8ec;
		}
		_iter_end_1ace3e8ec:;
	};
}

inline void __jule_anon_1ace731c2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _97732_file) {
	jule::Ptr<__jule_anon_1ace731c2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace731c2_ctx>();
	{
		auto expr = &((*((*(_97732_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace73b51:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _97817_t = *it;
			{
				if (((*(_97817_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1ace73b51;
				};
				_1c56b8108_IterTraitMethods(&(_97817_t), jule::__new_closure<void,jule::Ptr<_1c48b8738_Fn>*>((void*)__jule_anon_1ace7516e, jule::Ptr<__jule_anon_1ace7516e_ctx>::make(__jule_anon_1ace7516e_ctx{._self_=__jule_closure_ctx.alloc->_self_,._97817_t=_97817_t}).as<jule::Uintptr>(), __jule_anon_1ace7516e_ctx_handler));
			}
			_iter_next_1ace73b51:;
			++it;
			goto _iter_begin_1ace73b51;
		}
		_iter_end_1ace73b51:;
	};
}

inline void __jule_anon_1ace81e8e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _102932_file) {
	jule::Ptr<__jule_anon_1ace81e8e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace81e8e_ctx>();
	{
		auto expr = &((*((*(_102932_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ace8291d:;
		if (it != expr_end) {
			jule::Ptr<_1c48cc1b9_Trait> _103017_t = *it;
			{
				jule::I64 _103110_i = 0LL;;
				{
					auto expr = &((*(_103017_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ace83732:;
					if (it != expr_end) {
						jule::Ptr<_1c48a3679_Struct> _103218_s = *it;
						{
							{
								auto expr = &((*(_103218_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ace840d4:;
								if (it != expr_end) {
									jule::Ptr<_1c48a6407_StructIns> _103319_ins = *it;
									{
										_1a97e585b_traitData(__jule_closure_ctx.alloc->_self_, &(_103017_t), _103110_i, &(_103319_ins));
										(_103110_i)++;
									}
									_iter_next_1ace840d4:;
									++it;
									goto _iter_begin_1ace840d4;
								}
								_iter_end_1ace840d4:;
							};
						}
						_iter_next_1ace83732:;
						++it;
						goto _iter_begin_1ace83732;
					}
					_iter_end_1ace83732:;
				};
			}
			_iter_next_1ace8291d:;
			++it;
			goto _iter_begin_1ace8291d;
		}
		_iter_end_1ace8291d:;
	};
}

inline void __jule_anon_1ace9e7a3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c49c8bab_SymbolTable>* _115432_file) {
	jule::Ptr<__jule_anon_1ace9e7a3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace9e7a3_ctx>();
	{
		auto expr = &((*((*(_115432_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acea0232:;
		if (it != expr_end) {
			jule::Ptr<_1c48b8738_Fn> _115517_f = *it;
			{
				if (((!(_205b64662_Test)) && _1c56c2c06_HasDirective(&((*(_115517_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1acea0232;
				};
				if (((!((*_115517_f.alloc)._field_Binded)) && ((*_115517_f.alloc)._field_Token != nullptr))) {
					_1a97e43b5_func(__jule_closure_ctx.alloc->_self_, &(_115517_f));
					_1a97db7ca_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1acea0232:;
			++it;
			goto _iter_begin_1acea0232;
		}
		_iter_end_1acea0232:;
	};
}

inline void __jule_anon_1ace7516e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1c48b8738_Fn>* _98239_m) {
	jule::Ptr<__jule_anon_1ace7516e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ace7516e_ctx>();
	_1a97e4dcc_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_97817_t), _98239_m);
}

int main(int argc, char *argv[], char *envp[]) {
	jule::setup_argv(argc, argv);
	jule::setup_envp(envp);

	_205b661e1_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1c5202deb_OutDir = jule::Str::lit("dist", 4);
	_1c520313d_OutName = jule::Str::lit("ir.cpp", 6);
	_1c52033d5_Out = jule::Str();
	_23963ba95_STDIN = _23963c39d_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551606LLU));
	_23963bd3c_STDOUT = _23963c39d_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551605LLU));
	_23963c139_STDERR = _23963c39d_GetStdHandle(static_cast<jule::Uintptr>(18446744073709551604LLU));
	_21d80035c_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_21d800ca8_acceptRanges = ({ auto __jule_collection = jule::Array<_21d800912_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _21d800912_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _21d800912_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _21d800912_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _21d800912_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _21d800912_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _21d800912_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_20593d370__L = jule::new_ptr<_2059a04e2_RangeTable>(_2059a04e2_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_20599ea41_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _20599ea41_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _20599ea41_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _20599ea41_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2059a006e_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _2059a006e_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _2059a006e_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _2059a006e_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _2059a006e_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _2059a006e_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_20593e283__LU = jule::new_ptr<_2059a04e2_RangeTable>(_2059a04e2_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_20599ea41_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _20599ea41_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _20599ea41_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _20599ea41_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _20599ea41_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _20599ea41_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_2059a006e_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _2059a006e_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _2059a006e_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _2059a006e_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_205945267_Letter = _20593d370__L;
	_20594b537_Upper = _20593e283__LU;
	_205999013__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_205a02302_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_205a03666_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_205a88454_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_205b5c072_PathStdlib = jule::Str();
	_205b5c281_PathExec = jule::Str();
	_205b5c528_PathWd = jule::Str();
	_205b5c825_PathApi = jule::Str();
	_205b5cacd_Os = jule::Str::lit("windows", 7);
	_205b5cd86_Arch = jule::Str::lit("arm64", 5);
	_205b627b4_Compiler = jule::Str();
	_205b63bb1_CompilerPath = jule::Str();
	_205b63dc0_CppStd = jule::Str::lit("cpp17", 5);
	_205b64101_Shadowing = false;
	_205b643a9_Transpilation = false;
	_205b64662_Test = false;
	_205b6491a_RC = true;
	_205b64cd3_Safety = true;
	_205b65025_Production = false;
	_1dc4c9661__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1dc4c9c05__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	_1dc51e211_f32info = _1dc51dd15_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1dc51e50d_f64info = _1dc51dd15_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1dc526ed8_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1dc528ced_powtab = ({ auto __jule_collection = jule::Slice<jule::I64>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1dc5298ae_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1dc529bde_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1dc52ce45_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1dc532114_leftCheats = ({ auto __jule_collection = jule::Slice<_1dc531bd5_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1dc531bd5_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1dc531bd5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1dc531bd5_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1dc5381b4_BitSize = 0LL;
	_1dc5384b1_SysInt = jule::Str();
	_1dc538769_SysUint = jule::Str();
	_1c34c9317_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1c34c9603_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U64,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(68LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(65LLU); __jule_collection; });
	_1c48660a9_BinOps = ({ auto __jule_collection = jule::Array<jule::U64,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(60LLU); (*it++) = static_cast<jule::U64>(61LLU); (*it++) = static_cast<jule::U64>(62LLU); (*it++) = static_cast<jule::U64>(63LLU); (*it++) = static_cast<jule::U64>(64LLU); (*it++) = static_cast<jule::U64>(65LLU); (*it++) = static_cast<jule::U64>(66LLU); (*it++) = static_cast<jule::U64>(67LLU); (*it++) = static_cast<jule::U64>(56LLU); (*it++) = static_cast<jule::U64>(57LLU); (*it++) = static_cast<jule::U64>(69LLU); (*it++) = static_cast<jule::U64>(70LLU); (*it++) = static_cast<jule::U64>(53LLU); (*it++) = static_cast<jule::U64>(52LLU); (*it++) = static_cast<jule::U64>(54LLU); (*it++) = static_cast<jule::U64>(55LLU); (*it++) = static_cast<jule::U64>(50LLU); (*it++) = static_cast<jule::U64>(51LLU); __jule_collection; });
	_1c4866681_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(58LLU); (*it++) = static_cast<jule::U64>(59LLU); __jule_collection; });
	_1c486696c_AssignOps = ({ auto __jule_collection = jule::Array<jule::U64,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U64>(71LLU); (*it++) = static_cast<jule::U64>(40LLU); (*it++) = static_cast<jule::U64>(41LLU); (*it++) = static_cast<jule::U64>(43LLU); (*it++) = static_cast<jule::U64>(42LLU); (*it++) = static_cast<jule::U64>(44LLU); (*it++) = static_cast<jule::U64>(46LLU); (*it++) = static_cast<jule::U64>(45LLU); (*it++) = static_cast<jule::U64>(49LLU); (*it++) = static_cast<jule::U64>(48LLU); (*it++) = static_cast<jule::U64>(47LLU); __jule_collection; });
	_1c4874eb9_keywords = ({ auto __jule_collection = jule::Array<_1c4874a8a_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U64>(6LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U64>(7LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U64>(9LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U64>(10LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U64>(12LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U64>(13LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U64>(14LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U64>(16LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U64>(22LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U64>(23LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U64>(24LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U64>(30LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U64>(34LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U64>(36LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}; __jule_collection; });
	_1c48752e9_basicOps = ({ auto __jule_collection = jule::Array<_1c4874a8a_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U64>(19LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U64>(8LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U64>(3LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U64>(5LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U64>(39LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U64>(17LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U64>(50LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U64>(55LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U64>(58LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U64>(59LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U64>(60LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U64>(61LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U64>(62LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U64>(63LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U64>(64LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U64>(65LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U64>(66LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U64>(67LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U64>(68LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U64>(69LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U64>(70LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U64>(71LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U64>(35LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U64>(72LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U64>(73LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U64>(76LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U64>(77LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U64>(74LLU)}; (*it++) = _1c4874a8a_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}; __jule_collection; });
	_1c4902b90_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("signed", 6); (*it++) = jule::Str::lit("unsigned", 8); (*it++) = jule::Str::lit("float", 5); (*it++) = jule::Str::lit("numeric", 7); (*it++) = jule::Str::lit("mutable", 7); (*it++) = jule::Str::lit("immutable", 9); (*it++) = jule::Str::lit("ordered", 7); (*it++) = jule::Str::lit("comparable", 10); __jule_collection; });
	_21ddd0156_primNil = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_21ddd0453_primVoid = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd070b_primAny = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd0a08_primStr = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd0cb1_primBool = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd1069_primUintptr = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd1322_primUint = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd16da_primInt = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd192c_primI8 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd1bc4_primI16 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd1e7c_primI32 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd2235_primI64 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd24dd_primU8 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd2796_primU16 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd2a4e_primU32 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd3038_primU64 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd327a_primF32 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_21ddd3489_primF64 = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1c4a2c12c_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)});
	_1c56d5840_emptyData = jule::new_ptr<_1c56d6236_data>(_1c56d6236_data{._field_boundary=jule::Ptr<_1c56d7bb6_boundary>(nullptr), ._field_nils=jule::Ptr<_21dde5754_nils>(nullptr), ._field_dynamic=jule::Ptr<_1c56d35a7_dynamic>(nullptr)});
	_1c56da856_Copy = false;
	_1c56dab53_Deadcode = false;
	_1c56dae0b_Append = false;
	_1c56db208_Math = false;
	_1c56db4b1_Access = false;
	_1c56db769_Inline = false;
	_1c56dba22_Ptr = false;
	_1c56dbdda_Cond = false;
	_1c56dc12c_Str = false;
	_1c56dc3c4_Slice = false;
	_1c56dc67c_Assign = false;
	_1c56dc935_Exceptional = false;
	_1c56dcbdd_Iter = false;
	_1c56dce96_Dynamic = false;
	_1c57e9910_exprEnabled = false;
	_1c57e9b52_scopeEnabled = false;
	_1a97ce548_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1a970664b_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1a97d907a_generalGCPtr = jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a1b814_Sptr>(_1c4a1b814_Sptr{._field_Elem=jule::new_ptr<_1c4a1020e_TypeKind>(_1c4a1020e_TypeKind{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1c4a17cd8_Prim>(_1c4a17cd8_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1c4a0ec58_Kind_mptr_data21)});
	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}