// Auto generated by JuleC.
// JuleC version: jule0.0.10 @master
// Date: 27/3/2024 13.34 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION


#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   

struct _1a5993d1b_Reader {};
struct _1a5994327_Writer {};
struct _1a5994a42_WriterCloser {};
struct _1a5995416_Stream {};
struct _1ac57d25b_Importer {};
struct _1a591395b_Kind {};
struct _1a5932ea8_Lookup {};
struct _1a63c0dda_CommonFlag {};

struct _1c3ac8839_FoldPair;


struct _1c3ac90cb_CaseRange;


struct _1c3ac9829_Range16;


struct _1c3aca0bb_Range32;


struct _1c3aca819_RangeTable;


struct _1c477d499_accept_range;


struct _1c4787e32_LazyBuff;


struct _1dc3797b9_DirEntry;


struct _1dc379bd7_Directory;


struct _1dc37a105_File;


struct _1dc37a523_Status;


struct _1c484ad6e_Cmd;


struct _1c4810251_Log;


struct _1aa07563a_Token;


struct _1aa07b982_File;


struct _1aa07e3ad_KindPair;


struct _1aa085ddc_Lex;


struct _1dd582707_Ast;


struct _1dd583c9c_NamespaceTypeDecl;


struct _1aa08b453_SptrTypeDecl;


struct _1aa08b871_SlcTypeDecl;


struct _1aa08bc8e_TupleTypeDecl;


struct _1aa08c1ac_PtrTypeDecl;


struct _1aa08c5ca_ArrTypeDecl;


struct _1aa08c9e8_MapTypeDecl;


struct _1aa08ce16_RetTypeDecl;


struct _1aa08db70_TupleExpr;


struct _1aa090a51_CastExpr;


struct _1aa092514_StructLit;


struct _1aa09632b_ScopeTree;


struct _1aa099a38_Conditional;


struct _1aa09ecd5_Impl;


struct _1aa5da8b4_FileInfo;


struct _1aa5dacd2_PackageInfo;


struct _1aa5dd587_Stmt;


struct _1aa5de236_ScopeParser;


struct _1aa5ed278_CallData;


struct _1aa5eebc5_ExprBuilder;


struct _1aa611b60_Parser;


struct _1aa626746_TypeBuilder;


struct _1ac3a1bb7_FloatInfo;


struct _1ac3a20d5_DecimalSlice;


struct _1ac440926_LeftCheat;


struct _1ac4415e7_Decimal;


struct _1ac4d0ec2_Const;


struct _1a5992699_FileStream;


struct _1a59957ce_ByteStream;


struct _1a5998590_Scanner;


struct _1ab80e8b7_Operators;


struct _1ab8137bc_FieldIns;


struct _1ab816825_OperandExprModel;


struct _1ab817da9_StructArgExprModel;


struct _1ab818508_StructLitExprModel;


struct _1ab818ae1_AllocStructLitExprModel;


struct _1ab81a74c_SliceExprModel;


struct _1ab81b5e9_AnonFnExprModel;


struct _1ab81bc48_KeyValPairExprModel;


struct _1ab81c496_MapExprModel;


struct _1ab81ea09_StructStaticIdentExprModel;


struct _1ab820136_ArrayExprModel;


struct _1ab820686_CommonIdentExprModel;


struct _1ab821599_TupleExprModel;


struct _1ab821c81_BuiltinOutCallExprModel;


struct _1ab822446_BuiltinOutlnCallExprModel;


struct _1ab822a0c_BuiltinCloneCallExprModel;


struct _1ab8231c2_BuiltinNewCallExprModel;


struct _1ab82976c_BuiltinMakeCallExprModel;


struct _1ab829e32_BuiltinAppendCallExprModel;


struct _1ab82a5e7_BuiltinErrorCallExprModel;


struct _1ab82ab25_SizeofExprModel;


struct _1ab82b4c7_AlignofExprModel;


struct _1ab82b98e_RuneExprModel;


struct _1ab82c000_IntegratedToStrExprModel;


struct _1ab82c72b_TernaryExprModel;


struct _1ab82cd7a_BackendEmitExprModel;


struct _1ab82d3ca_FreeExprModel;


struct _1ab82e7a5_RetType;


struct _1ab834db5_ParamIns;


struct _1ab836218_FnIns;


struct _1ab839d43_ReferenceStack;


struct _1ab840d16_SymbolBuilder;


struct _1ac44c05e_Impl;


struct _1ac56022c_Scope;


struct _1ac56064a_If;


struct _1ac560a68_Else;


struct _1ac560e86_Conditional;


struct _1ac5613a4_InfIter;


struct _1ac5617c2_WhileIter;


struct _1ac561be0_RangeIter;


struct _1ac56210d_ContSt;


struct _1ac56252b_BreakSt;


struct _1ac562949_Label;


struct _1ac562d67_GotoSt;


struct _1ac563285_Postfix;


struct _1ac563ac1_MultiAssign;


struct _1ac563ede_Match;


struct _1ac56463d_Case;


struct _1ac564a5b_FallSt;


struct _1ac564e79_RetSt;


struct _1ac5657b5_ScopeGoto;


struct _1ac565bd3_ScopeChecker;


struct _1ac578e49_DirectiveChecker;


struct _1ac58451a_Package;


struct _1a5864747_Sema;


struct _1a58825bc_MissingRetChecker;


struct _1a5884a0e_IterRelation;


struct _1a5886d30_FuncPattern;


struct _1a58c392c_RangeChecker;


struct _1a58c88ee_SymbolTable;


struct _1a58cee44_Data;


struct _1a58d1451_Value;


struct _1a58d2397_Eval;


struct _1a5903253_UnaryEval;


struct _1a5913e9a_TypeKind;


struct _1a5918a0a_TypeSymbol;


struct _1a591970e_Prim;


struct _1a591d768_Sptr;


struct _1a591e549_Slc;


struct _1a59203b3_Tuple;


struct _1a592132b_Map;


struct _1a592230a_Arr;


struct _1a59230db_Ptr;


struct _1a5926045_Referencer;


struct _1dd532d5b_CompileInfo;


struct _1aa0a0203_DirectiveEval;


struct _1a599d551_JuleImporter;


struct _1a59a3e6e_OrderedDefines;


struct _1a59a4414_DefineOrderer;


struct _1a59aba6a_ScopeDeadCode;


struct _1a59ce3d9_AnsiEscape;


struct _1a59d0918_Logger;


struct _1a631ed5b_UnsafeBinopExprModel;


struct _1a6320279_UnsafeIndexingExprModel;


struct _1a63207da_PushToSliceExprModel;


struct _1a6321753_StrInsertBeginExprModel;


struct _1a632326b_ScopeOptimizer;


struct _1a63299d1_ExprOptimizer;


struct _1a633317c_Optimizer;


struct _1a63968c7_AbsTime;


struct _1a6397378_Time;


struct _1a63999b8_Duration;


struct _1a61c4716_TestCoder;


struct _1a62cbac6_ScopeCoder;


struct _1a6224546_ExprCoder;


struct _1a6342510_DeriveCoder;


struct _1a63445bc_IdentCoder;


struct _1a639cb42_SerializationInfo;


struct _1a639d060_TraitHash;


struct _1a63a7ee3_CustomType;


struct _1a63a8c5d_TypeCoder;


struct _1a63c12d6_Flag_0;

struct _1a63c12d6_Flag_1;

struct _1a63c12d6_Flag_2;

struct _1a63c12d6_Flag_3;

struct _1a63c12d6_Flag_4;


struct _1a63c28c0_FlagSet;


struct _1aa08e08d_LitExpr;


struct _1aa08e4ab_UnsafeExpr;


struct _1aa08e8c9_CoExpr;


struct _1aa08ece7_IdentExpr;


struct _1aa090215_UnaryExpr;


struct _1aa60c82b_AssignInfo;


struct _1aa090633_VariadicExpr;


struct _1dd583043_Directive;


struct _1aa090e6e_NsSelectionExpr;


struct _1aa09138c_SubIdentExpr;


struct _1aa0917aa_BinopExpr;


struct _1aa091bc8_FnCallExpr;


struct _1ac5636a3_Assign;


struct _1aa0920e6_FieldExprPair;


struct _1dd583461_TypeDecl;


struct _1aa092932_BraceLit;


struct _1aa092d50_KeyValPair;


struct _1ab80cdd2_Field;


struct _1ac565397_ScopeLabel;


struct _1aa09326d_SliceExpr;


struct _1ab810b3d_Struct;


struct _1aa093b0e_IndexingExpr;


struct _1ac580d41_ImportInfo;


struct _1ab814515_StructIns;


struct _1aa09402c_SlicingExpr;


struct _1ab8170b7_BinopExprModel;


struct _1ab817716_UnaryExprModel;


struct _1a588601b_Var;


struct _1aa09444a_TernaryExpr;


struct _1a58b5c2c_TypeCompatibilityChecker;


struct _1a58b7778_AssignTypeChecker;


struct _1a58b9747_DynamicTypeAnnotation;


struct _1a58bd0b9_FnCallArgChecker;


struct _1a58c151d_StructLitChecker;


struct _1aa094868_GenericDecl;


struct _1a58c648a_RetTypeChecker;


struct _1aa094c86_LabelSt;


struct _1ab81941b_CastingExprModel;


struct _1ab81a0ed_FnCallExprModel;


struct _1aa0951a4_GotoSt;


struct _1ab81ae9a_IndexingExprModel;


struct _1a5905772_BinaryEval;


struct _1a5912d12_TypeAlias;


struct _1aa0955c2_FallSt;


struct _1aa0959e0_AssignLeft;


struct _1aa095e0d_AssignSt;


struct _1ab81cce3_SlicingExprModel;


struct _1ab81d640_TraitSubIdentExprModel;


struct _1ab81e245_StructSubIdentExprModel;


struct _1dd58387e_IdentTypeDecl;


struct _1aa096749_ParamDecl;


struct _1aa096b67_FnDecl;


struct _1ab82106b_CommonSubIdentExprModel;


struct _1a5927189_TypeChecker;


struct _1aa097085_VarDecl;


struct _1aa0974a3_RetSt;


struct _1aa0978c1_Iter;


struct _1a59a1895_IR;


struct _1aa097cde_WhileKind;


struct _1aa09820c_RangeKind;


struct _1ab823887_BuiltinPanicCallExprModel;


struct _1ab828ea8_BuiltinAssertCallExprModel;


struct _1aa09862a_BreakSt;


struct _1aa098a48_ContSt;


struct _1aa098e66_If;


struct _1aa09942d_Else;


struct _1a632106b_MutSlicingExprModel;


struct _1aa08d334_Expr;


struct _1aa09a330_TypeAliasDecl;


struct _1aa09a93a_Case;


struct _1aa09b188_MatchCase;


struct _1aa09ba29_UseDecl;


struct _1aa09c134_EnumItemDecl;


struct _1aa09cb7e_EnumDecl;


struct _1ab830300_Param;


struct _1ab832324_Fn;


struct _1aa09d5db_FieldDecl;


struct _1aa09de7c_StructDecl;


struct _1aa09e631_TraitDecl;


struct _1ab83b66e_Pass;


struct _1aa08d752_UseExpr;


struct _1a639d47d_ObjectCoder;


struct _1ac44770d_Trait;


struct _1ac44948a_EnumItem;


struct _1ac44a337_Enum;


struct _1dd582b25_Node;


struct _1a63c5a7c_ArgParser;

struct _1c3ac8839_FoldPair {
	jule::U16 _field_from = jule::U16();
	jule::U16 _field_to = jule::U16();


	_1c3ac8839_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_1c3ac8839_FoldPair(void) = default;

	inline bool operator==(_1c3ac8839_FoldPair _other) {
		return 
			this->_field_from == _other._field_from &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1c3ac8839_FoldPair _other) { return !this->operator==(_other); }


};
struct _1c3ac90cb_CaseRange {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::Array<jule::I32,3> _field_delta = jule::Array<jule::I32,3>();


	_1c3ac90cb_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_1c3ac90cb_CaseRange(void) = default;

	inline bool operator==(_1c3ac90cb_CaseRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_delta == _other._field_delta;
	}

	inline bool operator!=(_1c3ac90cb_CaseRange _other) { return !this->operator==(_other); }


};
struct _1c3ac9829_Range16 {
	jule::U16 _field_lo = jule::U16();
	jule::U16 _field_hi = jule::U16();
	jule::U16 _field_stride = jule::U16();


	_1c3ac9829_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1c3ac9829_Range16(void) = default;

	inline bool operator==(_1c3ac9829_Range16 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1c3ac9829_Range16 _other) { return !this->operator==(_other); }


};
struct _1c3aca0bb_Range32 {
	jule::U32 _field_lo = jule::U32();
	jule::U32 _field_hi = jule::U32();
	jule::U32 _field_stride = jule::U32();


	_1c3aca0bb_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_1c3aca0bb_Range32(void) = default;

	inline bool operator==(_1c3aca0bb_Range32 _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi &&
			this->_field_stride == _other._field_stride;
	}

	inline bool operator!=(_1c3aca0bb_Range32 _other) { return !this->operator==(_other); }


};
struct _1c3aca819_RangeTable {
	jule::Slice<_1c3ac9829_Range16> _field_r16 = jule::Slice<_1c3ac9829_Range16>();
	jule::Slice<_1c3aca0bb_Range32> _field_r32 = jule::Slice<_1c3aca0bb_Range32>();
	jule::I64 _field_latin_offset = jule::I64();


	_1c3aca819_RangeTable(jule::Slice<_1c3ac9829_Range16> __param_r16, jule::Slice<_1c3aca0bb_Range32> __param_r32, jule::I64 __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_1c3aca819_RangeTable(void) = default;

	inline bool operator==(_1c3aca819_RangeTable _other) {
		return 
			this->_field_r16 == _other._field_r16 &&
			this->_field_r32 == _other._field_r32 &&
			this->_field_latin_offset == _other._field_latin_offset;
	}

	inline bool operator!=(_1c3aca819_RangeTable _other) { return !this->operator==(_other); }


};
struct _1c477d499_accept_range {
	jule::U8 _field_lo = jule::U8();
	jule::U8 _field_hi = jule::U8();


	_1c477d499_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_1c477d499_accept_range(void) = default;

	inline bool operator==(_1c477d499_accept_range _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1c477d499_accept_range _other) { return !this->operator==(_other); }


};
inline jule::U8 _1c478864c_index(_1c4787e32_LazyBuff*,jule::I64);
inline void _1c478896b_append(_1c4787e32_LazyBuff*,jule::U8);
inline jule::Str _1c4788c46_string(_1c4787e32_LazyBuff*);
struct _1c4787e32_LazyBuff {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();
	jule::I64 _field_w = jule::I64();
	jule::Str _field_vol_and_path = jule::Str();
	jule::I64 _field_vol_len = jule::I64();


	_1c4787e32_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::I64 __param_w, jule::Str __param_vol_and_path, jule::I64 __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_1c4787e32_LazyBuff(void) = default;

	inline bool operator==(_1c4787e32_LazyBuff _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_buff == _other._field_buff &&
			this->_field_w == _other._field_w &&
			this->_field_vol_and_path == _other._field_vol_and_path &&
			this->_field_vol_len == _other._field_vol_len;
	}

	inline bool operator!=(_1c4787e32_LazyBuff _other) { return !this->operator==(_other); }


};
struct _1dc3797b9_DirEntry {
	jule::Str _field_name = jule::Str();
	jule::Ptr<_1dc37a523_Status> _field_stat = jule::Ptr<_1dc37a523_Status>();


	_1dc3797b9_DirEntry(jule::Str __param_name, jule::Ptr<_1dc37a523_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_1dc3797b9_DirEntry(void) = default;

	inline bool operator==(_1dc3797b9_DirEntry _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_stat == _other._field_stat;
	}

	inline bool operator!=(_1dc3797b9_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>> static__1c478d2de_read(jule::Str);
inline jule::VoidExceptional static__1c478d564_create(jule::Str);
inline jule::VoidExceptional static__1c478d7d9_remove(jule::Str);
struct _1dc379bd7_Directory {
	

	_1dc379bd7_Directory(void) = default;

	inline bool operator==(_1dc379bd7_Directory _other) { return true; }

	inline bool operator!=(_1dc379bd7_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1dc37a105_File>> static__1dc2bca4d_open(jule::Str,jule::I64,jule::I64);
inline jule::VoidExceptional static__1dc2c4527_remove(jule::Str);
inline jule::Exceptional<jule::I64> _1dc306092_write(_1dc37a105_File*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1dc308825_read(_1dc37a105_File*,jule::Slice<jule::U8>);
inline jule::Ptr<_1dc37a105_File> static__1dc2c2668_new(jule::U64);
inline jule::Exceptional<jule::Ptr<_1dc37a105_File>> static__1dc2d0379_create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1dc2bd389_read(jule::Str);
inline jule::VoidExceptional static__1dc2c8d45_write(jule::Str,jule::Slice<jule::U8>,jule::I64);
inline jule::Exceptional<jule::I64> _1dc2c995b_seek(_1dc37a105_File*,jule::I64,jule::I64);
inline jule::VoidExceptional _1dc2cca19_close(_1dc37a105_File*);
struct _1dc37a105_File {
	jule::U64 _field_handle = jule::U64();


	_1dc37a105_File(jule::U64 __param_handle): _field_handle(__param_handle) {}

	

	_1dc37a105_File(void) = default;

	inline bool operator==(_1dc37a105_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1dc37a105_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1dc37a523_Status>> static__1dc30a4a3_of(jule::Str);
inline jule::Bool _1dc309947_is_dir(_1dc37a523_Status*);
inline jule::Bool _1dc311443_is_reg(_1dc37a523_Status*);
struct _1dc37a523_Status {
	jule::U64 _field_mode = jule::U64();
	jule::U64 _field_size = jule::U64();


	_1dc37a523_Status(jule::U64 __param_mode, jule::U64 __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_1dc37a523_Status(void) = default;

	inline bool operator==(_1dc37a523_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1dc37a523_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1c484ad6e_Cmd> static__1c484b512_new(jule::Str);
inline jule::Exceptional<jule::I64> _1c484b7dc_spawn(_1c484ad6e_Cmd*);
inline jule::Exceptional<jule::I64> _1c484ea21___spawn(_1c484ad6e_Cmd*);
struct _1c484ad6e_Cmd {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_env = jule::Slice<jule::Str>();


	_1c484ad6e_Cmd(jule::Str __param_path, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_env): _field_path(__param_path), _field_args(__param_args), _field_env(__param_env) {}

	

	_1c484ad6e_Cmd(void) = default;

	inline bool operator==(_1c484ad6e_Cmd _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_args == _other._field_args &&
			this->_field_env == _other._field_env;
	}

	inline bool operator!=(_1c484ad6e_Cmd _other) { return !this->operator==(_other); }


};
struct _1c4810251_Log {
	jule::I64 _field_kind = 0LL;
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_path = jule::Str();
	jule::Str _field_text = jule::Str();
	jule::Str _field_line = jule::Str();
	jule::Str _field_suggestion = jule::Str();


	_1c4810251_Log(jule::I64 __param_kind, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_1c4810251_Log(void) = default;

	inline bool operator==(_1c4810251_Log _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_path == _other._field_path &&
			this->_field_text == _other._field_text &&
			this->_field_line == _other._field_line &&
			this->_field_suggestion == _other._field_suggestion;
	}

	inline bool operator!=(_1c4810251_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1aa075c89_prec(_1aa07563a_Token*);
struct _1aa07563a_Token {
	jule::Ptr<_1aa07b982_File> _field_file = jule::Ptr<_1aa07b982_File>();
	jule::I64 _field_row = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::Str _field_kind = jule::Str();
	jule::U64 _field_id = 0LLU;


	_1aa07563a_Token(jule::Ptr<_1aa07b982_File> __param_file, jule::I64 __param_row, jule::I64 __param_column, jule::Str __param_kind, jule::U64 __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1aa07563a_Token(void) = default;

	inline bool operator==(_1aa07563a_Token _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_row == _other._field_row &&
			this->_field_column == _other._field_column &&
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1aa07563a_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa07c103_is_ok(_1aa07b982_File*);
inline void _1aa07c422_fill(_1aa07b982_File*,jule::Slice<jule::U8>);
inline jule::Str _1aa07c6ec_dir(_1aa07b982_File*);
inline jule::Str _1aa07c9c7_name(_1aa07b982_File*);
inline jule::U64 _1aa07cca2_addr(_1aa07b982_File*);
inline jule::Str _1aa07d159_get_row(_1aa07b982_File*,jule::I64);
struct _1aa07b982_File {
	jule::Str _field_path = jule::Str();
	jule::Slice<jule::U8> _field_data = jule::Slice<jule::U8>();
	jule::Slice<_1aa07563a_Token> _field_tokens = jule::Slice<_1aa07563a_Token>();


	_1aa07b982_File(jule::Str __param_path, jule::Slice<jule::U8> __param_data, jule::Slice<_1aa07563a_Token> __param_tokens): _field_path(__param_path), _field_data(__param_data), _field_tokens(__param_tokens) {}

	

	_1aa07b982_File(void) = default;

	inline bool operator==(_1aa07b982_File _other) {
		return 
			this->_field_path == _other._field_path &&
			this->_field_data == _other._field_data &&
			this->_field_tokens == _other._field_tokens;
	}

	inline bool operator!=(_1aa07b982_File _other) { return !this->operator==(_other); }


};
struct _1aa07e3ad_KindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;


	_1aa07e3ad_KindPair(jule::Str __param_kind, jule::U64 __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_1aa07e3ad_KindPair(void) = default;

	inline bool operator==(_1aa07e3ad_KindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1aa07e3ad_KindPair _other) { return !this->operator==(_other); }


};
inline void _1aa08675b_push_err(_1aa085ddc_Lex*,jule::Str,jule::Slice<jule::Any>);
inline void _1aa086b57_push_err_tok(_1aa085ddc_Lex*,_1aa07563a_Token&,jule::Str);
inline void _1aa086d99_lex(_1aa085ddc_Lex*);
inline jule::Str _1aa087251_id(_1aa085ddc_Lex*,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1aa08752b_resume(_1aa085ddc_Lex*);
inline void _1aa08784a_lex_line_comment(_1aa085ddc_Lex*,_1aa07563a_Token&);
inline void _1aa087b69_lex_range_comment(_1aa085ddc_Lex*,_1aa07563a_Token&);
inline jule::Str _1aa088021_num(_1aa085ddc_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1aa0883c8_escape_seq(_1aa085ddc_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1aa08885c_get_rune(_1aa085ddc_Lex*,jule::Slice<jule::U8>&,jule::Bool);
inline jule::Str _1aa088c14_lex_rune(_1aa085ddc_Lex*,jule::Slice<jule::U8>&);
inline jule::Str _1aa088ede_lex_str(_1aa085ddc_Lex*);
inline jule::Bool _1aa0892b9_is_first_token_of_line(_1aa085ddc_Lex*);
inline void _1aa08950b_new_line(_1aa085ddc_Lex*);
inline jule::Bool _1aa089b49_is_op(_1aa085ddc_Lex*,jule::Slice<jule::U8>&,jule::Str,jule::U64,_1aa07563a_Token&);
inline jule::Bool _1aa08a0cd_lex_basic_ops(_1aa085ddc_Lex*,jule::Slice<jule::U8>,_1aa07563a_Token&);
inline jule::Bool _1aa08a562_lex_id(_1aa085ddc_Lex*,jule::Slice<jule::U8>&,_1aa07563a_Token&);
inline jule::Bool _1aa08a9e6_lex_num(_1aa085ddc_Lex*,jule::Slice<jule::U8>&,_1aa07563a_Token&);
inline _1aa07563a_Token _1aa08acc1_token(_1aa085ddc_Lex*);
struct _1aa085ddc_Lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<_1aa07563a_Token> _field_tokens = jule::Slice<_1aa07563a_Token>();
	jule::Ptr<_1aa07b982_File> _field_file = jule::Ptr<_1aa07b982_File>();
	jule::I64 _field_pos = jule::I64();
	jule::I64 _field_column = jule::I64();
	jule::I64 _field_row = jule::I64();
	jule::Slice<_1c4810251_Log> _field_errors = jule::Slice<_1c4810251_Log>();


	_1aa085ddc_Lex(jule::I64 __param_mode, jule::Slice<_1aa07563a_Token> __param_tokens, jule::Ptr<_1aa07b982_File> __param_file, jule::I64 __param_pos, jule::I64 __param_column, jule::I64 __param_row, jule::Slice<_1c4810251_Log> __param_errors): _field_mode(__param_mode), _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_1aa085ddc_Lex(void) = default;

	inline bool operator==(_1aa085ddc_Lex _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_file == _other._field_file &&
			this->_field_pos == _other._field_pos &&
			this->_field_column == _other._field_column &&
			this->_field_row == _other._field_row &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aa085ddc_Lex _other) { return !this->operator==(_other); }


};
struct _1dd582707_Ast {
	jule::Ptr<_1aa07b982_File> _field_file = jule::Ptr<_1aa07b982_File>();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_top_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Slice<jule::Ptr<_1aa09ba29_UseDecl>> _field_use_decls = jule::Slice<jule::Ptr<_1aa09ba29_UseDecl>>();
	jule::Slice<_1dd582b25_Node> _field_nodes = jule::Slice<_1dd582b25_Node>();


	_1dd582707_Ast(jule::Ptr<_1aa07b982_File> __param_file, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_1aa09ba29_UseDecl>> __param_use_decls, jule::Slice<_1dd582b25_Node> __param_nodes): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_nodes(__param_nodes) {}

	

	_1dd582707_Ast(void) = default;

	inline bool operator==(_1dd582707_Ast _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_top_directives == _other._field_top_directives &&
			this->_field_use_decls == _other._field_use_decls &&
			this->_field_nodes == _other._field_nodes;
	}

	inline bool operator!=(_1dd582707_Ast _other) { return !this->operator==(_other); }


};
struct _1dd583c9c_NamespaceTypeDecl {
	jule::Slice<_1aa07563a_Token> _field_idents = jule::Slice<_1aa07563a_Token>();
	jule::Ptr<_1dd58387e_IdentTypeDecl> _field_kind = jule::Ptr<_1dd58387e_IdentTypeDecl>();


	_1dd583c9c_NamespaceTypeDecl(jule::Slice<_1aa07563a_Token> __param_idents, jule::Ptr<_1dd58387e_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_1dd583c9c_NamespaceTypeDecl(void) = default;

	inline bool operator==(_1dd583c9c_NamespaceTypeDecl _other) {
		return 
			this->_field_idents == _other._field_idents &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dd583c9c_NamespaceTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08b453_SptrTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_elem = jule::Ptr<_1dd583461_TypeDecl>();


	_1aa08b453_SptrTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aa08b453_SptrTypeDecl(void) = default;

	inline bool operator==(_1aa08b453_SptrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aa08b453_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08b871_SlcTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_elem = jule::Ptr<_1dd583461_TypeDecl>();


	_1aa08b871_SlcTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aa08b871_SlcTypeDecl(void) = default;

	inline bool operator==(_1aa08b871_SlcTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aa08b871_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08bc8e_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _field_types = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>();


	_1aa08bc8e_TupleTypeDecl(jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_1aa08bc8e_TupleTypeDecl(void) = default;

	inline bool operator==(_1aa08bc8e_TupleTypeDecl _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1aa08bc8e_TupleTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa051bbb_is_unsafe(_1aa08c1ac_PtrTypeDecl*);
struct _1aa08c1ac_PtrTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_elem = jule::Ptr<_1dd583461_TypeDecl>();


	_1aa08c1ac_PtrTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_1aa08c1ac_PtrTypeDecl(void) = default;

	inline bool operator==(_1aa08c1ac_PtrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1aa08c1ac_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa054361_auto_sized(_1aa08c5ca_ArrTypeDecl*);
struct _1aa08c5ca_ArrTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_elem = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1aa08d334_Expr> _field_size = jule::Ptr<_1aa08d334_Expr>();


	_1aa08c5ca_ArrTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_elem, jule::Ptr<_1aa08d334_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_1aa08c5ca_ArrTypeDecl(void) = default;

	inline bool operator==(_1aa08c5ca_ArrTypeDecl _other) {
		return 
			this->_field_elem == _other._field_elem &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1aa08c5ca_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08c9e8_MapTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_key = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1dd583461_TypeDecl> _field_val = jule::Ptr<_1dd583461_TypeDecl>();


	_1aa08c9e8_MapTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_key, jule::Ptr<_1dd583461_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1aa08c9e8_MapTypeDecl(void) = default;

	inline bool operator==(_1aa08c9e8_MapTypeDecl _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1aa08c9e8_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08ce16_RetTypeDecl {
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Slice<_1aa07563a_Token> _field_idents = jule::Slice<_1aa07563a_Token>();


	_1aa08ce16_RetTypeDecl(jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Slice<_1aa07563a_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1aa08ce16_RetTypeDecl(void) = default;

	inline bool operator==(_1aa08ce16_RetTypeDecl _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1aa08ce16_RetTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aa08db70_TupleExpr {
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_expr = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();


	_1aa08db70_TupleExpr(jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_1aa08db70_TupleExpr(void) = default;

	inline bool operator==(_1aa08db70_TupleExpr _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa08db70_TupleExpr _other) { return !this->operator==(_other); }


};
struct _1aa090a51_CastExpr {
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa090a51_CastExpr(jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1aa090a51_CastExpr(void) = default;

	inline bool operator==(_1aa090a51_CastExpr _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa090a51_CastExpr _other) { return !this->operator==(_other); }


};
struct _1aa092514_StructLit {
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();


	_1aa092514_StructLit(jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_1aa092514_StructLit(void) = default;

	inline bool operator==(_1aa092514_StructLit _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1aa092514_StructLit _other) { return !this->operator==(_other); }


};
struct _1aa09632b_ScopeTree {
	jule::Ptr<_1aa09632b_ScopeTree> _field_parent = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<_1dd582b25_Node> _field_stmts = jule::Slice<_1dd582b25_Node>();


	_1aa09632b_ScopeTree(jule::Ptr<_1aa09632b_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<_1dd582b25_Node> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1aa09632b_ScopeTree(void) = default;

	inline bool operator==(_1aa09632b_ScopeTree _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1aa09632b_ScopeTree _other) { return !this->operator==(_other); }


};
struct _1aa099a38_Conditional {
	jule::Ptr<_1aa098e66_If> _field_head = jule::Ptr<_1aa098e66_If>();
	jule::Slice<jule::Ptr<_1aa098e66_If>> _field_tail = jule::Slice<jule::Ptr<_1aa098e66_If>>();
	jule::Ptr<_1aa09942d_Else> _field_default = jule::Ptr<_1aa09942d_Else>();


	_1aa099a38_Conditional(jule::Ptr<_1aa098e66_If> __param_head, jule::Slice<jule::Ptr<_1aa098e66_If>> __param_tail, jule::Ptr<_1aa09942d_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_1aa099a38_Conditional(void) = default;

	inline bool operator==(_1aa099a38_Conditional _other) {
		return 
			this->_field_head == _other._field_head &&
			this->_field_tail == _other._field_tail &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1aa099a38_Conditional _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa09368b_is_trait_impl(_1aa09ecd5_Impl*);
inline jule::Bool _1aa093801_is_struct_impl(_1aa09ecd5_Impl*);
struct _1aa09ecd5_Impl {
	jule::Ptr<_1dd583461_TypeDecl> _field_base = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1dd583461_TypeDecl> _field_dest = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>();
	jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _field_statics = jule::Slice<jule::Ptr<_1aa097085_VarDecl>>();


	_1aa09ecd5_Impl(jule::Ptr<_1dd583461_TypeDecl> __param_base, jule::Ptr<_1dd583461_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_1aa097085_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1aa09ecd5_Impl(void) = default;

	inline bool operator==(_1aa09ecd5_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1aa09ecd5_Impl _other) { return !this->operator==(_other); }


};
struct _1aa5da8b4_FileInfo {
	jule::Ptr<_1dd582707_Ast> _field_ast = jule::Ptr<_1dd582707_Ast>();
	jule::Slice<_1c4810251_Log> _field_errors = jule::Slice<_1c4810251_Log>();


	_1aa5da8b4_FileInfo(jule::Ptr<_1dd582707_Ast> __param_ast, jule::Slice<_1c4810251_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_1aa5da8b4_FileInfo(void) = default;

	inline bool operator==(_1aa5da8b4_FileInfo _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aa5da8b4_FileInfo _other) { return !this->operator==(_other); }


};
struct _1aa5dacd2_PackageInfo {
	jule::Slice<jule::Ptr<_1aa5da8b4_FileInfo>> _field_files = jule::Slice<jule::Ptr<_1aa5da8b4_FileInfo>>();


	_1aa5dacd2_PackageInfo(jule::Slice<jule::Ptr<_1aa5da8b4_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_1aa5dacd2_PackageInfo(void) = default;

	inline bool operator==(_1aa5dacd2_PackageInfo _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1aa5dacd2_PackageInfo _other) { return !this->operator==(_other); }


};
struct _1aa5dd587_Stmt {
	jule::Slice<_1aa07563a_Token> _field_tokens = jule::Slice<_1aa07563a_Token>();
	jule::Bool _field_terminated = jule::Bool();


	_1aa5dd587_Stmt(jule::Slice<_1aa07563a_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_1aa5dd587_Stmt(void) = default;

	inline bool operator==(_1aa5dd587_Stmt _other) {
		return 
			this->_field_tokens == _other._field_tokens &&
			this->_field_terminated == _other._field_terminated;
	}

	inline bool operator!=(_1aa5dd587_Stmt _other) { return !this->operator==(_other); }


};
inline void _1aa5deb2c_stop(_1aa5de236_ScopeParser*);
inline jule::Bool _1aa5dee07_stopped(_1aa5de236_ScopeParser*);
inline jule::Bool _1aa5e01d2_finished(_1aa5de236_ScopeParser*);
inline jule::Bool _1aa5e04ac_is_last_st(_1aa5de236_ScopeParser*);
inline void _1aa5e08a8_push_err(_1aa5de236_ScopeParser*,_1aa07563a_Token,jule::Str);
inline void _1aa5e0ca4_push_suggestion(_1aa5de236_ScopeParser*,jule::Str,jule::Slice<jule::Any>);
inline void _1aa5e10c3_insert_as_next(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa5dd587_Stmt> _1aa5e139d_next(_1aa5de236_ScopeParser*);
inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e1755_build_scope(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e1b0c_build_var_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e1eb4_build_ret_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa5e236b_build_while_next_iter(_1aa5de236_ScopeParser*,jule::Ptr<_1aa5dd587_Stmt>&);
inline jule::Ptr<_1aa097cde_WhileKind> _1aa5e2723_build_while_iter_kind(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa5e2b1e_get_range_kind_keys_tokens(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa097085_VarDecl> _1aa5e2eb5_build_range_kind_key(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _1aa5e336c_build_range_kind_keys(_1aa5de236_ScopeParser*,jule::Slice<jule::Slice<_1aa07563a_Token>>&);
inline void _1aa5e37ac_setup_range_kind_keys_plain(_1aa5de236_ScopeParser*,jule::Ptr<_1aa09820c_RangeKind>&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa5e3bdb_setup_range_kind_keys_explicit(_1aa5de236_ScopeParser*,jule::Ptr<_1aa09820c_RangeKind>&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa5e40c6_setup_range_kind_keys(_1aa5de236_ScopeParser*,jule::Ptr<_1aa09820c_RangeKind>&,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa09820c_RangeKind> _1aa5e4637_build_range_iter_kind(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&,jule::Slice<_1aa07563a_Token>&,_1aa07563a_Token&);
inline jule::Any _1aa5e4abb_build_common_iter_kind(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&,_1aa07563a_Token&);
inline jule::Any _1aa5e4e73_build_common_iter(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa5e532a_buid_iter_st(_1aa5de236_ScopeParser*,jule::Ptr<_1aa5dd587_Stmt>&);
inline jule::Any _1aa5e56d2_build_break_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e5a89_build_cont_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa098e66_If> _1aa5e5e41_build_if(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa09942d_Else> _1aa5e62e8_build_else(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e66a0_build_if_else_chain(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa5e6a57_build_co_call_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa5e6e0e_build_goto_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e72b6_build_fall_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5e766d_build_type_alias_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline void _1aa5e7c23_push_case_expr(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>,_1aa07563a_Token,jule::Bool,jule::Slice<jule::Ptr<_1aa08d334_Expr>>&);
inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa5e81a7_build_case_exprs(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&,jule::Bool);
inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e855e_build_case_scope(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Ptr<_1aa09a93a_Case>,jule::Bool> _1aa5e89e3_build_case(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&,jule::Bool);
inline std::tuple<jule::Slice<jule::Ptr<_1aa09a93a_Case>>,jule::Ptr<_1aa09942d_Else>> _1aa5e8e77_build_cases(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>,jule::Bool);
inline jule::Ptr<_1aa09b188_MatchCase> _1aa5e932e_build_match_case(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e96d6_build_scope_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa094c86_LabelSt> _1aa5e9a8d_build_label_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Any,jule::Bool> _1aa5e9e45_build_id_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa60c82b_AssignInfo> _1aa5ea2ec_build_assign_info(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa0959e0_AssignLeft> _1aa5ea6a4_build_assign_l(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>> _1aa5eaa5b_build_assign_ls(_1aa5de236_ScopeParser*,jule::Slice<jule::Slice<_1aa07563a_Token>>&);
inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eae13_build_plain_assign(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eb2ba_build_decl_assign(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>);
inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eb672_build_assign_st(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5eba29_build_use_expr(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa5ebdd1_build_st(_1aa5de236_ScopeParser*,jule::Ptr<_1aa5dd587_Stmt>&);
inline void _1aa5ec2cc_build(_1aa5de236_ScopeParser*,jule::Slice<_1aa07563a_Token>&,jule::Ptr<_1aa09632b_ScopeTree>&);
struct _1aa5de236_ScopeParser {
	jule::Ptr<_1aa611b60_Parser> _field_p = jule::Ptr<_1aa611b60_Parser>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_s = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _field_stmts = jule::Slice<jule::Ptr<_1aa5dd587_Stmt>>();
	jule::I64 _field_pos = jule::I64();


	_1aa5de236_ScopeParser(jule::Ptr<_1aa611b60_Parser> __param_p, jule::Ptr<_1aa09632b_ScopeTree> __param_s, jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> __param_stmts, jule::I64 __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stmts(__param_stmts), _field_pos(__param_pos) {}

	

	_1aa5de236_ScopeParser(void) = default;

	inline bool operator==(_1aa5de236_ScopeParser _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1aa5de236_ScopeParser _other) { return !this->operator==(_other); }


};
struct _1aa5ed278_CallData {
	jule::Slice<_1aa07563a_Token> _field_expr_tokens = jule::Slice<_1aa07563a_Token>();
	jule::Slice<_1aa07563a_Token> _field_args_tokens = jule::Slice<_1aa07563a_Token>();
	jule::Slice<_1aa07563a_Token> _field_generics_tokens = jule::Slice<_1aa07563a_Token>();


	_1aa5ed278_CallData(jule::Slice<_1aa07563a_Token> __param_expr_tokens, jule::Slice<_1aa07563a_Token> __param_args_tokens, jule::Slice<_1aa07563a_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_1aa5ed278_CallData(void) = default;

	inline bool operator==(_1aa5ed278_CallData _other) {
		return 
			this->_field_expr_tokens == _other._field_expr_tokens &&
			this->_field_args_tokens == _other._field_args_tokens &&
			this->_field_generics_tokens == _other._field_generics_tokens;
	}

	inline bool operator!=(_1aa5ed278_CallData _other) { return !this->operator==(_other); }


};
inline void _1aa6007db_push_err(_1aa5eebc5_ExprBuilder*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1aa600bd7_push_suggestion(_1aa5eebc5_ExprBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1aa08db70_TupleExpr> _1aa60108e_build_tuple(_1aa5eebc5_ExprBuilder*,jule::Slice<jule::Slice<_1aa07563a_Token>>&);
inline jule::Ptr<_1aa08e08d_LitExpr> _1aa601446_build_lit(_1aa5eebc5_ExprBuilder*,_1aa07563a_Token);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa6017ed_build_primitive_type(_1aa5eebc5_ExprBuilder*,_1aa07563a_Token&);
inline jule::Any _1aa601ba5_build_single(_1aa5eebc5_ExprBuilder*,_1aa07563a_Token);
inline jule::Ptr<_1aa08ece7_IdentExpr> _1aa60205c_build_cpp_linked_ident(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa090215_UnaryExpr> _1aa602414_build_unary(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09138c_SubIdentExpr> _1aa6027bb_build_obj_sub_ident(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa090e6e_NsSelectionExpr> _1aa602b73_build_ns_sub_ident(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa60302a_build_type(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa6033d2_build_sub_ident(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa090633_VariadicExpr> _1aa603789_build_variadic(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa603b41_build_op_right(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa08d334_Expr> _1aa60403c_build_between_parentheses(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa090a51_CastExpr> _1aa6043d3_try_build_cast(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline void _1aa6048ab_push_arg(_1aa5eebc5_ExprBuilder*,jule::Slice<jule::Ptr<_1aa08d334_Expr>>&,jule::Slice<_1aa07563a_Token>,_1aa07563a_Token);
inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa604c63_build_args(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _1aa60511a_build_call_generics(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa091bc8_FnCallExpr> _1aa60559e_build_fn_call(_1aa5eebc5_ExprBuilder*,_1aa07563a_Token&,jule::Ptr<_1aa5ed278_CallData>&);
inline jule::Any _1aa60599a_build_parentheses_range(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa08e4ab_UnsafeExpr> _1aa605d41_build_unsafe_expr(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa096b67_FnDecl> _1aa6061e8_build_anon_fn(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa6065a0_build_unsafe(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline void _1aa606a78_push_range_lit_part(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>,_1aa07563a_Token,jule::Slice<jule::Slice<_1aa07563a_Token>>&);
inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa606e74_get_brace_range_lit_expr_parts(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa0920e6_FieldExprPair> _1aa60731a_build_field_expr_pair(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa08d334_Expr> _1aa6076c2_build_struct_lit_expr(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa607a79_build_struct_lit_exprs(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa092514_StructLit> _1aa607e75_build_typed_struct_literal(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa08d334_Expr> _1aa60831b_build_brace_lit_part(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa092932_BraceLit> _1aa6086c3_build_brace_lit(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa608a7a_build_brace_range(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa608e32_get_enumerable_parts(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09326d_SliceExpr> _1aa6092d9_build_slice(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa093b0e_IndexingExpr> _1aa60984a_build_indexing(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>,jule::Slice<_1aa07563a_Token>,_1aa07563a_Token);
inline jule::Ptr<_1aa09402c_SlicingExpr> _1aa609e88_build_slicing(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&,jule::Slice<_1aa07563a_Token>&,jule::I64&,_1aa07563a_Token&);
inline jule::Any _1aa60a340_build_bracket_range(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa60a6e7_build_ternary(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa60aa9e_build_data(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa0917aa_BinopExpr> _1aa60b033_build_binop(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&,jule::I64);
inline jule::Any _1aa60b3da_build(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Any _1aa60b792_build_kind(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa08d334_Expr> _1aa60bb49_build_from_tokens(_1aa5eebc5_ExprBuilder*,jule::Slice<_1aa07563a_Token>);
struct _1aa5eebc5_ExprBuilder {
	jule::Ptr<_1aa611b60_Parser> _field_p = jule::Ptr<_1aa611b60_Parser>();


	_1aa5eebc5_ExprBuilder(jule::Ptr<_1aa611b60_Parser> __param_p): _field_p(__param_p) {}

	

	_1aa5eebc5_ExprBuilder(void) = default;

	inline bool operator==(_1aa5eebc5_ExprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1aa5eebc5_ExprBuilder _other) { return !this->operator==(_other); }


};
inline void _1aa612204_stop(_1aa611b60_Parser*);
inline jule::Bool _1aa6124ce_stopped(_1aa611b60_Parser*);
inline void _1aa6129a7_push_err(_1aa611b60_Parser*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1aa612da3_push_suggestion(_1aa611b60_Parser*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1aa08d334_Expr> _1aa61325a_build_expr(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1dd583043_Directive> _1aa613612_build_directive(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>);
inline void _1aa613931_push_directive(_1aa611b60_Parser*,jule::Ptr<_1dd583043_Directive>);
inline jule::Ptr<_1aa09632b_ScopeTree> _1aa613cd8_build_scope(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa614349___build_type(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::I64*,jule::Bool);
inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa6148aa_build_type(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::I64*,jule::Bool);
inline jule::Ptr<_1aa09a330_TypeAliasDecl> _1aa614c62_build_type_alias_decl(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa6151a2_build_var_type_and_expr(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa097085_VarDecl>&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa61558c_build_var_common(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa097085_VarDecl>&,jule::Slice<_1aa07563a_Token>);
inline void _1aa615a65_build_var_begin(_1aa611b60_Parser*,jule::Ptr<_1aa097085_VarDecl>&,jule::Ptr<jule::I64>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa097085_VarDecl> _1aa615e1c_build_var(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa094868_GenericDecl> _1aa6162c4_build_generic(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _1aa616758_build_generics(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>&,_1aa07563a_Token&);
inline jule::Ptr<_1aa096749_ParamDecl> _1aa616b10_build_self_param(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>);
inline void _1aa6170d8_param_type_begin(_1aa611b60_Parser*,jule::Ptr<_1aa096749_ParamDecl>&,jule::I64&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa6174d4_build_param_type(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa096749_ParamDecl>&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa6178d0_param_body_id(_1aa611b60_Parser*,jule::Ptr<_1aa096749_ParamDecl>,_1aa07563a_Token);
inline void _1aa617da8_build_param_body(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa096749_ParamDecl>&,jule::Ptr<jule::I64>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa096749_ParamDecl> _1aa618260_build_param(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline void _1aa61857e_check_params(_1aa611b60_Parser*,jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1aa096749_ParamDecl>> _1aa618a13_build_params(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::Bool);
inline std::tuple<jule::Ptr<_1aa08ce16_RetTypeDecl>,jule::Bool> _1aa618e97_build_multi_ret_type(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::I64&);
inline std::tuple<jule::Ptr<_1aa08ce16_RetTypeDecl>,jule::Bool> _1aa61942b_build_ret_type(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::I64&);
inline jule::Ptr<_1aa096b67_FnDecl> _1aa61998c_build_fn_prototype(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::I64&,jule::Bool);
inline jule::Ptr<_1aa096b67_FnDecl> _1aa619eed_build_fn(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&,jule::Bool,jule::Bool);
inline jule::Slice<_1aa07563a_Token> _1aa61a3a5_get_use_decl_selectors(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>);
inline void _1aa61a7a1_build_cpp_use_decl(_1aa611b60_Parser*,jule::Ptr<_1aa09ba29_UseDecl>&,jule::Slice<_1aa07563a_Token>&);
inline void _1aa61ab9c_build_std_use_decl(_1aa611b60_Parser*,jule::Ptr<_1aa09ba29_UseDecl>&,jule::Slice<_1aa07563a_Token>);
inline void _1aa61b098_build_ident_use_decl(_1aa611b60_Parser*,jule::Ptr<_1aa09ba29_UseDecl>&,jule::Slice<_1aa07563a_Token>);
inline void _1aa61b494_parse_use_decl(_1aa611b60_Parser*,jule::Ptr<_1aa09ba29_UseDecl>&,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09ba29_UseDecl> _1aa61b928_build_use_decl(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>,jule::Bool);
inline jule::Ptr<_1aa08d334_Expr> _1aa61bdac_build_enum_item_expr(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<jule::I64>,jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>> _1aa61c264_build_enum_items(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa09cb7e_EnumDecl> _1aa61c61b_build_enum_decl(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa09d5db_FieldDecl> _1aa61c9c3_build_field(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>> _1aa61cdbe_build_struct_decl_fields(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09de7c_StructDecl> _1aa61d265_build_struct_decl(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa61d584_check_method_receiver(_1aa611b60_Parser*,jule::Ptr<_1aa096b67_FnDecl>&);
inline jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> _1aa61d93b_build_trait_methods(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09e631_TraitDecl> _1aa61dce3_build_trait_decl(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa096b67_FnDecl> _1aa61e19a_build_cpp_link_fn(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa097085_VarDecl> _1aa61e552_build_cpp_link_var(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09de7c_StructDecl> _1aa61e909_build_cpp_link_struct(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09a330_TypeAliasDecl> _1aa61ed05_build_cpp_link_type_alias(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Ptr<_1aa09ba29_UseDecl> _1aa62019b_build_cpp_link_use(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa620553_build_cpp_link(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa096b67_FnDecl> _1aa62090a_get_method(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa620d06_parse_impl_body(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa09ecd5_Impl>&,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa09ecd5_Impl> _1aa6211ad_build_impl(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline jule::Any _1aa621565_build_node_data(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa621884_check_directive(_1aa611b60_Parser*,_1dd582b25_Node&);
inline void _1aa621c80_apply_fn_meta(_1aa611b60_Parser*,jule::Ptr<_1aa096b67_FnDecl>&,jule::Bool);
inline void _1aa62217b_apply_meta(_1aa611b60_Parser*,_1dd582b25_Node&,jule::Bool);
inline void _1aa62249a_check_use_decl(_1aa611b60_Parser*,_1dd582b25_Node&);
inline std::tuple<jule::Bool,jule::Any> _1aa622896_build_general_scope_node_data(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>);
inline _1dd582b25_Node _1aa622c3c_parse_node(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa62305b_append_node(jule::Ptr<_1aa611b60_Parser>,jule::Slice<_1aa07563a_Token>&);
inline void _1aa623611_remove_range(_1aa611b60_Parser*,jule::I64,jule::Str,jule::Slice<_1aa07563a_Token>&,jule::Slice<jule::I64>&);
inline void _1aa623b2d_push_wrong_order_close_err(_1aa611b60_Parser*,_1aa07563a_Token&,jule::Slice<_1aa07563a_Token>&,jule::Slice<jule::I64>&);
inline void _1aa6241c2_push_range_close(_1aa611b60_Parser*,_1aa07563a_Token,jule::Str,jule::Slice<_1aa07563a_Token>&,jule::Slice<jule::I64>&);
inline void _1aa6244e1_check_ranges(_1aa611b60_Parser*,jule::Slice<_1aa07563a_Token>&);
inline void _1aa624810_parse(jule::Ptr<_1aa611b60_Parser>,jule::Ptr<_1aa07b982_File>&);
struct _1aa611b60_Parser {
	jule::Ptr<_1dd582707_Ast> _field_ast = jule::Ptr<_1dd582707_Ast>();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Slice<_1c4810251_Log> _field_errors = jule::Slice<_1c4810251_Log>();


	_1aa611b60_Parser(jule::Ptr<_1dd582707_Ast> __param_ast, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Slice<_1c4810251_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_errors(__param_errors) {}

	

	_1aa611b60_Parser(void) = default;

	inline bool operator==(_1aa611b60_Parser _other) {
		return 
			this->_field_ast == _other._field_ast &&
			this->_field_directives == _other._field_directives &&
			this->_field_errors == _other._field_errors;
	}

	inline bool operator!=(_1aa611b60_Parser _other) { return !this->operator==(_other); }


};
inline void _1aa6270e8_push_err(_1aa626746_TypeBuilder*,_1aa07563a_Token,jule::Str);
inline void _1aa6274e4_push_suggestion(_1aa626746_TypeBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa6277be_build_prim(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa627a99_build_namespace(_1aa626746_TypeBuilder*);
inline jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _1aa627d74_build_generics(_1aa626746_TypeBuilder*);
inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa62814e_ident_generics(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa628429_build_ident(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa628704_build_cpp_link(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa6289ce_build_fn(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa628ca9_build_ptr(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa629084_build_sptr(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa62935e_build_op(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa629639_build_slc(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa629914_build_arr(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa629d98_build_map(_1aa626746_TypeBuilder*,jule::I64,jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa62a173_build_enumerable(_1aa626746_TypeBuilder*);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa62a44d_step(_1aa626746_TypeBuilder*);
inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa62a728_build(_1aa626746_TypeBuilder*);
struct _1aa626746_TypeBuilder {
	jule::Ptr<_1aa611b60_Parser> _field_p = jule::Ptr<_1aa611b60_Parser>();
	jule::Slice<_1aa07563a_Token> _field_tokens = jule::Slice<_1aa07563a_Token>();
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = jule::Bool();


	_1aa626746_TypeBuilder(jule::Ptr<_1aa611b60_Parser> __param_p, jule::Slice<_1aa07563a_Token> __param_tokens, jule::I64* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_1aa626746_TypeBuilder(void) = default;

	inline bool operator==(_1aa626746_TypeBuilder _other) {
		return 
			this->_field_p == _other._field_p &&
			this->_field_tokens == _other._field_tokens &&
			this->_field_i == _other._field_i &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1aa626746_TypeBuilder _other) { return !this->operator==(_other); }


};
struct _1ac3a1bb7_FloatInfo {
	jule::U64 _field_mantbits = jule::U64();
	jule::U64 _field_expbits = jule::U64();
	jule::I64 _field_bias = jule::I64();


	_1ac3a1bb7_FloatInfo(jule::U64 __param_mantbits, jule::U64 __param_expbits, jule::I64 __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_1ac3a1bb7_FloatInfo(void) = default;

	inline bool operator==(_1ac3a1bb7_FloatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ac3a1bb7_FloatInfo _other) { return !this->operator==(_other); }


};
struct _1ac3a20d5_DecimalSlice {
	jule::Slice<jule::U8> _field_d = jule::Slice<jule::U8>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();


	_1ac3a20d5_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_1ac3a20d5_DecimalSlice(void) = default;

	inline bool operator==(_1ac3a20d5_DecimalSlice _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg;
	}

	inline bool operator!=(_1ac3a20d5_DecimalSlice _other) { return !this->operator==(_other); }


};
struct _1ac440926_LeftCheat {
	jule::I64 _field_delta = jule::I64();
	jule::Str _field_cutoff = jule::Str();


	_1ac440926_LeftCheat(jule::I64 __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_1ac440926_LeftCheat(void) = default;

	inline bool operator==(_1ac440926_LeftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ac440926_LeftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac43749a_set(_1ac4415e7_Decimal*,jule::Str);
inline std::tuple<jule::U64,jule::Bool> _1ac437852_float_bits(_1ac4415e7_Decimal*,_1ac3a1bb7_FloatInfo&);
inline void _1ac441c9b_assign(_1ac4415e7_Decimal*,jule::U64);
inline void _1ac4420ba_shift(_1ac4415e7_Decimal*,jule::I64);
inline void _1ac4423d9_round_down(_1ac4415e7_Decimal*,jule::I64);
inline void _1ac442708_round_up(_1ac4415e7_Decimal*,jule::I64);
inline void _1ac442a27_round(_1ac4415e7_Decimal*,jule::I64);
inline jule::U64 _1ac442d02_rounded_integer(_1ac4415e7_Decimal*);
struct _1ac4415e7_Decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>();
	jule::I64 _field_nd = jule::I64();
	jule::I64 _field_dp = jule::I64();
	jule::Bool _field_neg = jule::Bool();
	jule::Bool _field_trunc = jule::Bool();


	_1ac4415e7_Decimal(jule::Array<jule::U8,800> __param_d, jule::I64 __param_nd, jule::I64 __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_1ac4415e7_Decimal(void) = default;

	inline bool operator==(_1ac4415e7_Decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ac4415e7_Decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d13e0_new_i64(jule::I64);
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1555_new_u64(jule::U64);
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d17a8_new_bool(jule::Bool);
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1ab6_new_str(jule::Str);
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1dc4_new_f64(jule::F64);
inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d2105_new_nil(void);
inline jule::I64 _1ac4d2765_read_i64(_1ac4d0ec2_Const*);
inline jule::U64 _1ac4d2a40_read_u64(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d2d1a_read_bool(_1ac4d0ec2_Const*);
inline jule::Str _1ac4d30e5_read_str(_1ac4d0ec2_Const*);
inline jule::F64 _1ac4d33c0_read_f64(_1ac4d0ec2_Const*);
inline jule::I64 _1ac4d369a_as_i64(_1ac4d0ec2_Const*);
inline jule::U64 _1ac4d3975_as_u64(_1ac4d0ec2_Const*);
inline jule::F64 _1ac4d3c50_as_f64(_1ac4d0ec2_Const*);
inline void _1ac4d406e_set_i64(_1ac4d0ec2_Const*,jule::I64);
inline void _1ac4d438d_set_u64(_1ac4d0ec2_Const*,jule::U64);
inline void _1ac4d46ac_set_bool(_1ac4d0ec2_Const*,jule::Bool);
inline void _1ac4d49cb_set_str(_1ac4d0ec2_Const*,jule::Str);
inline void _1ac4d4cea_set_f64(_1ac4d0ec2_Const*,jule::F64);
inline void _1ac4d503c_set_nil(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d5317_is_i64(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d55e2_is_u64(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d58bc_is_bool(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d5b97_is_str(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d5e72_is_f64(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d624c_is_nil(_1ac4d0ec2_Const*);
inline jule::Bool _1ac4d6604_are_same_types(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d69ab_and(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d6d63_or(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d721a_eq(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d75c2_lt(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d7979_lt_eq(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d7d31_gt(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d81d8_gt_eq(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d8590_add(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d8947_sub(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d8cee_mul(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d91a6_div(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d955d_mod(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d9915_bitwise_and(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4d9cbc_bitwise_or(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4da174_xor(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4da52b_lshift(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
inline jule::Bool _1ac4da8d3_rshift(_1ac4d0ec2_Const*,_1ac4d0ec2_Const);
struct _1ac4d0ec2_Const {
	jule::Any _field_data = jule::Any();


	_1ac4d0ec2_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1ac4d0ec2_Const(void) = default;

	inline jule::Bool operator==(_1ac4d0ec2_Const _other) { return _1ac4d721a_eq(this, _other); }

	inline bool operator!=(_1ac4d0ec2_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ac4d0ec2_Const _other) { return _1ac4d7d31_gt(this, _other); }

	inline jule::Bool operator>=(_1ac4d0ec2_Const _other) { return _1ac4d81d8_gt_eq(this, _other); }

	inline jule::Bool operator<(_1ac4d0ec2_Const _other) { return _1ac4d75c2_lt(this, _other); }

	inline jule::Bool operator<=(_1ac4d0ec2_Const _other) { return _1ac4d7979_lt_eq(this, _other); }


};
inline jule::Ptr<_1a5992699_FileStream> static__1a5992ab7_new(jule::Ptr<_1dc37a105_File>);
inline jule::Exceptional<jule::I64> _1a5992d2b_read(_1a5992699_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a5993128_write(_1a5992699_FileStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::Slice<jule::U8>> _1a59934e1_read_line(_1a5992699_FileStream*);
struct _1a5992699_FileStream {
	jule::Ptr<_1dc37a105_File> _field_buff = jule::Ptr<_1dc37a105_File>();


	_1a5992699_FileStream(jule::Ptr<_1dc37a105_File> __param_buff): _field_buff(__param_buff) {}

	

	_1a5992699_FileStream(void) = default;

	inline bool operator==(_1a5992699_FileStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a5992699_FileStream _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::I64> _1a5996219_read(_1a59957ce_ByteStream*,jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1a59965c1_write(_1a59957ce_ByteStream*,jule::Slice<jule::U8>);
inline jule::Ptr<_1a59957ce_ByteStream> static__1a5996912_new(void);
inline jule::Bool _1a5996bdc_data(_1a59957ce_ByteStream*);
inline void _1a5996e2e_fit(_1a59957ce_ByteStream*);
struct _1a59957ce_ByteStream {
	jule::Slice<jule::U8> _field_buff = jule::Slice<jule::U8>();


	_1a59957ce_ByteStream(jule::Slice<jule::U8> __param_buff): _field_buff(__param_buff) {}

	

	_1a59957ce_ByteStream(void) = default;

	inline bool operator==(_1a59957ce_ByteStream _other) {
		return 
			this->_field_buff == _other._field_buff;
	}

	inline bool operator!=(_1a59957ce_ByteStream _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a5998590_Scanner> static__1a5998c33_new(jule::Trait<_1a5993d1b_Reader>);
inline jule::Ptr<_1a5998590_Scanner> static__1a5999041_newf(jule::Ptr<_1dc37a105_File>);
inline void _1a59993a4_reset(_1a5998590_Scanner*);
inline jule::Slice<jule::U8> _1a599967e_bytes(_1a5998590_Scanner*);
inline jule::Str _1a5999959_text(_1a5998590_Scanner*);
inline jule::Exceptional<jule::Bool> _1a5999c34_scan(_1a5998590_Scanner*);
struct _1a5998590_Scanner {
	jule::Trait<_1a5993d1b_Reader> _field_r = jule::Trait<_1a5993d1b_Reader>();
	jule::Slice<jule::U8> _field_b = jule::Slice<jule::U8>();


	_1a5998590_Scanner(jule::Trait<_1a5993d1b_Reader> __param_r, jule::Slice<jule::U8> __param_b): _field_r(__param_r), _field_b(__param_b) {}

	

	_1a5998590_Scanner(void) = default;

	inline bool operator==(_1a5998590_Scanner _other) {
		return 
			this->_field_r == _other._field_r &&
			this->_field_b == _other._field_b;
	}

	inline bool operator!=(_1a5998590_Scanner _other) { return !this->operator==(_other); }


};
struct _1ab80e8b7_Operators {
	jule::Ptr<_1ab836218_FnIns> _field_eq = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_gt = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_gt_eq = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_lt = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_lt_eq = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_shl = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_shr = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_add = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_sub = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_div = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_mul = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_mod = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_and = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_or = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_xor = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_neg = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_pos = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_not = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_add_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_sub_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_div_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_mul_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_mod_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_shl_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_shr_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_or_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_and_assign = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab836218_FnIns> _field_bit_xor_assign = jule::Ptr<_1ab836218_FnIns>();


	_1ab80e8b7_Operators(jule::Ptr<_1ab836218_FnIns> __param_eq, jule::Ptr<_1ab836218_FnIns> __param_gt, jule::Ptr<_1ab836218_FnIns> __param_gt_eq, jule::Ptr<_1ab836218_FnIns> __param_lt, jule::Ptr<_1ab836218_FnIns> __param_lt_eq, jule::Ptr<_1ab836218_FnIns> __param_shl, jule::Ptr<_1ab836218_FnIns> __param_shr, jule::Ptr<_1ab836218_FnIns> __param_add, jule::Ptr<_1ab836218_FnIns> __param_sub, jule::Ptr<_1ab836218_FnIns> __param_div, jule::Ptr<_1ab836218_FnIns> __param_mul, jule::Ptr<_1ab836218_FnIns> __param_mod, jule::Ptr<_1ab836218_FnIns> __param_bit_and, jule::Ptr<_1ab836218_FnIns> __param_bit_or, jule::Ptr<_1ab836218_FnIns> __param_bit_xor, jule::Ptr<_1ab836218_FnIns> __param_neg, jule::Ptr<_1ab836218_FnIns> __param_pos, jule::Ptr<_1ab836218_FnIns> __param_bit_not, jule::Ptr<_1ab836218_FnIns> __param_add_assign, jule::Ptr<_1ab836218_FnIns> __param_sub_assign, jule::Ptr<_1ab836218_FnIns> __param_div_assign, jule::Ptr<_1ab836218_FnIns> __param_mul_assign, jule::Ptr<_1ab836218_FnIns> __param_mod_assign, jule::Ptr<_1ab836218_FnIns> __param_shl_assign, jule::Ptr<_1ab836218_FnIns> __param_shr_assign, jule::Ptr<_1ab836218_FnIns> __param_bit_or_assign, jule::Ptr<_1ab836218_FnIns> __param_bit_and_assign, jule::Ptr<_1ab836218_FnIns> __param_bit_xor_assign): _field_eq(__param_eq), _field_gt(__param_gt), _field_gt_eq(__param_gt_eq), _field_lt(__param_lt), _field_lt_eq(__param_lt_eq), _field_shl(__param_shl), _field_shr(__param_shr), _field_add(__param_add), _field_sub(__param_sub), _field_div(__param_div), _field_mul(__param_mul), _field_mod(__param_mod), _field_bit_and(__param_bit_and), _field_bit_or(__param_bit_or), _field_bit_xor(__param_bit_xor), _field_neg(__param_neg), _field_pos(__param_pos), _field_bit_not(__param_bit_not), _field_add_assign(__param_add_assign), _field_sub_assign(__param_sub_assign), _field_div_assign(__param_div_assign), _field_mul_assign(__param_mul_assign), _field_mod_assign(__param_mod_assign), _field_shl_assign(__param_shl_assign), _field_shr_assign(__param_shr_assign), _field_bit_or_assign(__param_bit_or_assign), _field_bit_and_assign(__param_bit_and_assign), _field_bit_xor_assign(__param_bit_xor_assign) {}

	

	_1ab80e8b7_Operators(void) = default;

	inline bool operator==(_1ab80e8b7_Operators _other) {
		return 
			this->_field_eq == _other._field_eq &&
			this->_field_gt == _other._field_gt &&
			this->_field_gt_eq == _other._field_gt_eq &&
			this->_field_lt == _other._field_lt &&
			this->_field_lt_eq == _other._field_lt_eq &&
			this->_field_shl == _other._field_shl &&
			this->_field_shr == _other._field_shr &&
			this->_field_add == _other._field_add &&
			this->_field_sub == _other._field_sub &&
			this->_field_div == _other._field_div &&
			this->_field_mul == _other._field_mul &&
			this->_field_mod == _other._field_mod &&
			this->_field_bit_and == _other._field_bit_and &&
			this->_field_bit_or == _other._field_bit_or &&
			this->_field_bit_xor == _other._field_bit_xor &&
			this->_field_neg == _other._field_neg &&
			this->_field_pos == _other._field_pos &&
			this->_field_bit_not == _other._field_bit_not &&
			this->_field_add_assign == _other._field_add_assign &&
			this->_field_sub_assign == _other._field_sub_assign &&
			this->_field_div_assign == _other._field_div_assign &&
			this->_field_mul_assign == _other._field_mul_assign &&
			this->_field_mod_assign == _other._field_mod_assign &&
			this->_field_shl_assign == _other._field_shl_assign &&
			this->_field_shr_assign == _other._field_shr_assign &&
			this->_field_bit_or_assign == _other._field_bit_or_assign &&
			this->_field_bit_and_assign == _other._field_bit_and_assign &&
			this->_field_bit_xor_assign == _other._field_bit_xor_assign;
	}

	inline bool operator!=(_1ab80e8b7_Operators _other) { return !this->operator==(_other); }


};
struct _1ab8137bc_FieldIns {
	jule::Ptr<_1ab80cdd2_Field> _field_decl = jule::Ptr<_1ab80cdd2_Field>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a58cee44_Data> _field_default = jule::Ptr<_1a58cee44_Data>();


	_1ab8137bc_FieldIns(jule::Ptr<_1ab80cdd2_Field> __param_decl, jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Ptr<_1a58cee44_Data> __param_default): _field_decl(__param_decl), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1ab8137bc_FieldIns(void) = default;

	inline bool operator==(_1ab8137bc_FieldIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ab8137bc_FieldIns _other) { return !this->operator==(_other); }


};
struct _1ab816825_OperandExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Any _field_model = jule::Any();


	_1ab816825_OperandExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Any __param_model): _field_kind(__param_kind), _field_model(__param_model) {}

	

	_1ab816825_OperandExprModel(void) = default;

	inline bool operator==(_1ab816825_OperandExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1ab816825_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1ab817da9_StructArgExprModel {
	jule::Ptr<_1ab8137bc_FieldIns> _field_field = jule::Ptr<_1ab8137bc_FieldIns>();
	jule::Any _field_expr = jule::Any();


	_1ab817da9_StructArgExprModel(jule::Ptr<_1ab8137bc_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1ab817da9_StructArgExprModel(void) = default;

	inline bool operator==(_1ab817da9_StructArgExprModel _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab817da9_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1ab818508_StructLitExprModel {
	jule::Ptr<_1ab814515_StructIns> _field_strct = jule::Ptr<_1ab814515_StructIns>();
	jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>>();


	_1ab818508_StructLitExprModel(jule::Ptr<_1ab814515_StructIns> __param_strct, jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_1ab818508_StructLitExprModel(void) = default;

	inline bool operator==(_1ab818508_StructLitExprModel _other) {
		return 
			this->_field_strct == _other._field_strct &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1ab818508_StructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ab818ae1_AllocStructLitExprModel {
	jule::Ptr<_1ab818508_StructLitExprModel> _field_lit = jule::Ptr<_1ab818508_StructLitExprModel>();


	_1ab818ae1_AllocStructLitExprModel(jule::Ptr<_1ab818508_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_1ab818ae1_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1ab818ae1_AllocStructLitExprModel _other) {
		return 
			this->_field_lit == _other._field_lit;
	}

	inline bool operator!=(_1ab818ae1_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81a74c_SliceExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_elem_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ab81a74c_SliceExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_1ab81a74c_SliceExprModel(void) = default;

	inline bool operator==(_1ab81a74c_SliceExprModel _other) {
		return 
			this->_field_elem_kind == _other._field_elem_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ab81a74c_SliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81b5e9_AnonFnExprModel {
	jule::Ptr<_1ab836218_FnIns> _field_func = jule::Ptr<_1ab836218_FnIns>();
	jule::Bool _field_global = jule::Bool();


	_1ab81b5e9_AnonFnExprModel(jule::Ptr<_1ab836218_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_1ab81b5e9_AnonFnExprModel(void) = default;

	inline bool operator==(_1ab81b5e9_AnonFnExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_global == _other._field_global;
	}

	inline bool operator!=(_1ab81b5e9_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81bc48_KeyValPairExprModel {
	jule::Any _field_key = jule::Any();
	jule::Any _field_val = jule::Any();


	_1ab81bc48_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1ab81bc48_KeyValPairExprModel(void) = default;

	inline bool operator==(_1ab81bc48_KeyValPairExprModel _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1ab81bc48_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81c496_MapExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_key_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_val_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Slice<jule::Ptr<_1ab81bc48_KeyValPairExprModel>> _field_entries = jule::Slice<jule::Ptr<_1ab81bc48_KeyValPairExprModel>>();


	_1ab81c496_MapExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_key_kind, jule::Ptr<_1a5913e9a_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_1ab81bc48_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_1ab81c496_MapExprModel(void) = default;

	inline bool operator==(_1ab81c496_MapExprModel _other) {
		return 
			this->_field_key_kind == _other._field_key_kind &&
			this->_field_val_kind == _other._field_val_kind &&
			this->_field_entries == _other._field_entries;
	}

	inline bool operator!=(_1ab81c496_MapExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81ea09_StructStaticIdentExprModel {
	jule::Ptr<_1ab814515_StructIns> _field_structure = jule::Ptr<_1ab814515_StructIns>();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ab836218_FnIns> _field_method = jule::Ptr<_1ab836218_FnIns>();


	_1ab81ea09_StructStaticIdentExprModel(jule::Ptr<_1ab814515_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_1ab836218_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_1ab81ea09_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1ab81ea09_StructStaticIdentExprModel _other) {
		return 
			this->_field_structure == _other._field_structure &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method;
	}

	inline bool operator!=(_1ab81ea09_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab820136_ArrayExprModel {
	jule::Ptr<_1a592230a_Arr> _field_kind = jule::Ptr<_1a592230a_Arr>();
	jule::Slice<jule::Any> _field_elems = jule::Slice<jule::Any>();


	_1ab820136_ArrayExprModel(jule::Ptr<_1a592230a_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_1ab820136_ArrayExprModel(void) = default;

	inline bool operator==(_1ab820136_ArrayExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1ab820136_ArrayExprModel _other) { return !this->operator==(_other); }


};
struct _1ab820686_CommonIdentExprModel {
	jule::Str _field_ident = jule::Str();


	_1ab820686_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ab820686_CommonIdentExprModel(void) = default;

	inline bool operator==(_1ab820686_CommonIdentExprModel _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab820686_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab821599_TupleExprModel {
	jule::Slice<jule::Ptr<_1a58cee44_Data>> _field_datas = jule::Slice<jule::Ptr<_1a58cee44_Data>>();


	_1ab821599_TupleExprModel(jule::Slice<jule::Ptr<_1a58cee44_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_1ab821599_TupleExprModel(void) = default;

	inline bool operator==(_1ab821599_TupleExprModel _other) {
		return 
			this->_field_datas == _other._field_datas;
	}

	inline bool operator!=(_1ab821599_TupleExprModel _other) { return !this->operator==(_other); }


};
struct _1ab821c81_BuiltinOutCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ab821c81_BuiltinOutCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ab821c81_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1ab821c81_BuiltinOutCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ab821c81_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab822446_BuiltinOutlnCallExprModel {
	jule::Any _field_expr = jule::Any();
	jule::Bool _field_debug = jule::Bool();


	_1ab822446_BuiltinOutlnCallExprModel(jule::Any __param_expr, jule::Bool __param_debug): _field_expr(__param_expr), _field_debug(__param_debug) {}

	

	_1ab822446_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1ab822446_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_debug == _other._field_debug;
	}

	inline bool operator!=(_1ab822446_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab822a0c_BuiltinCloneCallExprModel {
	jule::Any _field_expr = jule::Any();


	_1ab822a0c_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ab822a0c_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1ab822a0c_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab822a0c_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab8231c2_BuiltinNewCallExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Any _field_init = jule::Any();


	_1ab8231c2_BuiltinNewCallExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_1ab8231c2_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1ab8231c2_BuiltinNewCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_init == _other._field_init;
	}

	inline bool operator!=(_1ab8231c2_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82976c_BuiltinMakeCallExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Any _field_len = jule::Any();
	jule::Any _field_cap = jule::Any();


	_1ab82976c_BuiltinMakeCallExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_1ab82976c_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1ab82976c_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_len == _other._field_len &&
			this->_field_cap == _other._field_cap;
	}

	inline bool operator!=(_1ab82976c_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab829e32_BuiltinAppendCallExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_elements = jule::Any();


	_1ab829e32_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_1ab829e32_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1ab829e32_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elements == _other._field_elements;
	}

	inline bool operator!=(_1ab829e32_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82a5e7_BuiltinErrorCallExprModel {
	jule::Ptr<_1ab836218_FnIns> _field_func = jule::Ptr<_1ab836218_FnIns>();
	jule::Any _field_err = jule::Any();


	_1ab82a5e7_BuiltinErrorCallExprModel(jule::Ptr<_1ab836218_FnIns> __param_func, jule::Any __param_err): _field_func(__param_func), _field_err(__param_err) {}

	

	_1ab82a5e7_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1ab82a5e7_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_err == _other._field_err;
	}

	inline bool operator!=(_1ab82a5e7_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82ab25_SizeofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ab82ab25_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ab82ab25_SizeofExprModel(void) = default;

	inline bool operator==(_1ab82ab25_SizeofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab82ab25_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82b4c7_AlignofExprModel {
	jule::Any _field_expr = jule::Any();


	_1ab82b4c7_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ab82b4c7_AlignofExprModel(void) = default;

	inline bool operator==(_1ab82b4c7_AlignofExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab82b4c7_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82b98e_RuneExprModel {
	jule::I32 _field_code = jule::I32();


	_1ab82b98e_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_1ab82b98e_RuneExprModel(void) = default;

	inline bool operator==(_1ab82b98e_RuneExprModel _other) {
		return 
			this->_field_code == _other._field_code;
	}

	inline bool operator!=(_1ab82b98e_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82c000_IntegratedToStrExprModel {
	jule::Any _field_expr = jule::Any();


	_1ab82c000_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ab82c000_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1ab82c000_IntegratedToStrExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab82c000_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82c72b_TernaryExprModel {
	jule::Any _field_condition = jule::Any();
	jule::Any _field_true_expr = jule::Any();
	jule::Any _field_false_expr = jule::Any();


	_1ab82c72b_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1ab82c72b_TernaryExprModel(void) = default;

	inline bool operator==(_1ab82c72b_TernaryExprModel _other) {
		return 
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_1ab82c72b_TernaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82cd7a_BackendEmitExprModel {
	jule::Str _field_code = jule::Str();
	jule::Slice<jule::Any> _field_exprs = jule::Slice<jule::Any>();


	_1ab82cd7a_BackendEmitExprModel(jule::Str __param_code, jule::Slice<jule::Any> __param_exprs): _field_code(__param_code), _field_exprs(__param_exprs) {}

	

	_1ab82cd7a_BackendEmitExprModel(void) = default;

	inline bool operator==(_1ab82cd7a_BackendEmitExprModel _other) {
		return 
			this->_field_code == _other._field_code &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1ab82cd7a_BackendEmitExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82d3ca_FreeExprModel {
	jule::Any _field_expr = jule::Any();


	_1ab82d3ca_FreeExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_1ab82d3ca_FreeExprModel(void) = default;

	inline bool operator==(_1ab82d3ca_FreeExprModel _other) {
		return 
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab82d3ca_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1ab82e7a5_RetType {
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Slice<_1aa07563a_Token> _field_idents = jule::Slice<_1aa07563a_Token>();


	_1ab82e7a5_RetType(jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Slice<_1aa07563a_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_1ab82e7a5_RetType(void) = default;

	inline bool operator==(_1ab82e7a5_RetType _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_idents == _other._field_idents;
	}

	inline bool operator!=(_1ab82e7a5_RetType _other) { return !this->operator==(_other); }


};
inline jule::Str _1ab835503_to_str(_1ab834db5_ParamIns*);
struct _1ab834db5_ParamIns {
	jule::Ptr<_1ab830300_Param> _field_decl = jule::Ptr<_1ab830300_Param>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();


	_1ab834db5_ParamIns(jule::Ptr<_1ab830300_Param> __param_decl, jule::Ptr<_1a5913e9a_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1ab834db5_ParamIns(void) = default;

	inline bool operator==(_1ab834db5_ParamIns _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ab834db5_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1ab8367e0_to_str(_1ab836218_FnIns*);
inline jule::Bool _1ab836b97_equals(jule::Ptr<_1ab836218_FnIns>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1ab837093_is_builtin(_1ab836218_FnIns*);
inline jule::Bool _1ab83736d_is_anon(_1ab836218_FnIns*);
inline jule::Bool _1ab837725_same(_1ab836218_FnIns*,jule::Ptr<_1ab836218_FnIns>);
inline jule::Str _1ab837acc_get_kind_str(_1ab836218_FnIns*,jule::Bool);
struct _1ab836218_FnIns {
	jule::Ptr<_1ab814515_StructIns> _field_owner = jule::Ptr<_1ab814515_StructIns>();
	jule::Ptr<_1ab832324_Fn> _field_decl = jule::Ptr<_1ab832324_Fn>();
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>();
	jule::Slice<jule::Ptr<_1ab834db5_ParamIns>> _field_params = jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_result = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();
	jule::Ptr<_1ab839d43_ReferenceStack> _field_references = jule::Ptr<_1ab839d43_ReferenceStack>();
	jule::Bool _field_anon = jule::Bool();
	jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)> _field_caller = jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>();
	jule::Bool _field_reloaded = jule::Bool();


	_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns> __param_owner, jule::Ptr<_1ab832324_Fn> __param_decl, jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1ab834db5_ParamIns>> __param_params, jule::Ptr<_1a5913e9a_TypeKind> __param_result, jule::Ptr<_1ac56022c_Scope> __param_scope, jule::Ptr<_1ab839d43_ReferenceStack> __param_references, jule::Bool __param_anon, jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)> __param_caller, jule::Bool __param_reloaded): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_anon(__param_anon), _field_caller(__param_caller), _field_reloaded(__param_reloaded) {}

	

	_1ab836218_FnIns(void) = default;

	inline bool operator==(_1ab836218_FnIns _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_params == _other._field_params &&
			this->_field_result == _other._field_result &&
			this->_field_scope == _other._field_scope &&
			this->_field_references == _other._field_references &&
			this->_field_anon == _other._field_anon &&
			this->_field_caller == _other._field_caller &&
			this->_field_reloaded == _other._field_reloaded;
	}

	inline bool operator!=(_1ab836218_FnIns _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab839d43_ReferenceStack> static__1ab83a294_new(void);
inline jule::I64 _1ab83a690_len(_1ab839d43_ReferenceStack*);
inline jule::Any _1ab83aa47_at(_1ab839d43_ReferenceStack*,jule::I64);
inline void _1ab83ad66_push(_1ab839d43_ReferenceStack*,jule::Any);
inline jule::Bool _1ab83b21d_exist_0(_1ab839d43_ReferenceStack*,jule::Ptr<_1a588601b_Var>);
inline jule::Bool _1ab83b21d_exist_1(_1ab839d43_ReferenceStack*,jule::Ptr<_1ab836218_FnIns>);
struct _1ab839d43_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer = jule::Slice<jule::Any>();


	_1ab839d43_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_1ab839d43_ReferenceStack(void) = default;

	inline bool operator==(_1ab839d43_ReferenceStack _other) {
		return 
			this->_field_buffer == _other._field_buffer;
	}

	inline bool operator!=(_1ab839d43_ReferenceStack _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab840d16_SymbolBuilder> _1ab841641_get_root(jule::Ptr<_1ab840d16_SymbolBuilder>);
inline void _1ab841b19_push_err(_1ab840d16_SymbolBuilder*,_1aa07563a_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _1ab8420e2_push_err_text(_1ab840d16_SymbolBuilder*,_1aa07563a_Token&,jule::Str,jule::Slice<jule::Any>);
inline void _1ab8424dd_push_suggestion(_1ab840d16_SymbolBuilder*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ab8428a6_check_cpp_use_decl_path(_1ab840d16_SymbolBuilder*,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ab842c91_build_cpp_header_import(_1ab840d16_SymbolBuilder*,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ab843137_build_std_import(_1ab840d16_SymbolBuilder*,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ab8434de_build_ident_import(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ab843896_build_import(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Bool _1ab843c92_check_duplicate_use_decl(_1ab840d16_SymbolBuilder*,jule::Ptr<_1ac580d41_ImportInfo>&);
inline void _1ab84417c_impl_import_selections(_1ab840d16_SymbolBuilder*,jule::Ptr<_1ac580d41_ImportInfo>&,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Str _1ab844534_get_as_link_path(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Str);
inline void _1ab844a0c_push_cycle_error(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1ab840d16_SymbolBuilder>&,jule::Str,jule::Str&);
inline void _1ab844ed5_push_cross_cycle_error(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1ab840d16_SymbolBuilder>&,jule::Ptr<_1ac580d41_ImportInfo>&,_1aa07563a_Token&);
inline jule::Bool _1ab845469_check_import_cycles(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1ac580d41_ImportInfo>,jule::Ptr<_1aa09ba29_UseDecl>&);
inline void _1ab845986_check_package_accessibility(_1ab840d16_SymbolBuilder*,jule::Ptr<_1aa09ba29_UseDecl>&,jule::Str&,jule::Str&);
inline jule::Bool _1ab845e09_import_package(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1ac580d41_ImportInfo>&,jule::Ptr<_1aa09ba29_UseDecl>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ab8462b1_import_use_decl(jule::Ptr<_1ab840d16_SymbolBuilder>,jule::Ptr<_1aa09ba29_UseDecl>&);
inline void _1ab846503_import_use_decls(jule::Ptr<_1ab840d16_SymbolBuilder>);
inline void _1ab846822_append_node(_1ab840d16_SymbolBuilder*,_1dd582b25_Node&);
inline void _1ab846a64_append_nodes(_1ab840d16_SymbolBuilder*);
inline void _1ab846d83_push_directive_pass(_1ab840d16_SymbolBuilder*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ab8470c5_append_top_directives(_1ab840d16_SymbolBuilder*);
inline void _1ab847317_build(jule::Ptr<_1ab840d16_SymbolBuilder>);
struct _1ab840d16_SymbolBuilder {
	jule::Ptr<_1ab840d16_SymbolBuilder> _field_owner = jule::Ptr<_1ab840d16_SymbolBuilder>();
	jule::Trait<_1ac57d25b_Importer> _field_importer = jule::Trait<_1ac57d25b_Importer>();
	jule::Slice<_1c4810251_Log> _field_errors = jule::Slice<_1c4810251_Log>();
	jule::Ptr<_1dd582707_Ast> _field_ast = jule::Ptr<_1dd582707_Ast>();
	jule::Ptr<_1a58c88ee_SymbolTable> _field_table = jule::Ptr<_1a58c88ee_SymbolTable>();


	_1ab840d16_SymbolBuilder(jule::Ptr<_1ab840d16_SymbolBuilder> __param_owner, jule::Trait<_1ac57d25b_Importer> __param_importer, jule::Slice<_1c4810251_Log> __param_errors, jule::Ptr<_1dd582707_Ast> __param_ast, jule::Ptr<_1a58c88ee_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {}

	

	_1ab840d16_SymbolBuilder(void) = default;

	inline bool operator==(_1ab840d16_SymbolBuilder _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_importer == _other._field_importer &&
			this->_field_errors == _other._field_errors &&
			this->_field_ast == _other._field_ast &&
			this->_field_table == _other._field_table;
	}

	inline bool operator!=(_1ab840d16_SymbolBuilder _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac44c68b_is_trait_impl(_1ac44c05e_Impl*);
inline jule::Bool _1ac44c966_is_struct_impl(_1ac44c05e_Impl*);
struct _1ac44c05e_Impl {
	jule::Ptr<_1dd583461_TypeDecl> _field_base = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1dd583461_TypeDecl> _field_dest = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ab832324_Fn>>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_statics = jule::Slice<jule::Ptr<_1a588601b_Var>>();


	_1ac44c05e_Impl(jule::Ptr<_1dd583461_TypeDecl> __param_base, jule::Ptr<_1dd583461_TypeDecl> __param_dest, jule::Slice<jule::Ptr<_1ab832324_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_1ac44c05e_Impl(void) = default;

	inline bool operator==(_1ac44c05e_Impl _other) {
		return 
			this->_field_base == _other._field_base &&
			this->_field_dest == _other._field_dest &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics;
	}

	inline bool operator!=(_1ac44c05e_Impl _other) { return !this->operator==(_other); }


};
struct _1ac56022c_Scope {
	jule::Ptr<_1ac56022c_Scope> _field_parent = jule::Ptr<_1ac56022c_Scope>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_deferred = jule::Bool();
	jule::Slice<jule::Any> _field_stmts = jule::Slice<jule::Any>();


	_1ac56022c_Scope(jule::Ptr<_1ac56022c_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_1ac56022c_Scope(void) = default;

	inline bool operator==(_1ac56022c_Scope _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_deferred == _other._field_deferred &&
			this->_field_stmts == _other._field_stmts;
	}

	inline bool operator!=(_1ac56022c_Scope _other) { return !this->operator==(_other); }


};
struct _1ac56064a_If {
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();


	_1ac56064a_If(jule::Any __param_expr, jule::Ptr<_1ac56022c_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1ac56064a_If(void) = default;

	inline bool operator==(_1ac56064a_If _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac56064a_If _other) { return !this->operator==(_other); }


};
struct _1ac560a68_Else {
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();


	_1ac560a68_Else(jule::Ptr<_1ac56022c_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1ac560a68_Else(void) = default;

	inline bool operator==(_1ac560a68_Else _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac560a68_Else _other) { return !this->operator==(_other); }


};
struct _1ac560e86_Conditional {
	jule::Slice<jule::Ptr<_1ac56064a_If>> _field_elifs = jule::Slice<jule::Ptr<_1ac56064a_If>>();
	jule::Ptr<_1ac560a68_Else> _field_default = jule::Ptr<_1ac560a68_Else>();


	_1ac560e86_Conditional(jule::Slice<jule::Ptr<_1ac56064a_If>> __param_elifs, jule::Ptr<_1ac560a68_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_1ac560e86_Conditional(void) = default;

	inline bool operator==(_1ac560e86_Conditional _other) {
		return 
			this->_field_elifs == _other._field_elifs &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ac560e86_Conditional _other) { return !this->operator==(_other); }


};
struct _1ac5613a4_InfIter {
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();


	_1ac5613a4_InfIter(jule::Ptr<_1ac56022c_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_1ac5613a4_InfIter(void) = default;

	inline bool operator==(_1ac5613a4_InfIter _other) {
		return 
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac5613a4_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac52ac97_is_while_next(_1ac5617c2_WhileIter*);
struct _1ac5617c2_WhileIter {
	jule::Any _field_expr = jule::Any();
	jule::Any _field_next = jule::Any();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();


	_1ac5617c2_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_1ac56022c_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_1ac5617c2_WhileIter(void) = default;

	inline bool operator==(_1ac5617c2_WhileIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1ac5617c2_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ac561be0_RangeIter {
	jule::Ptr<_1a58cee44_Data> _field_expr = jule::Ptr<_1a58cee44_Data>();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();
	jule::Ptr<_1a588601b_Var> _field_key_a = jule::Ptr<_1a588601b_Var>();
	jule::Ptr<_1a588601b_Var> _field_key_b = jule::Ptr<_1a588601b_Var>();


	_1ac561be0_RangeIter(jule::Ptr<_1a58cee44_Data> __param_expr, jule::Ptr<_1ac56022c_Scope> __param_scope, jule::Ptr<_1a588601b_Var> __param_key_a, jule::Ptr<_1a588601b_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1ac561be0_RangeIter(void) = default;

	inline bool operator==(_1ac561be0_RangeIter _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1ac561be0_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ac56210d_ContSt {
	jule::U64 _field_it = jule::U64();


	_1ac56210d_ContSt(jule::U64 __param_it): _field_it(__param_it) {}

	

	_1ac56210d_ContSt(void) = default;

	inline bool operator==(_1ac56210d_ContSt _other) {
		return 
			this->_field_it == _other._field_it;
	}

	inline bool operator!=(_1ac56210d_ContSt _other) { return !this->operator==(_other); }


};
struct _1ac56252b_BreakSt {
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_mtch = jule::U64();


	_1ac56252b_BreakSt(jule::U64 __param_it, jule::U64 __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_1ac56252b_BreakSt(void) = default;

	inline bool operator==(_1ac56252b_BreakSt _other) {
		return 
			this->_field_it == _other._field_it &&
			this->_field_mtch == _other._field_mtch;
	}

	inline bool operator!=(_1ac56252b_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ac562949_Label {
	jule::Str _field_ident = jule::Str();


	_1ac562949_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ac562949_Label(void) = default;

	inline bool operator==(_1ac562949_Label _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ac562949_Label _other) { return !this->operator==(_other); }


};
struct _1ac562d67_GotoSt {
	jule::Str _field_ident = jule::Str();


	_1ac562d67_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_1ac562d67_GotoSt(void) = default;

	inline bool operator==(_1ac562d67_GotoSt _other) {
		return 
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ac562d67_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ac563285_Postfix {
	jule::Any _field_expr = jule::Any();
	jule::Str _field_op = jule::Str();


	_1ac563285_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1ac563285_Postfix(void) = default;

	inline bool operator==(_1ac563285_Postfix _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ac563285_Postfix _other) { return !this->operator==(_other); }


};
struct _1ac563ac1_MultiAssign {
	jule::Slice<jule::Any> _field_l = jule::Slice<jule::Any>();
	jule::Any _field_r = jule::Any();


	_1ac563ac1_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_1ac563ac1_MultiAssign(void) = default;

	inline bool operator==(_1ac563ac1_MultiAssign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r;
	}

	inline bool operator!=(_1ac563ac1_MultiAssign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac536995_is_generic_type_match(_1ac563ede_Match*);
struct _1ac563ede_Match {
	jule::Ptr<_1a58cee44_Data> _field_expr = jule::Ptr<_1a58cee44_Data>();
	jule::Bool _field_type_match = jule::Bool();
	jule::Slice<jule::Ptr<_1ac56463d_Case>> _field_cases = jule::Slice<jule::Ptr<_1ac56463d_Case>>();
	jule::Ptr<_1ac56463d_Case> _field_default = jule::Ptr<_1ac56463d_Case>();


	_1ac563ede_Match(jule::Ptr<_1a58cee44_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_1ac56463d_Case>> __param_cases, jule::Ptr<_1ac56463d_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1ac563ede_Match(void) = default;

	inline bool operator==(_1ac563ede_Match _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ac563ede_Match _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac537ac8_is_default(_1ac56463d_Case*);
struct _1ac56463d_Case {
	jule::Ptr<_1ac563ede_Match> _field_owner = jule::Ptr<_1ac563ede_Match>();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();
	jule::Slice<jule::Ptr<_1a58cee44_Data>> _field_exprs = jule::Slice<jule::Ptr<_1a58cee44_Data>>();
	jule::Ptr<_1ac56463d_Case> _field_next = jule::Ptr<_1ac56463d_Case>();


	_1ac56463d_Case(jule::Ptr<_1ac563ede_Match> __param_owner, jule::Ptr<_1ac56022c_Scope> __param_scope, jule::Slice<jule::Ptr<_1a58cee44_Data>> __param_exprs, jule::Ptr<_1ac56463d_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_1ac56463d_Case(void) = default;

	inline bool operator==(_1ac56463d_Case _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_next == _other._field_next;
	}

	inline bool operator!=(_1ac56463d_Case _other) { return !this->operator==(_other); }


};
struct _1ac564a5b_FallSt {
	jule::U64 _field_dest_case = jule::U64();


	_1ac564a5b_FallSt(jule::U64 __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_1ac564a5b_FallSt(void) = default;

	inline bool operator==(_1ac564a5b_FallSt _other) {
		return 
			this->_field_dest_case == _other._field_dest_case;
	}

	inline bool operator!=(_1ac564a5b_FallSt _other) { return !this->operator==(_other); }


};
struct _1ac564e79_RetSt {
	jule::Ptr<_1ab836218_FnIns> _field_func = jule::Ptr<_1ab836218_FnIns>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_vars = jule::Slice<jule::Ptr<_1a588601b_Var>>();
	jule::Any _field_expr = jule::Any();


	_1ac564e79_RetSt(jule::Ptr<_1ab836218_FnIns> __param_func, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_vars, jule::Any __param_expr): _field_func(__param_func), _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_1ac564e79_RetSt(void) = default;

	inline bool operator==(_1ac564e79_RetSt _other) {
		return 
			this->_field_func == _other._field_func &&
			this->_field_vars == _other._field_vars &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ac564e79_RetSt _other) { return !this->operator==(_other); }


};
struct _1ac5657b5_ScopeGoto {
	jule::Ptr<_1aa0951a4_GotoSt> _field_gt = jule::Ptr<_1aa0951a4_GotoSt>();
	jule::Ptr<_1ac565bd3_ScopeChecker> _field_scope = jule::Ptr<_1ac565bd3_ScopeChecker>();
	jule::I64 _field_pos = jule::I64();


	_1ac5657b5_ScopeGoto(jule::Ptr<_1aa0951a4_GotoSt> __param_gt, jule::Ptr<_1ac565bd3_ScopeChecker> __param_scope, jule::I64 __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_1ac5657b5_ScopeGoto(void) = default;

	inline bool operator==(_1ac5657b5_ScopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ac5657b5_ScopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac4edb16_find_package(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac501421_select_package(_1ac565bd3_ScopeChecker*,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
inline jule::Ptr<_1a588601b_Var> _1ac5476ba_find_var(_1ac565bd3_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1ac566101_find_type_alias(_1ac565bd3_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1ac566266_find_struct(_1ac565bd3_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1ac566662_find_fn(_1ac565bd3_ScopeChecker*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1ac566a19_find_trait(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1ac566dc1_find_enum(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Bool _1ac567267_is_unsafe(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Bool _1ac567542_is_root(_1ac565bd3_ScopeChecker*);
inline void _1ac567784_stop(_1ac565bd3_ScopeChecker*);
inline jule::Bool _1ac567a5e_stopped(_1ac565bd3_ScopeChecker*);
inline jule::Bool _1ac567d39_is_deferred(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac568114_get_root(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac5683de_get_hard_root(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Ptr<_1ac562949_Label> _1ac568796_find_label(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Ptr<_1ac565397_ScopeLabel> _1ac568b4d_find_label_scope(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Str);
inline jule::Ptr<_1ac565397_ScopeLabel> _1ac569005_find_label_all(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Bool _1ac569489_is_duplicated_ident(_1ac565bd3_ScopeChecker*,jule::U64,jule::Str);
inline void _1ac5697a8_check_var_decl(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa097085_VarDecl>);
inline void _1ac569ac7_check_type_alias_decl(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09a330_TypeAliasDecl>);
inline jule::Ptr<_1ac56022c_Scope> _1ac569da2_get_child(_1ac565bd3_ScopeChecker*);
inline void _1ac56a37a_check_child_ssc(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09632b_ScopeTree>&,jule::Ptr<_1ac56022c_Scope>&,jule::Ptr<_1ac565bd3_ScopeChecker>&);
inline jule::Ptr<_1ac56022c_Scope> _1ac56a80e_check_child_sc(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09632b_ScopeTree>&,jule::Ptr<_1ac565bd3_ScopeChecker>&);
inline jule::Ptr<_1ac56022c_Scope> _1ac56abb6_check_child(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09632b_ScopeTree>&);
inline void _1ac56aed5_check_anon_scope(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09632b_ScopeTree>);
inline void _1ac56b3d1_process_error_call(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>&,_1aa07563a_Token);
inline void _1ac56b700_check_expr(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa08d334_Expr>);
inline void _1ac56ba1e_check_co_expr(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa08e8c9_CoExpr>);
inline jule::Ptr<_1ac56064a_If> _1ac56bdc6_check_if(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa098e66_If>);
inline jule::Ptr<_1ac560a68_Else> _1ac56c27d_check_else(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09942d_Else>);
inline void _1ac56c59c_check_conditional(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa099a38_Conditional>);
inline jule::Ptr<_1ac56022c_Scope> _1ac56cb0d_check_iter_scope_sc(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::U64,jule::Ptr<_1aa09632b_ScopeTree>,jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Ptr<_1ac56022c_Scope> _1ac56d092_check_iter_scope(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::U64,jule::Ptr<_1aa09632b_ScopeTree>&);
inline void _1ac56d3b1_check_inf_iter(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0978c1_Iter>&);
inline void _1ac56d6d0_check_while_iter(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0978c1_Iter>&);
inline void _1ac56d9ee_check_range_iter(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0978c1_Iter>&);
inline void _1ac56dd1d_check_iter(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0978c1_Iter>);
inline jule::Bool _1ac56e1c5_check_valid_cont_label(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::U64);
inline jule::Bool _1ac56e5c1_check_valid_break_label(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::U64);
inline jule::Ptr<_1ac56210d_ContSt> _1ac56e967_check_cont_valid_scope(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa098a48_ContSt>);
inline void _1ac56ec86_check_cont(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa098a48_ContSt>);
inline void _1ac5700a5_check_label(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa094c86_LabelSt>);
inline void _1ac5703c4_push_goto(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0951a4_GotoSt>);
inline void _1ac5706e3_check_postfix(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa095e0d_AssignSt>);
inline jule::Bool _1ac570a9a_is_new_assign_ident(_1ac565bd3_ScopeChecker*,jule::Str);
inline jule::Bool _1ac571150_check_structure_assign_op(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ab814515_StructIns>&,jule::Ptr<_1aa095e0d_AssignSt>&,jule::Ptr<_1a58cee44_Data>&);
inline void _1ac57145d_check_single_assign(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa095e0d_AssignSt>&);
inline void _1ac571b56___process_end_part_of_multi_assign(_1ac565bd3_ScopeChecker*,jule::Ptr<_1ac563ac1_MultiAssign>,jule::Ptr<_1aa095e0d_AssignSt>,jule::Ptr<_1aa0959e0_AssignLeft>,jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1a58cee44_Data>);
inline void _1ac571e42_check_ret_multi_assign(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa095e0d_AssignSt>&);
inline void _1ac572261_check_multi_assign(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa095e0d_AssignSt>&);
inline void _1ac572580_check_assign_st(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa095e0d_AssignSt>);
inline jule::Ptr<_1ac56022c_Scope> _1ac572a14_check_case_scope(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ac56463d_Case>&,jule::Ptr<_1aa09632b_ScopeTree>&);
inline jule::Ptr<_1ac56463d_Case> _1ac573152_check_case(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ac563ede_Match>,jule::I64,jule::Ptr<_1aa09a93a_Case>,jule::Ptr<_1a58cee44_Data>);
inline void _1ac57362a_check_cases(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09b188_MatchCase>&,jule::Ptr<_1ac563ede_Match>,jule::Ptr<_1a58cee44_Data>);
inline jule::Ptr<_1ac56463d_Case> _1ac573aae_check_default(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ac563ede_Match>,jule::Ptr<_1aa09942d_Else>);
inline void _1ac573dcd_check_comptime_panic(_1ac565bd3_ScopeChecker*,jule::Ptr<_1ac56022c_Scope>&);
inline void _1ac5742c9_push_type_match(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1ac563ede_Match>,jule::Ptr<_1aa09b188_MatchCase>&);
inline void _1ac5745e8_check_type_match(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09b188_MatchCase>&);
inline void _1ac574917_check_common_match(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09b188_MatchCase>&);
inline void _1ac574c36_check_match(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09b188_MatchCase>);
inline void _1ac575055_check_fall(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0955c2_FallSt>);
inline jule::Ptr<_1ac56252b_BreakSt> _1ac57540c_check_break_with_label(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09862a_BreakSt>);
inline jule::Ptr<_1ac56252b_BreakSt> _1ac5757b4_check_plain_break(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09862a_BreakSt>);
inline void _1ac575ad3_check_break(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09862a_BreakSt>);
inline void _1ac575e02_check_ret(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa0974a3_RetSt>);
inline void _1ac576221_check_use_expr(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa08d752_UseExpr>);
inline void _1ac576540_check_node(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Any&);
inline void _1ac576782_check_result(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline void _1ac5769c4_check_tree(jule::Ptr<_1ac565bd3_ScopeChecker>);
inline void _1ac576dc0_check_goto(_1ac565bd3_ScopeChecker*,jule::Ptr<_1ac5657b5_ScopeGoto>&,jule::Ptr<_1ac565397_ScopeLabel>&);
inline void _1ac577112_check_gotos(_1ac565bd3_ScopeChecker*);
inline void _1ac577354_check_labels(_1ac565bd3_ScopeChecker*);
inline void _1ac577596_check_vars(_1ac565bd3_ScopeChecker*);
inline void _1ac5777d8_check_aliases(_1ac565bd3_ScopeChecker*);
inline void _1ac577bd4_check(jule::Ptr<_1ac565bd3_ScopeChecker>,jule::Ptr<_1aa09632b_ScopeTree>&,jule::Ptr<_1ac56022c_Scope>&);
inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac577eae_new_child_checker(jule::Ptr<_1ac565bd3_ScopeChecker>);
struct _1ac565bd3_ScopeChecker {
	jule::Ptr<_1aa07563a_Token> _field_called_from = jule::Ptr<_1aa07563a_Token>();
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Ptr<_1ab836218_FnIns> _field_owner = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ac565bd3_ScopeChecker> _field_parent = jule::Ptr<_1ac565bd3_ScopeChecker>();
	jule::I64 _field_child_index = jule::I64();
	jule::Ptr<_1a58c88ee_SymbolTable> _field_table = jule::Ptr<_1a58c88ee_SymbolTable>();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_tree = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_result = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::U64 _field_it = jule::U64();
	jule::U64 _field_cse = jule::U64();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>> _field_labels = jule::Ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>>();
	jule::Ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>> _field_gotos = jule::Ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>>();
	jule::I64 _field_i = jule::I64();


	_1ac565bd3_ScopeChecker(jule::Ptr<_1aa07563a_Token> __param_called_from, jule::Ptr<_1a5864747_Sema> __param_s, jule::Ptr<_1ab836218_FnIns> __param_owner, jule::Ptr<_1ac565bd3_ScopeChecker> __param_parent, jule::I64 __param_child_index, jule::Ptr<_1a58c88ee_SymbolTable> __param_table, jule::Ptr<_1ac56022c_Scope> __param_scope, jule::Ptr<_1aa09632b_ScopeTree> __param_tree, jule::Ptr<_1a5913e9a_TypeKind> __param_result, jule::U64 __param_it, jule::U64 __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>> __param_gotos, jule::I64 __param_i): _field_called_from(__param_called_from), _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_result(__param_result), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {}

	

	_1ac565bd3_ScopeChecker(void) = default;

	inline bool operator==(_1ac565bd3_ScopeChecker _other) {
		return 
			this->_field_called_from == _other._field_called_from &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_child_index == _other._field_child_index &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ac565bd3_ScopeChecker _other) { return !this->operator==(_other); }


};
inline void _1ac579631_check_cdef(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac579950_check_typedef(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac579c6e_check_derive(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac57a08d_check_namespace(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac57a3ac_check_deprecated(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac57a6cb_check_test(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac57a9ea_check_directive(_1ac578e49_DirectiveChecker*,jule::Ptr<_1dd583043_Directive>&);
inline void _1ac57ac3c_check(_1ac578e49_DirectiveChecker*);
struct _1ac578e49_DirectiveChecker {
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Ptr<jule::Slice<jule::Ptr<_1dd583043_Directive>>> _field_d = jule::Ptr<jule::Slice<jule::Ptr<_1dd583043_Directive>>>();
	jule::Any _field_o = jule::Any();


	_1ac578e49_DirectiveChecker(jule::Ptr<_1a5864747_Sema> __param_s, jule::Ptr<jule::Slice<jule::Ptr<_1dd583043_Directive>>> __param_d, jule::Any __param_o): _field_s(__param_s), _field_d(__param_d), _field_o(__param_o) {}

	

	_1ac578e49_DirectiveChecker(void) = default;

	inline bool operator==(_1ac578e49_DirectiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ac578e49_DirectiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac584c79_find_package(_1ac58451a_Package*,jule::Str);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac585131_select_package(_1ac58451a_Package*,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
inline jule::Ptr<_1a588601b_Var> _1ac5855b5_find_var(_1ac58451a_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1ac585a49_find_type_alias(_1ac58451a_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1ac585ecd_find_struct(_1ac58451a_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1ac586462_find_fn(_1ac58451a_Package*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1ac586819_find_trait(_1ac58451a_Package*,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1ac586bc1_find_enum(_1ac58451a_Package*,jule::Str);
struct _1ac58451a_Package {
	jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>();


	_1ac58451a_Package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_1ac58451a_Package(void) = default;

	inline bool operator==(_1ac58451a_Package _other) {
		return 
			this->_field_files == _other._field_files;
	}

	inline bool operator!=(_1ac58451a_Package _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5864eea_find_package(_1a5864747_Sema*,jule::Str);
inline jule::Ptr<_1ac580d41_ImportInfo> _1a58653a2_select_package(_1a5864747_Sema*,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
inline jule::Ptr<_1a588601b_Var> _1a5865836_find_var(_1a5864747_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5865cba_find_type_alias(_1a5864747_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1a586624e_find_struct(_1a5864747_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1a58666d3_find_fn(_1a5864747_Sema*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1a5866a8a_find_trait(_1a5864747_Sema*,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1a5866e42_find_enum(_1a5864747_Sema*,jule::Str);
inline jule::Bool _1a58673b5_is_flag(_1a5864747_Sema*,jule::I64);
inline void _1a58676d4_set_current_file(_1a5864747_Sema*,jule::Ptr<_1a58c88ee_SymbolTable>);
inline void _1a5867bac_push_err(_1a5864747_Sema*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1a58680a8_push_suggestion(_1a5864747_Sema*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a586853c_is_accessible_define(_1a5864747_Sema*,jule::Bool,_1aa07563a_Token);
inline jule::Bool _1a5868a9d_is_duplicated_ident(_1a5864747_Sema*,jule::U64,jule::Str,jule::Bool);
inline void _1a5868e99_check_directives(jule::Ptr<_1a5864747_Sema>,jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Any);
inline jule::Bool _1a586950a_check_generic_quantity(_1a5864747_Sema*,jule::I64,jule::I64,_1aa07563a_Token);
inline jule::Bool _1a58699d3_is_duplicated_import_selection(_1a5864747_Sema*,jule::U64,jule::Str);
inline jule::Any _1a5869e56_get_import_def(_1a5864747_Sema*,jule::Str,jule::Ptr<_1ac580d41_ImportInfo>&);
inline jule::Bool _1a586a352_check_import_selections(_1a5864747_Sema*,jule::Ptr<_1ac580d41_ImportInfo>&);
inline jule::Bool _1a586a73c_is_use_alias_duplication(_1a5864747_Sema*,jule::Ptr<_1ac580d41_ImportInfo>&);
inline jule::Bool _1a586aad3_check_import(_1a5864747_Sema*,jule::Ptr<_1ac580d41_ImportInfo>&);
inline void _1a586ad25_check_imports(_1a5864747_Sema*);
inline void _1a586b067_impl_file_impls(jule::Ptr<_1a5864747_Sema>);
inline void _1a586b2a9_impl_impls(jule::Ptr<_1a5864747_Sema>);
inline void _1a586b4eb_check_enums(jule::Ptr<_1a5864747_Sema>);
inline jule::Bool _1a586ba5c_check_type_with_refers(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5918a0a_TypeSymbol>&,jule::Trait<_1a5932ea8_Lookup>,jule::Ptr<_1a5926045_Referencer>);
inline jule::Bool _1a586bee1_check_type(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5918a0a_TypeSymbol>&,jule::Trait<_1a5932ea8_Lookup>);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a586c4b9_build_type_with_generics(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1dd583461_TypeDecl>&,jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a586c860_build_type(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1dd583461_TypeDecl>&);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a586cc17_select_type(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1dd583461_TypeDecl>&);
inline jule::Ptr<_1a58d2397_Eval> _1a586d278_evalpd(jule::Ptr<_1a5864747_Sema>,jule::Trait<_1a5932ea8_Lookup>,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a588601b_Var>);
inline jule::Ptr<_1a58d2397_Eval> _1a586d70c_evalp(jule::Ptr<_1a5864747_Sema>,jule::Trait<_1a5932ea8_Lookup>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Ptr<_1a58d2397_Eval> _1a586dab4_eval(jule::Ptr<_1a5864747_Sema>,jule::Trait<_1a5932ea8_Lookup>);
inline jule::Bool _1a586e202_check_assign_type(jule::Ptr<_1a5864747_Sema>,jule::Bool,jule::Ptr<_1a5913e9a_TypeKind>&,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token);
inline jule::Bool _1a586e7a7_check_type_compatibility(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5913e9a_TypeKind>&,jule::Ptr<_1a5913e9a_TypeKind>&,_1aa07563a_Token&);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a586ec6e_build_non_generic_type_kind(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1dd583461_TypeDecl>&,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>&);
inline void _1a58700c1_build_fn_non_generic_type_kinds(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab836218_FnIns>&);
inline jule::Ptr<_1ab836218_FnIns> _1a58704ab_get_trait_check_fn_kind(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline jule::Bool _1a5870852_reload_fn_ins_types(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab836218_FnIns>&);
inline jule::Bool _1a5870e29_check_ref_validity_for_init_expr(jule::Ptr<_1a5864747_Sema>,jule::Bool,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token&);
inline jule::Bool _1a5871688_check_validity_for_init_expr(jule::Ptr<_1a5864747_Sema>,jule::Bool,jule::Bool,jule::Ptr<_1a5913e9a_TypeKind>&,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token&);
inline jule::Bool _1a5871b1c_check_type_alias_decl_kind(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5912d12_TypeAlias>&,jule::Trait<_1a5932ea8_Lookup>);
inline void _1a5872007_check_type_alias_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5912d12_TypeAlias>&,jule::Trait<_1a5932ea8_Lookup>);
inline void _1a587236a_check_type_alias_decl_dup(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a5912d12_TypeAlias>&);
inline jule::Bool _1a5872634_check_type_alias_decls(jule::Ptr<_1a5864747_Sema>);
inline void _1a5872953_check_enum_items_dup(_1a5864747_Sema*,jule::Ptr<_1ac44a337_Enum>);
inline void _1a5872c72_check_enum_items_str(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44a337_Enum>&);
inline void _1a5873091_check_enum_items_int(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44a337_Enum>&);
inline void _1a58733b0_check_enum_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44a337_Enum>&);
inline jule::Bool _1a587368a_check_enum_decls(jule::Ptr<_1a5864747_Sema>);
inline jule::Bool _1a5873a42_check_decl_generics(_1a5864747_Sema*,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>&);
inline jule::Bool _1a5873e3d_check_fn_decl_params_dup(_1a5864747_Sema*,jule::Ptr<_1ab832324_Fn>&);
inline jule::Bool _1a5874328_check_fn_decl_result_dup(_1a5864747_Sema*,jule::Ptr<_1ab832324_Fn>&);
inline void _1a5874636_check_fn_decl_types(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline void _1a5874999_check_fn_decl_prototype(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline void _1a5874ceb_check_trait_decl_method(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline void _1a587514d_check_trait_decl_methods(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44770d_Trait>&);
inline void _1a587545b_check_trait_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44770d_Trait>&);
inline jule::Bool _1a5875736_check_trait_decls(jule::Ptr<_1a5864747_Sema>);
inline jule::Bool _1a5875c0e_check_trait_impl_methods(_1a5864747_Sema*,jule::Ptr<_1ac44770d_Trait>&,jule::Ptr<_1ac44c05e_Impl>&);
inline jule::Bool _1a5876182_impl_to_struct(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&,jule::Ptr<_1ac44c05e_Impl>&);
inline void _1a58764a1_impl_trait(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44c05e_Impl>&);
inline void _1a58767c0_impl_struct(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44c05e_Impl>&);
inline void _1a5876ade_impl_impl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ac44c05e_Impl>&);
inline void _1a5876eda_check_var_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a588601b_Var>&,jule::Trait<_1a5932ea8_Lookup>);
inline void _1a5877309_check_global_var_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a588601b_Var>&);
inline jule::Bool _1a58775d4_check_global_decls(jule::Ptr<_1a5864747_Sema>);
inline jule::Bool _1a5877aac_check_struct_trait_impl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&,jule::Ptr<_1ac44770d_Trait>&);
inline jule::Bool _1a5877e53_check_struct_impls(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Bool _1a587830a_check_struct_fields(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Bool _1a5878706_check_struct_decl_methods(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline void _1a5878a14_check_struct_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Bool _1a5878cde_check_struct_decls(jule::Ptr<_1a5864747_Sema>);
inline void _1a587910d_check_fn_decl(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline jule::Bool _1a58793d8_check_fn_decls(jule::Ptr<_1a5864747_Sema>);
inline void _1a58798b1_push_cycle_error(_1a5864747_Sema*,jule::Ptr<_1ab810b3d_Struct>&,jule::Ptr<_1ab810b3d_Struct>&,jule::Str&);
inline jule::Bool _1a5879e22_check_cross_cycle(_1a5864747_Sema*,jule::Ptr<_1ab810b3d_Struct>&,jule::Ptr<_1ab810b3d_Struct>&,jule::Str&);
inline jule::Bool _1a587a4e9_check_struct_derive_illegal_cycles(_1a5864747_Sema*,jule::Str,jule::Ptr<_1ab810b3d_Struct>&,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a587a8b2_check_struct_ins_derive_clone(_1a5864747_Sema*,jule::Ptr<_1ab814515_StructIns>);
inline jule::Bool _1a587ac9c_check_struct_derive_clone(_1a5864747_Sema*,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Bool _1a587b066_check_file_derives(_1a5864747_Sema*);
inline void _1a587b2a8_check_package_derives(_1a5864747_Sema*);
inline void _1a587b4ea_check_package_decls(jule::Ptr<_1a5864747_Sema>);
inline void _1a587b93a_check_data_for_type_inference(_1a5864747_Sema*,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token&);
inline void _1a587bc48_check_var(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a588601b_Var>&);
inline void _1a587c144_check_type_var(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1a588601b_Var>&,jule::Trait<_1a5932ea8_Lookup>);
inline void _1a587c386_check_global_types(jule::Ptr<_1a5864747_Sema>);
inline jule::Ptr<_1ab836218_FnIns> _1a587c81a_ready_to_check_fn(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>&,jule::Ptr<_1ab832324_Fn>&);
inline void _1a587cc16_check_type_method(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>&,jule::Ptr<_1ab832324_Fn>&);
inline void _1a587d035_check_field_defaults(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Ptr<_1ab836218_FnIns> _1a587d596_check_struct_ins_op(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>&,jule::Ptr<_1ab832324_Fn>&,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>);
inline void _1a587d8b5_check_struct_ins(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>&);
inline void _1a587dbd4_check_type_struct(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline void _1a587de26_check_struct_types(jule::Ptr<_1a5864747_Sema>);
inline void _1a587e289_check_struct_ins_operators(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab814515_StructIns>);
inline void _1a587e5db_check_type_struct_operators(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab810b3d_Struct>&);
inline void _1a587e861_check_struct_types_operators(jule::Ptr<_1a5864747_Sema>);
inline void _1a587eb6e_check_rets(_1a5864747_Sema*,jule::Ptr<_1ab836218_FnIns>&);
inline void _1a588006a_check_fn_ins_sc(_1a5864747_Sema*,jule::Ptr<_1ab836218_FnIns>&,jule::Ptr<_1ac565bd3_ScopeChecker>&);
inline void _1a5880466_check_fn_ins_caller(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab836218_FnIns>&,jule::Ptr<_1aa07563a_Token>);
inline void _1a5880785_check_fn_ins(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab836218_FnIns>&);
inline void _1a5880aa4_check_type_fn(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline void _1a5880dc3_check_test_fn(_1a5864747_Sema*,jule::Ptr<_1ab836218_FnIns>&);
inline void _1a58811e2_precheck_type_fn(jule::Ptr<_1a5864747_Sema>,jule::Ptr<_1ab832324_Fn>&);
inline void _1a5881434_precheck_fn_types(jule::Ptr<_1a5864747_Sema>);
inline void _1a5881676_check_fn_types(jule::Ptr<_1a5864747_Sema>);
inline void _1a58818b8_check_package_types(jule::Ptr<_1a5864747_Sema>);
inline void _1a5881b0a_set_file_sema_fields(jule::Ptr<_1a5864747_Sema>);
inline void _1a5881d4c_set_sema_fields(jule::Ptr<_1a5864747_Sema>);
inline void _1a588216b_check(jule::Ptr<_1a5864747_Sema>,jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&);
struct _1a5864747_Sema {
	jule::Slice<_1c4810251_Log> _field_errors = jule::Slice<_1c4810251_Log>();
	jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>> _field_files = jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>();
	jule::Ptr<_1a58c88ee_SymbolTable> _field_file = jule::Ptr<_1a58c88ee_SymbolTable>();
	jule::I64 _field_flags = 0LL;


	_1a5864747_Sema(jule::Slice<_1c4810251_Log> __param_errors, jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>> __param_files, jule::Ptr<_1a58c88ee_SymbolTable> __param_file, jule::I64 __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {}

	

	_1a5864747_Sema(void) = default;

	inline bool operator==(_1a5864747_Sema _other) {
		return 
			this->_field_errors == _other._field_errors &&
			this->_field_files == _other._field_files &&
			this->_field_file == _other._field_file &&
			this->_field_flags == _other._field_flags;
	}

	inline bool operator!=(_1a5864747_Sema _other) { return !this->operator==(_other); }


};
inline _1a58825bc_MissingRetChecker static__1a5882bb6_new(void);
inline jule::Bool _1a588303a_check_conditional(_1a58825bc_MissingRetChecker*,jule::Ptr<_1ac560e86_Conditional>);
inline jule::Bool _1a58833e2_check_match(_1a58825bc_MissingRetChecker*,jule::Ptr<_1ac563ede_Match>);
inline jule::Bool _1a5883799_check_inf_iter(_1a58825bc_MissingRetChecker*,jule::Ptr<_1ac5613a4_InfIter>);
inline jule::Bool _1a5883b51_check_scope(_1a58825bc_MissingRetChecker*,jule::Ptr<_1ac56022c_Scope>);
inline jule::Bool _1a5884008_check(_1a58825bc_MissingRetChecker*,jule::Ptr<_1ac56022c_Scope>);
struct _1a58825bc_MissingRetChecker {
	jule::Slice<jule::U64> _field_breaked = jule::Slice<jule::U64>();
	jule::Bool _field_falled = jule::Bool();


	_1a58825bc_MissingRetChecker(jule::Slice<jule::U64> __param_breaked, jule::Bool __param_falled): _field_breaked(__param_breaked), _field_falled(__param_falled) {}

	

	_1a58825bc_MissingRetChecker(void) = default;

	inline bool operator==(_1a58825bc_MissingRetChecker _other) {
		return 
			this->_field_breaked == _other._field_breaked &&
			this->_field_falled == _other._field_falled;
	}

	inline bool operator!=(_1a58825bc_MissingRetChecker _other) { return !this->operator==(_other); }


};
struct _1a5884a0e_IterRelation {
	jule::Ptr<_1a588601b_Var> _field_range = jule::Ptr<_1a588601b_Var>();


	_1a5884a0e_IterRelation(jule::Ptr<_1a588601b_Var> __param_range): _field_range(__param_range) {}

	

	_1a5884a0e_IterRelation(void) = default;

	inline bool operator==(_1a5884a0e_IterRelation _other) {
		return 
			this->_field_range == _other._field_range;
	}

	inline bool operator!=(_1a5884a0e_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a5887715_dispose(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5887a23_to_str(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5887e0d_logical(jule::Ptr<_1ab832324_Fn>&,jule::Str);
inline jule::Bool static__1a588821b_eq(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5888529_gt(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5888837_gt_eq(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5888b45_lt(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5888e53_lt_eq(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588933d_result(jule::Ptr<_1ab832324_Fn>&,jule::Str);
inline jule::Bool static__1a588964b_shl(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5889959_shr(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a5889c67_add(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588a075_sub(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588a383_div(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588a691_mul(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588a99e_mod(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588acac_bit_and(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588b0ba_bit_or(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588b3c8_bit_xor(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588b7b3_unary(jule::Ptr<_1ab832324_Fn>&,jule::Str);
inline jule::Bool static__1a588bac1_neg(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588bdce_pos(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588c1dc_bit_not(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588c5c7_assign(jule::Ptr<_1ab832324_Fn>&,jule::Str);
inline jule::Bool static__1a588c8d5_add_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588cbe3_sub_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588d001_div_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588d30e_mul_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588d61c_mod_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588d92a_shl_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588dc38_shr_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588e046_bit_or_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588e354_bit_and_assign(jule::Ptr<_1ab832324_Fn>);
inline jule::Bool static__1a588e662_bit_xor_assign(jule::Ptr<_1ab832324_Fn>);
struct _1a5886d30_FuncPattern {
	

	_1a5886d30_FuncPattern(void) = default;

	inline bool operator==(_1a5886d30_FuncPattern _other) { return true; }

	inline bool operator!=(_1a5886d30_FuncPattern _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a588601b_Var> _1a58c4169_build_var(_1a58c392c_RangeChecker*,jule::Ptr<_1aa097085_VarDecl>&);
inline void _1a58c43ab_set_size_key(_1a58c392c_RangeChecker*);
inline void _1a58c48c8_check_range_expr_validity(_1a58c392c_RangeChecker*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a588601b_Var>&,jule::Ptr<_1a5913e9a_TypeKind>&);
inline void _1a58c4b09_check_slice(_1a58c392c_RangeChecker*);
inline void _1a58c4d4b_check_array(_1a58c392c_RangeChecker*);
inline void _1a58c508d_check_map_key_a(_1a58c392c_RangeChecker*);
inline void _1a58c52d0_check_map_key_b(_1a58c392c_RangeChecker*);
inline void _1a58c5522_check_map(_1a58c392c_RangeChecker*);
inline void _1a58c5764_check_str(_1a58c392c_RangeChecker*);
inline jule::Bool _1a58c5a3e_check(_1a58c392c_RangeChecker*);
struct _1a58c392c_RangeChecker {
	jule::Ptr<_1ac565bd3_ScopeChecker> _field_sc = jule::Ptr<_1ac565bd3_ScopeChecker>();
	jule::Ptr<_1aa09820c_RangeKind> _field_rang = jule::Ptr<_1aa09820c_RangeKind>();
	jule::Ptr<_1ac561be0_RangeIter> _field_kind = jule::Ptr<_1ac561be0_RangeIter>();
	jule::Ptr<_1a58cee44_Data> _field_d = jule::Ptr<_1a58cee44_Data>();


	_1a58c392c_RangeChecker(jule::Ptr<_1ac565bd3_ScopeChecker> __param_sc, jule::Ptr<_1aa09820c_RangeKind> __param_rang, jule::Ptr<_1ac561be0_RangeIter> __param_kind, jule::Ptr<_1a58cee44_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_1a58c392c_RangeChecker(void) = default;

	inline bool operator==(_1a58c392c_RangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_kind == _other._field_kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a58c392c_RangeChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac580d41_ImportInfo> _1a58c91a2_find_package(_1a58c88ee_SymbolTable*,jule::Str);
inline jule::Ptr<_1ac580d41_ImportInfo> _1a58c9559_select_package(_1a58c88ee_SymbolTable*,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
inline jule::Ptr<_1a588601b_Var> _1a58c99dd_find_var(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1a58c9e72_find_type_alias(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1a58ca406_find_struct(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1a58ca88a_find_fn(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1a58cac42_find_trait(_1a58c88ee_SymbolTable*,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1a58cb0e9_find_enum(_1a58c88ee_SymbolTable*,jule::Str);
inline jule::Ptr<_1a588601b_Var> _1a58cb77b___find_var(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1a58cbcdc___find_type_alias(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool,jule::Bool);
inline jule::Any _1a58cc271_def_by_ident(_1a58c88ee_SymbolTable*,jule::Str,jule::Bool);
inline jule::Bool _1a58cc7d2_is_duplicated_ident(_1a58c88ee_SymbolTable*,jule::U64,jule::Str,jule::Bool);
struct _1a58c88ee_SymbolTable {
	jule::Ptr<_1aa07b982_File> _field_file = jule::Ptr<_1aa07b982_File>();
	jule::Slice<_1ab83b66e_Pass> _field_passes = jule::Slice<_1ab83b66e_Pass>();
	jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _field_imports = jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_vars = jule::Slice<jule::Ptr<_1a588601b_Var>>();
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _field_type_aliases = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>();
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _field_structs = jule::Slice<jule::Ptr<_1ab810b3d_Struct>>();
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _field_funcs = jule::Slice<jule::Ptr<_1ab832324_Fn>>();
	jule::Slice<jule::Ptr<_1ac44770d_Trait>> _field_traits = jule::Slice<jule::Ptr<_1ac44770d_Trait>>();
	jule::Slice<jule::Ptr<_1ac44a337_Enum>> _field_enums = jule::Slice<jule::Ptr<_1ac44a337_Enum>>();
	jule::Slice<jule::Ptr<_1ac44c05e_Impl>> _field_impls = jule::Slice<jule::Ptr<_1ac44c05e_Impl>>();


	_1a58c88ee_SymbolTable(jule::Ptr<_1aa07b982_File> __param_file, jule::Slice<_1ab83b66e_Pass> __param_passes, jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_vars, jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_1ab810b3d_Struct>> __param_structs, jule::Slice<jule::Ptr<_1ab832324_Fn>> __param_funcs, jule::Slice<jule::Ptr<_1ac44770d_Trait>> __param_traits, jule::Slice<jule::Ptr<_1ac44a337_Enum>> __param_enums, jule::Slice<jule::Ptr<_1ac44c05e_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_1a58c88ee_SymbolTable(void) = default;

	inline bool operator==(_1a58c88ee_SymbolTable _other) {
		return 
			this->_field_file == _other._field_file &&
			this->_field_passes == _other._field_passes &&
			this->_field_imports == _other._field_imports &&
			this->_field_vars == _other._field_vars &&
			this->_field_type_aliases == _other._field_type_aliases &&
			this->_field_structs == _other._field_structs &&
			this->_field_funcs == _other._field_funcs &&
			this->_field_traits == _other._field_traits &&
			this->_field_enums == _other._field_enums &&
			this->_field_impls == _other._field_impls;
	}

	inline bool operator!=(_1a58c88ee_SymbolTable _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a58d0593_is_nil(_1a58cee44_Data*);
inline jule::Bool _1a58d086d_is_void(_1a58cee44_Data*);
inline jule::Bool _1a58d0b48_is_const(_1a58cee44_Data*);
inline jule::Bool _1a58d1000_good_operand(_1a58cee44_Data*,jule::Ptr<_1a58cee44_Data>&);
struct _1a58cee44_Data {
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_cast_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Bool _field_lvalue = jule::Bool();
	jule::Bool _field_is_rune = jule::Bool();
	jule::Any _field_model = jule::Any();
	jule::Bool _field_decl = jule::Bool();
	jule::Ptr<_1ac4d0ec2_Const> _field_constant = jule::Ptr<_1ac4d0ec2_Const>();


	_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Ptr<_1a5913e9a_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1ac4d0ec2_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_1a58cee44_Data(void) = default;

	inline bool operator==(_1a58cee44_Data _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_cast_kind == _other._field_cast_kind &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_lvalue == _other._field_lvalue &&
			this->_field_is_rune == _other._field_is_rune &&
			this->_field_model == _other._field_model &&
			this->_field_decl == _other._field_decl &&
			this->_field_constant == _other._field_constant;
	}

	inline bool operator!=(_1a58cee44_Data _other) { return !this->operator==(_other); }


};
struct _1a58d1451_Value {
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1a58cee44_Data> _field_data = jule::Ptr<_1a58cee44_Data>();


	_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Ptr<_1a58cee44_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_1a58d1451_Value(void) = default;

	inline bool operator==(_1a58d1451_Value _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a58d1451_Value _other) { return !this->operator==(_other); }


};
inline void _1a58d2b7d_push_err(_1a58d2397_Eval*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1a58d3079_push_suggestion(_1a58d2397_Eval*,jule::Str,jule::Slice<jule::Any>);
inline void _1a58d32bb_allow_builtin(_1a58d2397_Eval*);
inline void _1a58d350d_disallow_builtin(_1a58d2397_Eval*);
inline jule::Bool _1a58d37d8_is_unsafe(_1a58d2397_Eval*);
inline jule::Bool _1a58d3ab3_is_global(_1a58d2397_Eval*);
inline jule::Bool _1a58d3e6a_apply_numeric_prefix(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d4245_lit_nil(_1a58d2397_Eval*);
inline jule::Ptr<_1a58cee44_Data> _1a58d45ec_lit_str(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d49a4_lit_bool(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d4d5b_lit_rune(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d5213_lit_float(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d55ba_lit_int(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d5972_lit_num(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d5d29_eval_lit(_1a58d2397_Eval*,jule::Ptr<_1aa08e08d_LitExpr>);
inline jule::Any _1a58d61d1_find_builtins(_1a58d2397_Eval*,jule::Str);
inline jule::Any _1a58d6665_get_def(_1a58d2397_Eval*,jule::Str,jule::Bool);
inline void _1a58d6984_push_reference(_1a58d2397_Eval*,jule::Ptr<_1ab839d43_ReferenceStack>&);
inline void _1a58d6ca3_push_reference_to_fn(_1a58d2397_Eval*,jule::Ptr<_1ab836218_FnIns>&);
inline void _1a58d70c2_push_reference_to_var(_1a58d2397_Eval*,jule::Ptr<_1a588601b_Var>&);
inline void _1a58d7435_push_reference_to_struct(_1a58d2397_Eval*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Ptr<_1a58cee44_Data> _1a58d77cb___eval_enum(_1a58d2397_Eval*,jule::Ptr<_1ac44a337_Enum>);
inline jule::Ptr<_1a58cee44_Data> _1a58d7c60_eval_enum(_1a58d2397_Eval*,jule::Ptr<_1ac44a337_Enum>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58d8117___eval_struct(_1a58d2397_Eval*,jule::Ptr<_1ab814515_StructIns>);
inline jule::Ptr<_1a58cee44_Data> _1a58d859b_eval_struct(_1a58d2397_Eval*,jule::Ptr<_1ab814515_StructIns>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58d8953_eval_fn_ins(_1a58d2397_Eval*,jule::Ptr<_1ab836218_FnIns>);
inline void _1a58d8d4e_check_deprecated(_1a58d2397_Eval*,jule::Slice<jule::Ptr<_1dd583043_Directive>>&,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58d92d3_eval_fn(_1a58d2397_Eval*,jule::Ptr<_1ab832324_Fn>,_1aa07563a_Token);
inline void _1a58d9800_push_illegal_cycle_error(_1a58d2397_Eval*,jule::Ptr<_1a588601b_Var>&,jule::Ptr<_1a588601b_Var>&,jule::Str&);
inline jule::Bool _1a58d9c73_check_cross_cycle(_1a58d2397_Eval*,jule::Ptr<_1a588601b_Var>&,jule::Str&);
inline jule::Bool _1a58da207_check_illegal_cycles(_1a58d2397_Eval*,jule::Ptr<_1a588601b_Var>&,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58da68b_eval_var(_1a58d2397_Eval*,jule::Ptr<_1a588601b_Var>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58dab20_eval_type_alias(_1a58d2397_Eval*,jule::Ptr<_1a5912d12_TypeAlias>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58db0a4_eval_def(_1a58d2397_Eval*,jule::Any,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58db45b_eval_ident(_1a58d2397_Eval*,jule::Ptr<_1aa08ece7_IdentExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58db813_eval_unary(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa090215_UnaryExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58dbbba_eval_variadic(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa090633_VariadicExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58dc072_eval_unsafe(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa08e4ab_UnsafeExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58dc429_eval_arr(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09326d_SliceExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58dc8ad_eval_exp_slc(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09326d_SliceExpr>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Ptr<_1a58cee44_Data> _1a58dcc65_eval_slice_expr(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09326d_SliceExpr>);
inline void _1a58dd1a5_check_integer_indexing_by_data(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token);
inline void _1a58dd66c_indexing_ptr(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline void _1a58ddb45_indexing_arr(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline void _1a58de11d_indexing_slc(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline void _1a58de5e6_indexing_map(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline void _1a58deabe_indexing_str(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline void _1a58e0097_to_indexing(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline jule::Bool _1a58e0570_push_generics_from_index_data(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58e0a37_eval_ident_decl_from_indexing(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa093b0e_IndexingExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58e0dcd_eval_indexing(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa093b0e_IndexingExpr>);
inline std::tuple<jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1a58cee44_Data>> _1a58e1285_eval_slicing_exprs(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09402c_SlicingExpr>&);
inline void _1a58e15a4_slicing_arr(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&);
inline void _1a58e1a7c_slicing_str(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&);
inline void _1a58e2132_check_slicing(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1aa09402c_SlicingExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a58e24d9_eval_slicing(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09402c_SlicingExpr>);
inline void _1a58e29b2_cast_ptr(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e2e8a_cast_struct(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e3463_cast_ref(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e393b_cast_slc(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e3d37_cast_str(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e4310_cast_int(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e47d8_cast_num(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e4cb1_cast_prim(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline void _1a58e51ac_cast_constant(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a58e5762_eval_cast_by_type_n_data(_1a58d2397_Eval*,jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58e5b08_eval_cast(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa090a51_CastExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58e5eb0_eval_ns_selection(_1a58d2397_Eval*,jule::Ptr<_1aa090e6e_NsSelectionExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58e6565_eval_struct_lit_explicit(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1ab814515_StructIns>,jule::Slice<jule::Ptr<_1aa08d334_Expr>>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58e690b_eval_struct_lit(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa092514_StructLit>);
inline jule::Ptr<_1a58cee44_Data> _1a58e6cb3_eval_type(_1a58d2397_Eval*,jule::Ptr<_1dd583461_TypeDecl>);
inline void _1a58e71ae_call_type_fn(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1a58e7643_check_fn_call_generics(_1a58d2397_Eval*,jule::Ptr<_1ab836218_FnIns>,jule::Ptr<_1aa091bc8_FnCallExpr>);
inline void _1a58e7a3e_call_builtin_fn(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline void _1a58e7e7e_check_fn_of_concurrent_call(_1a58d2397_Eval*,jule::Ptr<_1ab836218_FnIns>&,_1aa07563a_Token);
inline void _1a58e848a_process_exceptional_handler(_1a58d2397_Eval*,jule::Ptr<_1ab836218_FnIns>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline void _1a58e8875_call_fn(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a58e8c2c_eval_fn_call(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa091bc8_FnCallExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a58e91b1_eval_enum_static(_1a58d2397_Eval*,jule::Ptr<_1ac44a337_Enum>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58e9645_eval_struct_static(_1a58d2397_Eval*,jule::Ptr<_1ab814515_StructIns>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58e9ba6_eval_trait_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1ac44770d_Trait>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ea2e4_eval_struct_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1ab814515_StructIns>,jule::Ptr<_1aa09138c_SubIdentExpr>,jule::Bool);
inline jule::Ptr<_1a58cee44_Data> _1a58ea778_eval_slice_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eac0c_eval_array_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eb191_eval_map_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eb625_eval_str_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eb9cc_eval_int_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ebd84_eval_uint_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ec23b_eval_i8_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ec5e3_eval_i16_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ec99a_eval_i32_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ecd52_eval_i64_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ed209_eval_u8_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ed5b1_eval_u16_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ed968_eval_u32_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58edd20_eval_u64_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ee1c7_eval_f32_type_tatic(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58ee57e_eval_f64_type_static(_1a58d2397_Eval*,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eea13_eval_prim_static(_1a58d2397_Eval*,jule::Str,_1aa07563a_Token);
inline jule::Ptr<_1a58cee44_Data> _1a58eee97_eval_type_static(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1aa09138c_SubIdentExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a590042b_eval_obj_sub_ident(_1a58d2397_Eval*,jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1aa09138c_SubIdentExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a59007d3_eval_sub_ident(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09138c_SubIdentExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a5900b8a_eval_tuple(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa08db70_TupleExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a590111e_eval_map(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1a592132b_Map>,jule::Ptr<_1aa092932_BraceLit>);
inline jule::Ptr<_1a58cee44_Data> _1a59014c6_eval_brace_lit(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa092932_BraceLit>);
inline jule::Ptr<_1a58cee44_Data> _1a590187d_eval_anon_fn(_1a58d2397_Eval*,jule::Ptr<_1aa096b67_FnDecl>);
inline jule::Ptr<_1a58cee44_Data> _1a5901c35_eval_binop(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa0917aa_BinopExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a59020dc_eval_ternary(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa09444a_TernaryExpr>);
inline jule::Ptr<_1a58cee44_Data> _1a5902494_eval_expr_kind(jule::Ptr<_1a58d2397_Eval>,jule::Any);
inline jule::Ptr<_1a58cee44_Data> _1a590284b_eval(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa08d334_Expr>);
inline jule::Ptr<_1a58cee44_Data> _1a5902c03_eval_expr(jule::Ptr<_1a58d2397_Eval>,jule::Ptr<_1aa08d334_Expr>);
struct _1a58d2397_Eval {
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Trait<_1a5932ea8_Lookup> _field_lookup = jule::Trait<_1a5932ea8_Lookup>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_prefix = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_immutable = jule::Bool();
	jule::Bool _field_ignored = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Ptr<_1a588601b_Var> _field_owner = jule::Ptr<_1a588601b_Var>();
	jule::Ptr<_1ab8137bc_FieldIns> _field_field = jule::Ptr<_1ab8137bc_FieldIns>();
	jule::Bool _field_arg = jule::Bool();


	_1a58d2397_Eval(jule::Ptr<_1a5864747_Sema> __param_s, jule::Trait<_1a5932ea8_Lookup> __param_lookup, jule::Ptr<_1a5913e9a_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Bool __param_ignored, jule::Bool __param_dis_builtin, jule::Ptr<_1a588601b_Var> __param_owner, jule::Ptr<_1ab8137bc_FieldIns> __param_field, jule::Bool __param_arg): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_ignored(__param_ignored), _field_dis_builtin(__param_dis_builtin), _field_owner(__param_owner), _field_field(__param_field), _field_arg(__param_arg) {}

	

	_1a58d2397_Eval(void) = default;

	inline bool operator==(_1a58d2397_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a58d2397_Eval _other) { return !this->operator==(_other); }


};
inline _1a5903253_UnaryEval static__1a590396d_new(jule::Ptr<_1a58d2397_Eval>);
inline void _1a5903bb0_minus(_1a5903253_UnaryEval*);
inline void _1a5903e02_plus(_1a5903253_UnaryEval*);
inline void _1a5904144_caret(_1a5903253_UnaryEval*);
inline void _1a5904386_excl(_1a5903253_UnaryEval*);
inline void _1a59045c8_star(_1a5903253_UnaryEval*);
inline void _1a590481a_amper(_1a5903253_UnaryEval*);
inline void _1a5904a5c_type_decl(_1a5903253_UnaryEval*);
inline void _1a5904c9e_eval_data(_1a5903253_UnaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5905123_eval(_1a5903253_UnaryEval*,jule::Ptr<_1aa090215_UnaryExpr>);
struct _1a5903253_UnaryEval {
	jule::Ptr<_1a58d2397_Eval> _field_e = jule::Ptr<_1a58d2397_Eval>();
	jule::Ptr<_1a58cee44_Data> _field_d = jule::Ptr<_1a58cee44_Data>();
	jule::Ptr<_1aa090215_UnaryExpr> _field_u = jule::Ptr<_1aa090215_UnaryExpr>();


	_1a5903253_UnaryEval(jule::Ptr<_1a58d2397_Eval> __param_e, jule::Ptr<_1a58cee44_Data> __param_d, jule::Ptr<_1aa090215_UnaryExpr> __param_u): _field_e(__param_e), _field_d(__param_d), _field_u(__param_u) {}

	

	_1a5903253_UnaryEval(void) = default;

	inline bool operator==(_1a5903253_UnaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a5903253_UnaryEval _other) { return !this->operator==(_other); }


};
inline jule::Str _1a59145b6_to_str(_1a5913e9a_TypeKind*);
inline jule::Bool _1a591496d_equals(jule::Ptr<_1a5913e9a_TypeKind>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1a5914e79_cpp_linked(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5915254_is_nil(_1a5913e9a_TypeKind*);
inline jule::Bool _1a591552e_void(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5915809_mutable(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5915ad4_nil_compatible(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5915dae_performs_rc(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5916189_supports_cloning(_1a5913e9a_TypeKind*);
inline jule::Bool _1a5916464_variadicable(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a591970e_Prim> _1a591673e_prim(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a591d768_Sptr> _1a5916a19_sptr(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a59230db_Ptr> _1a5916ce4_ptr(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1ac44a337_Enum> _1a59170be_enm(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a592230a_Arr> _1a5917399_arr(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a591e549_Slc> _1a5917674_slc(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1ab836218_FnIns> _1a591794e_fnc(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1ab814515_StructIns> _1a5917c29_strct(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1ac44770d_Trait> _1a5918004_trt(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a592132b_Map> _1a59182ce_map(_1a5913e9a_TypeKind*);
inline jule::Ptr<_1a59203b3_Tuple> _1a59185a9_tup(_1a5913e9a_TypeKind*);
struct _1a5913e9a_TypeKind {
	jule::Str _field_cpp_ident = jule::Str();
	jule::Bool _field_generic = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Trait<_1a591395b_Kind> _field_kind = jule::Trait<_1a591395b_Kind>();


	_1a5913e9a_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_1a591395b_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {}

	

	_1a5913e9a_TypeKind(void) = default;

	inline bool operator==(_1a5913e9a_TypeKind _other) {
		return 
			this->_field_cpp_ident == _other._field_cpp_ident &&
			this->_field_generic == _other._field_generic &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5913e9a_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a591916a_checked(_1a5918a0a_TypeSymbol*);
inline void _1a59193ac_remove_kind(_1a5918a0a_TypeSymbol*);
struct _1a5918a0a_TypeSymbol {
	jule::Ptr<_1dd583461_TypeDecl> _field_decl = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl> __param_decl, jule::Ptr<_1a5913e9a_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_1a5918a0a_TypeSymbol(void) = default;

	inline bool operator==(_1a5918a0a_TypeSymbol _other) {
		return 
			this->_field_decl == _other._field_decl &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a5918a0a_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5919cd6_to_str(_1a591970e_Prim*);
inline jule::Bool _1a591a18d_equals(jule::Ptr<_1a591970e_Prim>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1a591a666_is_i8(_1a591970e_Prim*);
inline jule::Bool _1a591a941_is_i16(_1a591970e_Prim*);
inline jule::Bool _1a591ac1b_is_i32(_1a591970e_Prim*);
inline jule::Bool _1a591aee6_is_i64(_1a591970e_Prim*);
inline jule::Bool _1a591b2c1_is_u8(_1a591970e_Prim*);
inline jule::Bool _1a591b59b_is_u16(_1a591970e_Prim*);
inline jule::Bool _1a591b876_is_u32(_1a591970e_Prim*);
inline jule::Bool _1a591bb51_is_u64(_1a591970e_Prim*);
inline jule::Bool _1a591be2b_is_f32(_1a591970e_Prim*);
inline jule::Bool _1a591c206_is_f64(_1a591970e_Prim*);
inline jule::Bool _1a591c4d1_is_int(_1a591970e_Prim*);
inline jule::Bool _1a591c7ab_is_uint(_1a591970e_Prim*);
inline jule::Bool _1a591ca86_is_uintptr(_1a591970e_Prim*);
inline jule::Bool _1a591cd61_is_bool(_1a591970e_Prim*);
inline jule::Bool _1a591d13b_is_str(_1a591970e_Prim*);
inline jule::Bool _1a591d416_is_any(_1a591970e_Prim*);
struct _1a591970e_Prim {
	jule::Str _field_kind = jule::Str();


	_1a591970e_Prim(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a591970e_Prim(void) = default;

	inline bool operator==(_1a591970e_Prim _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a591970e_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a591dd40_to_str(_1a591d768_Sptr*);
inline jule::Bool _1a591e1e7_equals(jule::Ptr<_1a591d768_Sptr>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a591d768_Sptr {
	jule::Ptr<_1a5913e9a_TypeKind> _field_elem = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a591d768_Sptr(jule::Ptr<_1a5913e9a_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a591d768_Sptr(void) = default;

	inline bool operator==(_1a591d768_Sptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a591d768_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a591eba9_to_str(_1a591e549_Slc*);
inline jule::Bool _1a5920061_equals(jule::Ptr<_1a591e549_Slc>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a591e549_Slc {
	jule::Ptr<_1a5913e9a_TypeKind> _field_elem = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a591e549_Slc(jule::Ptr<_1a5913e9a_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a591e549_Slc(void) = default;

	inline bool operator==(_1a591e549_Slc _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a591e549_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5920a23_to_str(_1a59203b3_Tuple*);
inline jule::Bool _1a5920dca_equals(jule::Ptr<_1a59203b3_Tuple>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a59203b3_Tuple {
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>();


	_1a59203b3_Tuple(jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> __param_types): _field_types(__param_types) {}

	

	_1a59203b3_Tuple(void) = default;

	inline bool operator==(_1a59203b3_Tuple _other) {
		return 
			this->_field_types == _other._field_types;
	}

	inline bool operator!=(_1a59203b3_Tuple _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5921903_to_str(_1a592132b_Map*);
inline jule::Bool _1a5921caa_equals(jule::Ptr<_1a592132b_Map>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a592132b_Map {
	jule::Ptr<_1a5913e9a_TypeKind> _field_key = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_val = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a592132b_Map(jule::Ptr<_1a5913e9a_TypeKind> __param_key, jule::Ptr<_1a5913e9a_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_1a592132b_Map(void) = default;

	inline bool operator==(_1a592132b_Map _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val;
	}

	inline bool operator!=(_1a592132b_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a59228d2_to_str(_1a592230a_Arr*);
inline jule::Bool _1a5922c89_equals(jule::Ptr<_1a592230a_Arr>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a592230a_Arr {
	jule::Bool _field_auto = jule::Bool();
	jule::I64 _field_n = jule::I64();
	jule::Ptr<_1a5913e9a_TypeKind> _field_elem = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a592230a_Arr(jule::Bool __param_auto, jule::I64 __param_n, jule::Ptr<_1a5913e9a_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {}

	

	_1a592230a_Arr(void) = default;

	inline bool operator==(_1a592230a_Arr _other) {
		return 
			this->_field_auto == _other._field_auto &&
			this->_field_n == _other._field_n &&
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a592230a_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a59236b3_to_str(_1a59230db_Ptr*);
inline jule::Bool _1a5923a6a_equals(jule::Ptr<_1a59230db_Ptr>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1a5923e33_is_unsafe(_1a59230db_Ptr*);
struct _1a59230db_Ptr {
	jule::Ptr<_1a5913e9a_TypeKind> _field_elem = jule::Ptr<_1a5913e9a_TypeKind>();


	_1a59230db_Ptr(jule::Ptr<_1a5913e9a_TypeKind> __param_elem): _field_elem(__param_elem) {}

	

	_1a59230db_Ptr(void) = default;

	inline bool operator==(_1a59230db_Ptr _other) {
		return 
			this->_field_elem == _other._field_elem;
	}

	inline bool operator!=(_1a59230db_Ptr _other) { return !this->operator==(_other); }


};
struct _1a5926045_Referencer {
	jule::Str _field_ident = jule::Str();
	jule::Any _field_owner = jule::Any();
	jule::Slice<jule::Any>* _field_refs = nullptr;


	_1a5926045_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_1a5926045_Referencer(void) = default;

	inline bool operator==(_1a5926045_Referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a5926045_Referencer _other) { return !this->operator==(_other); }


};
struct _1dd532d5b_CompileInfo {
	jule::Bool _field_prod = jule::Bool();
	jule::Bool _field_test = jule::Bool();
	jule::Str _field_compiler = jule::Str("clang", 5);
	jule::Str _field_cpp_std = jule::Str("cpp14", 5);


	_1dd532d5b_CompileInfo(jule::Bool __param_prod, jule::Bool __param_test, jule::Str __param_compiler, jule::Str __param_cpp_std): _field_prod(__param_prod), _field_test(__param_test), _field_compiler(__param_compiler), _field_cpp_std(__param_cpp_std) {}

	

	_1dd532d5b_CompileInfo(void) = default;

	inline bool operator==(_1dd532d5b_CompileInfo _other) {
		return 
			this->_field_prod == _other._field_prod &&
			this->_field_test == _other._field_test &&
			this->_field_compiler == _other._field_compiler &&
			this->_field_cpp_std == _other._field_cpp_std;
	}

	inline bool operator!=(_1dd532d5b_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1dd53b0c8_push_err(_1aa0a0203_DirectiveEval*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1dd53c360_split_operans(_1aa0a0203_DirectiveEval*,jule::Str,jule::Slice<_1aa07563a_Token>&);
inline jule::Bool _1dd53846b_eval_directive_ident(_1aa0a0203_DirectiveEval*,jule::Str);
inline jule::Bool _1dd546b94_eval_directive_part(_1aa0a0203_DirectiveEval*,jule::Slice<_1aa07563a_Token>);
inline jule::Bool _1dd54d67e_eval(_1aa0a0203_DirectiveEval*);
struct _1aa0a0203_DirectiveEval {
	jule::Slice<_1c4810251_Log> _field_logs = jule::Slice<_1c4810251_Log>();
	jule::Ptr<_1dd583043_Directive> _field_d = jule::Ptr<_1dd583043_Directive>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1aa0a0203_DirectiveEval(jule::Slice<_1c4810251_Log> __param_logs, jule::Ptr<_1dd583043_Directive> __param_d, jule::Slice<jule::Str> __param_vars): _field_logs(__param_logs), _field_d(__param_d), _field_vars(__param_vars) {}

	

	_1aa0a0203_DirectiveEval(void) = default;

	inline bool operator==(_1aa0a0203_DirectiveEval _other) {
		return 
			this->_field_logs == _other._field_logs &&
			this->_field_d == _other._field_d &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1aa0a0203_DirectiveEval _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a599d551_JuleImporter> static__1a599dbe4_new(_1dd532d5b_CompileInfo);
inline jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _1a599debe_all_packages(_1a599d551_JuleImporter*);
inline void _1a599e431_set_mod_path(_1a599d551_JuleImporter*,jule::Str);
inline jule::Str _1a599e70b_get_mod_path(_1a599d551_JuleImporter*);
inline jule::Str _1a599eab3_mod_by_id(_1a599d551_JuleImporter*,jule::I64);
inline jule::Ptr<_1ac580d41_ImportInfo> _1a599ee6a_get_import(_1a599d551_JuleImporter*,jule::Str);
inline std::tuple<jule::Slice<jule::Ptr<_1dd582707_Ast>>,jule::Slice<_1c4810251_Log>> _1a59a03ee_import_package(_1a599d551_JuleImporter*,jule::Str,jule::Bool);
inline void _1a59a071d_imported(_1a599d551_JuleImporter*,jule::Ptr<_1ac580d41_ImportInfo>);
inline std::tuple<jule::Bool,jule::Slice<_1c4810251_Log>> _1a59a0c4b_is_pass_build_directives(_1a599d551_JuleImporter*,jule::Ptr<_1dd582707_Ast>&);
struct _1a599d551_JuleImporter {
	jule::Slice<jule::Str> _field_mods = jule::Slice<jule::Str>();
	jule::Str _field_mod = jule::Str();
	jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _field_pkgs = jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>();
	jule::Slice<jule::Str> _field_vars = jule::Slice<jule::Str>();


	_1a599d551_JuleImporter(jule::Slice<jule::Str> __param_mods, jule::Str __param_mod, jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> __param_pkgs, jule::Slice<jule::Str> __param_vars): _field_mods(__param_mods), _field_mod(__param_mod), _field_pkgs(__param_pkgs), _field_vars(__param_vars) {}

	

	_1a599d551_JuleImporter(void) = default;

	inline bool operator==(_1a599d551_JuleImporter _other) {
		return 
			this->_field_mods == _other._field_mods &&
			this->_field_mod == _other._field_mod &&
			this->_field_pkgs == _other._field_pkgs &&
			this->_field_vars == _other._field_vars;
	}

	inline bool operator!=(_1a599d551_JuleImporter _other) { return !this->operator==(_other); }


};
struct _1a59a3e6e_OrderedDefines {
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _field_structs = jule::Slice<jule::Ptr<_1ab810b3d_Struct>>();


	_1a59a3e6e_OrderedDefines(jule::Slice<jule::Ptr<_1ab810b3d_Struct>> __param_structs): _field_structs(__param_structs) {}

	

	_1a59a3e6e_OrderedDefines(void) = default;

	inline bool operator==(_1a59a3e6e_OrderedDefines _other) {
		return 
			this->_field_structs == _other._field_structs;
	}

	inline bool operator!=(_1a59a3e6e_OrderedDefines _other) { return !this->operator==(_other); }


};
inline jule::Bool static__1a59a4b51_is_common_ordered_0(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>&,jule::Ptr<_1ab810b3d_Struct>);
inline void static__1a59a4dc6_order_common_0(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>&);
inline void static__1a59a514b_order_structures(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>&);
struct _1a59a4414_DefineOrderer {
	

	_1a59a4414_DefineOrderer(void) = default;

	inline bool operator==(_1a59a4414_DefineOrderer _other) { return true; }

	inline bool operator!=(_1a59a4414_DefineOrderer _other) { return !this->operator==(_other); }


};
inline void _1a59ac241_optimize_child(jule::Ptr<_1a59aba6a_ScopeDeadCode>,jule::Ptr<_1ac56022c_Scope>&);
inline void _1a59ac483_eliminate_followed(_1a59aba6a_ScopeDeadCode*);
inline void _1a59ac7a2_optimize_stmt(jule::Ptr<_1a59aba6a_ScopeDeadCode>,jule::Any);
inline void _1a59ac9e4_optimize_stmts(jule::Ptr<_1a59aba6a_ScopeDeadCode>);
struct _1a59aba6a_ScopeDeadCode {
	jule::Ptr<_1a59aba6a_ScopeDeadCode> _field_parent = jule::Ptr<_1a59aba6a_ScopeDeadCode>();
	jule::Ptr<_1ac56022c_Scope> _field_s = jule::Ptr<_1ac56022c_Scope>();
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = jule::I64();


	_1a59aba6a_ScopeDeadCode(jule::Ptr<_1a59aba6a_ScopeDeadCode> __param_parent, jule::Ptr<_1ac56022c_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::I64 __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {}

	

	_1a59aba6a_ScopeDeadCode(void) = default;

	inline bool operator==(_1a59aba6a_ScopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a59aba6a_ScopeDeadCode _other) { return !this->operator==(_other); }


};
inline void static__1a59ce807_reset(void);
inline void static__1a59ce96c_print(jule::Str,jule::Str);
struct _1a59ce3d9_AnsiEscape {
	

	_1a59ce3d9_AnsiEscape(void) = default;

	inline bool operator==(_1a59ce3d9_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a59ce3d9_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a59d0e35_log_flat(_1c4810251_Log&);
inline void static__1a59d11aa_log_error(_1c4810251_Log&);
inline void static__1a59d1430_log(_1c4810251_Log&);
inline void static__1a59d16a5_print_logs(jule::Slice<_1c4810251_Log>&);
struct _1a59d0918_Logger {
	

	_1a59d0918_Logger(void) = default;

	inline bool operator==(_1a59d0918_Logger _other) { return true; }

	inline bool operator!=(_1a59d0918_Logger _other) { return !this->operator==(_other); }


};
struct _1a631ed5b_UnsafeBinopExprModel {
	jule::Ptr<_1ab8170b7_BinopExprModel> _field_node = jule::Ptr<_1ab8170b7_BinopExprModel>();


	_1a631ed5b_UnsafeBinopExprModel(jule::Ptr<_1ab8170b7_BinopExprModel> __param_node): _field_node(__param_node) {}

	

	_1a631ed5b_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1a631ed5b_UnsafeBinopExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a631ed5b_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a6320279_UnsafeIndexingExprModel {
	jule::Ptr<_1ab81ae9a_IndexingExprModel> _field_node = jule::Ptr<_1ab81ae9a_IndexingExprModel>();


	_1a6320279_UnsafeIndexingExprModel(jule::Ptr<_1ab81ae9a_IndexingExprModel> __param_node): _field_node(__param_node) {}

	

	_1a6320279_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1a6320279_UnsafeIndexingExprModel _other) {
		return 
			this->_field_node == _other._field_node;
	}

	inline bool operator!=(_1a6320279_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a63207da_PushToSliceExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Ptr<_1ab81a74c_SliceExprModel> _field_elems = jule::Ptr<_1ab81a74c_SliceExprModel>();


	_1a63207da_PushToSliceExprModel(jule::Any __param_dest, jule::Ptr<_1ab81a74c_SliceExprModel> __param_elems): _field_dest(__param_dest), _field_elems(__param_elems) {}

	

	_1a63207da_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a63207da_PushToSliceExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_elems == _other._field_elems;
	}

	inline bool operator!=(_1a63207da_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1a6321753_StrInsertBeginExprModel {
	jule::Any _field_dest = jule::Any();
	jule::Any _field_expr = jule::Any();


	_1a6321753_StrInsertBeginExprModel(jule::Any __param_dest, jule::Any __param_expr): _field_dest(__param_dest), _field_expr(__param_expr) {}

	

	_1a6321753_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1a6321753_StrInsertBeginExprModel _other) {
		return 
			this->_field_dest == _other._field_dest &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1a6321753_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a632326b_ScopeOptimizer> static__1a6323711_new(jule::Ptr<_1ac56022c_Scope>);
inline void _1a63239db_set_current_stmt(_1a632326b_ScopeOptimizer*,jule::Any);
inline void _1a6323d0a_optimize_data(_1a632326b_ScopeOptimizer*,jule::Ptr<_1a58cee44_Data>);
inline void _1a6324129_optimize_var(_1a632326b_ScopeOptimizer*,jule::Ptr<_1a588601b_Var>);
inline void _1a6324448_optimize_conditional(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac560e86_Conditional>);
inline void _1a6324767_optimize_match(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac563ede_Match>);
inline void _1a6324a86_optimize_range_iter(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac561be0_RangeIter>);
inline void _1a6324da5_optimize_while_iter(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac5617c2_WhileIter>);
inline jule::Bool _1a632525c_substr(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac5636a3_Assign>);
inline jule::Bool _1a6325614_str_insert(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac5636a3_Assign>);
inline jule::Bool _1a63259bb_str_assign(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac5636a3_Assign>);
inline void _1a6325cda_optimize_assign(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac5636a3_Assign>);
inline void _1a6326109_optimize_multi_assign(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac563ac1_MultiAssign>);
inline void _1a6326428_optimize_ret(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac564e79_RetSt>);
inline void _1a6326747_optimize_stmt(_1a632326b_ScopeOptimizer*,jule::Any);
inline void _1a6326a66_optimize_child(_1a632326b_ScopeOptimizer*,jule::Ptr<_1ac56022c_Scope>);
inline void _1a6326ca8_optimize(_1a632326b_ScopeOptimizer*);
struct _1a632326b_ScopeOptimizer {
	jule::I64 _field_i = jule::I64();
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();


	_1a632326b_ScopeOptimizer(jule::I64 __param_i, jule::Ptr<_1ac56022c_Scope> __param_scope): _field_i(__param_i), _field_scope(__param_scope) {}

	

	_1a632326b_ScopeOptimizer(void) = default;

	inline bool operator==(_1a632326b_ScopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a632326b_ScopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1a632985a_optimize(jule::Any&);
inline jule::Bool _1a632a3a5_str_cond(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab8170b7_BinopExprModel>);
inline void _1a632a6c4_binary(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab8170b7_BinopExprModel>);
inline void _1a632a9e3_unary(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab817716_UnaryExprModel>);
inline void _1a632ad12_structure_lit(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab818508_StructLitExprModel>);
inline void _1a632b131_alloc_structure(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab818ae1_AllocStructLitExprModel>);
inline void _1a632b450_casting(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81941b_CastingExprModel>);
inline void _1a632b76e_args(_1a63299d1_ExprOptimizer*,jule::Slice<jule::Any>);
inline void _1a632ba8d_scope(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ac56022c_Scope>&);
inline void _1a632bdac_func_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81a0ed_FnCallExprModel>);
inline void _1a632c1cb_slice(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81a74c_SliceExprModel>);
inline void _1a632c4ea_array(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab820136_ArrayExprModel>);
inline void _1a632c819_indexing(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81ae9a_IndexingExprModel>);
inline void _1a632cb38_anon_func(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81b5e9_AnonFnExprModel>);
inline void _1a632ce57_map(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81c496_MapExprModel>);
inline void _1a632d276_slicing(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81cce3_SlicingExprModel>);
inline void _1a632d595_trait_sub(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81d640_TraitSubIdentExprModel>);
inline void _1a632d8b4_structure_sub(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab81e245_StructSubIdentExprModel>);
inline void _1a632dbd3_common_sub(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82106b_CommonSubIdentExprModel>);
inline void _1a632e002_tuple(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab821599_TupleExprModel>);
inline void _1a632e321_new_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>);
inline void _1a632e640_out_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>);
inline void _1a632e95e_outln_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>);
inline void _1a632ec7d_panic_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>);
inline void _1a633009c_assert_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>);
inline void _1a63303bb_error_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>);
inline void _1a63306da_make_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>);
inline void _1a6330a09_append_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>);
inline void _1a6330d28_clone_call(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>);
inline void _1a6331147_sizeof(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82ab25_SizeofExprModel>);
inline void _1a6331466_alignof(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82b4c7_AlignofExprModel>);
inline void _1a6331785_integrated_to_str(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82c000_IntegratedToStrExprModel>);
inline void _1a6331aa4_ternary(_1a63299d1_ExprOptimizer*,jule::Ptr<_1ab82c72b_TernaryExprModel>);
inline void _1a6331ce6_do(_1a63299d1_ExprOptimizer*);
struct _1a63299d1_ExprOptimizer {
	jule::Ptr<jule::Any> _field_model = jule::Ptr<jule::Any>();


	_1a63299d1_ExprOptimizer(jule::Ptr<jule::Any> __param_model): _field_model(__param_model) {}

	

	_1a63299d1_ExprOptimizer(void) = default;

	inline bool operator==(_1a63299d1_ExprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a63299d1_ExprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a633317c_Optimizer> static__1a6333743_new(jule::Ptr<_1a59a1895_IR>&);
inline void _1a6333a62_optimize_global(_1a633317c_Optimizer*,jule::Ptr<_1a588601b_Var>&);
inline void _1a6333d81_optimize_function(_1a633317c_Optimizer*,jule::Ptr<_1ab832324_Fn>&);
inline void _1a63341a0_optimize_struct(_1a633317c_Optimizer*,jule::Ptr<_1ab810b3d_Struct>&);
inline void _1a63344be_optimize_globals(_1a633317c_Optimizer*,jule::Ptr<_1ac58451a_Package>&);
inline void _1a63347dd_optimize_functions(_1a633317c_Optimizer*,jule::Ptr<_1ac58451a_Package>&);
inline void _1a6334b0c_optimize_structs(_1a633317c_Optimizer*,jule::Ptr<_1ac58451a_Package>&);
inline void _1a6334e2b_optimize_package(_1a633317c_Optimizer*,jule::Ptr<_1ac58451a_Package>&);
inline void _1a633516d_optimize(_1a633317c_Optimizer*);
struct _1a633317c_Optimizer {
	jule::Ptr<_1a59a1895_IR> _field_ir = jule::Ptr<_1a59a1895_IR>();


	_1a633317c_Optimizer(jule::Ptr<_1a59a1895_IR> __param_ir): _field_ir(__param_ir) {}

	

	_1a633317c_Optimizer(void) = default;

	inline bool operator==(_1a633317c_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a633317c_Optimizer _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a6397026_unix(_1a63968c7_AbsTime*);
struct _1a63968c7_AbsTime {
	jule::U64 _field_day = jule::U64();
	jule::U64 _field_week_day = jule::U64();
	jule::U64 _field_year_day = jule::U64();
	jule::U64 _field_month = jule::U64();
	jule::U64 _field_year = jule::U64();
	jule::U64 _field_second = jule::U64();
	jule::U64 _field_minute = jule::U64();
	jule::U64 _field_hour = jule::U64();


	_1a63968c7_AbsTime(jule::U64 __param_day, jule::U64 __param_week_day, jule::U64 __param_year_day, jule::U64 __param_month, jule::U64 __param_year, jule::U64 __param_second, jule::U64 __param_minute, jule::U64 __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1a63968c7_AbsTime(void) = default;

	inline bool operator==(_1a63968c7_AbsTime _other) {
		return 
			this->_field_day == _other._field_day &&
			this->_field_week_day == _other._field_week_day &&
			this->_field_year_day == _other._field_year_day &&
			this->_field_month == _other._field_month &&
			this->_field_year == _other._field_year &&
			this->_field_second == _other._field_second &&
			this->_field_minute == _other._field_minute &&
			this->_field_hour == _other._field_hour;
	}

	inline bool operator!=(_1a63968c7_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a6397378_Time static__1a6397983_unix(jule::U64);
inline _1a6397378_Time static__1a6397bb4_now(void);
inline jule::U64 _1a639817b_unix(_1a6397378_Time*);
inline jule::U64 _1a6398456_day(_1a6397378_Time*);
inline jule::U64 _1a6398731_month(_1a6397378_Time*);
inline jule::U64 _1a6398a0b_year(_1a6397378_Time*);
inline jule::U64 _1a6398cd6_second(_1a6397378_Time*);
inline jule::U64 _1a63990b1_minute(_1a6397378_Time*);
inline jule::U64 _1a639938b_hour(_1a6397378_Time*);
inline _1a63968c7_AbsTime _1a6399666_abs(_1a6397378_Time*);
struct _1a6397378_Time {
	jule::U64 _field_sec = jule::U64();


	_1a6397378_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1a6397378_Time(void) = default;

	inline bool operator==(_1a6397378_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a6397378_Time _other) { return !this->operator==(_other); }


};
inline jule::I64 static__1a639a15b_nanoseconds(jule::I64);
inline jule::I64 static__1a639a469_microseconds(jule::I64);
inline jule::I64 static__1a639a777_milliseconds(jule::I64);
inline jule::I64 static__1a639aa85_seconds(jule::I64);
inline jule::I64 static__1a639ad93_minutes(jule::I64);
inline jule::I64 static__1a639b1a1_hours(jule::I64);
struct _1a63999b8_Duration {
	

	_1a63999b8_Duration(void) = default;

	inline bool operator==(_1a63999b8_Duration _other) { return true; }

	inline bool operator!=(_1a63999b8_Duration _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a61c4716_TestCoder> static__1a621d40d_new(jule::Ptr<_1a639d47d_ObjectCoder>&);
inline jule::Ptr<_1ac580d41_ImportInfo> _1a621d5ea_find_testing_package(_1a61c4716_TestCoder*);
inline void _1a621d8d6_append_test(_1a61c4716_TestCoder*,jule::Str&,jule::Ptr<_1ab836218_FnIns>);
inline void _1a621dc16_append_package_tests(_1a61c4716_TestCoder*,jule::Str&,jule::Ptr<_1ac58451a_Package>&);
inline jule::Bool _1a621de47_ready_testing_package(_1a61c4716_TestCoder*);
inline jule::Str _1a621e1ab_call_tm_reset(_1a61c4716_TestCoder*);
inline jule::Str _1a621e486_call_tm_failed(_1a61c4716_TestCoder*);
inline jule::Str _1a621e761_call_tm_skipped(_1a61c4716_TestCoder*);
inline void _1a621ea80_serialize(_1a61c4716_TestCoder*,jule::Str&);
struct _1a61c4716_TestCoder {
	jule::Ptr<_1ab814515_StructIns> _field_t = jule::Ptr<_1ab814515_StructIns>();
	jule::Ptr<_1ab832324_Fn> _field_tm_reset = jule::Ptr<_1ab832324_Fn>();
	jule::Ptr<_1ab832324_Fn> _field_tm_failed = jule::Ptr<_1ab832324_Fn>();
	jule::Ptr<_1ab832324_Fn> _field_tm_skipped = jule::Ptr<_1ab832324_Fn>();
	jule::Ptr<_1a639d47d_ObjectCoder> _field_oc = jule::Ptr<_1a639d47d_ObjectCoder>();


	_1a61c4716_TestCoder(jule::Ptr<_1ab814515_StructIns> __param_t, jule::Ptr<_1ab832324_Fn> __param_tm_reset, jule::Ptr<_1ab832324_Fn> __param_tm_failed, jule::Ptr<_1ab832324_Fn> __param_tm_skipped, jule::Ptr<_1a639d47d_ObjectCoder> __param_oc): _field_t(__param_t), _field_tm_reset(__param_tm_reset), _field_tm_failed(__param_tm_failed), _field_tm_skipped(__param_tm_skipped), _field_oc(__param_oc) {}

	

	_1a61c4716_TestCoder(void) = default;

	inline bool operator==(_1a61c4716_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tm_reset == _other._field_tm_reset &&
			this->_field_tm_failed == _other._field_tm_failed &&
			this->_field_tm_skipped == _other._field_tm_skipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a61c4716_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a62cbac6_ScopeCoder> static__1a62729a1_new(jule::Ptr<_1a639d47d_ObjectCoder>&);
inline jule::Str _1a6223457_range_index_iter(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac561be0_RangeIter>&);
inline jule::Str _1a6281eee_range_hashmap_iter(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac561be0_RangeIter>&);
inline jule::Str _1a6225316_if_case(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac56064a_If>);
inline jule::Str _1a6227a66_conditional(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac560e86_Conditional>);
inline jule::Str _1a6276e39_inf_iter(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac5613a4_InfIter>);
inline jule::Str _1a627b04d_while_iter(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac5617c2_WhileIter>);
inline jule::Str _1a627d45c_range_iter(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac561be0_RangeIter>);
inline jule::Str _1a62921da_cont(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac56210d_ContSt>);
inline jule::Str _1a62a27e4_label(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac562949_Label>);
inline jule::Str _1a62a7e15_goto_st(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac562d67_GotoSt>);
inline jule::Str _1a62addd8_postfix(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac563285_Postfix>);
inline jule::Str _1a630c84e_assign(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac5636a3_Assign>);
inline jule::Str _1a6315b10_multi_assign(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac563ac1_MultiAssign>);
inline jule::Str _1a62856d9_match_expr(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac563ede_Match>&);
inline jule::Str _1a62a5660_case(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac563ede_Match>,jule::Ptr<_1ac56463d_Case>);
inline jule::Str _1a62c9442_match_st(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac563ede_Match>);
inline jule::Str _1a622d52d_fall_st(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac564a5b_FallSt>);
inline jule::Str _1a624ddcd_break_st(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac56252b_BreakSt>);
inline jule::Str _1a62526b7_ret_with_vars(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac564e79_RetSt>);
inline jule::Str _1a6265c2a_ret_tuple(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac564e79_RetSt>);
inline jule::Str _1a62668da_ret_with_exprs(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac564e79_RetSt>);
inline jule::Str _1a62a3b03_ret_st(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac564e79_RetSt>);
inline jule::Str _1a62a484b_ret_with_defaults(_1a62cbac6_ScopeCoder*,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Str _1a62aacd6_var(_1a62cbac6_ScopeCoder*,jule::Ptr<_1a588601b_Var>);
inline jule::Str _1a62b7ab2_st(_1a62cbac6_ScopeCoder*,jule::Any);
inline jule::Str _1a62bc589_scope(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ac56022c_Scope>);
inline jule::Str _1a62bd458_func_scope(_1a62cbac6_ScopeCoder*,jule::Ptr<_1ab836218_FnIns>);
struct _1a62cbac6_ScopeCoder {
	jule::Ptr<_1a639d47d_ObjectCoder> _field_oc = jule::Ptr<_1a639d47d_ObjectCoder>();


	_1a62cbac6_ScopeCoder(jule::Ptr<_1a639d47d_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a62cbac6_ScopeCoder(void) = default;

	inline bool operator==(_1a62cbac6_ScopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a62cbac6_ScopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6224546_ExprCoder> static__1a6221763_new(jule::Ptr<_1a639d47d_ObjectCoder>&);
inline jule::Str _1a62c42e9_string(_1a6224546_ExprCoder*,jule::Ptr<_1ac4d0ec2_Const>&);
inline jule::Str _1a62c50a8_boolean(_1a6224546_ExprCoder*,jule::Ptr<_1ac4d0ec2_Const>&);
inline jule::Str _1a62c5d67_nil_lit(_1a6224546_ExprCoder*);
inline jule::Str _1a62ca19b_ftoa_special_cases(_1a6224546_ExprCoder*,jule::F64&);
inline jule::Str _1a62cadb1_float32(_1a6224546_ExprCoder*,jule::Ptr<_1ac4d0ec2_Const>&);
inline jule::Str _1a62ccac7_float64(_1a6224546_ExprCoder*,jule::Ptr<_1ac4d0ec2_Const>&);
inline jule::Str _1a631742a_constant(_1a6224546_ExprCoder*,jule::Ptr<_1ac4d0ec2_Const>,jule::Bool);
inline jule::Str _1a6318d00_div_by_zero_binary(_1a6224546_ExprCoder*,_1aa07563a_Token&,jule::Ptr<_1ab816825_OperandExprModel>&,jule::Ptr<_1ab816825_OperandExprModel>&);
inline jule::Str _1a6224964_unsafe_binary(_1a6224546_ExprCoder*,jule::Ptr<_1ab8170b7_BinopExprModel>);
inline jule::Str _1a628284b_binary(_1a6224546_ExprCoder*,jule::Ptr<_1ab8170b7_BinopExprModel>);
inline jule::Str _1a6307a58_var(_1a6224546_ExprCoder*,jule::Ptr<_1a588601b_Var>);
inline jule::Str _1a622426b_structure(_1a6224546_ExprCoder*,jule::Ptr<_1ab810b3d_Struct>);
inline jule::Str _1a6307739_structure_ins(_1a6224546_ExprCoder*,jule::Ptr<_1ab814515_StructIns>);
inline jule::Str _1a631a6c5_unary(_1a6224546_ExprCoder*,jule::Ptr<_1ab817716_UnaryExprModel>);
inline jule::Str _1a62b960d_cpp_structure_lit(_1a6224546_ExprCoder*,jule::Ptr<_1ab818508_StructLitExprModel>);
inline jule::Str _1a62b9773_structure_lit(_1a6224546_ExprCoder*,jule::Ptr<_1ab818508_StructLitExprModel>);
inline jule::Str _1a627187e_alloc_structure(_1a6224546_ExprCoder*,jule::Ptr<_1ab818ae1_AllocStructLitExprModel>);
inline jule::Str _1a62719e4_casting(_1a6224546_ExprCoder*,jule::Ptr<_1ab81941b_CastingExprModel>);
inline jule::Str _1a62227b9_args(_1a6224546_ExprCoder*,jule::Slice<jule::Any>);
inline jule::Str _1a622292e_model_for_call(_1a6224546_ExprCoder*,jule::Any);
inline void _1a6281938_push_call_inf(_1a6224546_ExprCoder*,jule::Str&,jule::Ptr<_1ab81a0ed_FnCallExprModel>&);
inline jule::Str _1a6281b25_pure_func_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab81a0ed_FnCallExprModel>&);
inline jule::Str _1a6335415_func_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab81a0ed_FnCallExprModel>);
inline jule::Str _1a633579a_slice(_1a6224546_ExprCoder*,jule::Ptr<_1ab81a74c_SliceExprModel>);
inline jule::Str _1a6335b52_indexing(_1a6224546_ExprCoder*,jule::Ptr<_1ab81ae9a_IndexingExprModel>);
inline jule::Str _1a6336009_unsafe_indexing(_1a6224546_ExprCoder*,jule::Ptr<_1a6320279_UnsafeIndexingExprModel>);
inline jule::Str _1a63363b1_anon_func(_1a6224546_ExprCoder*,jule::Ptr<_1ab81b5e9_AnonFnExprModel>);
inline jule::Str _1a6336768_map(_1a6224546_ExprCoder*,jule::Ptr<_1ab81c496_MapExprModel>);
inline jule::Str _1a6336b20_slicing(_1a6224546_ExprCoder*,jule::Ptr<_1ab81cce3_SlicingExprModel>);
inline jule::Str _1a6336ec7_trait_sub(_1a6224546_ExprCoder*,jule::Ptr<_1ab81d640_TraitSubIdentExprModel>);
inline jule::Str _1a633737e_structure_sub(_1a6224546_ExprCoder*,jule::Ptr<_1ab81e245_StructSubIdentExprModel>);
inline jule::Str _1a6337736_common_ident(_1a6224546_ExprCoder*,jule::Ptr<_1ab820686_CommonIdentExprModel>);
inline jule::Str _1a6337add_common_sub(_1a6224546_ExprCoder*,jule::Ptr<_1ab82106b_CommonSubIdentExprModel>);
inline jule::Str _1a6337e95_array(_1a6224546_ExprCoder*,jule::Ptr<_1ab820136_ArrayExprModel>);
inline jule::Str _1a633834c_func_ins_common(_1a6224546_ExprCoder*,jule::Ptr<_1ab836218_FnIns>);
inline jule::Str _1a6338704_func_ins(_1a6224546_ExprCoder*,jule::Ptr<_1ab836218_FnIns>);
inline jule::Str _1a6338aab_tuple(_1a6224546_ExprCoder*,jule::Ptr<_1ab821599_TupleExprModel>);
inline jule::Str _1a6338e63_new_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>);
inline jule::Str _1a633931a_out_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>);
inline jule::Str _1a63396c2_outln_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>);
inline jule::Str _1a6339a79_panic_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>);
inline jule::Str _1a6339e31_assert_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>);
inline jule::Str _1a633a2d8_error_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>);
inline jule::Str _1a633a690_make_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>);
inline jule::Str _1a633aa47_push_to_slice(_1a6224546_ExprCoder*,jule::Ptr<_1a63207da_PushToSliceExprModel>);
inline jule::Str _1a633adee_append_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>);
inline jule::Str _1a633b2a6_clone_call(_1a6224546_ExprCoder*,jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>);
inline jule::Str _1a633b65d_sizeof(_1a6224546_ExprCoder*,jule::Ptr<_1ab82ab25_SizeofExprModel>);
inline jule::Str _1a633ba15_alignof(_1a6224546_ExprCoder*,jule::Ptr<_1ab82b4c7_AlignofExprModel>);
inline jule::Str _1a633bdbc_rune_lit(_1a6224546_ExprCoder*,jule::Ptr<_1ab82b98e_RuneExprModel>);
inline jule::Str _1a633c274_structure_static(_1a6224546_ExprCoder*,jule::Ptr<_1ab81ea09_StructStaticIdentExprModel>);
inline jule::Str _1a633c62b_integrated_to_str(_1a6224546_ExprCoder*,jule::Ptr<_1ab82c000_IntegratedToStrExprModel>);
inline jule::Str _1a633c9d3_ternary(_1a6224546_ExprCoder*,jule::Ptr<_1ab82c72b_TernaryExprModel>);
inline jule::Str _1a633cd8a_backend_emit(_1a6224546_ExprCoder*,jule::Ptr<_1ab82cd7a_BackendEmitExprModel>);
inline jule::Str _1a633d242_free(_1a6224546_ExprCoder*,jule::Ptr<_1ab82d3ca_FreeExprModel>);
inline jule::Str _1a633d5e9_mut_slicing(_1a6224546_ExprCoder*,jule::Ptr<_1a632106b_MutSlicingExprModel>);
inline jule::Str _1a633d9a1_str_insert_begin(_1a6224546_ExprCoder*,jule::Ptr<_1a6321753_StrInsertBeginExprModel>);
inline jule::Str _1a633dd58_model(_1a6224546_ExprCoder*,jule::Any);
inline jule::Str _1a633e210_expr(_1a6224546_ExprCoder*,jule::Any);
inline jule::Str _1a633e5b7_val(_1a6224546_ExprCoder*,jule::Ptr<_1a58d1451_Value>);
inline jule::Str _1a633e96e_init_expr(_1a6224546_ExprCoder*,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a6224546_ExprCoder {
	jule::Ptr<_1a639d47d_ObjectCoder> _field_oc = jule::Ptr<_1a639d47d_ObjectCoder>();


	_1a6224546_ExprCoder(jule::Ptr<_1a639d47d_ObjectCoder> __param_oc): _field_oc(__param_oc) {}

	

	_1a6224546_ExprCoder(void) = default;

	inline bool operator==(_1a6224546_ExprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a6224546_ExprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a6342aa4_clone_func_decl(jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Str static__1a6342db2_clone_func_def(jule::Ptr<_1ab810b3d_Struct>&);
struct _1a6342510_DeriveCoder {
	

	_1a6342510_DeriveCoder(void) = default;

	inline bool operator==(_1a6342510_DeriveCoder _other) { return true; }

	inline bool operator!=(_1a6342510_DeriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a6344bc7_to_ident(jule::Str);
inline jule::Str static__1a6344ed5_addr(jule::U64);
inline jule::Str static__1a63453c0_to_out(jule::Str,jule::U64);
inline jule::Str static__1a6345887_to_local(jule::I64,jule::I64,jule::Str);
inline jule::Str static__1a6345b95_func(jule::Ptr<_1ab832324_Fn>&);
inline jule::Str static__1a6345ea3_func_ins(jule::Ptr<_1ab836218_FnIns>&);
inline jule::Str static__1a63462b1_trait_decl(jule::Ptr<_1ac44770d_Trait>);
inline jule::Str static__1a63465be_param(jule::Ptr<_1ab830300_Param>&);
inline jule::Str static__1a63468cc_structure(jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Str static__1a6346bda_structure_ins(jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str static__1a6346ee8_field(jule::Ptr<_1ab80cdd2_Field>&);
inline jule::Str static__1a6347306_var(jule::Ptr<_1a588601b_Var>);
inline jule::Str static__1a6347614_iter_begin(jule::U64);
inline jule::Str static__1a6347922_iter_end(jule::U64);
inline jule::Str static__1a6347c30_iter_next(jule::U64);
inline jule::Str static__1a634803d_label(jule::Str);
inline jule::Str static__1a634834b_match_end(jule::U64);
inline jule::Str static__1a6348659_case_begin(jule::U64);
struct _1a63445bc_IdentCoder {
	

	_1a63445bc_IdentCoder(void) = default;

	inline bool operator==(_1a63445bc_IdentCoder _other) { return true; }

	inline bool operator!=(_1a63445bc_IdentCoder _other) { return !this->operator==(_other); }


};
struct _1a639cb42_SerializationInfo {
	jule::Str _field_compiler = jule::Str();
	jule::Str _field_compiler_command = jule::Str();


	_1a639cb42_SerializationInfo(jule::Str __param_compiler, jule::Str __param_compiler_command): _field_compiler(__param_compiler), _field_compiler_command(__param_compiler_command) {}

	

	_1a639cb42_SerializationInfo(void) = default;

	inline bool operator==(_1a639cb42_SerializationInfo _other) {
		return 
			this->_field_compiler == _other._field_compiler &&
			this->_field_compiler_command == _other._field_compiler_command;
	}

	inline bool operator!=(_1a639cb42_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a639d060_TraitHash {
	jule::Ptr<_1ac44770d_Trait> _field_t = jule::Ptr<_1ac44770d_Trait>();
	jule::Ptr<_1ab814515_StructIns> _field_s = jule::Ptr<_1ab814515_StructIns>();
	jule::I64 _field_i = jule::I64();


	_1a639d060_TraitHash(jule::Ptr<_1ac44770d_Trait> __param_t, jule::Ptr<_1ab814515_StructIns> __param_s, jule::I64 __param_i): _field_t(__param_t), _field_s(__param_s), _field_i(__param_i) {}

	

	_1a639d060_TraitHash(void) = default;

	inline bool operator==(_1a639d060_TraitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a639d060_TraitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a63a8653_to_str(_1a63a7ee3_CustomType*);
inline jule::Bool _1a63a8a0a_equals(jule::Ptr<_1a63a7ee3_CustomType>,jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a63a7ee3_CustomType {
	jule::Str _field_kind = jule::Str();


	_1a63a7ee3_CustomType(jule::Str __param_kind): _field_kind(__param_kind) {}

	

	_1a63a7ee3_CustomType(void) = default;

	inline bool operator==(_1a63a7ee3_CustomType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a63a7ee3_CustomType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a63a94de_to_type(jule::Str);
inline jule::Str static__1a63a97ec_prim(jule::Ptr<_1a591970e_Prim>);
inline jule::Str static__1a63a9b0a_tuple(jule::Ptr<_1a59203b3_Tuple>);
inline jule::Str static__1a63a9e18_as_sptr(jule::Str);
inline jule::Str static__1a63aa226_as_ptr(jule::Str);
inline jule::Str static__1a63aa534_sptr(jule::Ptr<_1a591d768_Sptr>);
inline jule::Str static__1a63aa842_ptr(jule::Ptr<_1a59230db_Ptr>);
inline jule::Str static__1a63aab50_enum_decl(jule::Ptr<_1ac44a337_Enum>);
inline jule::Str static__1a63aae5d_as_slice(jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Str static__1a63ab26b_slice(jule::Ptr<_1a591e549_Slc>);
inline jule::Str static__1a63ab579_map(jule::Ptr<_1a592132b_Map>);
inline jule::Str static__1a63ab887_trait_ident(jule::Str);
inline jule::Str static__1a63abb95_trait_decl(jule::Ptr<_1ac44770d_Trait>);
inline jule::Str static__1a63abea3_structure(jule::Ptr<_1ab810b3d_Struct>);
inline jule::Str static__1a63ac2b1_structure_ins(jule::Ptr<_1ab814515_StructIns>);
inline jule::Str static__1a63ac5be_array(jule::Ptr<_1a592230a_Arr>);
inline jule::Str static__1a63ac8cc_param(jule::Ptr<_1ab830300_Param>&);
inline jule::Str static__1a63acbda_param_ins(jule::Ptr<_1ab834db5_ParamIns>&);
inline jule::Str static__1a63acee8_func_result(jule::Ptr<_1ab832324_Fn>&);
inline jule::Str static__1a63ad306_func_ins_result(jule::Ptr<_1ab836218_FnIns>&);
inline jule::Str static__1a63ad614_anon_func(jule::Ptr<_1ab836218_FnIns>);
inline jule::Str static__1a63ad922_func(jule::Ptr<_1ab836218_FnIns>);
inline jule::Str static__1a63adc30_kind(jule::Ptr<_1a5913e9a_TypeKind>);
struct _1a63a8c5d_TypeCoder {
	

	_1a63a8c5d_TypeCoder(void) = default;

	inline bool operator==(_1a63a8c5d_TypeCoder _other) { return true; }

	inline bool operator!=(_1a63a8c5d_TypeCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a8ced34d_name(_1a63c12d6_Flag_0*);
inline jule::Str _1a8ced4b3_what(_1a63c12d6_Flag_0*);
inline void _1a8ced628_reset(_1a63c12d6_Flag_0*);
inline jule::I32 _1a8ced78d_short(_1a63c12d6_Flag_0*);
struct _1a63c12d6_Flag_0 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::I64 _field__default = jule::I64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::I64> _field__data = jule::Ptr<jule::I64>();


	_1a63c12d6_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::I64 __param__default, jule::Str __param__what, jule::Ptr<jule::I64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a63c12d6_Flag_0(void) = default;

	inline bool operator==(_1a63c12d6_Flag_0 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a63c12d6_Flag_0 _other) { return !this->operator==(_other); }


};inline jule::Str _1a8d01681_name(_1a63c12d6_Flag_1*);
inline jule::Str _1a8ced914_what(_1a63c12d6_Flag_1*);
inline void _1a8d00097_reset(_1a63c12d6_Flag_1*);
inline jule::I32 _1a8d013d9_short(_1a63c12d6_Flag_1*);
struct _1a63c12d6_Flag_1 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::U64 _field__default = jule::U64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::U64> _field__data = jule::Ptr<jule::U64>();


	_1a63c12d6_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::U64 __param__default, jule::Str __param__what, jule::Ptr<jule::U64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a63c12d6_Flag_1(void) = default;

	inline bool operator==(_1a63c12d6_Flag_1 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a63c12d6_Flag_1 _other) { return !this->operator==(_other); }


};inline jule::Str _1a8d04b90_name(_1a63c12d6_Flag_2*);
inline jule::Str _1a8d01e23_what(_1a63c12d6_Flag_2*);
inline void _1a8d035a6_reset(_1a63c12d6_Flag_2*);
inline jule::I32 _1a8d048e8_short(_1a63c12d6_Flag_2*);
struct _1a63c12d6_Flag_2 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::F64 _field__default = jule::F64();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::F64> _field__data = jule::Ptr<jule::F64>();


	_1a63c12d6_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a63c12d6_Flag_2(void) = default;

	inline bool operator==(_1a63c12d6_Flag_2 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a63c12d6_Flag_2 _other) { return !this->operator==(_other); }


};inline jule::Str _1a8d05498_name(_1a63c12d6_Flag_3*);
inline jule::Str _1a8d081e3_what(_1a63c12d6_Flag_3*);
inline void _1a8d06b09_reset(_1a63c12d6_Flag_3*);
inline jule::I32 _1a8d07e4b_short(_1a63c12d6_Flag_3*);
struct _1a63c12d6_Flag_3 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Bool _field__default = jule::Bool();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Bool> _field__data = jule::Ptr<jule::Bool>();


	_1a63c12d6_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a63c12d6_Flag_3(void) = default;

	inline bool operator==(_1a63c12d6_Flag_3 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a63c12d6_Flag_3 _other) { return !this->operator==(_other); }


};inline jule::Str _1a8d0b702_name(_1a63c12d6_Flag_4*);
inline jule::Str _1a8d08985_what(_1a63c12d6_Flag_4*);
inline void _1a8d0a118_reset(_1a63c12d6_Flag_4*);
inline jule::I32 _1a8d0b45a_short(_1a63c12d6_Flag_4*);
struct _1a63c12d6_Flag_4 {
	jule::Str _field__name = jule::Str();
	jule::I32 _field__short = jule::I32();
	jule::Str _field__default = jule::Str();
	jule::Str _field__what = jule::Str();
	jule::Ptr<jule::Str> _field__data = jule::Ptr<jule::Str>();


	_1a63c12d6_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_1a63c12d6_Flag_4(void) = default;

	inline bool operator==(_1a63c12d6_Flag_4 _other) {
		return 
			this->_field__name == _other._field__name &&
			this->_field__short == _other._field__short &&
			this->_field__default == _other._field__default &&
			this->_field__what == _other._field__what &&
			this->_field__data == _other._field__data;
	}

	inline bool operator!=(_1a63c12d6_Flag_4 _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a63c28c0_FlagSet> static__1a63c2ddc_new(void);
inline jule::Trait<_1a63c0dda_CommonFlag> _1a63c344d_find_flag(_1a63c28c0_FlagSet*,jule::Str);
inline jule::Trait<_1a63c0dda_CommonFlag> _1a63c3805_find_flag_short(_1a63c28c0_FlagSet*,jule::I32);
inline jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>> _1a63c3ad0_flags(_1a63c28c0_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a63c3e87_parse(_1a63c28c0_FlagSet*,jule::Slice<jule::Str>);
inline void _1a63c41c9_reset(_1a63c28c0_FlagSet*);
inline jule::Ptr<_1a63c12d6_Flag_4> _1a63c473a_add_flag_common_0(_1a63c28c0_FlagSet*,jule::Str,jule::I32,jule::Str);
inline jule::Ptr<_1a63c12d6_Flag_3> _1a63c473a_add_flag_common_1(_1a63c28c0_FlagSet*,jule::Str,jule::I32,jule::Str);
inline void _1a63c542d_add_var_0(_1a63c28c0_FlagSet*,jule::Ptr<jule::Str>,jule::Str,jule::I32,jule::Str);
inline void _1a63c542d_add_var_1(_1a63c28c0_FlagSet*,jule::Ptr<jule::Bool>,jule::Str,jule::I32,jule::Str);
struct _1a63c28c0_FlagSet {
	jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>> _field__flags = jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>>();


	_1a63c28c0_FlagSet(jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>> __param__flags): _field__flags(__param__flags) {}

	

	_1a63c28c0_FlagSet(void) = default;

	inline bool operator==(_1a63c28c0_FlagSet _other) {
		return 
			this->_field__flags == _other._field__flags;
	}

	inline bool operator!=(_1a63c28c0_FlagSet _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5909ac_is_nil(_1aa08e08d_LitExpr*);
struct _1aa08e08d_LitExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_value = jule::Str();


	_1aa08e08d_LitExpr(_1aa07563a_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_1aa08e08d_LitExpr(void) = default;

	inline bool operator==(_1aa08e08d_LitExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1aa08e08d_LitExpr _other) { return !this->operator==(_other); }


};
struct _1aa08e4ab_UnsafeExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa08e4ab_UnsafeExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aa08e4ab_UnsafeExpr(void) = default;

	inline bool operator==(_1aa08e4ab_UnsafeExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa08e4ab_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1aa08e8c9_CoExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa08e8c9_CoExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aa08e8c9_CoExpr(void) = default;

	inline bool operator==(_1aa08e8c9_CoExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa08e8c9_CoExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a9ec9836_is_self(_1aa08ece7_IdentExpr*);
struct _1aa08ece7_IdentExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();


	_1aa08ece7_IdentExpr(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_1aa08ece7_IdentExpr(void) = default;

	inline bool operator==(_1aa08ece7_IdentExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked;
	}

	inline bool operator!=(_1aa08ece7_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1aa090215_UnaryExpr {
	_1aa07563a_Token _field_op = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa090215_UnaryExpr(_1aa07563a_Token __param_op, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_1aa090215_UnaryExpr(void) = default;

	inline bool operator==(_1aa090215_UnaryExpr _other) {
		return 
			this->_field_op == _other._field_op &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa090215_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1aa60c82b_AssignInfo {
	jule::Slice<_1aa07563a_Token> _field_l = jule::Slice<_1aa07563a_Token>();
	jule::Slice<_1aa07563a_Token> _field_r = jule::Slice<_1aa07563a_Token>();
	_1aa07563a_Token _field_setter = _1aa07563a_Token();
	jule::Bool _field_ok = jule::Bool();


	_1aa60c82b_AssignInfo(jule::Slice<_1aa07563a_Token> __param_l, jule::Slice<_1aa07563a_Token> __param_r, _1aa07563a_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_1aa60c82b_AssignInfo(void) = default;

	inline bool operator==(_1aa60c82b_AssignInfo _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_setter == _other._field_setter &&
			this->_field_ok == _other._field_ok;
	}

	inline bool operator!=(_1aa60c82b_AssignInfo _other) { return !this->operator==(_other); }


};
struct _1aa090633_VariadicExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa090633_VariadicExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aa090633_VariadicExpr(void) = default;

	inline bool operator==(_1aa090633_VariadicExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa090633_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1dd583043_Directive {
	_1aa07563a_Token _field_tag = _1aa07563a_Token();
	jule::Slice<_1aa07563a_Token> _field_args = jule::Slice<_1aa07563a_Token>();


	_1dd583043_Directive(_1aa07563a_Token __param_tag, jule::Slice<_1aa07563a_Token> __param_args): _field_tag(__param_tag), _field_args(__param_args) {}

	

	_1dd583043_Directive(void) = default;

	inline bool operator==(_1dd583043_Directive _other) {
		return 
			this->_field_tag == _other._field_tag &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1dd583043_Directive _other) { return !this->operator==(_other); }


};
struct _1aa090e6e_NsSelectionExpr {
	jule::Slice<_1aa07563a_Token> _field_ns = jule::Slice<_1aa07563a_Token>();
	_1aa07563a_Token _field_ident = _1aa07563a_Token();


	_1aa090e6e_NsSelectionExpr(jule::Slice<_1aa07563a_Token> __param_ns, _1aa07563a_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_1aa090e6e_NsSelectionExpr(void) = default;

	inline bool operator==(_1aa090e6e_NsSelectionExpr _other) {
		return 
			this->_field_ns == _other._field_ns &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa090e6e_NsSelectionExpr _other) { return !this->operator==(_other); }


};
struct _1aa09138c_SubIdentExpr {
	jule::Bool _field_is_self = jule::Bool();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	_1aa07563a_Token _field_ident = _1aa07563a_Token();


	_1aa09138c_SubIdentExpr(jule::Bool __param_is_self, jule::Ptr<_1aa08d334_Expr> __param_expr, _1aa07563a_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_1aa09138c_SubIdentExpr(void) = default;

	inline bool operator==(_1aa09138c_SubIdentExpr _other) {
		return 
			this->_field_is_self == _other._field_is_self &&
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa09138c_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1aa0917aa_BinopExpr {
	jule::Ptr<_1aa08d334_Expr> _field_left = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_right = jule::Ptr<_1aa08d334_Expr>();
	_1aa07563a_Token _field_op = _1aa07563a_Token();


	_1aa0917aa_BinopExpr(jule::Ptr<_1aa08d334_Expr> __param_left, jule::Ptr<_1aa08d334_Expr> __param_right, _1aa07563a_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1aa0917aa_BinopExpr(void) = default;

	inline bool operator==(_1aa0917aa_BinopExpr _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1aa0917aa_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5c57d3_unhandled(_1aa091bc8_FnCallExpr*);
inline jule::Bool _1dd5976ea_ignored(_1aa091bc8_FnCallExpr*);
struct _1aa091bc8_FnCallExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_args = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_exception = jule::Ptr<_1aa09632b_ScopeTree>();


	_1aa091bc8_FnCallExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_args, jule::Ptr<_1aa09632b_ScopeTree> __param_exception): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_exception(__param_exception) {}

	

	_1aa091bc8_FnCallExpr(void) = default;

	inline bool operator==(_1aa091bc8_FnCallExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_generics == _other._field_generics &&
			this->_field_args == _other._field_args &&
			this->_field_exception == _other._field_exception;
	}

	inline bool operator!=(_1aa091bc8_FnCallExpr _other) { return !this->operator==(_other); }


};
struct _1ac5636a3_Assign {
	jule::Ptr<_1ab816825_OperandExprModel> _field_l = jule::Ptr<_1ab816825_OperandExprModel>();
	jule::Ptr<_1ab816825_OperandExprModel> _field_r = jule::Ptr<_1ab816825_OperandExprModel>();
	_1aa07563a_Token _field_op = _1aa07563a_Token();


	_1ac5636a3_Assign(jule::Ptr<_1ab816825_OperandExprModel> __param_l, jule::Ptr<_1ab816825_OperandExprModel> __param_r, _1aa07563a_Token __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1ac5636a3_Assign(void) = default;

	inline bool operator==(_1ac5636a3_Assign _other) {
		return 
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ac5636a3_Assign _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd598be6_is_targeted(_1aa0920e6_FieldExprPair*);
struct _1aa0920e6_FieldExprPair {
	_1aa07563a_Token _field_field = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa0920e6_FieldExprPair(_1aa07563a_Token __param_field, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_1aa0920e6_FieldExprPair(void) = default;

	inline bool operator==(_1aa0920e6_FieldExprPair _other) {
		return 
			this->_field_field == _other._field_field &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa0920e6_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1dd583461_TypeDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_kind = jule::Any();


	_1dd583461_TypeDecl(_1aa07563a_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_1dd583461_TypeDecl(void) = default;

	inline bool operator==(_1dd583461_TypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1dd583461_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5a92cd_is_empty(_1aa092932_BraceLit*);
struct _1aa092932_BraceLit {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();


	_1aa092932_BraceLit(_1aa07563a_Token __param_token, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1aa092932_BraceLit(void) = default;

	inline bool operator==(_1aa092932_BraceLit _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1aa092932_BraceLit _other) { return !this->operator==(_other); }


};
struct _1aa092d50_KeyValPair {
	jule::Ptr<_1aa08d334_Expr> _field_key = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_val = jule::Ptr<_1aa08d334_Expr>();
	_1aa07563a_Token _field_colon = _1aa07563a_Token();


	_1aa092d50_KeyValPair(jule::Ptr<_1aa08d334_Expr> __param_key, jule::Ptr<_1aa08d334_Expr> __param_val, _1aa07563a_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_1aa092d50_KeyValPair(void) = default;

	inline bool operator==(_1aa092d50_KeyValPair _other) {
		return 
			this->_field_key == _other._field_key &&
			this->_field_val == _other._field_val &&
			this->_field_colon == _other._field_colon;
	}

	inline bool operator!=(_1aa092d50_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab8137bc_FieldIns> _1ab80d300_instance(jule::Ptr<_1ab80cdd2_Field>);
struct _1ab80cdd2_Field {
	jule::Ptr<_1ab810b3d_Struct> _field_owner = jule::Ptr<_1ab810b3d_Struct>();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Ptr<_1aa08d334_Expr> _field_default = jule::Ptr<_1aa08d334_Expr>();


	_1ab80cdd2_Field(jule::Ptr<_1ab810b3d_Struct> __param_owner, _1aa07563a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Ptr<_1aa08d334_Expr> __param_default): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1ab80cdd2_Field(void) = default;

	inline bool operator==(_1ab80cdd2_Field _other) {
		return 
			this->_field_owner == _other._field_owner &&
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1ab80cdd2_Field _other) { return !this->operator==(_other); }


};
struct _1ac565397_ScopeLabel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1ac562949_Label> _field_label = jule::Ptr<_1ac562949_Label>();
	jule::I64 _field_pos = jule::I64();
	jule::Ptr<_1ac565bd3_ScopeChecker> _field_scope = jule::Ptr<_1ac565bd3_ScopeChecker>();
	jule::Bool _field_used = jule::Bool();


	_1ac565397_ScopeLabel(_1aa07563a_Token __param_token, jule::Ptr<_1ac562949_Label> __param_label, jule::I64 __param_pos, jule::Ptr<_1ac565bd3_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_1ac565397_ScopeLabel(void) = default;

	inline bool operator==(_1ac565397_ScopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ac565397_ScopeLabel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5aa7c9_is_empty(_1aa09326d_SliceExpr*);
struct _1aa09326d_SliceExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();


	_1aa09326d_SliceExpr(_1aa07563a_Token __param_token, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_1aa09326d_SliceExpr(void) = default;

	inline bool operator==(_1aa09326d_SliceExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1aa09326d_SliceExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab814515_StructIns> _1ab8112d1_instance(jule::Ptr<_1ab810b3d_Struct>);
inline jule::Ptr<_1ab814515_StructIns> _1ab811688_append_instance(_1ab810b3d_Struct*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Ptr<_1ab832324_Fn> _1ab811b1c_find_method(_1ab810b3d_Struct*,jule::Str,jule::Bool);
inline jule::Ptr<_1a588601b_Var> _1ab811ec4_find_static(_1ab810b3d_Struct*,jule::Str);
inline jule::Ptr<_1ab80cdd2_Field> _1ab81237b_find_field(_1ab810b3d_Struct*,jule::Str);
inline jule::Bool _1ab812733_is_implements(_1ab810b3d_Struct*,jule::Ptr<_1ac44770d_Trait>);
inline jule::Bool _1ab812ada_is_derives(_1ab810b3d_Struct*,jule::Str);
inline jule::Bool _1ab812e92_is_uses(_1ab810b3d_Struct*,jule::Ptr<_1ab810b3d_Struct>);
inline jule::Bool _1ab81326c_has_ref_accessible(_1ab810b3d_Struct*);
struct _1ab810b3d_Struct {
	jule::Ptr<_1a5864747_Sema> _field_sema = jule::Ptr<_1a5864747_Sema>();
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _field_depends = jule::Slice<jule::Ptr<_1ab810b3d_Struct>>();
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _field_uses = jule::Slice<jule::Ptr<_1ab810b3d_Struct>>();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1ab80cdd2_Field>> _field_fields = jule::Slice<jule::Ptr<_1ab80cdd2_Field>>();
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ab832324_Fn>>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_statics = jule::Slice<jule::Ptr<_1a588601b_Var>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>();
	jule::Slice<jule::Ptr<_1ac44770d_Trait>> _field_implements = jule::Slice<jule::Ptr<_1ac44770d_Trait>>();
	jule::Slice<jule::Ptr<_1ab814515_StructIns>> _field_instances = jule::Slice<jule::Ptr<_1ab814515_StructIns>>();


	_1ab810b3d_Struct(jule::Ptr<_1a5864747_Sema> __param_sema, jule::Slice<jule::Ptr<_1ab810b3d_Struct>> __param_depends, jule::Slice<jule::Ptr<_1ab810b3d_Struct>> __param_uses, _1aa07563a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1ab80cdd2_Field>> __param_fields, jule::Slice<jule::Ptr<_1ab832324_Fn>> __param_methods, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_1ac44770d_Trait>> __param_implements, jule::Slice<jule::Ptr<_1ab814515_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {}

	

	_1ab810b3d_Struct(void) = default;

	inline bool operator==(_1ab810b3d_Struct _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_depends == _other._field_depends &&
			this->_field_uses == _other._field_uses &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_statics == _other._field_statics &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics &&
			this->_field_implements == _other._field_implements &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1ab810b3d_Struct _other) { return !this->operator==(_other); }


};
struct _1aa093b0e_IndexingExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_index = jule::Ptr<_1aa08d334_Expr>();


	_1aa093b0e_IndexingExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Ptr<_1aa08d334_Expr> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1aa093b0e_IndexingExpr(void) = default;

	inline bool operator==(_1aa093b0e_IndexingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1aa093b0e_IndexingExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac5815e4_find_package(_1ac580d41_ImportInfo*,jule::Str);
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac58199b_select_package(_1ac580d41_ImportInfo*,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
inline jule::Ptr<_1a588601b_Var> _1ac581e30_find_var(_1ac580d41_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1ac5823b4_find_type_alias(_1ac580d41_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1ac582848_find_struct(_1ac580d41_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1ac582ccc_find_fn(_1ac580d41_ImportInfo*,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1ac583184_find_trait(_1ac580d41_ImportInfo*,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1ac58353b_find_enum(_1ac580d41_ImportInfo*,jule::Str);
inline jule::Bool _1ac583a03_is_lookupable(_1ac580d41_ImportInfo*,jule::Str);
inline jule::Bool _1ac583daa_exist_ident(_1ac580d41_ImportInfo*,jule::Str);
inline jule::Bool _1ac5841c9_is_accessible_via_selection(_1ac580d41_ImportInfo*);
struct _1ac580d41_ImportInfo {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_path = jule::Str();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_ident = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_duplicate = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();
	jule::Bool _field_import_all = jule::Bool();
	jule::Slice<_1aa07563a_Token> _field_selected = jule::Slice<_1aa07563a_Token>();
	jule::Ptr<_1ac58451a_Package> _field_package = jule::Ptr<_1ac58451a_Package>();
	jule::I64 _field_mod_id = jule::I64();


	_1ac580d41_ImportInfo(_1aa07563a_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_1aa07563a_Token> __param_selected, jule::Ptr<_1ac58451a_Package> __param_package, jule::I64 __param_mod_id): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package), _field_mod_id(__param_mod_id) {}

	

	_1ac580d41_ImportInfo(void) = default;

	inline bool operator==(_1ac580d41_ImportInfo _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_path == _other._field_path &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_ident == _other._field_ident &&
			this->_field_alias == _other._field_alias &&
			this->_field_duplicate == _other._field_duplicate &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std &&
			this->_field_import_all == _other._field_import_all &&
			this->_field_selected == _other._field_selected &&
			this->_field_package == _other._field_package &&
			this->_field_mod_id == _other._field_mod_id;
	}

	inline bool operator!=(_1ac580d41_ImportInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _1ab814b31_to_str(_1ab814515_StructIns*);
inline jule::Bool _1ab814ed8_equals(jule::Ptr<_1ab814515_StructIns>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1ab8154a0_same(_1ab814515_StructIns*,jule::Ptr<_1ab814515_StructIns>);
inline jule::Ptr<_1ab832324_Fn> _1ab815934_find_method(_1ab814515_StructIns*,jule::Str,jule::Bool);
inline jule::Ptr<_1ab8137bc_FieldIns> _1ab815cdb_find_field(_1ab814515_StructIns*,jule::Str);
struct _1ab814515_StructIns {
	jule::Bool _field_checked = jule::Bool();
	jule::Ptr<_1ab810b3d_Struct> _field_decl = jule::Ptr<_1ab810b3d_Struct>();
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _field_generics = jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>();
	jule::Slice<jule::Ptr<_1ab8137bc_FieldIns>> _field_fields = jule::Slice<jule::Ptr<_1ab8137bc_FieldIns>>();
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ab832324_Fn>>();
	jule::Bool _field_mutable = jule::Bool();
	jule::Ptr<_1ab839d43_ReferenceStack> _field_references = jule::Ptr<_1ab839d43_ReferenceStack>();
	_1ab80e8b7_Operators _field_operators = _1ab80e8b7_Operators();


	_1ab814515_StructIns(jule::Bool __param_checked, jule::Ptr<_1ab810b3d_Struct> __param_decl, jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_1ab8137bc_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_1ab832324_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_1ab839d43_ReferenceStack> __param_references, _1ab80e8b7_Operators __param_operators): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references), _field_operators(__param_operators) {}

	

	_1ab814515_StructIns(void) = default;

	inline bool operator==(_1ab814515_StructIns _other) {
		return 
			this->_field_checked == _other._field_checked &&
			this->_field_decl == _other._field_decl &&
			this->_field_generics == _other._field_generics &&
			this->_field_fields == _other._field_fields &&
			this->_field_methods == _other._field_methods &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_references == _other._field_references &&
			this->_field_operators == _other._field_operators;
	}

	inline bool operator!=(_1ab814515_StructIns _other) { return !this->operator==(_other); }


};
struct _1aa09402c_SlicingExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_start = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_to = jule::Ptr<_1aa08d334_Expr>();


	_1aa09402c_SlicingExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Ptr<_1aa08d334_Expr> __param_start, jule::Ptr<_1aa08d334_Expr> __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_1aa09402c_SlicingExpr(void) = default;

	inline bool operator==(_1aa09402c_SlicingExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_start == _other._field_start &&
			this->_field_to == _other._field_to;
	}

	inline bool operator!=(_1aa09402c_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ab8170b7_BinopExprModel {
	jule::Ptr<_1ab816825_OperandExprModel> _field_left = jule::Ptr<_1ab816825_OperandExprModel>();
	jule::Ptr<_1ab816825_OperandExprModel> _field_right = jule::Ptr<_1ab816825_OperandExprModel>();
	_1aa07563a_Token _field_op = _1aa07563a_Token();


	_1ab8170b7_BinopExprModel(jule::Ptr<_1ab816825_OperandExprModel> __param_left, jule::Ptr<_1ab816825_OperandExprModel> __param_right, _1aa07563a_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_1ab8170b7_BinopExprModel(void) = default;

	inline bool operator==(_1ab8170b7_BinopExprModel _other) {
		return 
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ab8170b7_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1ab817716_UnaryExprModel {
	jule::Ptr<_1a58cee44_Data> _field_expr = jule::Ptr<_1a58cee44_Data>();
	_1aa07563a_Token _field_op = _1aa07563a_Token();


	_1ab817716_UnaryExprModel(jule::Ptr<_1a58cee44_Data> __param_expr, _1aa07563a_Token __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_1ab817716_UnaryExprModel(void) = default;

	inline bool operator==(_1ab817716_UnaryExprModel _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1ab817716_UnaryExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5886637_is_initialized(_1a588601b_Var*);
inline jule::Bool _1a5886912_is_type_inferred(_1a588601b_Var*);
struct _1a588601b_Var {
	jule::Ptr<_1ac56022c_Scope> _field_scope = jule::Ptr<_1ac56022c_Scope>();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Ptr<_1a58d1451_Value> _field_value = jule::Ptr<_1a58d1451_Value>();
	jule::Ptr<_1ab839d43_ReferenceStack> _field_references = jule::Ptr<_1ab839d43_ReferenceStack>();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Ptr<_1a5884a0e_IterRelation> _field_iter_relation = jule::Ptr<_1a5884a0e_IterRelation>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_depends = jule::Slice<jule::Ptr<_1a588601b_Var>>();


	_1a588601b_Var(jule::Ptr<_1ac56022c_Scope> __param_scope, _1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Ptr<_1a58d1451_Value> __param_value, jule::Ptr<_1ab839d43_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Ptr<_1a5884a0e_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_1a588601b_Var(void) = default;

	inline bool operator==(_1a588601b_Var _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_constant == _other._field_constant &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_public == _other._field_public &&
			this->_field_used == _other._field_used &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_value == _other._field_value &&
			this->_field_references == _other._field_references &&
			this->_field_directives == _other._field_directives &&
			this->_field_iter_relation == _other._field_iter_relation &&
			this->_field_depends == _other._field_depends;
	}

	inline bool operator!=(_1a588601b_Var _other) { return !this->operator==(_other); }


};
struct _1aa09444a_TernaryExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_condition = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_true_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa08d334_Expr> _field_false_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa09444a_TernaryExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_condition, jule::Ptr<_1aa08d334_Expr> __param_true_expr, jule::Ptr<_1aa08d334_Expr> __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_1aa09444a_TernaryExpr(void) = default;

	inline bool operator==(_1aa09444a_TernaryExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_condition == _other._field_condition &&
			this->_field_true_expr == _other._field_true_expr &&
			this->_field_false_expr == _other._field_false_expr;
	}

	inline bool operator!=(_1aa09444a_TernaryExpr _other) { return !this->operator==(_other); }


};
inline void _1a58b64be_push_err(_1a58b5c2c_TypeCompatibilityChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a58b6799_check_trait(_1a58b5c2c_TypeCompatibilityChecker*);
inline jule::Bool _1a58b6a74_check_ptr(_1a58b5c2c_TypeCompatibilityChecker*);
inline jule::Bool _1a58b6d4e_check_prim(_1a58b5c2c_TypeCompatibilityChecker*);
inline jule::Bool _1a58b7129_check(_1a58b5c2c_TypeCompatibilityChecker*);
struct _1a58b5c2c_TypeCompatibilityChecker {
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_dest = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_src = jule::Ptr<_1a5913e9a_TypeKind>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();


	_1a58b5c2c_TypeCompatibilityChecker(jule::Ptr<_1a5864747_Sema> __param_s, jule::Ptr<_1a5913e9a_TypeKind> __param_dest, jule::Ptr<_1a5913e9a_TypeKind> __param_src, _1aa07563a_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token) {}

	

	_1a58b5c2c_TypeCompatibilityChecker(void) = default;

	inline bool operator==(_1a58b5c2c_TypeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a58b5c2c_TypeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a58b7eb5_push_err(_1a58b7778_AssignTypeChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1a58b8290_check_validity(_1a58b7778_AssignTypeChecker*);
inline jule::Bool _1a58b856a_check_const(_1a58b7778_AssignTypeChecker*);
inline jule::Bool _1a58b8845_is_prim(_1a58b7778_AssignTypeChecker*);
inline jule::Bool _1a58b8b20_check_compatibility(_1a58b7778_AssignTypeChecker*);
inline jule::Bool _1a58b8dea_check(_1a58b7778_AssignTypeChecker*);
struct _1a58b7778_AssignTypeChecker {
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_dest = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a58cee44_Data> _field_d = jule::Ptr<_1a58cee44_Data>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();


	_1a58b7778_AssignTypeChecker(jule::Ptr<_1a5864747_Sema> __param_s, jule::Ptr<_1a5913e9a_TypeKind> __param_dest, jule::Ptr<_1a58cee44_Data> __param_d, _1aa07563a_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_1a58b7778_AssignTypeChecker(void) = default;

	inline bool operator==(_1a58b7778_AssignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_error_token == _other._field_error_token;
	}

	inline bool operator!=(_1a58b7778_AssignTypeChecker _other) { return !this->operator==(_other); }


};
inline void _1a58ba0a5_push_generic(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&,jule::I64);
inline jule::Bool _1a58ba429_annotate_prim(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58ba7d1_annotate_slc(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bac65_check_map_key(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bb11c_annotate_map(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bb4c4_annotate_fn(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bb87b_annotate_ptr(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bbc33_annotate_sptr(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bc0da_annotate_any(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bc492_annotate_kind(_1a58b9747_DynamicTypeAnnotation*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a58bc76c_annotate(_1a58b9747_DynamicTypeAnnotation*);
struct _1a58b9747_DynamicTypeAnnotation {
	jule::Ptr<_1a58d2397_Eval> _field_e = jule::Ptr<_1a58d2397_Eval>();
	jule::Ptr<_1ab836218_FnIns> _field_f = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab834db5_ParamIns> _field_p = jule::Ptr<_1ab834db5_ParamIns>();
	jule::Ptr<_1a58cee44_Data> _field_a = jule::Ptr<_1a58cee44_Data>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();
	jule::Ptr<_1a5913e9a_TypeKind>* _field_k = nullptr;


	_1a58b9747_DynamicTypeAnnotation(jule::Ptr<_1a58d2397_Eval> __param_e, jule::Ptr<_1ab836218_FnIns> __param_f, jule::Ptr<_1ab834db5_ParamIns> __param_p, jule::Ptr<_1a58cee44_Data> __param_a, _1aa07563a_Token __param_error_token, jule::Ptr<_1a5913e9a_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_1a58b9747_DynamicTypeAnnotation(void) = default;

	inline bool operator==(_1a58b9747_DynamicTypeAnnotation _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_f == _other._field_f &&
			this->_field_p == _other._field_p &&
			this->_field_a == _other._field_a &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_k == _other._field_k;
	}

	inline bool operator!=(_1a58b9747_DynamicTypeAnnotation _other) { return !this->operator==(_other); }


};
inline void _1a58bd927_push_err_token(_1a58bd0b9_FnCallArgChecker*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1a58bdd23_push_err(_1a58bd0b9_FnCallArgChecker*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ab834db5_ParamIns>> _1a58be0ed_get_params(_1a58bd0b9_FnCallArgChecker*);
inline jule::Bool _1a58be4a5_check_counts(_1a58bd0b9_FnCallArgChecker*,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>&);
inline jule::Bool _1a58bea16_check_arg(_1a58bd0b9_FnCallArgChecker*,jule::Ptr<_1ab834db5_ParamIns>&,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token&);
inline jule::Bool _1a58bee9a_push(_1a58bd0b9_FnCallArgChecker*,jule::Ptr<_1ab834db5_ParamIns>&,jule::Ptr<_1aa08d334_Expr>);
inline jule::Bool _1a58c042e_push_variadic(_1a58bd0b9_FnCallArgChecker*,jule::Ptr<_1ab834db5_ParamIns>&,jule::I64);
inline jule::Bool _1a58c07d6_check_args(_1a58bd0b9_FnCallArgChecker*,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>&);
inline jule::Bool _1a58c0b05_check_dynamic_type_annotation(_1a58bd0b9_FnCallArgChecker*);
inline jule::Bool _1a58c0dbe_check(_1a58bd0b9_FnCallArgChecker*);
struct _1a58bd0b9_FnCallArgChecker {
	jule::Ptr<_1a58d2397_Eval> _field_e = jule::Ptr<_1a58d2397_Eval>();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_args = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();
	jule::Ptr<_1ab836218_FnIns> _field_f = jule::Ptr<_1ab836218_FnIns>();
	jule::Bool _field_dynamic_annotation = jule::Bool();
	jule::Slice<jule::Any> _field_arg_models = jule::Slice<jule::Any>();


	_1a58bd0b9_FnCallArgChecker(jule::Ptr<_1a58d2397_Eval> __param_e, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_args, _1aa07563a_Token __param_error_token, jule::Ptr<_1ab836218_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_1a58bd0b9_FnCallArgChecker(void) = default;

	inline bool operator==(_1a58bd0b9_FnCallArgChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_args == _other._field_args &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_f == _other._field_f &&
			this->_field_dynamic_annotation == _other._field_dynamic_annotation &&
			this->_field_arg_models == _other._field_arg_models;
	}

	inline bool operator!=(_1a58bd0b9_FnCallArgChecker _other) { return !this->operator==(_other); }


};
inline void _1a58c1d37_push_err(_1a58c151d_StructLitChecker*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1a58c2233_push_suggestion(_1a58c151d_StructLitChecker*,jule::Str,jule::Slice<jule::Any>);
inline void _1a58c270b_push_match(_1a58c151d_StructLitChecker*,jule::Ptr<_1ab8137bc_FieldIns>&,jule::Ptr<_1a58cee44_Data>&,_1aa07563a_Token&);
inline void _1a58c2b07_check_pair(_1a58c151d_StructLitChecker*,jule::Ptr<_1aa0920e6_FieldExprPair>&,jule::Slice<jule::Ptr<_1aa08d334_Expr>>&);
inline jule::Bool _1a58c2eae_ready_exprs(_1a58c151d_StructLitChecker*,jule::Slice<jule::Ptr<_1aa08d334_Expr>>&);
inline void _1a58c32cd_check(_1a58c151d_StructLitChecker*,jule::Slice<jule::Ptr<_1aa08d334_Expr>>&);
struct _1a58c151d_StructLitChecker {
	jule::Ptr<_1a58d2397_Eval> _field_e = jule::Ptr<_1a58d2397_Eval>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();
	jule::Ptr<_1ab814515_StructIns> _field_s = jule::Ptr<_1ab814515_StructIns>();
	jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>> _field_args = jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>>();


	_1a58c151d_StructLitChecker(jule::Ptr<_1a58d2397_Eval> __param_e, _1aa07563a_Token __param_error_token, jule::Ptr<_1ab814515_StructIns> __param_s, jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_1a58c151d_StructLitChecker(void) = default;

	inline bool operator==(_1a58c151d_StructLitChecker _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_s == _other._field_s &&
			this->_field_args == _other._field_args;
	}

	inline bool operator!=(_1a58c151d_StructLitChecker _other) { return !this->operator==(_other); }


};
struct _1aa094868_GenericDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();


	_1aa094868_GenericDecl(_1aa07563a_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1aa094868_GenericDecl(void) = default;

	inline bool operator==(_1aa094868_GenericDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa094868_GenericDecl _other) { return !this->operator==(_other); }


};
inline void _1a58c6b2d_prepare_types(_1a58c648a_RetTypeChecker*);
inline void _1a58c6e4c_prepare_exprs(_1a58c648a_RetTypeChecker*,jule::Ptr<_1aa08d334_Expr>&);
inline void _1a58c718e_ret_vars(_1a58c648a_RetTypeChecker*);
inline void _1a58c73d1_check_exprs(_1a58c648a_RetTypeChecker*);
inline jule::Bool _1a58c7788_check(_1a58c648a_RetTypeChecker*,jule::Ptr<_1aa08d334_Expr>&);
struct _1a58c648a_RetTypeChecker {
	jule::Ptr<_1ac565bd3_ScopeChecker> _field_sc = jule::Ptr<_1ac565bd3_ScopeChecker>();
	jule::Ptr<_1ab836218_FnIns> _field_f = jule::Ptr<_1ab836218_FnIns>();
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _field_types = jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();
	jule::Slice<jule::Ptr<_1a588601b_Var>> _field_vars = jule::Slice<jule::Ptr<_1a588601b_Var>>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();
	jule::Any _field_model = jule::Any();


	_1a58c648a_RetTypeChecker(jule::Ptr<_1ac565bd3_ScopeChecker> __param_sc, jule::Ptr<_1ab836218_FnIns> __param_f, jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> __param_types, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_exprs, jule::Slice<jule::Ptr<_1a588601b_Var>> __param_vars, _1aa07563a_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_1a58c648a_RetTypeChecker(void) = default;

	inline bool operator==(_1a58c648a_RetTypeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_f == _other._field_f &&
			this->_field_types == _other._field_types &&
			this->_field_exprs == _other._field_exprs &&
			this->_field_vars == _other._field_vars &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a58c648a_RetTypeChecker _other) { return !this->operator==(_other); }


};
struct _1aa094c86_LabelSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();


	_1aa094c86_LabelSt(_1aa07563a_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1aa094c86_LabelSt(void) = default;

	inline bool operator==(_1aa094c86_LabelSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa094c86_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ab81941b_CastingExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1a5913e9a_TypeKind> _field_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_expr_kind = jule::Ptr<_1a5913e9a_TypeKind>();


	_1ab81941b_CastingExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr, jule::Ptr<_1a5913e9a_TypeKind> __param_kind, jule::Ptr<_1a5913e9a_TypeKind> __param_expr_kind): _field_token(__param_token), _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_1ab81941b_CastingExprModel(void) = default;

	inline bool operator==(_1ab81941b_CastingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr_kind == _other._field_expr_kind;
	}

	inline bool operator!=(_1ab81941b_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81a0ed_FnCallExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1ab836218_FnIns> _field_func = jule::Ptr<_1ab836218_FnIns>();
	jule::Bool _field_is_co = jule::Bool();
	jule::Any _field_expr = jule::Any();
	jule::Slice<jule::Any> _field_args = jule::Slice<jule::Any>();
	jule::Ptr<_1ac56022c_Scope> _field_except = jule::Ptr<_1ac56022c_Scope>();
	jule::Bool _field_assigned = jule::Bool();


	_1ab81a0ed_FnCallExprModel(_1aa07563a_Token __param_token, jule::Ptr<_1ab836218_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args, jule::Ptr<_1ac56022c_Scope> __param_except, jule::Bool __param_assigned): _field_token(__param_token), _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args), _field_except(__param_except), _field_assigned(__param_assigned) {}

	

	_1ab81a0ed_FnCallExprModel(void) = default;

	inline bool operator==(_1ab81a0ed_FnCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_func == _other._field_func &&
			this->_field_is_co == _other._field_is_co &&
			this->_field_expr == _other._field_expr &&
			this->_field_args == _other._field_args &&
			this->_field_except == _other._field_except &&
			this->_field_assigned == _other._field_assigned;
	}

	inline bool operator!=(_1ab81a0ed_FnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa0951a4_GotoSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	_1aa07563a_Token _field_label = _1aa07563a_Token();


	_1aa0951a4_GotoSt(_1aa07563a_Token __param_token, _1aa07563a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1aa0951a4_GotoSt(void) = default;

	inline bool operator==(_1aa0951a4_GotoSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1aa0951a4_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab81ae9a_IndexingExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1a58cee44_Data> _field_expr = jule::Ptr<_1a58cee44_Data>();
	jule::Ptr<_1a58cee44_Data> _field_index = jule::Ptr<_1a58cee44_Data>();


	_1ab81ae9a_IndexingExprModel(_1aa07563a_Token __param_token, jule::Ptr<_1a58cee44_Data> __param_expr, jule::Ptr<_1a58cee44_Data> __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_1ab81ae9a_IndexingExprModel(void) = default;

	inline bool operator==(_1ab81ae9a_IndexingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_index == _other._field_index;
	}

	inline bool operator!=(_1ab81ae9a_IndexingExprModel _other) { return !this->operator==(_other); }


};
inline _1a5905772_BinaryEval static__1a590608b_new_plain(jule::Ptr<_1a58d2397_Eval>);
inline _1a5905772_BinaryEval static__1a5906476_new(jule::Ptr<_1a58d2397_Eval>,_1aa07563a_Token);
inline jule::Bool _1a5906795_check_type_compatibility(_1a5905772_BinaryEval*);
inline jule::Bool _1a5906ac5_check_struct_common_operator_compatibility(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5906da0_eval_nil(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a590717a_eval_enum(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5907455_eval_sptr(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5907730_eval_ptr(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5907a0a_eval_arr(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5907cd5_eval_slc(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a59080b0_eval_fn(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a590838a_eval_struct(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5908665_eval_trait(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5908940_eval_any(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5908c1a_eval_bool(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a5908ee5_eval_str(_1a5905772_BinaryEval*);
inline void _1a5909237_set_type_to_greater(_1a5905772_BinaryEval*);
inline void _1a5909523_check_mod_data(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&);
inline void _1a5909765_mod(_1a5905772_BinaryEval*);
inline jule::Bool _1a5909c3d_numbers_are_compatibile(_1a5905772_BinaryEval*,jule::Str&,jule::Str&);
inline jule::Ptr<_1a58cee44_Data> _1a590a007_eval_float(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a590a2d2_eval_int(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a590a5ac_eval_prim(_1a5905772_BinaryEval*);
inline jule::Ptr<_1a58cee44_Data> _1a590a887_eval_op(_1a5905772_BinaryEval*);
inline void _1a590aba6_eval_const(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&);
inline void _1a590aec5_check_data(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&);
inline void _1a590b217_check_datas(_1a5905772_BinaryEval*);
inline void _1a590b536_set_model(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&);
inline void _1a590b855_post_eval(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a590bcd9_solve_explicit(_1a5905772_BinaryEval*,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a590c191_eval(_1a5905772_BinaryEval*,jule::Ptr<_1aa0917aa_BinopExpr>&);
struct _1a5905772_BinaryEval {
	jule::Ptr<_1a58d2397_Eval> _field_e = jule::Ptr<_1a58d2397_Eval>();
	jule::Ptr<_1a58cee44_Data> _field_l = jule::Ptr<_1a58cee44_Data>();
	jule::Ptr<_1a58cee44_Data> _field_r = jule::Ptr<_1a58cee44_Data>();
	_1aa07563a_Token _field_op = _1aa07563a_Token();


	_1a5905772_BinaryEval(jule::Ptr<_1a58d2397_Eval> __param_e, jule::Ptr<_1a58cee44_Data> __param_l, jule::Ptr<_1a58cee44_Data> __param_r, _1aa07563a_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_1a5905772_BinaryEval(void) = default;

	inline bool operator==(_1a5905772_BinaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a5905772_BinaryEval _other) { return !this->operator==(_other); }


};
struct _1a5912d12_TypeAlias {
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_used = jule::Bool();
	jule::Bool _field_generic = jule::Bool();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Slice<jule::Any> _field_refers = jule::Slice<jule::Any>();
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _field_generics = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>();


	_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _1aa07563a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Slice<jule::Any> __param_refers, jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> __param_generics): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_refers(__param_refers), _field_generics(__param_generics) {}

	

	_1a5912d12_TypeAlias(void) = default;

	inline bool operator==(_1a5912d12_TypeAlias _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_used == _other._field_used &&
			this->_field_generic == _other._field_generic &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_refers == _other._field_refers &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1a5912d12_TypeAlias _other) { return !this->operator==(_other); }


};
struct _1aa0955c2_FallSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();


	_1aa0955c2_FallSt(_1aa07563a_Token __param_token): _field_token(__param_token) {}

	

	_1aa0955c2_FallSt(void) = default;

	inline bool operator==(_1aa0955c2_FallSt _other) {
		return 
			this->_field_token == _other._field_token;
	}

	inline bool operator!=(_1aa0955c2_FallSt _other) { return !this->operator==(_other); }


};
struct _1aa0959e0_AssignLeft {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa0959e0_AssignLeft(_1aa07563a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1aa0959e0_AssignLeft(void) = default;

	inline bool operator==(_1aa0959e0_AssignLeft _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_reference == _other._field_reference &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa0959e0_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1aa095e0d_AssignSt {
	jule::Bool _field_declarative = jule::Bool();
	_1aa07563a_Token _field_setter = _1aa07563a_Token();
	jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>> _field_left = jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>>();
	jule::Ptr<_1aa08d334_Expr> _field_right = jule::Ptr<_1aa08d334_Expr>();


	_1aa095e0d_AssignSt(jule::Bool __param_declarative, _1aa07563a_Token __param_setter, jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>> __param_left, jule::Ptr<_1aa08d334_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_1aa095e0d_AssignSt(void) = default;

	inline bool operator==(_1aa095e0d_AssignSt _other) {
		return 
			this->_field_declarative == _other._field_declarative &&
			this->_field_setter == _other._field_setter &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1aa095e0d_AssignSt _other) { return !this->operator==(_other); }


};
struct _1ab81cce3_SlicingExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1ab81cce3_SlicingExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1ab81cce3_SlicingExprModel(void) = default;

	inline bool operator==(_1ab81cce3_SlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1ab81cce3_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81d640_TraitSubIdentExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Ptr<_1ab832324_Fn> _field_method = jule::Ptr<_1ab832324_Fn>();
	jule::Ptr<_1ac44770d_Trait> _field_trt = jule::Ptr<_1ac44770d_Trait>();


	_1ab81d640_TraitSubIdentExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr, jule::Ptr<_1ab832324_Fn> __param_method, jule::Ptr<_1ac44770d_Trait> __param_trt): _field_token(__param_token), _field_expr(__param_expr), _field_method(__param_method), _field_trt(__param_trt) {}

	

	_1ab81d640_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1ab81d640_TraitSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_method == _other._field_method &&
			this->_field_trt == _other._field_trt;
	}

	inline bool operator!=(_1ab81d640_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1ab81e245_StructSubIdentExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1a58cee44_Data> _field_expr = jule::Ptr<_1a58cee44_Data>();
	jule::Ptr<_1a5913e9a_TypeKind> _field_expr_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Ptr<_1ab836218_FnIns> _field_method = jule::Ptr<_1ab836218_FnIns>();
	jule::Ptr<_1ab8137bc_FieldIns> _field_field = jule::Ptr<_1ab8137bc_FieldIns>();


	_1ab81e245_StructSubIdentExprModel(_1aa07563a_Token __param_token, jule::Ptr<_1a58cee44_Data> __param_expr, jule::Ptr<_1a5913e9a_TypeKind> __param_expr_kind, jule::Ptr<_1ab836218_FnIns> __param_method, jule::Ptr<_1ab8137bc_FieldIns> __param_field): _field_token(__param_token), _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_1ab81e245_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1ab81e245_StructSubIdentExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_method == _other._field_method &&
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1ab81e245_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa03a4e0_is_prim(_1dd58387e_IdentTypeDecl*);
struct _1dd58387e_IdentTypeDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _field_generics = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>();


	_1dd58387e_IdentTypeDecl(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_1dd58387e_IdentTypeDecl(void) = default;

	inline bool operator==(_1dd58387e_IdentTypeDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1dd58387e_IdentTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5a7c27_is_self(_1aa096749_ParamDecl*);
inline jule::Bool _1dd5b1ba9_is_ref(_1aa096749_ParamDecl*);
struct _1aa096749_ParamDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Str _field_ident = jule::Str();


	_1aa096749_ParamDecl(_1aa07563a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1aa096749_ParamDecl(void) = default;

	inline bool operator==(_1aa096749_ParamDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1aa096749_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5772ac_is_anon(_1aa096b67_FnDecl*);
struct _1aa096b67_FnDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>();
	jule::Ptr<_1aa08ce16_RetTypeDecl> _field_result = jule::Ptr<_1aa08ce16_RetTypeDecl>();
	jule::Slice<jule::Ptr<_1aa096749_ParamDecl>> _field_params = jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>();


	_1aa096b67_FnDecl(_1aa07563a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Ptr<_1aa09632b_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> __param_generics, jule::Ptr<_1aa08ce16_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_1aa096749_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_1aa096b67_FnDecl(void) = default;

	inline bool operator==(_1aa096b67_FnDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params;
	}

	inline bool operator!=(_1aa096b67_FnDecl _other) { return !this->operator==(_other); }


};
struct _1ab82106b_CommonSubIdentExprModel {
	jule::Ptr<_1a5913e9a_TypeKind> _field_expr_kind = jule::Ptr<_1a5913e9a_TypeKind>();
	jule::Any _field_expr = jule::Any();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();


	_1ab82106b_CommonSubIdentExprModel(jule::Ptr<_1a5913e9a_TypeKind> __param_expr_kind, jule::Any __param_expr, _1aa07563a_Token __param_token, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_token(__param_token), _field_ident(__param_ident) {}

	

	_1ab82106b_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1ab82106b_CommonSubIdentExprModel _other) {
		return 
			this->_field_expr_kind == _other._field_expr_kind &&
			this->_field_expr == _other._field_expr &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab82106b_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
inline void _1a5927b5c_push_err(_1a5927189_TypeChecker*,_1aa07563a_Token,jule::Str,jule::Slice<jule::Any>);
inline void _1a5927d9e_allow_builtin(_1a5927189_TypeChecker*);
inline void _1a59280e1_disallow_builtin(_1a5927189_TypeChecker*);
inline jule::Ptr<_1a591970e_Prim> _1a5928498_build_prim(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&);
inline void _1a5928971_push_cycle_error(_1a5927189_TypeChecker*,jule::Any,jule::Any,jule::Str&);
inline jule::Bool _1a5928e05_check_cross_cycle(_1a5927189_TypeChecker*,jule::Any,jule::Str&);
inline jule::Bool _1a5929389_check_illegal_cycles(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Any);
inline jule::Trait<_1a591395b_Kind> _1a592981d_from_type_alias(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1a5912d12_TypeAlias>&);
inline jule::Ptr<_1ac44a337_Enum> _1a5929ca2_from_enum(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1ac44a337_Enum>&);
inline jule::Ptr<_1ac44770d_Trait> _1a592a236_from_trait(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1ac44770d_Trait>&);
inline jule::Bool _1a592a6ba_check_struct_ins(_1a5927189_TypeChecker*,jule::Ptr<_1ab814515_StructIns>&,_1aa07563a_Token&);
inline void _1a592aa2d_append_used_struct_reference(_1a5927189_TypeChecker*,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Ptr<_1ab814515_StructIns> _1a592aea1_build_struct_instance(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Ptr<_1ab814515_StructIns> _1a592b435_from_struct(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>&,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Trait<_1a591395b_Kind> _1a592b8b9_get_def(_1a5927189_TypeChecker*,jule::Trait<_1a5932ea8_Lookup>,jule::Ptr<_1dd58387e_IdentTypeDecl>&);
inline jule::Trait<_1a591395b_Kind> _1a592bc71_build_ident(_1a5927189_TypeChecker*,jule::Ptr<_1dd58387e_IdentTypeDecl>);
inline jule::Ptr<_1a591d768_Sptr> _1a592c128_build_sptr_from_type(_1a5927189_TypeChecker*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Ptr<_1a591d768_Sptr> _1a592c4d0_build_sptr(_1a5927189_TypeChecker*,jule::Ptr<_1aa08b453_SptrTypeDecl>);
inline jule::Ptr<_1a59230db_Ptr> _1a592c887_build_ptr_from_type(_1a5927189_TypeChecker*,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Ptr<_1a59230db_Ptr> _1a592cc3e_build_ptr(_1a5927189_TypeChecker*,jule::Ptr<_1aa08c1ac_PtrTypeDecl>);
inline jule::Ptr<_1a591e549_Slc> _1a592d0e6_build_slc(_1a5927189_TypeChecker*,jule::Ptr<_1aa08b871_SlcTypeDecl>);
inline jule::Ptr<_1a592230a_Arr> _1a592d49d_build_arr(_1a5927189_TypeChecker*,jule::Ptr<_1aa08c5ca_ArrTypeDecl>);
inline jule::Ptr<_1a592132b_Map> _1a592d855_build_map(_1a5927189_TypeChecker*,jule::Ptr<_1aa08c9e8_MapTypeDecl>);
inline jule::Ptr<_1a59203b3_Tuple> _1a592dc0c_build_tuple(_1a5927189_TypeChecker*,jule::Ptr<_1aa08bc8e_TupleTypeDecl>);
inline jule::Bool _1a592e0b4_check_fn_types(_1a5927189_TypeChecker*,jule::Ptr<_1ab836218_FnIns>&);
inline jule::Ptr<_1ab836218_FnIns> _1a592e46b_build_fn(_1a5927189_TypeChecker*,jule::Ptr<_1aa096b67_FnDecl>);
inline jule::Trait<_1a591395b_Kind> _1a592e823_build_by_namespace(_1a5927189_TypeChecker*,jule::Ptr<_1dd583c9c_NamespaceTypeDecl>);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a592ebca_build(_1a5927189_TypeChecker*,jule::Any&);
inline jule::Ptr<_1a5913e9a_TypeKind> _1a5930082_check_decl(_1a5927189_TypeChecker*,jule::Ptr<_1dd583461_TypeDecl>&);
inline void _1a59303a1_check(_1a5927189_TypeChecker*,jule::Ptr<_1a5918a0a_TypeSymbol>&);
struct _1a5927189_TypeChecker {
	jule::Ptr<_1a5864747_Sema> _field_s = jule::Ptr<_1a5864747_Sema>();
	jule::Trait<_1a5932ea8_Lookup> _field_lookup = jule::Trait<_1a5932ea8_Lookup>();
	jule::Ptr<_1a5926045_Referencer> _field_referencer = jule::Ptr<_1a5926045_Referencer>();
	_1aa07563a_Token _field_error_token = _1aa07563a_Token();
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _field_ignore_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>();
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _field_use_generics = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>();
	jule::Bool _field_not_plain = jule::Bool();
	jule::Bool _field_dis_builtin = jule::Bool();
	jule::Bool _field_selection = jule::Bool();
	jule::Ptr<_1a5912d12_TypeAlias> _field_owner_alias = jule::Ptr<_1a5912d12_TypeAlias>();
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _field_banned_generics = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>();
	jule::Bool _field_inscatch = jule::Bool();


	_1a5927189_TypeChecker(jule::Ptr<_1a5864747_Sema> __param_s, jule::Trait<_1a5932ea8_Lookup> __param_lookup, jule::Ptr<_1a5926045_Referencer> __param_referencer, _1aa07563a_Token __param_error_token, jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain, jule::Bool __param_dis_builtin, jule::Bool __param_selection, jule::Ptr<_1a5912d12_TypeAlias> __param_owner_alias, jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> __param_banned_generics, jule::Bool __param_inscatch): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain), _field_dis_builtin(__param_dis_builtin), _field_selection(__param_selection), _field_owner_alias(__param_owner_alias), _field_banned_generics(__param_banned_generics), _field_inscatch(__param_inscatch) {}

	

	_1a5927189_TypeChecker(void) = default;

	inline bool operator==(_1a5927189_TypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_referencer == _other._field_referencer &&
			this->_field_error_token == _other._field_error_token &&
			this->_field_ignore_generics == _other._field_ignore_generics &&
			this->_field_use_generics == _other._field_use_generics &&
			this->_field_not_plain == _other._field_not_plain &&
			this->_field_dis_builtin == _other._field_dis_builtin &&
			this->_field_selection == _other._field_selection &&
			this->_field_owner_alias == _other._field_owner_alias &&
			this->_field_banned_generics == _other._field_banned_generics &&
			this->_field_inscatch == _other._field_inscatch;
	}

	inline bool operator!=(_1a5927189_TypeChecker _other) { return !this->operator==(_other); }


};
struct _1aa097085_VarDecl {
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_constant = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa097085_VarDecl(jule::Ptr<_1aa09632b_ScopeTree> __param_scope, _1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_1aa097085_VarDecl(void) = default;

	inline bool operator==(_1aa097085_VarDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_constant == _other._field_constant &&
			this->_field_statically == _other._field_statically &&
			this->_field_reference == _other._field_reference &&
			this->_field_directives == _other._field_directives &&
			this->_field_kind == _other._field_kind &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa097085_VarDecl _other) { return !this->operator==(_other); }


};
struct _1aa0974a3_RetSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa0974a3_RetSt(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aa0974a3_RetSt(void) = default;

	inline bool operator==(_1aa0974a3_RetSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa0974a3_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa004377_is_inf(_1aa0978c1_Iter*);
struct _1aa0978c1_Iter {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_kind = jule::Any();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();


	_1aa0978c1_Iter(_1aa07563a_Token __param_token, jule::Any __param_kind, jule::Ptr<_1aa09632b_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_1aa0978c1_Iter(void) = default;

	inline bool operator==(_1aa0978c1_Iter _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_kind == _other._field_kind &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aa0978c1_Iter _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::Ptr<_1a59a1895_IR>,jule::Slice<_1c4810251_Log>> static__1a59a20c1_build(jule::Str,jule::I64);
inline void _1a59a25cc_append_structs(_1a59a1895_IR*,jule::Ptr<_1ac58451a_Package>&,jule::Slice<jule::Ptr<_1ab810b3d_Struct>>&);
inline jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _1a59a28a7_get_all_structures(_1a59a1895_IR*);
inline void _1a59a2ae9_order(_1a59a1895_IR*);
struct _1a59a1895_IR {
	jule::Str _field_root = jule::Str();
	jule::Slice<jule::Str> _field_passes = jule::Slice<jule::Str>();
	jule::Ptr<_1ac58451a_Package> _field_main = jule::Ptr<_1ac58451a_Package>();
	jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _field_used = jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>();
	_1a59a3e6e_OrderedDefines _field_ordered = _1a59a3e6e_OrderedDefines();


	_1a59a1895_IR(jule::Str __param_root, jule::Slice<jule::Str> __param_passes, jule::Ptr<_1ac58451a_Package> __param_main, jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> __param_used, _1a59a3e6e_OrderedDefines __param_ordered): _field_root(__param_root), _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_1a59a1895_IR(void) = default;

	inline bool operator==(_1a59a1895_IR _other) {
		return 
			this->_field_root == _other._field_root &&
			this->_field_passes == _other._field_passes &&
			this->_field_main == _other._field_main &&
			this->_field_used == _other._field_used &&
			this->_field_ordered == _other._field_ordered;
	}

	inline bool operator!=(_1a59a1895_IR _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5b0c96_is_while_next(_1aa097cde_WhileKind*);
struct _1aa097cde_WhileKind {
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Any _field_next = jule::Any();
	_1aa07563a_Token _field_next_token = _1aa07563a_Token();


	_1aa097cde_WhileKind(jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Any __param_next, _1aa07563a_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_1aa097cde_WhileKind(void) = default;

	inline bool operator==(_1aa097cde_WhileKind _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_next == _other._field_next &&
			this->_field_next_token == _other._field_next_token;
	}

	inline bool operator!=(_1aa097cde_WhileKind _other) { return !this->operator==(_other); }


};
struct _1aa09820c_RangeKind {
	_1aa07563a_Token _field_in_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa097085_VarDecl> _field_key_a = jule::Ptr<_1aa097085_VarDecl>();
	jule::Ptr<_1aa097085_VarDecl> _field_key_b = jule::Ptr<_1aa097085_VarDecl>();


	_1aa09820c_RangeKind(_1aa07563a_Token __param_in_token, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Ptr<_1aa097085_VarDecl> __param_key_a, jule::Ptr<_1aa097085_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_1aa09820c_RangeKind(void) = default;

	inline bool operator==(_1aa09820c_RangeKind _other) {
		return 
			this->_field_in_token == _other._field_in_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_key_a == _other._field_key_a &&
			this->_field_key_b == _other._field_key_b;
	}

	inline bool operator!=(_1aa09820c_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ab823887_BuiltinPanicCallExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();


	_1ab823887_BuiltinPanicCallExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1ab823887_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1ab823887_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1ab823887_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1ab828ea8_BuiltinAssertCallExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Str _field_log = jule::Str();


	_1ab828ea8_BuiltinAssertCallExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr, jule::Str __param_log): _field_token(__param_token), _field_expr(__param_expr), _field_log(__param_log) {}

	

	_1ab828ea8_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1ab828ea8_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_log == _other._field_log;
	}

	inline bool operator!=(_1ab828ea8_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aa09862a_BreakSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	_1aa07563a_Token _field_label = _1aa07563a_Token();


	_1aa09862a_BreakSt(_1aa07563a_Token __param_token, _1aa07563a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1aa09862a_BreakSt(void) = default;

	inline bool operator==(_1aa09862a_BreakSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1aa09862a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1aa098a48_ContSt {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	_1aa07563a_Token _field_label = _1aa07563a_Token();


	_1aa098a48_ContSt(_1aa07563a_Token __param_token, _1aa07563a_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_1aa098a48_ContSt(void) = default;

	inline bool operator==(_1aa098a48_ContSt _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label;
	}

	inline bool operator!=(_1aa098a48_ContSt _other) { return !this->operator==(_other); }


};
struct _1aa098e66_If {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();


	_1aa098e66_If(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Ptr<_1aa09632b_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_1aa098e66_If(void) = default;

	inline bool operator==(_1aa098e66_If _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aa098e66_If _other) { return !this->operator==(_other); }


};
struct _1aa09942d_Else {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();


	_1aa09942d_Else(_1aa07563a_Token __param_token, jule::Ptr<_1aa09632b_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_1aa09942d_Else(void) = default;

	inline bool operator==(_1aa09942d_Else _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aa09942d_Else _other) { return !this->operator==(_other); }


};
struct _1a632106b_MutSlicingExprModel {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_expr = jule::Any();
	jule::Any _field_left = jule::Any();
	jule::Any _field_right = jule::Any();


	_1a632106b_MutSlicingExprModel(_1aa07563a_Token __param_token, jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_token(__param_token), _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_1a632106b_MutSlicingExprModel(void) = default;

	inline bool operator==(_1a632106b_MutSlicingExprModel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr &&
			this->_field_left == _other._field_left &&
			this->_field_right == _other._field_right;
	}

	inline bool operator!=(_1a632106b_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aa08d334_Expr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_range = jule::Bool();
	jule::Any _field_kind = jule::Any();


	_1aa08d334_Expr(_1aa07563a_Token __param_token, jule::Bool __param_range, jule::Any __param_kind): _field_token(__param_token), _field_range(__param_range), _field_kind(__param_kind) {}

	

	_1aa08d334_Expr(void) = default;

	inline bool operator==(_1aa08d334_Expr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_range == _other._field_range &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa08d334_Expr _other) { return !this->operator==(_other); }


};
struct _1aa09a330_TypeAliasDecl {
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();


	_1aa09a330_TypeAliasDecl(jule::Ptr<_1aa09632b_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _1aa07563a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1dd583461_TypeDecl> __param_kind): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_1aa09a330_TypeAliasDecl(void) = default;

	inline bool operator==(_1aa09a330_TypeAliasDecl _other) {
		return 
			this->_field_scope == _other._field_scope &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aa09a330_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1aa09a93a_Case {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _field_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>();


	_1aa09a93a_Case(_1aa07563a_Token __param_token, jule::Ptr<_1aa09632b_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1aa08d334_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_1aa09a93a_Case(void) = default;

	inline bool operator==(_1aa09a93a_Case _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_scope == _other._field_scope &&
			this->_field_exprs == _other._field_exprs;
	}

	inline bool operator!=(_1aa09a93a_Case _other) { return !this->operator==(_other); }


};
struct _1aa09b188_MatchCase {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_type_match = jule::Bool();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();
	jule::Slice<jule::Ptr<_1aa09a93a_Case>> _field_cases = jule::Slice<jule::Ptr<_1aa09a93a_Case>>();
	jule::Ptr<_1aa09942d_Else> _field_default = jule::Ptr<_1aa09942d_Else>();


	_1aa09b188_MatchCase(_1aa07563a_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_1aa08d334_Expr> __param_expr, jule::Slice<jule::Ptr<_1aa09a93a_Case>> __param_cases, jule::Ptr<_1aa09942d_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_1aa09b188_MatchCase(void) = default;

	inline bool operator==(_1aa09b188_MatchCase _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_type_match == _other._field_type_match &&
			this->_field_expr == _other._field_expr &&
			this->_field_cases == _other._field_cases &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1aa09b188_MatchCase _other) { return !this->operator==(_other); }


};
struct _1aa09ba29_UseDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_link_path = jule::Str();
	jule::Str _field_alias = jule::Str();
	jule::Bool _field_full = jule::Bool();
	jule::Slice<_1aa07563a_Token> _field_selected = jule::Slice<_1aa07563a_Token>();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_std = jule::Bool();


	_1aa09ba29_UseDecl(_1aa07563a_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_1aa07563a_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_1aa09ba29_UseDecl(void) = default;

	inline bool operator==(_1aa09ba29_UseDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_link_path == _other._field_link_path &&
			this->_field_alias == _other._field_alias &&
			this->_field_full == _other._field_full &&
			this->_field_selected == _other._field_selected &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_std == _other._field_std;
	}

	inline bool operator!=(_1aa09ba29_UseDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa09c783_auto_expr(_1aa09c134_EnumItemDecl*);
struct _1aa09c134_EnumItemDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa09c134_EnumItemDecl(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_1aa09c134_EnumItemDecl(void) = default;

	inline bool operator==(_1aa09c134_EnumItemDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa09c134_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aa09d09c_default_typed(_1aa09cb7e_EnumDecl*);
struct _1aa09cb7e_EnumDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>> _field_items = jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>>();


	_1aa09cb7e_EnumDecl(_1aa07563a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1aa09cb7e_EnumDecl(void) = default;

	inline bool operator==(_1aa09cb7e_EnumDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1aa09cb7e_EnumDecl _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ab834db5_ParamIns> _1ab83092c_instance(jule::Ptr<_1ab830300_Param>);
inline jule::Bool _1ab830c07_is_self(_1ab830300_Param*);
inline jule::Bool _1ab830ed2_is_ref(_1ab830300_Param*);
struct _1ab830300_Param {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_mutable = jule::Bool();
	jule::Bool _field_variadic = jule::Bool();
	jule::Bool _field_reference = jule::Bool();
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Str _field_ident = jule::Str();


	_1ab830300_Param(_1aa07563a_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_1ab830300_Param(void) = default;

	inline bool operator==(_1ab830300_Param _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_variadic == _other._field_variadic &&
			this->_field_reference == _other._field_reference &&
			this->_field_kind == _other._field_kind &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ab830300_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ab8329d9_is_void(_1ab832324_Fn*);
inline jule::Bool _1ab832cb4_is_method(_1ab832324_Fn*);
inline jule::Bool _1ab83308e_is_entry_point(_1ab832324_Fn*);
inline jule::Bool _1ab833369_is_init(_1ab832324_Fn*);
inline jule::Bool _1ab833644_is_anon(_1ab832324_Fn*);
inline jule::Bool _1ab83391e_any_var(_1ab832324_Fn*);
inline jule::Bool _1ab833c3d_parameters_uses_generics(_1ab832324_Fn*);
inline jule::Bool _1ab834007_result_uses_generics(_1ab832324_Fn*);
inline jule::Ptr<_1ab836218_FnIns> _1ab8342d2_instance_force(jule::Ptr<_1ab832324_Fn>);
inline jule::Ptr<_1ab836218_FnIns> _1ab8345ac_instance(jule::Ptr<_1ab832324_Fn>);
inline std::tuple<jule::Bool,jule::I64> _1ab834964_append_instance(_1ab832324_Fn*,jule::Ptr<_1ab836218_FnIns>&);
struct _1ab832324_Fn {
	jule::Ptr<_1a5864747_Sema> _field_sema = jule::Ptr<_1a5864747_Sema>();
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_global = jule::Bool();
	jule::Bool _field_unsafety = jule::Bool();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Bool _field_statically = jule::Bool();
	jule::Bool _field_exceptional = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Ptr<_1aa09632b_ScopeTree> _field_scope = jule::Ptr<_1aa09632b_ScopeTree>();
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>();
	jule::Ptr<_1ab82e7a5_RetType> _field_result = jule::Ptr<_1ab82e7a5_RetType>();
	jule::Slice<jule::Ptr<_1ab830300_Param>> _field_params = jule::Slice<jule::Ptr<_1ab830300_Param>>();
	jule::Ptr<_1ab810b3d_Struct> _field_owner = jule::Ptr<_1ab810b3d_Struct>();
	jule::Slice<jule::Ptr<_1ab836218_FnIns>> _field_instances = jule::Slice<jule::Ptr<_1ab836218_FnIns>>();


	_1ab832324_Fn(jule::Ptr<_1a5864747_Sema> __param_sema, _1aa07563a_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Bool __param_exceptional, jule::Str __param_ident, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Ptr<_1aa09632b_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> __param_generics, jule::Ptr<_1ab82e7a5_RetType> __param_result, jule::Slice<jule::Ptr<_1ab830300_Param>> __param_params, jule::Ptr<_1ab810b3d_Struct> __param_owner, jule::Slice<jule::Ptr<_1ab836218_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_exceptional(__param_exceptional), _field_ident(__param_ident), _field_directives(__param_directives), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {}

	

	_1ab832324_Fn(void) = default;

	inline bool operator==(_1ab832324_Fn _other) {
		return 
			this->_field_sema == _other._field_sema &&
			this->_field_token == _other._field_token &&
			this->_field_global == _other._field_global &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_statically == _other._field_statically &&
			this->_field_exceptional == _other._field_exceptional &&
			this->_field_ident == _other._field_ident &&
			this->_field_directives == _other._field_directives &&
			this->_field_scope == _other._field_scope &&
			this->_field_generics == _other._field_generics &&
			this->_field_result == _other._field_result &&
			this->_field_params == _other._field_params &&
			this->_field_owner == _other._field_owner &&
			this->_field_instances == _other._field_instances;
	}

	inline bool operator!=(_1ab832324_Fn _other) { return !this->operator==(_other); }


};
struct _1aa09d5db_FieldDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1dd583461_TypeDecl> _field_kind = jule::Ptr<_1dd583461_TypeDecl>();
	jule::Ptr<_1aa08d334_Expr> _field_default = jule::Ptr<_1aa08d334_Expr>();


	_1aa09d5db_FieldDecl(_1aa07563a_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_1dd583461_TypeDecl> __param_kind, jule::Ptr<_1aa08d334_Expr> __param_default): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind), _field_default(__param_default) {}

	

	_1aa09d5db_FieldDecl(void) = default;

	inline bool operator==(_1aa09d5db_FieldDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_default == _other._field_default;
	}

	inline bool operator!=(_1aa09d5db_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1aa09de7c_StructDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>> _field_fields = jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>>();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_cpp_linked = jule::Bool();
	jule::Slice<jule::Ptr<_1dd583043_Directive>> _field_directives = jule::Slice<jule::Ptr<_1dd583043_Directive>>();
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _field_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>();


	_1aa09de7c_StructDecl(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_1dd583043_Directive>> __param_directives, jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_generics(__param_generics) {}

	

	_1aa09de7c_StructDecl(void) = default;

	inline bool operator==(_1aa09de7c_StructDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_fields == _other._field_fields &&
			this->_field_public == _other._field_public &&
			this->_field_cpp_linked == _other._field_cpp_linked &&
			this->_field_directives == _other._field_directives &&
			this->_field_generics == _other._field_generics;
	}

	inline bool operator!=(_1aa09de7c_StructDecl _other) { return !this->operator==(_other); }


};
struct _1aa09e631_TraitDecl {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> _field_methods = jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>();


	_1aa09e631_TraitDecl(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_methods(__param_methods) {}

	

	_1aa09e631_TraitDecl(void) = default;

	inline bool operator==(_1aa09e631_TraitDecl _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_methods == _other._field_methods;
	}

	inline bool operator!=(_1aa09e631_TraitDecl _other) { return !this->operator==(_other); }


};
struct _1ab83b66e_Pass {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_text = jule::Str();


	_1ab83b66e_Pass(_1aa07563a_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_1ab83b66e_Pass(void) = default;

	inline bool operator==(_1ab83b66e_Pass _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_text == _other._field_text;
	}

	inline bool operator!=(_1ab83b66e_Pass _other) { return !this->operator==(_other); }


};
struct _1aa08d752_UseExpr {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Ptr<_1aa08d334_Expr> _field_expr = jule::Ptr<_1aa08d334_Expr>();


	_1aa08d752_UseExpr(_1aa07563a_Token __param_token, jule::Ptr<_1aa08d334_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_1aa08d752_UseExpr(void) = default;

	inline bool operator==(_1aa08d752_UseExpr _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_expr == _other._field_expr;
	}

	inline bool operator!=(_1aa08d752_UseExpr _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a639d47d_ObjectCoder> static__1a635b859_new(jule::Ptr<_1a59a1895_IR>&,_1a639cb42_SerializationInfo);
inline void _1a635060b_add_indent(_1a639d47d_ObjectCoder*);
inline void _1a635371e_done_indent(_1a639d47d_ObjectCoder*);
inline jule::Str _1a635307b_indent(_1a639d47d_ObjectCoder*);
inline jule::I64 _1a637c160_find_type_offset(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac44770d_Trait>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Str _1a637c88b_loc_info(_1a639d47d_ObjectCoder*,_1aa07563a_Token&);
inline jule::Str _1a637959c_links(_1a639d47d_ObjectCoder*);
inline jule::Str _1a6359a99_param_ins(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab834db5_ParamIns>&);
inline jule::Str _1a635d691_param(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab830300_Param>&);
inline jule::Str _1a63611aa_params(_1a639d47d_ObjectCoder*,jule::Slice<jule::Ptr<_1ab830300_Param>>&);
inline jule::Str _1a639dc75_params_ins(_1a639d47d_ObjectCoder*,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>&);
inline jule::Str _1a639ddda_params_decls(_1a639d47d_ObjectCoder*,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>&);
inline void _1a639e050_prepare_structure(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab810b3d_Struct>&);
inline void _1a639e1b5_prepare_structures(_1a639d47d_ObjectCoder*);
inline void _1a639e32a_build_trait_wrapper(_1a639d47d_ObjectCoder*,jule::Ptr<_1a639d060_TraitHash>&);
inline void _1a639e490_trait_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac44770d_Trait>&);
inline void _1a639e605_trait_decls(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac58451a_Package>&);
inline jule::Str _1a639e76a_structure_plain_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Str _1a639e8d0_structure_plain_decls(_1a639d47d_ObjectCoder*);
inline jule::Str _1a639ea45_var_init_expr(_1a639d47d_ObjectCoder*,jule::Ptr<_1a588601b_Var>&,jule::Str);
inline jule::Str _1a639ebaa_var(_1a639d47d_ObjectCoder*,jule::Ptr<_1a588601b_Var>);
inline jule::Str _1a639ed20_field_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab8137bc_FieldIns>&);
inline jule::Str _1a639ee85_structure_constructor(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a00ea_structure_destructor(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline void _1a63a0260_structure_operator_eq(_1a639d47d_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ab814515_StructIns>&);
inline void _1a63a03c5_structure_operator_not_eq(_1a639d47d_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ab814515_StructIns>&);
inline void _1a63a053a_structure_operator(_1a639d47d_ObjectCoder*,jule::Str&,jule::Str&,jule::Ptr<_1ab836218_FnIns>&,jule::Str);
inline jule::Str _1a63a0738_structure_operators(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a0b34_structure_derive_defs_decls(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a0eca_structure_ins_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a1382_structure_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Str _1a63a165c_structure_decls(_1a639d47d_ObjectCoder*);
inline jule::Str _1a63a1ae1_func_head(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab836218_FnIns>&,jule::Bool);
inline jule::Str _1a63a2075_func_decl(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab832324_Fn>&,jule::Bool);
inline jule::Str _1a63a242c_func_decls(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac58451a_Package>&);
inline void _1a63a266e_build_trait_map(_1a639d47d_ObjectCoder*);
inline void _1a63a28b1_process_traits(_1a639d47d_ObjectCoder*);
inline jule::Str _1a63a2b8b_decls(_1a639d47d_ObjectCoder*);
inline jule::Str _1a63a3120_pkg_globals(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac58451a_Package>&,jule::Str&);
inline jule::Str _1a63a34c7_globals(_1a639d47d_ObjectCoder*,jule::Str&);
inline jule::Str _1a63a387e_func(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab832324_Fn>&);
inline jule::Str _1a63a3c36_pkg_funcs(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac58451a_Package>&);
inline jule::Str _1a63a40dd_structure_methods(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a4495_structure_ostream(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a484c_structure_derive_defs(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a4c04_structure_ins(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab814515_StructIns>&);
inline jule::Str _1a63a50ab_structure(_1a639d47d_ObjectCoder*,jule::Ptr<_1ab810b3d_Struct>&);
inline jule::Str _1a63a5386_structures(_1a639d47d_ObjectCoder*);
inline jule::Str _1a63a5661_funcs(_1a639d47d_ObjectCoder*);
inline void _1a63a5a5c_push_init(_1a639d47d_ObjectCoder*,jule::Ptr<_1ac58451a_Package>&,jule::Str&);
inline jule::Str _1a63a5e14_init_caller(_1a639d47d_ObjectCoder*,jule::Str&);
inline void _1a63a6233_append_standard(_1a639d47d_ObjectCoder*,jule::Str&);
inline jule::Str _1a63a650d_serialize(_1a639d47d_ObjectCoder*);
struct _1a639d47d_ObjectCoder {
	jule::Ptr<_1a59a1895_IR> _field_ir = jule::Ptr<_1a59a1895_IR>();
	_1a639cb42_SerializationInfo _field_info = _1a639cb42_SerializationInfo();
	jule::Str _field_indent_buffer = jule::Str();
	jule::Str _field_trait_declarations = jule::Str();
	jule::Str _field_trait_wrappers = jule::Str();
	jule::Str _field_trait_data = jule::Str();
	jule::Str _field_trait_data_t = jule::Str();
	jule::Slice<jule::Ptr<_1a639d060_TraitHash>> _field_trait_map = jule::Slice<jule::Ptr<_1a639d060_TraitHash>>();
	jule::Ptr<_1a6224546_ExprCoder> _field_ec = jule::Ptr<_1a6224546_ExprCoder>();
	jule::Ptr<_1a62cbac6_ScopeCoder> _field_sc = jule::Ptr<_1a62cbac6_ScopeCoder>();


	_1a639d47d_ObjectCoder(jule::Ptr<_1a59a1895_IR> __param_ir, _1a639cb42_SerializationInfo __param_info, jule::Str __param_indent_buffer, jule::Str __param_trait_declarations, jule::Str __param_trait_wrappers, jule::Str __param_trait_data, jule::Str __param_trait_data_t, jule::Slice<jule::Ptr<_1a639d060_TraitHash>> __param_trait_map, jule::Ptr<_1a6224546_ExprCoder> __param_ec, jule::Ptr<_1a62cbac6_ScopeCoder> __param_sc): _field_ir(__param_ir), _field_info(__param_info), _field_indent_buffer(__param_indent_buffer), _field_trait_declarations(__param_trait_declarations), _field_trait_wrappers(__param_trait_wrappers), _field_trait_data(__param_trait_data), _field_trait_data_t(__param_trait_data_t), _field_trait_map(__param_trait_map), _field_ec(__param_ec), _field_sc(__param_sc) {}

	

	_1a639d47d_ObjectCoder(void) = default;

	inline bool operator==(_1a639d47d_ObjectCoder _other) {
		return 
			this->_field_ir == _other._field_ir &&
			this->_field_info == _other._field_info &&
			this->_field_indent_buffer == _other._field_indent_buffer &&
			this->_field_trait_declarations == _other._field_trait_declarations &&
			this->_field_trait_wrappers == _other._field_trait_wrappers &&
			this->_field_trait_data == _other._field_trait_data &&
			this->_field_trait_data_t == _other._field_trait_data_t &&
			this->_field_trait_map == _other._field_trait_map &&
			this->_field_ec == _other._field_ec &&
			this->_field_sc == _other._field_sc;
	}

	inline bool operator!=(_1a639d47d_ObjectCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac447d3a_to_str(_1ac44770d_Trait*);
inline jule::Bool _1ac4481e2_equals(jule::Ptr<_1ac44770d_Trait>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1ac4485bb_is_builtin(_1ac44770d_Trait*);
inline jule::Ptr<_1ab832324_Fn> _1ac448973_find_method(_1ac44770d_Trait*,jule::Str);
struct _1ac44770d_Trait {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Bool _field_public = jule::Bool();
	jule::Bool _field_mutable = jule::Bool();
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _field_methods = jule::Slice<jule::Ptr<_1ab832324_Fn>>();
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _field_implemented = jule::Slice<jule::Ptr<_1ab810b3d_Struct>>();


	_1ac44770d_Trait(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Slice<jule::Ptr<_1ab832324_Fn>> __param_methods, jule::Slice<jule::Ptr<_1ab810b3d_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_methods(__param_methods), _field_implemented(__param_implemented) {}

	

	_1ac44770d_Trait(void) = default;

	inline bool operator==(_1ac44770d_Trait _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_public == _other._field_public &&
			this->_field_mutable == _other._field_mutable &&
			this->_field_methods == _other._field_methods &&
			this->_field_implemented == _other._field_implemented;
	}

	inline bool operator!=(_1ac44770d_Trait _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ac449ad9_auto_expr(_1ac44948a_EnumItem*);
struct _1ac44948a_EnumItem {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a58d1451_Value> _field_value = jule::Ptr<_1a58d1451_Value>();


	_1ac44948a_EnumItem(_1aa07563a_Token __param_token, jule::Str __param_ident, jule::Ptr<_1a58d1451_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_1ac44948a_EnumItem(void) = default;

	inline bool operator==(_1ac44948a_EnumItem _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_ident == _other._field_ident &&
			this->_field_value == _other._field_value;
	}

	inline bool operator!=(_1ac44948a_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1ac44a90e_to_str(_1ac44a337_Enum*);
inline jule::Bool _1ac44acb6_equals(jule::Ptr<_1ac44a337_Enum>,jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Ptr<_1ac44948a_EnumItem> _1ac44b2a0_find_item(_1ac44a337_Enum*,jule::Str);
struct _1ac44a337_Enum {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Bool _field_public = jule::Bool();
	jule::Str _field_ident = jule::Str();
	jule::Ptr<_1a5918a0a_TypeSymbol> _field_kind = jule::Ptr<_1a5918a0a_TypeSymbol>();
	jule::Slice<jule::Ptr<_1ac44948a_EnumItem>> _field_items = jule::Slice<jule::Ptr<_1ac44948a_EnumItem>>();


	_1ac44a337_Enum(_1aa07563a_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_1a5918a0a_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_1ac44948a_EnumItem>> __param_items): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items) {}

	

	_1ac44a337_Enum(void) = default;

	inline bool operator==(_1ac44a337_Enum _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_public == _other._field_public &&
			this->_field_ident == _other._field_ident &&
			this->_field_kind == _other._field_kind &&
			this->_field_items == _other._field_items;
	}

	inline bool operator!=(_1ac44a337_Enum _other) { return !this->operator==(_other); }


};
inline jule::Bool _1dd5ead7a_is_decl(_1dd582b25_Node*);
inline jule::Bool _1aa006b4e_is_directive(_1dd582b25_Node*);
inline jule::Bool _1aa01dc98_is_impl(_1dd582b25_Node*);
inline jule::Bool _1aa029c82_is_use_decl(_1dd582b25_Node*);
struct _1dd582b25_Node {
	_1aa07563a_Token _field_token = _1aa07563a_Token();
	jule::Any _field_data = jule::Any();


	_1dd582b25_Node(_1aa07563a_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_1dd582b25_Node(void) = default;

	inline bool operator==(_1dd582b25_Node _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1dd582b25_Node _other) { return !this->operator==(_other); }


};
inline std::tuple<jule::I64,jule::Bool> _1a63c63a7_parse_integer_0(_1a63c5a7c_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>);
inline std::tuple<jule::U64,jule::Bool> _1a63c63a7_parse_integer_1(_1a63c5a7c_ArgParser*,jule::Str&,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>);
inline jule::Str _1a63c6682_get_data(_1a63c5a7c_ArgParser*);
inline jule::VoidExceptional _1a63c69a1_process_flag(_1a63c5a7c_ArgParser*,jule::Trait<_1a63c0dda_CommonFlag>&);
inline jule::VoidExceptional _1a63c6cc0_single_dash(_1a63c5a7c_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1a63c70de_double_dash(_1a63c5a7c_ArgParser*,jule::Str&);
inline jule::VoidExceptional _1a63c7331_try_arg(_1a63c5a7c_ArgParser*);
inline jule::VoidExceptional _1a63c7573_parse(_1a63c5a7c_ArgParser*);
struct _1a63c5a7c_ArgParser {
	_1a63c28c0_FlagSet _field_set = _1a63c28c0_FlagSet();
	jule::Slice<jule::Str> _field_args = jule::Slice<jule::Str>();
	jule::Slice<jule::Str> _field_content = jule::Slice<jule::Str>();
	jule::I64 _field_i = jule::I64();


	_1a63c5a7c_ArgParser(_1a63c28c0_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Slice<jule::Str> __param_content, jule::I64 __param_i): _field_set(__param_set), _field_args(__param_args), _field_content(__param_content), _field_i(__param_i) {}

	

	_1a63c5a7c_ArgParser(void) = default;

	inline bool operator==(_1a63c5a7c_ArgParser _other) {
		return 
			this->_field_set == _other._field_set &&
			this->_field_args == _other._field_args &&
			this->_field_content == _other._field_content &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a63c5a7c_ArgParser _other) { return !this->operator==(_other); }


};
inline void _1dc2530dd_push_opt_level(jule::I64);
inline void _1dc339636_free(void*);
inline jule::Str _1dc361905_byte_ptr_to_str(jule::U8*);
inline jule::I64 _1dc311e27_get_last_errno(void);
inline jule::I64 _1dc327c95_stat(jule::U8*,struct stat*);
inline jule::I64 _1dc3362ae_open(jule::U8*,jule::I64,jule::I64);
inline jule::U8* _1dc322c7e_getcwd(jule::U8*,jule::U64);
inline DIR* _1dc362560_opendir(jule::U8*);
inline struct dirent* _1dc3626c5_readdir(DIR*);
inline jule::I64 _1dc362a6b_closedir(DIR*);
inline jule::I64 _1dc362eab_mkdir(jule::U8*,jule::I64);
inline jule::I64 _1dc363121_rmdir(jule::U8*);
inline jule::I64 _1dc363286_unlink(jule::U8*);
inline jule::I64 _1dc3719d1_seek(jule::I64,jule::I64,jule::I64);
inline jule::I64 _1dc371e98_read(jule::I64,void*,jule::U64);
inline jule::I64 _1dc37233e_close(jule::I64);
inline jule::I64 _1dc372806_write(jule::I64,void*,jule::U64);
inline void _1dc372a7b_exit(jule::I64);
inline jule::I64 _1dc401698_get_last_os_error(void);
inline jule::Slice<jule::Str> _1dc401da2_args(void);
inline jule::Exceptional<jule::Str> _1dc402204_working_dir(void);
inline jule::Exceptional<jule::Str> _1dc403029___getwd(void);
inline jule::Slice<jule::U8> _1dd07e1e3_stobs(jule::Str&);
inline jule::Bool _1c3a88d6b_is_letter(jule::I32);
inline jule::Bool _1c3acc013_is16(jule::Slice<_1c3ac9829_Range16>,jule::U16);
inline jule::Bool _1c3acc3ed_is32(jule::Slice<_1c3aca0bb_Range32>,jule::U32);
inline jule::Bool _1c3accc5b_is_excluding_latin(jule::Ptr<_1c3aca819_RangeTable>,jule::I32);
inline std::tuple<jule::I32,jule::I64> _1c477e19d_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::I64> _1c477e80d_decode_last_rune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1c4780787_append_rune(jule::Slice<jule::U8>,jule::I32);
inline jule::Slice<jule::U8> _1c4780b72_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
inline jule::I64 _1c478128d_rune_count_str(jule::Str);
inline jule::Bool _1c478159b_rune_start(jule::U8);
inline jule::Str _1c3ad1c93_repeat(jule::Str,jule::I64);
inline jule::Bool _1c47025c7__has_prefix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1c471294a_has_prefix(jule::Str,jule::Str);
inline jule::Bool _1c471a17d__has_suffix(jule::Str&,jule::Str&,jule::I64);
inline jule::Bool _1c47561a8_has_suffix(jule::Str,jule::Str);
inline jule::I64 _1c478228e_find_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1c4782569_find_last_at(jule::Str,jule::Str,jule::I64);
inline jule::I64 _1c47826ce_find_last(jule::Str,jule::Str);
inline jule::I64 _1c4782de9__find_rune(jule::Slice<jule::U8>&,jule::I32);
inline jule::I64 _1c4783405_find_last_byte(jule::Str,jule::U8);
inline jule::I64 _1c47839aa_find_any(jule::Str,jule::Str);
inline jule::Slice<jule::Str> _1c4783c85_split(jule::Str,jule::Str,jule::I64);
inline jule::Bool _1c4783dea_contains(jule::Str,jule::Str);
inline jule::Bool _1c478459e_contains_any(jule::Str,jule::Str);
inline jule::Str _1c478502d_replace(jule::Str,jule::Str,jule::Str,jule::I64);
inline void _1c478612d__trim_left(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1c47864b3_trim_left(jule::Str,jule::Str);
inline void _1c4786815__trim_right(jule::Slice<jule::U8>&,jule::Slice<jule::U8>&);
inline jule::Str _1c47870da_trim(jule::Str,jule::Str);
inline jule::Str _1c478910e_clean(jule::Str);
inline jule::Str _1c478976e_from_slash(jule::Str);
inline jule::Str _1c4789ac1_join(jule::Slice<jule::Str>);
inline jule::Str _1c4789dce_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1c478a1dc_abs(jule::Str);
inline jule::Str _1c478a4ea_base(jule::Str);
inline jule::Str _1c478a891_dir(jule::Str);
inline jule::Str _1c478ab9e_volume_name(jule::Str);
inline jule::Bool _1c478b9c4_is_path_sep(jule::U8);
inline jule::Bool _1c478bd26_is_abs(jule::Str);
inline jule::I64 _1c478c134_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _1c478c486___abs(jule::Str);
inline jule::Str _1c478c871_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _1c478cb7e___join(jule::Slice<jule::Str>);
inline jule::I64 _1dc2b9ee0_get_last_fs_error(void);
inline jule::I64 _1c484a720_get_last_process_error(void);
inline jule::Slice<char*> _1c484dc95_str_slice_to_cstr_slice(jule::Slice<jule::Str>);
inline jule::I64 _1c484e207_execvp(jule::Str,jule::Slice<jule::Str>);
inline jule::I64 _1c484e6be_execve(jule::Str,jule::Slice<jule::Str>,jule::Slice<jule::Str>);
inline void _1c485047d_exit(jule::I64);
inline jule::Str _1c48506ae_executable(void);
inline jule::Bool _1c47ee0a8_is_std_header_path(jule::Str);
inline jule::Bool _1c47ee21d_is_valid_header_ext(jule::Str);
inline jule::Bool _1c47ee40a_is_valid_cpp_ext(jule::Str);
inline jule::Str _1c4810938_logf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1c4810c8a_arg_to_str(jule::Any);
inline jule::I64 _1c4811098_find_next_fmt(jule::Str);
inline jule::Str _1c48114c7_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1c48126d7_is_top_directive(jule::Str);
inline jule::Bool _1c4814453_is_windows(jule::Str);
inline jule::Bool _1c48147a5_is_darwin(jule::Str);
inline jule::Bool _1c4814ab3_is_linux(jule::Str);
inline jule::Bool _1c4814e15_is_i386(jule::Str);
inline jule::Bool _1c4815223_is_amd64(jule::Str);
inline jule::Bool _1c4815531_is_arm64(jule::Str);
inline jule::Bool _1c481583e_is_unix(jule::Str);
inline jule::Bool _1c4815bd5_is_32bit(jule::Str);
inline jule::Bool _1c4815ee3_is_64bit(jule::Str);
inline void _1c4824b5b_init(void);
inline jule::Bool _1aa076152_is_unary_op(jule::Str);
inline jule::Bool _1aa0764a4_is_bin_op(jule::Str);
inline jule::Bool _1aa076b14_is_str(jule::Str);
inline jule::Bool _1aa076e22_is_raw_str(jule::Str);
inline jule::Bool _1aa077230_is_rune(jule::Str);
inline jule::Bool _1aa0778d4_is_bool(jule::Str);
inline jule::Bool _1aa077be2_is_float(jule::Str);
inline jule::Bool _1aa078000_is_num(jule::Str);
inline jule::Bool _1aa07861b_is_ignore_ident(jule::Str);
inline jule::Bool _1aa078929_is_anon_ident(jule::Str);
inline jule::Bool _1aa079045_is_space(jule::I32);
inline jule::Bool _1aa079474_is_letter(jule::I32);
inline jule::Bool _1aa079a90_is_decimal(jule::U8);
inline jule::Bool _1aa079d9d_is_binary(jule::U8);
inline jule::Bool _1aa07a1ab_is_octal(jule::U8);
inline jule::Bool _1aa07a4b9_is_hex(jule::U8);
inline jule::Bool _1aa07a7c7_is_assign(jule::U64);
inline jule::Bool _1aa07aad5_is_postfix_op(jule::Str);
inline jule::Bool _1aa07ade3_is_assign_op(jule::Str);
inline jule::Ptr<_1aa07b982_File> _1aa07d522_new_file_set(jule::Str);
inline _1c4810251_Log _1aa080249_make_err(jule::I64,jule::I64,jule::Ptr<_1aa07b982_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1aa080678_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
inline jule::Str _1aa080a63_float_fmt_e(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa080e92_float_fmt_p(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa08137c_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa081767_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa081b52_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa0820c5_float_num(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa0823d3_common_num(jule::Slice<jule::U8>&);
inline jule::Str _1aa0826e1_binary_num(jule::Slice<jule::U8>&);
inline jule::Bool _1aa082acb_is_float_fmt_e(jule::U8,jule::I64);
inline jule::Bool _1aa082eb6_is_float_fmt_p(jule::U8,jule::I64);
inline jule::Bool _1aa0833a1_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1aa08378b_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Bool _1aa083b76_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa0840a5_octal_num(jule::Slice<jule::U8>&);
inline jule::Str _1aa0843b3_hex_num(jule::Slice<jule::U8>&);
inline jule::Str _1aa08479d_hex_escape(jule::Slice<jule::U8>&,jule::I64);
inline jule::Str _1aa084b00_big_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1aa084e41_little_unicode_point_escape(jule::Slice<jule::U8>&);
inline jule::Str _1aa08523d_hex_byte_escape(jule::Slice<jule::U8>&);
inline jule::Str _1aa08554b_byte_escape(jule::Slice<jule::U8>&);
inline jule::Slice<_1c4810251_Log> _1aa08b266_lex(jule::Ptr<_1aa07b982_File>,jule::I64);
inline jule::Bool _1dd541bd3_find_module_file(jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>&);
inline jule::Str _1dd542332_find_module_file_deep(jule::Str);
inline jule::Slice<_1c4810251_Log> _1dd544147_check_module_file(jule::Str);
inline jule::Ptr<_1aa5da8b4_FileInfo> _1aa5db200_parse_file(jule::Ptr<_1aa07b982_File>);
inline std::tuple<jule::Ptr<_1dd582707_Ast>,jule::Slice<_1c4810251_Log>> _1aa5db552_parse_fileset(jule::Ptr<_1aa07b982_File>);
inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5dc234_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _1aa5dc4a9_is_st(_1aa07563a_Token,_1aa07563a_Token);
inline jule::Bool _1aa5dc8d8_prev_is_incomplete_expr(jule::Slice<_1aa07563a_Token>&,jule::I64&);
inline std::tuple<jule::I64,jule::Bool> _1aa5dcd06_next_st_pos(jule::Slice<_1aa07563a_Token>&,jule::I64);
inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Bool> _1aa5dd1e1_skip_st(jule::I64&,jule::Slice<_1aa07563a_Token>);
inline jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _1aa5ddb92_split_stmts(jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa5ed278_CallData> _1aa5ed850_get_call_data(jule::Slice<_1aa07563a_Token>&);
inline jule::Slice<_1aa07563a_Token> _1aa5edba2_get_block_expr(jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Slice<_1aa07563a_Token>> _1aa5edeb0_split_colon(jule::Slice<_1aa07563a_Token>&);
inline jule::I64 _1aa5ee312_find_lowest_prec_op(jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1aa08ece7_IdentExpr> _1aa5ee620_build_ident_expr(_1aa07563a_Token&);
inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::I64> _1aa5ee92d_get_range_expr_tokens(jule::Slice<_1aa07563a_Token>&);
inline jule::Bool _1aa60ce36_check_assign_tokens(jule::Slice<_1aa07563a_Token>&);
inline _1c4810251_Log _1aa60e71d_make_err(jule::I64,jule::I64,jule::Ptr<_1aa07b982_File>&,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_1aa07563a_Token> _1aa60ecc3_range(jule::I64&,jule::Str,jule::Str,jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Slice<_1aa07563a_Token>> _1aa6100d1_range_last(jule::Slice<_1aa07563a_Token>&);
inline std::tuple<jule::Slice<jule::Slice<_1aa07563a_Token>>,jule::Slice<_1c4810251_Log>> _1aa6105dc_parts(jule::Slice<_1aa07563a_Token>&,jule::U64,jule::Bool);
inline jule::Str _1aa61093e_get_close_kind_of_brace(jule::Str);
inline _1c4810251_Log _1aa610de5_compiler_err(_1aa07563a_Token&,jule::Str&,jule::Slice<jule::Any>);
inline void _1aa611324_push_suggestion(_1c4810251_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1aa6116ba_tokstoa(jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa625a20_build_void_type(void);
inline jule::Ptr<_1dd583461_TypeDecl> _1aa625c73_build_prim_type(_1aa07563a_Token);
inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::I64> _1aa62615d_split_map_range(jule::Slice<_1aa07563a_Token>&,jule::I64&);
inline jule::I64 _1ac3726e3_leading_zeros64(jule::U64);
inline jule::I64 _1ac373282_trailing_zeros(jule::U64);
inline jule::I64 _1ac373c44_trailing_zeros32(jule::U32);
inline jule::I64 _1ac374052_trailing_zeros64(jule::U64);
inline jule::I64 _1ac379c6c_len32(jule::U32);
inline jule::I64 _1ac37a07a_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ac37aec1_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1ac37cac7_mul64(jule::U64,jule::U64);
inline jule::U32 _1ac2a437d_f32_bits(jule::F32);
inline jule::F32 _1ac2a46d0_f32_from_bits(jule::U32);
inline jule::U64 _1ac2a49dd_f64_bits(jule::F64);
inline jule::F64 _1ac2a4d40_f64_from_bits(jule::U64);
inline std::tuple<jule::F64,jule::I64> _1ac2a70d9_frexp(jule::F64);
inline jule::F64 _1ac2e1d49_nan(void);
inline jule::Bool _1ac30e196_is_nan(jule::F64);
inline jule::F64 _1ac311242_inf(jule::I64);
inline jule::Bool _1ac331185_is_inf(jule::F64,jule::I64);
inline std::tuple<jule::F64,jule::I64> _1ac34a1c1_normalize(jule::F64);
inline jule::F64 _1ac304c08_log(jule::F64);
inline jule::F64 _1ac380e60_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _1ac382a33_modf(jule::F64);
inline jule::F64 _1ac382eb7_log2(jule::F64);
inline jule::Str _1abdcd33c_fmt_float(jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1abe1ec85_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::I64,jule::I64);
inline jule::Slice<jule::U8> _1ac0a8abc_big_ftoa(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline jule::Slice<jule::U8> _1ac19502c_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_1ac3a20d5_DecimalSlice,jule::I64,jule::U8);
inline void _1abdba1e7_round_shortest(_1ac4415e7_Decimal&,jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline jule::Slice<jule::U8> _1abdbea37_fmt_e(jule::Slice<jule::U8>,jule::Bool,_1ac3a20d5_DecimalSlice,jule::I64,jule::U8);
inline jule::Slice<jule::U8> _1ac041ba9_fmt_f(jule::Slice<jule::U8>,jule::Bool,_1ac3a20d5_DecimalSlice,jule::I64);
inline jule::Slice<jule::U8> _1ac094e1b_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline jule::Slice<jule::U8> _1ac148332_fmt_x(jule::Slice<jule::U8>,jule::I64,jule::U8,jule::Bool,jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline jule::I64 _1ac1bc274_min(jule::I64,jule::I64);
inline jule::I64 _1ab0d42e1_max(jule::I64,jule::I64);
inline jule::U8 _1abe0d68b_lower(jule::U8);
inline std::tuple<jule::U64,jule::I64> _1ac28e28b___parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::U64> _1abea2bd6_parse_uint(jule::Str,jule::I64,jule::I64);
inline jule::Exceptional<jule::I64> _1ac05d0e3_parse_int(jule::Str,jule::I64,jule::I64);
inline std::tuple<jule::F64,jule::Bool> _1ac4349b4_eisel_lemire64(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1ac434e8c_eisel_lemire32(jule::U64,jule::I64,jule::Bool);
inline jule::I64 _1ac43670d_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::Bool> _1ac436a4e_special(jule::Str);
inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ac436d5c_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _1ac4387a9_atof64exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _1ac438c71_atof32exact(jule::U64,jule::I64,jule::Bool);
inline std::tuple<jule::F64,jule::I64> _1ac4394be_atof_hex(jule::Str,_1ac3a1bb7_FloatInfo&,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::I64,jule::I64> _1ac439865_atof32(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac439b73_atof64(jule::Str);
inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac43a05d_parse_float_prefix(jule::Str,jule::I64);
inline jule::Exceptional<jule::F64> _1ac43a448_parse_float(jule::Str,jule::I64);
inline void _1ac43ade9_ryu_ftoa_fixed32(_1ac3a20d5_DecimalSlice&,jule::U32,jule::I64,jule::I64);
inline void _1ac43b449_ryu_ftoa_fixed64(_1ac3a20d5_DecimalSlice&,jule::U64,jule::I64,jule::I64);
inline void _1ac43bc63_format_decimal(_1ac3a20d5_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::I64);
inline void _1ac43c2b3_ryu_ftoa_shortest(_1ac3a20d5_DecimalSlice&,jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline jule::I64 _1ac43c5c1_mul_by_log2_log10(jule::I64);
inline jule::I64 _1ac43c8ce_mul_by_log10_log2(jule::I64);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ac43cd96_compute_bounds(jule::U64,jule::I64,_1ac3a1bb7_FloatInfo&);
inline void _1ac43d5e4_ryu_digits(_1ac3a20d5_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _1ac43dd86_ryu_digits32(_1ac3a20d5_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::I64);
inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ac43e34d_mult64bit_pow10(jule::U32,jule::I64,jule::I64);
inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ac43e815_mult128bit_pow10(jule::U64,jule::I64,jule::I64);
inline jule::Bool _1ac43ec00_divisible_by_pow5(jule::U64,jule::I64);
inline std::tuple<jule::U32,jule::U32> _1ac44000d_divmod1e9(jule::U64);
inline void _1ac443484_trim(_1ac4415e7_Decimal&);
inline void _1ac4437d6_right_shift(_1ac4415e7_Decimal&,jule::U64);
inline jule::Bool _1ac443ce2_prefix_is_less_than(jule::Array<jule::U8,800>,jule::I64,jule::Str);
inline void _1ac444144_left_shift(_1ac4415e7_Decimal&,jule::U64);
inline jule::Bool _1ac44452e_should_round_up(_1ac4415e7_Decimal&,jule::I64);
inline jule::Str _1ac4456a6_fmt_uint(jule::U64,jule::I64);
inline jule::Str _1ac445ad5_fmt_int(jule::I64,jule::I64);
inline jule::Str _1ac445de3_itoa(jule::I64);
inline jule::Str _1ac446245_small(jule::I64);
inline jule::Bool _1ac446553_is_power_of_two(jule::I64);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ac446bc4_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::I64,jule::Bool,jule::Bool);
inline void _1ac4dace0_lshift_unsig(_1ac4d0ec2_Const&,_1ac4d0ec2_Const&);
inline void _1ac4db186_rshift_unsig(_1ac4d0ec2_Const&,_1ac4d0ec2_Const&);
inline jule::Str _1ac552a27_real_kind_of(jule::Str);
inline jule::I64 _1ac552cbe_bitsize_of(jule::Str);
inline jule::Str _1ac5530ee_int_from_bits(jule::I64);
inline jule::Str _1ac55340c_uint_from_bits(jule::I64);
inline jule::Str _1ac55371a_float_from_bits(jule::I64);
inline jule::Bool _1ac554463_check_bit_float(jule::Str,jule::I64);
inline jule::I64 _1ac554771_bitsize_of_float(jule::F64);
inline jule::I64 _1ac554a7e_bitsize_of_int(jule::I64);
inline jule::I64 _1ac554d8c_bitsize_of_uint(jule::U64);
inline void _1ac555035_update_target(void);
inline void _1ac5551cd_init(void);
inline jule::F64 _1ac5579e9_min(jule::Str);
inline jule::F64 _1ac557d4b_max(jule::Str);
inline jule::Bool _1ac558324_is_i8_compatible(jule::Str);
inline jule::Bool _1ac558676_is_i16_compatible(jule::Str);
inline jule::Bool _1ac558984_is_i32_compatible(jule::Str);
inline jule::Bool _1ac558cd6_is_i64_compatible(jule::Str);
inline jule::Bool _1ac5590e4_is_u8_compatible(jule::Str);
inline jule::Bool _1ac559402_is_u16_compatible(jule::Str);
inline jule::Bool _1ac559710_is_u32_compatible(jule::Str);
inline jule::Bool _1ac559aa6_is_u64_compatible(jule::Str);
inline jule::Bool _1ac559db4_is_f32_compatible(jule::Str);
inline jule::Bool _1ac55a1c2_is_f64_compatible(jule::Str);
inline jule::Bool _1ac55a5ac_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _1ac55a8ba_is_i16_greater(jule::Str);
inline jule::Bool _1ac55abc8_is_i32_greater(jule::Str);
inline jule::Bool _1ac55aed6_is_i64_greater(jule::Str);
inline jule::Bool _1ac55b2e4_is_u16_greater(jule::Str);
inline jule::Bool _1ac55b723_is_u32_greater(jule::Str);
inline jule::Bool _1ac55ba31_is_u64_greater(jule::Str);
inline jule::Bool _1ac55bd3e_is_f32_greater(jule::Str);
inline jule::Bool _1ac55c14c_is_f64_greater(jule::Str);
inline jule::Bool _1ac55c537_is_greater(jule::Str,jule::Str);
inline jule::Bool _1ac55da66_is_sig_int(jule::Str);
inline jule::Bool _1ac55ddb8_is_unsig_int(jule::Str);
inline jule::Bool _1ac55e1c6_is_int(jule::Str);
inline jule::Bool _1ac55e528_is_float(jule::Str);
inline jule::Bool _1ac55e836_is_num(jule::Str);
inline jule::Bool _1a5890c5c_is_ascii(jule::I32);
inline jule::I32 _1a5891246_to_rune(jule::Slice<jule::U8>);
inline jule::Str _1a58b40b0_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _1a58b4412_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _1a58b4720_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _1a58b4b0a_rune_from_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::Slice<jule::U8> _1a58b4ee5_str_esq_seq(jule::Slice<jule::U8>,jule::I64&);
inline jule::I64 _1a598dad5_find_format_prefix(jule::Slice<jule::U8>&,jule::I64&);
inline jule::Slice<jule::U8> _1a596cb5d_get_format_range(jule::I64&,jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _1a5979340_fmt_by_default(jule::Any&);
inline jule::Slice<jule::U8> _1a596b1ab_apply_fmt_by_default(jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a59831a1_apply_fmt(jule::Slice<jule::U8>&,jule::I64&,jule::Slice<jule::Any>&);
inline jule::Slice<jule::U8> _1a59760d9_format_bytes(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _1a59874d5_format(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ab838072_kind_uses_generics(jule::Ptr<_1a5913e9a_TypeKind>,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>&);
inline jule::Bool _1ab8384e5_parameter_uses_generics(jule::Ptr<_1ab830300_Param>&,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>&);
inline jule::Ptr<_1a5918a0a_TypeSymbol> _1ab83bc35_build_type(jule::Ptr<_1dd583461_TypeDecl>);
inline jule::Ptr<_1a58d1451_Value> _1ab83c087_build_expr(jule::Ptr<_1aa08d334_Expr>);
inline jule::Ptr<_1a5912d12_TypeAlias> _1ab83c395_build_type_alias(jule::Ptr<_1aa09a330_TypeAliasDecl>);
inline jule::Ptr<_1ab80cdd2_Field> _1ab83c6e7_build_field(jule::Ptr<_1aa09d5db_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ab80cdd2_Field>> _1ab83ca05_build_fields(jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>>&);
inline jule::Ptr<_1ab810b3d_Struct> _1ab83cd13_build_struct(jule::Ptr<_1aa09de7c_StructDecl>);
inline jule::Ptr<_1ab830300_Param> _1ab83d121_build_param(jule::Ptr<_1aa096749_ParamDecl>);
inline jule::Slice<jule::Ptr<_1ab830300_Param>> _1ab83d4b7_build_params(jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>&);
inline jule::Ptr<_1ab82e7a5_RetType> _1ab83d7c5_build_ret_type(jule::Ptr<_1aa08ce16_RetTypeDecl>);
inline jule::Ptr<_1ab832324_Fn> _1ab83dad3_build_fn(jule::Ptr<_1aa096b67_FnDecl>);
inline jule::Slice<jule::Ptr<_1ab832324_Fn>> _1ab83dde1_build_methods(jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>&);
inline jule::Ptr<_1ac44770d_Trait> _1ab83e1ee_build_trait(jule::Ptr<_1aa09e631_TraitDecl>);
inline jule::Ptr<_1ac44948a_EnumItem> _1ab83e50c_build_enum_item(jule::Ptr<_1aa09c134_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1ac44948a_EnumItem>> _1ab83e81a_build_enum_items(jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>>&);
inline jule::Ptr<_1ac44a337_Enum> _1ab83eb28_build_enum(jule::Ptr<_1aa09cb7e_EnumDecl>);
inline jule::Ptr<_1a588601b_Var> _1ab840057_build_var(jule::Ptr<_1aa097085_VarDecl>);
inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ab840365_build_vars(jule::Slice<jule::Ptr<_1aa097085_VarDecl>>);
inline jule::Ptr<_1ac44c05e_Impl> _1ab840673_build_impl(jule::Ptr<_1aa09ecd5_Impl>);
inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac539d3e_new_scope_checker_base(jule::Ptr<_1a5864747_Sema>&,jule::Ptr<_1ab836218_FnIns>);
inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac514c09_new_scope_checker(jule::Ptr<_1a5864747_Sema>&,jule::Ptr<_1ab836218_FnIns>);
inline jule::Ptr<_1ac565397_ScopeLabel> _1ac4dc96d_find_label_parent(jule::Str,jule::Ptr<_1ac565bd3_ScopeChecker>);
inline jule::Bool _1ac507c30_stmt_is_goto_scope(jule::Any&,jule::Ptr<_1ac56022c_Scope>&);
inline jule::I64 _1ac51eb15_count_match_type(jule::Ptr<_1ac563ede_Match>&,jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Slice<jule::Ptr<_1a58cee44_Data>> _1ac548105_get_datas_from_tuple_data(jule::Ptr<_1a58cee44_Data>&);
inline jule::Slice<jule::Any> _1ac520c59_get_expr_models(jule::Any&);
inline jule::Bool _1ac524785_check_mut(jule::Ptr<_1a5864747_Sema>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Bool _1ac525368_check_assign(jule::Ptr<_1a5864747_Sema>&,jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a58cee44_Data>,_1aa07563a_Token);
inline jule::Bool _1ac52649b_is_valid_ast_st_for_next_st(jule::Any&);
inline jule::Bool _1ac5295d1_is_valid_st_for_next_st(jule::Any&);
inline jule::Bool _1ac52a1b4_st_is_def(jule::Any&);
inline jule::Ptr<_1a588601b_Var> _1ac57d6bd_find_var_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1a5912d12_TypeAlias> _1ac57dc1d_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ab810b3d_Struct> _1ac57e1c4_find_struct_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ab832324_Fn> _1ac57e6d0_find_fn_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str,jule::Bool);
inline jule::Ptr<_1ac44770d_Trait> _1ac57eaba_find_trait_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str);
inline jule::Ptr<_1ac44a337_Enum> _1ac57eea5_find_enum_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Str);
inline jule::Bool _1ac587166_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1ac5885a7_is_valid_model_for_ref(jule::Any&);
inline _1c4810251_Log _1ac588b07_compiler_err(_1aa07563a_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1ac588ee2_imp_is_lookupable(jule::Ptr<_1ac580d41_ImportInfo>&,jule::Str);
inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ac589344_build_ret_vars(jule::Ptr<_1ab836218_FnIns>&);
inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ac589652_build_param_vars(jule::Ptr<_1ab836218_FnIns>&);
inline jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _1ac5899a4_build_generic_type_aliases(jule::Ptr<_1ab836218_FnIns>&);
inline jule::Ptr<_1a58c88ee_SymbolTable> _1ac589d7d_find_file(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>&,jule::Ptr<_1aa07b982_File>&);
inline void _1a58641a3_push_suggestion(_1c4810251_Log*,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _1a5891730_get_result_types(jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a589290c_trait_has_reference_receiver(jule::Ptr<_1ac44770d_Trait>&);
inline jule::Bool _1a589766a_float_assignable(jule::Str,jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a58a50c3_sig_assignable(jule::Str,jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a58b527b_unsig_assignable(jule::Str,jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a58b5600_int_assignable(jule::Str,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1dd583043_Directive> _1a590c636_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline jule::Any _1a590ca65_find_builtins_import(jule::Str,jule::Ptr<_1ac580d41_ImportInfo>);
inline void _1a590ccda_fit_bitsize(jule::Ptr<_1a58cee44_Data>&);
inline void _1a590d181_make_struct_lit_alloc(jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1ab818508_StructLitExprModel>&);
inline jule::Ptr<_1a588601b_Var> _1a590d56b_build_error_var(jule::Ptr<_1ac56022c_Scope>&,jule::Ptr<_1aa091bc8_FnCallExpr>&);
inline jule::Any _1a590d956_find_builtins_sema(jule::Str,jule::Ptr<_1a5864747_Sema>);
inline jule::Bool _1a590dc64_is_ok_for_shifting(jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a590e10a_is_instanced_struct(jule::Ptr<_1ab814515_StructIns>);
inline jule::Bool _1a590e47e_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a58cee44_Data>&);
inline void _1a590e6c1_apply_cast_kind_model(jule::Ptr<_1a58cee44_Data>&);
inline void _1a590e946_apply_cast_kind(jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a590eb77_build_void_data(void);
inline jule::Str _1a590eec9_check_data_for_integer_indexing(jule::Ptr<_1a58cee44_Data>&);
inline void _1a591035e_apply_cast_model_by_enum(jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1ac44a337_Enum>);
inline void _1a59106a0_cast_const_by_type(jule::Str&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a5912130_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline jule::Bool _1a59242eb_can_get_ptr(jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a5924609_is_valid_for_sptr_type(jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a592495b_is_valid_for_ref(jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Bool _1a5924cad_is_builtin_str_convertable(jule::Ptr<_1a5913e9a_TypeKind>&);
inline jule::Str _1a59250ee_build_link_path_by_tokens(jule::Slice<_1aa07563a_Token>&);
inline jule::Ptr<_1a591970e_Prim> _1a59253eb_build_prim_type(jule::Str);
inline jule::Ptr<_1ab810b3d_Struct> _1a5925792_get_struct_from_kind(jule::Ptr<_1a5913e9a_TypeKind>);
inline jule::Bool _1a5925aa0_is_prim(jule::Str);
inline void _1a59307ad_apply_implicit_cast(jule::Ptr<_1a5913e9a_TypeKind>&,jule::Ptr<_1a58cee44_Data>&);
inline std::tuple<jule::Ptr<_1a58c88ee_SymbolTable>,jule::Slice<_1c4810251_Log>> _1a5933d44_build_symbols(jule::Ptr<_1dd582707_Ast>&,jule::Trait<_1ac57d25b_Importer>&,jule::Ptr<_1ab840d16_SymbolBuilder>);
inline std::tuple<jule::Ptr<_1ac58451a_Package>,jule::Slice<_1c4810251_Log>> _1a5934350___analyze_package(jule::Slice<jule::Ptr<_1dd582707_Ast>>&,jule::Trait<_1ac57d25b_Importer>&,jule::I64&);
inline std::tuple<jule::Ptr<_1ac58451a_Package>,jule::Slice<_1c4810251_Log>> _1a5934817_analyze_package(jule::Slice<jule::Ptr<_1dd582707_Ast>>,jule::Trait<_1ac57d25b_Importer>,jule::I64);
inline jule::Ptr<_1ab836218_FnIns> _1a5939267_find_builtin_fn(jule::Str);
inline jule::Ptr<_1a5912d12_TypeAlias> _1a595be9e_find_builtin_type_alias(jule::Str);
inline jule::Ptr<_1ac44770d_Trait> _1a598764a_find_builtin_trait(jule::Str);
inline jule::Any _1a593bea1_find_builtin_def(jule::Str);
inline jule::Any _1a593ccb5_find_builtin_def_std_debug(jule::Str);
inline jule::Any _1a593dac9_find_builtin_def_std_mem(jule::Str);
inline jule::Any _1a59410a4_find_builtin_def_std_jule_integrated(jule::Str);
inline jule::Any _1a595a94d_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ptr<_1a58cee44_Data> _1a5960766_builtin_caller_common_plain(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5938101_builtin_caller_common(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5936000_builtin_caller_common_mut(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5936165_builtin_caller_error(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&);
inline jule::Ptr<_1a58cee44_Data> _1a59763b4_builtin_caller_out(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5976529_builtin_caller_outln(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5935b48_builtin_caller_new(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5935cad_builtin_caller_panic(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a597742b_builtin_caller_make(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5977591_builtin_caller_append(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a5977706_builtin_caller_copy(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a597786b_builtin_caller_clone(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599a0a8_builtin_caller_assert(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599a5b4_builtin_caller_std_mem_size_of(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599aaae_builtin_caller_std_mem_align_of(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599b0a9_builtin_caller_std_mem_free(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599b5c6_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599bac1_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599c099_builtin_caller_std_debug_out(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline jule::Ptr<_1a58cee44_Data> _1a599c594_builtin_caller_std_debug_outln(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&);
inline std::tuple<jule::Bool,jule::Bool> _1dd5317d8_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _1dd5319c5_check_arch(jule::Str);
inline jule::Bool _1dd531be5_is_pass_file_annotation(jule::Str);
inline void _1dd5333cd_set_os_vars(jule::Slice<jule::Str>&);
inline void _1dd533697_set_arch_vars(jule::Slice<jule::Str>&);
inline void _1dd5339e9_init_vars(jule::Slice<jule::Str>&,_1dd532d5b_CompileInfo&);
inline jule::Slice<jule::U8> _1a599cb9e_read_buff(jule::Str);
inline _1c4810251_Log _1a599ceac_flat_compiler_err(jule::Str);
inline void _1a59a3006_push_passes(jule::Ptr<_1ac58451a_Package>&,jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1a59a3435_get_all_unique_passes(jule::Ptr<_1ac58451a_Package>&,jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>);
inline _1dd532d5b_CompileInfo _1a59a3666_build_compile_info(void);
inline jule::Ptr<_1dd583043_Directive> _1a59a6a43_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline jule::Bool _1a59a6e72_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline jule::Bool _1a59a735c_is_exist(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _1a59a76ae_is_dead(jule::Any);
inline void _1a59a7a11_drop_ref(jule::Slice<jule::Any>&,jule::I64);
inline jule::Bool _1a59a7d63_is_all_references_are_dead(jule::Ptr<_1ab839d43_ReferenceStack>);
inline jule::Bool _1a59a8160_is_fn_dead(jule::Ptr<_1ab836218_FnIns>);
inline jule::Bool _1a59a8506_is_var_dead(jule::Ptr<_1a588601b_Var>);
inline jule::Bool _1a59a8e30_is_struct_dead(jule::Ptr<_1ab814515_StructIns>);
inline jule::Bool _1a59a923d_is_trait_dead(jule::Ptr<_1ac44770d_Trait>);
inline void _1a59a9507_eliminate_dead_functions(jule::Slice<jule::Ptr<_1ab832324_Fn>>&);
inline void _1a59a976b_eliminate_dead_globals(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59a9a57_eliminate_dead_functions_package(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59aa3b5_keep_alive_init(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59aa63a_eliminate_package(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59aa8b0_eliminate_defines(jule::Ptr<_1a59a1895_IR>&);
inline void _1a59acd68_eliminate_dead_code_of_scope(jule::Ptr<_1ac56022c_Scope>);
inline void _1a59ad165_eliminate_scope_functions(jule::Slice<jule::Ptr<_1ab832324_Fn>>&);
inline void _1a59ad440_eliminate_functions_scope_package(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59ad71a_eliminate_scope_package(jule::Ptr<_1ac58451a_Package>&);
inline void _1a59ad97e_eliminate_scopes(jule::Ptr<_1a59a1895_IR>&);
inline void _1a59d2057_throw(jule::Str);
inline jule::Bool _1a632724d_is_std_package(jule::Str,jule::Str);
inline jule::Bool _1a6327616_is_constant_valid_conditional_case(jule::Ptr<_1ac56064a_If>&);
inline jule::Bool _1a63278e1_is_unreachable_expr(jule::Any&);
inline jule::Bool _1a6327c87_is_constant_valid_match_case(jule::Ptr<_1ac56463d_Case>&);
inline jule::Bool _1a63280c8_is_unreachable_conditional_case(jule::Ptr<_1ac56064a_If>&);
inline jule::Bool _1a6328419_is_unreachable_match_case(jule::Ptr<_1ac56463d_Case>&);
inline std::tuple<jule::Bool,jule::U64> _1a63322d0_check_for_bit_shift_opt(jule::Ptr<_1ab816825_OperandExprModel>&,jule::Ptr<_1ab816825_OperandExprModel>&);
inline jule::U64 _1a639c180_unix(void);
inline jule::U64 _1a639c56a_unix_year_to_seconds(jule::U64,jule::Bool&);
inline jule::U64 _1a639c999_unix_month_to_seconds(jule::U64,jule::Bool);
inline jule::Bool _1a62be217_is_copy_optimizable(jule::Ptr<_1a58cee44_Data>&);
inline jule::Bool _1a62c0603_is_iter_copy_optimizable(jule::Ptr<_1a58cee44_Data>&,jule::Ptr<_1a588601b_Var>&);
inline jule::Str _1a633ed37_concat_all_parts(jule::Slice<_1aa07563a_Token>);
inline jule::Str _1a6340189_decompose_common_esq(jule::U8);
inline jule::Str _1a6340497_sbtoa(jule::U8);
inline jule::Str _1a63407e9_cstr_bytes(jule::Slice<jule::U8>);
inline jule::Str _1a6340b07_cstr_lit(jule::Slice<jule::U8>);
inline jule::Str _1a6340ee2_ftoa(jule::F64,jule::I64);
inline jule::Str _1a6341300_itoa(jule::I64);
inline jule::Str _1a6341696_utoa(jule::U64);
inline jule::Bool _1a63419a4_is_forwarded(jule::Ptr<_1ac56022c_Scope>&);
inline jule::Bool _1a6341d06_is_builtin_call_has_debuginf(jule::Ptr<_1ab81a0ed_FnCallExprModel>&);
inline jule::Bool _1a63a68c6_is_cpp_header_file(jule::Str);
inline jule::Ptr<_1dd583043_Directive> _1a63a782d_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline jule::Bool _1a63a7c6d_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>&,jule::Str);
inline void _1c47e50c1_print_error_message(jule::Str);
inline void _1c4794d0c_help(jule::Slice<jule::Str>&);
inline void _1c47cba25_version(jule::Slice<jule::Str>&);
inline void _1c47d1024_tool_distos(void);
inline void _1c47da56c_tool_distarch(void);
inline void _1c47e2c28_tool(jule::Slice<jule::Str>&);
inline void _1c4840baa_julenv(jule::Slice<jule::Str>&);
inline void _1c4793756_mod(jule::Slice<jule::Str>&);
inline jule::Bool _1c47dd262_process_command(jule::Slice<jule::Str>&);
inline void _1c47ddd45_show_info(void);
void entry_point(void);
inline void _1a5a94119_init(void);
inline void _1a63b28e3_write_output(jule::Str,jule::Str);
inline void _1a63b8c7e_clear_objects(void);
inline void _1a63c7d26_compile_ir(jule::Str,jule::Str);
inline void _1a63c862e_do_spell(jule::Str,jule::Str,jule::Str);
inline jule::Bool _1a63c8794_is_cpp_source_file(jule::Str);
inline void _1a63c8909_push_comp_cmd_clang(jule::Str&);
inline void _1a63c8a6e_push_comp_cmd_gcc(jule::Str&);
inline std::tuple<jule::Str,jule::Str> _1a63c8bd4_gen_compile_cmd(jule::Str,jule::Ptr<_1a59a1895_IR>&);
inline jule::Str _1a63c8d49_get_compile_path(void);
inline void _1a63c8eae_apply_target_independent_optimizations(jule::Ptr<_1a59a1895_IR>&);
inline void _1a63c9124_check_compiler_flag(void);
inline void _1a63c9289_check_target_arch(jule::Str);
inline void _1a63c93ee_check_target_os(jule::Str);
inline void _1a63c9564_check_target_flag(jule::Str&);
inline void _1a63c990a_check_opt_flag(jule::Str&);
inline void _1a63c9a70_check_cpp_std_flag(void);
inline jule::Slice<jule::Str> _1a63c9bd5_check_flags(jule::Slice<jule::Str>&);
inline void _1a63c9d4a_setup_sema_flags(jule::I64&);
inline jule::Ptr<_1a59a1895_IR> _1a63c9eb0_build_ir(jule::Slice<jule::Str>&);
inline void _1a63ca125_compile_command(jule::Slice<jule::Str>&);


struct _1a5993d1b_ReaderMptrData {
	jule::Exceptional<jule::I64>(*_1a5993b95_read)(jule::Trait<_1a5993d1b_Reader>,jule::Slice<jule::U8>);
};

struct _1a5994327_WriterMptrData {
	jule::Exceptional<jule::I64>(*_1a59941a1_write)(jule::Trait<_1a5994327_Writer>,jule::Slice<jule::U8>);
};

struct _1a5994a42_WriterCloserMptrData {
	jule::Exceptional<jule::I64>(*_1a5994679_write)(jule::Trait<_1a5994a42_WriterCloser>,jule::Slice<jule::U8>);
	jule::VoidExceptional(*_1a59948bb_close)(jule::Trait<_1a5994a42_WriterCloser>);
};

struct _1a5995416_StreamMptrData {
	jule::Exceptional<jule::I64>(*_1a5994dd8_read)(jule::Trait<_1a5995416_Stream>,jule::Slice<jule::U8>);
	jule::Exceptional<jule::I64>(*_1a5995290_write)(jule::Trait<_1a5995416_Stream>,jule::Slice<jule::U8>);
};

struct _1ac57d25b_ImporterMptrData {
	void(*_1ac57bd3c_set_mod_path)(jule::Trait<_1ac57d25b_Importer>,jule::Str);
	jule::Str(*_1ac57c0c3_get_mod_path)(jule::Trait<_1ac57d25b_Importer>);
	jule::Str(*_1ac57c47a_mod_by_id)(jule::Trait<_1ac57d25b_Importer>,jule::I64);
	jule::Ptr<_1ac580d41_ImportInfo>(*_1ac57c832_get_import)(jule::Trait<_1ac57d25b_Importer>,jule::Str);
	std::tuple<jule::Slice<jule::Ptr<_1dd582707_Ast>>,jule::Slice<_1c4810251_Log>>(*_1ac57ccb6_import_package)(jule::Trait<_1ac57d25b_Importer>,jule::Str,jule::Bool);
	void(*_1ac57d0d5_imported)(jule::Trait<_1ac57d25b_Importer>,jule::Ptr<_1ac580d41_ImportInfo>);
};

struct _1a591395b_KindMptrData {
	jule::Str(*_1a591342d_to_str)(jule::Trait<_1a591395b_Kind>);
	jule::Bool(*_1a59137d5_equals)(jule::Trait<_1a591395b_Kind>,jule::Ptr<_1a5913e9a_TypeKind>);
};

struct _1a5932ea8_LookupMptrData {
	jule::Ptr<_1ac580d41_ImportInfo>(*_1a5930dda_find_package)(jule::Trait<_1a5932ea8_Lookup>,jule::Str);
	jule::Ptr<_1ac580d41_ImportInfo>(*_1a5931292_select_package)(jule::Trait<_1a5932ea8_Lookup>,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>);
	jule::Ptr<_1a588601b_Var>(*_1a5931726_find_var)(jule::Trait<_1a5932ea8_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1a5912d12_TypeAlias>(*_1a5931baa_find_type_alias)(jule::Trait<_1a5932ea8_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ab810b3d_Struct>(*_1a593213e_find_struct)(jule::Trait<_1a5932ea8_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ab832324_Fn>(*_1a59325c3_find_fn)(jule::Trait<_1a5932ea8_Lookup>,jule::Str,jule::Bool);
	jule::Ptr<_1ac44770d_Trait>(*_1a593297a_find_trait)(jule::Trait<_1a5932ea8_Lookup>,jule::Str);
	jule::Ptr<_1ac44a337_Enum>(*_1a5932d32_find_enum)(jule::Trait<_1a5932ea8_Lookup>,jule::Str);
};

struct _1a63c0dda_CommonFlagMptrData {
	jule::Str(*_1a63c07ad_name)(jule::Trait<_1a63c0dda_CommonFlag>);
	jule::I32(*_1a63c0923_short)(jule::Trait<_1a63c0dda_CommonFlag>);
	jule::Str(*_1a63c0a88_what)(jule::Trait<_1a63c0dda_CommonFlag>);
	void(*_1a63c0c75_reset)(jule::Trait<_1a63c0dda_CommonFlag>);
};



inline jule::Exceptional<jule::I64> _1a5993b95_read_0(jule::Trait<_1a5993d1b_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a5992d2b_read(_self_.safe_ptr<_1a5992699_FileStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a5993b95_read_1(jule::Trait<_1a5993d1b_Reader> _self_,jule::Slice<jule::U8> _731_buff) {
	return _1a5996219_read(_self_.safe_ptr<_1a59957ce_ByteStream>(), _731_buff);
}
inline jule::Exceptional<jule::I64> _1a59941a1_write_0(jule::Trait<_1a5994327_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a5993128_write(_self_.safe_ptr<_1a5992699_FileStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a59941a1_write_1(jule::Trait<_1a5994327_Writer> _self_,jule::Slice<jule::U8> _1228_buff) {
	return _1a59965c1_write(_self_.safe_ptr<_1a59957ce_ByteStream>(), _1228_buff);
}
inline jule::Exceptional<jule::I64> _1a5994dd8_read_0(jule::Trait<_1a5995416_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a5992d2b_read(_self_.safe_ptr<_1a5992699_FileStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a5995290_write_0(jule::Trait<_1a5995416_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a5993128_write(_self_.safe_ptr<_1a5992699_FileStream>(), _2428_buff);
}
inline jule::Exceptional<jule::I64> _1a5994dd8_read_1(jule::Trait<_1a5995416_Stream> _self_,jule::Slice<jule::U8> _2331_buff) {
	return _1a5996219_read(_self_.safe_ptr<_1a59957ce_ByteStream>(), _2331_buff);
}
inline jule::Exceptional<jule::I64> _1a5995290_write_1(jule::Trait<_1a5995416_Stream> _self_,jule::Slice<jule::U8> _2428_buff) {
	return _1a59965c1_write(_self_.safe_ptr<_1a59957ce_ByteStream>(), _2428_buff);
}
inline void _1ac57bd3c_set_mod_path_0(jule::Trait<_1ac57d25b_Importer> _self_,jule::Str _1735_path) {
	_1a599e431_set_mod_path(_self_.safe_ptr<_1a599d551_JuleImporter>(), _1735_path);
}
inline jule::Str _1ac57c0c3_get_mod_path_0(jule::Trait<_1ac57d25b_Importer> _self_) {
	return _1a599e70b_get_mod_path(_self_.safe_ptr<_1a599d551_JuleImporter>());
}
inline jule::Str _1ac57c47a_mod_by_id_0(jule::Trait<_1ac57d25b_Importer> _self_,jule::I64 _2328_id) {
	return _1a599eab3_mod_by_id(_self_.safe_ptr<_1a599d551_JuleImporter>(), _2328_id);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1ac57c832_get_import_0(jule::Trait<_1ac57d25b_Importer> _self_,jule::Str _2833_path) {
	return _1a599ee6a_get_import(_self_.safe_ptr<_1a599d551_JuleImporter>(), _2833_path);
}
inline std::tuple<jule::Slice<jule::Ptr<_1dd582707_Ast>>,jule::Slice<_1c4810251_Log>> _1ac57ccb6_import_package_0(jule::Trait<_1ac57d25b_Importer> _self_,jule::Str _3337_path,jule::Bool _3348_update_mod) {
	return _1a59a03ee_import_package(_self_.safe_ptr<_1a599d551_JuleImporter>(), _3337_path, _3348_update_mod);
}
inline void _1ac57d0d5_imported_0(jule::Trait<_1ac57d25b_Importer> _self_,jule::Ptr<_1ac580d41_ImportInfo> _3635__0) {
	_1a59a071d_imported(_self_.safe_ptr<_1a599d551_JuleImporter>(), _3635__0);
}
inline jule::Str _1a591342d_to_str_0(jule::Trait<_1a591395b_Kind> _self_) {
	return _1ab814b31_to_str(_self_.safe_ptr<_1ab814515_StructIns>());
}
inline jule::Bool _1a59137d5_equals_0(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1ab814ed8_equals(_self_.data.as<_1ab814515_StructIns>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_1(jule::Trait<_1a591395b_Kind> _self_) {
	return _1ab8367e0_to_str(_self_.safe_ptr<_1ab836218_FnIns>());
}
inline jule::Bool _1a59137d5_equals_1(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1ab836b97_equals(_self_.data.as<_1ab836218_FnIns>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_2(jule::Trait<_1a591395b_Kind> _self_) {
	return _1ac447d3a_to_str(_self_.safe_ptr<_1ac44770d_Trait>());
}
inline jule::Bool _1a59137d5_equals_2(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1ac4481e2_equals(_self_.data.as<_1ac44770d_Trait>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_3(jule::Trait<_1a591395b_Kind> _self_) {
	return _1ac44a90e_to_str(_self_.safe_ptr<_1ac44a337_Enum>());
}
inline jule::Bool _1a59137d5_equals_3(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1ac44acb6_equals(_self_.data.as<_1ac44a337_Enum>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_4(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a59145b6_to_str(_self_.safe_ptr<_1a5913e9a_TypeKind>());
}
inline jule::Bool _1a59137d5_equals_4(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a591496d_equals(_self_.data.as<_1a5913e9a_TypeKind>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_5(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a5919cd6_to_str(_self_.safe_ptr<_1a591970e_Prim>());
}
inline jule::Bool _1a59137d5_equals_5(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a591a18d_equals(_self_.data.as<_1a591970e_Prim>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_6(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a591dd40_to_str(_self_.safe_ptr<_1a591d768_Sptr>());
}
inline jule::Bool _1a59137d5_equals_6(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a591e1e7_equals(_self_.data.as<_1a591d768_Sptr>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_7(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a591eba9_to_str(_self_.safe_ptr<_1a591e549_Slc>());
}
inline jule::Bool _1a59137d5_equals_7(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a5920061_equals(_self_.data.as<_1a591e549_Slc>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_8(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a5920a23_to_str(_self_.safe_ptr<_1a59203b3_Tuple>());
}
inline jule::Bool _1a59137d5_equals_8(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a5920dca_equals(_self_.data.as<_1a59203b3_Tuple>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_9(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a5921903_to_str(_self_.safe_ptr<_1a592132b_Map>());
}
inline jule::Bool _1a59137d5_equals_9(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a5921caa_equals(_self_.data.as<_1a592132b_Map>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_10(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a59228d2_to_str(_self_.safe_ptr<_1a592230a_Arr>());
}
inline jule::Bool _1a59137d5_equals_10(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a5922c89_equals(_self_.data.as<_1a592230a_Arr>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_11(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a59236b3_to_str(_self_.safe_ptr<_1a59230db_Ptr>());
}
inline jule::Bool _1a59137d5_equals_11(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a5923a6a_equals(_self_.data.as<_1a59230db_Ptr>(), _5926_other);
}
inline jule::Str _1a591342d_to_str_12(jule::Trait<_1a591395b_Kind> _self_) {
	return _1a63a8653_to_str(_self_.safe_ptr<_1a63a7ee3_CustomType>());
}
inline jule::Bool _1a59137d5_equals_12(jule::Trait<_1a591395b_Kind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5926_other) {
	return _1a63a8a0a_equals(_self_.data.as<_1a63a7ee3_CustomType>(), _5926_other);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5930dda_find_package_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _935_ident) {
	return _1ac4edb16_find_package(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _935_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5931292_select_package_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _1337_selector) {
	return _1ac501421_select_package(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _1337_selector);
}
inline jule::Ptr<_1a588601b_Var> _1a5931726_find_var_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ac5476ba_find_var(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5931baa_find_type_alias_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ac566101_find_type_alias(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ab810b3d_Struct> _1a593213e_find_struct_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ac566266_find_struct(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ab832324_Fn> _1a59325c3_find_fn_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ac566662_find_fn(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac44770d_Trait> _1a593297a_find_trait_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3333_ident) {
	return _1ac566a19_find_trait(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _3333_ident);
}
inline jule::Ptr<_1ac44a337_Enum> _1a5932d32_find_enum_0(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3732_ident) {
	return _1ac566dc1_find_enum(_self_.safe_ptr<_1ac565bd3_ScopeChecker>(), _3732_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5930dda_find_package_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _935_ident) {
	return _1ac5815e4_find_package(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _935_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5931292_select_package_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _1337_selector) {
	return _1ac58199b_select_package(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _1337_selector);
}
inline jule::Ptr<_1a588601b_Var> _1a5931726_find_var_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ac581e30_find_var(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5931baa_find_type_alias_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ac5823b4_find_type_alias(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ab810b3d_Struct> _1a593213e_find_struct_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ac582848_find_struct(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ab832324_Fn> _1a59325c3_find_fn_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ac582ccc_find_fn(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac44770d_Trait> _1a593297a_find_trait_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3333_ident) {
	return _1ac583184_find_trait(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _3333_ident);
}
inline jule::Ptr<_1ac44a337_Enum> _1a5932d32_find_enum_1(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3732_ident) {
	return _1ac58353b_find_enum(_self_.safe_ptr<_1ac580d41_ImportInfo>(), _3732_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5930dda_find_package_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _935_ident) {
	return _1ac584c79_find_package(_self_.safe_ptr<_1ac58451a_Package>(), _935_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5931292_select_package_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _1337_selector) {
	return _1ac585131_select_package(_self_.safe_ptr<_1ac58451a_Package>(), _1337_selector);
}
inline jule::Ptr<_1a588601b_Var> _1a5931726_find_var_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1ac5855b5_find_var(_self_.safe_ptr<_1ac58451a_Package>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5931baa_find_type_alias_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1ac585a49_find_type_alias(_self_.safe_ptr<_1ac58451a_Package>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ab810b3d_Struct> _1a593213e_find_struct_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1ac585ecd_find_struct(_self_.safe_ptr<_1ac58451a_Package>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ab832324_Fn> _1a59325c3_find_fn_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1ac586462_find_fn(_self_.safe_ptr<_1ac58451a_Package>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac44770d_Trait> _1a593297a_find_trait_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3333_ident) {
	return _1ac586819_find_trait(_self_.safe_ptr<_1ac58451a_Package>(), _3333_ident);
}
inline jule::Ptr<_1ac44a337_Enum> _1a5932d32_find_enum_2(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3732_ident) {
	return _1ac586bc1_find_enum(_self_.safe_ptr<_1ac58451a_Package>(), _3732_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5930dda_find_package_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _935_ident) {
	return _1a5864eea_find_package(_self_.safe_ptr<_1a5864747_Sema>(), _935_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5931292_select_package_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _1337_selector) {
	return _1a58653a2_select_package(_self_.safe_ptr<_1a5864747_Sema>(), _1337_selector);
}
inline jule::Ptr<_1a588601b_Var> _1a5931726_find_var_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a5865836_find_var(_self_.safe_ptr<_1a5864747_Sema>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5931baa_find_type_alias_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a5865cba_find_type_alias(_self_.safe_ptr<_1a5864747_Sema>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ab810b3d_Struct> _1a593213e_find_struct_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a586624e_find_struct(_self_.safe_ptr<_1a5864747_Sema>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ab832324_Fn> _1a59325c3_find_fn_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a58666d3_find_fn(_self_.safe_ptr<_1a5864747_Sema>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac44770d_Trait> _1a593297a_find_trait_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3333_ident) {
	return _1a5866a8a_find_trait(_self_.safe_ptr<_1a5864747_Sema>(), _3333_ident);
}
inline jule::Ptr<_1ac44a337_Enum> _1a5932d32_find_enum_3(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3732_ident) {
	return _1a5866e42_find_enum(_self_.safe_ptr<_1a5864747_Sema>(), _3732_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5930dda_find_package_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _935_ident) {
	return _1a58c91a2_find_package(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _935_ident);
}
inline jule::Ptr<_1ac580d41_ImportInfo> _1a5931292_select_package_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _1337_selector) {
	return _1a58c9559_select_package(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _1337_selector);
}
inline jule::Ptr<_1a588601b_Var> _1a5931726_find_var_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _1731_ident,jule::Bool _1743_cpp_linked) {
	return _1a58c99dd_find_var(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _1731_ident, _1743_cpp_linked);
}
inline jule::Ptr<_1a5912d12_TypeAlias> _1a5931baa_find_type_alias_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2138_ident,jule::Bool _2150_cpp_linked) {
	return _1a58c9e72_find_type_alias(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _2138_ident, _2150_cpp_linked);
}
inline jule::Ptr<_1ab810b3d_Struct> _1a593213e_find_struct_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2534_ident,jule::Bool _2546_cpp_linked) {
	return _1a58ca406_find_struct(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _2534_ident, _2546_cpp_linked);
}
inline jule::Ptr<_1ab832324_Fn> _1a59325c3_find_fn_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _2930_ident,jule::Bool _2942_cpp_linked) {
	return _1a58ca88a_find_fn(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _2930_ident, _2942_cpp_linked);
}
inline jule::Ptr<_1ac44770d_Trait> _1a593297a_find_trait_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3333_ident) {
	return _1a58cac42_find_trait(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _3333_ident);
}
inline jule::Ptr<_1ac44a337_Enum> _1a5932d32_find_enum_4(jule::Trait<_1a5932ea8_Lookup> _self_,jule::Str _3732_ident) {
	return _1a58cb0e9_find_enum(_self_.safe_ptr<_1a58c88ee_SymbolTable>(), _3732_ident);
}
inline jule::Str _1a63c07ad_name_0(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8ced34d_name(_self_.safe_ptr<_1a63c12d6_Flag_0>());
}
inline jule::I32 _1a63c0923_short_0(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8ced78d_short(_self_.safe_ptr<_1a63c12d6_Flag_0>());
}
inline jule::Str _1a63c0a88_what_0(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8ced4b3_what(_self_.safe_ptr<_1a63c12d6_Flag_0>());
}
inline void _1a63c0c75_reset_0(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	_1a8ced628_reset(_self_.safe_ptr<_1a63c12d6_Flag_0>());
}
inline jule::Str _1a63c07ad_name_1(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d01681_name(_self_.safe_ptr<_1a63c12d6_Flag_1>());
}
inline jule::I32 _1a63c0923_short_1(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d013d9_short(_self_.safe_ptr<_1a63c12d6_Flag_1>());
}
inline jule::Str _1a63c0a88_what_1(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8ced914_what(_self_.safe_ptr<_1a63c12d6_Flag_1>());
}
inline void _1a63c0c75_reset_1(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	_1a8d00097_reset(_self_.safe_ptr<_1a63c12d6_Flag_1>());
}
inline jule::Str _1a63c07ad_name_2(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d04b90_name(_self_.safe_ptr<_1a63c12d6_Flag_2>());
}
inline jule::I32 _1a63c0923_short_2(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d048e8_short(_self_.safe_ptr<_1a63c12d6_Flag_2>());
}
inline jule::Str _1a63c0a88_what_2(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d01e23_what(_self_.safe_ptr<_1a63c12d6_Flag_2>());
}
inline void _1a63c0c75_reset_2(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	_1a8d035a6_reset(_self_.safe_ptr<_1a63c12d6_Flag_2>());
}
inline jule::Str _1a63c07ad_name_3(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d05498_name(_self_.safe_ptr<_1a63c12d6_Flag_3>());
}
inline jule::I32 _1a63c0923_short_3(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d07e4b_short(_self_.safe_ptr<_1a63c12d6_Flag_3>());
}
inline jule::Str _1a63c0a88_what_3(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d081e3_what(_self_.safe_ptr<_1a63c12d6_Flag_3>());
}
inline void _1a63c0c75_reset_3(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	_1a8d06b09_reset(_self_.safe_ptr<_1a63c12d6_Flag_3>());
}
inline jule::Str _1a63c07ad_name_4(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d0b702_name(_self_.safe_ptr<_1a63c12d6_Flag_4>());
}
inline jule::I32 _1a63c0923_short_4(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d0b45a_short(_self_.safe_ptr<_1a63c12d6_Flag_4>());
}
inline jule::Str _1a63c0a88_what_4(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	return _1a8d08985_what(_self_.safe_ptr<_1a63c12d6_Flag_4>());
}
inline void _1a63c0c75_reset_4(jule::Trait<_1a63c0dda_CommonFlag> _self_) {
	_1a8d0a118_reset(_self_.safe_ptr<_1a63c12d6_Flag_4>());
}


static _1a5993d1b_ReaderMptrData _1a5993d1b_Reader_mptr_data[] = {
	{
		._1a5993b95_read=_1a5993b95_read_0,
	},
	{
		._1a5993b95_read=_1a5993b95_read_1,
	},
};static _1a5994327_WriterMptrData _1a5994327_Writer_mptr_data[] = {
	{
		._1a59941a1_write=_1a59941a1_write_0,
	},
	{
		._1a59941a1_write=_1a59941a1_write_1,
	},
};static _1a5994a42_WriterCloserMptrData _1a5994a42_WriterCloser_mptr_data[] = {
};static _1a5995416_StreamMptrData _1a5995416_Stream_mptr_data[] = {
	{
		._1a5994dd8_read=_1a5994dd8_read_0,
		._1a5995290_write=_1a5995290_write_0,
	},
	{
		._1a5994dd8_read=_1a5994dd8_read_1,
		._1a5995290_write=_1a5995290_write_1,
	},
};static _1ac57d25b_ImporterMptrData _1ac57d25b_Importer_mptr_data[] = {
	{
		._1ac57bd3c_set_mod_path=_1ac57bd3c_set_mod_path_0,
		._1ac57c0c3_get_mod_path=_1ac57c0c3_get_mod_path_0,
		._1ac57c47a_mod_by_id=_1ac57c47a_mod_by_id_0,
		._1ac57c832_get_import=_1ac57c832_get_import_0,
		._1ac57ccb6_import_package=_1ac57ccb6_import_package_0,
		._1ac57d0d5_imported=_1ac57d0d5_imported_0,
	},
};static _1a591395b_KindMptrData _1a591395b_Kind_mptr_data[] = {
	{
		._1a591342d_to_str=_1a591342d_to_str_0,
		._1a59137d5_equals=_1a59137d5_equals_0,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_1,
		._1a59137d5_equals=_1a59137d5_equals_1,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_2,
		._1a59137d5_equals=_1a59137d5_equals_2,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_3,
		._1a59137d5_equals=_1a59137d5_equals_3,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_4,
		._1a59137d5_equals=_1a59137d5_equals_4,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_5,
		._1a59137d5_equals=_1a59137d5_equals_5,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_6,
		._1a59137d5_equals=_1a59137d5_equals_6,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_7,
		._1a59137d5_equals=_1a59137d5_equals_7,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_8,
		._1a59137d5_equals=_1a59137d5_equals_8,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_9,
		._1a59137d5_equals=_1a59137d5_equals_9,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_10,
		._1a59137d5_equals=_1a59137d5_equals_10,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_11,
		._1a59137d5_equals=_1a59137d5_equals_11,
	},
	{
		._1a591342d_to_str=_1a591342d_to_str_12,
		._1a59137d5_equals=_1a59137d5_equals_12,
	},
};static _1a5932ea8_LookupMptrData _1a5932ea8_Lookup_mptr_data[] = {
	{
		._1a5930dda_find_package=_1a5930dda_find_package_0,
		._1a5931292_select_package=_1a5931292_select_package_0,
		._1a5931726_find_var=_1a5931726_find_var_0,
		._1a5931baa_find_type_alias=_1a5931baa_find_type_alias_0,
		._1a593213e_find_struct=_1a593213e_find_struct_0,
		._1a59325c3_find_fn=_1a59325c3_find_fn_0,
		._1a593297a_find_trait=_1a593297a_find_trait_0,
		._1a5932d32_find_enum=_1a5932d32_find_enum_0,
	},
	{
		._1a5930dda_find_package=_1a5930dda_find_package_1,
		._1a5931292_select_package=_1a5931292_select_package_1,
		._1a5931726_find_var=_1a5931726_find_var_1,
		._1a5931baa_find_type_alias=_1a5931baa_find_type_alias_1,
		._1a593213e_find_struct=_1a593213e_find_struct_1,
		._1a59325c3_find_fn=_1a59325c3_find_fn_1,
		._1a593297a_find_trait=_1a593297a_find_trait_1,
		._1a5932d32_find_enum=_1a5932d32_find_enum_1,
	},
	{
		._1a5930dda_find_package=_1a5930dda_find_package_2,
		._1a5931292_select_package=_1a5931292_select_package_2,
		._1a5931726_find_var=_1a5931726_find_var_2,
		._1a5931baa_find_type_alias=_1a5931baa_find_type_alias_2,
		._1a593213e_find_struct=_1a593213e_find_struct_2,
		._1a59325c3_find_fn=_1a59325c3_find_fn_2,
		._1a593297a_find_trait=_1a593297a_find_trait_2,
		._1a5932d32_find_enum=_1a5932d32_find_enum_2,
	},
	{
		._1a5930dda_find_package=_1a5930dda_find_package_3,
		._1a5931292_select_package=_1a5931292_select_package_3,
		._1a5931726_find_var=_1a5931726_find_var_3,
		._1a5931baa_find_type_alias=_1a5931baa_find_type_alias_3,
		._1a593213e_find_struct=_1a593213e_find_struct_3,
		._1a59325c3_find_fn=_1a59325c3_find_fn_3,
		._1a593297a_find_trait=_1a593297a_find_trait_3,
		._1a5932d32_find_enum=_1a5932d32_find_enum_3,
	},
	{
		._1a5930dda_find_package=_1a5930dda_find_package_4,
		._1a5931292_select_package=_1a5931292_select_package_4,
		._1a5931726_find_var=_1a5931726_find_var_4,
		._1a5931baa_find_type_alias=_1a5931baa_find_type_alias_4,
		._1a593213e_find_struct=_1a593213e_find_struct_4,
		._1a59325c3_find_fn=_1a59325c3_find_fn_4,
		._1a593297a_find_trait=_1a593297a_find_trait_4,
		._1a5932d32_find_enum=_1a5932d32_find_enum_4,
	},
};static _1a63c0dda_CommonFlagMptrData _1a63c0dda_CommonFlag_mptr_data[] = {
	{
		._1a63c07ad_name=_1a63c07ad_name_0,
		._1a63c0923_short=_1a63c0923_short_0,
		._1a63c0a88_what=_1a63c0a88_what_0,
		._1a63c0c75_reset=_1a63c0c75_reset_0,
	},
	{
		._1a63c07ad_name=_1a63c07ad_name_1,
		._1a63c0923_short=_1a63c0923_short_1,
		._1a63c0a88_what=_1a63c0a88_what_1,
		._1a63c0c75_reset=_1a63c0c75_reset_1,
	},
	{
		._1a63c07ad_name=_1a63c07ad_name_2,
		._1a63c0923_short=_1a63c0923_short_2,
		._1a63c0a88_what=_1a63c0a88_what_2,
		._1a63c0c75_reset=_1a63c0c75_reset_2,
	},
	{
		._1a63c07ad_name=_1a63c07ad_name_3,
		._1a63c0923_short=_1a63c0923_short_3,
		._1a63c0a88_what=_1a63c0a88_what_3,
		._1a63c0c75_reset=_1a63c0c75_reset_3,
	},
	{
		._1a63c07ad_name=_1a63c07ad_name_4,
		._1a63c0923_short=_1a63c0923_short_4,
		._1a63c0a88_what=_1a63c0a88_what_4,
		._1a63c0c75_reset=_1a63c0c75_reset_4,
	},
};

jule::Bool _1dc2523c8_PRODUCTION;
jule::Bool _1dc2524e9_OPT_COPY;
jule::Bool _1dc25261a_OPT_DEADCODE;
jule::Bool _1dc25273b_OPT_APPEND;
jule::Bool _1dc25285c_OPT_MATH;
jule::Bool _1dc25297d_OPT_ACCESS;
jule::Bool _1dc252a9e_OPT_INLINE;
jule::Bool _1dc252cd0_OPT_PTR;
jule::Bool _1dc252e01_OPT_COND;
jule::Str _1dc25353e_COMPILER;
jule::Str _1dc25373c_COMPILER_PATH;
jule::Str _1dc2538e6_CPP_STD;
jule::Bool _1dc253ae4_SHADOWING;
jule::Bool _1dc253c9d_TRANSPILATION;
jule::Bool _1dc253e57_TEST;
jule::Bool _1dc254111_RC;
jule::Bool _1dc254353_SAFETY;
jule::Ptr<_1c3aca819_RangeTable> _1c3a8a7eb__L;
jule::Ptr<_1c3aca819_RangeTable> _1c3a9001a_LETTER;
jule::Array<jule::U8,256> _1c3ac4eea__PROPERTIES;
jule::Array<jule::U8,256> _1c477ce05_FIRST;
jule::Array<_1c477d499_accept_range,16> _1c477baa2_ACCEPT_RANGES;
jule::Array<jule::Str,4> _1c478e7da_CPP_HEADER_EXTS;
jule::Array<jule::Str,3> _1c47ec86a_CPP_EXTS;
jule::Array<jule::Str,1> _1c47ede87_OBJECTIVE_CPP_EXTS;
jule::Array<jule::Str,3> _1c4813e58_DISTOS;
jule::Array<jule::Str,3> _1c4814189_DISTARCH;
jule::Str _1c4820a47_PATH_STDLIB;
jule::Str _1c4834187_PATH_EXEC;
jule::Str _1c4821d56_PATH_WD;
jule::Str _1c4823396_PATH_API;
jule::Str _1c4823bb0_OS;
jule::Str _1c48491be_ARCH;
jule::Array<jule::I32,5> _1dd5c5ea9_SPACES;
jule::Array<jule::Str,6> _1dd5c52d8_UNARY_OPS;
jule::Array<jule::Str,12> _1dd5c5409_BIN_OPS;
jule::Array<jule::Str,2> _1dd5c564b_POSTFIX_OPS;
jule::Array<jule::Str,11> _1aa06ce5c_ASSING_OPS;
jule::Array<_1aa07e3ad_KindPair,47> _1aa07e8db_KEYWORDS;
jule::Array<_1aa07e3ad_KindPair,39> _1aa07eb1c_BASIC_OPS;
jule::Array<jule::U8,32> _1ac372b22_DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1ac372eb8_DE_BRUIJN64_TAB;
_1ac3a1bb7_FloatInfo _1ab087272_F32_INFO;
_1ac3a1bb7_FloatInfo _1ab0ac495_F64_INFO;
jule::Array<jule::Array<jule::U64,2>,696> _1ac435652_DETAILED_POWS_OF_TEN;
jule::Slice<jule::I64> _1ac43709e_POWTAB;
jule::Slice<jule::F64> _1ac437b3d_F64_POW10;
jule::Slice<jule::F32> _1ac437d6e_F32_POW10;
jule::Array<jule::U64,20> _1ac43b67a_U64_POW10;
jule::Slice<_1ac440926_LeftCheat> _1ac440e54_LEFTCHEATS;
jule::I64 _1ac5523c8_BIT_SIZE;
jule::Str _1ac5524e9_SYS_INT;
jule::Str _1ac55261a_SYS_UINT;
jule::Slice<jule::Any> _1a59a5c51_deads;
jule::Slice<jule::Any> _1a59a6328_checking;
jule::Any _1a59a647c_current;
jule::Any _1a59a669c_main_current;
jule::Array<jule::U64,12> _1a6395bc3_MDAYS;
jule::Array<jule::Array<jule::Str,2>,5> _1c47b9d65_HELP_MAP;
jule::Str _1a5a5bca2_OUT_DIR;
jule::Str _1a5a5cbd7_OUT_NAME;
jule::Str _1a5a5e821_OUT;





std::ostream &operator<<(std::ostream &_Stream, _1c3ac8839_FoldPair _Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3ac90cb_CaseRange _Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3ac9829_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3aca0bb_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3aca819_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c477d499_accept_range _Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c478864c_index(_1c4787e32_LazyBuff* _self_,jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];
	}
	return (*_self_)._field_path[_5424_i];
}



inline void _1c478896b_append(_1c4787e32_LazyBuff* _self_,jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if (((*_self_)._field_w < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_path.len()))) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c)) {
			((*_self_)._field_w)++;
			return;
		}
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_path.len()));
		copy((*_self_)._field_buff,static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w)));
	}
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _1c4788c46_string(_1c4787e32_LazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len + (*_self_)._field_w);
	}
	return (*_self_)._field_vol_and_path.slice(0LL,(*_self_)._field_vol_len) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, _1c4787e32_LazyBuff _Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dc3797b9_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>> static__1c478d2de_read(jule::Str _1524_path) {
	jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>> _1538_dirents = jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>();
	DIR* _1617_dir = _1dc362560_opendir((&(_1524_path[0LL])));
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>>(_1dc2b9ee0_get_last_fs_error());
	}
	for (;;) {
		{
			struct dirent* _2117_dirent = _1dc3626c5_readdir(_1617_dir);
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a6ade9e3;
			}
			jule::Str _2517_name = _1dc361905_byte_ptr_to_str(((jule::U8*)(_2117_dirent->d_name)));
			jule::Ptr<_1dc37a523_Status> _2621_stat = ({
				auto except = static__1dc30a4a3_of(_1c4789ac1_join(jule::Slice<jule::Str>({_1524_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>>(except.error);
					return jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>>(except.error);
				} jule::Ptr<_1dc37a523_Status>();});
			});
			_1538_dirents = jule::alloc_for_append(_1538_dirents,1);_1538_dirents.__push(jule::new_ptr<_1dc3797b9_DirEntry>(_1dc3797b9_DirEntry(_2517_name,_2621_stat)));
		}
	_iter_next_1a6ade9e3:;
	}
	_iter_end_1a6ade9e3:;
	_1dc362a6b_closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>>(jule::Any(), _1538_dirents);
}



inline jule::VoidExceptional static__1c478d564_create(jule::Str _3926_path) {
	if ((_1dc362eab_mkdir((&(_3926_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(_1dc2b9ee0_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional static__1c478d7d9_remove(jule::Str _5126_path) {
	if ((_1dc363121_rmdir((&(_5126_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1dc2b9ee0_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1dc379bd7_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1dc37a105_File>> static__1dc2bca4d_open(jule::Str _1824_path,jule::I64 _1835_flag,jule::I64 _1848_mode) {
	jule::I64 _1913_handle = _1dc3362ae_open((&(_1824_path[0LL])),static_cast<jule::I64>(_1835_flag),_1848_mode);
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dc37a105_File>>(_1dc2b9ee0_get_last_fs_error());
	}
	return jule::Exceptional<jule::Ptr<_1dc37a105_File>>(jule::Any(),static__1dc2c2668_new(static_cast<jule::U64>(static_cast<jule::U64>(_1913_handle))));
}



inline jule::VoidExceptional static__1dc2c4527_remove(jule::Str _3026_path) {
	if ((_1dc363286_unlink((&(_3026_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(_1dc2b9ee0_get_last_fs_error());
	} return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1dc306092_write(_1dc37a105_File* _self_,jule::Slice<jule::U8> _4428_buff) {
	jule::I64 _4445_n = jule::I64();
	if ((_4428_buff.len() == 0LL)) {
		_4445_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
	}
	_4445_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1dc372806_write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4428_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4428_buff.len()))))));
	if ((_4445_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1dc2b9ee0_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_4445_n);
}



inline jule::Exceptional<jule::I64> _1dc308825_read(_1dc37a105_File* _self_,jule::Slice<jule::U8> _6531_buff) {
	jule::I64 _6548_n = jule::I64();
	if ((_6531_buff.len() == 0LL)) {
		_6548_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
	}
	_6548_n=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1dc371e98_read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6531_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6531_buff.len()))))));
	if ((_6548_n == -1LL)) {
		return jule::Exceptional<jule::I64>(_1dc2b9ee0_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_6548_n);
}



inline jule::Ptr<_1dc37a105_File> static__1dc2c2668_new(jule::U64 _4523_handle) {
	return jule::new_ptr<_1dc37a105_File>(_1dc37a105_File(_4523_handle));
}



inline jule::Exceptional<jule::Ptr<_1dc37a105_File>> static__1dc2d0379_create(jule::Str _5526_path) {
	return jule::Exceptional<jule::Ptr<_1dc37a105_File>>(jule::Any(),({
		auto except = static__1dc2bca4d_open(_5526_path,((static_cast<jule::I64>(1538LL) | 1538LL) | 1538LL),438LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Ptr<_1dc37a105_File>>(except.error);
			return jule::Exceptional<jule::Ptr<_1dc37a105_File>>(except.error);
		} jule::Ptr<_1dc37a105_File>();});
	}));
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1dc2bd389_read(jule::Str _6724_path) {
	jule::Ptr<_1dc37a523_Status> _6813_s = ({
		auto except = static__1dc30a4a3_of(_6724_path);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dc37a523_Status>();});
	});
	if ((!(_1dc311443_is_reg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(static_cast<jule::I64>(14LL));
	}
	if ((_6813_s.get()._field_size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),jule::Slice<jule::U8>::alloc(0LL));
	}
	jule::Ptr<_1dc37a105_File> _7817_f = ({
		auto except = static__1dc2bca4d_open(_6724_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1dc37a105_File>();});
	});
	__JULE_DEFER({
		({
			auto except = _1dc2cca19_close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_size));
	jule::I64 _8213_n = ({
		auto except = _1dc308825_read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::I64();});
	});
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_8117_buff.slice(0LL,_8213_n));
}



inline jule::VoidExceptional static__1dc2c8d45_write(jule::Str _9125_path,jule::Slice<jule::U8> _9136_data,jule::I64 _9150_perm) {
	jule::Ptr<_1dc37a105_File> _9217_f = ({
		auto except = static__1dc2bca4d_open(_9125_path,((static_cast<jule::I64>(1537LL) | 1537LL) | 1537LL),_9150_perm);
		(except.ok()) ? (except.result) : ({{
			return jule::VoidExceptional(except.error);
			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1dc37a105_File>();});
	});
	({
		auto except = _1dc306092_write(_9217_f.ptr(), _9136_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1dc2cca19_close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::Exceptional<jule::I64> _1dc2c995b_seek(_1dc37a105_File* _self_,jule::I64 _10527_offset,jule::I64 _10540_origin) {
	jule::I64 _10613_pos = _1dc3719d1_seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10527_offset,static_cast<jule::I64>(_10540_origin));
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(_1dc2b9ee0_get_last_fs_error());
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_10613_pos);
}



inline jule::VoidExceptional _1dc2cca19_close(_1dc37a105_File* _self_) {
	if ((_1dc37233e_close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(_1dc2b9ee0_get_last_fs_error());
	} return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1dc37a105_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1dc37a523_Status>> static__1dc30a4a3_of(jule::Str _1122_path) {
	struct stat _1217_handle = (struct stat){};
	jule::I64 _1313_code = _1dc327c95_stat((&(_1122_path[0LL])),(&(_1217_handle)));
	if ((_1313_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_1dc37a523_Status>>(jule::Any(),jule::new_ptr<_1dc37a523_Status>(_1dc37a523_Status(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_mode))),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1217_handle.st_size))))));
	}
	return jule::Exceptional<jule::Ptr<_1dc37a523_Status>>(_1dc2b9ee0_get_last_fs_error());
}



inline jule::Bool _1dc309947_is_dir(_1dc37a523_Status* _self_) {
	return (((*_self_)._field_mode & 16384LLU) == 16384LLU);
}



inline jule::Bool _1dc311443_is_reg(_1dc37a523_Status* _self_) {
	return (((*_self_)._field_mode & 32768LLU) == 32768LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1dc37a523_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c484ad6e_Cmd> static__1c484b512_new(jule::Str _2023_path) {
	return jule::new_ptr<_1c484ad6e_Cmd>(_1c484ad6e_Cmd(_2023_path,jule::Slice<jule::Str>(),jule::Slice<jule::Str>()));
}



inline jule::Exceptional<jule::I64> _1c484b7dc_spawn(_1c484ad6e_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(({
		auto except = _1c484ea21___spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	})));
}



inline jule::Exceptional<jule::I64> _1c484ea21___spawn(_1c484ad6e_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(3LL));
	}
	jule::I64 _5013_pid = fork();
	{
		auto &_match_expr{ _5013_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a6b23065:;
			{
				return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a6b23d24:;
			{
				jule::I64 _5517_status = ((((*_self_)._field_env == nullptr)) ? (_1c484e207_execvp((*_self_)._field_path,(*_self_)._field_args)) : (static_cast<jule::I64>(static_cast<jule::I64>(_1c484e6be_execve((*_self_)._field_path,(*_self_)._field_args,(*_self_)._field_env)))));
				if ((_5517_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				}
				_1c485047d_exit(255LL);
			}
		}
		_match_end_1a6b23c47:;
	}
	jule::I64 _6513_status = 0LL;
	if ((waitpid(_5013_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(_1c484a720_get_last_process_error());
	}
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(12LL));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),static_cast<jule::I64>(WEXITSTATUS(_6513_status)));
}







std::ostream &operator<<(std::ostream &_Stream, _1c484ad6e_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "env:" << _Src._field_env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4810251_Log _Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1aa075c89_prec(_1aa07563a_Token* _self_) {
	if ((*_self_)._field_id != static_cast<jule::U64>(7LLU)) {
		return 0LLU;
	}
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a6bb5624:;
			{
				return 5LLU;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a6bb528e:;
			{
				return 4LLU;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6bb5305:;
			{
				return 3LLU;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a6bb536b:;
			{
				return 2LLU;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a6bb5415:;
			{
				return 1LLU;
			}
		}
		else {
			_case_begin_1a6bb4a30:;
			{
				return 0LLU;
			}
		}
		_match_end_1a6bb4d3d:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1aa07563a_Token _Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa07c103_is_ok(_1aa07b982_File* _self_) {
	({
		auto except = static__1dc30a4a3_of((*_self_)._field_path);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::Ptr<_1dc37a523_Status>();});
	});
	return true;
}



inline void _1aa07c422_fill(_1aa07b982_File* _self_,jule::Slice<jule::U8> _2331_data) {
	(*_self_)._field_data=_2331_data;
}



inline jule::Str _1aa07c6ec_dir(_1aa07b982_File* _self_) {
	return _1c478a891_dir((*_self_)._field_path);
}



inline jule::Str _1aa07c9c7_name(_1aa07b982_File* _self_) {
	return _1c478a4ea_base((*_self_)._field_path);
}



inline jule::U64 _1aa07cca2_addr(_1aa07b982_File* _self_) {
	return static_cast<jule::U64>(((jule::U64)((&((*_self_))))));
}



inline jule::Str _1aa07d159_get_row(_1aa07b982_File* _self_,jule::I64 _4426_row) {
	jule::I64 _4517_n = 0LL;
	jule::I64 _4617_line_start = 0LL;
	jule::I64 _4717_i = 0LL;
	for (; _4717_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.len())); (_4717_i)++) {
		{
			if ((*_self_)._field_data[_4717_i] != '\n') {
				goto _iter_next_1a6bbbd01;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*_self_)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a6bbbd01:;
	}
	_iter_end_1a6bbbd01:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, _1aa07b982_File _Src) {
	_Stream << "File{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "tokens:" << _Src._field_tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa07e3ad_KindPair _Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1aa08675b_push_err(_1aa085ddc_Lex* _self_,jule::Str _46027_fmt,jule::Slice<jule::Any> _46040_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1aa080249_make_err((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_46027_fmt,_46040_args));
}



inline void _1aa086b57_push_err_tok(_1aa085ddc_Lex* _self_,_1aa07563a_Token& _46532_token,jule::Str _46546_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1aa080249_make_err(_46532_token._field_row,_46532_token._field_column,(*_self_)._field_file,_46546_fmt,jule::Slice<jule::Any>()));
}



inline void _1aa086d99_lex(_1aa085ddc_Lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_1aa08950b_new_line(&(*_self_));
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			_1aa07563a_Token _47521_token = _1aa08acc1_token(&(*_self_));
			if (_47521_token._field_id != static_cast<jule::U64>(0LLU)) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47521_token);
			}
		}
	_iter_next_1a6bc2e8e:;
	}
	_iter_end_1a6bc2e8e:;
}



inline jule::Str _1aa087251_id(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _48422_ln) {
	if ((_48422_ln.len() == 0LL)) {
		return jule::Str();
	}
	jule::I32 _48814_r;
	jule::I64 _48821_i;
	std::tie(_48814_r,_48821_i) = _1c477e19d_decode_rune(_48422_ln);
	if ((_48814_r != '_') && (!(_1aa079474_is_letter(_48814_r)))) {
		return jule::Str();
	}
	while (_48821_i < static_cast<jule::I64>(static_cast<jule::I64>(_48422_ln.len()))) {
		{
			jule::I32 _49418_pr;
			jule::I64 _49422_n;
			std::tie(_49418_pr,_49422_n) = _1c477e19d_decode_rune(_48422_ln.slice(_48821_i));
			if (((_49418_pr != '_') && (!(_1aa079a90_is_decimal(static_cast<jule::U8>(static_cast<jule::U8>(_49418_pr)))))) && (!(_1aa079474_is_letter(_49418_pr)))) {
				(*_self_)._field_pos+=_48821_i;
				return static_cast<jule::Str>(_48422_ln.slice(0LL,_48821_i));
			}
			_48821_i+=_49422_n;
		}
	_iter_next_1a6bc6ee8:;
	}
	_iter_end_1a6bc6ee8:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_48422_ln.len());
	return static_cast<jule::Str>(_48422_ln);
}



inline jule::Slice<jule::U8> _1aa08752b_resume(_1aa085ddc_Lex* _self_) {
	jule::I64 _50917_i = (*_self_)._field_pos;
	for (; _50917_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_50917_i)++) {
		{
			jule::I32 _51117_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_data[_50917_i]);
			if (_1aa079045_is_space(_51117_r)) {
				
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _51117_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a6bcc77e:;
						{
							_1aa08950b_new_line(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a6bcc4d7:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a6bcba36:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a6bcc11e:;
				}
				goto _iter_next_1a6bca5c3;
			}
			jule::I64 _52321_j = _50917_i;
			for (; _52321_j < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); (_52321_j)++) {
				{
					if ((*_self_)._field_file.get()._field_data[_52321_j] == '\n') {
						goto _iter_end_1a6bcb53b;
					}
				}
			_iter_next_1a6bcb53b:;
			}
			_iter_end_1a6bcb53b:;
			return (*_self_)._field_file.get()._field_data.slice(_50917_i,_52321_j);
		}
	_iter_next_1a6bca5c3:;
	}
	_iter_end_1a6bca5c3:;
	return nullptr;
}



inline void _1aa08784a_lex_line_comment(_1aa085ddc_Lex* _self_,_1aa07563a_Token& _53540_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if ((_53917_r == '\n') || (_53917_r == '\r')) {
				goto _iter_end_1a6bd09d5;
			}
		}
	_iter_next_1a6bd09d5:;
	}
	_iter_end_1a6bd09d5:;
	if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
		_53540_token._field_id=static_cast<jule::U64>(18LLU);
		_53540_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_53613_start,(*_self_)._field_pos));
	}
}



inline void _1aa087b69_lex_range_comment(_1aa085ddc_Lex* _self_,_1aa07563a_Token& _55041_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;
	(*_self_)._field_pos+=2LL;
	for (; (*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len())); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_55417_r == '\r') {
				goto _iter_next_1a6bd4973;
			}
			if (_55417_r == '\n') {
				_1aa08950b_new_line(&(*_self_));
				goto _iter_next_1a6bd4973;
			}
			(*_self_)._field_column+=1LL;
			if (((((*_self_)._field_pos + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_data[((*_self_)._field_pos + 1LL)] == '/')) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if (((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL)) {
					_55041_token._field_id=static_cast<jule::U64>(18LLU);
					_55041_token._field_kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_data.slice(_55113_start,(*_self_)._field_pos));
				}
				return;
			}
		}
	_iter_next_1a6bd4973:;
	}
	_iter_end_1a6bd4973:;
	_1aa08675b_push_err(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _1aa088021_num(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _57823_txt) {
	jule::Str _57838_lit = jule::Str();
	if (_57823_txt[0LL] == '_') {
		_57838_lit = jule::Str();
		return _57838_lit;
	}
	_57838_lit=_1aa0843b3_hex_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1aa0840a5_octal_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1aa0826e1_binary_num(_57823_txt);
	if ((!(_57838_lit.empty()))) {
		goto _julec_label_end;
	}
	_57838_lit=_1aa0823d3_common_num(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=static_cast<jule::I64>(_57838_lit.len());
	return _57838_lit;
}



inline jule::Str _1aa0883c8_escape_seq(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _60030_txt) {
	jule::Str _60117_seq = jule::Str();
	if ((_60030_txt.len() < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _60030_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a6be1ce3:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60030_txt.slice(0LL,2LL));
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a6be1c05:;
			{
				_60117_seq=_1aa084b00_big_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a6be192a:;
			{
				_60117_seq=_1aa084e41_little_unicode_point_escape(_60030_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a6be1991:;
			{
				_60117_seq=_1aa08523d_hex_byte_escape(_60030_txt);
			}
		}
		else {
			_case_begin_1a6be1188:;
			{
				_60117_seq=_1aa08554b_byte_escape(_60030_txt);
			}
		}
		_match_end_1a6be184d:;
	}
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_1aa08675b_push_err(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();
	}
	(*_self_)._field_pos+=static_cast<jule::I64>(_60117_seq.len());
	return _60117_seq;
}



inline jule::Str _1aa08885c_get_rune(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _63428_txt,jule::Bool _63441_raw) {
	if ((!(_63441_raw)) && (_63428_txt[0LL] == '\\')) {
		return _1aa0883c8_escape_seq(&(*_self_), _63428_txt);
	}
	jule::I32 _63914_r;
	jule::I64 _63917_n;
	std::tie(_63914_r,_63917_n) = _1c477e19d_decode_rune(_63428_txt);
	(*_self_)._field_pos+=_63917_n;
	return static_cast<jule::Str>(_63914_r);
}



inline jule::Str _1aa088c14_lex_rune(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _64428_txt) {
	jule::Str _64517_run = jule::Str("'", 1);
	((*_self_)._field_column)++;
	jule::I64 _64717_n = 0LL;
	jule::I64 _64817_i = 1LL;
	for (; _64817_i < static_cast<jule::I64>(static_cast<jule::I64>(_64428_txt.len())); (_64817_i)++) {
		{
			if (_64428_txt[_64817_i] == '\r') {
				goto _iter_next_1a6be934a;
			}
			if (_64428_txt[_64817_i] == '\n') {
				_1aa08675b_push_err(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_1aa08950b_new_line(&(*_self_));
				return jule::Str();
			}
			jule::Slice<jule::U8> _66017_part = _64428_txt.slice(_64817_i);
			jule::Str _66117_r = _1aa08885c_get_rune(&(*_self_), _66017_part,false);
			_64517_run+=_66117_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1c478128d_rune_count_str(_66117_r));
			if ((_66117_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a6be934a;
			}
			if ((_66117_r.len() > 1LL)) {
				_64817_i+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_66117_r.len())) - 1LL));
			}
			(_64717_n)++;
		}
	_iter_next_1a6be934a:;
	}
	_iter_end_1a6be934a:;
	if ((_64717_n == 0LL)) {
		_1aa08675b_push_err(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64717_n > 1LL)) {
		_1aa08675b_push_err(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	}
	return _64517_run;
}



inline jule::Str _1aa088ede_lex_str(_1aa085ddc_Lex* _self_) {
	jule::Str _68417_s = jule::Str();
	jule::U8 _68513_mark = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
	((*_self_)._field_pos)++;
	jule::Bool _68713_raw = _68513_mark == '`';
	_68417_s+=static_cast<jule::Str>(_68513_mark);
	((*_self_)._field_column)++;
	while ((*_self_)._field_pos < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_file.get()._field_data.len()))) {
		{
			jule::U8 _69217_ch = (*_self_)._field_file.get()._field_data[(*_self_)._field_pos];
			if (_69217_ch == '\r') {
				goto _iter_next_1a6c019a1;
			}
			if (_69217_ch == '\n') {
				_1aa08950b_new_line(&(*_self_));
				if ((!(_68713_raw))) {
					_1aa08675b_push_err(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _70421_part = (*_self_)._field_file.get()._field_data.slice((*_self_)._field_pos);
			jule::Str _70517_r = _1aa08885c_get_rune(&(*_self_), _70421_part,_68713_raw);
			_68417_s+=_70517_r;
			(*_self_)._field_column+=static_cast<jule::I64>(_1c478128d_rune_count_str(_70517_r));
			if (_69217_ch == _68513_mark) {
				goto _iter_end_1a6c019a1;
			}
		}
	_iter_next_1a6c019a1:;
	}
	_iter_end_1a6c019a1:;
	return _68417_s;
}



inline jule::Bool _1aa0892b9_is_first_token_of_line(_1aa085ddc_Lex* _self_) {
	return ((*_self_)._field_column == 1LL);
}



inline void _1aa08950b_new_line(_1aa085ddc_Lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _1aa089b49_is_op(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _72525_txt,jule::Str _72538_kind,jule::U64 _72549_id,_1aa07563a_Token& _72567_t) {
	if ((!(_1aa080678_bytes_has_prefix(_72525_txt,_72538_kind)))) {
		return false;
	}
	_72567_t._field_kind=_72538_kind;
	_72567_t._field_id=_72549_id;
	(*_self_)._field_pos+=static_cast<jule::I64>(_72538_kind.len());
	return true;
}



inline jule::Bool _1aa08a0cd_lex_basic_ops(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8> _73632_txt,_1aa07563a_Token& _73650_tok) {
	{
		auto &expr = _1aa07eb1c_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_1a6c0ab75:;
		if (it != expr.end()) {
			_1aa07e3ad_KindPair &_1a6c0acc9_pair = *it;
			{
				if (_1aa089b49_is_op(&(*_self_), _73632_txt,_1a6c0acc9_pair._field_kind,_1a6c0acc9_pair._field_id,_73650_tok)) {
					return true;
				}
			}
			_iter_next_1a6c0ab75:;
			++it;
			goto _iter_begin_1a6c0ab75;
		}
		_iter_end_1a6c0ab75:;
	}
	return false;
}



inline jule::Bool _1aa08a562_lex_id(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _74626_txt,_1aa07563a_Token& _74644_t) {
	jule::Str _74713_lex = _1aa087251_id(&(*_self_), _74626_txt);
	if (_74713_lex.empty()) {
		return false;
	}
	_74644_t._field_kind=_74713_lex;
	_74644_t._field_id=static_cast<jule::U64>(2LLU);
	return true;
}



inline jule::Bool _1aa08a9e6_lex_num(_1aa085ddc_Lex* _self_,jule::Slice<jule::U8>& _75727_txt,_1aa07563a_Token& _75745_t) {
	jule::Str _75813_lex = _1aa088021_num(&(*_self_), _75727_txt);
	if (_75813_lex.empty()) {
		return false;
	}
	_75745_t._field_kind=_75813_lex;
	_75745_t._field_id=static_cast<jule::U64>(6LLU);
	return true;
}



inline _1aa07563a_Token _1aa08acc1_token(_1aa085ddc_Lex* _self_) {
	_1aa07563a_Token _77017_t = _1aa07563a_Token((*_self_)._field_file,jule::I64(),jule::I64(),jule::Str(),static_cast<jule::U64>(0LLU));
	jule::Slice<jule::U8> _77213_txt = _1aa08752b_resume(&(*_self_));
	if ((_77213_txt == nullptr)) {
		return _77017_t;
	}
	_77017_t._field_column=(*_self_)._field_column;
	_77017_t._field_row=(*_self_)._field_row;
	{
		
		if (_1aa08a9e6_lex_num(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1a6c13584:;
			{
				goto _match_end_1a6c121cb;
			}
		}
		else if (_77213_txt[0LL] == '\'') {
			_case_begin_1a6c1282a:;
			{
				_77017_t._field_kind=_1aa088c14_lex_rune(&(*_self_), _77213_txt);
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if ((_77213_txt[0LL] == '\"') || (_77213_txt[0LL] == '`')) {
			_case_begin_1a6c12891:;
			{
				_77017_t._field_kind=_1aa088ede_lex_str(&(*_self_));
				_77017_t._field_id=static_cast<jule::U64>(6LLU);
				return _77017_t;
			}
		}
		else if (_1aa080678_bytes_has_prefix(_77213_txt,jule::Str("//", 2))) {
			_case_begin_1a6c12907:;
			{
				_1aa08784a_lex_line_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_1aa080678_bytes_has_prefix(_77213_txt,jule::Str("/*", 2))) {
			_case_begin_1a6c1296d:;
			{
				_1aa087b69_lex_range_comment(&(*_self_), _77017_t);
				return _77017_t;
			}
		}
		else if (_1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa089b49_is_op(&(*_self_), _77213_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_77017_t) || _1aa08a0cd_lex_basic_ops(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1a6c14211:;
			{
				goto _match_end_1a6c121cb;
			}
		}
		else if (_1aa08a562_lex_id(&(*_self_), _77213_txt,_77017_t)) {
			_case_begin_1a6c14277:;
			{
				{
					auto &expr = _1aa07e8db_KEYWORDS;
					auto it = expr.begin();
					_iter_begin_1a6c1c4a0:;
					if (it != expr.end()) {
						_1aa07e3ad_KindPair &_1a6c1c604_pair = *it;
						{
							if (_1a6c1c604_pair._field_kind == _77017_t._field_kind) {
								_77017_t._field_id=_1a6c1c604_pair._field_id;
								goto _iter_end_1a6c1c4a0;
							}
						}
						_iter_next_1a6c1c4a0:;
						++it;
						goto _iter_begin_1a6c1c4a0;
					}
					_iter_end_1a6c1c4a0:;
				}
			}
		}
		else {
			_case_begin_1a6c127b4:;
			{
				jule::I32 _81718_r;
				jule::I64 _81721_sz;
				std::tie(_81718_r,_81721_sz) = _1c477e19d_decode_rune(_77213_txt);
				_1aa08675b_push_err(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>({jule::Any(_81718_r)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81721_sz;
				return _77017_t;
			}
		}
		_match_end_1a6c121cb:;
	}
	(*_self_)._field_column+=static_cast<jule::I64>(_1c478128d_rune_count_str(_77017_t._field_kind));
	return _77017_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa085ddc_Lex _Src) {
	_Stream << "Lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd582707_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "nodes:" << _Src._field_nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd583c9c_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08b453_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08b871_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08bc8e_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa051bbb_is_unsafe(_1aa08c1ac_PtrTypeDecl* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08c1ac_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa054361_auto_sized(_1aa08c5ca_ArrTypeDecl* _self_) {
	return ((*_self_)._field_size == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08c5ca_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08c9e8_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08ce16_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08db70_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa090a51_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa092514_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09632b_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa099a38_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa09368b_is_trait_impl(_1aa09ecd5_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1aa093801_is_struct_impl(_1aa09ecd5_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09ecd5_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5da8b4_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5dacd2_PackageInfo _Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5dd587_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1aa5deb2c_stop(_1aa5de236_ScopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1aa5dee07_stopped(_1aa5de236_ScopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);
}



inline jule::Bool _1aa5e01d2_finished(_1aa5de236_ScopeParser* _self_) {
	return (*_self_)._field_pos >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline jule::Bool _1aa5e04ac_is_last_st(_1aa5de236_ScopeParser* _self_) {
	return ((*_self_)._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_stmts.len()));
}



inline void _1aa5e08a8_push_err(_1aa5de236_ScopeParser* _self_,_1aa07563a_Token _18927_token,jule::Str _18941_fmt) {
	_1aa6129a7_push_err((*_self_)._field_p.ptr(), _18927_token,_18941_fmt,jule::Slice<jule::Any>());
}



inline void _1aa5e0ca4_push_suggestion(_1aa5de236_ScopeParser* _self_,jule::Str _19434_fmt,jule::Slice<jule::Any> _19447_args) {
	_1aa612da3_push_suggestion((*_self_)._field_p.ptr(), _19434_fmt,_19447_args);
}



inline void _1aa5e10c3_insert_as_next(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _19838_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1aa5dd587_Stmt>(_1aa5dd587_Stmt(_19838_tokens,jule::Bool()));
}



inline jule::Ptr<_1aa5dd587_Stmt> _1aa5e139d_next(_1aa5de236_ScopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];
}



inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e1755_build_scope(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _20835_tokens) {
	jule::Ptr<_1aa09632b_ScopeTree> _20917_s = _1aa5dc234_new_scope();
	_20917_s.get()._field_parent=(*_self_)._field_s;
	_1aa5de236_ScopeParser _21117_ssp = _1aa5de236_ScopeParser((*_self_)._field_p,jule::Ptr<_1aa09632b_ScopeTree>(),jule::Slice<jule::Ptr<_1aa5dd587_Stmt>>(),jule::I64());
	_1aa5ec2cc_build(&_21117_ssp, _20835_tokens,_20917_s);
	return _20917_s;
}



inline jule::Any _1aa5e1b0c_build_var_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _21836_tokens) {
	jule::Ptr<_1aa097085_VarDecl> _21917_v = _1aa615e1c_build_var((*_self_)._field_p, _21836_tokens);
	_21917_v.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_21917_v);
}



inline jule::Any _1aa5e1eb4_build_ret_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _22435_tokens) {
	jule::Ptr<_1aa0974a3_RetSt> _22517_st = jule::new_ptr<_1aa0974a3_RetSt>(_1aa0974a3_RetSt(_22435_tokens[0LL],jule::Ptr<_1aa08d334_Expr>()));
	if ((_22435_tokens.len() > 1LL)) {
		_22435_tokens=_22435_tokens.slice(1LL);
		_22517_st.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _22435_tokens);
	}
	return jule::Any(_22517_st);
}



inline jule::Any _1aa5e236b_build_while_next_iter(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa5dd587_Stmt>& _23545_s) {
	jule::Ptr<_1aa0978c1_Iter> _23617_it = jule::new_ptr<_1aa0978c1_Iter>(_1aa0978c1_Iter(_23545_s.get()._field_tokens[0LL],jule::Any(),jule::Ptr<_1aa09632b_ScopeTree>()));
	jule::Slice<_1aa07563a_Token> _23917_tokens = _23545_s.get()._field_tokens.slice(1LL);
	jule::Ptr<_1aa097cde_WhileKind> _24017_kind = jule::new_ptr<_1aa097cde_WhileKind>(_1aa097cde_WhileKind());
	if ((_23917_tokens.len() > 0LL)) {
		_24017_kind.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _23917_tokens);
	}
	if (_1aa5e04ac_is_last_st(&(*_self_))) {
		_1aa5e08a8_push_err(&(*_self_), _23617_it.get()._field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_23917_tokens=_1aa5e139d_next(&(*_self_)).get()._field_tokens;
	jule::Slice<_1aa07563a_Token> _25217_st_tokens = _1aa5edba2_get_block_expr(_23917_tokens);
	if ((_25217_st_tokens.len() > 0LL)) {
		jule::Ptr<_1aa5dd587_Stmt> _25421_stmt = jule::new_ptr<_1aa5dd587_Stmt>(_1aa5dd587_Stmt(_25217_st_tokens,_23545_s.get()._field_terminated));
		_24017_kind.get()._field_next_token=_25217_st_tokens[0LL];
		_24017_kind.get()._field_next=_1aa5ebdd1_build_st(&(*_self_), _25421_stmt);
	}
	jule::I64 _26217_i = _25217_st_tokens.len();
	jule::Slice<_1aa07563a_Token> _26317_block_tokens = _1aa60ecc3_range(_26217_i,jule::Str("{", 1),jule::Str("}", 1),_23917_tokens);
	if ((_26317_block_tokens == nullptr)) {
		_1aa5deb2c_stop(&(*_self_));
		_1aa5e08a8_push_err(&(*_self_), _23617_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_26217_i < static_cast<jule::I64>(static_cast<jule::I64>(_23917_tokens.len()))) {
		_1aa5e08a8_push_err(&(*_self_), _23917_tokens[_26217_i],jule::Str("invalid syntax", 14));
	}
	_23617_it.get()._field_scope=_1aa5e1755_build_scope(&(*_self_), _26317_block_tokens);
	_23617_it.get()._field_kind=jule::Any(_24017_kind);
	return jule::Any(_23617_it);
}



inline jule::Ptr<_1aa097cde_WhileKind> _1aa5e2723_build_while_iter_kind(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _28045_tokens) {
	return jule::new_ptr<_1aa097cde_WhileKind>(_1aa097cde_WhileKind(_1aa61325a_build_expr((*_self_)._field_p, _28045_tokens),jule::Any(),_1aa07563a_Token()));
}



inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa5e2b1e_get_range_kind_keys_tokens(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _28650_toks) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _28718_vars;
	jule::Slice<_1c4810251_Log> _28724_errs;
	std::tie(_28718_vars,_28724_errs) = _1aa6105dc_parts(_28650_toks,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_28724_errs);
	return _28718_vars;
}



inline jule::Ptr<_1aa097085_VarDecl> _1aa5e2eb5_build_range_kind_key(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _29244_tokens) {
	if ((_29244_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1aa097085_VarDecl> _29617_key = jule::new_ptr<_1aa097085_VarDecl>(_1aa097085_VarDecl(jule::Ptr<_1aa09632b_ScopeTree>(),_29244_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1dd583461_TypeDecl>(),jule::Ptr<_1aa08d334_Expr>()));
	if (_29617_key.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_29617_key.get()._field_mutable=true;
		if ((_29244_tokens.len() == 1LL)) {
			_1aa5e08a8_push_err(&(*_self_), _29617_key.get()._field_token,jule::Str("invalid syntax", 14));
		}
		_29617_key.get()._field_token=_29244_tokens[1LL];
	} else if ((_29244_tokens.len() > 1LL)) {
		_1aa5e08a8_push_err(&(*_self_), _29244_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_29617_key.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa5e08a8_push_err(&(*_self_), _29617_key.get()._field_token,jule::Str("invalid syntax", 14));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_29617_key.get()._field_ident=_29617_key.get()._field_token._field_kind;
	return _29617_key;
}



inline jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _1aa5e336c_build_range_kind_keys(_1aa5de236_ScopeParser* _self_,jule::Slice<jule::Slice<_1aa07563a_Token>>& _31745_parts) {
	jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _31817_keys = nullptr;
	{
		auto &expr = _31745_parts;
		auto it = expr.begin();
		_iter_begin_1a6d1ce0d:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6d1d040_tokens = *it;
			{
				_31817_keys = jule::alloc_for_append(_31817_keys,1);_31817_keys.__push(_1aa5e2eb5_build_range_kind_key(&(*_self_), _1a6d1d040_tokens));
			}
			_iter_next_1a6d1ce0d:;
			++it;
			goto _iter_begin_1a6d1ce0d;
		}
		_iter_end_1a6d1ce0d:;
	}
	return _31817_keys;
}



inline void _1aa5e37ac_setup_range_kind_keys_plain(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa09820c_RangeKind>& _32551_rng,jule::Slice<_1aa07563a_Token>& _32573_tokens) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _32617_key_tokens = _1aa5e2b1e_get_range_kind_keys_tokens(&(*_self_), _32573_tokens);
	if ((_32617_key_tokens.len() == 0LL)) {
		return;
	}
	if ((_32617_key_tokens.len() > 2LL)) {
		_1aa5e08a8_push_err(&(*_self_), _32551_rng.get()._field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _33317_keys = _1aa5e336c_build_range_kind_keys(&(*_self_), _32617_key_tokens);
	_32551_rng.get()._field_key_a=_33317_keys[0LL];
	if ((_33317_keys.len() > 1LL)) {
		_32551_rng.get()._field_key_b=_33317_keys[1LL];
	}
}



inline void _1aa5e3bdb_setup_range_kind_keys_explicit(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa09820c_RangeKind>& _34054_rng,jule::Slice<_1aa07563a_Token>& _34076_tokens) {
	jule::I64 _34117_i = 0LL;
	jule::Slice<_1aa07563a_Token> _34217_rang = _1aa60ecc3_range(_34117_i,jule::Str("(", 1),jule::Str(")", 1),_34076_tokens);
	if (_34117_i < static_cast<jule::I64>(static_cast<jule::I64>(_34076_tokens.len()))) {
		_1aa5e08a8_push_err(&(*_self_), _34054_rng.get()._field_in_token,jule::Str("invalid syntax", 14));
	}
	_1aa5e37ac_setup_range_kind_keys_plain(&(*_self_), _34054_rng,_34217_rang);
}



inline void _1aa5e40c6_setup_range_kind_keys(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa09820c_RangeKind>& _34945_rng,jule::Slice<_1aa07563a_Token>& _34967_tokens) {
	if (_34967_tokens[0LL]._field_id == static_cast<jule::U64>(3LLU)) {
		if ((_34967_tokens[0LL]._field_kind != jule::Str("(", 1))) {
			_1aa5e08a8_push_err(&(*_self_), _34967_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		_1aa5e3bdb_setup_range_kind_keys_explicit(&(*_self_), _34945_rng,_34967_tokens);
		return;
	}
	_1aa5e37ac_setup_range_kind_keys_plain(&(*_self_), _34945_rng,_34967_tokens);
}



inline jule::Ptr<_1aa09820c_RangeKind> _1aa5e4637_build_range_iter_kind(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _36145_var_tokens,jule::Slice<_1aa07563a_Token>& _36214_expr_tokens,_1aa07563a_Token& _36241_in_token) {
	jule::Ptr<_1aa09820c_RangeKind> _36317_rng = jule::new_ptr<_1aa09820c_RangeKind>(_1aa09820c_RangeKind(_36241_in_token,jule::Ptr<_1aa08d334_Expr>(),jule::Ptr<_1aa097085_VarDecl>(),jule::Ptr<_1aa097085_VarDecl>()));
	if ((_36214_expr_tokens.len() == 0LL)) {
		_1aa5e08a8_push_err(&(*_self_), _36317_rng.get()._field_in_token,jule::Str("expression missing", 18));
		return _36317_rng;
	}
	_36317_rng.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _36214_expr_tokens);
	if ((_36145_var_tokens.len() > 0LL)) {
		_1aa5e40c6_setup_range_kind_keys(&(*_self_), _36317_rng,_36145_var_tokens);
	}
	return _36317_rng;
}



inline jule::Any _1aa5e4abb_build_common_iter_kind(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _37746_tokens,_1aa07563a_Token& _37764_err_tok) {
	jule::I64 _37817_brace_n = 0LL;
	{
		auto &expr = _37746_tokens;
		auto it = expr.begin();
		_iter_begin_1a6d2ca00:;
		if (it != expr.end()) {
			jule::I64 _1a6d2ca99_i = it - expr.begin();
			_1aa07563a_Token _1a6d2cd1e_tok = *it;
			{
				if (_1a6d2cd1e_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6d2cd1e_tok._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6d2dcdc:;
							{
								(_37817_brace_n)++;
								goto _iter_next_1a6d2ca00;
							}
						}
						else {
							_case_begin_1a6d2d67c:;
							{
								(_37817_brace_n)--;
							}
						}
						_match_end_1a6d2d9ac:;
					}
				}
				if ((_37817_brace_n != 0LL)) {
					goto _iter_next_1a6d2ca00;
				}
				{
					auto &_match_expr{ _1a6d2cd1e_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1a6d2d4b2:;
						{
							jule::Slice<_1aa07563a_Token> _39625_decl_tokens = _37746_tokens.slice(0LL,_1a6d2ca99_i);
							jule::Slice<_1aa07563a_Token> _39725_expr_tokens = _37746_tokens.slice((_1a6d2ca99_i + 1LL));
							return jule::Any(_1aa5e4637_build_range_iter_kind(&(*_self_), _39625_decl_tokens,_39725_expr_tokens,_1a6d2cd1e_tok));
						}
					}
					_match_end_1a6d2e7d2:;
				}
			}
			_iter_next_1a6d2ca00:;
			++it;
			_1a6d2ca99_i++;
			goto _iter_begin_1a6d2ca00;
		}
		_iter_end_1a6d2ca00:;
	}
	return jule::Any(_1aa5e2723_build_while_iter_kind(&(*_self_), _37746_tokens));
}



inline jule::Any _1aa5e4e73_build_common_iter(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _40440_tokens) {
	jule::Ptr<_1aa0978c1_Iter> _40517_it = jule::new_ptr<_1aa0978c1_Iter>(_1aa0978c1_Iter(_40440_tokens[0LL],jule::Any(),jule::Ptr<_1aa09632b_ScopeTree>()));
	_40440_tokens=_40440_tokens.slice(1LL);
	if ((_40440_tokens.len() == 0LL)) {
		_1aa5deb2c_stop(&(*_self_));
		_1aa5e08a8_push_err(&(*_self_), _40517_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	jule::Slice<_1aa07563a_Token> _41517_expr_tokens = _1aa5edba2_get_block_expr(_40440_tokens);
	if ((_41517_expr_tokens.len() > 0LL)) {
		_40517_it.get()._field_kind=_1aa5e4abb_build_common_iter_kind(&(*_self_), _41517_expr_tokens,_40517_it.get()._field_token);
	}
	jule::I64 _41917_i = _41517_expr_tokens.len();
	jule::Slice<_1aa07563a_Token> _42017_scope_tokens = _1aa60ecc3_range(_41917_i,jule::Str("{", 1),jule::Str("}", 1),_40440_tokens);
	if ((_42017_scope_tokens == nullptr)) {
		_1aa5deb2c_stop(&(*_self_));
		_1aa5e08a8_push_err(&(*_self_), _40517_it.get()._field_token,jule::Str("body is not exist", 17));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	if (_41917_i < static_cast<jule::I64>(static_cast<jule::I64>(_40440_tokens.len()))) {
		_1aa5e08a8_push_err(&(*_self_), _40440_tokens[_41917_i],jule::Str("invalid syntax", 14));
	}
	_40517_it.get()._field_scope=_1aa5e1755_build_scope(&(*_self_), _42017_scope_tokens);
	return jule::Any(_40517_it);
}



inline jule::Any _1aa5e532a_buid_iter_st(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa5dd587_Stmt>& _43436_st) {
	if (_43436_st.get()._field_terminated) {
		return _1aa5e236b_build_while_next_iter(&(*_self_), _43436_st);
	}
	return _1aa5e4e73_build_common_iter(&(*_self_), _43436_st.get()._field_tokens);
}



inline jule::Any _1aa5e56d2_build_break_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _44138_tokens) {
	jule::Ptr<_1aa09862a_BreakSt> _44217_brk = jule::new_ptr<_1aa09862a_BreakSt>(_1aa09862a_BreakSt(_44138_tokens[0LL],_1aa07563a_Token()));
	if ((_44138_tokens.len() > 1LL)) {
		if (_44138_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1aa5e08a8_push_err(&(*_self_), _44138_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44217_brk.get()._field_label=_44138_tokens[1LL];
			if ((_44138_tokens.len() > 2LL)) {
				_1aa5e08a8_push_err(&(*_self_), _44138_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44217_brk);
}



inline jule::Any _1aa5e5a89_build_cont_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _45937_tokens) {
	jule::Ptr<_1aa098a48_ContSt> _46017_cont = jule::new_ptr<_1aa098a48_ContSt>(_1aa098a48_ContSt(_45937_tokens[0LL],_1aa07563a_Token()));
	if ((_45937_tokens.len() > 1LL)) {
		if (_45937_tokens[1LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1aa5e08a8_push_err(&(*_self_), _45937_tokens[1LL],jule::Str("invalid syntax", 14));
			_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46017_cont.get()._field_label=_45937_tokens[1LL];
			if ((_45937_tokens.len() > 2LL)) {
				_1aa5e08a8_push_err(&(*_self_), _45937_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_46017_cont);
}



inline jule::Ptr<_1aa098e66_If> _1aa5e5e41_build_if(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _47732_tokens) {
	jule::Ptr<_1aa098e66_If> _47817_model = jule::new_ptr<_1aa098e66_If>(_1aa098e66_If(_47732_tokens[0LL],jule::Ptr<_1aa08d334_Expr>(),jule::Ptr<_1aa09632b_ScopeTree>()));
	_47732_tokens=_47732_tokens.slice(1LL);
	jule::Slice<_1aa07563a_Token> _48217_expr_tokens = _1aa5edba2_get_block_expr(_47732_tokens);
	jule::I64 _48317_i = 0LL;
	if ((_48217_expr_tokens.len() == 0LL)) {
		_1aa5e08a8_push_err(&(*_self_), _47817_model.get()._field_token,jule::Str("expression missing", 18));
	} else {
		_48317_i=static_cast<jule::I64>(_48217_expr_tokens.len());
	}
	jule::Slice<_1aa07563a_Token> _48917_scope_tokens = _1aa60ecc3_range(_48317_i,jule::Str("{", 1),jule::Str("}", 1),_47732_tokens);
	if ((_48917_scope_tokens == nullptr)) {
		_1aa5deb2c_stop(&(*_self_));
		_1aa5e08a8_push_err(&(*_self_), _47817_model.get()._field_token,jule::Str("body is not exist", 17));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_48317_i < static_cast<jule::I64>(static_cast<jule::I64>(_47732_tokens.len()))) {
		if (_47732_tokens[_48317_i]._field_id == static_cast<jule::U64>(17LLU)) {
			_47732_tokens=_47732_tokens.slice(_48317_i);
		} else {
			_1aa5e08a8_push_err(&(*_self_), _47732_tokens[_48317_i],jule::Str("invalid syntax", 14));
			_47732_tokens=nullptr;
		}
	}
	_47817_model.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _48217_expr_tokens);
	_47817_model.get()._field_scope=_1aa5e1755_build_scope(&(*_self_), _48917_scope_tokens);
	return _47817_model;
}



inline jule::Ptr<_1aa09942d_Else> _1aa5e62e8_build_else(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _50934_tokens) {
	jule::Ptr<_1aa09942d_Else> _51017_els = jule::new_ptr<_1aa09942d_Else>(_1aa09942d_Else(_50934_tokens[0LL],jule::Ptr<_1aa09632b_ScopeTree>()));
	_50934_tokens=_50934_tokens.slice(1LL);
	jule::I64 _51417_i = 0LL;
	jule::Slice<_1aa07563a_Token> _51517_scope_tokens = _1aa60ecc3_range(_51417_i,jule::Str("{", 1),jule::Str("}", 1),_50934_tokens);
	if ((_51517_scope_tokens == nullptr)) {
		if (_51417_i < static_cast<jule::I64>(static_cast<jule::I64>(_50934_tokens.len()))) {
			_1aa5e08a8_push_err(&(*_self_), _51017_els.get()._field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1aa5deb2c_stop(&(*_self_));
			_1aa5e08a8_push_err(&(*_self_), _51017_els.get()._field_token,jule::Str("body is not exist", 17));
			_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	if (_51417_i < static_cast<jule::I64>(static_cast<jule::I64>(_50934_tokens.len()))) {
		_1aa5e08a8_push_err(&(*_self_), _50934_tokens[_51417_i],jule::Str("invalid syntax", 14));
	}
	_51017_els.get()._field_scope=_1aa5e1755_build_scope(&(*_self_), _51517_scope_tokens);
	return _51017_els;
}



inline jule::Any _1aa5e66a0_build_if_else_chain(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _53342_tokens) {
	jule::Ptr<_1aa099a38_Conditional> _53417_chain = jule::new_ptr<_1aa099a38_Conditional>(_1aa099a38_Conditional(_1aa5e5e41_build_if(&(*_self_), _53342_tokens),jule::Slice<jule::Ptr<_1aa098e66_If>>(),jule::Ptr<_1aa09942d_Else>()));
	if ((_53417_chain.get()._field_head == nullptr)) {
		return jule::Any(nullptr);
	}
	while ((_53342_tokens.len() != 0LL)) {
		{
			if (_53342_tokens[0LL]._field_id != static_cast<jule::U64>(17LLU)) {
				goto _iter_end_1a6d524c5;
			}
			if ((_53342_tokens.len() > 1LL) && (_53342_tokens[1LL]._field_id == static_cast<jule::U64>(16LLU))) {
				_53342_tokens=_53342_tokens.slice(1LL);
				jule::Ptr<_1aa098e66_If> _54625_elif = _1aa5e5e41_build_if(&(*_self_), _53342_tokens);
				_53417_chain.get()._field_tail = jule::alloc_for_append(_53417_chain.get()._field_tail,1);_53417_chain.get()._field_tail.__push(_54625_elif);
				goto _iter_next_1a6d524c5;
			}
			_53417_chain.get()._field_default=_1aa5e62e8_build_else(&(*_self_), _53342_tokens);
			goto _iter_end_1a6d524c5;
		}
	_iter_next_1a6d524c5:;
	}
	_iter_end_1a6d524c5:;
	return jule::Any(_53417_chain);
}



inline jule::Any _1aa5e6a57_build_co_call_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _55639_tokens) {
	jule::Ptr<_1aa08e8c9_CoExpr> _55717_c = jule::new_ptr<_1aa08e8c9_CoExpr>(_1aa08e8c9_CoExpr(_55639_tokens[0LL],jule::Ptr<_1aa08d334_Expr>()));
	_55639_tokens=_55639_tokens.slice(1LL);
	_55717_c.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _55639_tokens);
	return jule::Any(_55717_c);
}



inline jule::Any _1aa5e6e0e_build_goto_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _56537_tokens) {
	jule::Ptr<_1aa0951a4_GotoSt> _56617_gt = jule::new_ptr<_1aa0951a4_GotoSt>(_1aa0951a4_GotoSt(_56537_tokens[0LL],_1aa07563a_Token()));
	if ((_56537_tokens.len() == 1LL)) {
		_1aa5e08a8_push_err(&(*_self_), _56617_gt.get()._field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if ((_56537_tokens.len() > 2LL)) {
		_1aa5e08a8_push_err(&(*_self_), _56537_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_1aa07563a_Token _57517_ident_token = _56537_tokens[1LL];
	if (_57517_ident_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa5e08a8_push_err(&(*_self_), _57517_ident_token,jule::Str("invalid syntax", 14));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return jule::Any(_56617_gt);
	}
	_56617_gt.get()._field_label=_57517_ident_token;
	return jule::Any(_56617_gt);
}



inline jule::Any _1aa5e72b6_build_fall_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _58537_tokens) {
	jule::Ptr<_1aa0955c2_FallSt> _58617_fll = jule::new_ptr<_1aa0955c2_FallSt>(_1aa0955c2_FallSt(_58537_tokens[0LL]));
	if ((_58537_tokens.len() > 1LL)) {
		_1aa5e08a8_push_err(&(*_self_), _58537_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58617_fll);
}



inline jule::Any _1aa5e766d_build_type_alias_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _59543_tokens) {
	jule::Ptr<_1aa09a330_TypeAliasDecl> _59617_tad = _1aa614c62_build_type_alias_decl((*_self_)._field_p, _59543_tokens);
	_59617_tad.get()._field_scope=(*_self_)._field_s;
	return jule::Any(_59617_tad);
}



inline void _1aa5e7c23_push_case_expr(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _60137_tokens,_1aa07563a_Token _60158_token,jule::Bool _6029_type_match,jule::Slice<jule::Ptr<_1aa08d334_Expr>>& _60232_exprs) {
	if ((_60137_tokens.len() == 0LL)) {
		return;
	}
	if (_6029_type_match) {
		jule::I64 _60821_i = 0LL;
		jule::Ptr<_1dd583461_TypeDecl> _60922_t;
		jule::Bool _60925_ok;
		std::tie(_60922_t,_60925_ok) = _1aa6148aa_build_type((*_self_)._field_p, _60137_tokens,(&(_60821_i)),true);
		if (_60925_ok) {
			_60232_exprs = jule::alloc_for_append(_60232_exprs,1);_60232_exprs.__push(jule::new_ptr<_1aa08d334_Expr>(_1aa08d334_Expr(_60158_token,jule::Bool(),jule::Any(jule::Any(_60922_t)))));
			if (_60821_i < static_cast<jule::I64>(static_cast<jule::I64>(_60137_tokens.len()))) {
				_1aa5e08a8_push_err(&(*_self_), _60137_tokens[_60821_i],jule::Str("invalid syntax", 14));
			}
		}
		return;
	}
	_60232_exprs = jule::alloc_for_append(_60232_exprs,1);_60232_exprs.__push(_1aa61325a_build_expr((*_self_)._field_p, _60137_tokens));
}



inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa5e81a7_build_case_exprs(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _62440_tokens,jule::Bool _62457_type_match) {
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _62517_exprs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>::alloc(0LL,1LL);
	jule::I64 _62717_brace_n = 0LL;
	jule::I64 _62817_j = 0LL;
	{
		auto &expr = _62440_tokens;
		auto it = expr.begin();
		_iter_begin_1a6d67155:;
		if (it != expr.end()) {
			jule::I64 _1a6d67c9e_i = it - expr.begin();
			_1aa07563a_Token _1a6d68013_tok = *it;
			{
				if (_1a6d68013_tok._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6d68013_tok._field_kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a6d68ee2:;
							{
								(_62717_brace_n)++;
							}
						}
						else {
							_case_begin_1a6d68882:;
							{
								(_62717_brace_n)--;
							}
						}
						_match_end_1a6d68bb2:;
					}
					goto _iter_next_1a6d67155;
				} else if ((_62717_brace_n != 0LL)) {
					goto _iter_next_1a6d67155;
				}
				{
					
					if ((_1a6d68013_tok._field_id == static_cast<jule::U64>(7LLU)) && (_1a6d68013_tok._field_kind == jule::Str("|", 1))) {
						_case_begin_1a6d699d7:;
						{
							jule::Slice<_1aa07563a_Token> _64521_expr_tokens = _62440_tokens.slice(_62817_j,_1a6d67c9e_i);
							if ((_64521_expr_tokens.len() == 0LL)) {
								_1aa5e08a8_push_err(&(*_self_), _1a6d68013_tok,jule::Str("expression missing", 18));
							} else {
								_1aa5e7c23_push_case_expr(&(*_self_), _62440_tokens.slice(_62817_j,_1a6d67c9e_i),_1a6d68013_tok,_62457_type_match,_62517_exprs);
							}
							_62817_j=static_cast<jule::I64>((_1a6d67c9e_i + 1LL));
						}
					}
					else if (_1a6d68013_tok._field_id == static_cast<jule::U64>(11LLU)) {
						_case_begin_1a6d69ad6:;
						{
							_1aa5e7c23_push_case_expr(&(*_self_), _62440_tokens.slice(_62817_j,_1a6d67c9e_i),_1a6d68013_tok,_62457_type_match,_62517_exprs);
							_62440_tokens=_62440_tokens.slice((_1a6d67c9e_i + 1LL));
							return _62517_exprs;
						}
					}
					_match_end_1a6d69234:;
				}
			}
			_iter_next_1a6d67155:;
			++it;
			_1a6d67c9e_i++;
			goto _iter_begin_1a6d67155;
		}
		_iter_end_1a6d67155:;
	}
	_1aa5e08a8_push_err(&(*_self_), _62440_tokens[0LL],jule::Str("invalid syntax", 14));
	_62440_tokens=nullptr;
	return nullptr;
}



inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e855e_build_case_scope(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _66340_tokens) {
	jule::I64 _66417_n = 0LL;
	for (;;) {
		{
			jule::I64 _66621_i = 0LL;
			jule::Slice<_1aa07563a_Token> _66722_next;
			std::tie(_66722_next,std::ignore) = _1aa5dd1e1_skip_st(_66621_i,_66340_tokens.slice(_66417_n));
			if ((_66722_next.len() == 0LL)) {
				goto _iter_end_1a6d6ec51;
			}
			_1aa07563a_Token _67117_tok = _66722_next[0LL];
			if ((_67117_tok._field_id != static_cast<jule::U64>(7LLU)) || (_67117_tok._field_kind != jule::Str("|", 1))) {
				_66417_n+=_66621_i;
				goto _iter_next_1a6d6ec51;
			}
			jule::Slice<_1aa07563a_Token> _67621_scope_tokens = _66340_tokens.slice(0LL,_66417_n);
			jule::Ptr<_1aa09632b_ScopeTree> _67721_scope = _1aa5e1755_build_scope(&(*_self_), _67621_scope_tokens);
			_66340_tokens=_66340_tokens.slice(_66417_n);
			return _67721_scope;
		}
	_iter_next_1a6d6ec51:;
	}
	_iter_end_1a6d6ec51:;
	jule::Ptr<_1aa09632b_ScopeTree> _68117_scope = _1aa5e1755_build_scope(&(*_self_), _66340_tokens);
	_66340_tokens=nullptr;
	return _68117_scope;
}



inline std::tuple<jule::Ptr<_1aa09a93a_Case>,jule::Bool> _1aa5e89e3_build_case(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _68634_tokens,jule::Bool _68651_type_match) {
	jule::Ptr<_1aa09a93a_Case> _68717_c = jule::new_ptr<_1aa09a93a_Case>(_1aa09a93a_Case(_68634_tokens[0LL],jule::Ptr<_1aa09632b_ScopeTree>(),jule::Slice<jule::Ptr<_1aa08d334_Expr>>()));
	_68634_tokens=_68634_tokens.slice(1LL);
	_68717_c.get()._field_exprs=_1aa5e81a7_build_case_exprs(&(*_self_), _68634_tokens,_68651_type_match);
	_68717_c.get()._field_scope=_1aa5e855e_build_case_scope(&(*_self_), _68634_tokens);
	jule::Bool _69313_is_default = (_68717_c.get()._field_exprs.len() == 0LL);
	return std::make_tuple(_68717_c,_69313_is_default);
}



inline std::tuple<jule::Slice<jule::Ptr<_1aa09a93a_Case>>,jule::Ptr<_1aa09942d_Else>> _1aa5e8e77_build_cases(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _69734_tokens,jule::Bool _69751_type_match) {
	jule::Slice<jule::Ptr<_1aa09a93a_Case>> _69817_cases = nullptr;
	jule::Ptr<_1aa09942d_Else> _69917_def = nullptr;
	jule::Bool _70017_def_not_last = false;
	while ((_69734_tokens.len() > 0LL)) {
		{
			_1aa07563a_Token _70221_tok = _69734_tokens[0LL];
			if ((_70221_tok._field_id != static_cast<jule::U64>(7LLU)) || (_70221_tok._field_kind != jule::Str("|", 1))) {
				_1aa5e08a8_push_err(&(*_self_), _70221_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1a6d77d25;
			}
			jule::Ptr<_1aa09a93a_Case> _70722_c;
			jule::Bool _70725_is_default;
			std::tie(_70722_c,_70725_is_default) = _1aa5e89e3_build_case(&(*_self_), _69734_tokens,_69751_type_match);
			if (_70725_is_default) {
				_70722_c.get()._field_token=_70221_tok;
				if ((_69917_def == nullptr)) {
					_69917_def=jule::new_ptr<_1aa09942d_Else>(_1aa09942d_Else(_70722_c.get()._field_token,_70722_c.get()._field_scope));
				} else {
					_1aa5e08a8_push_err(&(*_self_), _70221_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70017_def_not_last=_70017_def_not_last || (_69917_def != nullptr);
				_69817_cases = jule::alloc_for_append(_69817_cases,1);_69817_cases.__push(_70722_c);
			}
		}
	_iter_next_1a6d77d25:;
	}
	_iter_end_1a6d77d25:;
	if (_70017_def_not_last) {
		_1aa5e08a8_push_err(&(*_self_), _69917_def.get()._field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_69817_cases,_69917_def);
}



inline jule::Ptr<_1aa09b188_MatchCase> _1aa5e932e_build_match_case(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _73139_tokens) {
	jule::Ptr<_1aa09b188_MatchCase> _73217_m = jule::new_ptr<_1aa09b188_MatchCase>(_1aa09b188_MatchCase(_73139_tokens[0LL],jule::Bool(),jule::Ptr<_1aa08d334_Expr>(),jule::Slice<jule::Ptr<_1aa09a93a_Case>>(),jule::Ptr<_1aa09942d_Else>()));
	_73139_tokens=_73139_tokens.slice(1LL);
	if ((_73139_tokens.len() > 0LL) && (_73139_tokens[0LL]._field_id == static_cast<jule::U64>(10LLU))) {
		_73217_m.get()._field_type_match=true;
		_73139_tokens=_73139_tokens.slice(1LL);
	}
	jule::Slice<_1aa07563a_Token> _74217_expr_tokens = _1aa5edba2_get_block_expr(_73139_tokens);
	if ((_74217_expr_tokens.len() > 0LL)) {
		_73217_m.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _74217_expr_tokens);
	} else if (_73217_m.get()._field_type_match) {
		_1aa5e08a8_push_err(&(*_self_), _73217_m.get()._field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _74917_i = _74217_expr_tokens.len();
	jule::Slice<_1aa07563a_Token> _75017_block_toks = _1aa60ecc3_range(_74917_i,jule::Str("{", 1),jule::Str("}", 1),_73139_tokens);
	if ((_75017_block_toks == nullptr)) {
		_1aa5deb2c_stop(&(*_self_));
		_1aa5e08a8_push_err(&(*_self_), _73217_m.get()._field_token,jule::Str("body is not exist", 17));
		_1aa5e0ca4_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_73217_m.get()._field_cases,_73217_m.get()._field_default) = _1aa5e8e77_build_cases(&(*_self_), _75017_block_toks,_73217_m.get()._field_type_match);
	return _73217_m;
}



inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5e96d6_build_scope_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _76237_tokens) {
	jule::Bool _76317_is_unsafe = false;
	jule::Bool _76417_is_deferred = false;
	_1aa07563a_Token _76517_token = _76237_tokens[0LL];
	if (_76517_token._field_id == static_cast<jule::U64>(35LLU)) {
		_76317_is_unsafe=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if ((_76237_tokens.len() == 0LL)) {
			_1aa5e08a8_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_76517_token=_76237_tokens[0LL];
		if (_76517_token._field_id == static_cast<jule::U64>(37LLU)) {
			_76417_is_deferred=true;
			_76237_tokens=_76237_tokens.slice(1LL);
			if ((_76237_tokens.len() == 0LL)) {
				_1aa5e08a8_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_76517_token._field_id == static_cast<jule::U64>(37LLU)) {
		_76417_is_deferred=true;
		_76237_tokens=_76237_tokens.slice(1LL);
		if ((_76237_tokens.len() == 0LL)) {
			_1aa5e08a8_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::I64 _79117_i = 0LL;
	jule::Slice<_1aa07563a_Token> _79217_scope_tokens = _1aa60ecc3_range(_79117_i,jule::Str("{", 1),jule::Str("}", 1),_76237_tokens);
	if ((_79217_scope_tokens == nullptr)) {
		_1aa5e08a8_push_err(&(*_self_), _76517_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79117_i < static_cast<jule::I64>(static_cast<jule::I64>(_76237_tokens.len()))) {
		_1aa5e08a8_push_err(&(*_self_), _76237_tokens[_79117_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_1aa09632b_ScopeTree> _79917_scope = _1aa5e1755_build_scope(&(*_self_), _79217_scope_tokens);
	_79917_scope.get()._field_unsafety=_76317_is_unsafe;
	_79917_scope.get()._field_deferred=_76417_is_deferred;
	return _79917_scope;
}



inline jule::Ptr<_1aa094c86_LabelSt> _1aa5e9a8d_build_label_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _80538_tokens) {
	jule::Ptr<_1aa094c86_LabelSt> _80617_lbl = jule::new_ptr<_1aa094c86_LabelSt>(_1aa094c86_LabelSt(_80538_tokens[0LL],_80538_tokens[0LL]._field_kind));
	if ((_80538_tokens.len() > 2LL)) {
		_80538_tokens=_80538_tokens.slice(2LL);
		_1aa5e10c3_insert_as_next(&(*_self_), _80538_tokens);
	}
	return _80617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _1aa5e9e45_build_id_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _82035_tokens) {
	jule::Bool _82064_ok = jule::Bool();
	if ((_82035_tokens.len() == 1LL)) {
		return std::make_tuple(jule::Any(),_82064_ok);
	}
	_1aa07563a_Token _82517_token = _82035_tokens[1LL];
	{
		auto &_match_expr{ _82517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a6d922e5:;
			{
				_82064_ok = true;
				return std::make_tuple(jule::Any(_1aa5e9a8d_build_label_st(&(*_self_), _82035_tokens)),_82064_ok);
			}
		}
		_match_end_1a6d93071:;
	}
	return std::make_tuple(jule::Any(),_82064_ok);
}



inline jule::Ptr<_1aa60c82b_AssignInfo> _1aa5ea2ec_build_assign_info(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _83441_tokens) {
	jule::Ptr<_1aa60c82b_AssignInfo> _83517_info = jule::new_ptr<_1aa60c82b_AssignInfo>(_1aa60c82b_AssignInfo(jule::Slice<_1aa07563a_Token>(),jule::Slice<_1aa07563a_Token>(),_1aa07563a_Token(),true));
	jule::I64 _83817_brace_n = 0LL;
	{
		auto &expr = _83441_tokens;
		auto it = expr.begin();
		_iter_begin_1a6d9535e:;
		if (it != expr.end()) {
			jule::I64 _1a6d95408_i = it - expr.begin();
			_1aa07563a_Token _1a6d9567d_token = *it;
			{
				if (_1a6d9567d_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6d9567d_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6d96690:;
							{
								(_83817_brace_n)++;
							}
						}
						else {
							_case_begin_1a6d96030:;
							{
								(_83817_brace_n)--;
							}
						}
						_match_end_1a6d96360:;
					}
				}
				{
					
					if ((_83817_brace_n > 0LL)) {
						_case_begin_1a6d968e3:;
						{
							goto _iter_next_1a6d9535e;
						}
					}
					else if (_1a6d9567d_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1a6d96c89:;
						{
							goto _iter_next_1a6d9535e;
						}
					}
					else if ((!(_1aa07ade3_is_assign_op(_1a6d9567d_token._field_kind)))) {
						_case_begin_1a6d96d11:;
						{
							goto _iter_next_1a6d9535e;
						}
					}
					_match_end_1a6d97064:;
				}
				_83517_info.get()._field_l=_83441_tokens.slice(0LL,_1a6d95408_i);
				if ((_83517_info.get()._field_l.len() == 0LL)) {
					_83517_info.get()._field_ok=false;
				}
				_83517_info.get()._field_setter=_1a6d9567d_token;
				if ((_1a6d95408_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_83441_tokens.len()))) {
					_83517_info.get()._field_r=nullptr;
					_83517_info.get()._field_ok=_1aa07aad5_is_postfix_op(_83517_info.get()._field_setter._field_kind);
					goto _iter_end_1a6d9535e;
				}
				_83517_info.get()._field_r=_83441_tokens.slice((_1a6d95408_i + 1LL));
				if (_1aa07aad5_is_postfix_op(_83517_info.get()._field_setter._field_kind)) {
					if ((_83517_info.get()._field_r.len() > 0LL)) {
						_1aa5e08a8_push_err(&(*_self_), _83517_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_83517_info.get()._field_r=nullptr;
					}
				}
				goto _iter_end_1a6d9535e;
			}
			_iter_next_1a6d9535e:;
			++it;
			_1a6d95408_i++;
			goto _iter_begin_1a6d9535e;
		}
		_iter_end_1a6d9535e:;
	}
	return _83517_info;
}



inline jule::Ptr<_1aa0959e0_AssignLeft> _1aa5ea6a4_build_assign_l(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _88238_tokens) {
	jule::Ptr<_1aa0959e0_AssignLeft> _88317_l = jule::new_ptr<_1aa0959e0_AssignLeft>(_1aa0959e0_AssignLeft(_88238_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_1aa08d334_Expr>()));
	if (_88238_tokens[0LL]._field_id == static_cast<jule::U64>(2LLU)) {
		_88317_l.get()._field_ident=_88317_l.get()._field_token._field_kind;
	}
	_88317_l.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _88238_tokens);
	return _88317_l;
}



inline jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>> _1aa5eaa5b_build_assign_ls(_1aa5de236_ScopeParser* _self_,jule::Slice<jule::Slice<_1aa07563a_Token>>& _89539_parts) {
	jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>> _89617_lefts = nullptr;
	{
		auto &expr = _89539_parts;
		auto it = expr.begin();
		_iter_begin_1a6da0743:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6da0875_part = *it;
			{
				jule::Ptr<_1aa0959e0_AssignLeft> _89821_l = _1aa5ea6a4_build_assign_l(&(*_self_), _1a6da0875_part);
				_89617_lefts = jule::alloc_for_append(_89617_lefts,1);_89617_lefts.__push(_89821_l);
			}
			_iter_next_1a6da0743:;
			++it;
			goto _iter_begin_1a6da0743;
		}
		_iter_end_1a6da0743:;
	}
	return _89617_lefts;
}



inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eae13_build_plain_assign(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _90542_tokens) {
	jule::Ptr<_1aa60c82b_AssignInfo> _90617_info = _1aa5ea2ec_build_assign_info(&(*_self_), _90542_tokens);
	if ((!(_90617_info.get()._field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1aa095e0d_AssignSt> _91117_assign = jule::new_ptr<_1aa095e0d_AssignSt>(_1aa095e0d_AssignSt(jule::Bool(),_90617_info.get()._field_setter,jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>>(),jule::Ptr<_1aa08d334_Expr>()));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _91518_parts;
	jule::Slice<_1c4810251_Log> _91525_errs;
	std::tie(_91518_parts,_91525_errs) = _1aa6105dc_parts(_90617_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
	if ((_91525_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_91525_errs);
		return std::make_tuple(nullptr,false);
	}
	_91117_assign.get()._field_left=_1aa5eaa5b_build_assign_ls(&(*_self_), _91518_parts);
	if ((_90617_info.get()._field_r != nullptr)) {
		_91117_assign.get()._field_right=_1aa61325a_build_expr((*_self_)._field_p, _90617_info.get()._field_r);
	}
	return std::make_tuple(_91117_assign,true);
}



inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eb2ba_build_decl_assign(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token> _92940_tokens) {
	if ((_92940_tokens.len() < 1LL)) {
		return std::make_tuple(nullptr,false);
	}
	_92940_tokens=_92940_tokens.slice(1LL);
	_1aa07563a_Token _93517_token = _92940_tokens[0LL];
	if ((_93517_token._field_id != static_cast<jule::U64>(3LLU)) || (_93517_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_1aa095e0d_AssignSt> _94017_assign = jule::new_ptr<_1aa095e0d_AssignSt>(_1aa095e0d_AssignSt(true,_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa0959e0_AssignLeft>>(),jule::Ptr<_1aa08d334_Expr>()));
	jule::I64 _94417_i = 0LL;
	jule::Slice<_1aa07563a_Token> _94517_rang = _1aa60ecc3_range(_94417_i,jule::Str("(", 1),jule::Str(")", 1),_92940_tokens);
	if ((_94517_rang == nullptr)) {
		_1aa5e08a8_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_94417_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_92940_tokens.len()))) {
		_94017_assign.get()._field_setter=_92940_tokens[_94417_i];
		(_94417_i)++;
		jule::Slice<_1aa07563a_Token> _95221_expr_tokens = _92940_tokens.slice(_94417_i);
		_94017_assign.get()._field_right=_1aa61325a_build_expr((*_self_)._field_p, _95221_expr_tokens);
	}
	jule::Slice<jule::Slice<_1aa07563a_Token>> _95718_parts;
	jule::Slice<_1c4810251_Log> _95725_errs;
	std::tie(_95718_parts,_95725_errs) = _1aa6105dc_parts(_94517_rang,static_cast<jule::U64>(8LLU),true);
	if ((_95725_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_95725_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto &expr = _95718_parts;
		auto it = expr.begin();
		_iter_begin_1a6dae246:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6dae598_part = *it;
			{
				jule::Bool _96421_is_mut = false;
				jule::Bool _96521_is_ref = false;
				_93517_token=_1a6dae598_part[0LL];
				if (_93517_token._field_id == static_cast<jule::U64>(36LLU)) {
					_96421_is_mut=true;
					_1a6dae598_part=_1a6dae598_part.slice(1LL);
					if ((_1a6dae598_part.len() == 0LL)) {
						_1aa5e08a8_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a6dae246;
					}
				}
				if ((_1a6dae598_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_1a6dae598_part[0LL]._field_kind == jule::Str("&", 1))) {
					_96521_is_ref=true;
					_1a6dae598_part=_1a6dae598_part.slice(1LL);
					if ((_1a6dae598_part.len() == 0LL)) {
						_1aa5e08a8_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1a6dae246;
					}
				}
				if (((_1a6dae598_part[0LL]._field_id != static_cast<jule::U64>(2LLU)) && (_1a6dae598_part[0LL]._field_id != static_cast<jule::U64>(3LLU))) && (_1a6dae598_part[0LL]._field_kind != jule::Str("(", 1))) {
					_1aa5e08a8_push_err(&(*_self_), _93517_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1a6dae246;
				}
				jule::Ptr<_1aa0959e0_AssignLeft> _99321_l = _1aa5ea6a4_build_assign_l(&(*_self_), _1a6dae598_part);
				_99321_l.get()._field_mutable=_96421_is_mut;
				_99321_l.get()._field_reference=_96521_is_ref;
				_94017_assign.get()._field_left = jule::alloc_for_append(_94017_assign.get()._field_left,1);_94017_assign.get()._field_left.__push(_99321_l);
			}
			_iter_next_1a6dae246:;
			++it;
			goto _iter_begin_1a6dae246;
		}
		_iter_end_1a6dae246:;
	}
	return std::make_tuple(_94017_assign,true);
}



inline std::tuple<jule::Ptr<_1aa095e0d_AssignSt>,jule::Bool> _1aa5eb672_build_assign_st(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _100239_tokens) {
	jule::Ptr<_1aa095e0d_AssignSt> _100258_st = jule::Ptr<_1aa095e0d_AssignSt>();
	jule::Bool _100273_ok = jule::Bool();
	if ((!(_1aa60ce36_check_assign_tokens(_100239_tokens)))) {
		_100258_st = nullptr;
		_100273_ok = false;
		return std::make_tuple(_100258_st,_100273_ok);
	}
	{
		auto &_match_expr{ _100239_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a6db97d4:;
			{
				std::tie(_100258_st,_100273_ok) = _1aa5eb2ba_build_decl_assign(&(*_self_), _100239_tokens);
			}
		}
		else {
			_case_begin_1a6db874a:;
			{
				std::tie(_100258_st,_100273_ok) = _1aa5eae13_build_plain_assign(&(*_self_), _100239_tokens);
			}
		}
		_match_end_1a6db8e54:;
	}
	return std::make_tuple(_100258_st,_100273_ok);
}



inline jule::Any _1aa5eba29_build_use_expr(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _101738_tokens) {
	if ((_101738_tokens.len() == 1LL)) {
		_1aa5e08a8_push_err(&(*_self_), _101738_tokens[0LL],jule::Str("expression missing", 18));
		return jule::Any(nullptr);
	}
	jule::Ptr<_1aa08d752_UseExpr> _102317_ue = jule::new_ptr<_1aa08d752_UseExpr>(_1aa08d752_UseExpr(_101738_tokens[0LL],jule::Ptr<_1aa08d334_Expr>()));
	_101738_tokens=_101738_tokens.slice(1LL);
	_102317_ue.get()._field_expr=_1aa61325a_build_expr((*_self_)._field_p, _101738_tokens);
	return jule::Any(_102317_ue);
}



inline jule::Any _1aa5ebdd1_build_st(_1aa5de236_ScopeParser* _self_,jule::Ptr<_1aa5dd587_Stmt>& _103232_st) {
	_1aa07563a_Token _103317_token = _103232_st.get()._field_tokens[0LL];
	if (_103317_token._field_id == static_cast<jule::U64>(2LLU)) {
		jule::Any _103522_s;
		jule::Bool _103525_ok;
		std::tie(_103522_s,_103525_ok) = _1aa5e9e45_build_id_st(&(*_self_), _103232_st.get()._field_tokens);
		if (_103525_ok) {
			return _103522_s;
		}
	}
	jule::Ptr<_1aa095e0d_AssignSt> _104118_s;
	jule::Bool _104121_ok;
	std::tie(_104118_s,_104121_ok) = _1aa5eb672_build_assign_st(&(*_self_), _103232_st.get()._field_tokens);
	if (_104121_ok) {
		return jule::Any(_104118_s);
	}
	{
		auto &_match_expr{ _103317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a6dc0147:;
			{
				return _1aa5eba29_build_use_expr(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a6dc0a93:;
			{
				return _1aa5e1b0c_build_var_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a6dc05cb:;
			{
				return _1aa5e1eb4_build_ret_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a6dc0642:;
			{
				return _1aa5e532a_buid_iter_st(&(*_self_), _103232_st);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a6dc06a8:;
			{
				return _1aa5e56d2_build_break_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1a6dc0cb3:;
			{
				return _1aa5e5a89_build_cont_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a6dc0d29:;
			{
				return _1aa5e66a0_build_if_else_chain(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a6dc0d90:;
			{
				return _1aa5e6a57_build_co_call_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a6dc0e06:;
			{
				return _1aa5e6e0e_build_goto_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a6dc0e6c:;
			{
				return _1aa5e72b6_build_fall_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a6dc0ed3:;
			{
				return _1aa5e766d_build_type_alias_st(&(*_self_), _103232_st.get()._field_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1a6dc105a:;
			{
				return jule::Any(_1aa5e932e_build_match_case(&(*_self_), _103232_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a6dc10d2:;
			{
				return jule::Any(_1aa5e96d6_build_scope_st(&(*_self_), _103232_st.get()._field_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a6dc1159:;
			{
				if ((_103317_token._field_kind == jule::Str("{", 1))) {
					return jule::Any(_1aa5e96d6_build_scope_st(&(*_self_), _103232_st.get()._field_tokens));
				}
			}
		}
		_match_end_1a6dc07c9:;
	}
	jule::Ptr<_1aa08d334_Expr> _108217_expr = _1aa61325a_build_expr((*_self_)._field_p, _103232_st.get()._field_tokens);
	if ((_108217_expr != nullptr)) {
		return jule::Any(_108217_expr);
	}
	_1aa5e08a8_push_err(&(*_self_), _103317_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



inline void _1aa5ec2cc_build(_1aa5de236_ScopeParser* _self_,jule::Slice<_1aa07563a_Token>& _109029_tokens,jule::Ptr<_1aa09632b_ScopeTree>& _109051_s) {
	if ((_109051_s == nullptr)) {
		return;
	}
	(*_self_)._field_stmts=_1aa5ddb92_split_stmts(_109029_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_109051_s;
	while ((!(_1aa5e04ac_is_last_st(&(*_self_)))) && (!(_1aa5e01d2_finished(&(*_self_))))) {
		{
			jule::Ptr<_1aa5dd587_Stmt> _109921_st = _1aa5e139d_next(&(*_self_));
			jule::Any _110021_data = _1aa5ebdd1_build_st(&(*_self_), _109921_st);
			if (_110021_data != jule::Any(jule::Any(nullptr))) {
				(*_self_)._field_s.get()._field_stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_stmts,1);(*_self_)._field_s.get()._field_stmts.__push(_1dd582b25_Node(_109921_st.get()._field_tokens[0LL],_110021_data));
			}
			if (_1aa5dee07_stopped(&(*_self_))) {
				goto _iter_end_1a6dcb8d4;
			}
		}
	_iter_next_1a6dcb8d4:;
	}
	_iter_end_1a6dcb8d4:;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5de236_ScopeParser _Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5ed278_CallData _Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _1aa6007db_push_err(_1aa5eebc5_ExprBuilder* _self_,_1aa07563a_Token _22427_token,jule::Str _22441_fmt,jule::Slice<jule::Any> _22454_args) {
	_1aa6129a7_push_err((*_self_)._field_p.ptr(), _22427_token,_22441_fmt,_22454_args);
}



inline void _1aa600bd7_push_suggestion(_1aa5eebc5_ExprBuilder* _self_,jule::Str _22934_fmt,jule::Slice<jule::Any> _22947_args) {
	_1aa612da3_push_suggestion((*_self_)._field_p.ptr(), _22934_fmt,_22947_args);
}



inline jule::Ptr<_1aa08db70_TupleExpr> _1aa60108e_build_tuple(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<jule::Slice<_1aa07563a_Token>>& _23335_parts) {
	jule::Ptr<_1aa08db70_TupleExpr> _23417_tuple = jule::new_ptr<_1aa08db70_TupleExpr>(_1aa08db70_TupleExpr(jule::Slice<jule::Ptr<_1aa08d334_Expr>>::alloc(0LL,static_cast<jule::I64>(_23335_parts.len()))));
	{
		auto &expr = _23335_parts;
		auto it = expr.begin();
		_iter_begin_1a6dd3435:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6dd3b0b_part = *it;
			{
				_23417_tuple.get()._field_expr = jule::alloc_for_append(_23417_tuple.get()._field_expr,1);_23417_tuple.get()._field_expr.__push(_1aa60bb49_build_from_tokens(&(*_self_), _1a6dd3b0b_part));
			}
			_iter_next_1a6dd3435:;
			++it;
			goto _iter_begin_1a6dd3435;
		}
		_iter_end_1a6dd3435:;
	}
	return _23417_tuple;
}



inline jule::Ptr<_1aa08e08d_LitExpr> _1aa601446_build_lit(_1aa5eebc5_ExprBuilder* _self_,_1aa07563a_Token _24328_token) {
	return jule::new_ptr<_1aa08e08d_LitExpr>(_1aa08e08d_LitExpr(_24328_token,_24328_token._field_kind));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa6017ed_build_primitive_type(_1aa5eebc5_ExprBuilder* _self_,_1aa07563a_Token& _25040_token) {
	return _1aa625c73_build_prim_type(_25040_token);
}



inline jule::Any _1aa601ba5_build_single(_1aa5eebc5_ExprBuilder* _self_,_1aa07563a_Token _25435_token) {
	{
		auto &_match_expr{ _25435_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a6dd6b31:;
			{
				return jule::Any(_1aa601446_build_lit(&(*_self_), _25435_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a6dd6e61:;
			{
				if ((_25435_token._field_kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1aa090633_VariadicExpr>(_1aa090633_VariadicExpr(_25435_token,jule::Ptr<_1aa08d334_Expr>())));
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(28LLU) || _match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a6dd6ec7:;
			{
				return jule::Any(_1aa5ee620_build_ident_expr(_25435_token));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a6dd704e:;
			{
				return jule::Any(_1aa6017ed_build_primitive_type(&(*_self_), _25435_token));
			}
		}
		_match_end_1a6dd6d95:;
	}
	_1aa6007db_push_err(&(*_self_), _25435_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aa08ece7_IdentExpr> _1aa60205c_build_cpp_linked_ident(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _27546_tokens) {
	if (_27546_tokens[0LL]._field_id != static_cast<jule::U64>(31LLU)) {
		return nullptr;
	} else if (_27546_tokens[1LL]._field_id != static_cast<jule::U64>(20LLU)) {
		_1aa6007db_push_err(&(*_self_), _27546_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1aa07563a_Token _28317_token = _27546_tokens[2LL];
	if (_28317_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6007db_push_err(&(*_self_), _27546_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa08ece7_IdentExpr> _28917_expr = _1aa5ee620_build_ident_expr(_28317_token);
	_28917_expr.get()._field_cpp_linked=true;
	return _28917_expr;
}



inline jule::Ptr<_1aa090215_UnaryExpr> _1aa602414_build_unary(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _29434_tokens) {
	_1aa07563a_Token _29517_op = _29434_tokens[0LL];
	if ((_29434_tokens.len() == 1LL)) {
		_1aa6007db_push_err(&(*_self_), _29517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;
	} else if ((!(_1aa076152_is_unary_op(_29517_op._field_kind)))) {
		_1aa6007db_push_err(&(*_self_), _29517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>({jule::Any(_29517_op._field_kind)}));
		return nullptr;
	}
	_29434_tokens=_29434_tokens.slice(1LL);
	return jule::new_ptr<_1aa090215_UnaryExpr>(_1aa090215_UnaryExpr(_29517_op,_1aa60bb49_build_from_tokens(&(*_self_), _29434_tokens)));
}



inline jule::Ptr<_1aa09138c_SubIdentExpr> _1aa6027bb_build_obj_sub_ident(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _31542_tokens) {
	jule::I64 _31617_i = (_31542_tokens.len() - 1LL);
	_1aa07563a_Token _31717_ident_token = _31542_tokens[_31617_i];
	(_31617_i)--;
	_31542_tokens=_31542_tokens.slice(0LL,_31617_i);
	if ((_31542_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _31717_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aa09138c_SubIdentExpr>(_1aa09138c_SubIdentExpr(jule::Bool(),_1aa60bb49_build_from_tokens(&(*_self_), _31542_tokens),_31717_ident_token));
}



inline jule::Ptr<_1aa090e6e_NsSelectionExpr> _1aa602b73_build_ns_sub_ident(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _33042_tokens) {
	jule::Ptr<_1aa090e6e_NsSelectionExpr> _33117_ns = jule::new_ptr<_1aa090e6e_NsSelectionExpr>(_1aa090e6e_NsSelectionExpr());
	{
		auto &expr = _33042_tokens;
		auto it = expr.begin();
		_iter_begin_1a6de6d1c:;
		if (it != expr.end()) {
			jule::I64 _1a6de6e2c_i = it - expr.begin();
			_1aa07563a_Token _1a6de71a2_token = *it;
			{
				if (((_1a6de6e2c_i & 1LL) == 0LL)) {
					if (_1a6de71a2_token._field_id != static_cast<jule::U64>(2LLU)) {
						_1aa6007db_push_err(&(*_self_), _1a6de71a2_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aa600bd7_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					}
					_33117_ns.get()._field_ns = jule::alloc_for_append(_33117_ns.get()._field_ns,1);_33117_ns.get()._field_ns.__push(_1a6de71a2_token);
				} else if (_1a6de71a2_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1aa6007db_push_err(&(*_self_), _1a6de71a2_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aa600bd7_push_suggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				}
			}
			_iter_next_1a6de6d1c:;
			++it;
			_1a6de6e2c_i++;
			goto _iter_begin_1a6de6d1c;
		}
		_iter_end_1a6de6d1c:;
	}
	_33117_ns.get()._field_ident=_33117_ns.get()._field_ns[(_33117_ns.get()._field_ns.len() - 1LL)];
	_33117_ns.get()._field_ns=_33117_ns.get()._field_ns.slice(0LL,(_33117_ns.get()._field_ns.len() - 1LL));
	return _33117_ns;
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa60302a_build_type(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _34934_tokens) {
	jule::I64 _35017_i = 0LL;
	jule::Ptr<_1dd583461_TypeDecl> _35118_t;
	jule::Bool _35121_ok;
	std::tie(_35118_t,_35121_ok) = _1aa6148aa_build_type((*_self_)._field_p, _34934_tokens,(&(_35017_i)),false);
	if ((!(_35121_ok))) {
		_1aa6007db_push_err(&(*_self_), _34934_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_35017_i < static_cast<jule::I64>(static_cast<jule::I64>(_34934_tokens.len()))) {
		_1aa6007db_push_err(&(*_self_), _34934_tokens[_35017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _35118_t;
}



inline jule::Any _1aa6033d2_build_sub_ident(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _36339_tokens) {
	jule::I64 _36413_i = (_36339_tokens.len() - 2LL);
	_1aa07563a_Token _36513_token = _36339_tokens[_36413_i];
	{
		auto &_match_expr{ _36513_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a6e00e36:;
			{
				return jule::Any(_1aa6027bb_build_obj_sub_ident(&(*_self_), _36339_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a6e01695:;
			{
				return jule::Any(_1aa602b73_build_ns_sub_ident(&(*_self_), _36339_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a6e0170b:;
			{
				if ((_36513_token._field_kind == jule::Str("]", 1))) {
					return jule::Any(_1aa60302a_build_type(&(*_self_), _36339_tokens));
				}
			}
		}
		_match_end_1a6e01596:;
	}
	_1aa6007db_push_err(&(*_self_), _36513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aa090633_VariadicExpr> _1aa603789_build_variadic(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _38137_tokens) {
	_1aa07563a_Token _38217_token = _38137_tokens[(_38137_tokens.len() - 1LL)];
	_38137_tokens=_38137_tokens.slice(0LL,(_38137_tokens.len() - 1LL));
	return jule::new_ptr<_1aa090633_VariadicExpr>(_1aa090633_VariadicExpr(_38217_token,_1aa60bb49_build_from_tokens(&(*_self_), _38137_tokens)));
}



inline jule::Any _1aa603b41_build_op_right(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _39038_tokens) {
	_1aa07563a_Token _39117_token = _39038_tokens[(_39038_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _39117_token._field_kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a6e065ac:;
			{
				_39038_tokens=_39038_tokens.slice(0LL,(_39038_tokens.len() - 1LL));
				jule::Any _39521_d = _1aa60b3da_build(&(*_self_), _39038_tokens);
				if (_39521_d == jule::Any(jule::Any(nullptr))) {
					return jule::Any(nullptr);
				}
				{
					auto &_match_expr{ _39521_d };
					
					if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>()) {
						_case_begin_1a6e08922:;
						{
							_39521_d.operator jule::Ptr<_1aa091bc8_FnCallExpr>().get()._field_exception=jule::new_ptr<_1aa09632b_ScopeTree>(_1aa09632b_ScopeTree(jule::Ptr<_1aa09632b_ScopeTree>(),jule::Bool(),true,jule::Slice<_1dd582b25_Node>()));
							return _39521_d;
						}
					}
					_match_end_1a6e08b53:;
				}
			}
		}
		else if (_match_expr == jule::Str("...", 3)) {
			_case_begin_1a6e06ea3:;
			{
				return jule::Any(_1aa603789_build_variadic(&(*_self_), _39038_tokens));
			}
		}
		_match_end_1a6e06e2b:;
	}
	_1aa6007db_push_err(&(*_self_), _39117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aa08d334_Expr> _1aa60403c_build_between_parentheses(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _41348_tokens) {
	_1aa07563a_Token _41413_token = _41348_tokens[0LL];
	_41348_tokens=_41348_tokens.slice(1LL,(_41348_tokens.len() - 1LL));
	if ((_41348_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _41413_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa08d334_Expr> _42117_expr = _1aa60bb49_build_from_tokens(&(*_self_), _41348_tokens);
	_42117_expr.get()._field_range=true;
	return _42117_expr;
}



inline jule::Ptr<_1aa090a51_CastExpr> _1aa6043d3_try_build_cast(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _42638_tokens) {
	jule::I64 _42717_range_n = 0LL;
	{
		auto &expr = _42638_tokens;
		auto it = expr.begin();
		_iter_begin_1a6e0e818:;
		if (it != expr.end()) {
			jule::I64 _1a6e0e8b2_i = it - expr.begin();
			_1aa07563a_Token _1a6e0eb37_token = *it;
			{
				if (_1a6e0eb37_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6e0eb37_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6e10b05:;
							{
								(_42717_range_n)++;
								goto _iter_next_1a6e0e818;
							}
						}
						else {
							_case_begin_1a6e10495:;
							{
								(_42717_range_n)--;
							}
						}
						_match_end_1a6e107c5:;
					}
				}
				if ((_42717_range_n > 0LL)) {
					goto _iter_next_1a6e0e818;
				} else if ((_1a6e0e8b2_i + 1LL) == static_cast<jule::I64>(static_cast<jule::I64>(_42638_tokens.len()))) {
					return nullptr;
				}
				jule::Slice<_1aa07563a_Token> _44721_type_tokens = _42638_tokens.slice(0LL,(_1a6e0e8b2_i + 1LL));
				jule::Slice<_1aa07563a_Token> _44821_expr_tokens = _42638_tokens.slice((_1a6e0e8b2_i + 1LL));
				if ((_44821_expr_tokens.len() == 0LL)) {
					return nullptr;
				}
				_1aa07563a_Token _45517_tok = _44821_expr_tokens[0LL];
				if ((_45517_tok._field_id != static_cast<jule::U64>(3LLU)) || (_45517_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_1aa090a51_CastExpr> _46021_cast = jule::new_ptr<_1aa090a51_CastExpr>(_1aa090a51_CastExpr());
				if ((_44821_expr_tokens.len() == 2LL)) {
					_1aa6007db_push_err(&(*_self_), _44821_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1aa600bd7_push_suggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				}
				if ((_44721_type_tokens.len() == 2LL)) {
					_1aa6007db_push_err(&(*_self_), _44721_type_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1aa600bd7_push_suggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_44721_type_tokens=_44721_type_tokens.slice(1LL,(_44721_type_tokens.len() - 1LL));
					jule::I64 _47425_type_index = 0LL;
					jule::Ptr<_1dd583461_TypeDecl> _47526_t;
					jule::Bool _47529_ok;
					std::tie(_47526_t,_47529_ok) = _1aa6148aa_build_type((*_self_)._field_p, _44721_type_tokens,(&(_47425_type_index)),true);
					if (_47529_ok && (_47425_type_index < static_cast<jule::I64>(static_cast<jule::I64>(_44721_type_tokens.len())))) {
						_1aa6007db_push_err(&(*_self_), _44721_type_tokens[_47425_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_47529_ok))) {
						return _46021_cast;
					}
					_46021_cast.get()._field_kind=_47526_t;
					if ((_44821_expr_tokens.len() > 2LL)) {
						jule::I64 _48529_j = 0LL;
						_1aa60ecc3_range(_48529_j,jule::Str("(", 1),jule::Str(")", 1),_44821_expr_tokens);
						if (_48529_j < static_cast<jule::I64>(static_cast<jule::I64>(_44821_expr_tokens.len()))) {
							return nullptr;
						}
						_44821_expr_tokens=_44821_expr_tokens.slice(0LL,_48529_j);
						_46021_cast.get()._field_expr=_1aa60bb49_build_from_tokens(&(*_self_), _44821_expr_tokens);
					}
				}
				return _46021_cast;
			}
			_iter_next_1a6e0e818:;
			++it;
			_1a6e0e8b2_i++;
			goto _iter_begin_1a6e0e818;
		}
		_iter_end_1a6e0e818:;
	}
	return nullptr;
}



inline void _1aa6048ab_push_arg(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<jule::Ptr<_1aa08d334_Expr>>& _50032_args,jule::Slice<_1aa07563a_Token> _50051_tokens,_1aa07563a_Token _50068_err_token) {
	if ((_50051_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _50068_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_50032_args = jule::alloc_for_append(_50032_args,1);_50032_args.__push(_1aa60bb49_build_from_tokens(&(*_self_), _50051_tokens));
}



inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa604c63_build_args(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _50933_tokens) {
	if ((_50933_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _51517_args = nullptr;
	jule::I64 _51617_last = 0LL;
	jule::I64 _51717_range_n = 0LL;
	_50933_tokens=_50933_tokens.slice(1LL,(_50933_tokens.len() - 1LL));
	{
		auto &expr = _50933_tokens;
		auto it = expr.begin();
		_iter_begin_1a6e25c2a:;
		if (it != expr.end()) {
			jule::I64 _1a6e265dd_i = it - expr.begin();
			_1aa07563a_Token _1a6e2670e_token = *it;
			{
				if (_1a6e2670e_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6e2670e_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6e27633:;
							{
								(_51717_range_n)++;
							}
						}
						else {
							_case_begin_1a6e26ec3:;
							{
								(_51717_range_n)--;
							}
						}
						_match_end_1a6e27303:;
					}
				}
				if ((_51717_range_n > 0LL) || (_1a6e2670e_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1a6e25c2a;
				}
				_1aa6048ab_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last,_1a6e265dd_i),_1a6e2670e_token);
				_51617_last=static_cast<jule::I64>((_1a6e265dd_i + 1LL));
			}
			_iter_next_1a6e25c2a:;
			++it;
			_1a6e265dd_i++;
			goto _iter_begin_1a6e25c2a;
		}
		_iter_end_1a6e25c2a:;
	}
	if (_51617_last < static_cast<jule::I64>(static_cast<jule::I64>(_50933_tokens.len()))) {
		if ((_51617_last == 0LL)) {
			if ((_50933_tokens.len() > 0LL)) {
				_1aa6048ab_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last),_50933_tokens[_51617_last]);
			}
		} else {
			_1aa6048ab_push_arg(&(*_self_), _51517_args,_50933_tokens.slice(_51617_last),_50933_tokens[(_51617_last - 1LL)]);
		}
	}
	return _51517_args;
}



inline jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _1aa60511a_build_call_generics(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _55142_tokens) {
	if ((_55142_tokens.len() == 0LL)) {
		return nullptr;
	}
	_55142_tokens=_55142_tokens.slice(1LL,(_55142_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _55718_parts;
	jule::Slice<_1c4810251_Log> _55725_errs;
	std::tie(_55718_parts,_55725_errs) = _1aa6105dc_parts(_55142_tokens,static_cast<jule::U64>(8LLU),true);
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _55817_generics = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_55718_parts.len()));
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_55725_errs);
	{
		auto &expr = _55718_parts;
		auto it = expr.begin();
		_iter_begin_1a6e2d53a:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6e2deec_part = *it;
			{
				if ((_1a6e2deec_part.len() == 0LL)) {
					goto _iter_next_1a6e2d53a;
				}
				jule::I64 _56421_j = 0LL;
				jule::Ptr<_1dd583461_TypeDecl> _56522_generic;
				std::tie(_56522_generic,std::ignore) = _1aa6148aa_build_type((*_self_)._field_p, _1a6e2deec_part,(&(_56421_j)),true);
				if (_56421_j < static_cast<jule::I64>(static_cast<jule::I64>(_1a6e2deec_part.len()))) {
					_1aa6007db_push_err(&(*_self_), _1a6e2deec_part[_56421_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_55817_generics = jule::alloc_for_append(_55817_generics,1);_55817_generics.__push(_56522_generic);
			}
			_iter_next_1a6e2d53a:;
			++it;
			goto _iter_begin_1a6e2d53a;
		}
		_iter_end_1a6e2d53a:;
	}
	return _55817_generics;
}



inline jule::Ptr<_1aa091bc8_FnCallExpr> _1aa60559e_build_fn_call(_1aa5eebc5_ExprBuilder* _self_,_1aa07563a_Token& _57537_token,jule::Ptr<_1aa5ed278_CallData>& _57556_data) {
	return jule::new_ptr<_1aa091bc8_FnCallExpr>(_1aa091bc8_FnCallExpr(_57537_token,_1aa60bb49_build_from_tokens(&(*_self_), _57556_data.get()._field_expr_tokens),_1aa60511a_build_call_generics(&(*_self_), _57556_data.get()._field_generics_tokens),_1aa604c63_build_args(&(*_self_), _57556_data.get()._field_args_tokens),jule::Ptr<_1aa09632b_ScopeTree>()));
}



inline jule::Any _1aa60599a_build_parentheses_range(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _58447_tokens) {
	_1aa07563a_Token _58517_token = _58447_tokens[0LL];
	{
		auto &_match_expr{ _58517_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a6e34772:;
			{
				{
					auto &_match_expr{ _58517_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a6e354cb:;
						{
							jule::Ptr<_1aa090a51_CastExpr> _59025_expr = _1aa6043d3_try_build_cast(&(*_self_), _58447_tokens);
							if ((_59025_expr != nullptr)) {
								return jule::Any(_59025_expr);
							}
						}
					}
					_match_end_1a6e3571d:;
				}
			}
		}
		_match_end_1a6e34e15:;
	}
	jule::Ptr<_1aa5ed278_CallData> _59717_data = _1aa5ed850_get_call_data(_58447_tokens);
	if ((_59717_data.get()._field_expr_tokens.len() == 0LL)) {
		return jule::Any(_1aa60403c_build_between_parentheses(&(*_self_), _59717_data.get()._field_args_tokens));
	}
	return jule::Any(_1aa60559e_build_fn_call(&(*_self_), _58517_token,_59717_data));
}



inline jule::Ptr<_1aa08e4ab_UnsafeExpr> _1aa605d41_build_unsafe_expr(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _60840_tokens) {
	_1aa07563a_Token _60917_token = _60840_tokens[0LL];
	_60840_tokens=_60840_tokens.slice(1LL);
	jule::I64 _61117_i = 0LL;
	jule::Slice<_1aa07563a_Token> _61217_range_tokens = _1aa60ecc3_range(_61117_i,jule::Str("{", 1),jule::Str("}", 1),_60840_tokens);
	if ((_61217_range_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _60840_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aa08e4ab_UnsafeExpr>(_1aa08e4ab_UnsafeExpr(_60917_token,_1aa60bb49_build_from_tokens(&(*_self_), _61217_range_tokens)));
}



inline jule::Ptr<_1aa096b67_FnDecl> _1aa6061e8_build_anon_fn(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _62337_tokens) {
	jule::Ptr<_1aa096b67_FnDecl> _62417_f = _1aa619eed_build_fn((*_self_)._field_p, _62337_tokens,false,false);
	if ((!(_1dd5772ac_is_anon(_62417_f.ptr())))) {
		_1aa6007db_push_err(&(*_self_), _62417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	}
	return _62417_f;
}



inline jule::Any _1aa6065a0_build_unsafe(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _63236_tokens) {
	{
		auto &_match_expr{ _63236_tokens[1LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a6e404c5:;
			{
				return jule::Any(_1aa6061e8_build_anon_fn(&(*_self_), _63236_tokens));
			}
		}
		else {
			_case_begin_1a6e3e936:;
			{
				return jule::Any(_1aa605d41_build_unsafe_expr(&(*_self_), _63236_tokens));
			}
		}
		_match_end_1a6e3eddc:;
	}
}



inline void _1aa606a78_push_range_lit_part(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _64242_part,_1aa07563a_Token _6439_error_token,jule::Slice<jule::Slice<_1aa07563a_Token>>& _64334_parts) {
	if ((_64242_part.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _6439_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;
	}
	_64334_parts = jule::alloc_for_append(_64334_parts,1);_64334_parts.__push(_64242_part);
}



inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa606e74_get_brace_range_lit_expr_parts(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _65353_tokens) {
	if ((_65353_tokens.len() < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1aa07563a_Token>> _65917_parts = nullptr;
	jule::I64 _66117_last = 0LL;
	jule::I64 _66217_range_n = 0LL;
	_65353_tokens=_65353_tokens.slice(1LL,(_65353_tokens.len() - 1LL));
	{
		auto &expr = _65353_tokens;
		auto it = expr.begin();
		_iter_begin_1a6e45277:;
		if (it != expr.end()) {
			jule::I64 _1a6e45b3a_i = it - expr.begin();
			_1aa07563a_Token _1a6e45c5b_token = *it;
			{
				if (_1a6e45c5b_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a6e45c5b_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a6e46b80:;
							{
								(_66217_range_n)++;
							}
						}
						else {
							_case_begin_1a6e46520:;
							{
								(_66217_range_n)--;
							}
						}
						_match_end_1a6e46850:;
					}
				}
				if ((_66217_range_n > 0LL) || (_1a6e45c5b_token._field_id != static_cast<jule::U64>(8LLU))) {
					goto _iter_next_1a6e45277;
				}
				_1aa606a78_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last,_1a6e45b3a_i),_1a6e45c5b_token,_65917_parts);
				_66117_last=static_cast<jule::I64>((_1a6e45b3a_i + 1LL));
			}
			_iter_next_1a6e45277:;
			++it;
			_1a6e45b3a_i++;
			goto _iter_begin_1a6e45277;
		}
		_iter_end_1a6e45277:;
	}
	if (_66117_last < static_cast<jule::I64>(static_cast<jule::I64>(_65353_tokens.len()))) {
		if ((_66117_last == 0LL)) {
			if ((_65353_tokens.len() > 0LL)) {
				_1aa606a78_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last),_65353_tokens[_66117_last],_65917_parts);
			}
		} else {
			_1aa606a78_push_range_lit_part(&(*_self_), _65353_tokens.slice(_66117_last),_65353_tokens[(_66117_last - 1LL)],_65917_parts);
		}
	}
	return _65917_parts;
}



inline jule::Ptr<_1aa0920e6_FieldExprPair> _1aa60731a_build_field_expr_pair(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _69544_tokens) {
	if (((_69544_tokens.len() - 2LL) == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _69544_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa0920e6_FieldExprPair> _70017_pair = jule::new_ptr<_1aa0920e6_FieldExprPair>(_1aa0920e6_FieldExprPair(_69544_tokens[0LL],jule::Ptr<_1aa08d334_Expr>()));
	_69544_tokens=_69544_tokens.slice(2LL);
	_70017_pair.get()._field_expr=_1aa60bb49_build_from_tokens(&(*_self_), _69544_tokens);
	return _70017_pair;
}



inline jule::Ptr<_1aa08d334_Expr> _1aa6076c2_build_struct_lit_expr(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _70845_tokens) {
	_1aa07563a_Token _70917_token = _70845_tokens[0LL];
	if ((_70917_token._field_id == static_cast<jule::U64>(2LLU)) && (_70845_tokens.len() > 1LL)) {
		_70917_token=_70845_tokens[1LL];
		if (_70917_token._field_id == static_cast<jule::U64>(11LLU)) {
			return jule::new_ptr<_1aa08d334_Expr>(_1aa08d334_Expr(_70917_token,jule::Bool(),jule::Any(jule::Any(_1aa60731a_build_field_expr_pair(&(*_self_), _70845_tokens)))));
		}
	}
	return _1aa60bb49_build_from_tokens(&(*_self_), _70845_tokens);
}



inline jule::Slice<jule::Ptr<_1aa08d334_Expr>> _1aa607a79_build_struct_lit_exprs(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _72246_tokens) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _72317_parts = _1aa606e74_get_brace_range_lit_expr_parts(&(*_self_), _72246_tokens);
	if ((_72317_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aa08d334_Expr>> _72817_pairs = jule::Slice<jule::Ptr<_1aa08d334_Expr>>::alloc(0LL,static_cast<jule::I64>(_72317_parts.len()));
	{
		auto &expr = _72317_parts;
		auto it = expr.begin();
		_iter_begin_1a6e533b7:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6e53593_part = *it;
			{
				_72817_pairs = jule::alloc_for_append(_72817_pairs,1);_72817_pairs.__push(_1aa6076c2_build_struct_lit_expr(&(*_self_), _1a6e53593_part));
			}
			_iter_next_1a6e533b7:;
			++it;
			goto _iter_begin_1a6e533b7;
		}
		_iter_end_1a6e533b7:;
	}
	return _72817_pairs;
}



inline jule::Ptr<_1aa092514_StructLit> _1aa607e75_build_typed_struct_literal(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _73549_tokens) {
	jule::I64 _73617_i = 0LL;
	jule::Ptr<_1dd583461_TypeDecl> _73718_t;
	jule::Bool _73721_ok;
	std::tie(_73718_t,_73721_ok) = _1aa6148aa_build_type((*_self_)._field_p, _73549_tokens,(&(_73617_i)),true);
	if ((!(_73721_ok))) {
		return nullptr;
	} else if (_73617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_73549_tokens.len()))) {
		_1aa6007db_push_err(&(*_self_), _73549_tokens[_73617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_73549_tokens=_73549_tokens.slice(_73617_i);
	_1aa07563a_Token _74613_token = _73549_tokens[0LL];
	if ((_74613_token._field_id != static_cast<jule::U64>(3LLU)) || (_74613_token._field_kind != jule::Str("{", 1))) {
		_1aa6007db_push_err(&(*_self_), _74613_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aa092514_StructLit>(_1aa092514_StructLit(_73718_t,_1aa607a79_build_struct_lit_exprs(&(*_self_), _73549_tokens)));
}



inline jule::Ptr<_1aa08d334_Expr> _1aa60831b_build_brace_lit_part(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _75844_tokens) {
	jule::Slice<_1aa07563a_Token> _75918_l;
	jule::Slice<_1aa07563a_Token> _75925_r;
	std::tie(_75918_l,_75925_r) = _1aa5edeb0_split_colon(_75844_tokens);
	if ((_75918_l != nullptr)) {
		return jule::new_ptr<_1aa08d334_Expr>(_1aa08d334_Expr(_75844_tokens[0LL],jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1aa092d50_KeyValPair>(_1aa092d50_KeyValPair(_1aa60bb49_build_from_tokens(&(*_self_), _75918_l),_1aa60bb49_build_from_tokens(&(*_self_), _75925_r),_75844_tokens[_75918_l.len()]))))));
	}
	return _1aa60bb49_build_from_tokens(&(*_self_), _75844_tokens);
}



inline jule::Ptr<_1aa092932_BraceLit> _1aa6086c3_build_brace_lit(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _77439_tokens) {
	jule::Ptr<_1aa092932_BraceLit> _77517_lit = jule::new_ptr<_1aa092932_BraceLit>(_1aa092932_BraceLit(_77439_tokens[0LL],jule::Slice<jule::Ptr<_1aa08d334_Expr>>()));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _77917_parts = _1aa606e74_get_brace_range_lit_expr_parts(&(*_self_), _77439_tokens);
	if ((_77917_parts == nullptr)) {
		return _77517_lit;
	}
	_77517_lit.get()._field_exprs=jule::Slice<jule::Ptr<_1aa08d334_Expr>>::alloc(0LL,static_cast<jule::I64>(_77917_parts.len()));
	{
		auto &expr = _77917_parts;
		auto it = expr.begin();
		_iter_begin_1a6e5e12b:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6e5e170_part = *it;
			{
				_77517_lit.get()._field_exprs = jule::alloc_for_append(_77517_lit.get()._field_exprs,1);_77517_lit.get()._field_exprs.__push(_1aa60831b_build_brace_lit_part(&(*_self_), _1a6e5e170_part));
			}
			_iter_next_1a6e5e12b:;
			++it;
			goto _iter_begin_1a6e5e12b;
		}
		_iter_end_1a6e5e12b:;
	}
	return _77517_lit;
}



inline jule::Any _1aa608a7a_build_brace_range(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _79241_tokens) {
	jule::Slice<_1aa07563a_Token> _79318_expr_tokens;
	jule::I64 _79331_range_n;
	std::tie(_79318_expr_tokens,_79331_range_n) = _1aa5ee92d_get_range_expr_tokens(_79241_tokens);
	{
		
		if ((_79318_expr_tokens.len() == 0LL)) {
			_case_begin_1a6e60e74:;
			{
				return jule::Any(_1aa6086c3_build_brace_lit(&(*_self_), _79241_tokens));
			}
		}
		else if ((_79331_range_n > 0LL)) {
			_case_begin_1a6e60eeb:;
			{
				_1aa6007db_push_err(&(*_self_), _79241_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a6e60e0d:;
	}
	_1aa07563a_Token _80413_else_token = _79318_expr_tokens[(_79318_expr_tokens.len() - 1LL)];
	if (_79318_expr_tokens[(_79318_expr_tokens.len() - 1LL)]._field_id == static_cast<jule::U64>(17LLU)) {
		_79318_expr_tokens=_79318_expr_tokens.slice(0LL,(_79318_expr_tokens.len() - 1LL));
		jule::Any _80721_d = _1aa60b3da_build(&(*_self_), _79318_expr_tokens);
		if (_80721_d == jule::Any(jule::Any(nullptr))) {
			return jule::Any(nullptr);
		}
		{
			auto &_match_expr{ _80721_d };
			
			if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>()) {
				_case_begin_1a6e65a5b:;
				{
					_79241_tokens=_79241_tokens.slice((_79318_expr_tokens.len() + 1LL));
					jule::I64 _81425_i = 0LL;
					jule::Slice<_1aa07563a_Token> _81525_range_tokens = _1aa60ecc3_range(_81425_i,jule::Str("{", 1),jule::Str("}", 1),_79241_tokens);
					jule::Ptr<_1aa091bc8_FnCallExpr> _81625_model = _80721_d.operator jule::Ptr<_1aa091bc8_FnCallExpr>();
					if (_1dd5976ea_ignored(_81625_model.ptr())) {
						_1aa6007db_push_err(&(*_self_), _80413_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1aa600bd7_push_suggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					}
					_81625_model.get()._field_exception=_1aa613cd8_build_scope((*_self_)._field_p, _81525_range_tokens);
					return _80721_d;
				}
			}
			else {
				_case_begin_1a6e643ea:;
				{
					_1aa6007db_push_err(&(*_self_), _79318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return jule::Any(nullptr);
				}
			}
			_match_end_1a6e6472a:;
		}
	}
	{
		auto &_match_expr{ _79318_expr_tokens[0LL]._field_id };
		
		if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a6e69c19:;
			{
				return _1aa6065a0_build_unsafe(&(*_self_), _79241_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a6e69c80:;
			{
				return jule::Any(_1aa6061e8_build_anon_fn(&(*_self_), _79241_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a6e69ce6:;
			{
				return jule::Any(_1aa607e75_build_typed_struct_literal(&(*_self_), _79241_tokens));
			}
		}
		else {
			_case_begin_1a6e60d31:;
			{
				_1aa6007db_push_err(&(*_self_), _79318_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a6e69aa4:;
	}
}



inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa608e32_get_enumerable_parts(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _84443_tokens) {
	_84443_tokens=_84443_tokens.slice(1LL,(_84443_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _84618_parts;
	jule::Slice<_1c4810251_Log> _84625_errors;
	std::tie(_84618_parts,_84625_errors) = _1aa6105dc_parts(_84443_tokens,static_cast<jule::U64>(8LLU),true);
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_84625_errors);
	return _84618_parts;
}



inline jule::Ptr<_1aa09326d_SliceExpr> _1aa6092d9_build_slice(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _85134_tokens) {
	jule::Ptr<_1aa09326d_SliceExpr> _85217_slc = jule::new_ptr<_1aa09326d_SliceExpr>(_1aa09326d_SliceExpr(_85134_tokens[0LL],jule::Slice<jule::Ptr<_1aa08d334_Expr>>()));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _85617_parts = _1aa608e32_get_enumerable_parts(&(*_self_), _85134_tokens);
	if ((_85617_parts.len() == 0LL)) {
		return _85217_slc;
	}
	_85217_slc.get()._field_exprs=jule::Slice<jule::Ptr<_1aa08d334_Expr>>::alloc(0LL,static_cast<jule::I64>(_85617_parts.len()));
	{
		auto &expr = _85617_parts;
		auto it = expr.begin();
		_iter_begin_1a6e713c4:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6e72073_p = *it;
			{
				if ((_1a6e72073_p.len() == 0LL)) {
					goto _iter_next_1a6e713c4;
				}
				_85217_slc.get()._field_exprs = jule::alloc_for_append(_85217_slc.get()._field_exprs,1);_85217_slc.get()._field_exprs.__push(_1aa60bb49_build_from_tokens(&(*_self_), _1a6e72073_p));
			}
			_iter_next_1a6e713c4:;
			++it;
			goto _iter_begin_1a6e713c4;
		}
		_iter_end_1a6e713c4:;
	}
	return _85217_slc;
}



inline jule::Ptr<_1aa093b0e_IndexingExpr> _1aa60984a_build_indexing(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _87237_expr_tokens,jule::Slice<_1aa07563a_Token> _87313_tokens,_1aa07563a_Token _87334_error_token) {
	_87313_tokens=_87313_tokens.slice(1LL,(_87313_tokens.len() - 1LL));
	if ((_87313_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _87334_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa08d334_Expr> _87917_expr = _1aa60bb49_build_from_tokens(&(*_self_), _87237_expr_tokens);
	if ((_87917_expr == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1aa08d334_Expr> _88317_index = _1aa60bb49_build_from_tokens(&(*_self_), _87313_tokens);
	if ((_88317_index == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1aa093b0e_IndexingExpr>(_1aa093b0e_IndexingExpr(_87334_error_token,_87917_expr,_88317_index));
}



inline jule::Ptr<_1aa09402c_SlicingExpr> _1aa609e88_build_slicing(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _89437_expr_tokens,jule::Slice<_1aa07563a_Token>& _89464_slicing_tokens,jule::I64& _89510_colon,_1aa07563a_Token& _89527_error_token) {
	jule::Ptr<_1aa09402c_SlicingExpr> _89617_slc = jule::new_ptr<_1aa09402c_SlicingExpr>(_1aa09402c_SlicingExpr(_89527_error_token,_1aa60bb49_build_from_tokens(&(*_self_), _89437_expr_tokens),jule::Ptr<_1aa08d334_Expr>(),jule::Ptr<_1aa08d334_Expr>()));
	jule::Slice<_1aa07563a_Token> _90117_start_expr_tokens = _89464_slicing_tokens.slice(0LL,_89510_colon);
	if ((_90117_start_expr_tokens.len() > 0LL)) {
		_89617_slc.get()._field_start=_1aa60bb49_build_from_tokens(&(*_self_), _90117_start_expr_tokens);
	}
	jule::Slice<_1aa07563a_Token> _90617_to_expr_tokens = _89464_slicing_tokens.slice((_89510_colon + 1LL));
	if ((_90617_to_expr_tokens.len() > 0LL)) {
		_89617_slc.get()._field_to=_1aa60bb49_build_from_tokens(&(*_self_), _90617_to_expr_tokens);
	}
	return _89617_slc;
}



inline jule::Any _1aa60a340_build_bracket_range(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _91442_tokens) {
	_1aa07563a_Token _91517_error_token = _91442_tokens[0LL];
	jule::Slice<_1aa07563a_Token> _91618_expr_tokens;
	jule::I64 _91631_range_n;
	std::tie(_91618_expr_tokens,_91631_range_n) = _1aa5ee92d_get_range_expr_tokens(_91442_tokens);
	{
		
		if ((_91618_expr_tokens.len() == 0LL)) {
			_case_begin_1a6e7c1e3:;
			{
				return jule::Any(_1aa6092d9_build_slice(&(*_self_), _91442_tokens));
			}
		}
		else if ((_91618_expr_tokens.len() == 0LL) || (_91631_range_n > 0LL)) {
			_case_begin_1a6e7c26a:;
			{
				_1aa6007db_push_err(&(*_self_), _91517_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a6e7c127:;
	}
	_91442_tokens=_91442_tokens.slice(_91618_expr_tokens.len());
	jule::I64 _93417_i = 0LL;
	jule::Slice<_1aa07563a_Token> _93518_slicing_tokens;
	jule::I64 _93534_colon;
	std::tie(_93518_slicing_tokens,_93534_colon) = _1aa62615d_split_map_range(_91442_tokens,_93417_i);
	if ((_93534_colon != -1LL)) {
		return jule::Any(_1aa609e88_build_slicing(&(*_self_), _91618_expr_tokens,_93518_slicing_tokens,_93534_colon,_91517_error_token));
	}
	return jule::Any(_1aa60984a_build_indexing(&(*_self_), _91618_expr_tokens,_91442_tokens,_91517_error_token));
}



inline jule::Any _1aa60a6e7_build_ternary(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _94236_tokens) {
	jule::Ptr<_1aa09444a_TernaryExpr> _94317_ter = jule::new_ptr<_1aa09444a_TernaryExpr>(_1aa09444a_TernaryExpr());
	_94317_ter.get()._field_token=_94236_tokens[0LL];
	_94236_tokens=_94236_tokens.slice(1LL);
	jule::Slice<_1aa07563a_Token> _94717_expr_tokens = _1aa5edba2_get_block_expr(_94236_tokens);
	if ((_94717_expr_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	_94317_ter.get()._field_condition=_1aa60bb49_build_from_tokens(&(*_self_), _94717_expr_tokens);
	jule::I64 _95417_i = _94717_expr_tokens.len();
	jule::Slice<_1aa07563a_Token> _95517_true_expr = _1aa60ecc3_range(_95417_i,jule::Str("{", 1),jule::Str("}", 1),_94236_tokens);
	if ((_95517_true_expr == nullptr)) {
		_1aa6007db_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	} else if ((_95517_true_expr.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _94236_tokens[_94717_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_95417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_94236_tokens.len()))) {
		_1aa6007db_push_err(&(*_self_), _94317_ter.get()._field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	}
	_1aa07563a_Token _96913_else_token = _94236_tokens[_95417_i];
	if (_96913_else_token._field_id != static_cast<jule::U64>(17LLU)) {
		_1aa6007db_push_err(&(*_self_), _96913_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	}
	(_95417_i)++;
	jule::I64 _97713_j = _95417_i;
	jule::Slice<_1aa07563a_Token> _97817_false_expr = _1aa60ecc3_range(_95417_i,jule::Str("{", 1),jule::Str("}", 1),_94236_tokens);
	if ((_97817_false_expr == nullptr)) {
		_1aa6007db_push_err(&(*_self_), _96913_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return jule::Any(_94317_ter);
	} else if ((_97817_false_expr.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _94236_tokens[_97713_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
	}
	if (_95417_i < static_cast<jule::I64>(static_cast<jule::I64>(_94236_tokens.len()))) {
		_1aa6007db_push_err(&(*_self_), _94236_tokens[_95417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_94317_ter.get()._field_true_expr=_1aa60bb49_build_from_tokens(&(*_self_), _95517_true_expr);
	_94317_ter.get()._field_false_expr=_1aa60bb49_build_from_tokens(&(*_self_), _97817_false_expr);
	return jule::Any(_94317_ter);
}



inline jule::Any _1aa60aa9e_build_data(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _99734_tokens) {
	{
		auto _match_expr{ _99734_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a6e8e5ce:;
			{
				return jule::Any(nullptr);
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a6e8e645:;
			{
				return _1aa601ba5_build_single(&(*_self_), _99734_tokens[0LL]);
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a6e8e6ab:;
			{
				if (_99734_tokens[0LL]._field_id == static_cast<jule::U64>(31LLU)) {
					return jule::Any(_1aa60205c_build_cpp_linked_ident(&(*_self_), _99734_tokens));
				}
			}
		}
		_match_end_1a6e8e3c0:;
	}
	_1aa07563a_Token _100917_token = _99734_tokens[0LL];
	{
		auto &_match_expr{ _100917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a6e91c30:;
			{
				return _1aa60a6e7_build_ternary(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a6e91c96:;
			{
				if ((_99734_tokens.len() > 1LL) && (_100917_token._field_kind == jule::Str("*", 1))) {
					_100917_token=_99734_tokens[1LL];
					if ((_100917_token._field_id == static_cast<jule::U64>(1LLU)) || (_100917_token._field_id == static_cast<jule::U64>(35LLU))) {
						return jule::Any(_1aa60302a_build_type(&(*_self_), _99734_tokens));
					}
				}
				return jule::Any(_1aa602414_build_unary(&(*_self_), _99734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a6e91d0c:;
			{
				if ((_99734_tokens.len() < 3LL)) {
					goto _match_end_1a6e91b20;
				}
				if ((_99734_tokens.len() > 3LL)) {
					_1aa07563a_Token _103021_t = _99734_tokens[(_99734_tokens.len() - 1LL)];
					if ((_103021_t._field_id == static_cast<jule::U64>(3LLU)) && (_103021_t._field_kind == jule::Str(")", 1))) {
						goto _match_end_1a6e91b20;
					}
				}
				_1aa07563a_Token _103617_next = _99734_tokens[1LL];
				if ((_103617_next._field_id != static_cast<jule::U64>(3LLU)) || (_103617_next._field_kind != jule::Str("]", 1))) {
					goto _match_end_1a6e91b20;
				}
				return jule::Any(_1aa60302a_build_type(&(*_self_), _99734_tokens));
			}
		}
		_match_end_1a6e91b20:;
	}
	_100917_token=_99734_tokens[(_99734_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a6e91d73:;
			{
				return _1aa6033d2_build_sub_ident(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a6e9895c:;
			{
				return jule::Any(_1aa60302a_build_type(&(*_self_), _99734_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a6e989c3:;
			{
				return _1aa603b41_build_op_right(&(*_self_), _99734_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a6e98a39:;
			{
				{
					auto &_match_expr{ _100917_token._field_kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a6e9a94d:;
						{
							return _1aa60599a_build_parentheses_range(&(*_self_), _99734_tokens);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a6e9a9d6:;
						{
							return _1aa608a7a_build_brace_range(&(*_self_), _99734_tokens);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a6e9aa4c:;
						{
							return _1aa60a340_build_bracket_range(&(*_self_), _99734_tokens);
						}
					}
					_match_end_1a6e9a8b5:;
				}
			}
		}
		_match_end_1a6e98891:;
	}
	_1aa6007db_push_err(&(*_self_), _100917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aa0917aa_BinopExpr> _1aa60b033_build_binop(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _106735_tokens,jule::I64 _106752_i) {
	jule::Slice<_1aa07563a_Token> _106817_left_tokens = _106735_tokens.slice(0LL,_106752_i);
	jule::Slice<_1aa07563a_Token> _106917_right_tokens = _106735_tokens.slice((_106752_i + 1LL));
	if ((_106817_left_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _106735_tokens[_106752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_106917_right_tokens.len() == 0LL)) {
		_1aa6007db_push_err(&(*_self_), _106735_tokens[_106752_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa600bd7_push_suggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1aa0917aa_BinopExpr>(_1aa0917aa_BinopExpr(_1aa60bb49_build_from_tokens(&(*_self_), _106817_left_tokens),_1aa60bb49_build_from_tokens(&(*_self_), _106917_right_tokens),_106735_tokens[_106752_i]));
}



inline jule::Any _1aa60b3da_build(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _108729_tokens) {
	jule::I64 _108813_i = _1aa5ee312_find_lowest_prec_op(_108729_tokens);
	if ((_108813_i == -1LL)) {
		return _1aa60aa9e_build_data(&(*_self_), _108729_tokens);
	}
	return jule::Any(_1aa60b033_build_binop(&(*_self_), _108729_tokens,_108813_i));
}



inline jule::Any _1aa60b792_build_kind(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token>& _109534_tokens) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _109618_parts;
	jule::Slice<_1c4810251_Log> _109625_errors;
	std::tie(_109618_parts,_109625_errors) = _1aa6105dc_parts(_109534_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_109625_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_109625_errors);
		return jule::Any(nullptr);
	} else if ((_109618_parts.len() > 1LL)) {
		return jule::Any(_1aa60108e_build_tuple(&(*_self_), _109618_parts));
	}
	return _1aa60b3da_build(&(*_self_), _109534_tokens);
}



inline jule::Ptr<_1aa08d334_Expr> _1aa60bb49_build_from_tokens(_1aa5eebc5_ExprBuilder* _self_,jule::Slice<_1aa07563a_Token> _110640_tokens) {
	if ((_110640_tokens.len() == 0LL)) {
		return nullptr;
	}
	return jule::new_ptr<_1aa08d334_Expr>(_1aa08d334_Expr(_110640_tokens[0LL],jule::Bool(),_1aa60b792_build_kind(&(*_self_), _110640_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5eebc5_ExprBuilder _Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _1aa612204_stop(_1aa611b60_Parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1aa6124ce_stopped(_1aa611b60_Parser* _self_) {
	return ((*_self_)._field_ast == nullptr);
}



inline void _1aa6129a7_push_err(_1aa611b60_Parser* _self_,_1aa07563a_Token _22827_token,jule::Str _22841_fmt,jule::Slice<jule::Any> _22854_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1aa610de5_compiler_err(_22827_token,_22841_fmt,_22854_args));
}



inline void _1aa612da3_push_suggestion(_1aa611b60_Parser* _self_,jule::Str _23334_fmt,jule::Slice<jule::Any> _23347_args) {
	{
		_1aa611324_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_23334_fmt,_23347_args);
	}
}



inline jule::Ptr<_1aa08d334_Expr> _1aa61325a_build_expr(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _23735_tokens) {
	jule::Ptr<_1aa5eebc5_ExprBuilder> _23817_ep = jule::new_ptr<_1aa5eebc5_ExprBuilder>(_1aa5eebc5_ExprBuilder(_self_));
	jule::Ptr<_1aa08d334_Expr> _23917_expr = _1aa60bb49_build_from_tokens(_23817_ep.ptr(), _23735_tokens);
	return _23917_expr;
}



inline jule::Ptr<_1dd583043_Directive> _1aa613612_build_directive(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token> _24338_tokens) {
	if ((_24338_tokens.len() == 1LL)) {
		_1aa6129a7_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_24338_tokens[1LL]._field_column != static_cast<jule::I64>(static_cast<jule::I64>((_24338_tokens[0LL]._field_column + 1LL)))) {
		_1aa6129a7_push_err(&(*_self_), _24338_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1dd583043_Directive>(_1dd583043_Directive(_24338_tokens[1LL],_24338_tokens.slice(2LL)));
}



inline void _1aa613931_push_directive(_1aa611b60_Parser* _self_,jule::Ptr<_1dd583043_Directive> _26037_d) {
	if ((_26037_d == nullptr)) {
		return;
	}
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a6eb1dc6:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1a6eb2536_pd = *it;
			{
				if (_26037_d.get()._field_tag._field_kind == _1a6eb2536_pd.get()._field_tag._field_kind) {
					return;
				}
			}
			_iter_next_1a6eb1dc6:;
			++it;
			goto _iter_begin_1a6eb1dc6;
		}
		_iter_end_1a6eb1dc6:;
	}
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_26037_d);
}



inline jule::Ptr<_1aa09632b_ScopeTree> _1aa613cd8_build_scope(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _27436_tokens) {
	jule::Ptr<_1aa09632b_ScopeTree> _27517_s = _1aa5dc234_new_scope();
	_1aa5de236_ScopeParser _27617_sp = _1aa5de236_ScopeParser(_self_,jule::Ptr<_1aa09632b_ScopeTree>(),jule::Slice<jule::Ptr<_1aa5dd587_Stmt>>(),jule::I64());
	_1aa5ec2cc_build(&_27617_sp, _27436_tokens,_27517_s);
	return _27517_s;
}



inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa614349___build_type(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _28344_tokens,jule::I64* _28413_i,jule::Bool _28422_err) {
	_1aa626746_TypeBuilder _28517_tb = _1aa626746_TypeBuilder(_self_,_28344_tokens,_28413_i,_28422_err);
	jule::Ptr<_1dd583461_TypeDecl> _29118_decl;
	jule::Bool _29124_ok;
	std::tie(_29118_decl,_29124_ok) = _1aa62a728_build(&_28517_tb);
	return std::make_tuple(_29118_decl,_29124_ok);
}



inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa6148aa_build_type(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _29642_tokens,jule::I64* _29713_i,jule::Bool _29722_err) {
	_1aa07563a_Token _29813_token = _29642_tokens[(*(_29713_i))];
	jule::Ptr<_1dd583461_TypeDecl> _29918_t;
	jule::Bool _29921_ok;
	std::tie(_29918_t,_29921_ok) = _1aa614349___build_type(_self_, _29642_tokens,_29713_i,_29722_err);
	if (_29722_err && (!(_29921_ok))) {
		_1aa6129a7_push_err(_self_.ptr(), _29813_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	}
	return std::make_tuple(_29918_t,_29921_ok);
}



inline jule::Ptr<_1aa09a330_TypeAliasDecl> _1aa614c62_build_type_alias_decl(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _30646_tokens) {
	jule::I64 _30717_i = 1LL;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa09a330_TypeAliasDecl> _31217_tad = jule::new_ptr<_1aa09a330_TypeAliasDecl>(_1aa09a330_TypeAliasDecl(jule::Ptr<_1aa09632b_ScopeTree>(),jule::Bool(),jule::Bool(),_30646_tokens[1LL],_30646_tokens[1LL]._field_kind,jule::Ptr<_1dd583461_TypeDecl>()));
	_1aa07563a_Token _31617_token = _30646_tokens[_30717_i];
	if (_31617_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _31617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_30717_i)++;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	_31617_token=_30646_tokens[_30717_i];
	if (_31617_token._field_id != static_cast<jule::U64>(11LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	(_30717_i)++;
	if (_30717_i >= static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _30646_tokens[(_30717_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _31217_tad;
	}
	jule::Ptr<_1dd583461_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = _1aa6148aa_build_type(_self_, _30646_tokens,(&(_30717_i)),true);
	_31217_tad.get()._field_kind=_33718_t;
	if (_33721_ok && (_30717_i < static_cast<jule::I64>(static_cast<jule::I64>(_30646_tokens.len())))) {
		_1aa6129a7_push_err(_self_.ptr(), _30646_tokens[_30717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _31217_tad;
}



inline void _1aa6151a2_build_var_type_and_expr(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa097085_VarDecl>& _34548_v,jule::Slice<_1aa07563a_Token>& _34566_tokens) {
	jule::I64 _34617_i = 0LL;
	_1aa07563a_Token _34717_tok = _34566_tokens[_34617_i];
	if (_34717_tok._field_id == static_cast<jule::U64>(11LLU)) {
		(_34617_i)++;
		if ((_34617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34566_tokens.len()))) || ((_34566_tokens[_34617_i]._field_id == static_cast<jule::U64>(7LLU)) && (_34566_tokens[_34617_i]._field_kind == jule::Str("=", 1)))) {
			_1aa6129a7_push_err(_self_.ptr(), _34717_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;
		}
		jule::Ptr<_1dd583461_TypeDecl> _35522_t;
		jule::Bool _35525_ok;
		std::tie(_35522_t,_35525_ok) = _1aa6148aa_build_type(_self_, _34566_tokens,(&(_34617_i)),true);
		if (_35525_ok) {
			_34548_v.get()._field_kind=_35522_t;
			if (_34617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_34566_tokens.len()))) {
				return;
			}
			_34717_tok=_34566_tokens[_34617_i];
		}
	}
	if (_34717_tok._field_id == static_cast<jule::U64>(7LLU)) {
		if ((_34717_tok._field_kind != jule::Str("=", 1))) {
			_1aa6129a7_push_err(_self_.ptr(), _34717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;
		}
		jule::Slice<_1aa07563a_Token> _37021_expr_tokens = _34566_tokens.slice((_34617_i + 1LL));
		if ((_37021_expr_tokens.len() == 0LL)) {
			_1aa6129a7_push_err(_self_.ptr(), _34717_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;
		}
		_34548_v.get()._field_expr=_1aa61325a_build_expr(_self_, _37021_expr_tokens);
	} else {
		_1aa6129a7_push_err(_self_.ptr(), _34717_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1aa61558c_build_var_common(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa097085_VarDecl>& _38141_v,jule::Slice<_1aa07563a_Token> _38158_tokens) {
	_38141_v.get()._field_token=_38158_tokens[0LL];
	if (_38141_v.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _38141_v.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	_38141_v.get()._field_ident=_38141_v.get()._field_token._field_kind;
	_38141_v.get()._field_kind=nullptr;
	if ((_38158_tokens.len() > 1LL)) {
		_38158_tokens=_38158_tokens.slice(1LL);
		_1aa6151a2_build_var_type_and_expr(_self_, _38141_v,_38158_tokens);
	}
}



inline void _1aa615a65_build_var_begin(_1aa611b60_Parser* _self_,jule::Ptr<_1aa097085_VarDecl>& _39639_v,jule::Ptr<jule::I64> _39656_i,jule::Slice<_1aa07563a_Token>& _39666_tokens) {
	_1aa07563a_Token _39713_tok = _39666_tokens[(*(_39656_i))];
	{
		auto &_match_expr{ _39713_tok._field_id };
		
		if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a6ed39ca:;
			{
				_39639_v.get()._field_statically=true;
				goto _case_begin_1a6ed2e3b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a6ed2e3b:;
			{
				((*(_39656_i)))++;
				if ((*(_39656_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39666_tokens.len()))) {
					_1aa6129a7_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				if (_39666_tokens[(*(_39656_i))]._field_id == static_cast<jule::U64>(36LLU)) {
					_39639_v.get()._field_mutable=true;
					((*(_39656_i)))++;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a6ed2ea2:;
			{
				((*(_39656_i)))++;
				_39639_v.get()._field_constant=true;
			}
		}
		else {
			_case_begin_1a6ed27a9:;
			{
				_1aa6129a7_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a6ed2db4:;
	}
	if ((*(_39656_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_39666_tokens.len()))) {
		_1aa6129a7_push_err(&(*_self_), _39713_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1aa097085_VarDecl> _1aa615e1c_build_var(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _43033_tokens) {
	jule::Ptr<jule::I64> _43117_i = jule::new_ptr<jule::I64>(0LL);
	jule::Ptr<_1aa097085_VarDecl> _43217_v = jule::new_ptr<_1aa097085_VarDecl>(_1aa097085_VarDecl(jule::Ptr<_1aa09632b_ScopeTree>(),_43033_tokens[(*(_43117_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1dd583461_TypeDecl>(),jule::Ptr<_1aa08d334_Expr>()));
	_1aa615a65_build_var_begin(_self_.ptr(), _43217_v,_43117_i,_43033_tokens);
	if ((*(_43117_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_43033_tokens.len()))) {
		return nullptr;
	}
	_43033_tokens=_43033_tokens.slice((*(_43117_i)));
	if ((_43033_tokens[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_43033_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_43217_v.get()._field_reference=true;
		if ((_43033_tokens.len() == 1LL)) {
			return nullptr;
		}
		_43033_tokens=_43033_tokens.slice(1LL);
	}
	_1aa61558c_build_var_common(_self_, _43217_v,_43033_tokens);
	return _43217_v;
}



inline jule::Ptr<_1aa094868_GenericDecl> _1aa6162c4_build_generic(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token>& _45237_tokens) {
	if ((_45237_tokens.len() > 1LL)) {
		_1aa6129a7_push_err(&(*_self_), _45237_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1aa094868_GenericDecl> _45617_g = jule::new_ptr<_1aa094868_GenericDecl>(_1aa094868_GenericDecl(_45237_tokens[0LL],jule::Str()));
	if (_45617_g.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(&(*_self_), _45617_g.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_45617_g.get()._field_ident=_45617_g.get()._field_token._field_kind;
	return _45617_g;
}



inline jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _1aa616758_build_generics(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token>& _46738_tokens,_1aa07563a_Token& _46756_error_token) {
	if ((_46738_tokens.len() == 0LL)) {
		_1aa6129a7_push_err(&(*_self_), _46756_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<jule::Slice<_1aa07563a_Token>> _47318_parts;
	jule::Slice<_1c4810251_Log> _47325_errors;
	std::tie(_47318_parts,_47325_errors) = _1aa6105dc_parts(_46738_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_47325_errors.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_47325_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _47917_generics = jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_47318_parts.len()));
	{
		auto &expr = _47318_parts;
		auto it = expr.begin();
		_iter_begin_1a6ee4128:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a6ee416c_part = *it;
			{
				_47917_generics = jule::alloc_for_append(_47917_generics,1);_47917_generics.__push(_1aa6162c4_build_generic(&(*_self_), _1a6ee416c_part));
			}
			_iter_next_1a6ee4128:;
			++it;
			goto _iter_begin_1a6ee4128;
		}
		_iter_end_1a6ee4128:;
	}
	return _47917_generics;
}



inline jule::Ptr<_1aa096749_ParamDecl> _1aa616b10_build_self_param(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token> _48739_tokens) {
	if ((_48739_tokens.len() == 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1aa096749_ParamDecl> _49217_param = jule::new_ptr<_1aa096749_ParamDecl>(_1aa096749_ParamDecl());
	jule::I64 _49517_i = 0LL;
	if (_48739_tokens[_49517_i]._field_id == static_cast<jule::U64>(36LLU)) {
		_49217_param.get()._field_mutable=true;
		(_49517_i)++;
		if (_49517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_1aa6129a7_push_err(&(*_self_), _48739_tokens[(_49517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if ((_48739_tokens[_49517_i]._field_kind == jule::Str("&", 1))) {
		_49217_param.get()._field_ident=jule::Str("&", 1);
		(_49517_i)++;
		if (_49517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_1aa6129a7_push_err(&(*_self_), _48739_tokens[(_49517_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	if (_48739_tokens[_49517_i]._field_id == static_cast<jule::U64>(28LLU)) {
		_49217_param.get()._field_ident+=jule::Str("self", 4);
		_49217_param.get()._field_token=_48739_tokens[_49517_i];
		(_49517_i)++;
		if (_49517_i < static_cast<jule::I64>(static_cast<jule::I64>(_48739_tokens.len()))) {
			_1aa6129a7_push_err(&(*_self_), _48739_tokens[_49517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	}
	return _49217_param;
}



inline void _1aa6170d8_param_type_begin(_1aa611b60_Parser* _self_,jule::Ptr<_1aa096749_ParamDecl>& _52640_param,jule::I64& _52664_i,jule::Slice<_1aa07563a_Token>& _52673_tokens) {
	for (; _52664_i < static_cast<jule::I64>(static_cast<jule::I64>(_52673_tokens.len())); (_52664_i)++) {
		{
			_1aa07563a_Token _52817_token = _52673_tokens[_52664_i];
			if (_52817_token._field_id != static_cast<jule::U64>(7LLU)) {
				return;
			} else if ((_52817_token._field_kind != jule::Str("...", 3))) {
				return;
			}
			if (_52640_param.get()._field_variadic) {
				_1aa6129a7_push_err(&(*_self_), _52817_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1a6eec75d;
			}
			_52640_param.get()._field_variadic=true;
		}
	_iter_next_1a6eec75d:;
	}
	_iter_end_1a6eec75d:;
}



inline void _1aa6174d4_build_param_type(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa096749_ParamDecl>& _54341_param,jule::Slice<_1aa07563a_Token>& _54365_tokens) {
	jule::I64 _54417_i = 0LL;
	_1aa6170d8_param_type_begin(_self_.ptr(), _54341_param,_54417_i,_54365_tokens);
	if (_54417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_54365_tokens.len()))) {
		return;
	}
	std::tie(_54341_param.get()._field_kind,std::ignore) = _1aa6148aa_build_type(_self_, _54365_tokens,(&(_54417_i)),true);
	if (_54417_i < static_cast<jule::I64>(static_cast<jule::I64>(_54365_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _54365_tokens[_54417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1aa6178d0_param_body_id(_1aa611b60_Parser* _self_,jule::Ptr<_1aa096749_ParamDecl> _55632_param,_1aa07563a_Token _55651_token) {
	if (_1aa07861b_is_ignore_ident(_55651_token._field_kind)) {
		_55632_param.get()._field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_55632_param.get()._field_ident=_55651_token._field_kind;
}



inline void _1aa617da8_build_param_body(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa096749_ParamDecl>& _56441_param,jule::Ptr<jule::I64> _56464_i,jule::Slice<_1aa07563a_Token> _56477_tokens) {
	_1aa6178d0_param_body_id(_self_.ptr(), _56441_param,_56477_tokens[(*(_56464_i))]);
	_1aa07563a_Token _56617_tok = _56477_tokens[(*(_56464_i))];
	if (((*(_56464_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_56477_tokens.len()))) {
		return;
	} else if ((((_56477_tokens.len() - (*(_56464_i))) - 1LL) < 2LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _56617_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;
	}
	_56617_tok=_56477_tokens[((*(_56464_i)) + 1LL)];
	if (_56617_tok._field_id != static_cast<jule::U64>(11LLU)) {
		_1aa6174d4_build_param_type(_self_, _56441_param,_56477_tokens);
		return;
	}
	_56477_tokens=_56477_tokens.slice(((*(_56464_i)) + 2LL));
	_1aa6174d4_build_param_type(_self_, _56441_param,_56477_tokens);
}



inline jule::Ptr<_1aa096749_ParamDecl> _1aa618260_build_param(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _58535_tokens) {
	jule::Ptr<_1aa096749_ParamDecl> _58617_param = jule::new_ptr<_1aa096749_ParamDecl>(_1aa096749_ParamDecl(_58535_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1dd583461_TypeDecl>(),jule::Str()));
	if (_58617_param.get()._field_token._field_id == static_cast<jule::U64>(36LLU)) {
		_58617_param.get()._field_mutable=true;
		if ((_58535_tokens.len() == 1LL)) {
			_1aa6129a7_push_err(_self_.ptr(), _58535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_58535_tokens=_58535_tokens.slice(1LL);
		_58617_param.get()._field_token=_58535_tokens[0LL];
	}
	if ((_58535_tokens.len() >= 3LL)) {
		if ((_58617_param.get()._field_token._field_id == static_cast<jule::U64>(7LLU)) && (_58617_param.get()._field_token._field_kind == jule::Str("&", 1))) {
			if ((_58535_tokens.len() == 1LL)) {
				_1aa6129a7_push_err(_self_.ptr(), _58535_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
			if ((_58535_tokens[1LL]._field_id == static_cast<jule::U64>(2LLU)) && (_58535_tokens[2LL]._field_id == static_cast<jule::U64>(11LLU))) {
				_58617_param.get()._field_reference=true;
				_58535_tokens=_58535_tokens.slice(1LL);
				_58617_param.get()._field_token=_58535_tokens[0LL];
			}
		}
	}
	if (_58617_param.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_58617_param.get()._field_ident=jule::Str("<anonymous>", 11);
		_1aa6174d4_build_param_type(_self_, _58617_param,_58535_tokens);
	} else {
		jule::Ptr<jule::I64> _62221_i = jule::new_ptr<jule::I64>(0LL);
		_1aa617da8_build_param_body(_self_, _58617_param,_62221_i,_58535_tokens);
	}
	return _58617_param;
}



inline void _1aa61857e_check_params(_1aa611b60_Parser* _self_,jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>& _62936_params) {
	{
		auto &expr = _62936_params;
		auto it = expr.begin();
		_iter_begin_1a7014247:;
		if (it != expr.end()) {
			jule::Ptr<_1aa096749_ParamDecl> _1a7014324_param = *it;
			{
				if (_1dd5a7c27_is_self(_1a7014324_param.ptr()) || (_1a7014324_param.get()._field_kind != nullptr)) {
					goto _iter_next_1a7014247;
				}
				if (_1a7014324_param.get()._field_token._field_id == static_cast<jule::U64>(0LLU)) {
					_1aa6129a7_push_err(&(*_self_), _1a7014324_param.get()._field_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_1a7014324_param.get()._field_kind=jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_1a7014324_param.get()._field_token,jule::Any(jule::Any(jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_1a7014324_param.get()._field_token,_1a7014324_param.get()._field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>()))))));
					_1a7014324_param.get()._field_ident=jule::Str("<anonymous>", 11);
					_1a7014324_param.get()._field_token=_1aa07563a_Token();
				}
			}
			_iter_next_1a7014247:;
			++it;
			goto _iter_begin_1a7014247;
		}
		_iter_end_1a7014247:;
	}
}



inline jule::Slice<jule::Ptr<_1aa096749_ParamDecl>> _1aa618a13_build_params(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _65037_tokens,jule::Bool _65054_method) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _65118_parts;
	jule::Slice<_1c4810251_Log> _65125_errs;
	std::tie(_65118_parts,_65125_errs) = _1aa6105dc_parts(_65037_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_65125_errs);
	if ((_65118_parts.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1aa096749_ParamDecl>> _65717_params = nullptr;
	if (_65054_method && (_65118_parts.len() > 0LL)) {
		jule::Ptr<_1aa096749_ParamDecl> _65921_param = _1aa616b10_build_self_param(_self_.ptr(), _65118_parts[0LL]);
		if ((_65921_param != nullptr) && _1dd5a7c27_is_self(_65921_param.ptr())) {
			_65717_params = jule::alloc_for_append(_65717_params,1);_65717_params.__push(_65921_param);
			_65118_parts=_65118_parts.slice(1LL);
		}
	}
	{
		auto &expr = _65118_parts;
		auto it = expr.begin();
		_iter_begin_1a701bd65:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a701bda9_part = *it;
			{
				jule::Ptr<_1aa096749_ParamDecl> _66721_param = _1aa618260_build_param(_self_, _1a701bda9_part);
				if ((_66721_param != nullptr)) {
					_65717_params = jule::alloc_for_append(_65717_params,1);_65717_params.__push(_66721_param);
				}
			}
			_iter_next_1a701bd65:;
			++it;
			goto _iter_begin_1a701bd65;
		}
		_iter_end_1a701bd65:;
	}
	_1aa61857e_check_params(_self_.ptr(), _65717_params);
	return _65717_params;
}



inline std::tuple<jule::Ptr<_1aa08ce16_RetTypeDecl>,jule::Bool> _1aa618e97_build_multi_ret_type(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _67745_tokens,jule::I64& _67767_i) {
	jule::Ptr<_1aa08ce16_RetTypeDecl> _67777_t = jule::Ptr<_1aa08ce16_RetTypeDecl>();
	jule::Bool _67794_ok = jule::Bool();
	_67777_t=jule::new_ptr<_1aa08ce16_RetTypeDecl>(_1aa08ce16_RetTypeDecl());
	(_67767_i)++;
	if (_67767_i >= static_cast<jule::I64>(static_cast<jule::I64>(_67745_tokens.len()))) {
		(_67767_i)--;
		std::tie(_67777_t.get()._field_kind,_67794_ok) = _1aa6148aa_build_type(_self_, _67745_tokens,(&(_67767_i)),false);
		return std::make_tuple(_67777_t,_67794_ok);
	}
	(_67767_i)--;
	jule::Slice<_1aa07563a_Token> _68717_range_tokens = _1aa60ecc3_range(_67767_i,jule::Str("(", 1),jule::Str(")", 1),_67745_tokens);
	jule::Slice<jule::Slice<_1aa07563a_Token>> _68918_parts;
	jule::Slice<_1c4810251_Log> _68925_errs;
	std::tie(_68918_parts,_68925_errs) = _1aa6105dc_parts(_68717_range_tokens,static_cast<jule::U64>(8LLU),true);
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_68925_errs);
	if ((_68918_parts.len() == 0LL)) {
		return std::make_tuple(_67777_t,_67794_ok);
	}
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _69517_types = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_68918_parts.len()));
	_67777_t.get()._field_idents=jule::Slice<_1aa07563a_Token>::alloc(0LL,static_cast<jule::I64>(_68918_parts.len()));
	{
		auto &expr = _68918_parts;
		auto it = expr.begin();
		_iter_begin_1a70237a6:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a702390a_part = *it;
			{
				_1aa07563a_Token _69821_token = _1a702390a_part[0LL];
				jule::I64 _69921_offset = 0LL;
				if ((_1a702390a_part.len() > 1LL)) {
					_69821_token=_1a702390a_part[1LL];
					if (_69821_token._field_id == static_cast<jule::U64>(11LLU)) {
						_69921_offset=2LL;
						if ((_1a702390a_part.len() < 3LL)) {
							_1aa6129a7_push_err(_self_.ptr(), _69821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1a70237a6;
						}
					}
				}
				_69821_token=_1a702390a_part[0LL];
				if ((_69921_offset == 2LL)) {
					if (_69821_token._field_id != static_cast<jule::U64>(2LLU)) {
					}
					_67777_t.get()._field_idents = jule::alloc_for_append(_67777_t.get()._field_idents,1);_67777_t.get()._field_idents.__push(_69821_token);
				} else {
					_69821_token._field_kind=jule::Str("_", 1);
					_67777_t.get()._field_idents = jule::alloc_for_append(_67777_t.get()._field_idents,1);_67777_t.get()._field_idents.__push(_69821_token);
				}
				jule::Ptr<_1dd583461_TypeDecl> _72422_tk;
				std::tie(_72422_tk,std::ignore) = _1aa6148aa_build_type(_self_, _1a702390a_part,(&(_69921_offset)),true);
				if (_69921_offset < static_cast<jule::I64>(static_cast<jule::I64>(_1a702390a_part.len()))) {
					_1aa6129a7_push_err(_self_.ptr(), _1a702390a_part[_69921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_69517_types = jule::alloc_for_append(_69517_types,1);_69517_types.__push(_72422_tk);
			}
			_iter_next_1a70237a6:;
			++it;
			goto _iter_begin_1a70237a6;
		}
		_iter_end_1a70237a6:;
	}
	if ((_69517_types.len() > 1LL)) {
		_67777_t.get()._field_kind=jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_67745_tokens[0LL],jule::Any(jule::Any(jule::new_ptr<_1aa08bc8e_TupleTypeDecl>(_1aa08bc8e_TupleTypeDecl(_69517_types))))));
	} else {
		_67777_t.get()._field_kind=_69517_types[0LL];
	}
	_67794_ok=true;
	return std::make_tuple(_67777_t,_67794_ok);
}



inline std::tuple<jule::Ptr<_1aa08ce16_RetTypeDecl>,jule::Bool> _1aa61942b_build_ret_type(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _74739_tokens,jule::I64& _74761_i) {
	jule::Ptr<_1aa08ce16_RetTypeDecl> _74771_t = jule::Ptr<_1aa08ce16_RetTypeDecl>();
	jule::Bool _74788_ok = jule::Bool();
	_74771_t=jule::new_ptr<_1aa08ce16_RetTypeDecl>(_1aa08ce16_RetTypeDecl());
	if (_74761_i >= static_cast<jule::I64>(static_cast<jule::I64>(_74739_tokens.len()))) {
		return std::make_tuple(_74771_t,_74788_ok);
	}
	_1aa07563a_Token _75317_token = _74739_tokens[_74761_i];
	{
		auto &_match_expr{ _75317_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a702daad:;
			{
				if ((_75317_token._field_kind == jule::Str("{", 1))) {
					return std::make_tuple(_74771_t,_74788_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a702db24:;
			{
				if ((_75317_token._field_kind == jule::Str("=", 1))) {
					return std::make_tuple(_74771_t,_74788_ok);
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a702db8a:;
			{
				if ((_74761_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_74739_tokens.len()))) {
					_1aa6129a7_push_err(_self_.ptr(), _75317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return std::make_tuple(_74771_t,_74788_ok);
				}
				(_74761_i)++;
				_75317_token=_74739_tokens[_74761_i];
				if (_75317_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _75317_token._field_kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a7030ecd:;
							{
								std::tie(_74771_t,_74788_ok) = _1aa618e97_build_multi_ret_type(_self_, _74739_tokens,_74761_i);
								return std::make_tuple(_74771_t,_74788_ok);
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a7031cae:;
							{
								_1aa6129a7_push_err(_self_.ptr(), _75317_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return std::make_tuple(_74771_t,_74788_ok);
							}
						}
						_match_end_1a7031bc1:;
					}
				}
				std::tie(_74771_t.get()._field_kind,_74788_ok) = _1aa6148aa_build_type(_self_, _74739_tokens,(&(_74761_i)),true);
				return std::make_tuple(_74771_t,_74788_ok);
			}
		}
		_match_end_1a702da36:;
	}
	(_74761_i)++;
	_1aa6129a7_push_err(_self_.ptr(), _75317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return std::make_tuple(_74771_t,_74788_ok);
}



inline jule::Ptr<_1aa096b67_FnDecl> _1aa61998c_build_fn_prototype(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _79243_tokens,jule::I64& _79265_i,jule::Bool _79273_method) {
	jule::Ptr<_1aa096b67_FnDecl> _79317_f = jule::new_ptr<_1aa096b67_FnDecl>(_1aa096b67_FnDecl(_79243_tokens[_79265_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1aa09632b_ScopeTree>(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),jule::Ptr<_1aa08ce16_RetTypeDecl>(),jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>()));
	if (_79317_f.get()._field_token._field_id == static_cast<jule::U64>(38LLU)) {
		_79317_f.get()._field_statically=true;
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_token=_79243_tokens[_79265_i];
	}
	if (_79317_f.get()._field_token._field_id == static_cast<jule::U64>(35LLU)) {
		_79317_f.get()._field_unsafety=true;
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_token=_79243_tokens[_79265_i];
	}
	(_79265_i)++;
	if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1aa07563a_Token _82613_tok = _79243_tokens[_79265_i];
	if (_82613_tok._field_id == static_cast<jule::U64>(2LLU)) {
		(_79265_i)++;
		if (_79265_i >= static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _79317_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_79317_f.get()._field_ident=_82613_tok._field_kind;
	} else {
		_79317_f.get()._field_ident=jule::Str("<anonymous>", 11);
	}
	_1aa07563a_Token _83813_error_token = _79243_tokens[_79265_i];
	jule::Slice<_1aa07563a_Token> _83917_generics_tokens = _1aa60ecc3_range(_79265_i,jule::Str("[", 1),jule::Str("]", 1),_79243_tokens);
	if ((_83917_generics_tokens != nullptr)) {
		_79317_f.get()._field_generics=_1aa616758_build_generics(_self_.ptr(), _83917_generics_tokens,_83813_error_token);
	}
	if ((_79243_tokens[_79265_i]._field_kind != jule::Str("(", 1))) {
		_1aa6129a7_push_err(_self_.ptr(), _79243_tokens[_79265_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1aa07563a_Token> _84917_params_toks = _1aa60ecc3_range(_79265_i,jule::Str("(", 1),jule::Str(")", 1),_79243_tokens);
	if ((_84917_params_toks.len() > 0LL)) {
		_79317_f.get()._field_params=_1aa618a13_build_params(_self_, _84917_params_toks,_79273_method);
	}
	if (_79265_i < static_cast<jule::I64>(static_cast<jule::I64>(_79243_tokens.len()))) {
		_1aa07563a_Token _85517_token = _79243_tokens[_79265_i];
		if ((_85517_token._field_id == static_cast<jule::U64>(7LLU)) && (_85517_token._field_kind == jule::Str("!", 1))) {
			_79317_f.get()._field_exceptional=true;
			(_79265_i)++;
		}
	}
	std::tie(_79317_f.get()._field_result,std::ignore) = _1aa61942b_build_ret_type(_self_, _79243_tokens,_79265_i);
	return _79317_f;
}



inline jule::Ptr<_1aa096b67_FnDecl> _1aa619eed_build_fn(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _86833_tokens,jule::Bool _86850_method,jule::Bool _86864_prototype) {
	jule::I64 _86917_i = 0LL;
	jule::Ptr<_1aa096b67_FnDecl> _87017_f = _1aa61998c_build_fn_prototype(_self_, _86833_tokens,_86917_i,_86850_method);
	if (_86864_prototype) {
		if (_86917_i < static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _86833_tokens[(_86917_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		return _87017_f;
	} else if ((_87017_f == nullptr)) {
		return _87017_f;
	}
	if (_86917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _87017_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Slice<_1aa07563a_Token> _88617_block_tokens = _1aa60ecc3_range(_86917_i,jule::Str("{", 1),jule::Str("}", 1),_86833_tokens);
	if ((_88617_block_tokens != nullptr)) {
		_87017_f.get()._field_scope=_1aa613cd8_build_scope(_self_, _88617_block_tokens);
		_87017_f.get()._field_scope.get()._field_unsafety=_87017_f.get()._field_unsafety;
		if (_86917_i < static_cast<jule::I64>(static_cast<jule::I64>(_86833_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _86833_tokens[_86917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
	} else {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _87017_f.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _87017_f;
}



inline jule::Slice<_1aa07563a_Token> _1aa61a3a5_get_use_decl_selectors(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token> _90245_tokens) {
	jule::I64 _90317_i = 0LL;
	_90245_tokens=_1aa60ecc3_range(_90317_i,jule::Str("{", 1),jule::Str("}", 1),_90245_tokens);
	jule::Slice<jule::Slice<_1aa07563a_Token>> _90518_parts;
	jule::Slice<_1c4810251_Log> _90525_errs;
	std::tie(_90518_parts,_90525_errs) = _1aa6105dc_parts(_90245_tokens,static_cast<jule::U64>(8LLU),true);
	if ((_90525_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_90525_errs);
		return nullptr;
	}
	jule::Slice<_1aa07563a_Token> _91117_selectors = jule::Slice<_1aa07563a_Token>::alloc(0LL,static_cast<jule::I64>(_90518_parts.len()));
	{
		auto &expr = _90518_parts;
		auto it = expr.begin();
		_iter_begin_1a704e040:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a704e45d_part = *it;
			{
				if ((_1a704e45d_part.len() > 1LL)) {
					_1aa6129a7_push_err(&(*_self_), _1a704e45d_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				}
				_1aa07563a_Token _91621_tok = _1a704e45d_part[0LL];
				if ((_91621_tok._field_id != static_cast<jule::U64>(2LLU)) && (_91621_tok._field_id != static_cast<jule::U64>(28LLU))) {
					_1aa6129a7_push_err(&(*_self_), _91621_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1aa612da3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1a704e040;
				}
				_91117_selectors = jule::alloc_for_append(_91117_selectors,1);_91117_selectors.__push(_91621_tok);
			}
			_iter_next_1a704e040:;
			++it;
			goto _iter_begin_1a704e040;
		}
		_iter_end_1a704e040:;
	}
	return _91117_selectors;
}



inline void _1aa61a7a1_build_cpp_use_decl(_1aa611b60_Parser* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _92742_decl,jule::Slice<_1aa07563a_Token>& _92759_tokens) {
	if ((_92759_tokens.len() > 1LL)) {
		_1aa6129a7_push_err(&(*_self_), _92759_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1aa07563a_Token _93113_token = _92759_tokens[0LL];
	if ((_93113_token._field_id != static_cast<jule::U64>(6LLU)) || ((_93113_token._field_kind[0LL] != '`') && (_93113_token._field_kind[0LL] != '\"'))) {
		_1aa6129a7_push_err(&(*_self_), _93113_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;
	}
	_92742_decl.get()._field_cpp_linked=true;
	_92742_decl.get()._field_link_path=_93113_token._field_kind.slice(1LL,(_93113_token._field_kind.len() - 1LL));
	if ((!(_1c47ee0a8_is_std_header_path(_92742_decl.get()._field_link_path)))) {
		_92742_decl.get()._field_link_path=_1c4789ac1_join(jule::Slice<jule::Str>({_1aa07c6ec_dir(_93113_token._field_file.ptr()),_92742_decl.get()._field_link_path}));
	}
}



inline void _1aa61ab9c_build_std_use_decl(_1aa611b60_Parser* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _94342_decl,jule::Slice<_1aa07563a_Token> _94362_tokens) {
	_94342_decl.get()._field_std=true;
	_1aa07563a_Token _94617_token = _94362_tokens[0LL];
	if ((_94362_tokens.len() < 3LL)) {
		_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_94362_tokens=_94362_tokens.slice(2LL);
	_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94617_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a705a2d2:;
			{
				_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a705ade8:;
			{
				if ((_94617_token._field_kind != jule::Str("}", 1))) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1aa07563a_Token> _96421_selectors = nullptr;
				std::tie(_94362_tokens,_96421_selectors) = _1aa6100d1_range_last(_94362_tokens);
				_94342_decl.get()._field_selected=_1aa61a3a5_get_use_decl_selectors(&(*_self_), _96421_selectors);
				if ((_94362_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
				if (_94617_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a705ae5e:;
			{
				if ((_94617_token._field_kind != jule::Str("*", 1))) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94617_token=_94362_tokens[(_94362_tokens.len() - 1LL)];
				if (_94617_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94362_tokens=_94362_tokens.slice(0LL,(_94362_tokens.len() - 1LL));
				if ((_94362_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _94617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_94342_decl.get()._field_full=true;
			}
		}
		_match_end_1a705ad2c:;
	}
	_94342_decl.get()._field_link_path=jule::Str("std::", 5) + _1aa6116ba_tokstoa(_94362_tokens);
}



inline void _1aa61b098_build_ident_use_decl(_1aa611b60_Parser* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _100744_decl,jule::Slice<_1aa07563a_Token> _100764_tokens) {
	_100744_decl.get()._field_std=false;
	_1aa07563a_Token _101017_token = _100764_tokens[(_100764_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _101017_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a7068312:;
			{
				_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a7068378:;
			{
				if ((_101017_token._field_kind != jule::Str("}", 1))) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				jule::Slice<_1aa07563a_Token> _102221_selectors = nullptr;
				std::tie(_100764_tokens,_102221_selectors) = _1aa6100d1_range_last(_100764_tokens);
				_100744_decl.get()._field_selected=_1aa61a3a5_get_use_decl_selectors(&(*_self_), _102221_selectors);
				if ((_100764_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_101017_token=_100764_tokens[(_100764_tokens.len() - 1LL)];
				if (_101017_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a70683de:;
			{
				if ((_101017_token._field_kind != jule::Str("*", 1))) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_101017_token=_100764_tokens[(_100764_tokens.len() - 1LL)];
				if (_101017_token._field_id != static_cast<jule::U64>(23LLU)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100764_tokens=_100764_tokens.slice(0LL,(_100764_tokens.len() - 1LL));
				if ((_100764_tokens.len() == 0LL)) {
					_1aa6129a7_push_err(&(*_self_), _101017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;
				}
				_100744_decl.get()._field_full=true;
			}
		}
		_match_end_1a7068224:;
	}
	_100744_decl.get()._field_link_path=_1aa6116ba_tokstoa(_100764_tokens);
}



inline void _1aa61b494_parse_use_decl(_1aa611b60_Parser* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _107238_decl,jule::Slice<_1aa07563a_Token> _107258_tokens) {
	if (_107238_decl.get()._field_cpp_linked) {
		_1aa61a7a1_build_cpp_use_decl(&(*_self_), _107238_decl,_107258_tokens);
		return;
	}
	_1aa07563a_Token _107817_token = _107258_tokens[0LL];
	if (_107817_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(&(*_self_), _107817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	}
	if ((_107258_tokens.len() > 2LL) && (_107258_tokens[1LL]._field_id == static_cast<jule::U64>(12LLU))) {
		_107238_decl.get()._field_alias=_107817_token._field_kind;
		if (_107258_tokens[2LL]._field_id != static_cast<jule::U64>(2LLU)) {
			_1aa6129a7_push_err(&(*_self_), _107817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1aa612da3_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;
		}
		_107258_tokens=_107258_tokens.slice(2LL);
		_107817_token=_107258_tokens[0LL];
	}
	
	{
		
		if ((_107817_token._field_kind == jule::Str("std", 3))) {
			_case_begin_1a707eee9:;
			{
				_1aa61ab9c_build_std_use_decl(&(*_self_), _107238_decl,_107258_tokens);
			}
		}
		else {
			_case_begin_1a707e669:;
			{
				_1aa61b098_build_ident_use_decl(&(*_self_), _107238_decl,_107258_tokens);
			}
		}
		_match_end_1a707e614:;
	}
}



inline jule::Ptr<_1aa09ba29_UseDecl> _1aa61b928_build_use_decl(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token> _110737_tokens,jule::Bool _110754_cpp_linked) {
	jule::Ptr<_1aa09ba29_UseDecl> _110817_decl = jule::new_ptr<_1aa09ba29_UseDecl>(_1aa09ba29_UseDecl(_110737_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_1aa07563a_Token>(),_110754_cpp_linked,jule::Bool()));
	if ((_110737_tokens.len() < 2LL)) {
		_1aa6129a7_push_err(&(*_self_), _110817_decl.get()._field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;
	}
	_110737_tokens=_110737_tokens.slice(1LL);
	_1aa61b494_parse_use_decl(&(*_self_), _110817_decl,_110737_tokens);
	return _110817_decl;
}



inline jule::Ptr<_1aa08d334_Expr> _1aa61bdac_build_enum_item_expr(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<jule::I64> _112144_i,jule::Slice<_1aa07563a_Token>& _112158_tokens) {
	jule::I64 _112217_brace_n = 0LL;
	jule::I64 _112313_expr_start = (*(_112144_i));
	for (; (*(_112144_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_112158_tokens.len())); ((*(_112144_i)))++) {
		{
			_1aa07563a_Token _112517_t = _112158_tokens[(*(_112144_i))];
			if (_112517_t._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _112517_t._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a7086121:;
						{
							(_112217_brace_n)++;
							goto _iter_next_1a7084b36;
						}
					}
					else {
						_case_begin_1a70859b1:;
						{
							(_112217_brace_n)--;
						}
					}
					_match_end_1a7085ce1:;
				}
			}
			if ((_112217_brace_n > 0LL)) {
				goto _iter_next_1a7084b36;
			}
			if ((_112517_t._field_id == static_cast<jule::U64>(8LLU)) || (((*(_112144_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_112158_tokens.len())))) {
				jule::Slice<_1aa07563a_Token> _114425_expr_tokens = nullptr;
				if (_112517_t._field_id == static_cast<jule::U64>(8LLU)) {
					_114425_expr_tokens=_112158_tokens.slice(_112313_expr_start,(*(_112144_i)));
				} else {
					_114425_expr_tokens=_112158_tokens.slice(_112313_expr_start);
				}
				return _1aa61325a_build_expr(_self_, _114425_expr_tokens);
			}
		}
	_iter_next_1a7084b36:;
	}
	_iter_end_1a7084b36:;
	return nullptr;
}



inline jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>> _1aa61c264_build_enum_items(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _115641_tokens) {
	jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>> _115717_items = jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::I64> _115817_i = jule::new_ptr<jule::I64>(0LL);
	for (; (*(_115817_i)) < static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len())); ((*(_115817_i)))++) {
		{
			_1aa07563a_Token _116021_t = _115641_tokens[(*(_115817_i))];
			jule::Ptr<_1aa09c134_EnumItemDecl> _116121_item = jule::new_ptr<_1aa09c134_EnumItemDecl>(_1aa09c134_EnumItemDecl());
			_116121_item.get()._field_token=_116021_t;
			if (_116121_item.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
				_1aa6129a7_push_err(_self_.ptr(), _116121_item.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			}
			_116121_item.get()._field_ident=_116121_item.get()._field_token._field_kind;
			if ((((*(_115817_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) || (_115641_tokens[((*(_115817_i)) + 1LL)]._field_id == static_cast<jule::U64>(8LLU))) {
				if (((*(_115817_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) {
					((*(_115817_i)))++;
				}
				_115717_items = jule::alloc_for_append(_115717_items,1);_115717_items.__push(_116121_item);
				goto _iter_next_1a708a8d9;
			}
			((*(_115817_i)))++;
			_116021_t=_115641_tokens[(*(_115817_i))];
			((*(_115817_i)))++;
			if ((_116021_t._field_id != static_cast<jule::U64>(7LLU)) || (_116021_t._field_kind != jule::Str("=", 1))) {
				_1aa6129a7_push_err(_self_.ptr(), _116021_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>());
				goto _iter_next_1a708a8d9;
			}
			if (((*(_115817_i)) >= static_cast<jule::I64>(static_cast<jule::I64>(_115641_tokens.len()))) || (_115641_tokens[(*(_115817_i))]._field_id == static_cast<jule::U64>(8LLU))) {
				_1aa6129a7_push_err(_self_.ptr(), _116021_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1a708a8d9;
			}
			_116121_item.get()._field_expr=_1aa61bdac_build_enum_item_expr(_self_, _115817_i,_115641_tokens);
			_115717_items = jule::alloc_for_append(_115717_items,1);_115717_items.__push(_116121_item);
		}
	_iter_next_1a708a8d9:;
	}
	_iter_end_1a708a8d9:;
	return _115717_items;
}



inline jule::Ptr<_1aa09cb7e_EnumDecl> _1aa61c61b_build_enum_decl(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _119340_tokens) {
	if ((_119340_tokens.len() < 2LL) || (_119340_tokens.len() < 3LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _119340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa09cb7e_EnumDecl> _119817_e = jule::new_ptr<_1aa09cb7e_EnumDecl>(_1aa09cb7e_EnumDecl(_119340_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_1dd583461_TypeDecl>(),jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>>()));
	if (_119817_e.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_119817_e.get()._field_ident=_119817_e.get()._field_token._field_kind;
	jule::I64 _120617_i = 2LL;
	if (_119340_tokens[_120617_i]._field_id == static_cast<jule::U64>(11LLU)) {
		(_120617_i)++;
		if (_120617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _119340_tokens[(_120617_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _119817_e;
		}
		std::tie(_119817_e.get()._field_kind,std::ignore) = _1aa6148aa_build_type(_self_, _119340_tokens,(&(_120617_i)),true);
		if (_120617_i >= static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
			_1aa612204_stop(_self_.ptr());
			_1aa6129a7_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _119817_e;
		}
	} else {
		_119817_e.get()._field_kind=nullptr;
	}
	jule::Slice<_1aa07563a_Token> _122317_item_tokens = _1aa60ecc3_range(_120617_i,jule::Str("{", 1),jule::Str("}", 1),_119340_tokens);
	if ((_122317_item_tokens == nullptr)) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _119817_e.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _119817_e;
	} else if (_120617_i < static_cast<jule::I64>(static_cast<jule::I64>(_119340_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _119340_tokens[_120617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_119817_e.get()._field_items=_1aa61c264_build_enum_items(_self_, _122317_item_tokens);
	return _119817_e;
}



inline jule::Ptr<_1aa09d5db_FieldDecl> _1aa61c9c3_build_field(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _123635_tokens) {
	jule::Ptr<_1aa09d5db_FieldDecl> _123717_f = jule::new_ptr<_1aa09d5db_FieldDecl>(_1aa09d5db_FieldDecl());
	_123717_f.get()._field_public=_123635_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU);
	if (_123717_f.get()._field_public) {
		if ((_123635_tokens.len() == 1LL)) {
			_1aa6129a7_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(1LL);
	}
	_123717_f.get()._field_mutable=_123635_tokens[0LL]._field_id == static_cast<jule::U64>(36LLU);
	if (_123717_f.get()._field_mutable) {
		if ((_123635_tokens.len() == 1LL)) {
			_1aa6129a7_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(1LL);
	}
	_123717_f.get()._field_token=_123635_tokens[0LL];
	if (_123717_f.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _123717_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;
	}
	_123717_f.get()._field_ident=_123717_f.get()._field_token._field_kind;
	if ((_123635_tokens.len() == 1LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _123635_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	} else if (_123635_tokens[1LL]._field_id != static_cast<jule::U64>(11LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _123635_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_123635_tokens=_123635_tokens.slice(2LL);
	jule::I64 _127417_i = 0LL;
	std::tie(_123717_f.get()._field_kind,std::ignore) = _1aa6148aa_build_type(_self_, _123635_tokens,(&(_127417_i)),true);
	if (_127417_i < static_cast<jule::I64>(static_cast<jule::I64>(_123635_tokens.len()))) {
		_1aa07563a_Token _127717_token = _123635_tokens[_127417_i];
		if ((_127717_token._field_id != static_cast<jule::U64>(7LLU)) || (_127717_token._field_kind != jule::Str("=", 1))) {
			_1aa6129a7_push_err(_self_.ptr(), _123635_tokens[_127417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_127417_i)++;
		if (_127417_i >= static_cast<jule::I64>(static_cast<jule::I64>(_123635_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _127717_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;
		}
		_123635_tokens=_123635_tokens.slice(_127417_i);
		_123717_f.get()._field_default=_1aa61325a_build_expr(_self_, _123635_tokens);
	}
	return _123717_f;
}



inline jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>> _1aa61cdbe_build_struct_decl_fields(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _129448_tokens) {
	jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>> _129517_fields = nullptr;
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _129617_stmts = _1aa5ddb92_split_stmts(_129448_tokens);
	{
		auto &expr = _129617_stmts;
		auto it = expr.begin();
		_iter_begin_1a70b03ae:;
		if (it != expr.end()) {
			jule::Ptr<_1aa5dd587_Stmt> _1a70b0502_stmt = *it;
			{
				_129448_tokens=_1a70b0502_stmt.get()._field_tokens;
				jule::Ptr<_1aa09d5db_FieldDecl> _129921_f = _1aa61c9c3_build_field(_self_, _129448_tokens);
				_129517_fields = jule::alloc_for_append(_129517_fields,1);_129517_fields.__push(_129921_f);
			}
			_iter_next_1a70b03ae:;
			++it;
			goto _iter_begin_1a70b03ae;
		}
		_iter_end_1a70b03ae:;
	}
	return _129517_fields;
}



inline jule::Ptr<_1aa09de7c_StructDecl> _1aa61d265_build_struct_decl(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _130542_tokens) {
	if ((_130542_tokens.len() < 3LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _130542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _131117_i = 1LL;
	jule::Ptr<_1aa09de7c_StructDecl> _131217_s = jule::new_ptr<_1aa09de7c_StructDecl>(_1aa09de7c_StructDecl(_130542_tokens[_131117_i],jule::Str(),jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>()));
	if (_131217_s.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _131217_s.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	(_131117_i)++;
	if (_131117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _130542_tokens[_131117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _131217_s;
	}
	_131217_s.get()._field_ident=_131217_s.get()._field_token._field_kind;
	_1aa07563a_Token _132613_error_token = _130542_tokens[_131117_i];
	jule::Slice<_1aa07563a_Token> _132717_generics_tokens = _1aa60ecc3_range(_131117_i,jule::Str("[", 1),jule::Str("]", 1),_130542_tokens);
	if ((_132717_generics_tokens != nullptr)) {
		_131217_s.get()._field_generics=_1aa616758_build_generics(_self_.ptr(), _132717_generics_tokens,_132613_error_token);
	}
	if (_131117_i >= static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _130542_tokens[(_131117_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _131217_s;
	}
	jule::Slice<_1aa07563a_Token> _133717_body_tokens = _1aa60ecc3_range(_131117_i,jule::Str("{", 1),jule::Str("}", 1),_130542_tokens);
	if ((_133717_body_tokens == nullptr)) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _131217_s.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _131217_s;
	}
	if (_131117_i < static_cast<jule::I64>(static_cast<jule::I64>(_130542_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _130542_tokens[_131117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_131217_s.get()._field_fields=_1aa61cdbe_build_struct_decl_fields(_self_, _133717_body_tokens);
	return _131217_s;
}



inline void _1aa61d584_check_method_receiver(_1aa611b60_Parser* _self_,jule::Ptr<_1aa096b67_FnDecl>& _135141_f) {
	if (_135141_f.get()._field_statically) {
		if ((_135141_f.get()._field_params.len() > 0LL) && _1dd5a7c27_is_self(_135141_f.get()._field_params[0LL].ptr())) {
			_1aa6129a7_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_135141_f.get()._field_params.len() == 0LL)) {
		_1aa6129a7_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1aa096749_ParamDecl> _136413_param = _135141_f.get()._field_params[0LL];
	if ((!(_1dd5a7c27_is_self(_136413_param.ptr())))) {
		_1aa6129a7_push_err(&(*_self_), _135141_f.get()._field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;
	}
}



inline jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> _1aa61d93b_build_trait_methods(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _137143_tokens) {
	jule::Slice<jule::Ptr<_1aa096b67_FnDecl>> _137217_methods = nullptr;
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _137317_stmts = _1aa5ddb92_split_stmts(_137143_tokens);
	{
		auto &expr = _137317_stmts;
		auto it = expr.begin();
		_iter_begin_1a70c3515:;
		if (it != expr.end()) {
			jule::Ptr<_1aa5dd587_Stmt> _1a70c3658_stmt = *it;
			{
				_137143_tokens=_1a70c3658_stmt.get()._field_tokens;
				if ((_137143_tokens.len() == 0LL)) {
					goto _iter_next_1a70c3515;
				}
				jule::Bool _138021_is_pub = false;
				if (_137143_tokens[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
					_138021_is_pub=true;
					if ((_137143_tokens.len() == 1LL)) {
						_1aa6129a7_push_err(_self_.ptr(), _137143_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						goto _iter_next_1a70c3515;
					}
					_137143_tokens=_137143_tokens.slice(1LL);
				}
				jule::Ptr<_1aa096b67_FnDecl> _139021_f = _1aa619eed_build_fn(_self_, _137143_tokens,true,true);
				if ((_139021_f != nullptr)) {
					if (_1dd5772ac_is_anon(_139021_f.ptr())) {
						_1aa6129a7_push_err(_self_.ptr(), _139021_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
					_1aa61d584_check_method_receiver(_self_.ptr(), _139021_f);
					if ((_139021_f.get()._field_generics.len() > 0LL)) {
						_1aa6129a7_push_err(_self_.ptr(), _139021_f.get()._field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					}
					_139021_f.get()._field_public=_138021_is_pub;
					_137217_methods = jule::alloc_for_append(_137217_methods,1);_137217_methods.__push(_139021_f);
				}
			}
			_iter_next_1a70c3515:;
			++it;
			goto _iter_begin_1a70c3515;
		}
		_iter_end_1a70c3515:;
	}
	return _137217_methods;
}



inline jule::Ptr<_1aa09e631_TraitDecl> _1aa61dce3_build_trait_decl(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _140641_tokens) {
	if ((_140641_tokens.len() < 3LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _140641_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa09e631_TraitDecl> _141117_t = jule::new_ptr<_1aa09e631_TraitDecl>(_1aa09e631_TraitDecl(_140641_tokens[1LL],jule::Str(),jule::Bool(),jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>()));
	if (_141117_t.get()._field_token._field_id != static_cast<jule::U64>(2LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _141117_t.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	}
	_141117_t.get()._field_ident=_141117_t.get()._field_token._field_kind;
	jule::I64 _141917_i = 2LL;
	jule::Slice<_1aa07563a_Token> _142017_body_tokens = _1aa60ecc3_range(_141917_i,jule::Str("{", 1),jule::Str("}", 1),_140641_tokens);
	if ((_142017_body_tokens == nullptr)) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _141117_t.get()._field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_141917_i < static_cast<jule::I64>(static_cast<jule::I64>(_140641_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _140641_tokens[_141917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_141117_t.get()._field_methods=_1aa61d93b_build_trait_methods(_self_, _142017_body_tokens);
	return _141117_t;
}



inline jule::Ptr<_1aa096b67_FnDecl> _1aa61e19a_build_cpp_link_fn(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _143441_tokens) {
	_143441_tokens=_143441_tokens.slice(1LL);
	jule::Ptr<_1aa096b67_FnDecl> _143617_f = _1aa619eed_build_fn(_self_, _143441_tokens,false,true);
	if ((_143617_f != nullptr)) {
		if (_1dd5772ac_is_anon(_143617_f.ptr())) {
			_1aa6129a7_push_err(_self_.ptr(), _143617_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		}
		_143617_f.get()._field_cpp_linked=true;
	}
	return _143617_f;
}



inline jule::Ptr<_1aa097085_VarDecl> _1aa61e552_build_cpp_link_var(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _144642_tokens) {
	_144642_tokens=_144642_tokens.slice(1LL);
	jule::Ptr<_1aa097085_VarDecl> _144817_v = _1aa615e1c_build_var(_self_, _144642_tokens);
	if ((_144817_v != nullptr)) {
		_144817_v.get()._field_cpp_linked=true;
		if ((_144817_v.get()._field_expr != nullptr)) {
			_1aa6129a7_push_err(_self_.ptr(), _144817_v.get()._field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		}
	}
	return _144817_v;
}



inline jule::Ptr<_1aa09de7c_StructDecl> _1aa61e909_build_cpp_link_struct(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _145845_tokens) {
	_145845_tokens=_145845_tokens.slice(1LL);
	jule::Ptr<_1aa09de7c_StructDecl> _146017_s = _1aa61d265_build_struct_decl(_self_, _145845_tokens);
	if ((_146017_s != nullptr)) {
		_146017_s.get()._field_cpp_linked=true;
	}
	return _146017_s;
}



inline jule::Ptr<_1aa09a330_TypeAliasDecl> _1aa61ed05_build_cpp_link_type_alias(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _146749_tokens) {
	_146749_tokens=_146749_tokens.slice(1LL);
	jule::Ptr<_1aa09a330_TypeAliasDecl> _146917_t = _1aa614c62_build_type_alias_decl(_self_, _146749_tokens);
	if ((_146917_t != nullptr)) {
		_146917_t.get()._field_cpp_linked=true;
	}
	return _146917_t;
}



inline jule::Ptr<_1aa09ba29_UseDecl> _1aa62019b_build_cpp_link_use(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _147642_tokens) {
	if ((_147642_tokens.len() == 1LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _147642_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_147642_tokens=_147642_tokens.slice(1LL);
	
	return _1aa61b928_build_use_decl(_self_.ptr(), _147642_tokens,true);
}



inline jule::Any _1aa620553_build_cpp_link(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _148739_tokens) {
	_1aa07563a_Token _148817_token = _148739_tokens[0LL];
	if ((_148739_tokens.len() == 1LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _148817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return jule::Any(nullptr);
	}
	_148817_token=_148739_tokens[1LL];
	{
		auto &_match_expr{ _148817_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a70dec07:;
			{
				return jule::Any(_1aa62019b_build_cpp_link_use(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a70dec6d:;
			{
				return jule::Any(_1aa61e19a_build_cpp_link_fn(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a70decd4:;
			{
				return jule::Any(_1aa61e552_build_cpp_link_var(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a70ded4a:;
			{
				return jule::Any(_1aa61e909_build_cpp_link_struct(_self_, _148739_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a70e070d:;
			{
				return jule::Any(_1aa61ed05_build_cpp_link_type_alias(_self_, _148739_tokens));
			}
		}
		else {
			_case_begin_1a70deb91:;
			{
				_1aa6129a7_push_err(_self_.ptr(), _148817_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a70deb3b:;
	}
	return jule::Any(nullptr);
}



inline jule::Ptr<_1aa096b67_FnDecl> _1aa62090a_get_method(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _151835_tokens) {
	jule::I64 _151917_i = 0LL;
	_1aa07563a_Token _152017_token = _151835_tokens[_151917_i];
	if (_152017_token._field_id == static_cast<jule::U64>(38LLU)) {
		if ((_151917_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151835_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151917_i)++;
		_152017_token=_151835_tokens[_151917_i];
	}
	if (_152017_token._field_id == static_cast<jule::U64>(35LLU)) {
		if ((_151917_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_151835_tokens.len()))) {
			_1aa6129a7_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;
		}
		(_151917_i)++;
		_152017_token=_151835_tokens[_151917_i];
	}
	if (_152017_token._field_id != static_cast<jule::U64>(33LLU)) {
		_1aa6129a7_push_err(_self_.ptr(), _152017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa096b67_FnDecl> _154417_f = _1aa619eed_build_fn(_self_, _151835_tokens,true,false);
	if ((_154417_f != nullptr) && _1dd5772ac_is_anon(_154417_f.ptr())) {
		_1aa6129a7_push_err(_self_.ptr(), _154417_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	return _154417_f;
}



inline void _1aa620d06_parse_impl_body(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa09ecd5_Impl>& _155140_ipl,jule::Slice<_1aa07563a_Token>& _155157_tokens) {
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _155217_stmts = _1aa5ddb92_split_stmts(_155157_tokens);
	{
		auto &expr = _155217_stmts;
		auto it = expr.begin();
		_iter_begin_1a70eb30c:;
		if (it != expr.end()) {
			jule::Ptr<_1aa5dd587_Stmt> _1a70eb43e_stmt = *it;
			{
				_155157_tokens=_1a70eb43e_stmt.get()._field_tokens;
				_1aa07563a_Token _155521_token = _155157_tokens[0LL];
				jule::Bool _155621_is_pub = false;
				{
					auto &_match_expr{ _155521_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(39LLU)) {
						_case_begin_1a70ec792:;
						{
							_1aa613931_push_directive(_self_.ptr(), _1aa613612_build_directive(_self_.ptr(), _155157_tokens));
							goto _iter_next_1a70eb30c;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(21LLU)) {
						_case_begin_1a70ec808:;
						{
							_155621_is_pub=true;
							if ((_155157_tokens.len() == 1LL)) {
								_1aa6129a7_push_err(_self_.ptr(), _155157_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
								goto _iter_next_1a70eb30c;
							}
							_155157_tokens=_155157_tokens.slice(1LL);
							if ((_155157_tokens.len() > 0LL)) {
								_155521_token=_155157_tokens[0LL];
							}
						}
					}
					_match_end_1a70ec71a:;
				}
				{
					auto &_match_expr{ _155521_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1a70ed8a3:;
						{
							jule::Ptr<_1aa097085_VarDecl> _157525_v = _1aa615e1c_build_var(_self_, _155157_tokens);
							if ((_157525_v != nullptr)) {
								_157525_v.get()._field_public=_155621_is_pub;
								_155140_ipl.get()._field_statics = jule::alloc_for_append(_155140_ipl.get()._field_statics,1);_155140_ipl.get()._field_statics.__push(_157525_v);
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(38LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a70ed919:;
						{
							jule::Ptr<_1aa096b67_FnDecl> _158325_f = _1aa62090a_get_method(_self_, _155157_tokens);
							if ((_158325_f != nullptr)) {
								_1aa61d584_check_method_receiver(_self_.ptr(), _158325_f);
								_1aa621c80_apply_fn_meta(_self_.ptr(), _158325_f,_155621_is_pub);
								_155140_ipl.get()._field_methods = jule::alloc_for_append(_155140_ipl.get()._field_methods,1);_155140_ipl.get()._field_methods.__push(_158325_f);
							}
						}
					}
					else {
						_case_begin_1a70eccd1:;
						{
							_1aa6129a7_push_err(_self_.ptr(), _155521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1a70eb30c;
						}
					}
					_match_end_1a70ecc7b:;
				}
			}
			_iter_next_1a70eb30c:;
			++it;
			goto _iter_begin_1a70eb30c;
		}
		_iter_end_1a70eb30c:;
	}
}



inline jule::Ptr<_1aa09ecd5_Impl> _1aa6211ad_build_impl(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _159634_tokens) {
	_1aa07563a_Token _159717_token = _159634_tokens[0LL];
	if ((_159634_tokens.len() < 2LL)) {
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::I64 _160317_i = 1LL;
	jule::Ptr<_1dd583461_TypeDecl> _160518_base;
	jule::Bool _160528_ok;
	std::tie(_160518_base,_160528_ok) = _1aa6148aa_build_type(_self_, _159634_tokens,(&(_160317_i)),true);
	if ((!(_160528_ok))) {
		return nullptr;
	}
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1aa09ecd5_Impl> _161417_ipl = jule::new_ptr<_1aa09ecd5_Impl>(_1aa09ecd5_Impl(_160518_base,jule::Ptr<_1dd583461_TypeDecl>(),jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>(),jule::Slice<jule::Ptr<_1aa097085_VarDecl>>()));
	_159717_token=_159634_tokens[_160317_i];
	if (_159717_token._field_id != static_cast<jule::U64>(12LLU)) {
		if ((_159717_token._field_id == static_cast<jule::U64>(3LLU)) && (_159717_token._field_kind == jule::Str("{", 1))) {
			std::tie(_161417_ipl.get()._field_base,_161417_ipl.get()._field_dest) = std::make_tuple(_161417_ipl.get()._field_dest,_161417_ipl.get()._field_base);
			goto _julec_label_body;
		}
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	(_160317_i)++;
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	std::tie(_161417_ipl.get()._field_dest,_160528_ok) = _1aa6148aa_build_type(_self_, _159634_tokens,(&(_160317_i)),true);
	if ((!(_160528_ok))) {
		return nullptr;
	}
	if (_160317_i >= static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_body:;
	jule::Slice<_1aa07563a_Token> _165417_body_tokens = _1aa60ecc3_range(_160317_i,jule::Str("{", 1),jule::Str("}", 1),_159634_tokens);
	if ((_165417_body_tokens == nullptr)) {
		_1aa612204_stop(_self_.ptr());
		_1aa6129a7_push_err(_self_.ptr(), _159717_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_160317_i < static_cast<jule::I64>(static_cast<jule::I64>(_159634_tokens.len()))) {
		_1aa6129a7_push_err(_self_.ptr(), _159634_tokens[_160317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
	_1aa620d06_parse_impl_body(_self_, _161417_ipl,_165417_body_tokens);
	return _161417_ipl;
}



inline jule::Any _1aa621565_build_node_data(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _166840_tokens) {
	_1aa07563a_Token _166917_token = _166840_tokens[0LL];
	{
		auto &_match_expr{ _166917_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a711615c:;
			{
				
				return jule::Any(_1aa61b928_build_use_decl(_self_.ptr(), _166840_tokens,false));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a711548b:;
			{
				jule::Ptr<_1aa096b67_FnDecl> _167621_f = _1aa619eed_build_fn(_self_, _166840_tokens,false,false);
				if ((_167621_f != nullptr)) {
					_167621_f.get()._field_global=true;
					if (_1dd5772ac_is_anon(_167621_f.ptr())) {
						_1aa6129a7_push_err(_self_.ptr(), _167621_f.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					}
				}
				return jule::Any(_167621_f);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a7115502:;
			{
				return jule::Any(_1aa615e1c_build_var(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a7115dd7:;
			{
				return jule::Any(_1aa614c62_build_type_alias_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a7115e4d:;
			{
				return jule::Any(_1aa61c61b_build_enum_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a7115eb4:;
			{
				return jule::Any(_1aa61d265_build_struct_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a711602a:;
			{
				return jule::Any(_1aa61dce3_build_trait_decl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a71162b1:;
			{
				return jule::Any(_1aa6211ad_build_impl(_self_, _166840_tokens));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a7116327:;
			{
				return _1aa620553_build_cpp_link(_self_, _166840_tokens);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a711638d:;
			{
				return jule::Any(_1aa613612_build_directive(_self_.ptr(), _166840_tokens));
			}
		}
		else {
			_case_begin_1a7114bc7:;
			{
				_1aa6129a7_push_err(_self_.ptr(), _166917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return jule::Any(nullptr);
			}
		}
		_match_end_1a711536a:;
	}
}



inline void _1aa621884_check_directive(_1aa611b60_Parser* _self_,_1dd582b25_Node& _170935_node) {
	if (((*_self_)._field_directives == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _170935_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd583043_Directive>>()) {
			_case_begin_1a711eab1:;
			{
				goto _match_end_1a711dde0;
			}
		}
		else {
			_case_begin_1a711e495:;
			{
				if (((*_self_)._field_directives.len() != 0LL)) {
					_1aa6129a7_push_err(&(*_self_), (*_self_)._field_directives[0LL].get()._field_tag,jule::Str("this directive is out of scope, cant assign to any define", 57),jule::Slice<jule::Any>());
				}
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1a711dde0:;
	}
}



inline void _1aa621c80_apply_fn_meta(_1aa611b60_Parser* _self_,jule::Ptr<_1aa096b67_FnDecl>& _172637_f,jule::Bool _172649_is_pub) {
	_172637_f.get()._field_public=_172649_is_pub;
	_172637_f.get()._field_directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1aa62217b_apply_meta(_1aa611b60_Parser* _self_,_1dd582b25_Node& _173234_node,jule::Bool _173246_is_pub) {
	{
		auto &_match_expr{ _173234_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa097085_VarDecl>>()) {
			_case_begin_1a7122c4b:;
			{
				jule::Ptr<_1aa097085_VarDecl> _173521_v = _173234_node._field_data.operator jule::Ptr<_1aa097085_VarDecl>();
				if ((_173521_v == nullptr)) {
					return;
				}
				_173521_v.get()._field_public=_173246_is_pub;
				_173521_v.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa096b67_FnDecl>>()) {
			_case_begin_1a7122cb2:;
			{
				jule::Ptr<_1aa096b67_FnDecl> _174321_f = _173234_node._field_data.operator jule::Ptr<_1aa096b67_FnDecl>();
				if ((_174321_f == nullptr)) {
					return;
				}
				_1aa621c80_apply_fn_meta(&(*_self_), _174321_f,_173246_is_pub);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09a330_TypeAliasDecl>>()) {
			_case_begin_1a7122d28:;
			{
				jule::Ptr<_1aa09a330_TypeAliasDecl> _174921_tad = _173234_node._field_data.operator jule::Ptr<_1aa09a330_TypeAliasDecl>();
				if ((_174921_tad == nullptr)) {
					return;
				}
				_174921_tad.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09cb7e_EnumDecl>>()) {
			_case_begin_1a7122d8e:;
			{
				jule::Ptr<_1aa09cb7e_EnumDecl> _175521_ed = _173234_node._field_data.operator jule::Ptr<_1aa09cb7e_EnumDecl>();
				if ((_175521_ed == nullptr)) {
					return;
				}
				_175521_ed.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09de7c_StructDecl>>()) {
			_case_begin_1a7123114:;
			{
				jule::Ptr<_1aa09de7c_StructDecl> _176121_sd = _173234_node._field_data.operator jule::Ptr<_1aa09de7c_StructDecl>();
				if ((_176121_sd == nullptr)) {
					return;
				}
				_176121_sd.get()._field_directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
				_176121_sd.get()._field_public=_173246_is_pub;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09e631_TraitDecl>>()) {
			_case_begin_1a712317a:;
			{
				jule::Ptr<_1aa09e631_TraitDecl> _176921_td = _173234_node._field_data.operator jule::Ptr<_1aa09e631_TraitDecl>();
				if ((_176921_td == nullptr)) {
					return;
				}
				_176921_td.get()._field_public=_173246_is_pub;
			}
		}
		else {
			_case_begin_1a7122bd5:;
			{
				if (_173246_is_pub) {
					_1aa6129a7_push_err(&(*_self_), _173234_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a7122b80:;
	}
}



inline void _1aa62249a_check_use_decl(_1aa611b60_Parser* _self_,_1dd582b25_Node& _178134_node) {
	{
		auto &_match_expr{ _178134_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09ba29_UseDecl>>()) {
			_case_begin_1a712adca:;
			{
				goto _match_end_1a712b13e;
			}
		}
		else {
			_case_begin_1a712b194:;
			{
				return;
			}
		}
		_match_end_1a712b13e:;
	}
	if (((*_self_)._field_ast.get()._field_nodes.len() > 0LL)) {
		_1aa6129a7_push_err(&(*_self_), _178134_node._field_token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1aa612da3_push_suggestion(&(*_self_), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	}
}



inline std::tuple<jule::Bool,jule::Any> _1aa622896_build_general_scope_node_data(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token> _179653_st) {
	jule::Bool _179668_is_pub = jule::Bool();
	jule::Any _179682_data = jule::Any();
	if (_179653_st[0LL]._field_id == static_cast<jule::U64>(21LLU)) {
		_179668_is_pub=true;
		_179653_st=_179653_st.slice(1LL);
		if ((_179653_st.len() == 0LL)) {
			_1aa6129a7_push_err(_self_.ptr(), _179653_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return std::make_tuple(_179668_is_pub,_179682_data);
		}
	}
	_179682_data=_1aa621565_build_node_data(_self_, _179653_st);
	return std::make_tuple(_179668_is_pub,_179682_data);
}



inline _1dd582b25_Node _1aa622c3c_parse_node(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _181135_st) {
	_1dd582b25_Node _181217_node = _1dd582b25_Node(_181135_st[0LL],jule::Any());
	jule::Bool _181614_is_pub;
	jule::Any _181626_data;
	std::tie(_181614_is_pub,_181626_data) = _1aa622896_build_general_scope_node_data(_self_, _181135_st);
	if (_181626_data == jule::Any(jule::Any(nullptr))) {
		return _181217_node;
	}
	_181217_node._field_data=_181626_data;
	_1aa62217b_apply_meta(_self_.ptr(), _181217_node,_181614_is_pub);
	_1aa621884_check_directive(_self_.ptr(), _181217_node);
	_1aa62249a_check_use_decl(_self_.ptr(), _181217_node);
	return _181217_node;
}



inline void _1aa62305b_append_node(jule::Ptr<_1aa611b60_Parser> _self_,jule::Slice<_1aa07563a_Token>& _182936_st) {
	if ((_182936_st.len() == 0LL)) {
		return;
	}
	_1dd582b25_Node _183417_node = _1aa622c3c_parse_node(_self_, _182936_st);
	if ((_183417_node._field_data == jule::Any(jule::Any(nullptr))) || _1aa6124ce_stopped(_self_.ptr())) {
		return;
	}
	{
		
		if (_1aa006b4e_is_directive(&_183417_node)) {
			_case_begin_1a7136d4d:;
			{
				_1aa613931_push_directive(_self_.ptr(), _183417_node._field_data.operator jule::Ptr<_1dd583043_Directive>());
			}
		}
		else if (_1aa029c82_is_use_decl(&_183417_node)) {
			_case_begin_1a7136a0c:;
			{
				_self_.get()._field_ast.get()._field_use_decls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_use_decls,1);_self_.get()._field_ast.get()._field_use_decls.__push(_183417_node._field_data.operator jule::Ptr<_1aa09ba29_UseDecl>());
			}
		}
		else if (_1dd5ead7a_is_decl(&_183417_node) || _1aa01dc98_is_impl(&_183417_node)) {
			_case_begin_1a7136a73:;
			{
				_self_.get()._field_ast.get()._field_nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_nodes,1);_self_.get()._field_ast.get()._field_nodes.__push(_183417_node);
			}
		}
		else {
			_case_begin_1a7136996:;
			{
				_1aa6129a7_push_err(_self_.ptr(), _183417_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a713617c:;
	}
}



inline void _1aa623611_remove_range(_1aa611b60_Parser* _self_,jule::I64 _185231_i,jule::Str _185239_kind,jule::Slice<_1aa07563a_Token>& _185251_tokens,jule::Slice<jule::I64>& _185273_ranges) {
	jule::Str _185313_close = _1aa61093e_get_close_kind_of_brace(_185239_kind);
	for (; (_185231_i >= 0LL); (_185231_i)--) {
		{
			_1aa07563a_Token _185517_tok = _185251_tokens[_185273_ranges[_185231_i]];
			if (_185517_tok._field_kind != _185313_close) {
				goto _iter_next_1a713b67c;
			}
			_185273_ranges=jule::append(_185273_ranges.slice(0LL,_185231_i),_185273_ranges.slice((_185231_i + 1LL)));
			goto _iter_end_1a713b67c;
		}
	_iter_next_1a713b67c:;
	}
	_iter_end_1a713b67c:;
}



inline void _1aa623b2d_push_wrong_order_close_err(_1aa611b60_Parser* _self_,_1aa07563a_Token& _186446_t,jule::Slice<_1aa07563a_Token>& _186457_tokens,jule::Slice<jule::I64>& _186475_ranges) {
	{
		auto &_match_expr{ _186457_tokens[_186475_ranges[_186475_ranges.len() - 1LL]]._field_kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a713e592:;
			{
				_1aa6129a7_push_err(&(*_self_), _186446_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a713e608:;
			{
				_1aa6129a7_push_err(&(*_self_), _186446_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a713e66e:;
			{
				_1aa6129a7_push_err(&(*_self_), _186446_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a713e509:;
	}
}



inline void _1aa6241c2_push_range_close(_1aa611b60_Parser* _self_,_1aa07563a_Token _187535_t,jule::Str _187545_left,jule::Slice<_1aa07563a_Token>& _187557_tokens,jule::Slice<jule::I64>& _187579_ranges) {
	jule::I64 _187613_n = _187579_ranges.len();
	if ((_187613_n == 0LL)) {
		{
			auto &_match_expr{ _187535_t._field_kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a7143123:;
				{
					_1aa6129a7_push_err(&(*_self_), _187535_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a7143189:;
				{
					_1aa6129a7_push_err(&(*_self_), _187535_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a7143200:;
				{
					_1aa6129a7_push_err(&(*_self_), _187535_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1a7143057:;
		}
		return;
	} else if (_187557_tokens[_187579_ranges[(_187613_n - 1LL)]]._field_kind != _187545_left) {
		_1aa623b2d_push_wrong_order_close_err(&(*_self_), _187535_t,_187557_tokens,_187579_ranges);
	}
	_1aa623611_remove_range(&(*_self_), static_cast<jule::I64>((_187613_n - 1LL)),_187535_t._field_kind,_187557_tokens,_187579_ranges);
}



inline void _1aa6244e1_check_ranges(_1aa611b60_Parser* _self_,jule::Slice<_1aa07563a_Token>& _189332_tokens) {
	jule::Slice<jule::I64> _189417_ranges = nullptr;
	{
		auto &expr = _189332_tokens;
		auto it = expr.begin();
		_iter_begin_1a7147501:;
		if (it != expr.end()) {
			jule::I64 _1a7147633_i = it - expr.begin();
			_1aa07563a_Token &_1a7147886_token = *it;
			{
				if (_1a7147886_token._field_id != static_cast<jule::U64>(3LLU)) {
					goto _iter_next_1a7147501;
				}
				{
					auto &_match_expr{ _1a7147886_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a71486cd:;
						{
							_189417_ranges = jule::alloc_for_append(_189417_ranges,1);_189417_ranges.__push(_1a7147633_i);
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a7148744:;
						{
							_1aa6241c2_push_range_close(&(*_self_), _1a7147886_token,jule::Str("(", 1),_189332_tokens,_189417_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a71487bb:;
						{
							_1aa6241c2_push_range_close(&(*_self_), _1a7147886_token,jule::Str("{", 1),_189332_tokens,_189417_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a7148832:;
						{
							_1aa6241c2_push_range_close(&(*_self_), _1a7147886_token,jule::Str("[", 1),_189332_tokens,_189417_ranges);
						}
					}
					_match_end_1a7148678:;
				}
			}
			_iter_next_1a7147501:;
			++it;
			_1a7147633_i++;
			goto _iter_begin_1a7147501;
		}
		_iter_end_1a7147501:;
	}
	{
		auto &expr = _189417_ranges;
		auto it = expr.begin();
		_iter_begin_1a71479da:;
		if (it != expr.end()) {
			jule::I64 _1a714a9cc_i = *it;
			{
				_1aa07563a_Token _191517_token = _189332_tokens[_1a714a9cc_i];
				{
					auto &_match_expr{ _191517_token._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a714b9cd:;
						{
							_1aa6129a7_push_err(&(*_self_), _191517_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a714ba44:;
						{
							_1aa6129a7_push_err(&(*_self_), _191517_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a714baaa:;
						{
							_1aa6129a7_push_err(&(*_self_), _191517_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1a714b945:;
				}
			}
			_iter_next_1a71479da:;
			++it;
			goto _iter_begin_1a71479da;
		}
		_iter_end_1a71479da:;
	}
}



inline void _1aa624810_parse(jule::Ptr<_1aa611b60_Parser> _self_,jule::Ptr<_1aa07b982_File>& _192730_f) {
	_self_.get()._field_ast=jule::new_ptr<_1dd582707_Ast>(_1dd582707_Ast(_192730_f,jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Slice<jule::Ptr<_1aa09ba29_UseDecl>>(),jule::Slice<_1dd582b25_Node>()));
	_1aa6244e1_check_ranges(_self_.ptr(), _192730_f.get()._field_tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _193717_stmts = _1aa5ddb92_split_stmts(_192730_f.get()._field_tokens);
	jule::I64 _194017_i = 0LL;
	_julec_label_iter:;
	for (; _194017_i < static_cast<jule::I64>(static_cast<jule::I64>(_193717_stmts.len())); (_194017_i)++) {
		{
			jule::Ptr<_1aa5dd587_Stmt> _194321_stmt = _193717_stmts[_194017_i];
			if ((_194321_stmt.get()._field_tokens.len() == 0LL)) {
				return;
			}
			jule::Any _194825_data;
			std::tie(std::ignore,_194825_data) = _1aa622896_build_general_scope_node_data(_self_, _194321_stmt.get()._field_tokens);
			if (_194825_data == jule::Any(jule::Any(nullptr))) {
				goto _iter_end_1a71509e3;
			}
			if (_1aa6124ce_stopped(_self_.ptr())) {
				return;
			}
			{
				auto &_match_expr{ _194825_data };
				
				if (_match_expr.type_is<jule::Ptr<_1dd583043_Directive>>()) {
					_case_begin_1a715309a:;
					{
						jule::Ptr<_1dd583043_Directive> _195925_d = _194825_data.operator jule::Ptr<_1dd583043_Directive>();
						if ((_195925_d != nullptr) && _1c48126d7_is_top_directive(_195925_d.get()._field_tag._field_kind)) {
							_self_.get()._field_ast.get()._field_top_directives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_top_directives,1);_self_.get()._field_ast.get()._field_top_directives.__push(_195925_d);
						} else {
							goto _iter_end_1a71509e3;
						}
					}
				}
				else {
					_case_begin_1a7152e24:;
					{
						goto _iter_end_1a71509e3;
					}
				}
				_match_end_1a7152d47:;
			}
		}
	_iter_next_1a71509e3:;
	}
	_iter_end_1a71509e3:;
	_self_.get()._field_errors=nullptr;
	for (; _194017_i < static_cast<jule::I64>(static_cast<jule::I64>(_193717_stmts.len())); (_194017_i)++) {
		{
			jule::Ptr<_1aa5dd587_Stmt> _197421_stmt = _193717_stmts[_194017_i];
			_1aa62305b_append_node(_self_, _197421_stmt.get()._field_tokens);
			if (_1aa6124ce_stopped(_self_.ptr())) {
				goto _iter_end_1a7150b8b;
			}
		}
	_iter_next_1a7150b8b:;
	}
	_iter_end_1a7150b8b:;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa611b60_Parser _Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1aa6270e8_push_err(_1aa626746_TypeBuilder* _self_,_1aa07563a_Token _7827_token,jule::Str _7841_fmt) {
	if ((*_self_)._field_err) {
		_1aa6129a7_push_err((*_self_)._field_p.ptr(), _7827_token,_7841_fmt,jule::Slice<jule::Any>());
	}
}



inline void _1aa6274e4_push_suggestion(_1aa626746_TypeBuilder* _self_,jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*_self_)._field_err) {
		_1aa612da3_push_suggestion((*_self_)._field_p.ptr(), _8534_fmt,_8547_args);
	}
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa6277be_build_prim(_1aa626746_TypeBuilder* _self_) {
	jule::Ptr<_1dd583461_TypeDecl> _9217_t = _1aa625c73_build_prim_type((*_self_)._field_tokens[(*((*_self_)._field_i))]);
	((*((*_self_)._field_i)))++;
	return _9217_t;
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa627a99_build_namespace(_1aa626746_TypeBuilder* _self_) {
	jule::Ptr<_1dd583461_TypeDecl> _9817_t = jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl((*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Any()));
	jule::Ptr<_1dd583c9c_NamespaceTypeDecl> _10217_nst = jule::new_ptr<_1dd583c9c_NamespaceTypeDecl>(_1dd583c9c_NamespaceTypeDecl());
	jule::I64 _10317_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_1aa07563a_Token _10521_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (((_10317_n & 1LL) == 0LL)) {
				if (_10521_token._field_id != static_cast<jule::U64>(2LLU)) {
					_1aa6270e8_push_err(&(*_self_), _10521_token,jule::Str("invalid syntax", 14));
					_1aa6274e4_push_suggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				}
				_10217_nst.get()._field_idents = jule::alloc_for_append(_10217_nst.get()._field_idents,1);_10217_nst.get()._field_idents.__push(_10521_token);
			} else if (_10521_token._field_id != static_cast<jule::U64>(23LLU)) {
				goto _iter_end_1a715b48d;
			}
			(_10317_n)++;
		}
	_iter_next_1a715b48d:;
	}
	_iter_end_1a715b48d:;
	_10217_nst.get()._field_idents=_10217_nst.get()._field_idents.slice(0LL,(_10217_nst.get()._field_idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_10217_nst.get()._field_kind=_1aa628429_build_ident(&(*_self_)).get()._field_kind.operator jule::Ptr<_1dd58387e_IdentTypeDecl>();
	_9817_t.get()._field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



inline jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _1aa627d74_build_generics(_1aa626746_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		return nullptr;
	}
	_1aa07563a_Token _13113_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_13113_token._field_id != static_cast<jule::U64>(3LLU)) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_1aa07563a_Token>> _13617_parts = _1aa62814e_ident_generics(&(*_self_));
	if ((_13617_parts.len() == 0LL)) {
		_1aa6270e8_push_err(&(*_self_), _13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1dd583461_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto &expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_1a7166861:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1a7166ca1_part = *it;
			{
				jule::I64 _14421_j = 0LL;
				jule::Ptr<_1dd583461_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = _1aa6148aa_build_type((*_self_)._field_p, _1a7166ca1_part,(&(_14421_j)),true);
				if (_14421_j < static_cast<jule::I64>(static_cast<jule::I64>(_1a7166ca1_part.len()))) {
					_1aa6270e8_push_err(&(*_self_), _1a7166ca1_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types = jule::alloc_for_append(_14217_types,1);_14217_types.__push(_14522_t);
			}
			_iter_next_1a7166861:;
			++it;
			goto _iter_begin_1a7166861;
		}
		_iter_end_1a7166861:;
	}
	return _14217_types;
}



inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1aa62814e_ident_generics(_1aa626746_TypeBuilder* _self_) {
	jule::I64 _15513_first = (*((*_self_)._field_i));
	jule::I64 _15617_range_n = 0LL;
	for (; (*((*_self_)._field_i)) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len())); ((*((*_self_)._field_i)))++) {
		{
			_1aa07563a_Token _15817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
			if (_15817_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _15817_token._field_kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a716a986:;
						{
							(_15617_range_n)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a716ad0a:;
						{
							(_15617_range_n)--;
						}
					}
					_match_end_1a716aca5:;
				}
			}
			if ((_15617_range_n == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1a716819d;
			}
		}
	_iter_next_1a716819d:;
	}
	_iter_end_1a716819d:;
	jule::Slice<_1aa07563a_Token> _17017_tokens = (*_self_)._field_tokens.slice((_15513_first + 1LL),((*((*_self_)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_1aa07563a_Token>> _17118_parts;
	jule::Slice<_1c4810251_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _1aa6105dc_parts(_17017_tokens,static_cast<jule::U64>(8LLU),true);
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_17125_errors);
	}
	return _17118_parts;
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa628429_build_ident(_1aa626746_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return _1aa627a99_build_namespace(&(*_self_));
	}
	_1aa07563a_Token _18217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1dd58387e_IdentTypeDecl> _18317_it = jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>()));
	((*((*_self_)._field_i)))++;
	_18317_it.get()._field_generics=_1aa627d74_build_generics(&(*_self_));
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_18217_token,jule::Any(jule::Any(_18317_it))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa628704_build_cpp_link(_1aa626746_TypeBuilder* _self_) {
	if ((((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)]._field_id != static_cast<jule::U64>(20LLU))) {
		_1aa6270e8_push_err(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1dd583461_TypeDecl> _20217_t = _1aa628429_build_ident(&(*_self_));
	_20217_t.get()._field_kind.operator jule::Ptr<_1dd58387e_IdentTypeDecl>().get()._field_cpp_linked=true;
	return _20217_t;
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa6289ce_build_fn(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _20817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	jule::Ptr<_1aa096b67_FnDecl> _20917_f = _1aa61998c_build_fn_prototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);
	if ((_20917_f == nullptr)) {
		return nullptr;
	}
	if ((!(_1dd5772ac_is_anon(_20917_f.ptr())))) {
		_1aa6270e8_push_err(&(*_self_), _20917_f.get()._field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_20817_token,jule::Any(jule::Any(_20917_f))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa628ca9_build_ptr(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _22317_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1aa6270e8_push_err(&(*_self_), _22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	if ((*_self_)._field_tokens[(*((*_self_)._field_i))]._field_id == static_cast<jule::U64>(35LLU)) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_1aa08c1ac_PtrTypeDecl>(_1aa08c1ac_PtrTypeDecl(nullptr))))));
	}
	jule::Ptr<_1dd583461_TypeDecl> _24017_elem = _1aa62a44d_step(&(*_self_));
	if ((_24017_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_22317_token,jule::Any(jule::Any(jule::new_ptr<_1aa08c1ac_PtrTypeDecl>(_1aa08c1ac_PtrTypeDecl(_24017_elem))))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa629084_build_sptr(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _25417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((*((*_self_)._field_i)) + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1aa6270e8_push_err(&(*_self_), _25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dd583461_TypeDecl> _26117_elem = _1aa62a44d_step(&(*_self_));
	if ((_26117_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_25417_token,jule::Any(jule::Any(jule::new_ptr<_1aa08b453_SptrTypeDecl>(_1aa08b453_SptrTypeDecl(_26117_elem))))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa62935e_build_op(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _27517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _27517_token._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a71843a6:;
			{
				return _1aa628ca9_build_ptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a7183ae2:;
			{
				return _1aa629084_build_sptr(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a7183b58:;
			{
				return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_1aa07563a_Token(),jule::Any(jule::Any(jule::new_ptr<_1aa08b453_SptrTypeDecl>(_1aa08b453_SptrTypeDecl(_1aa629084_build_sptr(&(*_self_))))))));
			}
		}
		else {
			_case_begin_1a71831a7:;
			{
				_1aa6270e8_push_err(&(*_self_), _27517_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a7183a6a:;
	}
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa629639_build_slc(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _29717_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1dd583461_TypeDecl> _29917_elem = _1aa62a44d_step(&(*_self_));
	if ((_29917_elem == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_29717_token,jule::Any(jule::Any(jule::new_ptr<_1aa08b871_SlcTypeDecl>(_1aa08b871_SlcTypeDecl(_29917_elem))))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa629914_build_arr(_1aa626746_TypeBuilder* _self_) {
	if ((*((*_self_)._field_i)) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) {
		_1aa6270e8_push_err(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;
	}
	jule::I64 _32013_expr_delta = (*((*_self_)._field_i));
	jule::Ptr<_1dd583461_TypeDecl> _32217_elem = _1aa62a44d_step(&(*_self_));
	if ((_32217_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1aa08c5ca_ArrTypeDecl> _32717_arrt = jule::new_ptr<_1aa08c5ca_ArrTypeDecl>(_1aa08c5ca_ArrTypeDecl(_32217_elem,jule::Ptr<_1aa08d334_Expr>()));
	jule::Slice<_1aa07563a_Token> _33117_expr_tokens = (*_self_)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _1aa6100d1_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,(_33117_expr_tokens.len() - 1LL));
	_1aa07563a_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == static_cast<jule::U64>(7LLU))) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt.get()._field_size=_1aa61325a_build_expr((*_self_)._field_p, _33117_expr_tokens);
	}
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_33417_token,jule::Any(jule::Any(_32717_arrt))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa629d98_build_map(_1aa626746_TypeBuilder* _self_,jule::I64 _34728_colon,jule::Slice<_1aa07563a_Token>& _34745_tokens) {
	_1aa07563a_Token _34817_colon_token = (*_self_)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_34745_tokens.len())))) {
		_1aa6270e8_push_err(&(*_self_), _34817_colon_token,jule::Str("type missing", 12));
		return nullptr;
	}
	jule::Slice<_1aa07563a_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_1aa07563a_Token> _35417_val_tokens = _34745_tokens.slice((_34728_colon + 1LL));
	jule::Ptr<_1aa08c9e8_MapTypeDecl> _35517_mapt = jule::new_ptr<_1aa08c9e8_MapTypeDecl>(_1aa08c9e8_MapTypeDecl());
	jule::I64 _35717_j = 0LL;
	jule::Ptr<_1dd583461_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = _1aa6148aa_build_type((*_self_)._field_p, _35317_key_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35317_key_tokens.len()))) {
		_1aa6270e8_push_err(&(*_self_), _35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_1dd583461_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = _1aa6148aa_build_type((*_self_)._field_p, _35417_val_tokens,(&(_35717_j)),(*_self_)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < static_cast<jule::I64>(static_cast<jule::I64>(_35417_val_tokens.len()))) {
		_1aa6270e8_push_err(&(*_self_), _35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt.get()._field_val=_36718_valt;
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_34817_colon_token,jule::Any(jule::Any(_35517_mapt))));
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa62a173_build_enumerable(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _38217_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((((*((*_self_)._field_i)) + 2LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_tokens.len()))) || (_38217_token._field_id != static_cast<jule::U64>(3LLU))) || (_38217_token._field_kind != jule::Str("[", 1))) {
		_1aa6270e8_push_err(&(*_self_), _38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*_self_)._field_i)))++;
	_38217_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if ((_38217_token._field_id == static_cast<jule::U64>(3LLU)) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return _1aa629639_build_slc(&(*_self_));
	}
	((*((*_self_)._field_i)))--;
	jule::Slice<_1aa07563a_Token> _39618_map_tokens;
	jule::I64 _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _1aa62615d_split_map_range((*_self_)._field_tokens,(*((*_self_)._field_i)));
	((*((*_self_)._field_i)))++;
	if ((_39630_colon == -1LL)) {
		return _1aa629914_build_arr(&(*_self_));
	}
	return _1aa629d98_build_map(&(*_self_), _39630_colon,_39618_map_tokens);
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa62a44d_step(_1aa626746_TypeBuilder* _self_) {
	_1aa07563a_Token _40513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];
	{
		auto &_match_expr{ _40513_token._field_id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a719db62:;
			{
				return _1aa6277be_build_prim(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a719dbc8:;
			{
				return _1aa628429_build_ident(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a719dc3e:;
			{
				return _1aa628704_build_cpp_link(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a719dca5:;
			{
				return _1aa6289ce_build_fn(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a719e932:;
			{
				return _1aa62935e_build_op(&(*_self_));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a719e998:;
			{
				return _1aa62a173_build_enumerable(&(*_self_));
			}
		}
		else {
			_case_begin_1a719bcb4:;
			{
				((*((*_self_)._field_i)))++;
				_1aa6270e8_push_err(&(*_self_), _40513_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
		_match_end_1a719dada:;
	}
}



inline std::tuple<jule::Ptr<_1dd583461_TypeDecl>,jule::Bool> _1aa62a728_build(_1aa626746_TypeBuilder* _self_) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_1dd583461_TypeDecl> _43517_root = _1aa62a44d_step(&(*_self_));
	if ((_43517_root == nullptr)) {
		_43444_ok = false;
		return std::make_tuple(_1aa625a20_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa626746_TypeBuilder _Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3a1bb7_FloatInfo _Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac3a20d5_DecimalSlice _Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac440926_LeftCheat _Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac43749a_set(_1ac4415e7_Decimal* _self_,jule::Str _23422_s) {
	jule::Bool _23432_ok = jule::Bool();
	jule::I64 _23517_i = 0LL;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	{
		
		if (_23422_s[_23517_i] == '+') {
			_case_begin_1a768b748:;
			{
				(_23517_i)++;
			}
		}
		else if (_23422_s[_23517_i] == '-') {
			_case_begin_1a768be30:;
			{
				(*_self_)._field_neg=true;
				(_23517_i)++;
			}
		}
		_match_end_1a768b98a:;
	}
	jule::Bool _25217_sawdot = false;
	jule::Bool _25317_sawdigits = false;
	for (; _23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len())); (_23517_i)++) {
		{
			{
				
				if (_23422_s[_23517_i] == '_') {
					_case_begin_1a768dd99:;
					{
						goto _iter_next_1a768b5d3;
					}
				}
				else if (_23422_s[_23517_i] == '.') {
					_case_begin_1a768de21:;
					{
						if (_25217_sawdot) {
							return _23432_ok;
						}
						_25217_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1a768b5d3;
					}
				}
				else if (('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) {
					_case_begin_1a768de98:;
					{
						_25317_sawdigits=true;
						if ((_23422_s[_23517_i] == '0') && ((*_self_)._field_nd == 0LL)) {
							((*_self_)._field_dp)--;
							goto _iter_next_1a768b5d3;
						}
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23422_s[_23517_i];
							((*_self_)._field_nd)++;
						} else if (_23422_s[_23517_i] != '0') {
							(*_self_)._field_trunc=true;
						}
						goto _iter_next_1a768b5d3;
					}
				}
				_match_end_1a768dc78:;
			}
			goto _iter_end_1a768b5d3;
		}
	_iter_next_1a768b5d3:;
	}
	_iter_end_1a768b5d3:;
	if ((!(_25317_sawdigits))) {
		return _23432_ok;
	}
	if ((!(_25217_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	}
	if ((_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && (_1abe0d68b_lower(_23422_s[_23517_i]) == 'e')) {
		(_23517_i)++;
		if (_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
			return _23432_ok;
		}
		jule::I64 _29821_esign = 1LL;
		if (_23422_s[_23517_i] == '+') {
			(_23517_i)++;
		} else if (_23422_s[_23517_i] == '-') {
			(_23517_i)++;
			_29821_esign=-1LL;
		}
		if (((_23517_i >= static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) || (_23422_s[_23517_i] < '0')) || (_23422_s[_23517_i] > '9')) {
			return _23432_ok;
		}
		jule::I64 _30821_e = 0LL;
		for (; (_23517_i < static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) && ((('0' <= _23422_s[_23517_i]) && (_23422_s[_23517_i] <= '9')) || (_23422_s[_23517_i] == '_')); (_23517_i)++) {
			{
				if (_23422_s[_23517_i] == '_') {
					goto _iter_next_1a76979a7;
				}
				if ((_30821_e < 10000LL)) {
					_30821_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_30821_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_23422_s[_23517_i]))))) - '0');
				}
			}
		_iter_next_1a76979a7:;
		}
		_iter_end_1a76979a7:;
		(*_self_)._field_dp+=static_cast<jule::I64>(_30821_e * _29821_esign);
	}
	if (_23517_i != static_cast<jule::I64>(static_cast<jule::I64>(_23422_s.len()))) {
		return _23432_ok;
	}
	_23432_ok=true;
	return _23432_ok;
}



inline std::tuple<jule::U64,jule::Bool> _1ac437852_float_bits(_1ac4415e7_Decimal* _self_,_1ac3a1bb7_FloatInfo& _32830_flt) {
	jule::U64 _32848_b = jule::U64();
	jule::Bool _32856_overflow = jule::Bool();
	jule::I64 _32917_exp = 0LL;
	jule::U64 _33017_mant = 0LLU;
	if (((*_self_)._field_nd == 0LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*_self_)._field_dp < -330LL)) {
		_33017_mant=0LLU;
		_32917_exp=_32830_flt._field_bias;
		goto _julec_label_out;
	}
	_32917_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35521_n = 0LL;
			if ((*_self_)._field_dp >= static_cast<jule::I64>(static_cast<jule::I64>(_1ac43709e_POWTAB.len()))) {
				_35521_n=27LL;
			} else {
				_35521_n=_1ac43709e_POWTAB[(*_self_)._field_dp];
			}
			_1ac4420ba_shift(&(*_self_), static_cast<jule::I64>((-(_35521_n))));
			_32917_exp+=_35521_n;
		}
	_iter_next_1a76a0e55:;
	}
	_iter_end_1a76a0e55:;
	while (((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5'))) {
		{
			jule::I64 _36521_n = 0LL;
			if ((-((*_self_)._field_dp)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1ac43709e_POWTAB.len()))) {
				_36521_n=27LL;
			} else {
				_36521_n=_1ac43709e_POWTAB[(-((*_self_)._field_dp))];
			}
			_1ac4420ba_shift(&(*_self_), _36521_n);
			_32917_exp-=_36521_n;
		}
	_iter_next_1a76a15e8:;
	}
	_iter_end_1a76a15e8:;
	(_32917_exp)--;
	if (_32917_exp < static_cast<jule::I64>(static_cast<jule::I64>((_32830_flt._field_bias + 1LL)))) {
		jule::I64 _38217_n = (_32830_flt._field_bias + 1LL) - _32917_exp;
		_1ac4420ba_shift(&(*_self_), static_cast<jule::I64>((-(_38217_n))));
		_32917_exp+=_38217_n;
	}
	if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
		goto _julec_label_overflow;
	}
	_1ac4420ba_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(1LL + _32830_flt._field_mantbits)));
	_33017_mant=static_cast<jule::U64>(_1ac442d02_rounded_integer(&(*_self_)));
	if (_33017_mant == static_cast<jule::U64>(static_cast<jule::U64>(2LLU << _32830_flt._field_mantbits))) {
		_33017_mant>>=1LLU;
		(_32917_exp)++;
		if ((_32917_exp - _32830_flt._field_bias) >= static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))) {
			goto _julec_label_overflow;
		}
	}
	if (((_33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)))) == 0LLU)) {
		_32917_exp=_32830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_33017_mant=0LLU;
	_32917_exp=static_cast<jule::I64>(static_cast<jule::I64>(((static_cast<jule::U64>(1LLU) << _32830_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_32830_flt._field_bias)))));
	_32856_overflow=true;
	_julec_label_out:;
	jule::U64 _41817_bits = _33017_mant & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) - 1LLU))));
	_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_32917_exp - _32830_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _32830_flt._field_expbits) - 1LL))))))) << _32830_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41817_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _32830_flt._field_mantbits)) << _32830_flt._field_expbits);
	}
	_32848_b = _41817_bits;
	return std::make_tuple(_32848_b,_32856_overflow);
}



inline void _1ac441c9b_assign(_1ac4415e7_Decimal* _self_,jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>();
	jule::I64 _15617_n = 0LL;
	while ((_15229_v > 0LLU)) {
		{
			jule::U64 _15817_v1 = (_15229_v / 10LLU);
			_15229_v-=static_cast<jule::U64>(10LLU * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(static_cast<jule::U8>(_15229_v + '0'));
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_1a76b297d:;
	}
	_iter_end_1a76b297d:;
	(*_self_)._field_nd=0LL;
	(_15617_n)--;
	for (; (_15617_n >= 0LL); (_15617_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_15317_buf[_15617_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1a76b4221:;
	}
	_iter_end_1a76b4221:;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1ac443484_trim((*_self_));
}



inline void _1ac4420ba_shift(_1ac4415e7_Decimal* _self_,jule::I64 _17728_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1a76b5c5b:;
		}
		else if ((_17728_k > 0LL)) {
			_case_begin_1a76b5cd3:;
			{
				while ((_17728_k > 60LL)) {
					{
						_1ac444144_left_shift((*_self_),60LLU);
						_17728_k-=60LL;
					}
				_iter_next_1a76b6553:;
				}
				_iter_end_1a76b6553:;
				_1ac444144_left_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_17728_k)));
			}
		}
		else if ((_17728_k < 0LL)) {
			_case_begin_1a76b5d5a:;
			{
				while ((_17728_k < -60LL)) {
					{
						_1ac4437d6_right_shift((*_self_),60LLU);
						_17728_k+=60LL;
					}
				_iter_next_1a76b6aa3:;
				}
				_iter_end_1a76b6aa3:;
				_1ac4437d6_right_shift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_17728_k)))));
			}
		}
		_match_end_1a76b5b5c:;
	}
}



inline void _1ac4423d9_round_down(_1ac4415e7_Decimal* _self_,jule::I64 _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*_self_)._field_nd)) {
		return;
	}
	(*_self_)._field_nd=_19729_nd;
	_1ac443484_trim((*_self_));
}



inline void _1ac442708_round_up(_1ac4415e7_Decimal* _self_,jule::I64 _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*_self_)._field_nd)) {
		return;
	}
	jule::I64 _21217_i = (_20627_nd - 1LL);
	for (; (_21217_i >= 0LL); (_21217_i)--) {
		{
			jule::U8 _21417_c = (*_self_)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*_self_)._field_d[_21217_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_21217_i + 1LL));
				return;
			}
		}
	_iter_next_1a76bb9cb:;
	}
	_iter_end_1a76bb9cb:;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1ac442a27_round(_1ac4415e7_Decimal* _self_,jule::I64 _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*_self_)._field_nd)) {
		return;
	}
	if (_1ac44452e_should_round_up((*_self_),_23324_nd)) {
		_1ac442708_round_up(&(*_self_), _23324_nd);
	} else {
		_1ac4423d9_round_down(&(*_self_), _23324_nd);
	}
}



inline jule::U64 _1ac442d02_rounded_integer(_1ac4415e7_Decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::I64 _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*_self_)._field_dp) && (_25017_i < (*_self_)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25117_n * 10LLU))) + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_d[_25017_i] - '0'))));
		}
	_iter_next_1a76be968:;
	}
	_iter_end_1a76be968:;
	for (; _25017_i < (*_self_)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LLU;
		}
	_iter_next_1a76c351b:;
	}
	_iter_end_1a76c351b:;
	if (_1ac44452e_should_round_up((*_self_),(*_self_)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4415e7_Decimal _Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d13e0_new_i64(jule::I64 _1327_x) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(_1327_x))));
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1555_new_u64(jule::U64 _1527_x) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(_1527_x))));
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d17a8_new_bool(jule::Bool _1728_x) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(_1728_x))));
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1ab6_new_str(jule::Str _1927_x) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(_1927_x))));
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d1dc4_new_f64(jule::F64 _2127_x) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(_2127_x))));
}



inline jule::Ptr<_1ac4d0ec2_Const> static__1ac4d2105_new_nil(void) {
	return jule::new_ptr<_1ac4d0ec2_Const>(_1ac4d0ec2_Const(jule::Any(jule::Any(nullptr))));
}



inline jule::I64 _1ac4d2765_read_i64(_1ac4d0ec2_Const* _self_) {
	if ((!(_1ac4d5317_is_i64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
}



inline jule::U64 _1ac4d2a40_read_u64(_1ac4d0ec2_Const* _self_) {
	if ((!(_1ac4d55e2_is_u64(&(*_self_))))) {
		return 0LLU;
	}
	return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
}



inline jule::Bool _1ac4d2d1a_read_bool(_1ac4d0ec2_Const* _self_) {
	if ((!(_1ac4d58bc_is_bool(&(*_self_))))) {
		return false;
	}
	return (*_self_)._field_data.operator jule::Bool();
}



inline jule::Str _1ac4d30e5_read_str(_1ac4d0ec2_Const* _self_) {
	if ((!(_1ac4d5b97_is_str(&(*_self_))))) {
		return jule::Str();
	}
	return (*_self_)._field_data.operator jule::Str();
}



inline jule::F64 _1ac4d33c0_read_f64(_1ac4d0ec2_Const* _self_) {
	if ((!(_1ac4d5e72_is_f64(&(*_self_))))) {
		return 0LL;
	}
	return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
}



inline jule::I64 _1ac4d369a_as_i64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a78a53e0:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.operator jule::I64());
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a78a5456:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a78a4d18:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a78a4c08:;
			{
				return 0LL;
			}
		}
		_match_end_1a78a49d8:;
	}
}



inline jule::U64 _1ac4d3975_as_u64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a78a7579:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.operator jule::U64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a78a75e0:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a78a6e91:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.operator jule::F64()));
			}
		}
		else {
			_case_begin_1a78a6de7:;
			{
				return 0LLU;
			}
		}
		_match_end_1a78a6d92:;
	}
}



inline jule::F64 _1ac4d3c50_as_f64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a78a9713:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.operator jule::F64());
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a78a9779:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::I64()));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a78a912a:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.operator jule::U64()));
			}
		}
		else {
			_case_begin_1a78a9081:;
			{
				return 0LL;
			}
		}
		_match_end_1a78a902b:;
	}
}



inline void _1ac4d406e_set_i64(_1ac4d0ec2_Const* _self_,jule::I64 _13030_x) {
	(*_self_)._field_data=jule::Any(_13030_x);
}



inline void _1ac4d438d_set_u64(_1ac4d0ec2_Const* _self_,jule::U64 _13230_x) {
	(*_self_)._field_data=jule::Any(_13230_x);
}



inline void _1ac4d46ac_set_bool(_1ac4d0ec2_Const* _self_,jule::Bool _13431_x) {
	(*_self_)._field_data=jule::Any(_13431_x);
}



inline void _1ac4d49cb_set_str(_1ac4d0ec2_Const* _self_,jule::Str _13630_x) {
	(*_self_)._field_data=jule::Any(_13630_x);
}



inline void _1ac4d4cea_set_f64(_1ac4d0ec2_Const* _self_,jule::F64 _13830_x) {
	(*_self_)._field_data=jule::Any(_13830_x);
}



inline void _1ac4d503c_set_nil(_1ac4d0ec2_Const* _self_) {
	(*_self_)._field_data=jule::Any(nullptr);
}



inline jule::Bool _1ac4d5317_is_i64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a78b0b6a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b054e:;
			{
				return false;
			}
		}
		_match_end_1a78b04e9:;
	}
}



inline jule::Bool _1ac4d55e2_is_u64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a78b16b5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b0dbd:;
			{
				return false;
			}
		}
		_match_end_1a78b1000:;
	}
}



inline jule::Bool _1ac4d58bc_is_bool(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a78b2210:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b1918:;
			{
				return false;
			}
		}
		_match_end_1a78b1a4a:;
	}
}



inline jule::Bool _1ac4d5b97_is_str(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a78b2c5a:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b2463:;
			{
				return false;
			}
		}
		_match_end_1a78b2595:;
	}
}



inline jule::Bool _1ac4d5e72_is_f64(_1ac4d0ec2_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a78b37a5:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b2ead:;
			{
				return false;
			}
		}
		_match_end_1a78b30e0:;
	}
}



inline jule::Bool _1ac4d624c_is_nil(_1ac4d0ec2_Const* _self_) {
	return (*_self_)._field_data == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1ac4d6604_are_same_types(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _19033_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_)) == _1ac4d5317_is_i64(&_19033_x)) {
			_case_begin_1a78b5499:;
			{
				return true;
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_)) == _1ac4d55e2_is_u64(&_19033_x)) {
			_case_begin_1a78b5554:;
			{
				return true;
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_)) == _1ac4d5e72_is_f64(&_19033_x)) {
			_case_begin_1a78b55cb:;
			{
				return true;
			}
		}
		else if (_1ac4d58bc_is_bool(&(*_self_)) == _1ac4d58bc_is_bool(&_19033_x)) {
			_case_begin_1a78b5279:;
			{
				return true;
			}
		}
		else if (_1ac4d5b97_is_str(&(*_self_)) == _1ac4d5b97_is_str(&_19033_x)) {
			_case_begin_1a78b52e0:;
			{
				return true;
			}
		}
		else if (_1ac4d624c_is_nil(&(*_self_)) == _1ac4d624c_is_nil(&_19033_x)) {
			_case_begin_1a78b5356:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a78b4d17:;
			{
				return false;
			}
		}
		_match_end_1a78b4c6d:;
	}
}



inline jule::Bool _1ac4d69ab_and(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _21522_x) {
	{
		
		if (_1ac4d58bc_is_bool(&(*_self_)) && _1ac4d58bc_is_bool(&_21522_x)) {
			_case_begin_1a78be3a4:;
			{
				return _1ac4d2d1a_read_bool(&(*_self_)) && _1ac4d2d1a_read_bool(&_21522_x);
			}
		}
		else {
			_case_begin_1a78b8e3c:;
			{
				return false;
			}
		}
		_match_end_1a78b8d93:;
	}
}



inline jule::Bool _1ac4d6d63_or(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _22621_x) {
	{
		
		if (_1ac4d58bc_is_bool(&(*_self_)) && _1ac4d58bc_is_bool(&_22621_x)) {
			_case_begin_1a78c1076:;
			{
				return _1ac4d2d1a_read_bool(&(*_self_)) || _1ac4d2d1a_read_bool(&_22621_x);
			}
		}
		else {
			_case_begin_1a78c0949:;
			{
				return false;
			}
		}
		_match_end_1a78c08a0:;
	}
}



inline jule::Bool _1ac4d721a_eq(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _23721_x) {
	{
		
		if (_1ac4d624c_is_nil(&(*_self_))) {
			_case_begin_1a78c2792:;
			{
				return _1ac4d624c_is_nil(&_23721_x);
			}
		}
		else if (_1ac4d58bc_is_bool(&(*_self_))) {
			_case_begin_1a78c284c:;
			{
				return _1ac4d58bc_is_bool(&_23721_x) && (_1ac4d2d1a_read_bool(&(*_self_)) == _1ac4d2d1a_read_bool(&_23721_x));
			}
		}
		else if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78c28b3:;
			{
				return _1ac4d5b97_is_str(&_23721_x) && (_1ac4d30e5_read_str(&(*_self_)) == _1ac4d30e5_read_str(&_23721_x));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78c2572:;
			{
				return _1ac4d2765_read_i64(&(*_self_)) == static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_23721_x)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78c25d8:;
			{
				return _1ac4d2a40_read_u64(&(*_self_)) == static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_23721_x)));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78c264e:;
			{
				return _1ac4d33c0_read_f64(&(*_self_)) == static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_23721_x)));
			}
		}
		else {
			_case_begin_1a78c164d:;
			{
				return false;
			}
		}
		_match_end_1a78c15c6:;
	}
}



inline jule::Bool _1ac4d75c2_lt(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _26421_x) {
	{
		
		if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78c7ca3:;
			{
				return _1ac4d5b97_is_str(&_26421_x) && (_1ac4d30e5_read_str(&(*_self_)) < _1ac4d30e5_read_str(&_26421_x));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78c7d80:;
			{
				return _1ac4d2765_read_i64(&(*_self_)) < static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_26421_x)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78c7de6:;
			{
				return _1ac4d2a40_read_u64(&(*_self_)) < static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_26421_x)));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78c7aa5:;
			{
				return _1ac4d33c0_read_f64(&(*_self_)) < static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_26421_x)));
			}
		}
		else {
			_case_begin_1a78c5300:;
			{
				return false;
			}
		}
		_match_end_1a78c6c3b:;
	}
}



inline jule::Bool _1ac4d7979_lt_eq(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _28724_x) {
	{
		
		if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78cb8bc:;
			{
				return _1ac4d5b97_is_str(&_28724_x) && (_1ac4d30e5_read_str(&(*_self_)) <= _1ac4d30e5_read_str(&_28724_x));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78cb999:;
			{
				return _1ac4d2765_read_i64(&(*_self_)) <= static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_28724_x)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78cba10:;
			{
				return _1ac4d2a40_read_u64(&(*_self_)) <= static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_28724_x)));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78cb6be:;
			{
				return _1ac4d33c0_read_f64(&(*_self_)) <= static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_28724_x)));
			}
		}
		else {
			_case_begin_1a78c80d3:;
			{
				return false;
			}
		}
		_match_end_1a78b3e37:;
	}
}



inline jule::Bool _1ac4d7d31_gt(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _31021_x) {
	{
		
		if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78d06d4:;
			{
				return _1ac4d5b97_is_str(&_31021_x) && (_1ac4d30e5_read_str(&(*_self_)) > _1ac4d30e5_read_str(&_31021_x));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78d07b1:;
			{
				return _1ac4d2765_read_i64(&(*_self_)) > static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_31021_x)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78d0827:;
			{
				return _1ac4d2a40_read_u64(&(*_self_)) > static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_31021_x)));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78d04d6:;
			{
				return _1ac4d33c0_read_f64(&(*_self_)) > static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_31021_x)));
			}
		}
		else {
			_case_begin_1a78cbbec:;
			{
				return false;
			}
		}
		_match_end_1a78cdabc:;
	}
}



inline jule::Bool _1ac4d81d8_gt_eq(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _33324_x) {
	{
		
		if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78d42ed:;
			{
				return _1ac4d5b97_is_str(&_33324_x) && (_1ac4d30e5_read_str(&(*_self_)) >= _1ac4d30e5_read_str(&_33324_x));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78d43ca:;
			{
				return _1ac4d2765_read_i64(&(*_self_)) >= static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_33324_x)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78d4441:;
			{
				return _1ac4d2a40_read_u64(&(*_self_)) >= static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_33324_x)));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78d4100:;
			{
				return _1ac4d33c0_read_f64(&(*_self_)) >= static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_33324_x)));
			}
		}
		else {
			_case_begin_1a78d0a14:;
			{
				return false;
			}
		}
		_match_end_1a78ca976:;
	}
}



inline jule::Bool _1ac4d8590_add(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _35426_x) {
	{
		
		if (_1ac4d5b97_is_str(&(*_self_))) {
			_case_begin_1a78d8159:;
			{
				if ((!(_1ac4d5b97_is_str(&_35426_x)))) {
					return false;
				}
				_1ac4d49cb_set_str(&(*_self_), _1ac4d30e5_read_str(&(*_self_)) + _1ac4d30e5_read_str(&_35426_x));
			}
		}
		else if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78d8236:;
			{
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_35426_x)))));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78d829c:;
			{
				if (_1ac4d5e72_is_f64(&_35426_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_35426_x)))));
				} else {
					_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) + static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_35426_x)))));
				}
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78d7e5b:;
			{
				if (_1ac4d5e72_is_f64(&_35426_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) + static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_35426_x)))));
				} else {
					_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) + static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_35426_x)))));
				}
			}
		}
		else {
			_case_begin_1a78d717a:;
			{
				return false;
			}
		}
		_match_end_1a78d7620:;
	}
	return true;
}



inline jule::Bool _1ac4d8947_sub(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _38326_x) {
	{
		
		if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78e0a8a:;
			{
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_38326_x)))));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78e0b78:;
			{
				if (_1ac4d5e72_is_f64(&_38326_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_38326_x)))));
				} else {
					_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) - static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_38326_x)))));
				}
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78e0bde:;
			{
				if (_1ac4d5e72_is_f64(&_38326_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) - static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_38326_x)))));
				} else {
					_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) - static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_38326_x)))));
				}
			}
		}
		else {
			_case_begin_1a78e045d:;
			{
				return false;
			}
		}
		_match_end_1a78de506:;
	}
	return true;
}



inline jule::Bool _1ac4d8cee_mul(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _40726_x) {
	{
		
		if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78e72ab:;
			{
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&_40726_x)))));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78e7399:;
			{
				if (_1ac4d5e72_is_f64(&_40726_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_40726_x)))));
				} else {
					_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) * static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_40726_x)))));
				}
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78e7410:;
			{
				if (_1ac4d5e72_is_f64(&_40726_x)) {
					_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))) * static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&_40726_x)))));
				} else {
					_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) * static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_40726_x)))));
				}
			}
		}
		else {
			_case_begin_1a78e6b7e:;
			{
				return false;
			}
		}
		_match_end_1a78e5b6c:;
	}
	return true;
}



inline jule::Bool _1ac4d91a6_div(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _43526_x) {
	{
		
		if (_1ac4d5e72_is_f64(&(*_self_))) {
			_case_begin_1a78ed746:;
			{
				jule::F64 _43817_l = _1ac4d3c50_as_f64(&_43526_x);
				if ((_43817_l == 0LL)) {
					return false;
				}
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64(&(*_self_)))),_43817_l)));
			}
		}
		else if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a78ed834:;
			{
				jule::F64 _44417_l = _1ac4d3c50_as_f64(&_43526_x);
				if ((_44417_l == 0LL)) {
					return false;
				}
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))),_44417_l)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a78ed89a:;
			{
				jule::F64 _45017_l = _1ac4d3c50_as_f64(&_43526_x);
				if ((_45017_l == 0LL)) {
					return false;
				}
				_1ac4d4cea_set_f64(&(*_self_), static_cast<jule::F64>(jule::div(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d3c50_as_f64(&(*_self_)))),_45017_l)));
			}
		}
		else {
			_case_begin_1a78ed119:;
			{
				return false;
			}
		}
		_match_end_1a78ec1d4:;
	}
	return true;
}



inline jule::Bool _1ac4d955d_mod(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _46426_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a790395a:;
			{
				jule::I64 _46717_l = _1ac4d369a_as_i64(&_46426_x);
				if ((_46717_l == 0LL)) {
					return false;
				}
				_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(jule::mod(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))),_46717_l)));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a7903a59:;
			{
				jule::U64 _47317_l = _1ac4d3975_as_u64(&_46426_x);
				if ((_47317_l == 0LLU)) {
					return false;
				}
				_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(jule::mod(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))),_47317_l)));
			}
		}
		else {
			_case_begin_1a790331c:;
			{
				return false;
			}
		}
		_match_end_1a7903273:;
	}
	return true;
}



inline jule::Bool _1ac4d9915_bitwise_and(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _48634_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a7907871:;
			{
				_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) & static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_48634_x)))));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a7907970:;
			{
				_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) & static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_48634_x)))));
			}
		}
		else {
			_case_begin_1a7907233:;
			{
				return false;
			}
		}
		_match_end_1a7907189:;
	}
	return true;
}



inline jule::Bool _1ac4d9cbc_bitwise_or(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _50033_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a790aab6:;
			{
				_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) | static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_50033_x)))));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a790abb5:;
			{
				_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) | static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_50033_x)))));
			}
		}
		else {
			_case_begin_1a790a478:;
			{
				return false;
			}
		}
		_match_end_1a790a3ce:;
	}
	return true;
}



inline jule::Bool _1ac4da174_xor(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _51426_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a790dd0b:;
			{
				_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64(&(*_self_)))) ^ static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(&_51426_x)))));
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a790de0a:;
			{
				_1ac4d438d_set_u64(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64(&(*_self_)))) ^ static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d3975_as_u64(&_51426_x)))));
			}
		}
		else {
			_case_begin_1a790d6bd:;
			{
				return false;
			}
		}
		_match_end_1a790d624:;
	}
	return true;
}



inline jule::Bool _1ac4da52b_lshift(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _52829_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a79123b4:;
			{
				jule::I64 _53117_l = _1ac4d369a_as_i64(&(*_self_));
				if ((_53117_l < 0LL)) {
					jule::U64 _53321_r = _1ac4d3975_as_u64(&_52829_x);
					_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(_53117_l << _53321_r));
				} else {
					_1ac4dace0_lshift_unsig((*_self_),_52829_x);
				}
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a79124b3:;
			{
				_1ac4dace0_lshift_unsig((*_self_),_52829_x);
			}
		}
		else {
			_case_begin_1a7911c76:;
			{
				return false;
			}
		}
		_match_end_1a7911bcc:;
	}
	return true;
}



inline jule::Bool _1ac4da8d3_rshift(_1ac4d0ec2_Const* _self_,_1ac4d0ec2_Const _54829_x) {
	{
		
		if (_1ac4d5317_is_i64(&(*_self_))) {
			_case_begin_1a7915818:;
			{
				jule::I64 _55117_l = _1ac4d369a_as_i64(&(*_self_));
				if ((_55117_l < 0LL)) {
					jule::U64 _55321_r = _1ac4d3975_as_u64(&_54829_x);
					_1ac4d406e_set_i64(&(*_self_), static_cast<jule::I64>(_55117_l >> _55321_r));
				} else {
					_1ac4db186_rshift_unsig((*_self_),_54829_x);
				}
			}
		}
		else if (_1ac4d55e2_is_u64(&(*_self_))) {
			_case_begin_1a7915917:;
			{
				_1ac4db186_rshift_unsig((*_self_),_54829_x);
			}
		}
		else {
			_case_begin_1a79151ca:;
			{
				return false;
			}
		}
		_match_end_1a7915131:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac4d0ec2_Const _Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5992699_FileStream> static__1a5992ab7_new(jule::Ptr<_1dc37a105_File> _1527_f) {
	return jule::new_ptr<_1a5992699_FileStream>(_1a5992699_FileStream(_1527_f));
}



inline jule::Exceptional<jule::I64> _1a5992d2b_read(_1a5992699_FileStream* _self_,jule::Slice<jule::U8> _2831_buff) {
	jule::I64 _2848_n = jule::I64();
	_2848_n = static_cast<jule::I64>(({
		auto except = _1dc308825_read((*_self_)._field_buff.ptr(), _2831_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_2848_n);
}



inline jule::Exceptional<jule::I64> _1a5993128_write(_1a5992699_FileStream* _self_,jule::Slice<jule::U8> _3428_buff) {
	jule::I64 _3445_n = jule::I64();
	_3445_n = static_cast<jule::I64>(({
		auto except = _1dc306092_write((*_self_)._field_buff.ptr(), _3428_buff);
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::I64>(except.error);
			return jule::Exceptional<jule::I64>(except.error);
		} jule::I64();});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(),_3445_n);
}



inline jule::Exceptional<jule::Slice<jule::U8>> _1a59934e1_read_line(_1a5992699_FileStream* _self_) {
	
	jule::Slice<jule::U8> _4617_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _4717_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _4917_n = ({
				auto except = _1dc308825_read((*_self_)._field_buff.ptr(), _4717_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
					return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
				} jule::I64();});
			});
			if ((_4917_n == 0LL)) {
				goto _iter_end_1a798c9e4;
			}
			jule::U8 _5417_b = _4717_part[0LL];
			_4617_buff = jule::alloc_for_append(_4617_buff,1);_4617_buff.__push(_5417_b);
			if ((_5417_b == 10LLU)) {
				goto _iter_end_1a798c9e4;
			}
		}
	_iter_next_1a798c9e4:;
	}
	_iter_end_1a798c9e4:;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(),_4617_buff);
}







std::ostream &operator<<(std::ostream &_Stream, _1a5992699_FileStream _Src) {
	_Stream << "FileStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::I64> _1a5996219_read(_1a59957ce_ByteStream* _self_,jule::Slice<jule::U8> _2131_buff) {
	jule::I64 _2148_n = jule::I64();
	if ((!(_1a5996bdc_data(&(*_self_))))) {
		_2148_n = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(),_2148_n);
	}
	_2148_n=static_cast<jule::I64>(copy(_2131_buff,(*_self_)._field_buff));
	(*_self_)._field_buff=(*_self_)._field_buff.slice(_2148_n);
	return jule::Exceptional<jule::I64>(jule::Any(), _2148_n);
}



inline jule::Exceptional<jule::I64> _1a59965c1_write(_1a59957ce_ByteStream* _self_,jule::Slice<jule::U8> _3228_buff) {
	jule::I64 _3245_n = jule::I64();
	_3245_n=static_cast<jule::I64>(_3228_buff.len());
	(*_self_)._field_buff=jule::append((*_self_)._field_buff,_3228_buff);
	return jule::Exceptional<jule::I64>(jule::Any(), _3245_n);
}



inline jule::Ptr<_1a59957ce_ByteStream> static__1a5996912_new(void) {
	return jule::new_ptr<_1a59957ce_ByteStream>();
}



inline jule::Bool _1a5996bdc_data(_1a59957ce_ByteStream* _self_) {
	return ((*_self_)._field_buff.len() != 0LL);
}



inline void _1a5996e2e_fit(_1a59957ce_ByteStream* _self_) {
	if ((!(_1a5996bdc_data(&(*_self_))))) {
		(*_self_)._field_buff=nullptr;
		return;
	}
	jule::Slice<jule::U8> _5717_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*_self_)._field_buff.len()));
	copy(_5717_buff,(*_self_)._field_buff);
	(*_self_)._field_buff=_5717_buff;
}







std::ostream &operator<<(std::ostream &_Stream, _1a59957ce_ByteStream _Src) {
	_Stream << "ByteStream{";
	_Stream << "buff:" << _Src._field_buff;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5998590_Scanner> static__1a5998c33_new(jule::Trait<_1a5993d1b_Reader> _1627_r) {
	return jule::new_ptr<_1a5998590_Scanner>(_1a5998590_Scanner(_1627_r,jule::Slice<jule::U8>()));
}



inline jule::Ptr<_1a5998590_Scanner> static__1a5999041_newf(jule::Ptr<_1dc37a105_File> _2428_f) {
	return jule::new_ptr<_1a5998590_Scanner>(_1a5998590_Scanner(jule::Trait<_1a5993d1b_Reader>(static__1a5992ab7_new(_2428_f), 0),jule::Slice<jule::U8>()));
}



inline void _1a59993a4_reset(_1a5998590_Scanner* _self_) {
	(*_self_)._field_b=nullptr;
}



inline jule::Slice<jule::U8> _1a599967e_bytes(_1a5998590_Scanner* _self_) {
	return (*_self_)._field_b;
}



inline jule::Str _1a5999959_text(_1a5998590_Scanner* _self_) {
	return static_cast<jule::Str>((*_self_)._field_b);
}



inline jule::Exceptional<jule::Bool> _1a5999c34_scan(_1a5998590_Scanner* _self_) {
	
	_1a59993a4_reset(&(*_self_));
	jule::Slice<jule::U8> _5117_buff = jule::Slice<jule::U8>::alloc(0LL,1024LL);
	jule::Slice<jule::U8> _5217_part = jule::Slice<jule::U8>::alloc(1LL);
	for (;;) {
		{
			jule::I64 _5417_n = ({
				auto except = _1a5993d1b_Reader_mptr_data[((*_self_)._field_r).type_offset]._1a5993b95_read((*_self_)._field_r, _5217_part);
				(except.ok()) ? (except.result) : ({{
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
					return jule::Exceptional<jule::Bool>(jule::Any(),false);
				} jule::I64();});
			});
			if ((_5417_n == 0LL)) {
				goto _iter_end_1a799b74a;
			}
			jule::U8 _6117_b = _5217_part[0LL];
			if ((_6117_b == 10LLU)) {
				goto _iter_end_1a799b74a;
			}
			_5117_buff = jule::alloc_for_append(_5117_buff,1);_5117_buff.__push(_6117_b);
		}
	_iter_next_1a799b74a:;
	}
	_iter_end_1a799b74a:;
	(*_self_)._field_b=_5117_buff;
	return jule::Exceptional<jule::Bool>(jule::Any(),(_5217_part[0LL] != 0LLU));
}







std::ostream &operator<<(std::ostream &_Stream, _1a5998590_Scanner _Src) {
	_Stream << "Scanner{";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "b:" << _Src._field_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab80e8b7_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "eq:" << _Src._field_eq << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "gt_eq:" << _Src._field_gt_eq << ", ";
	_Stream << "lt:" << _Src._field_lt << ", ";
	_Stream << "lt_eq:" << _Src._field_lt_eq << ", ";
	_Stream << "shl:" << _Src._field_shl << ", ";
	_Stream << "shr:" << _Src._field_shr << ", ";
	_Stream << "add:" << _Src._field_add << ", ";
	_Stream << "sub:" << _Src._field_sub << ", ";
	_Stream << "div:" << _Src._field_div << ", ";
	_Stream << "mul:" << _Src._field_mul << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "bit_and:" << _Src._field_bit_and << ", ";
	_Stream << "bit_or:" << _Src._field_bit_or << ", ";
	_Stream << "bit_xor:" << _Src._field_bit_xor << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "bit_not:" << _Src._field_bit_not << ", ";
	_Stream << "add_assign:" << _Src._field_add_assign << ", ";
	_Stream << "sub_assign:" << _Src._field_sub_assign << ", ";
	_Stream << "div_assign:" << _Src._field_div_assign << ", ";
	_Stream << "mul_assign:" << _Src._field_mul_assign << ", ";
	_Stream << "mod_assign:" << _Src._field_mod_assign << ", ";
	_Stream << "shl_assign:" << _Src._field_shl_assign << ", ";
	_Stream << "shr_assign:" << _Src._field_shr_assign << ", ";
	_Stream << "bit_or_assign:" << _Src._field_bit_or_assign << ", ";
	_Stream << "bit_and_assign:" << _Src._field_bit_and_assign << ", ";
	_Stream << "bit_xor_assign:" << _Src._field_bit_xor_assign;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab8137bc_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab816825_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab817da9_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab818508_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab818ae1_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81a74c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81b5e9_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81bc48_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81c496_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81ea09_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab820136_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab820686_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab821599_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab821c81_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab822446_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "debug:" << _Src._field_debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab822a0c_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab8231c2_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82976c_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab829e32_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82a5e7_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82ab25_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82b4c7_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82b98e_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82c000_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82c72b_TernaryExprModel _Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82cd7a_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "code:" << _Src._field_code << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82d3ca_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82e7a5_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab835503_to_str(_1ab834db5_ParamIns* _self_) {
	jule::Str _19217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*_self_)._field_decl.get()._field_reference) {
		_19217_s+=jule::Str("&_:", 3);
	}
	if (_1ab830c07_is_self((*_self_)._field_decl.ptr())) {
		if (_1ab830ed2_is_ref((*_self_)._field_decl.ptr())) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*_self_)._field_decl.get()._field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (((*_self_)._field_kind != nullptr)) {
		_19217_s+=_1a59145b6_to_str((*_self_)._field_kind.ptr());
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab834db5_ParamIns _Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab8367e0_to_str(_1ab836218_FnIns* _self_) {
	
	return _1ab837acc_get_kind_str(&(*_self_), false);
}



inline jule::Bool _1ab836b97_equals(jule::Ptr<_1ab836218_FnIns> _self_,jule::Ptr<_1a5913e9a_TypeKind> _24326_other) {
	jule::Ptr<_1ab836218_FnIns> _24413_f = _1a591794e_fnc(_24326_other.ptr());
	if ((_24413_f == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_exceptional != _24413_f.get()._field_decl.get()._field_exceptional) {
		return false;
	}
	if (_self_.get()._field_decl.get()._field_unsafety != _24413_f.get()._field_decl.get()._field_unsafety) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_24413_f.get()._field_generics.len()))) {
		return false;
	}
	if (_1ab8329d9_is_void(_self_.get()._field_decl.ptr()) != _1ab8329d9_is_void(_24413_f.get()._field_decl.ptr())) {
		return false;
	}
	jule::I64 _26517_i = 0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_26517_i)++) {
		{
			if ((!(_1a591496d_equals(_self_.get()._field_generics[_26517_i], _24413_f.get()._field_generics[_26517_i])))) {
				return false;
			}
		}
	_iter_next_1a7b209ac:;
	}
	_iter_end_1a7b209ac:;
	jule::Fn<jule::Bool(jule::Ptr<_1ab834db5_ParamIns>,jule::Ptr<_1ab834db5_ParamIns>)> _27213_check_params = jule::Fn<jule::Bool(jule::Ptr<_1ab834db5_ParamIns>,jule::Ptr<_1ab834db5_ParamIns>)>([=](jule::Ptr<_1ab834db5_ParamIns> _27231_p1,jule::Ptr<_1ab834db5_ParamIns> _27246_p2) mutable -> jule::Bool {
		if (_27231_p1.get()._field_decl.get()._field_mutable != _27246_p2.get()._field_decl.get()._field_mutable) {
			return false;
		}
		if (_1ab830c07_is_self(_27231_p1.get()._field_decl.ptr())) {
			if ((!(_1ab830c07_is_self(_27246_p2.get()._field_decl.ptr())))) {
				return false;
			}
			if (_1ab830ed2_is_ref(_27231_p1.get()._field_decl.ptr()) != _1ab830ed2_is_ref(_27246_p2.get()._field_decl.ptr())) {
				return false;
			}
			return true;
		}
		if (_27231_p1.get()._field_decl.get()._field_reference != _27246_p2.get()._field_decl.get()._field_reference) {
			return false;
		}
		if (_27231_p1.get()._field_decl.get()._field_variadic != _27246_p2.get()._field_decl.get()._field_variadic) {
			return false;
		}
		return _1a591496d_equals(_27231_p1.get()._field_kind, _27246_p2.get()._field_kind);
	});
	if (_24413_f.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len()))) {
		return false;
	}
	_26517_i=0LL;
	for (; _26517_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_params.len())); (_26517_i)++) {
		{
			if ((!(_27213_check_params(_self_.get()._field_params[_26517_i],_24413_f.get()._field_params[_26517_i])))) {
				return false;
			}
		}
	_iter_next_1a7b299d8:;
	}
	_iter_end_1a7b299d8:;
	if ((!(_1ab8329d9_is_void(_self_.get()._field_decl.ptr())))) {
		if ((!(_1a591496d_equals(_self_.get()._field_result, _24413_f.get()._field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _1ab837093_is_builtin(_1ab836218_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);
}



inline jule::Bool _1ab83736d_is_anon(_1ab836218_FnIns* _self_) {
	return (*_self_)._field_anon || (((*_self_)._field_decl != nullptr) && _1ab833644_is_anon((*_self_)._field_decl.ptr()));
}



inline jule::Bool _1ab837725_same(_1ab836218_FnIns* _self_,jule::Ptr<_1ab836218_FnIns> _33523_f) {
	if (((*_self_)._field_decl != _33523_f.get()._field_decl) || (_33523_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a7b2e2e5:;
		if (it != expr.end()) {
			jule::I64 _1a7b30516_i = it - expr.begin();
			jule::Ptr<_1a5913e9a_TypeKind> &_1a7b3069d_g = *it;
			{
				if ((!(_1a591496d_equals(_1a7b3069d_g, _33523_f.get()._field_generics[_1a7b30516_i])))) {
					return false;
				}
			}
			_iter_next_1a7b2e2e5:;
			++it;
			_1a7b30516_i++;
			goto _iter_begin_1a7b2e2e5;
		}
		_iter_end_1a7b2e2e5:;
	}
	return true;
}



inline jule::Str _1ab837acc_get_kind_str(_1ab836218_FnIns* _self_,jule::Bool _35131_ident) {
	jule::Str _35217_s = jule::Str();
	if ((*_self_)._field_decl.get()._field_unsafety) {
		_35217_s+=jule::Str("unsafe ", 7);
	}
	_35217_s+=jule::Str("fn", 2);
	if (_35131_ident && ((*_self_)._field_decl != nullptr)) {
		_35217_s+=jule::Str(" ", 1) + (*_self_)._field_decl.get()._field_ident;
	}
	if (((*_self_)._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a7b33717:;
			if (it != expr.end()) {
				jule::I64 _1a7b33c34_i = it - expr.begin();
				jule::Ptr<_1a5913e9a_TypeKind> &_1a7b33d88_t = *it;
				{
					_35217_s+=_1a59145b6_to_str(_1a7b33d88_t.ptr());
					if ((_1a7b33c34_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a7b33717:;
				++it;
				_1a7b33c34_i++;
				goto _iter_begin_1a7b33717;
			}
			_iter_end_1a7b33717:;
		}
		_35217_s+=jule::Str("]", 1);
	} else if (((*_self_)._field_decl.get()._field_generics.len() > 0LL)) {
		_35217_s+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_decl.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a7b35ab0:;
			if (it != expr.end()) {
				jule::I64 _1a7b35d24_i = it - expr.begin();
				jule::Ptr<_1aa094868_GenericDecl> &_1a7b36066_g = *it;
				{
					_35217_s+=_1a7b36066_g.get()._field_ident;
					if ((_1a7b35d24_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_decl.get()._field_generics.len()))) {
						_35217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_1a7b35ab0:;
				++it;
				_1a7b35d24_i++;
				goto _iter_begin_1a7b35ab0;
			}
			_iter_end_1a7b35ab0:;
		}
		_35217_s+=jule::Str("]", 1);
	}
	_35217_s+=jule::Str("(", 1);
	jule::I64 _38513_n = (*_self_)._field_params.len();
	if ((_38513_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_params;
			auto it = expr.begin();
			_iter_begin_1a7b38552:;
			if (it != expr.end()) {
				jule::Ptr<_1ab834db5_ParamIns> &_1a7b3861d_p = *it;
				{
					_35217_s+=_1ab835503_to_str(_1a7b3861d_p.ptr());
					_35217_s+=jule::Str(",", 1);
				}
				_iter_next_1a7b38552:;
				++it;
				goto _iter_begin_1a7b38552;
			}
			_iter_end_1a7b38552:;
		}
		(_35217_s).mut_slice(0LL,_35217_s.len() - 1LL);
	}
	_35217_s+=jule::Str(")", 1);
	if ((*_self_)._field_decl.get()._field_exceptional) {
		_35217_s+=jule::Str("!", 1);
	}
	if ((!(_1ab8329d9_is_void((*_self_)._field_decl.ptr())))) {
		_35217_s+=jule::Str(":", 1);
		_35217_s+=_1a59145b6_to_str((*_self_)._field_result.ptr());
	}
	return _35217_s;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab836218_FnIns _Src) {
	_Stream << _1ab8367e0_to_str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ab839d43_ReferenceStack> static__1ab83a294_new(void) {
	return jule::new_ptr<_1ab839d43_ReferenceStack>();
}



inline jule::I64 _1ab83a690_len(_1ab839d43_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());
}



inline jule::Any _1ab83aa47_at(_1ab839d43_ReferenceStack* _self_,jule::I64 _5825_i) {
	return (*_self_)._field_buffer[_5825_i];
}



inline void _1ab83ad66_push(_1ab839d43_ReferenceStack* _self_,jule::Any _6331_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_6331_ref);
}



inline jule::Bool _1ab83b21d_exist_0(_1ab839d43_ReferenceStack* _self_,jule::Ptr<_1a588601b_Var> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a8261608:;
		if (it != expr.end()) {
			jule::Any &_1a82617e5_ref = *it;
			{
				if (_1a82617e5_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1a8261608:;
			++it;
			goto _iter_begin_1a8261608;
		}
		_iter_end_1a8261608:;
	}
	return false;
}

inline jule::Bool _1ab83b21d_exist_1(_1ab839d43_ReferenceStack* _self_,jule::Ptr<_1ab836218_FnIns> _6827_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1a8264683:;
		if (it != expr.end()) {
			jule::Any &_1a8264870_ref = *it;
			{
				if (_1a8264870_ref == jule::Any(jule::Any(_6827_t))) {
					return true;
				}
			}
			_iter_next_1a8264683:;
			++it;
			goto _iter_begin_1a8264683;
		}
		_iter_end_1a8264683:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab839d43_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab840d16_SymbolBuilder> _1ab841641_get_root(jule::Ptr<_1ab840d16_SymbolBuilder> _self_) {
	jule::Ptr<_1ab840d16_SymbolBuilder> _28117_root = _self_;
	while ((_28117_root.get()._field_owner != nullptr)) {
		{
			_28117_root=_28117_root.get()._field_owner;
		}
	_iter_next_1a7b3daeb:;
	}
	_iter_end_1a7b3daeb:;
	return _28117_root;
}



inline void _1ab841b19_push_err(_1ab840d16_SymbolBuilder* _self_,_1aa07563a_Token& _28828_token,jule::Str _28842_fmt,jule::Slice<jule::Any> _28855_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac588b07_compiler_err(_28828_token,true,_28842_fmt,_28855_args));
}



inline void _1ab8420e2_push_err_text(_1ab840d16_SymbolBuilder* _self_,_1aa07563a_Token& _29233_token,jule::Str _29247_fmt,jule::Slice<jule::Any> _29260_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac588b07_compiler_err(_29233_token,false,_29247_fmt,_29260_args));
}



inline void _1ab8424dd_push_suggestion(_1ab840d16_SymbolBuilder* _self_,jule::Str _29734_fmt,jule::Slice<jule::Any> _29747_args) {
	{
		_1a58641a3_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_29734_fmt,_29747_args);
	}
}



inline jule::Bool _1ab8428a6_check_cpp_use_decl_path(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _30143_decl) {
	jule::Bool _30161_ok = jule::Bool();
	if (_1c47ee0a8_is_std_header_path(_30143_decl.get()._field_link_path)) {
		_30161_ok = true;
		return _30161_ok;
	}
	jule::Str _30613_ext = _1c4789dce_ext(_30143_decl.get()._field_link_path);
	if ((!(_1c47ee21d_is_valid_header_ext(_30613_ext))) && (!(_1c47ee40a_is_valid_cpp_ext(_30613_ext)))) {
		_1ab841b19_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_30613_ext)}));
		_30161_ok = false;
		return _30161_ok;
	}
	jule::Ptr<_1dc37a523_Status> _31313_info = ({
		auto except = static__1dc30a4a3_of(_30143_decl.get()._field_link_path);
		(except.ok()) ? (except.result) : ({{
			_1ab841b19_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
			_30161_ok = false;
			return _30161_ok;
			_30161_ok = false;
			return _30161_ok;
		} jule::Ptr<_1dc37a523_Status>();});
	});
	if (_1dc309947_is_dir(_31313_info.ptr())) {
		_1ab841b19_push_err(&(*_self_), _30143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_30143_decl.get()._field_link_path)}));
		_30161_ok = false;
		return _30161_ok;
	}
	_30161_ok = true;
	return _30161_ok;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ab842c91_build_cpp_header_import(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _32547_decl) {
	jule::Str _32617_path = _32547_decl.get()._field_link_path;
	if ((!(_1c47ee0a8_is_std_header_path(_32547_decl.get()._field_link_path)))) {
		jule::Bool _32921_ok = _1ab8428a6_check_cpp_use_decl_path(&(*_self_), _32547_decl);
		if ((!(_32921_ok))) {
			return nullptr;
		}
		std::tie(_32617_path,_32921_ok) = _1c478a1dc_abs(_32547_decl.get()._field_link_path);
		if ((!(_32921_ok))) {
			_1ab841b19_push_err(&(*_self_), _32547_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_32547_decl.get()._field_link_path)}));
		}
	}
	return jule::new_ptr<_1ac580d41_ImportInfo>(_1ac580d41_ImportInfo(_32547_decl.get()._field_token,_32617_path,_32547_decl.get()._field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_1aa07563a_Token>(),nullptr,jule::I64()));
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ab843137_build_std_import(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _35240_decl) {
	jule::Str _35317_path = _35240_decl.get()._field_link_path.slice(5LL);
	_35317_path=_1c478502d_replace(_35317_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_35317_path=_1c4789ac1_join(jule::Slice<jule::Str>({_1c4820a47_PATH_STDLIB,_35317_path}));
	jule::Bool _35620_ok;
	std::tie(_35317_path,_35620_ok) = _1c478a1dc_abs(_35317_path);
	if ((!(_35620_ok))) {
		_1ab841b19_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1dc37a523_Status> _36313_info = ({
		auto except = static__1dc30a4a3_of(_35317_path);
		(except.ok()) ? (except.result) : ({{
			_1ab841b19_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1dc37a523_Status>();});
	});
	if ((!(_1dc309947_is_dir(_36313_info.ptr())))) {
		_1ab841b19_push_err(&(*_self_), _35240_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35240_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _37313_i = (_1c47826ce_find_last(_35240_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _37413_ident = _35240_decl.get()._field_link_path.slice(_37313_i);
	return jule::new_ptr<_1ac580d41_ImportInfo>(_1ac580d41_ImportInfo(_35240_decl.get()._field_token,_35317_path,_35240_decl.get()._field_link_path,_37413_ident,_35240_decl.get()._field_alias,jule::Bool(),false,true,_35240_decl.get()._field_full,jule::Slice<_1aa07563a_Token>(),jule::new_ptr<_1ac58451a_Package>(_1ac58451a_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ab8434de_build_ident_import(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1aa09ba29_UseDecl>& _39143_decl) {
	jule::Str _39213_mod_path = _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c0c3_get_mod_path(_self_.get()._field_importer);
	if ((_39213_mod_path.len() == 0LL)) {
		_1ab841b19_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1ab8424dd_push_suggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Str _39917_path = _39143_decl.get()._field_link_path;
	_39917_path=_1c478502d_replace(_39917_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_39917_path=_1c4789ac1_join(jule::Slice<jule::Str>({_39213_mod_path,_39917_path}));
	jule::Bool _40320_ok;
	std::tie(_39917_path,_40320_ok) = _1c478a1dc_abs(_39917_path);
	if ((!(_40320_ok))) {
		_1ab841b19_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_1dc37a523_Status> _41013_info = ({
		auto except = static__1dc30a4a3_of(_39917_path);
		(except.ok()) ? (except.result) : ({{
			_1ab841b19_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1dc37a523_Status>();});
	});
	if ((!(_1dc309947_is_dir(_41013_info.ptr())))) {
		_1ab841b19_push_err(_self_.ptr(), _39143_decl.get()._field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_39143_decl.get()._field_link_path)}));
		return nullptr;
	}
	jule::I64 _42013_i = (_1c47826ce_find_last(_39143_decl.get()._field_link_path,jule::Str("::", 2)) + 1LL);
	jule::Str _42113_ident = _39143_decl.get()._field_link_path.slice(_42013_i);
	return jule::new_ptr<_1ac580d41_ImportInfo>(_1ac580d41_ImportInfo(_39143_decl.get()._field_token,_39917_path,_39143_decl.get()._field_link_path,_42113_ident,_39143_decl.get()._field_alias,jule::Bool(),false,false,_39143_decl.get()._field_full,jule::Slice<_1aa07563a_Token>(),jule::new_ptr<_1ac58451a_Package>(_1ac58451a_Package(nullptr)),jule::I64()));
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ab843896_build_import(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1aa09ba29_UseDecl>& _43837_decl) {
	{
		
		if (_43837_decl.get()._field_cpp_linked) {
			_case_begin_1a7b60216:;
			{
				return _1ab842c91_build_cpp_header_import(_self_.ptr(), _43837_decl);
			}
		}
		else if (_43837_decl.get()._field_std) {
			_case_begin_1a7b5ebb6:;
			{
				return _1ab843137_build_std_import(_self_.ptr(), _43837_decl);
			}
		}
		else {
			_case_begin_1a7b5e5ab:;
			{
				return _1ab8434de_build_ident_import(_self_, _43837_decl);
			}
		}
		_match_end_1a7b5e512:;
	}
}



inline jule::Bool _1ab843c92_check_duplicate_use_decl(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1ac580d41_ImportInfo>& _44644_pkg) {
	jule::Bool _44664_ok = jule::Bool();
	jule::Ptr<_1ac580d41_ImportInfo> _44813_lpkg = _1a58c9559_select_package((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>([=](jule::Ptr<_1ac580d41_ImportInfo> _44849_spkg) mutable -> jule::Bool {
		return _44644_pkg.get()._field_path == _44849_spkg.get()._field_path;
	}));
	if ((_44813_lpkg == nullptr)) {
		_44664_ok = true;
		return _44664_ok;
	}
	_1ab841b19_push_err(&(*_self_), _44644_pkg.get()._field_token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>({jule::Any(_44644_pkg.get()._field_link_path)}));
	_1ab8424dd_push_suggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	_44664_ok = false;
	return _44664_ok;
}



inline void _1ab84417c_impl_import_selections(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1ac580d41_ImportInfo>& _46046_imp,jule::Ptr<_1aa09ba29_UseDecl>& _46069_decl) {
	{
		auto &expr = _46069_decl.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a7b65edb:;
		if (it != expr.end()) {
			_1aa07563a_Token _1a7b660a7_ident = *it;
			{
				if (_1ac583daa_exist_ident(_46046_imp.ptr(), _1a7b660a7_ident._field_kind)) {
					_1ab841b19_push_err(&(*_self_), _1a7b660a7_ident,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>({jule::Any(_1a7b660a7_ident._field_kind)}));
					_1ab8424dd_push_suggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
					goto _iter_next_1a7b65edb;
				}
				_46046_imp.get()._field_selected = jule::alloc_for_append(_46046_imp.get()._field_selected,1);_46046_imp.get()._field_selected.__push(_1a7b660a7_ident);
			}
			_iter_next_1a7b65edb:;
			++it;
			goto _iter_begin_1a7b65edb;
		}
		_iter_end_1a7b65edb:;
	}
}



inline jule::Str _1ab844534_get_as_link_path(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Str _47240_path) {
	if (_1c471294a_has_prefix(_47240_path,_1c4820a47_PATH_STDLIB)) {
		(_47240_path).mut_slice(_1c4820a47_PATH_STDLIB.len());
		return jule::Str("std", 3) + _1c478502d_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _47814_root;
	std::tie(_47814_root,std::ignore) = _1c478a1dc_abs(_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c0c3_get_mod_path(_self_.get()._field_importer));
	(_47240_path).mut_slice(_47814_root.len());
	if ((_47240_path[0LL] == 47LLU)) {
		(_47240_path).mut_slice(1LL);
	}
	return _1c478502d_replace(_47240_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _1ab844a0c_push_cycle_error(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1ab840d16_SymbolBuilder>& _48637_sb,jule::Str _48657_path,jule::Str& _48673_message) {
	
	jule::Str _48913_refers_to = _1c4810938_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_1ab844534_get_as_link_path(_self_, _1aa07c6ec_dir(_48637_sb.get()._field_table.get()._field_file.ptr()))),jule::Any(_1ab844534_get_as_link_path(_self_, _48657_path))}));
	(_48673_message).buffer.insert(0, (((_1c3ad1c93_repeat(jule::Str(" ", 1),4LL) + _48913_refers_to) + jule::Str("\n", 1))));
}



inline void _1ab844ed5_push_cross_cycle_error(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1ab840d16_SymbolBuilder>& _49643_target,jule::Ptr<_1ac580d41_ImportInfo>& _49668_imp,_1aa07563a_Token& _49687_error_token) {
	jule::Str _49717_message = jule::Str();
	_1ab844a0c_push_cycle_error(_self_, _self_,_49668_imp.get()._field_path,_49717_message);
	jule::Ptr<_1ab840d16_SymbolBuilder> _50117_owner = _self_.get()._field_owner;
	jule::Ptr<_1ab840d16_SymbolBuilder> _50217_old = _self_;
	while ((_50117_owner.get()._field_owner != nullptr)) {
		{
			_1ab844a0c_push_cycle_error(_self_, _50217_old.get()._field_owner,_1aa07c6ec_dir(_50217_old.get()._field_table.get()._field_file.ptr()),_49717_message);
			if (_50117_owner.get()._field_owner == _49643_target) {
				_1ab844a0c_push_cycle_error(_self_, _49643_target,_1aa07c6ec_dir(_50117_owner.get()._field_table.get()._field_file.ptr()),_49717_message);
				goto _iter_end_1a7b7213a;
			}
			_50217_old=_50117_owner;
			_50117_owner=_50117_owner.get()._field_owner;
		}
	_iter_next_1a7b7213a:;
	}
	_iter_end_1a7b7213a:;
	_1ab841b19_push_err(_self_.ptr(), _49687_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_49717_message)}));
}



inline jule::Bool _1ab845469_check_import_cycles(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1ac580d41_ImportInfo> _51939_imp,jule::Ptr<_1aa09ba29_UseDecl>& _51958_decl) {
	if (_51939_imp.get()._field_path == _1aa07c6ec_dir(_self_.get()._field_table.get()._field_file.ptr())) {
		_1ab841b19_push_err(_self_.ptr(), _51958_decl.get()._field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(_1ab844534_get_as_link_path(_self_, _51939_imp.get()._field_path))}));
		return false;
	}
	if ((_self_.get()._field_owner == nullptr)) {
		return true;
	}
	if (_1aa07c6ec_dir(_self_.get()._field_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1ab844ed5_push_cross_cycle_error(_self_, _self_.get()._field_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	jule::Ptr<_1ab840d16_SymbolBuilder> _53417_owner = _self_.get()._field_owner;
	_julec_label_iter:;
	if (_1aa07c6ec_dir(_53417_owner.get()._field_table.get()._field_file.ptr()) == _51939_imp.get()._field_path) {
		_1ab844ed5_push_cross_cycle_error(_self_, _53417_owner,_51939_imp,_51958_decl.get()._field_token);
		return false;
	}
	if ((_53417_owner.get()._field_owner != nullptr)) {
		_53417_owner=_53417_owner.get()._field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline void _1ab845986_check_package_accessibility(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1aa09ba29_UseDecl>& _55547_decl,jule::Str& _55564_mod,jule::Str& _55575_path) {
	if ((_1ac57d25b_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1ac57c0c3_get_mod_path((*_self_)._field_importer) != _55564_mod) && _1c4783dea_contains(_55575_path,jule::Str("internal", 8))) {
		_1ab841b19_push_err(&(*_self_), _55547_decl.get()._field_token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1ab845e09_import_package(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1ac580d41_ImportInfo>& _56139_imp,jule::Ptr<_1aa09ba29_UseDecl>& _56162_decl) {
	jule::Bool _56180_ok = jule::Bool();
	if (_56139_imp.get()._field_cpp_linked) {
		_56180_ok = true;
		return _56180_ok;
	}
	jule::Ptr<_1ac580d41_ImportInfo> _56617_port = _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c832_get_import(_self_.get()._field_importer, _56139_imp.get()._field_path);
	if ((_56617_port != nullptr)) {
		_56139_imp.get()._field_package=_56617_port.get()._field_package;
		_56139_imp.get()._field_duplicate=true;
		jule::Str _57117_old_mod = _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c0c3_get_mod_path(_self_.get()._field_importer);
		_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57bd3c_set_mod_path(_self_.get()._field_importer, _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c47a_mod_by_id(_self_.get()._field_importer, _56139_imp.get()._field_mod_id));
		_1ab845986_check_package_accessibility(_self_.ptr(), _56162_decl,_57117_old_mod,_56617_port.get()._field_path);
		_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57bd3c_set_mod_path(_self_.get()._field_importer, _57117_old_mod);
	} else {
		if ((!(_1ab845469_check_import_cycles(_self_, _56139_imp,_56162_decl)))) {
			_56180_ok = false;
			return _56180_ok;
		}
		jule::Str _58017_old_mod = _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57c0c3_get_mod_path(_self_.get()._field_importer);
		__JULE_DEFER({
			_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57bd3c_set_mod_path(_self_.get()._field_importer, _58017_old_mod);
		});
		if (_56139_imp.get()._field_std) {
			_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57bd3c_set_mod_path(_self_.get()._field_importer, _1c4820a47_PATH_STDLIB);
		}
		jule::Slice<jule::Ptr<_1dd582707_Ast>> _58522_asts;
		jule::Slice<_1c4810251_Log> _58532_errors;
		std::tie(_58522_asts,_58532_errors) = _1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57ccb6_import_package(_self_.get()._field_importer, _56139_imp.get()._field_path,(!(_56139_imp.get()._field_std)));
		if ((_58532_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
			_56180_ok = false;
			return _56180_ok;
		}
		_1ab845986_check_package_accessibility(_self_.ptr(), _56162_decl,_58017_old_mod,_56139_imp.get()._field_path);
		{
			auto &expr = _58522_asts;
			auto it = expr.begin();
			_iter_begin_1a7b8b682:;
			if (it != expr.end()) {
				jule::Ptr<_1dd582707_Ast> _1a7b8beac_ast = *it;
				{
					jule::Ptr<_1a58c88ee_SymbolTable> _59425_table = nullptr;
					std::tie(_59425_table,_58532_errors) = _1a5933d44_build_symbols(_1a7b8beac_ast,_self_.get()._field_importer,_self_);
					if ((_58532_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_58532_errors);
						_1ab8420e2_push_err_text(_self_.ptr(), _56139_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56139_imp.get()._field_link_path)}));
						_56180_ok = false;
						return _56180_ok;
					}
					_56139_imp.get()._field_package.get()._field_files = jule::alloc_for_append(_56139_imp.get()._field_package.get()._field_files,1);_56139_imp.get()._field_package.get()._field_files.__push(_59425_table);
				}
				_iter_next_1a7b8b682:;
				++it;
				goto _iter_begin_1a7b8b682;
			}
			_iter_end_1a7b8b682:;
		}
	}
	_1ab84417c_impl_import_selections(_self_.ptr(), _56139_imp,_56162_decl);
	_56180_ok = true;
	return _56180_ok;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ab8462b1_import_use_decl(jule::Ptr<_1ab840d16_SymbolBuilder> _self_,jule::Ptr<_1aa09ba29_UseDecl>& _61340_decl) {
	jule::Ptr<_1ac580d41_ImportInfo> _61417_imp = _1ab843896_build_import(_self_, _61340_decl);
	if ((_61417_imp == nullptr)) {
		return nullptr;
	}
	jule::Bool _62017_ok = _1ab843c92_check_duplicate_use_decl(_self_.ptr(), _61417_imp);
	if ((!(_62017_ok))) {
		return nullptr;
	}
	_62017_ok=_1ab845e09_import_package(_self_, _61417_imp,_61340_decl);
	_self_.get()._field_table.get()._field_imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_imports,1);_self_.get()._field_table.get()._field_imports.__push(_61417_imp);
	if (_62017_ok) {
		_1ac57d25b_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1ac57d0d5_imported(_self_.get()._field_importer, _61417_imp);
		return _61417_imp;
	}
	return nullptr;
}



inline void _1ab846503_import_use_decls(jule::Ptr<_1ab840d16_SymbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_use_decls;
		auto it = expr.begin();
		_iter_begin_1a7b93e70:;
		if (it != expr.end()) {
			jule::Ptr<_1aa09ba29_UseDecl> _1a7b93ee7_decl = *it;
			{
				_1ab8462b1_import_use_decl(_self_, _1a7b93ee7_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a7b93e70;
				}
			}
			_iter_next_1a7b93e70:;
			++it;
			goto _iter_begin_1a7b93e70;
		}
		_iter_end_1a7b93e70:;
	}
}



inline void _1ab846822_append_node(_1ab840d16_SymbolBuilder* _self_,_1dd582b25_Node& _64535_node) {
	{
		auto &_match_expr{ _64535_node._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09ecd5_Impl>>()) {
			_case_begin_1a7b958ab:;
			{
				(*_self_)._field_table.get()._field_impls = jule::alloc_for_append((*_self_)._field_table.get()._field_impls,1);(*_self_)._field_table.get()._field_impls.__push(_1ab840673_build_impl(_64535_node._field_data.operator jule::Ptr<_1aa09ecd5_Impl>()));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09a330_TypeAliasDecl>>()) {
			_case_begin_1a7b95922:;
			{
				jule::Ptr<_1a5912d12_TypeAlias> _65021_ta = _1ab83c395_build_type_alias(_64535_node._field_data.operator jule::Ptr<_1aa09a330_TypeAliasDecl>());
				(*_self_)._field_table.get()._field_type_aliases = jule::alloc_for_append((*_self_)._field_table.get()._field_type_aliases,1);(*_self_)._field_table.get()._field_type_aliases.__push(_65021_ta);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09de7c_StructDecl>>()) {
			_case_begin_1a7b95988:;
			{
				jule::Ptr<_1ab810b3d_Struct> _65321_srct = _1ab83cd13_build_struct(_64535_node._field_data.operator jule::Ptr<_1aa09de7c_StructDecl>());
				(*_self_)._field_table.get()._field_structs = jule::alloc_for_append((*_self_)._field_table.get()._field_structs,1);(*_self_)._field_table.get()._field_structs.__push(_65321_srct);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa096b67_FnDecl>>()) {
			_case_begin_1a7b959ee:;
			{
				jule::Ptr<_1ab832324_Fn> _65621_f = _1ab83dad3_build_fn(_64535_node._field_data.operator jule::Ptr<_1aa096b67_FnDecl>());
				(*_self_)._field_table.get()._field_funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_funcs,1);(*_self_)._field_table.get()._field_funcs.__push(_65621_f);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09e631_TraitDecl>>()) {
			_case_begin_1a7b964a0:;
			{
				jule::Ptr<_1ac44770d_Trait> _65921_t = _1ab83e1ee_build_trait(_64535_node._field_data.operator jule::Ptr<_1aa09e631_TraitDecl>());
				(*_self_)._field_table.get()._field_traits = jule::alloc_for_append((*_self_)._field_table.get()._field_traits,1);(*_self_)._field_table.get()._field_traits.__push(_65921_t);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa097085_VarDecl>>()) {
			_case_begin_1a7b96516:;
			{
				jule::Ptr<_1a588601b_Var> _66221_v = _1ab840057_build_var(_64535_node._field_data.operator jule::Ptr<_1aa097085_VarDecl>());
				(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_66221_v);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09cb7e_EnumDecl>>()) {
			_case_begin_1a7b9657c:;
			{
				jule::Ptr<_1ac44a337_Enum> _66521_e = _1ab83eb28_build_enum(_64535_node._field_data.operator jule::Ptr<_1aa09cb7e_EnumDecl>());
				(*_self_)._field_table.get()._field_enums = jule::alloc_for_append((*_self_)._field_table.get()._field_enums,1);(*_self_)._field_table.get()._field_enums.__push(_66521_e);
			}
		}
		else {
			_case_begin_1a7b95845:;
			{
				_1ab841b19_push_err(&(*_self_), _64535_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7b957e0:;
	}
}



inline void _1ab846a64_append_nodes(_1ab840d16_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_nodes;
		auto it = expr.begin();
		_iter_begin_1a7b9e640:;
		if (it != expr.end()) {
			_1dd582b25_Node _1a7b9e83d_node = *it;
			{
				_1ab846822_append_node(&(*_self_), _1a7b9e83d_node);
			}
			_iter_next_1a7b9e640:;
			++it;
			goto _iter_begin_1a7b9e640;
		}
		_iter_end_1a7b9e640:;
	}
}



inline void _1ab846d83_push_directive_pass(_1ab840d16_SymbolBuilder* _self_,jule::Ptr<_1dd583043_Directive>& _67843_d) {
	if ((_67843_d.get()._field_args.len() == 0LL)) {
		_1ab841b19_push_err(&(*_self_), _67843_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_67843_d.get()._field_args.len() > 1LL)) {
		_1aa07563a_Token _68317_arg = _67843_d.get()._field_args[1LL];
		_1ab841b19_push_err(&(*_self_), _68317_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1aa07563a_Token _68713_arg = _67843_d.get()._field_args[0LL];
	if (_68713_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1ab841b19_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_68713_arg._field_kind[0LL] != '\"') {
		_1ab841b19_push_err(&(*_self_), _68713_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	(*_self_)._field_table.get()._field_passes = jule::alloc_for_append((*_self_)._field_table.get()._field_passes,1);(*_self_)._field_table.get()._field_passes.__push(_1ab83b66e_Pass(_67843_d.get()._field_tag,_68713_arg._field_kind.slice(1LL,(_68713_arg._field_kind.len() - 1LL))));
}



inline void _1ab8470c5_append_top_directives(_1ab840d16_SymbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a7ba5d3e:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1a7ba7082_d = *it;
			{
				{
					auto &_match_expr{ _1a7ba7082_d.get()._field_tag._field_kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a7ba744a:;
						{
							_1ab846d83_push_directive_pass(&(*_self_), _1a7ba7082_d);
						}
					}
					_match_end_1a7ba7846:;
				}
			}
			_iter_next_1a7ba5d3e:;
			++it;
			goto _iter_begin_1a7ba5d3e;
		}
		_iter_end_1a7ba5d3e:;
	}
}



inline void _1ab847317_build(jule::Ptr<_1ab840d16_SymbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a58c88ee_SymbolTable>(_1a58c88ee_SymbolTable(_self_.get()._field_ast.get()._field_file,jule::Slice<_1ab83b66e_Pass>(),jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>(),jule::Slice<jule::Ptr<_1a588601b_Var>>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Slice<jule::Ptr<_1ab810b3d_Struct>>(),jule::Slice<jule::Ptr<_1ab832324_Fn>>(),jule::Slice<jule::Ptr<_1ac44770d_Trait>>(),jule::Slice<jule::Ptr<_1ac44a337_Enum>>(),jule::Slice<jule::Ptr<_1ac44c05e_Impl>>()));
	_1ab8470c5_append_top_directives(_self_.ptr());
	_1ab846503_import_use_decls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
	_1ab846a64_append_nodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ab840d16_SymbolBuilder _Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac44c68b_is_trait_impl(_1ac44c05e_Impl* _self_) {
	return ((*_self_)._field_base != nullptr);
}



inline jule::Bool _1ac44c966_is_struct_impl(_1ac44c05e_Impl* _self_) {
	return ((*_self_)._field_base == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44c05e_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56022c_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56064a_If _Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac560a68_Else _Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac560e86_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5613a4_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac52ac97_is_while_next(_1ac5617c2_WhileIter* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5617c2_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac561be0_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56210d_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56252b_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac562949_Label _Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac562d67_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac563285_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac563ac1_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac536995_is_generic_type_match(_1ac563ede_Match* _self_) {
	return ((*_self_)._field_type_match && ((*_self_)._field_expr != nullptr)) && (*_self_)._field_expr.get()._field_kind.get()._field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac563ede_Match _Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ac537ac8_is_default(_1ac56463d_Case* _self_) {
	return ((*_self_)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac56463d_Case _Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac564a5b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac564e79_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5657b5_ScopeGoto _Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac4edb16_find_package(_1ac565bd3_ScopeChecker* _self_,jule::Str _41735_ident) {
	return _1a5864eea_find_package((*_self_)._field_s.ptr(), _41735_ident);
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac501421_select_package(_1ac565bd3_ScopeChecker* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _42737_selector) {
	return _1a58653a2_select_package((*_self_)._field_s.ptr(), _42737_selector);
}



inline jule::Ptr<_1a588601b_Var> _1ac5476ba_find_var(_1ac565bd3_ScopeChecker* _self_,jule::Str _43831_ident,jule::Bool _43843_cpp_linked) {
	
	jule::Ptr<_1a588601b_Var> _44117_v = _1a58cb77b___find_var((*_self_)._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
	if ((_44117_v != nullptr)) {
		return _44117_v;
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _44617_parent = (*_self_)._field_parent;
	while ((_44617_parent != nullptr)) {
		{
			_44117_v=_1a58cb77b___find_var(_44617_parent.get()._field_table.ptr(), _43831_ident,_43843_cpp_linked,true);
			if ((_44117_v != nullptr)) {
				return _44117_v;
			}
			_44617_parent=_44617_parent.get()._field_parent;
		}
	_iter_next_1a7bbd61a:;
	}
	_iter_end_1a7bbd61a:;
	return _1a5865836_find_var((*_self_)._field_s.ptr(), _43831_ident,_43843_cpp_linked);
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1ac566101_find_type_alias(_1ac565bd3_ScopeChecker* _self_,jule::Str _46538_ident,jule::Bool _46550_cpp_linked) {
	
	jule::Ptr<_1a5912d12_TypeAlias> _46817_ta = _1a58cbcdc___find_type_alias((*_self_)._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
	if ((_46817_ta != nullptr)) {
		return _46817_ta;
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _47317_parent = (*_self_)._field_parent;
	while ((_47317_parent != nullptr)) {
		{
			_46817_ta=_1a58cbcdc___find_type_alias(_47317_parent.get()._field_table.ptr(), _46538_ident,_46550_cpp_linked,true);
			if ((_46817_ta != nullptr)) {
				return _46817_ta;
			}
			_47317_parent=_47317_parent.get()._field_parent;
		}
	_iter_next_1a7bc2d4a:;
	}
	_iter_end_1a7bc2d4a:;
	return _1a5865cba_find_type_alias((*_self_)._field_s.ptr(), _46538_ident,_46550_cpp_linked);
}



inline jule::Ptr<_1ab810b3d_Struct> _1ac566266_find_struct(_1ac565bd3_ScopeChecker* _self_,jule::Str _49034_ident,jule::Bool _49046_cpp_linked) {
	return _1a586624e_find_struct((*_self_)._field_s.ptr(), _49034_ident,_49046_cpp_linked);
}



inline jule::Ptr<_1ab832324_Fn> _1ac566662_find_fn(_1ac565bd3_ScopeChecker* _self_,jule::Str _49930_ident,jule::Bool _49942_cpp_linked) {
	return _1a58666d3_find_fn((*_self_)._field_s.ptr(), _49930_ident,_49942_cpp_linked);
}



inline jule::Ptr<_1ac44770d_Trait> _1ac566a19_find_trait(_1ac565bd3_ScopeChecker* _self_,jule::Str _50833_ident) {
	return _1a5866a8a_find_trait((*_self_)._field_s.ptr(), _50833_ident);
}



inline jule::Ptr<_1ac44a337_Enum> _1ac566dc1_find_enum(_1ac565bd3_ScopeChecker* _self_,jule::Str _51732_ident) {
	return _1a5866e42_find_enum((*_self_)._field_s.ptr(), _51732_ident);
}



inline jule::Bool _1ac567267_is_unsafe(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _52517_scope = _self_;
	_julec_label_iter:;
	if (_52517_scope.get()._field_scope.get()._field_unsafety) {
		return true;
	}
	if ((_52517_scope.get()._field_parent != nullptr)) {
		_52517_scope=_52517_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ac567542_is_root(_1ac565bd3_ScopeChecker* _self_) {
	return ((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr);
}



inline void _1ac567784_stop(_1ac565bd3_ScopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1ac567a5e_stopped(_1ac565bd3_ScopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);
}



inline jule::Bool _1ac567d39_is_deferred(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _55817_scope = _self_;
	_julec_label_iter:;
	if (_55817_scope.get()._field_scope.get()._field_deferred) {
		return true;
	}
	if ((_55817_scope.get()._field_parent != nullptr)) {
		_55817_scope=_55817_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac568114_get_root(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _57617_root = _self_;
	while ((_57617_root.get()._field_parent != nullptr) && (_57617_root.get()._field_owner == nullptr)) {
		{
			_57617_root=_57617_root.get()._field_parent;
		}
	_iter_next_1a7bd27a5:;
	}
	_iter_end_1a7bd27a5:;
	return _57617_root;
}



inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac5683de_get_hard_root(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _58617_root = _self_;
	while ((_58617_root.get()._field_parent != nullptr)) {
		{
			_58617_root=_58617_root.get()._field_parent;
		}
	_iter_next_1a7bd4059:;
	}
	_iter_end_1a7bd4059:;
	return _58617_root;
}



inline jule::Ptr<_1ac562949_Label> _1ac568796_find_label(_1ac565bd3_ScopeChecker* _self_,jule::Str _59629_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a7bd56dc:;
		if (it != expr.end()) {
			jule::Any _1a7bd5764_st = *it;
			{
				{
					auto &_match_expr{ _1a7bd5764_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ac562949_Label>>()) {
						_case_begin_1a7bd5e18:;
						{
							jule::Ptr<_1ac562949_Label> _60025_label = _1a7bd5764_st.operator jule::Ptr<_1ac562949_Label>();
							if (_60025_label.get()._field_ident == _59629_ident) {
								return _60025_label;
							}
						}
					}
					_match_end_1a7bd5db3:;
				}
			}
			_iter_next_1a7bd56dc:;
			++it;
			goto _iter_begin_1a7bd56dc;
		}
		_iter_end_1a7bd56dc:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac565397_ScopeLabel> _1ac568b4d_find_label_scope(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Str _61236_ident) {
	jule::Ptr<_1ac565397_ScopeLabel> _61317_label = _1ac569005_find_label_all(_self_.ptr(), _61236_ident);
	if ((_61317_label != nullptr) && (_61317_label.get()._field_scope == _self_)) {
		return _61317_label;
	}
	return nullptr;
}



inline jule::Ptr<_1ac565397_ScopeLabel> _1ac569005_find_label_all(_1ac565bd3_ScopeChecker* _self_,jule::Str _62433_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a7bd8c51:;
		if (it != expr.end()) {
			jule::Ptr<_1ac565397_ScopeLabel> _1a7bd9317_lbl = *it;
			{
				if (_1a7bd9317_lbl.get()._field_label.get()._field_ident == _62433_ident) {
					return _1a7bd9317_lbl;
				}
			}
			_iter_next_1a7bd8c51:;
			++it;
			goto _iter_begin_1a7bd8c51;
		}
		_iter_end_1a7bd8c51:;
	}
	return nullptr;
}



inline jule::Bool _1ac569489_is_duplicated_ident(_1ac565bd3_ScopeChecker* _self_,jule::U64 _63638_itself,jule::Str _63655_ident) {
	jule::Ptr<_1a588601b_Var> _63713_v = _1ac5476ba_find_var(&(*_self_), _63655_ident,false);
	if ((_63713_v != nullptr) && (static_cast<jule::U64>(_63713_v) != _63638_itself)) {
		if ((_63713_v.get()._field_scope == nullptr)) {
			return false;
		}
		return (_63713_v.get()._field_scope == (*_self_)._field_scope) || (!(_1a58673b5_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	jule::Ptr<_1a5912d12_TypeAlias> _64513_ta = _1ac566101_find_type_alias(&(*_self_), _63655_ident,false);
	if ((_64513_ta != nullptr) && (static_cast<jule::U64>(_64513_ta) != _63638_itself)) {
		if ((_64513_ta.get()._field_scope == nullptr)) {
			return false;
		}
		return (_64513_ta.get()._field_scope == (*_self_)._field_tree) || (!(_1a58673b5_is_flag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL))));
	}
	return false;
}



inline void _1ac5697a8_check_var_decl(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa097085_VarDecl> _65638_decl) {
	jule::Ptr<_1a588601b_Var> _65717_v = _1ab840057_build_var(_65638_decl);
	_65717_v.get()._field_scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_vars,1);_self_.get()._field_table.get()._field_vars.__push(_65717_v);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_65717_v));
	});
	if (_1ac569489_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_65717_v)),_65717_v.get()._field_ident)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _65717_v.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_65717_v.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ac567784_stop(_self_.ptr());
		return;
	}
	_1a5876eda_check_var_decl(_self_.get()._field_s, _65717_v,jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
	if ((!(_1a5886912_is_type_inferred(_65717_v.ptr()))) && ((_65717_v.get()._field_kind == nullptr) || (_65717_v.get()._field_kind.get()._field_kind == nullptr))) {
		return;
	}
	_1a587c144_check_type_var(_self_.get()._field_s, _65717_v,jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
}



inline void _1ac569ac7_check_type_alias_decl(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09a330_TypeAliasDecl> _68045_decl) {
	jule::Ptr<_1a5912d12_TypeAlias> _68117_ta = _1ab83c395_build_type_alias(_68045_decl);
	if (_1ac569489_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_68117_ta)),_68117_ta.get()._field_ident)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _68117_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_68117_ta.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1ac567784_stop(_self_.ptr());
		return;
	}
	_1a5872007_check_type_alias_decl(_self_.get()._field_s, _68117_ta,jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_type_aliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_type_aliases,1);_self_.get()._field_table.get()._field_type_aliases.__push(_68117_ta);
	if ((_68117_ta.get()._field_kind.get()._field_kind == nullptr)) {
		_1ac567784_stop(_self_.ptr());
	}
}



inline jule::Ptr<_1ac56022c_Scope> _1ac569da2_get_child(_1ac565bd3_ScopeChecker* _self_) {
	return jule::new_ptr<_1ac56022c_Scope>(_1ac56022c_Scope((*_self_)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



inline void _1ac56a37a_check_child_ssc(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09632b_ScopeTree>& _70440_tree,jule::Ptr<_1ac56022c_Scope>& _70463_s,jule::Ptr<_1ac565bd3_ScopeChecker>& _70479_ssc) {
	_70479_ssc.get()._field_parent=_self_;
	_1ac577bd4_check(_70479_ssc, _70440_tree,_70463_s);
}



inline jule::Ptr<_1ac56022c_Scope> _1ac56a80e_check_child_sc(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09632b_ScopeTree>& _70939_tree,jule::Ptr<_1ac565bd3_ScopeChecker>& _70962_ssc) {
	jule::Ptr<_1ac56022c_Scope> _71017_s = _1ac569da2_get_child(_self_.ptr());
	_1ac56a37a_check_child_ssc(_self_, _70939_tree,_71017_s,_70962_ssc);
	return _71017_s;
}



inline jule::Ptr<_1ac56022c_Scope> _1ac56abb6_check_child(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09632b_ScopeTree>& _71536_tree) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _71617_ssc = _1ac577eae_new_child_checker(_self_);
	return _1ac56a80e_check_child_sc(_self_, _71536_tree,_71617_ssc);
}



inline void _1ac56aed5_check_anon_scope(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09632b_ScopeTree> _72040_tree) {
	jule::Ptr<_1ac56022c_Scope> _72117_s = _1ac56abb6_check_child(_self_, _72040_tree);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_72117_s));
}



inline void _1ac56b3d1_process_error_call(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>& _72543_m,_1aa07563a_Token _72574_err) {
	if (_1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _73017_root = _1ac568114_get_root(_self_);
	if ((!(_73017_root.get()._field_owner.get()._field_decl.get()._field_exceptional))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _72574_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	}
	_72543_m.get()._field_func=_73017_root.get()._field_owner;
}



inline void _1ac56b700_check_expr(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa08d334_Expr> _73834_expr) {
	jule::Ptr<_1a58d2397_Eval> _73917_eval = _1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
	_73917_eval.get()._field_ignored=true;
	jule::Ptr<_1a58cee44_Data> _74117_d = _1a5902c03_eval_expr(_73917_eval, _73834_expr);
	if ((_74117_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _74117_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a7c0c901:;
			{
				jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel> _74821_m = _74117_d.get()._field_model.operator jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>();
				_1ac56b3d1_process_error_call(_self_, _74821_m,_73834_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82cd7a_BackendEmitExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab82d3ca_FreeExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
			_case_begin_1a7c0c967:;
			{
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_74117_d));
			}
		}
		else {
			_case_begin_1a7c0c46c:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _73834_expr.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7c0c879:;
	}
}



inline void _1ac56ba1e_check_co_expr(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa08e8c9_CoExpr> _76637_expr) {
	jule::Ptr<_1a58d2397_Eval> _76717_eval = _1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
	_76717_eval.get()._field_ignored=true;
	jule::Ptr<_1a58cee44_Data> _76917_d = _1a5902c03_eval_expr(_76717_eval, _76637_expr.get()._field_expr);
	if ((_76917_d == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _76917_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
			_case_begin_1a7c1474e:;
			{
				jule::Ptr<_1ab81a0ed_FnCallExprModel> _77621_model = _76917_d.get()._field_model.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>();
				if (_77621_model.get()._field_func.get()._field_decl.get()._field_exceptional) {
					_1a5867bac_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
					_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
				}
				_77621_model.get()._field_is_co=true;
				_1a58e7e7e_check_fn_of_concurrent_call(_76717_eval.ptr(), _77621_model.get()._field_func,_76637_expr.get()._field_expr.get()._field_token);
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_76917_d));
			}
		}
		else {
			_case_begin_1a7c13561:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _76637_expr.get()._field_token,jule::Str("statement must have function call expression", 44),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a7c139c3:;
	}
}



inline jule::Ptr<_1ac56064a_If> _1ac56bdc6_check_if(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa098e66_If> _79132_i) {
	jule::Ptr<_1ac56022c_Scope> _79217_s = _1ac56abb6_check_child(_self_, _79132_i.get()._field_scope);
	jule::Ptr<_1a58cee44_Data> _79417_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _79132_i.get()._field_expr);
	if ((_79417_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a591970e_Prim> _79917_prim = _1a591673e_prim(_79417_d.get()._field_kind.ptr());
	if ((_79917_prim == nullptr) || (!(_1a591cd61_is_bool(_79917_prim.ptr())))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _79132_i.get()._field_expr.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1ac56064a_If>(_1ac56064a_If(_79417_d.get()._field_model,_79217_s));
}



inline jule::Ptr<_1ac560a68_Else> _1ac56c27d_check_else(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09942d_Else> _81134_e) {
	return jule::new_ptr<_1ac560a68_Else>(_1ac560a68_Else(_1ac56abb6_check_child(_self_, _81134_e.get()._field_scope)));
}



inline void _1ac56c59c_check_conditional(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa099a38_Conditional> _81741_conditional) {
	jule::Ptr<_1ac560e86_Conditional> _81817_c = jule::new_ptr<_1ac560e86_Conditional>(_1ac560e86_Conditional());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_81817_c));
	_81817_c.get()._field_elifs=jule::Slice<jule::Ptr<_1ac56064a_If>>::alloc(0LL,static_cast<jule::I64>((_81741_conditional.get()._field_tail.len() + 1LL)));
	_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_1ac56bdc6_check_if(_self_, _81741_conditional.get()._field_head));
	{
		auto &expr = _81741_conditional.get()._field_tail;
		auto it = expr.begin();
		_iter_begin_1a7c220a8:;
		if (it != expr.end()) {
			jule::Ptr<_1aa098e66_If> _1a7c21272_elif = *it;
			{
				_81817_c.get()._field_elifs = jule::alloc_for_append(_81817_c.get()._field_elifs,1);_81817_c.get()._field_elifs.__push(_1ac56bdc6_check_if(_self_, _1a7c21272_elif));
			}
			_iter_next_1a7c220a8:;
			++it;
			goto _iter_begin_1a7c220a8;
		}
		_iter_end_1a7c220a8:;
	}
	if ((_81741_conditional.get()._field_default != nullptr)) {
		_81817_c.get()._field_default=_1ac56c27d_check_else(_self_, _81741_conditional.get()._field_default);
	}
}



inline jule::Ptr<_1ac56022c_Scope> _1ac56cb0d_check_iter_scope_sc(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::U64 _83339_it,jule::Ptr<_1aa09632b_ScopeTree> _83356_tree,jule::Ptr<_1ac565bd3_ScopeChecker> _83378_ssc) {
	_83378_ssc.get()._field_it=_83339_it;
	return _1ac56a80e_check_child_sc(_self_, _83356_tree,_83378_ssc);
}



inline jule::Ptr<_1ac56022c_Scope> _1ac56d092_check_iter_scope(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::U64 _83836_it,jule::Ptr<_1aa09632b_ScopeTree>& _83854_tree) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _83917_ssc = _1ac577eae_new_child_checker(_self_);
	return _1ac56cb0d_check_iter_scope_sc(_self_, _83836_it,_83854_tree,_83917_ssc);
}



inline void _1ac56d3b1_check_inf_iter(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0978c1_Iter>& _84339_it) {
	jule::Ptr<_1ac5613a4_InfIter> _84417_kind = jule::new_ptr<_1ac5613a4_InfIter>(_1ac5613a4_InfIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_84417_kind));
	_84417_kind.get()._field_scope=_1ac56d092_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_84417_kind)),_84339_it.get()._field_scope);
}



inline void _1ac56d6d0_check_while_iter(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0978c1_Iter>& _85141_it) {
	jule::Ptr<_1aa097cde_WhileKind> _85217_wh = _85141_it.get()._field_kind.operator jule::Ptr<_1aa097cde_WhileKind>();
	if ((_85217_wh.get()._field_expr == nullptr) && (_85217_wh.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_1ac56d3b1_check_inf_iter(_self_, _85141_it);
		return;
	}
	jule::Ptr<_1ac5617c2_WhileIter> _85817_kind = jule::new_ptr<_1ac5617c2_WhileIter>(_1ac5617c2_WhileIter());
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_85817_kind));
	_85817_kind.get()._field_scope=_1ac56d092_check_iter_scope(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_85817_kind)),_85141_it.get()._field_scope);
	if ((_85217_wh.get()._field_expr != nullptr)) {
		jule::Ptr<_1a58cee44_Data> _86521_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _85217_wh.get()._field_expr);
		if ((_86521_d == nullptr)) {
			return;
		}
		jule::Ptr<_1a591970e_Prim> _87017_prim = _1a591673e_prim(_86521_d.get()._field_kind.ptr());
		if ((_87017_prim == nullptr)) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		if ((!(_1a591cd61_is_bool(_87017_prim.ptr())))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _85141_it.get()._field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;
		}
		_85817_kind.get()._field_expr=_86521_d.get()._field_model;
	}
	if (_1dd5b0c96_is_while_next(_85217_wh.ptr())) {
		if ((!(_1ac52649b_is_valid_ast_st_for_next_st(_85217_wh.get()._field_next)))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;
		}
		jule::I64 _89017_n = _self_.get()._field_scope.get()._field_stmts.len();
		_1ac576540_check_node(_self_, _85217_wh.get()._field_next);
		if (_89017_n < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len()))) {
			jule::Any _89325_st = _self_.get()._field_scope.get()._field_stmts[_89017_n];
			_self_.get()._field_scope.get()._field_stmts=_self_.get()._field_scope.get()._field_stmts.slice(0LL,_89017_n);
			if ((!(_1ac5295d1_is_valid_st_for_next_st(_89325_st)))) {
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _85217_wh.get()._field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			}
			_85817_kind.get()._field_next=_89325_st;
		}
	}
}



inline void _1ac56d9ee_check_range_iter(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0978c1_Iter>& _90441_it) {
	jule::Ptr<_1aa09820c_RangeKind> _90517_rang = _90441_it.get()._field_kind.operator jule::Ptr<_1aa09820c_RangeKind>();
	jule::Ptr<_1a58cee44_Data> _90717_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _90517_rang.get()._field_expr);
	if ((_90717_d == nullptr)) {
		return;
	}
	jule::Ptr<_1ac561be0_RangeIter> _91217_kind = jule::new_ptr<_1ac561be0_RangeIter>(_1ac561be0_RangeIter(_90717_d,jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1a588601b_Var>(),jule::Ptr<_1a588601b_Var>()));
	_1a58c392c_RangeChecker _91617_rc = _1a58c392c_RangeChecker(_self_,_90517_rang,_91217_kind,_90717_d);
	jule::Bool _92213_ok = _1a58c5a3e_check(&_91617_rc);
	if ((!(_92213_ok))) {
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_91217_kind));
	jule::Ptr<_1ac565bd3_ScopeChecker> _92917_ssc = _1ac577eae_new_child_checker(_self_);
	if ((_91217_kind.get()._field_key_a != nullptr)) {
		if ((!(_1a58673b5_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac569489_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_a.get()._field_ident)) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_a.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_a.get()._field_ident)}));
			_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_a);
	}
	if ((_91217_kind.get()._field_key_b != nullptr)) {
		if ((!(_1a58673b5_is_flag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1ac569489_is_duplicated_ident(_self_.ptr(), 0LLU,_91217_kind.get()._field_key_b.get()._field_ident)) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _91217_kind.get()._field_key_b.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_91217_kind.get()._field_key_b.get()._field_ident)}));
			_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		}
		_92917_ssc.get()._field_table.get()._field_vars = jule::alloc_for_append(_92917_ssc.get()._field_table.get()._field_vars,1);_92917_ssc.get()._field_table.get()._field_vars.__push(_91217_kind.get()._field_key_b);
	}
	_91217_kind.get()._field_scope=_1ac56cb0d_check_iter_scope_sc(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_91217_kind)),_90441_it.get()._field_scope,_92917_ssc);
}



inline void _1ac56dd1d_check_iter(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0978c1_Iter> _95034_it) {
	if (_1aa004377_is_inf(_95034_it.ptr())) {
		_1ac56d3b1_check_inf_iter(_self_, _95034_it);
		return;
	}
	{
		auto &_match_expr{ _95034_it.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa097cde_WhileKind>>()) {
			_case_begin_1a7c43393:;
			{
				_1ac56d6d0_check_while_iter(_self_, _95034_it);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09820c_RangeKind>>()) {
			_case_begin_1a7c441da:;
			{
				_1ac56d9ee_check_range_iter(_self_, _95034_it);
			}
		}
		else {
			_case_begin_1a7c43c9a:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a7c43c45:;
	}
}



inline jule::Bool _1ac56e1c5_check_valid_cont_label(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::U64 _96642_it) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _96717_scope = _self_;
	_julec_label_iter:;
	if (_96717_scope.get()._field_it == _96642_it) {
		return true;
	}
	if ((_96717_scope.get()._field_parent != nullptr)) {
		_96717_scope=_96717_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1ac56e5c1_check_valid_break_label(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::U64 _98243_ptr) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _98317_scope = _self_;
	_julec_label_iter:;
	if (_98317_scope.get()._field_it == _98243_ptr) {
		return true;
	}
	if ((_98317_scope.get()._field_cse != 0LLU)) {
		jule::U64 _99117_mtch = static_cast<jule::U64>(((_1ac56463d_Case*)(_98317_scope.get()._field_cse))->_field_owner);
		if (_99117_mtch == _98243_ptr) {
			return true;
		}
	}
	if ((_98317_scope.get()._field_parent != nullptr)) {
		_98317_scope=_98317_scope.get()._field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ptr<_1ac56210d_ContSt> _1ac56e967_check_cont_valid_scope(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa098a48_ContSt> _100542_c) {
	if (_1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;
	}
	if (_100542_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		return jule::new_ptr<_1ac56210d_ContSt>(_1ac56210d_ContSt());
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _101517_scope = _self_;
	_julec_label_iter:;
	{
		
		if (((_101517_scope.get()._field_it == 0LLU) && (_101517_scope.get()._field_parent != nullptr)) && (_101517_scope.get()._field_owner == nullptr)) {
			_case_begin_1a7c4d1c2:;
			{
				_101517_scope=_101517_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_101517_scope.get()._field_it != 0LLU)) {
			_case_begin_1a7c4d249:;
			{
				return jule::new_ptr<_1ac56210d_ContSt>(_1ac56210d_ContSt(_101517_scope.get()._field_it));
			}
		}
		_match_end_1a7c4d128:;
	}
	_1a5867bac_push_err(_self_.get()._field_s.ptr(), _100542_c.get()._field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ac56ec86_check_cont(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa098a48_ContSt> _102930_c) {
	jule::Ptr<_1ac56210d_ContSt> _103017_cont = _1ac56e967_check_cont_valid_scope(_self_, _102930_c);
	if ((_103017_cont == nullptr)) {
		return;
	}
	if (_102930_c.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_1ac565397_ScopeLabel> _103621_label = _1ac4dc96d_find_label_parent(_102930_c.get()._field_label._field_kind,_self_.get()._field_parent);
		if ((_103621_label == nullptr)) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		_103621_label.get()._field_used=true;
		if ((_103621_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
			return;
		}
		jule::I64 _104917_i = (_103621_label.get()._field_pos + 1LL);
		if (_104917_i >= static_cast<jule::I64>(static_cast<jule::I64>(_103621_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _105325_st = _103621_label.get()._field_scope.get()._field_scope.get()._field_stmts[_104917_i];
			{
				auto &_match_expr{ _105325_st };
				
				if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
					_case_begin_1a7c58782:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ac5613a4_InfIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac561be0_RangeIter>>()) {
					_case_begin_1a7c587e8:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ac561be0_RangeIter>()));
					}
				}
				else if (_match_expr.type_is<jule::Ptr<_1ac5617c2_WhileIter>>()) {
					_case_begin_1a7c5885e:;
					{
						_103017_cont.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_105325_st.operator jule::Ptr<_1ac5617c2_WhileIter>()));
					}
				}
				else {
					_case_begin_1a7c58694:;
					{
						_1a5867bac_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
					}
				}
				_match_end_1a7c5863e:;
			}
		}
	}
	if ((_103017_cont.get()._field_it != 0LLU)) {
		if ((!(_1ac56e1c5_check_valid_cont_label(_self_, _103017_cont.get()._field_it)))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _102930_c.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_102930_c.get()._field_label._field_kind)}));
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_103017_cont));
}



inline void _1ac5700a5_check_label(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa094c86_LabelSt> _107635_l) {
	if ((_1ac568796_find_label(_self_.ptr(), _107635_l.get()._field_ident) != nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _107635_l.get()._field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_107635_l.get()._field_ident)}));
		return;
	}
	jule::Ptr<_1ac562949_Label> _108217_label = jule::new_ptr<_1ac562949_Label>(_1ac562949_Label(_107635_l.get()._field_ident));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_108217_label));
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>({jule::new_ptr<_1ac565397_ScopeLabel>(_1ac565397_ScopeLabel(_107635_l.get()._field_token,_108217_label,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL))),_self_,jule::Bool()))}));
}



inline void _1ac5703c4_push_goto(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0951a4_GotoSt> _109533_gt) {
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ac562d67_GotoSt>(_1ac562d67_GotoSt(_109533_gt.get()._field_label._field_kind))));
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>({jule::new_ptr<_1ac5657b5_ScopeGoto>(_1ac5657b5_ScopeGoto(_109533_gt,_self_,static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())) - 1LL)))))}));
}



inline void _1ac5706e3_check_postfix(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa095e0d_AssignSt> _110737_a) {
	if ((_110737_a.get()._field_left.len() > 1LL)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1aa08d334_Expr> _111317_expr = _110737_a.get()._field_left[0LL].get()._field_expr;
	jule::Ptr<_1a58cee44_Data> _111417_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _111317_expr);
	if ((_111417_d == nullptr)) {
		return;
	}
	_1ac525368_check_assign(_self_.get()._field_s,_111417_d,nullptr,_110737_a.get()._field_setter);
	if ((_1a5916ce4_ptr(_111417_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a59230db_Ptr> _112221_ptr = _1a5916ce4_ptr(_111417_d.get()._field_kind.ptr());
		if (_1a5923e33_is_unsafe(_112221_ptr.ptr())) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_1a59145b6_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	} else {
		if ((_1a591673e_prim(_111417_d.get()._field_kind.ptr()) == nullptr) || (!(_1ac55e836_is_num(_1a591673e_prim(_111417_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _110737_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_110737_a.get()._field_setter._field_kind),jule::Any(_1a59145b6_to_str(_111417_d.get()._field_kind.ptr()))}));
			return;
		}
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ac563285_Postfix>(_1ac563285_Postfix(_111417_d.get()._field_model,_110737_a.get()._field_setter._field_kind))));
}



inline jule::Bool _1ac570a9a_is_new_assign_ident(_1ac565bd3_ScopeChecker* _self_,jule::Str _114038_ident) {
	if (_1aa07861b_is_ignore_ident(_114038_ident) || _114038_ident.empty()) {
		return false;
	}
	return _1a58cc271_def_by_ident((*_self_)._field_table.ptr(), _114038_ident,false) == jule::Any(jule::Any(nullptr));
}



inline jule::Bool _1ac571150_check_structure_assign_op(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ab814515_StructIns>& _114850_s,jule::Ptr<_1aa095e0d_AssignSt>& _114870_a,jule::Ptr<_1a58cee44_Data>& _114889_r) {
	jule::Ptr<_1ab836218_FnIns> _115117_overload = nullptr;
	{
		auto &_match_expr{ _114870_a.get()._field_setter._field_kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a7c73280:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_add_assign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a7c732e6:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_sub_assign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a7c7335c:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_div_assign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a7c733c3:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mul_assign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a7c74715:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_mod_assign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a7c7477b:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shl_assign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a7c747e2:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_shr_assign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a7c74858:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_or_assign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a7c74a78:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_and_assign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a7c74ade:;
			{
				_115117_overload=_114850_s.get()._field_operators._field_bit_xor_assign;
			}
		}
		else {
			_case_begin_1a7c72c30:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_1ab814b31_to_str(_114850_s.ptr()))}));
				return false;
			}
		}
		_match_end_1a7c73181:;
	}
	if ((_115117_overload == nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _114870_a.get()._field_setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any(_114870_a.get()._field_setter._field_kind),jule::Any(_1ab814b31_to_str(_114850_s.ptr()))}));
		return false;
	}
	jule::Ptr<_1ab834db5_ParamIns> _118317_p = _115117_overload.get()._field_params[1LL];
	return _1a586e202_check_assign_type(_self_.get()._field_s, _118317_p.get()._field_decl.get()._field_reference,_118317_p.get()._field_kind,_114889_r,_114870_a.get()._field_setter);
}



inline void _1ac57145d_check_single_assign(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa095e0d_AssignSt>& _118744_a) {
	jule::Ptr<_1a58cee44_Data> _118817_l = nullptr;
	if ((!(_1aa07861b_is_ignore_ident(_118744_a.get()._field_left[0LL].get()._field_ident)))) {
		jule::Ptr<_1aa08d334_Expr> _119121_expr = _118744_a.get()._field_left[0LL].get()._field_expr;
		_118817_l=_1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _119121_expr);
		if ((_118817_l == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1a58d2397_Eval> _119817_eval = (((_118817_l != nullptr)) ? (_1a586d70c_evalp(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0),_118817_l.get()._field_kind)) : (_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0))));
	_119817_eval.get()._field_unsafety=_1ac567267_is_unsafe(_self_);
	jule::Ptr<_1a58cee44_Data> _120417_r = _1a5902c03_eval_expr(_119817_eval, _118744_a.get()._field_right);
	if ((_120417_r == nullptr)) {
		return;
	}
	if ((_118817_l == nullptr)) {
		if (_1a591552e_void(_120417_r.get()._field_kind.ptr())) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_120417_r));
		return;
	}
	if ((!(_1ac525368_check_assign(_self_.get()._field_s,_118817_l,_120417_r,_118744_a.get()._field_setter)))) {
		return;
	}
	if ((_1a59185a9_tup(_120417_r.get()._field_kind.ptr()) != nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _118744_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ab816825_OperandExprModel> _122617_lm = jule::new_ptr<_1ab816825_OperandExprModel>(_1ab816825_OperandExprModel(_118817_l.get()._field_kind,_118817_l.get()._field_model));
	jule::Ptr<_1ab816825_OperandExprModel> _123017_rm = jule::new_ptr<_1ab816825_OperandExprModel>(_1ab816825_OperandExprModel(_120417_r.get()._field_kind,_120417_r.get()._field_model));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ac5636a3_Assign>(_1ac5636a3_Assign(_122617_lm,_123017_rm,_118744_a.get()._field_setter))));
	if ((_118744_a.get()._field_setter._field_kind != jule::Str("=", 1))) {
		jule::Ptr<_1ab814515_StructIns> _123721_strct = _1a5917c29_strct(_118817_l.get()._field_kind.ptr());
		if ((_123721_strct != nullptr)) {
			_1ac571150_check_structure_assign_op(_self_, _123721_strct,_118744_a,_120417_r);
			return;
		}
		_118744_a.get()._field_setter._field_kind=_118744_a.get()._field_setter._field_kind.slice(0LL,(_118744_a.get()._field_setter._field_kind.len() - 1LL));
		_1a5905772_BinaryEval _124421_solver = static__1a5906476_new(_119817_eval,_118744_a.get()._field_setter);
		_120417_r=_1a590bcd9_solve_explicit(&_124421_solver, _118817_l,_120417_r);
		if ((_120417_r == nullptr)) {
			return;
		}
		_118744_a.get()._field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_1a58b7778_AssignTypeChecker _125317_checker = _1a58b7778_AssignTypeChecker(_self_.get()._field_s,_118817_l.get()._field_kind,_120417_r,_118744_a.get()._field_setter);
	if (_1a58b8dea_check(&_125317_checker)) {
		_123017_rm.get()._field_model=_120417_r.get()._field_model;
		_122617_lm.get()._field_model=_118817_l.get()._field_model;
	}
}



inline void _1ac571b56___process_end_part_of_multi_assign(_1ac565bd3_ScopeChecker* _self_,jule::Ptr<_1ac563ac1_MultiAssign> _126557_st,jule::Ptr<_1aa095e0d_AssignSt> _126613_a,jule::Ptr<_1aa0959e0_AssignLeft> _126631_lexpr,jule::Ptr<_1a58cee44_Data> _126655_l,jule::Ptr<_1a58cee44_Data> _126669_r) {
	if (_1aa07861b_is_ignore_ident(_126631_lexpr.get()._field_ident)) {
		if (_1a591552e_void(_126669_r.get()._field_kind.ptr())) {
			_1a5867bac_push_err((*_self_)._field_s.ptr(), _126613_a.get()._field_right.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		}
		_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(jule::Any(nullptr));
		return;
	}
	if (_126613_a.get()._field_declarative && _1ac570a9a_is_new_assign_ident(&(*_self_), _126631_lexpr.get()._field_ident)) {
		if (_1ac569489_is_duplicated_ident(&(*_self_), 0LLU,_126631_lexpr.get()._field_ident)) {
			_1a5867bac_push_err((*_self_)._field_s.ptr(), _126631_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126631_lexpr.get()._field_ident)}));
			_1a58680a8_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1ac567784_stop(&(*_self_));
			return;
		}
		jule::Ptr<_1a588601b_Var> _128521_v = jule::new_ptr<_1a588601b_Var>(_1a588601b_Var((*_self_)._field_scope,_126631_lexpr.get()._field_token,_126631_lexpr.get()._field_ident,jule::Bool(),jule::Bool(),_126631_lexpr.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_126631_lexpr.get()._field_reference,jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(_126613_a.get()._field_right,_126669_r)),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>()));
		_1a587bc48_check_var((*_self_)._field_s, _128521_v);
		_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(jule::Any(_128521_v));
		(*_self_)._field_table.get()._field_vars = jule::alloc_for_append((*_self_)._field_table.get()._field_vars,1);(*_self_)._field_table.get()._field_vars.__push(_128521_v);
		(*_self_)._field_scope.get()._field_stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_stmts,1);(*_self_)._field_scope.get()._field_stmts.__push(jule::Any(_128521_v));
		return;
	}
	if (_126631_lexpr.get()._field_mutable || _126631_lexpr.get()._field_reference) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _126631_lexpr.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_126631_lexpr.get()._field_ident)}));
		_1a58680a8_push_suggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((!(_1ac525368_check_assign((*_self_)._field_s,_126655_l,_126669_r,_126613_a.get()._field_setter)))) {
		return;
	}
	
	_1a5871688_check_validity_for_init_expr((*_self_)._field_s, _126655_l.get()._field_mutable,false,_126655_l.get()._field_kind,_126669_r,_126613_a.get()._field_setter);
	_1a58b7778_AssignTypeChecker _132017_checker = _1a58b7778_AssignTypeChecker((*_self_)._field_s,_126655_l.get()._field_kind,_126669_r,_126613_a.get()._field_setter);
	_1a58b8dea_check(&_132017_checker);
	_126557_st.get()._field_l = jule::alloc_for_append(_126557_st.get()._field_l,1);_126557_st.get()._field_l.__push(_126655_l.get()._field_model);
}



inline void _1ac571e42_check_ret_multi_assign(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa095e0d_AssignSt>& _133147_a) {
	jule::Ptr<_1a58cee44_Data> _133217_rd = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _133147_a.get()._field_right);
	if ((_133217_rd == nullptr)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a58cee44_Data>> _133717_r = _1ac548105_get_datas_from_tuple_data(_133217_rd);
	{
		
		if (_133147_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_133717_r.len()))) {
			_case_begin_1a7c9ede4:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _133147_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_133147_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_133717_r.len()))) {
			_case_begin_1a7c9ee6b:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _133147_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a7c9ed8e:;
	}
	jule::Ptr<_1ac563ac1_MultiAssign> _134917_st = jule::new_ptr<_1ac563ac1_MultiAssign>(_1ac563ac1_MultiAssign(jule::Slice<jule::Any>(),_133217_rd.get()._field_model));
	if ((_1a59185a9_tup(_133217_rd.get()._field_kind.ptr()) == nullptr)) {
		_134917_st.get()._field_r=jule::Any(jule::new_ptr<_1ab821599_TupleExprModel>(_1ab821599_TupleExprModel(_133717_r)));
	}
	{
		auto &expr = _133147_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a7ca3bc8:;
		if (it != expr.end()) {
			jule::I64 _1a7ca3c1c_i = it - expr.begin();
			{
				jule::Ptr<_1aa0959e0_AssignLeft> _135821_lexpr = _133147_a.get()._field_left[_1a7ca3c1c_i];
				jule::Ptr<_1a58cee44_Data> _135921_l = nullptr;
				if ((!(_1aa07861b_is_ignore_ident(_135821_lexpr.get()._field_ident))) && ((!(_133147_a.get()._field_declarative)) || (!(_1ac570a9a_is_new_assign_ident(_self_.ptr(), _135821_lexpr.get()._field_ident))))) {
					_135921_l=_1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _135821_lexpr.get()._field_expr);
					if ((_135921_l == nullptr)) {
						goto _iter_next_1a7ca3bc8;
					}
				}
				_1ac571b56___process_end_part_of_multi_assign(_self_.ptr(), _134917_st,_133147_a,_135821_lexpr,_135921_l,_133717_r[_1a7ca3c1c_i]);
			}
			_iter_next_1a7ca3bc8:;
			++it;
			_1a7ca3c1c_i++;
			goto _iter_begin_1a7ca3bc8;
		}
		_iter_end_1a7ca3bc8:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_134917_st));
}



inline void _1ac572261_check_multi_assign(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa095e0d_AssignSt>& _137543_a) {
	{
		auto &_match_expr{ _137543_a.get()._field_right.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>()) {
			_case_begin_1a7ca8826:;
			{
				_1ac571e42_check_ret_multi_assign(_self_, _137543_a);
				return;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08e4ab_UnsafeExpr>>()) {
			_case_begin_1a7ca888c:;
			{
				{
					auto &_match_expr{ _137543_a.get()._field_right.get()._field_kind.operator jule::Ptr<_1aa08e4ab_UnsafeExpr>().get()._field_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>()) {
						_case_begin_1a7ca9e65:;
						{
							_1ac571e42_check_ret_multi_assign(_self_, _137543_a);
							return;
						}
					}
					_match_end_1a7ca9e10:;
				}
			}
		}
		_match_end_1a7ca8727:;
	}
	jule::Slice<jule::Any> _138817_right = _1ac520c59_get_expr_models(_137543_a.get()._field_right.get()._field_kind);
	{
		
		if (_137543_a.get()._field_left.len() > static_cast<jule::I64>(static_cast<jule::I64>(_138817_right.len()))) {
			_case_begin_1a7caad34:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _137543_a.get()._field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;
			}
		}
		else if (_137543_a.get()._field_left.len() < static_cast<jule::I64>(static_cast<jule::I64>(_138817_right.len()))) {
			_case_begin_1a7caad9a:;
			{
				_1a5867bac_push_err(_self_.get()._field_s.ptr(), _137543_a.get()._field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;
			}
		}
		_match_end_1a7caac57:;
	}
	jule::Ptr<_1ab821599_TupleExprModel> _139917_right_tuple = jule::new_ptr<_1ab821599_TupleExprModel>(_1ab821599_TupleExprModel());
	jule::Ptr<_1ac563ac1_MultiAssign> _140117_st = jule::new_ptr<_1ac563ac1_MultiAssign>(_1ac563ac1_MultiAssign(jule::Slice<jule::Any>(),jule::Any(jule::Any(_139917_right_tuple))));
	{
		auto &expr = _137543_a.get()._field_left;
		auto it = expr.begin();
		_iter_begin_1a7cae222:;
		if (it != expr.end()) {
			jule::I64 _1a7cae343_i = it - expr.begin();
			{
				jule::Ptr<_1aa0959e0_AssignLeft> _140621_lexpr = _137543_a.get()._field_left[_1a7cae343_i];
				jule::Ptr<_1a58cee44_Data> _140721_l = nullptr;
				if ((!(_1aa07861b_is_ignore_ident(_140621_lexpr.get()._field_ident))) && ((!(_137543_a.get()._field_declarative)) || (!(_1ac570a9a_is_new_assign_ident(_self_.ptr(), _140621_lexpr.get()._field_ident))))) {
					_140721_l=_1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _140621_lexpr.get()._field_expr);
					if ((_140721_l == nullptr)) {
						goto _iter_next_1a7cae222;
					}
				}
				jule::Ptr<_1aa08d334_Expr> _141721_expr = jule::new_ptr<_1aa08d334_Expr>(_1aa08d334_Expr(_137543_a.get()._field_right.get()._field_token,jule::Bool(),_138817_right[_1a7cae343_i]));
				jule::Ptr<_1a58d2397_Eval> _142121_eval = (((_140721_l != nullptr)) ? (_1a586d70c_evalp(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0),_140721_l.get()._field_kind)) : (_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0))));
				jule::Ptr<_1a58cee44_Data> _142621_r = _1a5902c03_eval_expr(_142121_eval, _141721_expr);
				if ((_142621_r == nullptr)) {
					goto _iter_next_1a7cae222;
				}
				_139917_right_tuple.get()._field_datas = jule::alloc_for_append(_139917_right_tuple.get()._field_datas,1);_139917_right_tuple.get()._field_datas.__push(_142621_r);
				_1ac571b56___process_end_part_of_multi_assign(_self_.ptr(), _140117_st,_137543_a,_140621_lexpr,_140721_l,_142621_r);
			}
			_iter_next_1a7cae222:;
			++it;
			_1a7cae343_i++;
			goto _iter_begin_1a7cae222;
		}
		_iter_end_1a7cae222:;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_140117_st));
}



inline void _1ac572580_check_assign_st(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa095e0d_AssignSt> _143939_a) {
	{
		
		if (_1aa07aad5_is_postfix_op(_143939_a.get()._field_setter._field_kind)) {
			_case_begin_1a7cb6dd9:;
			{
				_1ac5706e3_check_postfix(_self_, _143939_a);
			}
		}
		else if ((_143939_a.get()._field_left.len() == 1LL) && (!(_143939_a.get()._field_declarative))) {
			_case_begin_1a7cb6966:;
			{
				_1ac57145d_check_single_assign(_self_, _143939_a);
			}
		}
		else {
			_case_begin_1a7cb65e2:;
			{
				_1ac572261_check_multi_assign(_self_, _143939_a);
			}
		}
		_match_end_1a7cb6548:;
	}
}



inline jule::Ptr<_1ac56022c_Scope> _1ac572a14_check_case_scope(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ac56463d_Case>& _145037_c,jule::Ptr<_1aa09632b_ScopeTree>& _145052_tree) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _145117_ssc = _1ac577eae_new_child_checker(_self_);
	_145117_ssc.get()._field_cse=static_cast<jule::U64>(static_cast<jule::U64>(_145037_c));
	return _1ac56a80e_check_child_sc(_self_, _145052_tree,_145117_ssc);
}



inline jule::Ptr<_1ac56463d_Case> _1ac573152_check_case(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ac563ede_Match> _145634_m,jule::I64 _145645_i,jule::Ptr<_1aa09a93a_Case> _145657_c,jule::Ptr<_1a58cee44_Data> _145687_expr) {
	jule::Ptr<_1ac56463d_Case> _145717__case = _145634_m.get()._field_cases[_145645_i];
	_145717__case.get()._field_exprs=jule::Slice<jule::Ptr<_1a58cee44_Data>>::alloc(0LL,static_cast<jule::I64>(_145657_c.get()._field_exprs.len()));
	jule::Bool _145917_generic_matched = false;
	jule::Ptr<_1a58d2397_Eval> _146017_eval = _1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0));
	{
		auto &expr = _145657_c.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a7cbd82a:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a7cbd93a_e = *it;
			{
				jule::Ptr<_1a58cee44_Data> _146221_d = _1a5902494_eval_expr_kind(_146017_eval, _1a7cbd93a_e.get()._field_kind);
				if ((_146221_d == nullptr)) {
					goto _iter_next_1a7cbd82a;
				}
				if (_145634_m.get()._field_type_match) {
					_145717__case.get()._field_exprs = jule::alloc_for_append(_145717__case.get()._field_exprs,1);_145717__case.get()._field_exprs.__push(_146221_d);
					if ((_1ac51eb15_count_match_type(_145634_m,_146221_d.get()._field_kind) > 1LL)) {
						_1a5867bac_push_err(_self_.get()._field_s.ptr(), _1a7cbd93a_e.get()._field_token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_146221_d.get()._field_kind.ptr()))}));
					}
					if (_145687_expr.get()._field_kind.get()._field_generic) {
						_145917_generic_matched=_145917_generic_matched || _1a591496d_equals(_145687_expr.get()._field_kind, _146221_d.get()._field_kind);
					} else {
						jule::Ptr<_1ac44770d_Trait> _147425_trt = _1a5918004_trt(_145687_expr.get()._field_kind.ptr());
						if ((_147425_trt != nullptr)) {
							_1a586e7a7_check_type_compatibility(_self_.get()._field_s, _145687_expr.get()._field_kind,_146221_d.get()._field_kind,_1a7cbd93a_e.get()._field_token);
						}
					}
					goto _iter_next_1a7cbd82a;
				}
				if (_146221_d.get()._field_decl) {
					_1a5867bac_push_err(_self_.get()._field_s.ptr(), _1a7cbd93a_e.get()._field_token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1a7cbd82a;
				}
				_145717__case.get()._field_exprs = jule::alloc_for_append(_145717__case.get()._field_exprs,1);_145717__case.get()._field_exprs.__push(_146221_d);
				_1a58b7778_AssignTypeChecker _149121_checker = _1a58b7778_AssignTypeChecker(_self_.get()._field_s,_145687_expr.get()._field_kind,_146221_d,_1a7cbd93a_e.get()._field_token);
				_1a58b8dea_check(&_149121_checker);
			}
			_iter_next_1a7cbd82a:;
			++it;
			goto _iter_begin_1a7cbd82a;
		}
		_iter_end_1a7cbd82a:;
	}
	if (((!(_145634_m.get()._field_type_match)) || (!(_145687_expr.get()._field_kind.get()._field_generic))) || _145917_generic_matched) {
		_145717__case.get()._field_scope=_1ac572a14_check_case_scope(_self_, _145717__case,_145657_c.get()._field_scope);
	}
	return _145717__case;
}



inline void _1ac57362a_check_cases(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09b188_MatchCase>& _150536_m,jule::Ptr<_1ac563ede_Match> _150555_rm,jule::Ptr<_1a58cee44_Data> _150571_expr) {
	_150555_rm.get()._field_cases=jule::Slice<jule::Ptr<_1ac56463d_Case>>::alloc(0LL,static_cast<jule::I64>(_150536_m.get()._field_cases.len()));
	{
		auto &expr = _150536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a7cc859e:;
		if (it != expr.end()) {
			jule::I64 _1a7cc9c10_i = it - expr.begin();
			{
				jule::Ptr<_1ac56463d_Case> _150821__case = jule::new_ptr<_1ac56463d_Case>(_1ac56463d_Case(_150555_rm,jule::Ptr<_1ac56022c_Scope>(),jule::Slice<jule::Ptr<_1a58cee44_Data>>(),jule::Ptr<_1ac56463d_Case>()));
				if ((_1a7cc9c10_i > 0LL)) {
					_150555_rm.get()._field_cases[(_1a7cc9c10_i - 1LL)].get()._field_next=_150821__case;
				}
				_150555_rm.get()._field_cases = jule::alloc_for_append(_150555_rm.get()._field_cases,1);_150555_rm.get()._field_cases.__push(_150821__case);
			}
			_iter_next_1a7cc859e:;
			++it;
			_1a7cc9c10_i++;
			goto _iter_begin_1a7cc859e;
		}
		_iter_end_1a7cc859e:;
	}
	if ((_150555_rm.get()._field_default != nullptr) && (_150536_m.get()._field_cases.len() > 0LL)) {
		_150555_rm.get()._field_cases[(_150555_rm.get()._field_cases.len() - 1LL)].get()._field_next=_150555_rm.get()._field_default;
	}
	{
		auto &expr = _150536_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a7ccca7b:;
		if (it != expr.end()) {
			jule::I64 _1a7ccce11_i = it - expr.begin();
			jule::Ptr<_1aa09a93a_Case> _1a7ccd098_c = *it;
			{
				_1ac573152_check_case(_self_, _150555_rm,_1a7ccce11_i,_1a7ccd098_c,_150571_expr);
			}
			_iter_next_1a7ccca7b:;
			++it;
			_1a7ccce11_i++;
			goto _iter_begin_1a7ccca7b;
		}
		_iter_end_1a7ccca7b:;
	}
}



inline jule::Ptr<_1ac56463d_Case> _1ac573aae_check_default(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ac563ede_Match> _152637_m,jule::Ptr<_1aa09942d_Else> _152652_d) {
	jule::Ptr<_1ac56463d_Case> _152717_def = jule::new_ptr<_1ac56463d_Case>(_1ac56463d_Case(_152637_m,jule::Ptr<_1ac56022c_Scope>(),jule::Slice<jule::Ptr<_1a58cee44_Data>>(),jule::Ptr<_1ac56463d_Case>()));
	_152717_def.get()._field_scope=_1ac572a14_check_case_scope(_self_, _152717_def,_152652_d.get()._field_scope);
	return _152717_def;
}



inline void _1ac573dcd_check_comptime_panic(_1ac565bd3_ScopeChecker* _self_,jule::Ptr<_1ac56022c_Scope>& _153440_s) {
	if ((_153440_s.get()._field_stmts.len() != 1LL)) {
		return;
	}
	jule::Any _153913_stmt = _153440_s.get()._field_stmts[0LL];
	{
		auto &_match_expr{ _153913_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a7cd1e37:;
			{
				jule::Ptr<_1a58cee44_Data> _154217_d = _153913_stmt.operator jule::Ptr<_1a58cee44_Data>();
				{
					auto &_match_expr{ _154217_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>()) {
						_case_begin_1a7cd2cb2:;
						{
							jule::Ptr<_1ab823887_BuiltinPanicCallExprModel> _154521_m = _154217_d.get()._field_model.operator jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>();
							{
								auto &_match_expr{ _154521_m.get()._field_expr };
								
								if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
									_case_begin_1a7cd3c2a:;
									{
										jule::Ptr<_1ac4d0ec2_Const> _154825_c = _154521_m.get()._field_expr.operator jule::Ptr<_1ac4d0ec2_Const>();
										if (_1ac4d5b97_is_str(_154825_c.ptr())) {
											_1a5867bac_push_err((*_self_)._field_s.ptr(), (*((*_self_)._field_called_from)),jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_1ac4d30e5_read_str(_154825_c.ptr()))}));
										}
									}
								}
								_match_end_1a7cd3bc5:;
							}
						}
					}
					_match_end_1a7cd2c5c:;
				}
			}
		}
		_match_end_1a7cd1dd2:;
	}
}



inline void _1ac5742c9_push_type_match(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1ac563ede_Match> _155739_tm,jule::Ptr<_1aa09b188_MatchCase>& _155756_m) {
	if (_155739_tm.get()._field_expr.get()._field_kind.get()._field_generic) {
		{
			auto &expr = _155739_tm.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1a7cd6458:;
			if (it != expr.end()) {
				jule::Ptr<_1ac56463d_Case> _1a7cd6524_c = *it;
				{
					if ((_1a7cd6524_c.get()._field_scope != nullptr)) {
						_1ac573dcd_check_comptime_panic(_self_.ptr(), _1a7cd6524_c.get()._field_scope);
						_155739_tm.get()._field_default=_1a7cd6524_c;
						_155739_tm.get()._field_cases=nullptr;
						goto _julec_label_push;
					}
				}
				_iter_next_1a7cd6458:;
				++it;
				goto _iter_begin_1a7cd6458;
			}
			_iter_end_1a7cd6458:;
		}
		if ((_155756_m.get()._field_default != nullptr)) {
			_155739_tm.get()._field_cases=nullptr;
			_155739_tm.get()._field_default=_1ac573aae_check_default(_self_, _155739_tm,_155756_m.get()._field_default);
			if ((_155739_tm.get()._field_default != nullptr)) {
				_1ac573dcd_check_comptime_panic(_self_.ptr(), _155739_tm.get()._field_default.get()._field_scope);
			}
		}
		return;
	}
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_155739_tm));
}



inline void _1ac5745e8_check_type_match(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09b188_MatchCase>& _158241_m) {
	jule::Ptr<_1a58cee44_Data> _158317_d = _1a590284b_eval(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _158241_m.get()._field_expr);
	if ((_158317_d == nullptr)) {
		return;
	}
	if ((!(_158317_d.get()._field_kind.get()._field_generic)) && (!(((_1a591673e_prim(_158317_d.get()._field_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim(_158317_d.get()._field_kind.ptr()).ptr())) || (_1a5918004_trt(_158317_d.get()._field_kind.ptr()) != nullptr)))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _158241_m.get()._field_expr.get()._field_token,jule::Str("type-match must be have <any>, <trait> or <generic> typed expression", 68),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ac563ede_Match> _159417_tm = jule::new_ptr<_1ac563ede_Match>(_1ac563ede_Match(_158317_d,true,jule::Slice<jule::Ptr<_1ac56463d_Case>>(),jule::Ptr<_1ac56463d_Case>()));
	if ((!(_159417_tm.get()._field_expr.get()._field_kind.get()._field_generic)) && (_158241_m.get()._field_default != nullptr)) {
		_159417_tm.get()._field_default=_1ac573aae_check_default(_self_, _159417_tm,_158241_m.get()._field_default);
	}
	_1ac57362a_check_cases(_self_, _158241_m,_159417_tm,_158317_d);
	_1ac5742c9_push_type_match(_self_, _159417_tm,_158241_m);
}



inline void _1ac574917_check_common_match(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09b188_MatchCase>& _160743_m) {
	jule::Ptr<_1a58cee44_Data> _160817_d = nullptr;
	if ((_160743_m.get()._field_expr == nullptr)) {
		_160817_d=jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ac4d17a8_new_bool(true)));
		_160817_d.get()._field_model=jule::Any(_160817_d.get()._field_constant);
	} else {
		_160817_d=_1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _160743_m.get()._field_expr);
		if ((_160817_d == nullptr)) {
			return;
		}
	}
	jule::Ptr<_1ac563ede_Match> _162217_mc = jule::new_ptr<_1ac563ede_Match>(_1ac563ede_Match(_160817_d,jule::Bool(),jule::Slice<jule::Ptr<_1ac56463d_Case>>(),jule::Ptr<_1ac56463d_Case>()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_162217_mc));
	if ((_160743_m.get()._field_default != nullptr)) {
		_162217_mc.get()._field_default=_1ac573aae_check_default(_self_, _162217_mc,_160743_m.get()._field_default);
	}
	_1ac57362a_check_cases(_self_, _160743_m,_162217_mc,_160817_d);
}



inline void _1ac574c36_check_match(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09b188_MatchCase> _163435_m) {
	if (_163435_m.get()._field_type_match) {
		_1ac5745e8_check_type_match(_self_, _163435_m);
		return;
	}
	_1ac574917_check_common_match(_self_, _163435_m);
}



inline void _1ac575055_check_fall(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0955c2_FallSt> _164230_f) {
	if (((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_stmts.len() + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_scope.get()._field_stmts.len())))) || _1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _164230_f.get()._field_token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;
	}
	_1ac56463d_Case* _165017__case = ((_1ac56463d_Case*)(_self_.get()._field_cse));
	if ((_165017__case->_field_next == nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _164230_f.get()._field_token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;
	}
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(jule::new_ptr<_1ac564a5b_FallSt>(_1ac564a5b_FallSt(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_165017__case->_field_next)))))))));
}



inline jule::Ptr<_1ac56252b_BreakSt> _1ac57540c_check_break_with_label(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09862a_BreakSt> _166242_b) {
	jule::Ptr<_1ac56252b_BreakSt> _166317_brk = _1ac5757b4_check_plain_break(_self_, _166242_b);
	if ((_166317_brk == nullptr)) {
		return nullptr;
	}
	_166317_brk.get()._field_it=0LLU;
	_166317_brk.get()._field_mtch=0LLU;
	jule::Ptr<_1ac565397_ScopeLabel> _167317_label = _1ac4dc96d_find_label_parent(_166242_b.get()._field_label._field_kind,_self_.get()._field_parent);
	if ((_167317_label == nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	_167317_label.get()._field_used=true;
	if ((_167317_label.get()._field_pos + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>(_167317_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		return nullptr;
	}
	jule::I64 _168613_i = (_167317_label.get()._field_pos + 1LL);
	if (_168613_i >= static_cast<jule::I64>(static_cast<jule::I64>(_167317_label.get()._field_scope.get()._field_scope.get()._field_stmts.len()))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
	} else {
		jule::Any _169021_st = _167317_label.get()._field_scope.get()._field_scope.get()._field_stmts[_168613_i];
		{
			auto &_match_expr{ _169021_st };
			
			if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
				_case_begin_1a7d0d826:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_1ac5613a4_InfIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac561be0_RangeIter>>()) {
				_case_begin_1a7d0d88c:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_1ac561be0_RangeIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac5617c2_WhileIter>>()) {
				_case_begin_1a7d0d903:;
				{
					_166317_brk.get()._field_it=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_1ac5617c2_WhileIter>()));
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac563ede_Match>>()) {
				_case_begin_1a7d0d969:;
				{
					_166317_brk.get()._field_mtch=static_cast<jule::U64>(static_cast<jule::U64>(_169021_st.operator jule::Ptr<_1ac563ede_Match>()));
				}
			}
			else {
				_case_begin_1a7d0d738:;
				{
					_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
				}
			}
			_match_end_1a7d0d6d3:;
		}
	}
	if ((_166317_brk.get()._field_it != 0LLU)) {
		if ((!(_1ac56e5c1_check_valid_break_label(_self_, _166317_brk.get()._field_it)))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		}
	}
	if ((_166317_brk.get()._field_mtch != 0LLU)) {
		if ((!(_1ac56e5c1_check_valid_break_label(_self_, _166317_brk.get()._field_mtch)))) {
			_1a5867bac_push_err(_self_.get()._field_s.ptr(), _166242_b.get()._field_label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_166242_b.get()._field_label._field_kind)}));
		}
	}
	return _166317_brk;
}



inline jule::Ptr<_1ac56252b_BreakSt> _1ac5757b4_check_plain_break(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09862a_BreakSt> _171537_b) {
	if (_1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _172117_scope = _self_;
	_julec_label_iter:;
	{
		
		if ((((_172117_scope.get()._field_it == 0LLU) && (_172117_scope.get()._field_cse == 0LLU)) && (_172117_scope.get()._field_parent != nullptr)) && (_172117_scope.get()._field_owner == nullptr)) {
			_case_begin_1a7d16268:;
			{
				_172117_scope=_172117_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_172117_scope.get()._field_it != 0LLU)) {
			_case_begin_1a7d162e0:;
			{
				return jule::new_ptr<_1ac56252b_BreakSt>(_1ac56252b_BreakSt(_172117_scope.get()._field_it,jule::U64()));
			}
		}
		else if ((_172117_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a7d16367:;
			{
				return jule::new_ptr<_1ac56252b_BreakSt>(_1ac56252b_BreakSt(jule::U64(),static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((_1ac56463d_Case*)(_172117_scope.get()._field_cse))->_field_owner)))))));
			}
		}
		_match_end_1a7d1619c:;
	}
	_1a5867bac_push_err(_self_.get()._field_s.ptr(), _171537_b.get()._field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;
}



inline void _1ac575ad3_check_break(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09862a_BreakSt> _173931_b) {
	if (_173931_b.get()._field_label._field_id != static_cast<jule::U64>(0LLU)) {
		jule::Ptr<_1ac56252b_BreakSt> _174121_brk = _1ac57540c_check_break_with_label(_self_, _173931_b);
		_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174121_brk));
		return;
	}
	jule::Ptr<_1ac56252b_BreakSt> _174617_brk = _1ac5757b4_check_plain_break(_self_, _173931_b);
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_174617_brk));
}



inline void _1ac575e02_check_ret(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa0974a3_RetSt> _175033_r) {
	if (_1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _175033_r.get()._field_token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ac564e79_RetSt> _175517_rt = jule::new_ptr<_1ac564e79_RetSt>(_1ac564e79_RetSt(_1ac568114_get_root(_self_).get()._field_owner,jule::Slice<jule::Ptr<_1a588601b_Var>>(),jule::Any()));
	_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_175517_rt));
	jule::Ptr<_1a58c648a_RetTypeChecker> _176017_rtc = jule::new_ptr<_1a58c648a_RetTypeChecker>(_1a58c648a_RetTypeChecker(_self_,_175517_rt.get()._field_func,jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1aa08d334_Expr>>(),jule::Slice<jule::Ptr<_1a588601b_Var>>(),_175033_r.get()._field_token,jule::Any()));
	jule::Bool _176513_ok = _1a58c7788_check(_176017_rtc.ptr(), _175033_r.get()._field_expr);
	if ((!(_176513_ok))) {
		return;
	}
	if ((_175033_r.get()._field_expr == nullptr) && (_176017_rtc.get()._field_vars.len() == 0LL)) {
		return;
	}
	_175517_rt.get()._field_vars=_176017_rtc.get()._field_vars;
	if ((_175033_r.get()._field_expr != nullptr)) {
		_175517_rt.get()._field_expr=_176017_rtc.get()._field_model;
	}
}



inline void _1ac576221_check_use_expr(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa08d752_UseExpr> _178134_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;
	}
	if (_1ac567d39_is_deferred(_self_)) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	}
	if ((_self_.get()._field_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len()))) {
		_1a5867bac_push_err(_self_.get()._field_s.ptr(), _178134_ue.get()._field_token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	}
}



inline void _1ac576540_check_node(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Any& _179835_node) {
	{
		auto &_match_expr{ _179835_node };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09632b_ScopeTree>>()) {
			_case_begin_1a7d28533:;
			{
				_1ac56aed5_check_anon_scope(_self_, _179835_node.operator jule::Ptr<_1aa09632b_ScopeTree>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa097085_VarDecl>>()) {
			_case_begin_1a7d286a9:;
			{
				_1ac5697a8_check_var_decl(_self_, _179835_node.operator jule::Ptr<_1aa097085_VarDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09a330_TypeAliasDecl>>()) {
			_case_begin_1a7d28896:;
			{
				_1ac569ac7_check_type_alias_decl(_self_, _179835_node.operator jule::Ptr<_1aa09a330_TypeAliasDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08d334_Expr>>()) {
			_case_begin_1a7d28115:;
			{
				_1ac56b700_check_expr(_self_, _179835_node.operator jule::Ptr<_1aa08d334_Expr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08e8c9_CoExpr>>()) {
			_case_begin_1a7d28764:;
			{
				_1ac56ba1e_check_co_expr(_self_, _179835_node.operator jule::Ptr<_1aa08e8c9_CoExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa099a38_Conditional>>()) {
			_case_begin_1a7d28a1c:;
			{
				_1ac56c59c_check_conditional(_self_, _179835_node.operator jule::Ptr<_1aa099a38_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0978c1_Iter>>()) {
			_case_begin_1a7d28a83:;
			{
				_1ac56dd1d_check_iter(_self_, _179835_node.operator jule::Ptr<_1aa0978c1_Iter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa098a48_ContSt>>()) {
			_case_begin_1a7d28ae9:;
			{
				_1ac56ec86_check_cont(_self_, _179835_node.operator jule::Ptr<_1aa098a48_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa094c86_LabelSt>>()) {
			_case_begin_1a7d28b60:;
			{
				_1ac5700a5_check_label(_self_, _179835_node.operator jule::Ptr<_1aa094c86_LabelSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0951a4_GotoSt>>()) {
			_case_begin_1a7d28bc6:;
			{
				_1ac5703c4_push_goto(_self_, _179835_node.operator jule::Ptr<_1aa0951a4_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa095e0d_AssignSt>>()) {
			_case_begin_1a7d28c3c:;
			{
				_1ac572580_check_assign_st(_self_, _179835_node.operator jule::Ptr<_1aa095e0d_AssignSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09b188_MatchCase>>()) {
			_case_begin_1a7d28ca3:;
			{
				_1ac574c36_check_match(_self_, _179835_node.operator jule::Ptr<_1aa09b188_MatchCase>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0955c2_FallSt>>()) {
			_case_begin_1a7d28d19:;
			{
				_1ac575055_check_fall(_self_, _179835_node.operator jule::Ptr<_1aa0955c2_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09862a_BreakSt>>()) {
			_case_begin_1a7d28d80:;
			{
				_1ac575ad3_check_break(_self_, _179835_node.operator jule::Ptr<_1aa09862a_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0974a3_RetSt>>()) {
			_case_begin_1a7d28de6:;
			{
				_1ac575e02_check_ret(_self_, _179835_node.operator jule::Ptr<_1aa0974a3_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08d752_UseExpr>>()) {
			_case_begin_1a7d28e5c:;
			{
				_1ac576221_check_use_expr(_self_, _179835_node.operator jule::Ptr<_1aa08d752_UseExpr>());
			}
		}
		else {
			_case_begin_1a7d2829c:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a7d281c0:;
	}
}



inline void _1ac576782_check_result(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	_1dd582b25_Node _183817_stmt = _self_.get()._field_tree.get()._field_stmts[(_self_.get()._field_tree.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _183817_stmt._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08d752_UseExpr>>()) {
			_case_begin_1a7d35375:;
			{
				jule::Ptr<_1aa08d752_UseExpr> _184121_ue = _183817_stmt._field_data.operator jule::Ptr<_1aa08d752_UseExpr>();
				jule::Ptr<_1a58cee44_Data> _184221_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _184121_ue.get()._field_expr);
				if ((_184221_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_184221_d));
				jule::Ptr<_1a58c648a_RetTypeChecker> _184721_rtc = jule::new_ptr<_1a58c648a_RetTypeChecker>(_1a58c648a_RetTypeChecker(_self_,jule::Ptr<_1ab836218_FnIns>(),_1a5891730_get_result_types(_self_.get()._field_result),jule::Slice<jule::Ptr<_1aa08d334_Expr>>(),jule::Slice<jule::Ptr<_1a588601b_Var>>(),_184121_ue.get()._field_expr.get()._field_token,jule::Any()));
				_1a58c7788_check(_184721_rtc.ptr(), _184121_ue.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08d334_Expr>>()) {
			_case_begin_1a7d353db:;
			{
				jule::Ptr<_1aa08d334_Expr> _185421_expr = _183817_stmt._field_data.operator jule::Ptr<_1aa08d334_Expr>();
				jule::Ptr<_1a58cee44_Data> _185521_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_.get()._field_s, jule::Trait<_1a5932ea8_Lookup>(_self_, 0)), _185421_expr);
				if ((_185521_d == nullptr)) {
					return;
				}
				_self_.get()._field_scope.get()._field_stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_stmts,1);_self_.get()._field_scope.get()._field_stmts.__push(jule::Any(_185521_d));
				{
					auto &_match_expr{ _185521_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a7d3a105:;
						{
							jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel> _186225_m = _185521_d.get()._field_model.operator jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>();
							_1ac56b3d1_process_error_call(_self_, _186225_m,_185421_expr.get()._field_token);
						}
					}
					else {
						_case_begin_1a7d3a534:;
						{
							return;
						}
					}
					_match_end_1a7d3a4ce:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0951a4_GotoSt>>() || _match_expr.type_is<jule::Ptr<_1aa09862a_BreakSt>>() || _match_expr.type_is<jule::Ptr<_1aa098a48_ContSt>>() || _match_expr.type_is<jule::Ptr<_1aa0974a3_RetSt>>()) {
			_case_begin_1a7d34907:;
			{
				_1ac576540_check_node(_self_, _183817_stmt._field_data);
			}
		}
		else {
			_case_begin_1a7d34891:;
			{
				_1ac576540_check_node(_self_, _183817_stmt._field_data);
				return;
			}
		}
		_match_end_1a7d34819:;
	}
	_self_.get()._field_result=nullptr;
}



inline void _1ac5769c4_check_tree(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_tree.get()._field_stmts.len())); (_self_.get()._field_i)++) {
		{
			_1dd582b25_Node _188421_stmt = _self_.get()._field_tree.get()._field_stmts[_self_.get()._field_i];
			_1ac576540_check_node(_self_, _188421_stmt._field_data);
			if (_1ac567a5e_stopped(_self_.ptr())) {
				return;
			}
		}
	_iter_next_1a7d3d180:;
	}
	_iter_end_1a7d3d180:;
	if ((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_stmts.len() != 0LL)) {
		_1ac576782_check_result(_self_);
	}
}



inline void _1ac576dc0_check_goto(_1ac565bd3_ScopeChecker* _self_,jule::Ptr<_1ac5657b5_ScopeGoto>& _189534_gt,jule::Ptr<_1ac565397_ScopeLabel>& _189555_label) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _189617_gtsc = _189534_gt.get()._field_scope;
	while ((_189617_gtsc.get()._field_child_index - 1LL) > _189555_label.get()._field_scope.get()._field_child_index) {
		{
			_189617_gtsc=_189617_gtsc.get()._field_parent;
		}
	_iter_next_1a7d42173:;
	}
	_iter_end_1a7d42173:;
	jule::I64 _190117_n = 0LL;
	if (_189617_gtsc.get()._field_scope == _189555_label.get()._field_scope.get()._field_scope) {
		if (_189534_gt.get()._field_pos > _189555_label.get()._field_pos) {
			return;
		}
		_190117_n=_189534_gt.get()._field_pos;
	}
	jule::I64 _191417_i = (_189555_label.get()._field_pos - 1LL);
	if ((_190117_n == 0LL)) {
		{
			auto &expr = _189555_label.get()._field_scope.get()._field_scope.get()._field_stmts;
			auto it = expr.begin();
			_iter_begin_1a7d44d24:;
			if (it != expr.end()) {
				jule::I64 _1a7d45044_j = it - expr.begin();
				jule::Any _1a7d45286_stmt = *it;
				{
					if (_1ac507c30_stmt_is_goto_scope(_1a7d45286_stmt,_189617_gtsc.get()._field_scope)) {
						_190117_n=_1a7d45044_j;
						goto _iter_end_1a7d44d24;
					}
				}
				_iter_next_1a7d44d24:;
				++it;
				_1a7d45044_j++;
				goto _iter_begin_1a7d44d24;
			}
			_iter_end_1a7d44d24:;
		}
	}
	for (; _191417_i >= _190117_n; (_191417_i)--) {
		{
			jule::Any _192721_stmt = _189555_label.get()._field_scope.get()._field_scope.get()._field_stmts[_191417_i];
			if (_1ac52a1b4_st_is_def(_192721_stmt)) {
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _189534_gt.get()._field_gt.get()._field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_189534_gt.get()._field_gt.get()._field_label._field_kind)}));
				return;
			}
		}
	_iter_next_1a7d44a49:;
	}
	_iter_end_1a7d44a49:;
}



inline void _1ac577112_check_gotos(_1ac565bd3_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1a7d48542:;
		if (it != expr.end()) {
			jule::Ptr<_1ac5657b5_ScopeGoto> _1a7d48586_gt = *it;
			{
				jule::Ptr<_1ac565397_ScopeLabel> _193721_label = _1ac569005_find_label_all(&(*_self_), _1a7d48586_gt.get()._field_gt.get()._field_label._field_kind);
				if ((_193721_label == nullptr)) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _1a7d48586_gt.get()._field_gt.get()._field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_1a7d48586_gt.get()._field_gt.get()._field_label._field_kind)}));
					goto _iter_next_1a7d48542;
				}
				_193721_label.get()._field_used=true;
				_1ac576dc0_check_goto(&(*_self_), _1a7d48586_gt,_193721_label);
			}
			_iter_next_1a7d48542:;
			++it;
			goto _iter_begin_1a7d48542;
		}
		_iter_end_1a7d48542:;
	}
}



inline void _1ac577354_check_labels(_1ac565bd3_ScopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1a7d4b688:;
		if (it != expr.end()) {
			jule::Ptr<_1ac565397_ScopeLabel> _1a7d4b732_l = *it;
			{
				if ((!(_1a7d4b732_l.get()._field_used))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _1a7d4b732_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a7d4b732_l.get()._field_label.get()._field_ident)}));
				}
			}
			_iter_next_1a7d4b688:;
			++it;
			goto _iter_begin_1a7d4b688;
		}
		_iter_end_1a7d4b688:;
	}
}



inline void _1ac577596_check_vars(_1ac565bd3_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a7d4d1e5:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a7d4d426_v = *it;
			{
				if ((((!(_1a7d4d426_v.get()._field_used)) && (!(_1aa07861b_is_ignore_ident(_1a7d4d426_v.get()._field_ident)))) && (!(_1aa078929_is_anon_ident(_1a7d4d426_v.get()._field_ident)))) && (_1a7d4d426_v.get()._field_ident != jule::Str("self", 4))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _1a7d4d426_v.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a7d4d426_v.get()._field_ident)}));
				}
			}
			_iter_next_1a7d4d1e5:;
			++it;
			goto _iter_begin_1a7d4d1e5;
		}
		_iter_end_1a7d4d1e5:;
	}
}



inline void _1ac5777d8_check_aliases(_1ac565bd3_ScopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a7d50e73:;
		if (it != expr.end()) {
			jule::Ptr<_1a5912d12_TypeAlias> _1a7d50eea_a = *it;
			{
				if (((!(_1a7d50eea_a.get()._field_used)) && (!(_1aa07861b_is_ignore_ident(_1a7d50eea_a.get()._field_ident)))) && (!(_1aa078929_is_anon_ident(_1a7d50eea_a.get()._field_ident)))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _1a7d50eea_a.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_1a7d50eea_a.get()._field_ident)}));
				}
			}
			_iter_next_1a7d50e73:;
			++it;
			goto _iter_begin_1a7d50e73;
		}
		_iter_end_1a7d50e73:;
	}
}



inline void _1ac577bd4_check(jule::Ptr<_1ac565bd3_ScopeChecker> _self_,jule::Ptr<_1aa09632b_ScopeTree>& _197330_tree,jule::Ptr<_1ac56022c_Scope>& _197353_s) {
	_197353_s.get()._field_deferred=_197330_tree.get()._field_deferred;
	_197353_s.get()._field_unsafety=_197330_tree.get()._field_unsafety;
	jule::I64 _197713_errors = _self_.get()._field_s.get()._field_errors.len();
	_self_.get()._field_tree=_197330_tree;
	_self_.get()._field_scope=_197353_s;
	_1ac5769c4_check_tree(_self_);
	if (_197713_errors == static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_s.get()._field_errors.len()))) {
		_1ac577596_check_vars(_self_.ptr());
		_1ac5777d8_check_aliases(_self_.ptr());
		if (_1ac567542_is_root(_self_.ptr())) {
			_1ac577112_check_gotos(_self_.ptr());
			_1ac577354_check_labels(_self_.ptr());
		}
	}
}



inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac577eae_new_child_checker(jule::Ptr<_1ac565bd3_ScopeChecker> _self_) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _199717_base = _1ac539d3e_new_scope_checker_base(_self_.get()._field_s,nullptr);
	_199717_base.get()._field_parent=_self_;
	_199717_base.get()._field_labels=_self_.get()._field_labels;
	_199717_base.get()._field_gotos=_self_.get()._field_gotos;
	_199717_base.get()._field_child_index=static_cast<jule::I64>((_self_.get()._field_child_index + 1LL));
	return _199717_base;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac565bd3_ScopeChecker _Src) {
	_Stream << "ScopeChecker{";
	_Stream << "called_from:" << _Src._field_called_from << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ac579631_check_cdef(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _1630_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
			_case_begin_1a7d58e37:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ab832324_Fn>().get()._field_cpp_linked) {
					goto _match_end_1a7d58ec0;
				}
				goto _case_begin_1a7d591e0;
			}
		}
		else {
			_case_begin_1a7d591e0:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_1630_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d58ec0:;
	}
	if ((_1630_d.get()._field_args.len() > 0LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _1630_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ac579950_check_typedef(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _3233_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a7d5cd3c:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_cpp_linked) {
					goto _match_end_1a7d5c6aa;
				}
				goto _case_begin_1a7d5c8ca;
			}
		}
		else {
			_case_begin_1a7d5c8ca:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_3233_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d5c6aa:;
	}
	if ((_3233_d.get()._field_args.len() > 0LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _3233_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ac579c6e_check_derive(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _4832_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a7d612d5:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_cpp_linked))) {
					goto _match_end_1a7d60b53;
				}
				goto _case_begin_1a7d60d73;
			}
		}
		else {
			_case_begin_1a7d60d73:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7d60b53:;
	}
	if ((_4832_d.get()._field_args.len() == 0LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;
	} else if ((_4832_d.get()._field_args.len() > 1LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	{
		auto &_match_expr{ _4832_d.get()._field_args[0LL]._field_kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a7d6551a:;
		}
		else {
			_case_begin_1a7d63c33:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _4832_d.get()._field_args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_4832_d.get()._field_args[0LL]._field_kind)}));
			}
		}
		_match_end_1a7d65152:;
	}
}



inline void _1ac57a08d_check_namespace(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _7439_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a7d67077:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_cpp_linked))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
			_case_begin_1a7d67440:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1ab832324_Fn>().get()._field_cpp_linked))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a7d674a6:;
			{
				if ((!((*_self_)._field_o.operator jule::Ptr<_1a588601b_Var>().get()._field_cpp_linked))) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a7d67330:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_7439_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d67110:;
	}
	if ((_7439_d.get()._field_args.len() == 0LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;
	} else if ((_7439_d.get()._field_args.len() > 1LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _7439_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1aa07563a_Token _10213_arg = _7439_d.get()._field_args[0LL];
	if (_10213_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_10213_arg._field_kind[0LL] != '\"') {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _10213_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_7439_d.get()._field_args[0LL]._field_kind=_10213_arg._field_kind.slice(1LL,(_10213_arg._field_kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a7d72a88:;
			{
				if ((_1a590c636_find_directive((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1dd583043_Directive> _11925_typedef = jule::new_ptr<_1dd583043_Directive>(_1dd583043_Directive(_7439_d.get()._field_tag,jule::Slice<_1aa07563a_Token>()));
					_11925_typedef.get()._field_tag._field_kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1dd583043_Directive>>({_11925_typedef}));
				}
			}
		}
		_match_end_1a7d7215e:;
	}
}



inline void _1ac57a3ac_check_deprecated(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _12840_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a7d753b5:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_cpp_linked) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
			_case_begin_1a7d75690:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1ab832324_Fn>().get()._field_cpp_linked) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a7d75706:;
			{
				if ((*_self_)._field_o.operator jule::Ptr<_1a588601b_Var>().get()._field_cpp_linked) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
				}
			}
		}
		else {
			_case_begin_1a7d755d5:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_12840_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d75580:;
	}
	if ((_12840_d.get()._field_args.len() == 0LL)) {
		return;
	}
	if ((_12840_d.get()._field_args.len() > 1LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _12840_d.get()._field_args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	_1aa07563a_Token _15613_arg = _12840_d.get()._field_args[0LL];
	if (_15613_arg._field_id != static_cast<jule::U64>(6LLU)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	if (_15613_arg._field_kind[0LL] != '\"') {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _15613_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;
	}
	_12840_d.get()._field_args[0LL]._field_kind=_15613_arg._field_kind.slice(1LL,(_15613_arg._field_kind.len() - 1LL));
}



inline void _1ac57a6cb_check_test(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _17031_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
			_case_begin_1a7d81091:;
			{
				jule::Ptr<_1ab832324_Fn> _17317_f = (*_self_)._field_o.operator jule::Ptr<_1ab832324_Fn>();
				if (((!(_17317_f.get()._field_cpp_linked)) && (!(_1ab833369_is_init(_17317_f.ptr())))) && (!(_1ab83308e_is_entry_point(_17317_f.ptr())))) {
					goto _match_end_1a7d8090e;
				}
				if (_1ab832cb4_is_method(_17317_f.ptr())) {
					_1a5867bac_push_err((*_self_)._field_s.ptr(), _17317_f.get()._field_token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1a7d8090e;
				}
				goto _case_begin_1a7d80b2e;
			}
		}
		else {
			_case_begin_1a7d80b2e:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_17031_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d8090e:;
	}
	if ((_17031_d.get()._field_args.len() > 0LL)) {
		_1a5867bac_push_err((*_self_)._field_s.ptr(), _17031_d.get()._field_args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	}
}



inline void _1ac57a9ea_check_directive(_1ac578e49_DirectiveChecker* _self_,jule::Ptr<_1dd583043_Directive>& _19139_d) {
	{
		auto &_match_expr{ _19139_d.get()._field_tag._field_kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a7d85d21:;
			{
				_1ac579631_check_cdef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a7d85d87:;
			{
				_1ac579950_check_typedef(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a7d85ded:;
			{
				_1ac579c6e_check_derive(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a7d85e64:;
			{
				_1ac57a08d_check_namespace(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a7d86e43:;
			{
				_1ac57a3ac_check_deprecated(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a7d86ea9:;
			{
				_1ac57a6cb_check_test(&(*_self_), _19139_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a7d87020:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		else {
			_case_begin_1a7d85936:;
			{
				_1a5867bac_push_err((*_self_)._field_s.ptr(), _19139_d.get()._field_tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>({jule::Any(_19139_d.get()._field_tag._field_kind)}));
			}
		}
		_match_end_1a7d85c22:;
	}
}



inline void _1ac57ac3c_check(_1ac578e49_DirectiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1a7d8b233:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1a7d8b464_d = *it;
			{
				_1ac57a9ea_check_directive(&(*_self_), _1a7d8b464_d);
			}
			_iter_next_1a7d8b233:;
			++it;
			goto _iter_begin_1a7d8b233;
		}
		_iter_end_1a7d8b233:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1ac578e49_DirectiveChecker _Src) {
	_Stream << "DirectiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac584c79_find_package(_1ac58451a_Package* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac585131_select_package(_1ac58451a_Package* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a588601b_Var> _1ac5855b5_find_var(_1ac58451a_Package* _self_,jule::Str _28731_ident,jule::Bool _28743_cpp_linked) {
	return _1ac57d6bd_find_var_in_package((*_self_)._field_files,_28731_ident,_28743_cpp_linked);
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1ac585a49_find_type_alias(_1ac58451a_Package* _self_,jule::Str _29338_ident,jule::Bool _29350_cpp_linked) {
	return _1ac57dc1d_find_type_alias_in_package((*_self_)._field_files,_29338_ident,_29350_cpp_linked);
}



inline jule::Ptr<_1ab810b3d_Struct> _1ac585ecd_find_struct(_1ac58451a_Package* _self_,jule::Str _29934_ident,jule::Bool _29946_cpp_linked) {
	return _1ac57e1c4_find_struct_in_package((*_self_)._field_files,_29934_ident,_29946_cpp_linked);
}



inline jule::Ptr<_1ab832324_Fn> _1ac586462_find_fn(_1ac58451a_Package* _self_,jule::Str _30530_ident,jule::Bool _30542_cpp_linked) {
	return _1ac57e6d0_find_fn_in_package((*_self_)._field_files,_30530_ident,_30542_cpp_linked);
}



inline jule::Ptr<_1ac44770d_Trait> _1ac586819_find_trait(_1ac58451a_Package* _self_,jule::Str _31133_ident) {
	return _1ac57eaba_find_trait_in_package((*_self_)._field_files,_31133_ident);
}



inline jule::Ptr<_1ac44a337_Enum> _1ac586bc1_find_enum(_1ac58451a_Package* _self_,jule::Str _31732_ident) {
	return _1ac57eea5_find_enum_in_package((*_self_)._field_files,_31732_ident);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac58451a_Package _Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a5864eea_find_package(_1a5864747_Sema* _self_,jule::Str _23635_ident) {
	return _1a58c91a2_find_package((*_self_)._field_file.ptr(), _23635_ident);
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a58653a2_select_package(_1a5864747_Sema* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _24637_selector) {
	return _1a58c9559_select_package((*_self_)._field_file.ptr(), _24637_selector);
}



inline jule::Ptr<_1a588601b_Var> _1a5865836_find_var(_1a5864747_Sema* _self_,jule::Str _25631_ident,jule::Bool _25643_cpp_linked) {
	jule::Ptr<_1a588601b_Var> _25817_v = _1ac57d6bd_find_var_in_package((*_self_)._field_files,_25631_ident,_25643_cpp_linked);
	if ((_25817_v != nullptr)) {
		return _25817_v;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7da801e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7da7bbc_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7da7bbc_imp,_25631_ident)))) {
					goto _iter_next_1a7da801e;
				}
				_25817_v=_1ac581e30_find_var(_1a7da7bbc_imp.ptr(), _25631_ident,_25643_cpp_linked);
				if ((_25817_v != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _25817_v.get()._field_public,_25817_v.get()._field_token)) {
					return _25817_v;
				}
			}
			_iter_next_1a7da801e:;
			++it;
			goto _iter_begin_1a7da801e;
		}
		_iter_end_1a7da801e:;
	}
	return nullptr;
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1a5865cba_find_type_alias(_1a5864747_Sema* _self_,jule::Str _28338_ident,jule::Bool _28350_cpp_linked) {
	jule::Ptr<_1a5912d12_TypeAlias> _28517_ta = _1ac57dc1d_find_type_alias_in_package((*_self_)._field_files,_28338_ident,_28350_cpp_linked);
	if ((_28517_ta != nullptr)) {
		return _28517_ta;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7dab7a3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7dab50b_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7dab50b_imp,_28338_ident)))) {
					goto _iter_next_1a7dab7a3;
				}
				_28517_ta=_1ac5823b4_find_type_alias(_1a7dab50b_imp.ptr(), _28338_ident,_28350_cpp_linked);
				if ((_28517_ta != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _28517_ta.get()._field_public,_28517_ta.get()._field_token)) {
					return _28517_ta;
				}
			}
			_iter_next_1a7dab7a3:;
			++it;
			goto _iter_begin_1a7dab7a3;
		}
		_iter_end_1a7dab7a3:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab810b3d_Struct> _1a586624e_find_struct(_1a5864747_Sema* _self_,jule::Str _31034_ident,jule::Bool _31046_cpp_linked) {
	jule::Ptr<_1ab810b3d_Struct> _31217_s = _1ac57e1c4_find_struct_in_package((*_self_)._field_files,_31034_ident,_31046_cpp_linked);
	if ((_31217_s != nullptr)) {
		return _31217_s;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7daea2b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7dae6c9_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7dae6c9_imp,_31034_ident)))) {
					goto _iter_next_1a7daea2b;
				}
				_31217_s=_1ac582848_find_struct(_1a7dae6c9_imp.ptr(), _31034_ident,_31046_cpp_linked);
				if ((_31217_s != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _31217_s.get()._field_public,_31217_s.get()._field_token)) {
					return _31217_s;
				}
			}
			_iter_next_1a7daea2b:;
			++it;
			goto _iter_begin_1a7daea2b;
		}
		_iter_end_1a7daea2b:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab832324_Fn> _1a58666d3_find_fn(_1a5864747_Sema* _self_,jule::Str _33730_ident,jule::Bool _33742_cpp_linked) {
	jule::Ptr<_1ab832324_Fn> _33917_f = _1ac57e6d0_find_fn_in_package((*_self_)._field_files,_33730_ident,_33742_cpp_linked);
	if ((_33917_f != nullptr)) {
		return _33917_f;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7db2ca4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7db2952_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7db2952_imp,_33730_ident)))) {
					goto _iter_next_1a7db2ca4;
				}
				_33917_f=_1ac582ccc_find_fn(_1a7db2952_imp.ptr(), _33730_ident,_33742_cpp_linked);
				if ((_33917_f != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _33917_f.get()._field_public,_33917_f.get()._field_token)) {
					return _33917_f;
				}
			}
			_iter_next_1a7db2ca4:;
			++it;
			goto _iter_begin_1a7db2ca4;
		}
		_iter_end_1a7db2ca4:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44770d_Trait> _1a5866a8a_find_trait(_1a5864747_Sema* _self_,jule::Str _36433_ident) {
	jule::Ptr<_1ac44770d_Trait> _36617_t = _1ac57eaba_find_trait_in_package((*_self_)._field_files,_36433_ident);
	if ((_36617_t != nullptr)) {
		return _36617_t;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7db5a87:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7db5ec7_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7db5ec7_imp,_36433_ident)))) {
					goto _iter_next_1a7db5a87;
				}
				_36617_t=_1ac583184_find_trait(_1a7db5ec7_imp.ptr(), _36433_ident);
				if ((_36617_t != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _36617_t.get()._field_public,_36617_t.get()._field_token)) {
					return _36617_t;
				}
			}
			_iter_next_1a7db5a87:;
			++it;
			goto _iter_begin_1a7db5a87;
		}
		_iter_end_1a7db5a87:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44a337_Enum> _1a5866e42_find_enum(_1a5864747_Sema* _self_,jule::Str _39132_ident) {
	jule::Ptr<_1ac44a337_Enum> _39317_e = _1ac57eea5_find_enum_in_package((*_self_)._field_files,_39132_ident);
	if ((_39317_e != nullptr)) {
		return _39317_e;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7db8903:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7db8d43_imp = *it;
			{
				if ((!(_1ac588ee2_imp_is_lookupable(_1a7db8d43_imp,_39132_ident)))) {
					goto _iter_next_1a7db8903;
				}
				_39317_e=_1ac58353b_find_enum(_1a7db8d43_imp.ptr(), _39132_ident);
				if ((_39317_e != nullptr) && _1a586853c_is_accessible_define(&(*_self_), _39317_e.get()._field_public,_39317_e.get()._field_token)) {
					return _39317_e;
				}
			}
			_iter_next_1a7db8903:;
			++it;
			goto _iter_begin_1a7db8903;
		}
		_iter_end_1a7db8903:;
	}
	return nullptr;
}



inline jule::Bool _1a58673b5_is_flag(_1a5864747_Sema* _self_,jule::I64 _41522_flags) {
	return ((*_self_)._field_flags & _41522_flags) == _41522_flags;
}



inline void _1a58676d4_set_current_file(_1a5864747_Sema* _self_,jule::Ptr<_1a58c88ee_SymbolTable> _41739_f) {
	(*_self_)._field_file=_41739_f;
}



inline void _1a5867bac_push_err(_1a5864747_Sema* _self_,_1aa07563a_Token _41927_token,jule::Str _41941_fmt,jule::Slice<jule::Any> _41954_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1ac588b07_compiler_err(_41927_token,true,_41941_fmt,_41954_args));
}



inline void _1a58680a8_push_suggestion(_1a5864747_Sema* _self_,jule::Str _42434_fmt,jule::Slice<jule::Any> _42447_args) {
	{
		_1a58641a3_push_suggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_42434_fmt,_42447_args);
	}
}



inline jule::Bool _1a586853c_is_accessible_define(_1a5864747_Sema* _self_,jule::Bool _42935_public,_1aa07563a_Token _42949_token) {
	return (_42935_public || (_42949_token._field_file == nullptr)) || (_1aa07c6ec_dir((*_self_)._field_file.get()._field_file.ptr()) == _1aa07c6ec_dir(_42949_token._field_file.ptr()));
}



inline jule::Bool _1a5868a9d_is_duplicated_ident(_1a5864747_Sema* _self_,jule::U64 _43634_itself,jule::Str _43651_ident,jule::Bool _43663_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a7dc2247:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> &_1a7dc2445_f = *it;
			{
				if (_1a58cc7d2_is_duplicated_ident(_1a7dc2445_f.ptr(), _43634_itself,_43651_ident,_43663_cpp_linked)) {
					return true;
				}
				{
					auto &expr = _1a7dc2445_f.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a7dc2b71:;
					if (it != expr.end()) {
						jule::Ptr<_1ac580d41_ImportInfo> &_1a7dc3ac8_imp = *it;
						{
							{
								auto &expr = _1a7dc3ac8_imp.get()._field_selected;
								auto it = expr.begin();
								_iter_begin_1a7dc425a:;
								if (it != expr.end()) {
									_1aa07563a_Token &_1a7dc429e_selected = *it;
									{
										if (_1a7dc429e_selected._field_kind == _43651_ident) {
											return true;
										}
									}
									_iter_next_1a7dc425a:;
									++it;
									goto _iter_begin_1a7dc425a;
								}
								_iter_end_1a7dc425a:;
							}
						}
						_iter_next_1a7dc2b71:;
						++it;
						goto _iter_begin_1a7dc2b71;
					}
					_iter_end_1a7dc2b71:;
				}
			}
			_iter_next_1a7dc2247:;
			++it;
			goto _iter_begin_1a7dc2247;
		}
		_iter_end_1a7dc2247:;
	}
	return false;
}



inline void _1a5868e99_check_directives(jule::Ptr<_1a5864747_Sema> _self_,jule::Slice<jule::Ptr<_1dd583043_Directive>>& _45341_d,jule::Any _45367_o) {
	_1ac578e49_DirectiveChecker _45417_dc = _1ac578e49_DirectiveChecker(_self_,((jule::Ptr<jule::Slice<jule::Ptr<_1dd583043_Directive>>>)((&(_45341_d)))),_45367_o);
	_1ac57ac3c_check(&_45417_dc);
}



inline jule::Bool _1a586950a_check_generic_quantity(_1a5864747_Sema* _self_,jule::I64 _46241_required,jule::I64 _46256_given,_1aa07563a_Token _46268_token) {
	jule::Bool _46284_ok = jule::Bool();
	{
		
		if ((_46241_required == 0LL) && (_46256_given > 0LL)) {
			_case_begin_1a7dc7c64:;
			{
				_1a5867bac_push_err(&(*_self_), _46268_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if ((_46241_required > 0LL) && (_46256_given == 0LL)) {
			_case_begin_1a7dc7d1e:;
			{
				_1a5867bac_push_err(&(*_self_), _46268_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if (_46241_required < _46256_given) {
			_case_begin_1a7dc7d85:;
			{
				_1a5867bac_push_err(&(*_self_), _46268_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else if (_46241_required > _46256_given) {
			_case_begin_1a7dc7a11:;
			{
				_1a5867bac_push_err(&(*_self_), _46268_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				_46284_ok = false;
				return _46284_ok;
			}
		}
		else {
			_case_begin_1a7dc759e:;
			{
				_46284_ok = true;
				return _46284_ok;
			}
		}
		_match_end_1a7dc74d3:;
	}
}



inline jule::Bool _1a58699d3_is_duplicated_import_selection(_1a5864747_Sema* _self_,jule::U64 _48145_itself,jule::Str _48162_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7dcbcac:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> &_1a7dcbedd_imp = *it;
			{
				if (static_cast<jule::U64>(_1a7dcbedd_imp) == _48145_itself) {
					goto _iter_end_1a7dcbcac;
				}
				if (_1ac583daa_exist_ident(_1a7dcbedd_imp.ptr(), _48162_ident)) {
					return true;
				}
			}
			_iter_next_1a7dcbcac:;
			++it;
			goto _iter_begin_1a7dcbcac;
		}
		_iter_end_1a7dcbcac:;
	}
	return false;
}



inline jule::Any _1a5869e56_get_import_def(_1a5864747_Sema* _self_,jule::Str _49629_ident,jule::Ptr<_1ac580d41_ImportInfo>& _49646_imp) {
	if (_1a595a94d_find_package_builtin_def(_49646_imp.get()._field_link_path,_49629_ident) != jule::Any(jule::Any(nullptr))) {
		return jule::Any(true);
	}
	{
		auto &expr = _49646_imp.get()._field_package.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a7dce919:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a7dce9a2_f = *it;
			{
				
				jule::Any _50321_def = _1a58cc271_def_by_ident(_1a7dce9a2_f.ptr(), _49629_ident,false);
				if (_50321_def != jule::Any(jule::Any(nullptr))) {
					return _50321_def;
				}
			}
			_iter_next_1a7dce919:;
			++it;
			goto _iter_begin_1a7dce919;
		}
		_iter_end_1a7dce919:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a586a352_check_import_selections(_1a5864747_Sema* _self_,jule::Ptr<_1ac580d41_ImportInfo>& _51247_imp) {
	jule::Bool _51267_ok = jule::Bool();
	_51267_ok=true;
	{
		auto &expr = _51247_imp.get()._field_selected;
		auto it = expr.begin();
		_iter_begin_1a7dd1a81:;
		if (it != expr.end()) {
			_1aa07563a_Token _1a7dd1e27_ident = *it;
			{
				if ((_1a7dd1e27_ident._field_kind == jule::Str("self", 4))) {
					goto _iter_next_1a7dd1a81;
				}
				if (_1a58699d3_is_duplicated_import_selection(&(*_self_), static_cast<jule::U64>(static_cast<jule::U64>(_51247_imp)),_1a7dd1e27_ident._field_kind)) {
					_1a5867bac_push_err(&(*_self_), _1a7dd1e27_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7dd1e27_ident._field_kind)}));
					_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					_51267_ok=false;
					goto _iter_next_1a7dd1a81;
				}
				jule::Any _52621_def = _1a5869e56_get_import_def(&(*_self_), _1a7dd1e27_ident._field_kind,_51247_imp);
				{
					auto &_match_expr{ _52621_def };
					
					if (_match_expr.type_is<jule::Bool>()) {
						_case_begin_1a7dd4ed5:;
						{
							goto _iter_next_1a7dd1a81;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
						_case_begin_1a7dd504b:;
						{
							jule::Ptr<_1a588601b_Var> _53225_v = _52621_def.operator jule::Ptr<_1a588601b_Var>();
							if (_1a586853c_is_accessible_define(&(*_self_), _53225_v.get()._field_public,_53225_v.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
						_case_begin_1a7dd50b2:;
						{
							jule::Ptr<_1a5912d12_TypeAlias> _53725_ta = _52621_def.operator jule::Ptr<_1a5912d12_TypeAlias>();
							if (_1a586853c_is_accessible_define(&(*_self_), _53725_ta.get()._field_public,_53725_ta.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
						_case_begin_1a7dd5128:;
						{
							jule::Ptr<_1ab810b3d_Struct> _54225_strct = _52621_def.operator jule::Ptr<_1ab810b3d_Struct>();
							if (_1a586853c_is_accessible_define(&(*_self_), _54225_strct.get()._field_public,_54225_strct.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac44770d_Trait>>()) {
						_case_begin_1a7dd5db5:;
						{
							jule::Ptr<_1ac44770d_Trait> _54725_t = _52621_def.operator jule::Ptr<_1ac44770d_Trait>();
							if (_1a586853c_is_accessible_define(&(*_self_), _54725_t.get()._field_public,_54725_t.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac44a337_Enum>>()) {
						_case_begin_1a7dd5e2b:;
						{
							jule::Ptr<_1ac44a337_Enum> _55225_e = _52621_def.operator jule::Ptr<_1ac44a337_Enum>();
							if (_1a586853c_is_accessible_define(&(*_self_), _55225_e.get()._field_public,_55225_e.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
						_case_begin_1a7dd5e92:;
						{
							jule::Ptr<_1ab832324_Fn> _55725_f = _52621_def.operator jule::Ptr<_1ab832324_Fn>();
							if (_1a586853c_is_accessible_define(&(*_self_), _55725_f.get()._field_public,_55725_f.get()._field_token)) {
								goto _iter_next_1a7dd1a81;
							}
						}
					}
					else {
						_case_begin_1a7dd4d92:;
						{
							_1a5867bac_push_err(&(*_self_), _1a7dd1e27_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_1a7dd1e27_ident._field_kind)}));
							_51267_ok=false;
							goto _iter_next_1a7dd1a81;
						}
					}
					_match_end_1a7dd4d3c:;
				}
				_1a5867bac_push_err(&(*_self_), _1a7dd1e27_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_1a7dd1e27_ident._field_kind)}));
				_1a58680a8_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
				_51267_ok=false;
			}
			_iter_next_1a7dd1a81:;
			++it;
			goto _iter_begin_1a7dd1a81;
		}
		_iter_end_1a7dd1a81:;
	}
	return _51267_ok;
}



inline jule::Bool _1a586a73c_is_use_alias_duplication(_1a5864747_Sema* _self_,jule::Ptr<_1ac580d41_ImportInfo>& _57444_imp) {
	if ((_57444_imp.get()._field_alias.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1a7ddd73b:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a7dde264_imp2 = *it;
			{
				if (_1a7dde264_imp2 == _57444_imp) {
					goto _iter_end_1a7ddd73b;
				}
				if (_1a7dde264_imp2.get()._field_alias == _57444_imp.get()._field_alias) {
					return true;
				}
				if ((_1a7dde264_imp2.get()._field_ident == _1a7dde264_imp2.get()._field_link_path) && (_1a7dde264_imp2.get()._field_ident == _57444_imp.get()._field_alias)) {
					return true;
				}
			}
			_iter_next_1a7ddd73b:;
			++it;
			goto _iter_begin_1a7ddd73b;
		}
		_iter_end_1a7ddd73b:;
	}
	return false;
}



inline jule::Bool _1a586aad3_check_import(_1a5864747_Sema* _self_,jule::Ptr<_1ac580d41_ImportInfo>& _59536_imp) {
	if (_59536_imp.get()._field_cpp_linked || (_59536_imp.get()._field_package.get()._field_files.len() == 0LL)) {
		return true;
	}
	if (_1a586a73c_is_use_alias_duplication(&(*_self_), _59536_imp)) {
		_1a5867bac_push_err(&(*_self_), _59536_imp.get()._field_token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>({jule::Any(_59536_imp.get()._field_alias)}));
		_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	}
	if ((!(_59536_imp.get()._field_duplicate))) {
		jule::Ptr<_1a5864747_Sema> _60621_sema = jule::new_ptr<_1a5864747_Sema>(_1a5864747_Sema(jule::Slice<_1c4810251_Log>(),jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>(),jule::Ptr<_1a58c88ee_SymbolTable>(),(*_self_)._field_flags));
		_1a588216b_check(_60621_sema, _59536_imp.get()._field_package.get()._field_files);
		if ((_60621_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_60621_sema.get()._field_errors);
			_60621_sema.get()._field_errors=nullptr;
			return false;
		}
	}
	return _1a586a352_check_import_selections(&(*_self_), _59536_imp);
}



inline void _1a586ad25_check_imports(_1a5864747_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a7de6b2e:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a7de6d1b_file = *it;
			{
				_1a58676d4_set_current_file(&(*_self_), _1a7de6d1b_file);
				{
					auto &expr = _1a7de6d1b_file.get()._field_imports;
					auto it = expr.begin();
					_iter_begin_1a7de7635:;
					if (it != expr.end()) {
						jule::Ptr<_1ac580d41_ImportInfo> _1a7de7a53_imp = *it;
						{
							jule::Bool _62421_ok = _1a586aad3_check_import(&(*_self_), _1a7de7a53_imp);
							if ((!(_62421_ok))) {
								_1a5867bac_push_err(&(*_self_), _1a7de7a53_imp.get()._field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1a7de7a53_imp.get()._field_link_path)}));
								return;
							}
						}
						_iter_next_1a7de7635:;
						++it;
						goto _iter_begin_1a7de7635;
					}
					_iter_end_1a7de7635:;
				}
			}
			_iter_next_1a7de6b2e:;
			++it;
			goto _iter_begin_1a7de6b2e;
		}
		_iter_end_1a7de6b2e:;
	}
}



inline void _1a586b067_impl_file_impls(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_impls;
		auto it = expr.begin();
		_iter_begin_1a7de97ad:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44c05e_Impl> _1a7de9802_imp = *it;
			{
				_1a5876ade_impl_impl(_self_, _1a7de9802_imp);
			}
			_iter_next_1a7de97ad:;
			++it;
			goto _iter_begin_1a7de97ad;
		}
		_iter_end_1a7de97ad:;
	}
}



inline void _1a586b2a9_impl_impls(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a7deaced:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a7deaeda_file = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a7deaeda_file);
				_1a586b067_impl_file_impls(_self_);
			}
			_iter_next_1a7deaced:;
			++it;
			goto _iter_begin_1a7deaced;
		}
		_iter_end_1a7deaced:;
	}
}



inline void _1a586b4eb_check_enums(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a7dec272:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a7dec45e_file = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a7dec45e_file);
				_1a587368a_check_enum_decls(_self_);
			}
			_iter_next_1a7dec272:;
			++it;
			goto _iter_begin_1a7dec272;
		}
		_iter_end_1a7dec272:;
	}
}



inline jule::Bool _1a586ba5c_check_type_with_refers(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5918a0a_TypeSymbol>& _65747_t,jule::Trait<_1a5932ea8_Lookup> _65813_l,jule::Ptr<_1a5926045_Referencer> _65828_referencer) {
	jule::Bool _65855_ok = jule::Bool();
	if (_1a591916a_checked(_65747_t.ptr())) {
		_65855_ok = true;
		return _65855_ok;
	}
	_1a5927189_TypeChecker _66217_tc = _1a5927189_TypeChecker(_self_,_65813_l,_65828_referencer,_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool());
	if ((_65828_referencer != nullptr) && (_65828_referencer.get()._field_refs != nullptr)) {
		_66217_tc._field_owner_alias=_65828_referencer.get()._field_owner.operator jule::Ptr<_1a5912d12_TypeAlias>();
	}
	_1a59303a1_check(&_66217_tc, _65747_t);
	_65855_ok = _1a591916a_checked(_65747_t.ptr());
	return _65855_ok;
}



inline jule::Bool _1a586bee1_check_type(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5918a0a_TypeSymbol>& _68135_t,jule::Trait<_1a5932ea8_Lookup> _68155_l) {
	return _1a586ba5c_check_type_with_refers(_self_, _68135_t,_68155_l,nullptr);
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a586c4b9_build_type_with_generics(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1dd583461_TypeDecl>& _68749_t,jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _68813_generics) {
	jule::Ptr<_1a5927189_TypeChecker> _68917_tc = jule::new_ptr<_1a5927189_TypeChecker>(_1a5927189_TypeChecker(_self_,jule::Trait<_1a5932ea8_Lookup>(_self_, 3),jule::Ptr<_1a5926045_Referencer>(),_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),_68813_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool()));
	return _1a5930082_check_decl(_68917_tc.ptr(), _68749_t);
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a586c860_build_type(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1dd583461_TypeDecl>& _69835_t) {
	return _1a586c4b9_build_type_with_generics(_self_, _69835_t,nullptr);
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a586cc17_select_type(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1dd583461_TypeDecl>& _70336_t) {
	jule::Ptr<_1a5927189_TypeChecker> _70417_tc = jule::new_ptr<_1a5927189_TypeChecker>(_1a5927189_TypeChecker(_self_,jule::Trait<_1a5932ea8_Lookup>(_self_, 3),jule::Ptr<_1a5926045_Referencer>(),_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),true,jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool()));
	return _1a5930082_check_decl(_70417_tc.ptr(), _70336_t);
}



inline jule::Ptr<_1a58d2397_Eval> _1a586d278_evalpd(jule::Ptr<_1a5864747_Sema> _self_,jule::Trait<_1a5932ea8_Lookup> _71430_l,jule::Ptr<_1a5913e9a_TypeKind> _71445_p,jule::Ptr<_1a588601b_Var> _71463_owner) {
	jule::Ptr<_1a58d2397_Eval> _71517_e = jule::new_ptr<_1a58d2397_Eval>(_1a58d2397_Eval(_self_,_71430_l,jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_71463_owner,jule::Ptr<_1ab8137bc_FieldIns>(),jule::Bool()));
	{
		auto &_match_expr{ _71430_l };
		
		if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a7e09922:;
			{
				_71517_e.get()._field_unsafety=_1ac567267_is_unsafe(_71430_l.operator jule::Ptr<_1ac565bd3_ScopeChecker>());
			}
		}
		_match_end_1a7e098bc:;
	}
	_71517_e.get()._field_prefix=_71445_p;
	return _71517_e;
}



inline jule::Ptr<_1a58d2397_Eval> _1a586d70c_evalp(jule::Ptr<_1a5864747_Sema> _self_,jule::Trait<_1a5932ea8_Lookup> _73229_l,jule::Ptr<_1a5913e9a_TypeKind> _73244_p) {
	return _1a586d278_evalpd(_self_, _73229_l,_73244_p,nullptr);
}



inline jule::Ptr<_1a58d2397_Eval> _1a586dab4_eval(jule::Ptr<_1a5864747_Sema> _self_,jule::Trait<_1a5932ea8_Lookup> _73728_l) {
	return _1a586d70c_evalp(_self_, _73728_l,nullptr);
}



inline jule::Bool _1a586e202_check_assign_type(jule::Ptr<_1a5864747_Sema> _self_,jule::Bool _74137_dest_is_ref,jule::Ptr<_1a5913e9a_TypeKind>& _74161_dest,jule::Ptr<_1a58cee44_Data>& _74214_d,_1aa07563a_Token _74228_error_token) {
	if (_74214_d.get()._field_decl) {
		_1a5867bac_push_err(_self_.ptr(), _74228_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;
	}
	if (_74137_dest_is_ref) {
		if ((!(_1a591496d_equals(_74161_dest, _74214_d.get()._field_kind)))) {
			_1a5867bac_push_err(_self_.ptr(), _74228_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_74161_dest.ptr())),jule::Any(_1a59145b6_to_str(_74214_d.get()._field_kind.ptr()))}));
			return false;
		}
	} else {
		jule::Ptr<_1a58b7778_AssignTypeChecker> _75321_atc = jule::new_ptr<_1a58b7778_AssignTypeChecker>(_1a58b7778_AssignTypeChecker(_self_,_74161_dest,_74214_d,_74228_error_token));
		jule::Bool _75917_ok = _1a58b8dea_check(_75321_atc.ptr());
		if ((!(_75917_ok))) {
			return false;
		}
	}
	if ((!(_1a58d0b48_is_const(_74214_d.ptr()))) || (_1a591673e_prim(_74161_dest.ptr()) == nullptr)) {
		return true;
	}
	jule::Str _76917_kind = _1a591673e_prim(_74161_dest.ptr()).get()._field_kind;
	{
		
		if (_1ac55da66_is_sig_int(_76917_kind)) {
			_case_begin_1a7e12782:;
			{
				_1ac4d406e_set_i64(_74214_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_74214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ac55ddb8_is_unsig_int(_76917_kind)) {
			_case_begin_1a7e12809:;
			{
				_1ac4d438d_set_u64(_74214_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_74214_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ac55e528_is_float(_76917_kind)) {
			_case_begin_1a7e12881:;
			{
				_1ac4d4cea_set_f64(_74214_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ac4d3c50_as_f64(_74214_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a7e126a5:;
	}
	return true;
}



inline jule::Bool _1a586e7a7_check_type_compatibility(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5913e9a_TypeKind>& _78349_dest,jule::Ptr<_1a5913e9a_TypeKind>& _78414_src,_1aa07563a_Token& _78435_error_token) {
	if ((_78414_src == nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_78349_dest.ptr())),jule::Any(_1a59145b6_to_str(_78414_src.ptr()))}));
		return false;
	}
	if ((_1a59185a9_tup(_78414_src.ptr()) != nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_78349_dest.ptr())),jule::Any(_1a59145b6_to_str(_78414_src.ptr()))}));
		return false;
	}
	_1a58b5c2c_TypeCompatibilityChecker _79817_tcc = _1a58b5c2c_TypeCompatibilityChecker(_self_,_78349_dest,_78414_src,_78435_error_token);
	if (_1a58b7129_check(&_79817_tcc)) {
		return true;
	}
	_1a5867bac_push_err(_self_.ptr(), _78435_error_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_78349_dest.ptr())),jule::Any(_1a59145b6_to_str(_78414_src.ptr()))}));
	return false;
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a586ec6e_build_non_generic_type_kind(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1dd583461_TypeDecl>& _81952_ast,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>& _82014_generics) {
	jule::Ptr<_1a5927189_TypeChecker> _82117_tc = jule::new_ptr<_1a5927189_TypeChecker>(_1a5927189_TypeChecker(_self_,jule::Trait<_1a5932ea8_Lookup>(_self_, 3),jule::Ptr<_1a5926045_Referencer>(),_1aa07563a_Token(),_82014_generics,jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool()));
	return _1a5930082_check_decl(_82117_tc.ptr(), _81952_ast);
}



inline void _1a58700c1_build_fn_non_generic_type_kinds(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab836218_FnIns>& _82956_f) {
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _83017_generics = nullptr;
	if (_1ab832cb4_is_method(_82956_f.get()._field_decl.ptr())) {
		_83017_generics=jule::append(_82956_f.get()._field_decl.get()._field_generics,_82956_f.get()._field_decl.get()._field_owner.get()._field_generics);
	} else {
		_83017_generics=_82956_f.get()._field_decl.get()._field_generics;
	}
	{
		auto &expr = _82956_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a7e1d381:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a7e1d3c5_p = *it;
			{
				if ((!(_1ab830c07_is_self(_1a7e1d3c5_p.get()._field_decl.ptr())))) {
					_1a7e1d3c5_p.get()._field_kind=_1a586ec6e_build_non_generic_type_kind(_self_, _1a7e1d3c5_p.get()._field_decl.get()._field_kind.get()._field_decl,_83017_generics);
				}
			}
			_iter_next_1a7e1d381:;
			++it;
			goto _iter_begin_1a7e1d381;
		}
		_iter_end_1a7e1d381:;
	}
	if ((!(_1ab8329d9_is_void(_82956_f.get()._field_decl.ptr())))) {
		_82956_f.get()._field_result=_1a586ec6e_build_non_generic_type_kind(_self_, _82956_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_83017_generics);
	}
}



inline jule::Ptr<_1ab836218_FnIns> _1a58704ab_get_trait_check_fn_kind(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _84748_f) {
	jule::Ptr<_1ab836218_FnIns> _84817_ins = _1ab8342d2_instance_force(_84748_f);
	_1a58700c1_build_fn_non_generic_type_kinds(_self_, _84817_ins);
	return _84817_ins;
}



inline jule::Bool _1a5870852_reload_fn_ins_types(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab836218_FnIns>& _85344_f) {
	jule::Bool _85357_ok = jule::Bool();
	if (_1ab837093_is_builtin(_85344_f.ptr()) || _1ab83736d_is_anon(_85344_f.ptr())) {
		_85357_ok = true;
		return _85357_ok;
	}
	jule::Ptr<_1a5864747_Sema> _85817_sema = _85344_f.get()._field_decl.get()._field_sema;
	jule::Ptr<_1a58c88ee_SymbolTable> _86017_old = _85344_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a58676d4_set_current_file(_85344_f.get()._field_decl.get()._field_sema.ptr(), _86017_old);
	});
	jule::Ptr<_1a58c88ee_SymbolTable> _86217_file = _1ac589d7d_find_file(_85344_f.get()._field_decl.get()._field_sema.get()._field_files,_85344_f.get()._field_decl.get()._field_token._field_file);
	if ((_86217_file != nullptr)) {
		_1a58676d4_set_current_file(_85344_f.get()._field_decl.get()._field_sema.ptr(), _86217_file);
	}
	jule::I64 _86717_size = _85344_f.get()._field_generics.len();
	if ((_85344_f.get()._field_decl != nullptr) && (_85344_f.get()._field_decl.get()._field_owner != nullptr)) {
		_86717_size+=static_cast<jule::I64>(_85344_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _87217_generics = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>::alloc(0LL,_86717_size);
	{
		auto &expr = _85344_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a7e291b1:;
		if (it != expr.end()) {
			jule::I64 _1a7e2926b_i = it - expr.begin();
			jule::Ptr<_1a5913e9a_TypeKind> _1a7e29458_g = *it;
			{
				_87217_generics = jule::alloc_for_append(_87217_generics,1);_87217_generics.__push(jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1aa07563a_Token(),_85344_f.get()._field_decl.get()._field_generics[_1a7e2926b_i].get()._field_ident,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_1a7e29458_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>())));
			}
			_iter_next_1a7e291b1:;
			++it;
			_1a7e2926b_i++;
			goto _iter_begin_1a7e291b1;
		}
		_iter_end_1a7e291b1:;
	}
	if ((_85344_f.get()._field_decl != nullptr) && (_85344_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1ab814515_StructIns> _88421_owner = _85344_f.get()._field_owner;
		{
			auto &expr = _88421_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1a7e29dc6:;
			if (it != expr.end()) {
				jule::I64 _1a7e2ae0a_i = it - expr.begin();
				jule::Ptr<_1a5913e9a_TypeKind> _1a7e2b12a_g = *it;
				{
					_87217_generics = jule::alloc_for_append(_87217_generics,1);_87217_generics.__push(jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1aa07563a_Token(),_88421_owner.get()._field_decl.get()._field_generics[_1a7e2ae0a_i].get()._field_ident,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_1a7e2b12a_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>())));
				}
				_iter_next_1a7e29dc6:;
				++it;
				_1a7e2ae0a_i++;
				goto _iter_begin_1a7e29dc6;
			}
			_iter_end_1a7e29dc6:;
		}
	}
	_85357_ok=true;
	{
		auto &expr = _85344_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a7e2c956:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a7e2ca22_p = *it;
			{
				if (_1ab830c07_is_self(_1a7e2ca22_p.get()._field_decl.ptr())) {
					if (_1ab830ed2_is_ref(_1a7e2ca22_p.get()._field_decl.ptr())) {
						_1a7e2ca22_p.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591d768_Sptr>(_1a591d768_Sptr(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_85344_f.get()._field_owner, 0))))), 6)));
					} else {
						_1a7e2ca22_p.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_85344_f.get()._field_owner, 0)));
					}
				} else {
					_1a7e2ca22_p.get()._field_kind=_1a586c4b9_build_type_with_generics(_85817_sema, _1a7e2ca22_p.get()._field_decl.get()._field_kind.get()._field_decl,_87217_generics);
					if ((_1a7e2ca22_p.get()._field_kind != nullptr)) {
						_1a7e2ca22_p.get()._field_kind.get()._field_variadic=_1a7e2ca22_p.get()._field_decl.get()._field_variadic;
						if (_1a7e2ca22_p.get()._field_decl.get()._field_reference && (!(_1a592495b_is_valid_for_ref(_1a7e2ca22_p.get()._field_kind)))) {
							_1a5867bac_push_err(_self_.ptr(), _1a7e2ca22_p.get()._field_decl.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_1a7e2ca22_p.get()._field_kind.ptr()))}));
						}
					} else {
						_85357_ok=false;
					}
				}
			}
			_iter_next_1a7e2c956:;
			++it;
			goto _iter_begin_1a7e2c956;
		}
		_iter_end_1a7e2c956:;
	}
	if ((!(_1ab8329d9_is_void(_85344_f.get()._field_decl.ptr())))) {
		_85344_f.get()._field_result=_1a586c4b9_build_type_with_generics(_85817_sema, _85344_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl,_87217_generics);
		_85357_ok=(_85344_f.get()._field_result != nullptr) && _85357_ok;
	}
	if (_85817_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_85817_sema.get()._field_errors);
		_85817_sema.get()._field_errors=nullptr;
	}
	return _85357_ok;
}



inline jule::Bool _1a5870e29_check_ref_validity_for_init_expr(jule::Ptr<_1a5864747_Sema> _self_,jule::Bool _93752_left_mut,jule::Ptr<_1a58cee44_Data>& _93773_d,_1aa07563a_Token& _93788_error_token) {
	{
		auto &_match_expr{ _93773_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a7e36ee3:;
			{
				goto _match_end_1a7e36179;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81d640_TraitSubIdentExprModel>>()) {
			_case_begin_1a7e37059:;
			{
				jule::Ptr<_1ab81d640_TraitSubIdentExprModel> _94221_model = _93773_d.get()._field_model.operator jule::Ptr<_1ab81d640_TraitSubIdentExprModel>();
				if ((!(_1ac5885a7_is_valid_model_for_ref(_94221_model.get()._field_expr)))) {
					_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_94221_model.get()._field_method.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
			_case_begin_1a7e36278:;
			{
				jule::Ptr<_1ab81e245_StructSubIdentExprModel> _94821_model = _93773_d.get()._field_model.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>();
				if ((!(_1ac5885a7_is_valid_model_for_ref(_94821_model.get()._field_expr.get()._field_model)))) {
					_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(_94821_model.get()._field_field.get()._field_decl.get()._field_ident)}));
					return false;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab820686_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab82106b_CommonSubIdentExprModel>>()) {
			_case_begin_1a7e362de:;
			{
				_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab817716_UnaryExprModel>>()) {
			_case_begin_1a7e36355:;
			{
				jule::Ptr<_1ab817716_UnaryExprModel> _95821_unary = _93773_d.get()._field_model.operator jule::Ptr<_1ab817716_UnaryExprModel>();
				if ((_95821_unary.get()._field_op._field_kind == jule::Str("*", 1))) {
					if ((!(_1ac5885a7_is_valid_model_for_ref(_93773_d.get()._field_model)))) {
						_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>({jule::Any(jule::Str("address from * &T", 17))}));
						return false;
					}
					goto _match_end_1a7e36179;
				}
				goto _case_begin_1a7e361ce;
			}
		}
		else {
			_case_begin_1a7e361ce:;
			{
				_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a7e36179:;
	}
	if (_93752_left_mut && (!(_93773_d.get()._field_mutable))) {
		_1a5867bac_push_err(_self_.ptr(), _93788_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;
	}
	return true;
}



inline jule::Bool _1a5871688_check_validity_for_init_expr(jule::Ptr<_1a5864747_Sema> _self_,jule::Bool _97948_left_mut,jule::Bool _97964_left_ref,jule::Ptr<_1a5913e9a_TypeKind>& _98010_left_kind,jule::Ptr<_1a58cee44_Data>& _98037_d,_1aa07563a_Token& _98052_error_token) {
	if ((_97948_left_mut && (!(_98037_d.get()._field_mutable))) && _1a5915809_mutable(_98037_d.get()._field_kind.ptr())) {
		_1a5867bac_push_err(_self_.ptr(), _98052_error_token,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_98037_d.get()._field_kind.ptr()))}));
		return false;
	}
	if (_97964_left_ref) {
		if ((!(_1a5870e29_check_ref_validity_for_init_expr(_self_, _97948_left_mut,_98037_d,_98052_error_token)))) {
			return false;
		}
	}
	jule::Ptr<_1a58b7778_AssignTypeChecker> _99117_atc = jule::new_ptr<_1a58b7778_AssignTypeChecker>(_1a58b7778_AssignTypeChecker(_self_,jule::Ptr<_1a5913e9a_TypeKind>(),_98037_d,_98052_error_token));
	return _1a58b8290_check_validity(_99117_atc.ptr());
}



inline jule::Bool _1a5871b1c_check_type_alias_decl_kind(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5912d12_TypeAlias>& _99951_ta,jule::Trait<_1a5932ea8_Lookup> _99971_l) {
	jule::Bool _99984_ok = jule::Bool();
	jule::Ptr<_1a58c88ee_SymbolTable> _100017_old = _self_.get()._field_file;
	__JULE_DEFER({
		_1a58676d4_set_current_file(_self_.ptr(), _100017_old);
	});
	jule::Ptr<_1a58c88ee_SymbolTable> _100417_file = _1ac589d7d_find_file(_self_.get()._field_files,_99951_ta.get()._field_token._field_file);
	if ((_100417_file != nullptr)) {
		_1a58676d4_set_current_file(_self_.ptr(), _100417_file);
	}
	_99984_ok=_1a586ba5c_check_type_with_refers(_self_, _99951_ta.get()._field_kind,_99971_l,jule::new_ptr<_1a5926045_Referencer>(_1a5926045_Referencer(_99951_ta.get()._field_ident,jule::Any(jule::Any(_99951_ta)),(&(_99951_ta.get()._field_refers)))));
	if ((_99984_ok && (_1a5917399_arr(_99951_ta.get()._field_kind.get()._field_kind.ptr()) != nullptr)) && _1a5917399_arr(_99951_ta.get()._field_kind.get()._field_kind.ptr()).get()._field_auto) {
		_1a5867bac_push_err(_self_.ptr(), _99951_ta.get()._field_kind.get()._field_decl.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		_99984_ok=false;
	}
	return _99984_ok;
}



inline void _1a5872007_check_type_alias_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5912d12_TypeAlias>& _102046_ta,jule::Trait<_1a5932ea8_Lookup> _102066_l) {
	if (_1aa07861b_is_ignore_ident(_102046_ta.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _102046_ta.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a5871b1c_check_type_alias_decl_kind(_self_, _102046_ta,_102066_l);
}



inline void _1a587236a_check_type_alias_decl_dup(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a5912d12_TypeAlias>& _102850_ta) {
	if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102850_ta)),_102850_ta.get()._field_ident,_102850_ta.get()._field_cpp_linked)) {
		_1a5867bac_push_err(_self_.ptr(), _102850_ta.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_102850_ta.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a5871b1c_check_type_alias_decl_kind(_self_, _102850_ta,jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
}



inline jule::Bool _1a5872634_check_type_alias_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _103744_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a7e5397c:;
		if (it != expr.end()) {
			jule::Ptr<_1a5912d12_TypeAlias> _1a7e53a04_ta = *it;
			{
				_1a587236a_check_type_alias_decl_dup(_self_, _1a7e53a04_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_103744_ok = false;
					return _103744_ok;
				}
			}
			_iter_next_1a7e5397c:;
			++it;
			goto _iter_begin_1a7e5397c;
		}
		_iter_end_1a7e5397c:;
	}
	_103744_ok = true;
	return _103744_ok;
}



inline void _1a5872953_check_enum_items_dup(_1a5864747_Sema* _self_,jule::Ptr<_1ac44a337_Enum> _104939_e) {
	{
		auto &expr = _104939_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a7e5560a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44948a_EnumItem> &_1a7e556c6_item = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a7e556c6_item.get()._field_ident)) {
					_1a5867bac_push_err(&(*_self_), _1a7e556c6_item.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _104939_e.get()._field_items;
						auto it = expr.begin();
						_iter_begin_1a7e56e47:;
						if (it != expr.end()) {
							jule::Ptr<_1ac44948a_EnumItem> &_1a7e57024_citem = *it;
							{
								if (_1a7e556c6_item == _1a7e57024_citem) {
									goto _iter_end_1a7e56e47;
								} else if (_1a7e556c6_item.get()._field_ident == _1a7e57024_citem.get()._field_ident) {
									_1a5867bac_push_err(&(*_self_), _1a7e556c6_item.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e556c6_item.get()._field_ident)}));
									_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1a7e56e47;
								}
							}
							_iter_next_1a7e56e47:;
							++it;
							goto _iter_begin_1a7e56e47;
						}
						_iter_end_1a7e56e47:;
					}
				}
			}
			_iter_next_1a7e5560a:;
			++it;
			goto _iter_begin_1a7e5560a;
		}
		_iter_end_1a7e5560a:;
	}
}



inline void _1a5872c72_check_enum_items_str(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44a337_Enum>& _106745_e) {
	{
		auto &expr = _106745_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a7e55a8e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44948a_EnumItem> _1a7e59268_item = *it;
			{
				if (_1ac449ad9_auto_expr(_1a7e59268_item.ptr())) {
					_1a7e59268_item.get()._field_value=jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr>(),jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ac4d1ab6_new_str(_1a7e59268_item.get()._field_ident)))));
					_1a7e59268_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1a7e59268_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a58cee44_Data> _107725_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_, jule::Trait<_1a5932ea8_Lookup>(_self_, 3)), _1a7e59268_item.get()._field_value.get()._field_expr);
					if ((_107725_d == nullptr)) {
						goto _iter_next_1a7e55a8e;
					}
					if ((!(_1a58d0b48_is_const(_107725_d.ptr())))) {
						_1a5867bac_push_err(_self_.ptr(), _1a7e59268_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a586e202_check_assign_type(_self_, false,_106745_e.get()._field_kind.get()._field_kind,_107725_d,_1a7e59268_item.get()._field_token);
					_1a7e59268_item.get()._field_value.get()._field_data=_107725_d;
				}
			}
			_iter_next_1a7e55a8e:;
			++it;
			goto _iter_begin_1a7e55a8e;
		}
		_iter_end_1a7e55a8e:;
	}
}



inline void _1a5873091_check_enum_items_int(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44a337_Enum>& _109245_e) {
	jule::Ptr<_1a591970e_Prim> _109313_prim = _1a591673e_prim(_109245_e.get()._field_kind.get()._field_kind.ptr());
	jule::U64 _109417_max = static_cast<jule::U64>(_1ac557d4b_max(_1a5919cd6_to_str(_109313_prim.ptr())));
	{
		auto &expr = _109245_e.get()._field_items;
		auto it = expr.begin();
		_iter_begin_1a7e60abb:;
		if (it != expr.end()) {
			jule::I64 _1a7e60cb9_i = it - expr.begin();
			jule::Ptr<_1ac44948a_EnumItem> _1a7e60e73_item = *it;
			{
				if ((_109417_max == 0LLU)) {
					_1a5867bac_push_err(_self_.ptr(), _1a7e60e73_item.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_109417_max)--;
				}
				if (_1ac449ad9_auto_expr(_1a7e60e73_item.ptr())) {
					_1a7e60e73_item.get()._field_value=jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr>(),jule::new_ptr<_1a58cee44_Data>()));
					{
						
						if (_1ac55da66_is_sig_int(_1a5919cd6_to_str(_109313_prim.ptr()))) {
							_case_begin_1a7e6334e:;
							{
								_1a7e60e73_item.get()._field_value.get()._field_data.get()._field_constant=static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a7e60cb9_i)))))))));
							}
						}
						else {
							_case_begin_1a7e62d76:;
							{
								_1a7e60e73_item.get()._field_value.get()._field_data.get()._field_constant=static__1ac4d1555_new_u64(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_109417_max - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1a7e60cb9_i))))))));
							}
						}
						_match_end_1a7e62d21:;
					}
					_1a7e60e73_item.get()._field_value.get()._field_data.get()._field_model=jule::Any(_1a7e60e73_item.get()._field_value.get()._field_data.get()._field_constant);
				} else {
					jule::Ptr<_1a58cee44_Data> _111325_d = _1a5902c03_eval_expr(_1a586dab4_eval(_self_, jule::Trait<_1a5932ea8_Lookup>(_self_, 3)), _1a7e60e73_item.get()._field_value.get()._field_expr);
					if ((_111325_d == nullptr)) {
						goto _iter_next_1a7e60abb;
					}
					if ((!(_1a58d0b48_is_const(_111325_d.ptr())))) {
						_1a5867bac_push_err(_self_.ptr(), _1a7e60e73_item.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					}
					_1a586e202_check_assign_type(_self_, false,_109245_e.get()._field_kind.get()._field_kind,_111325_d,_1a7e60e73_item.get()._field_token);
					_1a7e60e73_item.get()._field_value.get()._field_data=_111325_d;
				}
			}
			_iter_next_1a7e60abb:;
			++it;
			_1a7e60cb9_i++;
			goto _iter_begin_1a7e60abb;
		}
		_iter_end_1a7e60abb:;
	}
}



inline void _1a58733b0_check_enum_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44a337_Enum>& _112840_e) {
	if (_1aa07861b_is_ignore_ident(_112840_e.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_112840_e)),_112840_e.get()._field_ident,false)) {
		_1a5867bac_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_112840_e.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if ((_112840_e.get()._field_items.len() == 0LL)) {
		_1a5867bac_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>({jule::Any(_112840_e.get()._field_ident)}));
	}
	_1a5872953_check_enum_items_dup(_self_.ptr(), _112840_e);
	if ((_112840_e.get()._field_kind != nullptr)) {
		if ((!(_1a586bee1_check_type(_self_, _112840_e.get()._field_kind,jule::Trait<_1a5932ea8_Lookup>(_self_, 3))))) {
			return;
		}
	} else {
		_112840_e.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)))));
	}
	jule::Ptr<_1a591970e_Prim> _115517_t = _1a591673e_prim(_112840_e.get()._field_kind.get()._field_kind.ptr());
	if ((_115517_t == nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if (_1a591d13b_is_str(_115517_t.ptr())) {
			_case_begin_1a7e7144a:;
			{
				_1a5872c72_check_enum_items_str(_self_, _112840_e);
			}
		}
		else if (_1ac55e1c6_is_int(_1a5919cd6_to_str(_115517_t.ptr()))) {
			_case_begin_1a7e714b1:;
			{
				_1a5873091_check_enum_items_int(_self_, _112840_e);
			}
		}
		else {
			_case_begin_1a7e6d326:;
			{
				_1a5867bac_push_err(_self_.ptr(), _112840_e.get()._field_token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7e70669:;
	}
}



inline jule::Bool _1a587368a_check_enum_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _117538_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_enums;
		auto it = expr.begin();
		_iter_begin_1a7e73d43:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44a337_Enum> _1a7e73dba_e = *it;
			{
				_1a58733b0_check_enum_decl(_self_, _1a7e73dba_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_117538_ok = false;
					return _117538_ok;
				}
			}
			_iter_next_1a7e73d43:;
			++it;
			goto _iter_begin_1a7e73d43;
		}
		_iter_end_1a7e73d43:;
	}
	_117538_ok = true;
	return _117538_ok;
}



inline jule::Bool _1a5873a42_check_decl_generics(_1a5864747_Sema* _self_,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>& _118739_generics) {
	jule::Bool _118772_ok = jule::Bool();
	_118772_ok=true;
	{
		auto &expr = _118739_generics;
		auto it = expr.begin();
		_iter_begin_1a7e75c13:;
		if (it != expr.end()) {
			jule::I64 _1a7e75ecc_i = it - expr.begin();
			jule::Ptr<_1aa094868_GenericDecl> &_1a7e7621e_g = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a7e7621e_g.get()._field_ident)) {
					_1a5867bac_push_err(&(*_self_), _1a7e7621e_g.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					_118772_ok=false;
					goto _iter_next_1a7e75c13;
				}
				_julec_label_duplication_lookup:;
				{
					auto &expr = _118739_generics;
					auto it = expr.begin();
					_iter_begin_1a7e778e6:;
					if (it != expr.end()) {
						jule::I64 _1a7e77990_j = it - expr.begin();
						jule::Ptr<_1aa094868_GenericDecl> &_1a7e77c15_ct = *it;
						{
							{
								
								if (_1a7e77990_j >= _1a7e75ecc_i) {
									_case_begin_1a7e7841e:;
									{
										goto _iter_end_1a7e778e6;
									}
								}
								else if (_1a7e7621e_g.get()._field_ident == _1a7e77c15_ct.get()._field_ident) {
									_case_begin_1a7e78496:;
									{
										_1a5867bac_push_err(&(*_self_), _1a7e7621e_g.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e7621e_g.get()._field_ident)}));
										_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										_118772_ok=false;
										goto _iter_end_1a7e778e6;
									}
								}
								_match_end_1a7e7830e:;
							}
						}
						_iter_next_1a7e778e6:;
						++it;
						_1a7e77990_j++;
						goto _iter_begin_1a7e778e6;
					}
					_iter_end_1a7e778e6:;
				}
			}
			_iter_next_1a7e75c13:;
			++it;
			_1a7e75ecc_i++;
			goto _iter_begin_1a7e75c13;
		}
		_iter_end_1a7e75c13:;
	}
	return _118772_ok;
}



inline jule::Bool _1a5873e3d_check_fn_decl_params_dup(_1a5864747_Sema* _self_,jule::Ptr<_1ab832324_Fn>& _121544_f) {
	jule::Bool _121554_ok = jule::Bool();
	_121554_ok=true;
	_julec_label_check:;
	{
		auto &expr = _121544_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a7e7b675:;
		if (it != expr.end()) {
			jule::I64 _1a7e7b873_i = it - expr.begin();
			jule::Ptr<_1ab830300_Param> &_1a7e7ba4e_p = *it;
			{
				{
					auto &expr = _121544_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a7e7c258:;
					if (it != expr.end()) {
						jule::Ptr<_1aa094868_GenericDecl> &_1a7e7c324_g = *it;
						{
							if (_1a7e7ba4e_p.get()._field_ident == _1a7e7c324_g.get()._field_ident) {
								_121554_ok=false;
								_1a5867bac_push_err(&(*_self_), _1a7e7ba4e_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e7ba4e_p.get()._field_ident)}));
								_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1a7e7b675;
							}
						}
						_iter_next_1a7e7c258:;
						++it;
						goto _iter_begin_1a7e7c258;
					}
					_iter_end_1a7e7c258:;
				}
				_julec_label_params_lookup:;
				{
					auto &expr = _121544_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a7e7ca83:;
					if (it != expr.end()) {
						jule::I64 _1a7e7c577_j = it - expr.begin();
						jule::Ptr<_1ab830300_Param> &_1a7e7e436_jp = *it;
						{
							{
								
								if (_1a7e7c577_j >= _1a7e7b873_i) {
									_case_begin_1a7e7eb40:;
									{
										goto _iter_end_1a7e7ca83;
									}
								}
								else if (_1aa078929_is_anon_ident(_1a7e7ba4e_p.get()._field_ident) || _1aa078929_is_anon_ident(_1a7e7e436_jp.get()._field_ident)) {
									_case_begin_1a7e7ebb7:;
									{
										goto _iter_end_1a7e7ca83;
									}
								}
								else if (_1a7e7ba4e_p.get()._field_ident == _1a7e7e436_jp.get()._field_ident) {
									_case_begin_1a7e7ec3e:;
									{
										_121554_ok=false;
										_1a5867bac_push_err(&(*_self_), _1a7e7ba4e_p.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e7ba4e_p.get()._field_ident)}));
										_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1a7e7b675;
									}
								}
								_match_end_1a7e7ea1e:;
							}
						}
						_iter_next_1a7e7ca83:;
						++it;
						_1a7e7c577_j++;
						goto _iter_begin_1a7e7ca83;
					}
					_iter_end_1a7e7ca83:;
				}
			}
			_iter_next_1a7e7b675:;
			++it;
			_1a7e7b873_i++;
			goto _iter_begin_1a7e7b675;
		}
		_iter_end_1a7e7b675:;
	}
	return _121554_ok;
}



inline jule::Bool _1a5874328_check_fn_decl_result_dup(_1a5864747_Sema* _self_,jule::Ptr<_1ab832324_Fn>& _125144_f) {
	jule::Bool _125154_ok = jule::Bool();
	_125154_ok=true;
	if (_1ab8329d9_is_void(_125144_f.ptr())) {
		return _125154_ok;
	}
	{
		auto &expr = _125144_f.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a7e839bd:;
		if (it != expr.end()) {
			jule::I64 _1a7e83c54_i = it - expr.begin();
			_1aa07563a_Token &_1a7e83e74_v = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a7e83e74_v._field_kind)) {
					goto _iter_next_1a7e839bd;
				}
				{
					auto &expr = _125144_f.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a7e84b01:;
					if (it != expr.end()) {
						jule::Ptr<_1aa094868_GenericDecl> &_1a7e84cee_g = *it;
						{
							if (_1a7e83e74_v._field_kind == _1a7e84cee_g.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a7e84b01:;
						++it;
						goto _iter_begin_1a7e84b01;
					}
					_iter_end_1a7e84b01:;
				}
				{
					auto &expr = _125144_f.get()._field_params;
					auto it = expr.begin();
					_iter_begin_1a7e85d88:;
					if (it != expr.end()) {
						jule::Ptr<_1ab830300_Param> &_1a7e85eba_p = *it;
						{
							if (_1a7e83e74_v._field_kind == _1a7e85eba_p.get()._field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_1a7e85d88:;
						++it;
						goto _iter_begin_1a7e85d88;
					}
					_iter_end_1a7e85d88:;
				}
				_julec_label_itself_lookup:;
				{
					auto &expr = _125144_f.get()._field_result.get()._field_idents;
					auto it = expr.begin();
					_iter_begin_1a7e87120:;
					if (it != expr.end()) {
						jule::I64 _1a7e8721e_j = it - expr.begin();
						_1aa07563a_Token &_1a7e87461_jv = *it;
						{
							{
								
								if (_1a7e8721e_j >= _1a7e83c54_i) {
									_case_begin_1a7e87b26:;
									{
										goto _iter_end_1a7e87120;
									}
								}
								else if (_1a7e87461_jv._field_kind == _1a7e83e74_v._field_kind) {
									_case_begin_1a7e87b9d:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a7e87a16:;
							}
						}
						_iter_next_1a7e87120:;
						++it;
						_1a7e8721e_j++;
						goto _iter_begin_1a7e87120;
					}
					_iter_end_1a7e87120:;
				}
				goto _iter_next_1a7e839bd;
				_julec_label_exist:;
				_1a5867bac_push_err(&(*_self_), _1a7e83e74_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e83e74_v._field_kind)}));
				_1a58680a8_push_suggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				_125154_ok=false;
			}
			_iter_next_1a7e839bd:;
			++it;
			_1a7e83c54_i++;
			goto _iter_begin_1a7e839bd;
		}
		_iter_end_1a7e839bd:;
	}
	return _125154_ok;
}



inline void _1a5874636_check_fn_decl_types(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _130044_f) {
	jule::Slice<jule::Ptr<_1aa094868_GenericDecl>> _130117_generics = _130044_f.get()._field_generics;
	if ((_130044_f.get()._field_owner != nullptr) && (_130044_f.get()._field_owner.get()._field_generics.len() != 0LL)) {
		_130117_generics=jule::append(_130117_generics,_130044_f.get()._field_owner.get()._field_generics);
	}
	{
		auto &expr = _130044_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a7e8c5dc:;
		if (it != expr.end()) {
			jule::Ptr<_1ab830300_Param> _1a7e8c6ec_p = *it;
			{
				if ((!(_1ab830c07_is_self(_1a7e8c6ec_p.ptr())))) {
					jule::Ptr<_1a5913e9a_TypeKind> _130825_kind = _1a586ec6e_build_non_generic_type_kind(_self_, _1a7e8c6ec_p.get()._field_kind.get()._field_decl,_130117_generics);
					_1a7e8c6ec_p.get()._field_kind.get()._field_kind=_130825_kind;
				}
			}
			_iter_next_1a7e8c5dc:;
			++it;
			goto _iter_begin_1a7e8c5dc;
		}
		_iter_end_1a7e8c5dc:;
	}
	if ((!(_1ab8329d9_is_void(_130044_f.ptr())))) {
		jule::Ptr<_1a5913e9a_TypeKind> _131421_kind = _1a586ec6e_build_non_generic_type_kind(_self_, _130044_f.get()._field_result.get()._field_kind.get()._field_decl,_130117_generics);
		_130044_f.get()._field_result.get()._field_kind.get()._field_kind=_131421_kind;
	}
}



inline void _1a5874999_check_fn_decl_prototype(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _132148_f) {
	if (_132148_f.get()._field_exceptional && _132148_f.get()._field_cpp_linked) {
		_1a5867bac_push_err(_self_.ptr(), _132148_f.get()._field_token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;
	}
	if (_132148_f.get()._field_exceptional) {
		if (_1ab83308e_is_entry_point(_132148_f.ptr())) {
			_1a5867bac_push_err(_self_.ptr(), _132148_f.get()._field_token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1ab833369_is_init(_132148_f.ptr())) {
			_1a5867bac_push_err(_self_.ptr(), _132148_f.get()._field_token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		}
	}
	{
		
		if ((!(_1a5873a42_check_decl_generics(_self_.ptr(), _132148_f.get()._field_generics)))) {
			_case_begin_1a7e9357c:;
		}
		else if ((!(_1a5873e3d_check_fn_decl_params_dup(_self_.ptr(), _132148_f)))) {
			_case_begin_1a7e935e3:;
		}
		else if ((!(_1a5874328_check_fn_decl_result_dup(_self_.ptr(), _132148_f)))) {
			_case_begin_1a7e93659:;
		}
		_match_end_1a7e91a53:;
	}
	_1a5874636_check_fn_decl_types(_self_, _132148_f);
}



inline void _1a5874ceb_check_trait_decl_method(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _134448_f) {
	if (_1aa07861b_is_ignore_ident(_134448_f.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _134448_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a5874999_check_fn_decl_prototype(_self_, _134448_f);
	_134448_f.get()._field_sema=_self_;
}



inline void _1a587514d_check_trait_decl_methods(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44770d_Trait>& _135349_t) {
	{
		auto &expr = _135349_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7e97b25:;
		if (it != expr.end()) {
			jule::I64 _1a7e97be1_i = it - expr.begin();
			jule::Ptr<_1ab832324_Fn> _1a7e97dab_f = *it;
			{
				_1a5874ceb_check_trait_decl_method(_self_, _1a7e97dab_f);
				_135349_t.get()._field_mutable=_135349_t.get()._field_mutable || _1a7e97dab_f.get()._field_params[0LL].get()._field_mutable;
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &expr = _135349_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a7e99d36:;
					if (it != expr.end()) {
						jule::I64 _1a7e99e02_j = it - expr.begin();
						jule::Ptr<_1ab832324_Fn> _1a7e9a0bc_jf = *it;
						{
							{
								
								if (_1a7e99e02_j >= _1a7e97be1_i) {
									_case_begin_1a7e9a782:;
									{
										goto _iter_end_1a7e99d36;
									}
								}
								else if (_1a7e97dab_f.get()._field_ident == _1a7e9a0bc_jf.get()._field_ident) {
									_case_begin_1a7e9a809:;
									{
										_1a5867bac_push_err(_self_.ptr(), _1a7e97dab_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7e97dab_f.get()._field_ident)}));
										_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1a7e99d36;
									}
								}
								_match_end_1a7e9a672:;
							}
						}
						_iter_next_1a7e99d36:;
						++it;
						_1a7e99e02_j++;
						goto _iter_begin_1a7e99d36;
					}
					_iter_end_1a7e99d36:;
				}
			}
			_iter_next_1a7e97b25:;
			++it;
			_1a7e97be1_i++;
			goto _iter_begin_1a7e97b25;
		}
		_iter_end_1a7e97b25:;
	}
}



inline void _1a587545b_check_trait_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44770d_Trait>& _138441_t) {
	if (_1aa07861b_is_ignore_ident(_138441_t.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _138441_t.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_138441_t)),_138441_t.get()._field_ident,false)) {
		_1a5867bac_push_err(_self_.ptr(), _138441_t.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_138441_t.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a587514d_check_trait_decl_methods(_self_, _138441_t);
}



inline jule::Bool _1a5875736_check_trait_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _139639_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a7ea1a96:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> _1a7ea1b1d_t = *it;
			{
				_1a587545b_check_trait_decl(_self_, _1a7ea1b1d_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_139639_ok = false;
					return _139639_ok;
				}
			}
			_iter_next_1a7ea1a96:;
			++it;
			goto _iter_begin_1a7ea1a96;
		}
		_iter_end_1a7ea1a96:;
	}
	_139639_ok = true;
	return _139639_ok;
}



inline jule::Bool _1a5875c0e_check_trait_impl_methods(_1a5864747_Sema* _self_,jule::Ptr<_1ac44770d_Trait>& _140848_base,jule::Ptr<_1ac44c05e_Impl>& _140863_ipl) {
	jule::Bool _140877_ok = jule::Bool();
	_140877_ok=true;
	{
		auto &expr = _140863_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ea3c41:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> &_1a7ea41c5_f = *it;
			{
				if ((_1ac448973_find_method(_140848_base.ptr(), _1a7ea41c5_f.get()._field_ident) == nullptr)) {
					_1a5867bac_push_err(&(*_self_), _1a7ea41c5_f.get()._field_token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>({jule::Any(_140848_base.get()._field_ident),jule::Any(_1a7ea41c5_f.get()._field_ident)}));
					_140877_ok=false;
				}
			}
			_iter_next_1a7ea3c41:;
			++it;
			goto _iter_begin_1a7ea3c41;
		}
		_iter_end_1a7ea3c41:;
	}
	return _140877_ok;
}



inline jule::Bool _1a5876182_impl_to_struct(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _141939_dest,jule::Ptr<_1ac44c05e_Impl>& _141959_ipl) {
	jule::Bool _141973_ok = jule::Bool();
	_141973_ok=true;
	{
		auto &expr = _141959_ipl.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ea6c55:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7ea71d9_f = *it;
			{
				if ((_1ab811b1c_find_method(_141939_dest.ptr(), _1a7ea71d9_f.get()._field_ident,_1a7ea71d9_f.get()._field_statically) != nullptr) || (_1ab81237b_find_field(_141939_dest.ptr(), _1a7ea71d9_f.get()._field_ident) != nullptr)) {
					_1a5867bac_push_err(_self_.ptr(), _1a7ea71d9_f.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141939_dest.get()._field_ident),jule::Any(_1a7ea71d9_f.get()._field_ident)}));
					_141973_ok=false;
					goto _iter_next_1a7ea6c55;
				}
				if ((_141939_dest.get()._field_generics.len() > 0LL) && (_1a7ea71d9_f.get()._field_generics.len() > 0LL)) {
					{
						auto &expr = _1a7ea71d9_f.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1a7ea9e67:;
						if (it != expr.end()) {
							jule::Ptr<_1aa094868_GenericDecl> _1a7eaa033_fg = *it;
							{
								{
									auto &expr = _141939_dest.get()._field_generics;
									auto it = expr.begin();
									_iter_begin_1a7eaa6c6:;
									if (it != expr.end()) {
										jule::Ptr<_1aa094868_GenericDecl> _1a7eaa792_dg = *it;
										{
											if (_1a7eaa033_fg.get()._field_ident == _1a7eaa792_dg.get()._field_ident) {
												_1a5867bac_push_err(_self_.ptr(), _1a7eaa033_fg.get()._field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												_141973_ok=false;
											}
										}
										_iter_next_1a7eaa6c6:;
										++it;
										goto _iter_begin_1a7eaa6c6;
									}
									_iter_end_1a7eaa6c6:;
								}
							}
							_iter_next_1a7ea9e67:;
							++it;
							goto _iter_begin_1a7ea9e67;
						}
						_iter_end_1a7ea9e67:;
					}
				}
				_1a5868e99_check_directives(_self_, _1a7ea71d9_f.get()._field_directives,jule::Any(_1a7ea71d9_f));
				_1a7ea71d9_f.get()._field_sema=_self_;
				_1a7ea71d9_f.get()._field_owner=_141939_dest;
				_141939_dest.get()._field_methods = jule::alloc_for_append(_141939_dest.get()._field_methods,1);_141939_dest.get()._field_methods.__push(_1a7ea71d9_f);
			}
			_iter_next_1a7ea6c55:;
			++it;
			goto _iter_begin_1a7ea6c55;
		}
		_iter_end_1a7ea6c55:;
	}
	{
		auto &expr = _141959_ipl.get()._field_statics;
		auto it = expr.begin();
		_iter_begin_1a7ea730a:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a7ea734e_v = *it;
			{
				
				if ((_1ab811b1c_find_method(_141939_dest.ptr(), _1a7ea734e_v.get()._field_ident,true) != nullptr) || (_1ab811ec4_find_static(_141939_dest.ptr(), _1a7ea734e_v.get()._field_ident) != nullptr)) {
					_1a5867bac_push_err(_self_.ptr(), _1a7ea734e_v.get()._field_token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>({jule::Any(_141939_dest.get()._field_ident),jule::Any(_1a7ea734e_v.get()._field_ident)}));
					_141973_ok=false;
					goto _iter_next_1a7ea730a;
				}
				_1a5876eda_check_var_decl(_self_, _1a7ea734e_v,jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
				_1a587c144_check_type_var(_self_, _1a7ea734e_v,jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
				_141939_dest.get()._field_statics = jule::alloc_for_append(_141939_dest.get()._field_statics,1);_141939_dest.get()._field_statics.__push(_1a7ea734e_v);
			}
			_iter_next_1a7ea730a:;
			++it;
			goto _iter_begin_1a7ea730a;
		}
		_iter_end_1a7ea730a:;
	}
	return _141973_ok;
}



inline void _1a58764a1_impl_trait(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44c05e_Impl>& _146435_decl) {
	jule::Ptr<_1a5913e9a_TypeKind> _146517_base_t = _1a586cc17_select_type(_self_, _146435_decl.get()._field_base);
	if ((_146517_base_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ac44770d_Trait> _146917_base = _1a5918004_trt(_146517_base_t.ptr());
	if ((_146917_base == nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _146435_decl.get()._field_base.get()._field_token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_146517_base_t.ptr()))}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _147617_dest_t = _1a586cc17_select_type(_self_, _146435_decl.get()._field_dest);
	if ((_147617_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ab814515_StructIns> _148017_dest_s = _1a5917c29_strct(_147617_dest_t.ptr());
	if ((_148017_dest_s == nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _146435_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_147617_dest_t.ptr()))}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ab810b3d_Struct> _148717_dest = _148017_dest_s.get()._field_decl;
	if (_1aa07c6ec_dir(_148717_dest.get()._field_token._field_file.ptr()) != _1aa07c6ec_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a5867bac_push_err(_self_.ptr(), _146435_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	_146917_base.get()._field_implemented = jule::alloc_for_append(_146917_base.get()._field_implemented,1);_146917_base.get()._field_implemented.__push(_148717_dest);
	_148717_dest.get()._field_implements = jule::alloc_for_append(_148717_dest.get()._field_implements,1);_148717_dest.get()._field_implements.__push(_146917_base);
	if ((_146435_decl.get()._field_statics.len() > 0LL)) {
		_1a5867bac_push_err(_self_.ptr(), _146435_decl.get()._field_statics[0LL].get()._field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	}
	{
		
		if ((!(_1a5875c0e_check_trait_impl_methods(_self_.ptr(), _146917_base,_146435_decl)))) {
			_case_begin_1a7eba63c:;
			{
				return;
			}
		}
		else if ((!(_1a5876182_impl_to_struct(_self_, _148717_dest,_146435_decl)))) {
			_case_begin_1a7eba928:;
			{
				return;
			}
		}
		_match_end_1a7eb8272:;
	}
}



inline void _1a58767c0_impl_struct(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44c05e_Impl>& _150736_decl) {
	jule::Ptr<_1a5913e9a_TypeKind> _150817_dest_t = _1a586cc17_select_type(_self_, _150736_decl.get()._field_dest);
	if ((_150817_dest_t == nullptr)) {
		return;
	}
	jule::Ptr<_1ab814515_StructIns> _151217_dest_s = _1a5917c29_strct(_150817_dest_t.ptr());
	if ((_151217_dest_s == nullptr)) {
		_1a5867bac_push_err(_self_.ptr(), _150736_decl.get()._field_dest.get()._field_token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_150817_dest_t.ptr()))}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ab810b3d_Struct> _151917_dest = _151217_dest_s.get()._field_decl;
	if (_1aa07c6ec_dir(_151917_dest.get()._field_token._field_file.ptr()) != _1aa07c6ec_dir(_self_.get()._field_file.get()._field_file.ptr())) {
		_1a5867bac_push_err(_self_.ptr(), _150736_decl.get()._field_dest.get()._field_token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;
	}
	{
		
		if ((!(_1a5876182_impl_to_struct(_self_, _151917_dest,_150736_decl)))) {
			_case_begin_1a7ec16dc:;
			{
				return;
			}
		}
		_match_end_1a7ec0ce6:;
	}
}



inline void _1a5876ade_impl_impl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ac44c05e_Impl>& _153234_decl) {
	{
		
		if (_1ac44c68b_is_trait_impl(_153234_decl.ptr())) {
			_case_begin_1a7ec2732:;
			{
				_1a58764a1_impl_trait(_self_, _153234_decl);
			}
		}
		else if (_1ac44c966_is_struct_impl(_153234_decl.ptr())) {
			_case_begin_1a7ec27a9:;
			{
				_1a58767c0_impl_struct(_self_, _153234_decl);
			}
		}
		_match_end_1a7ec2644:;
	}
}



inline void _1a5876eda_check_var_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a588601b_Var>& _154339_decl,jule::Trait<_1a5932ea8_Lookup> _154355_l) {
	if (_1aa07861b_is_ignore_ident(_154339_decl.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	if (_1a5886912_is_type_inferred(_154339_decl.ptr())) {
		if ((!(_1a5886637_is_initialized(_154339_decl.ptr())))) {
			_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		}
	} else {
		_1a586bee1_check_type(_self_, _154339_decl.get()._field_kind,_154355_l);
	}
	if (_154339_decl.get()._field_constant && _154339_decl.get()._field_reference) {
		_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	}
	if ((!(_1a5886637_is_initialized(_154339_decl.ptr())))) {
		if (_154339_decl.get()._field_constant) {
			_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		}
		if (_154339_decl.get()._field_statically) {
			_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		}
		if (_154339_decl.get()._field_reference) {
			_1a5867bac_push_err(_self_.ptr(), _154339_decl.get()._field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		}
	}
}



inline void _1a5877309_check_global_var_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a588601b_Var>& _157746_decl) {
	if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_157746_decl)),_157746_decl.get()._field_ident,_157746_decl.get()._field_cpp_linked)) {
		_1a5867bac_push_err(_self_.ptr(), _157746_decl.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_157746_decl.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	if (_157746_decl.get()._field_cpp_linked && _157746_decl.get()._field_constant) {
		_1a5867bac_push_err(_self_.ptr(), _157746_decl.get()._field_token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	}
	if (((!(_157746_decl.get()._field_cpp_linked)) && (!(_157746_decl.get()._field_constant))) && (!(_157746_decl.get()._field_statically))) {
		_1a5867bac_push_err(_self_.ptr(), _157746_decl.get()._field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	}
	_1a5868e99_check_directives(_self_, _157746_decl.get()._field_directives,jule::Any(_157746_decl));
	_1a5876eda_check_var_decl(_self_, _157746_decl,jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
}



inline jule::Bool _1a58775d4_check_global_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _159640_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a7ed1521:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a7ed1598_decl = *it;
			{
				_1a5877309_check_global_var_decl(_self_, _1a7ed1598_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_159640_ok = false;
					return _159640_ok;
				}
			}
			_iter_next_1a7ed1521:;
			++it;
			goto _iter_begin_1a7ed1521;
		}
		_iter_end_1a7ed1521:;
	}
	_159640_ok = true;
	return _159640_ok;
}



inline jule::Bool _1a5877aac_check_struct_trait_impl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _160848_strct,jule::Ptr<_1ac44770d_Trait>& _160869_trt) {
	jule::Bool _160884_ok = jule::Bool();
	{
		auto &expr = _160869_trt.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ed38ec:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7ed39b8_tf = *it;
			{
				jule::Bool _161021_exist = false;
				jule::Ptr<_1ab832324_Fn> _161121_sf = _1ab811b1c_find_method(_160848_strct.ptr(), _1a7ed39b8_tf.get()._field_ident,_1a7ed39b8_tf.get()._field_statically);
				jule::Ptr<_1ab836218_FnIns> _161217_tf_k = _1a58704ab_get_trait_check_fn_kind(_self_, _1a7ed39b8_tf);
				if ((_161121_sf != nullptr)) {
					jule::Ptr<_1ab836218_FnIns> _161425_sf_k = _1a58704ab_get_trait_check_fn_kind(_self_, _161121_sf);
					_161021_exist=((_161217_tf_k.get()._field_decl.get()._field_public == _161425_sf_k.get()._field_decl.get()._field_public) && (_161217_tf_k.get()._field_decl.get()._field_ident == _161425_sf_k.get()._field_decl.get()._field_ident)) && _1ab836b97_equals(_161217_tf_k, jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_161425_sf_k, 1))));
				}
				if (_161021_exist) {
					jule::Ptr<_1dd583043_Directive> _162221_d = _1a590c636_find_directive(_161121_sf.get()._field_directives,jule::Str("deprecated", 10));
					if ((_162221_d != nullptr)) {
						_1a5867bac_push_err(_self_.ptr(), _162221_d.get()._field_tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					}
					_160884_ok=false;
				} else {
					
					jule::Str _162925_s = _1ab837acc_get_kind_str(_161217_tf_k.ptr(), true);
					if (_1a7ed39b8_tf.get()._field_public) {
						(_162925_s).buffer.insert(0, (jule::Str("pub ", 4)));
					}
					_1a5867bac_push_err(_self_.ptr(), _160848_strct.get()._field_token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>({jule::Any(_160869_trt.get()._field_ident),jule::Any(_162925_s)}));
					_160884_ok=false;
				}
			}
			_iter_next_1a7ed38ec:;
			++it;
			goto _iter_begin_1a7ed38ec;
		}
		_iter_end_1a7ed38ec:;
	}
	return _160884_ok;
}



inline jule::Bool _1a5877e53_check_struct_impls(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _164043_s) {
	jule::Bool _164057_ok = jule::Bool();
	_164057_ok=true;
	{
		auto &expr = _164043_s.get()._field_implements;
		auto it = expr.begin();
		_iter_begin_1a7edb76d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> _1a7edbb14_trt = *it;
			{
				_164057_ok=_1a5877aac_check_struct_trait_impl(_self_, _164043_s,_1a7edbb14_trt) && _164057_ok;
			}
			_iter_next_1a7edb76d:;
			++it;
			goto _iter_begin_1a7edb76d;
		}
		_iter_end_1a7edb76d:;
	}
	return _164057_ok;
}



inline jule::Bool _1a587830a_check_struct_fields(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _164844_st) {
	jule::Bool _164859_ok = jule::Bool();
	_164859_ok=true;
	jule::Ptr<_1a5927189_TypeChecker> _165117_tc = jule::new_ptr<_1a5927189_TypeChecker>(_1a5927189_TypeChecker(_self_,jule::Trait<_1a5932ea8_Lookup>(_self_, 3),jule::new_ptr<_1a5926045_Referencer>(_1a5926045_Referencer(_164844_st.get()._field_ident,jule::Any(jule::Any(_164844_st)),nullptr)),_1aa07563a_Token(),_164844_st.get()._field_generics,jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool()));
	jule::I64 _166113_n = _164844_st.get()._field_instances.len();
	{
		auto &expr = _164844_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a7ede73d:;
		if (it != expr.end()) {
			jule::Ptr<_1ab80cdd2_Field> _1a7ede93b_f = *it;
			{
				_1a7ede93b_f.get()._field_owner=_164844_st;
				_1a7ede93b_f.get()._field_kind.get()._field_kind=_1a5930082_check_decl(_165117_tc.ptr(), _1a7ede93b_f.get()._field_kind.get()._field_decl);
				_164859_ok=(_1a7ede93b_f.get()._field_kind.get()._field_kind != nullptr) && _164859_ok;
				{
					auto &expr = _164844_st.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1a7ee14ba:;
					if (it != expr.end()) {
						jule::Ptr<_1ab80cdd2_Field> _1a7ee15a8_cf = *it;
						{
							if (_1a7ede93b_f == _1a7ee15a8_cf) {
								goto _iter_end_1a7ee14ba;
							} else if (_1a7ede93b_f.get()._field_ident == _1a7ee15a8_cf.get()._field_ident) {
								_1a5867bac_push_err(_self_.ptr(), _1a7ede93b_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_1a7ede93b_f.get()._field_ident)}));
								_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								_164859_ok=false;
							}
						}
						_iter_next_1a7ee14ba:;
						++it;
						goto _iter_begin_1a7ee14ba;
					}
					_iter_end_1a7ee14ba:;
				}
			}
			_iter_next_1a7ede73d:;
			++it;
			goto _iter_begin_1a7ede73d;
		}
		_iter_end_1a7ede73d:;
	}
	if (_164859_ok && (_166113_n != static_cast<jule::I64>(static_cast<jule::I64>(_164844_st.get()._field_instances.len())))) {
		_165117_tc.get()._field_referencer=nullptr;
		_164844_st.get()._field_instances=_164844_st.get()._field_instances.slice(0LL,_166113_n);
		{
			auto &expr = _164844_st.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a7ee1b5d:;
			if (it != expr.end()) {
				jule::Ptr<_1ab80cdd2_Field> _1a7ee3e07_f = *it;
				{
					_1a7ee3e07_f.get()._field_kind.get()._field_kind=_1a5930082_check_decl(_165117_tc.ptr(), _1a7ee3e07_f.get()._field_kind.get()._field_decl);
				}
				_iter_next_1a7ee1b5d:;
				++it;
				goto _iter_begin_1a7ee1b5d;
			}
			_iter_end_1a7ee1b5d:;
		}
	}
	return _164859_ok;
}



inline jule::Bool _1a5878706_check_struct_decl_methods(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _169050_s) {
	jule::Bool _169064_ok = jule::Bool();
	{
		auto &expr = _169050_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ee5e2b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7ee5ee7_m = *it;
			{
				_1a5874636_check_fn_decl_types(_self_, _1a7ee5ee7_m);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_169064_ok = false;
					return _169064_ok;
				}
			}
			_iter_next_1a7ee5e2b:;
			++it;
			goto _iter_begin_1a7ee5e2b;
		}
		_iter_end_1a7ee5e2b:;
	}
	_169064_ok = true;
	return _169064_ok;
}



inline void _1a5878a14_check_struct_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _170042_s) {
	if (_1aa07861b_is_ignore_ident(_170042_s.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _170042_s.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_170042_s)),_170042_s.get()._field_ident,_170042_s.get()._field_cpp_linked)) {
		_1a5867bac_push_err(_self_.ptr(), _170042_s.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_170042_s.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
	_1a5868e99_check_directives(_self_, _170042_s.get()._field_directives,jule::Any(_170042_s));
	_170042_s.get()._field_sema=_self_;
	{
		
		if ((!(_1a5873a42_check_decl_generics(_self_.ptr(), _170042_s.get()._field_generics)))) {
			_case_begin_1a7eeac44:;
		}
		else if ((!(_1a587830a_check_struct_fields(_self_, _170042_s)))) {
			_case_begin_1a7eeacaa:;
		}
		else if ((!(_1a5878706_check_struct_decl_methods(_self_, _170042_s)))) {
			_case_begin_1a7eead21:;
		}
		else if ((!(_1a5877e53_check_struct_impls(_self_, _170042_s)))) {
			_case_begin_1a7eead87:;
		}
		_match_end_1a7ee7c1e:;
	}
}



inline jule::Bool _1a5878cde_check_struct_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _172040_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a7eed472:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a7eed4e9_s = *it;
			{
				_1a5878a14_check_struct_decl(_self_, _1a7eed4e9_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_172040_ok = false;
					return _172040_ok;
				}
			}
			_iter_next_1a7eed472:;
			++it;
			goto _iter_begin_1a7eed472;
		}
		_iter_end_1a7eed472:;
	}
	_172040_ok = true;
	return _172040_ok;
}



inline void _1a587910d_check_fn_decl(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _173338_f) {
	if (_1aa07861b_is_ignore_ident(_173338_f.get()._field_ident)) {
		_1a5867bac_push_err(_self_.ptr(), _173338_f.get()._field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	}
	_1a5868e99_check_directives(_self_, _173338_f.get()._field_directives,jule::Any(_173338_f));
	_173338_f.get()._field_sema=_self_;
	_1a5874999_check_fn_decl_prototype(_self_, _173338_f);
	if (_1a5868a9d_is_duplicated_ident(_self_.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_173338_f)),_173338_f.get()._field_ident,_173338_f.get()._field_cpp_linked)) {
		if ((_173338_f.get()._field_ident == jule::Str("init", 4))) {
			jule::Ptr<_1ab832324_Fn> _174521_init = _1a58666d3_find_fn(_self_.ptr(), jule::Str("init", 4),false);
			if ((_174521_init != nullptr)) {
				return;
			}
		}
		_1a5867bac_push_err(_self_.ptr(), _173338_f.get()._field_token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>({jule::Any(_173338_f.get()._field_ident)}));
		_1a58680a8_push_suggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	}
}



inline jule::Bool _1a58793d8_check_fn_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	jule::Bool _175636_ok = jule::Bool();
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a8005435:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a80054ac_f = *it;
			{
				_1a587910d_check_fn_decl(_self_, _1a80054ac_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					_175636_ok = false;
					return _175636_ok;
				}
			}
			_iter_next_1a8005435:;
			++it;
			goto _iter_begin_1a8005435;
		}
		_iter_end_1a8005435:;
	}
	_175636_ok = true;
	return _175636_ok;
}



inline void _1a58798b1_push_cycle_error(_1a5864747_Sema* _self_,jule::Ptr<_1ab810b3d_Struct>& _176832_st1,jule::Ptr<_1ab810b3d_Struct>& _176847_st2,jule::Str& _176866_message) {
	
	jule::Str _177113_refers_to = _1c4810938_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_176832_st1.get()._field_ident),jule::Any(_176847_st2.get()._field_ident)}));
	(_176866_message).buffer.insert(0, (((_1c3ad1c93_repeat(jule::Str(" ", 1),4LL) + _177113_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a5879e22_check_cross_cycle(_1a5864747_Sema* _self_,jule::Ptr<_1ab810b3d_Struct>& _177533_st1,jule::Ptr<_1ab810b3d_Struct>& _177548_st2,jule::Str& _177567_message) {
	{
		auto &expr = _177548_st2.get()._field_uses;
		auto it = expr.begin();
		_iter_begin_1a8009d41:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> &_1a8009e40_u = *it;
			{
				if (_1a8009e40_u == _177533_st1) {
					_1a58798b1_push_cycle_error(&(*_self_), _177548_st2,_1a8009e40_u,_177567_message);
					return false;
				}
				if ((!(_1a5879e22_check_cross_cycle(&(*_self_), _177533_st1,_1a8009e40_u,_177567_message)))) {
					_1a58798b1_push_cycle_error(&(*_self_), _177548_st2,_1a8009e40_u,_177567_message);
					return false;
				}
			}
			_iter_next_1a8009d41:;
			++it;
			goto _iter_begin_1a8009d41;
		}
		_iter_end_1a8009d41:;
	}
	return true;
}



inline jule::Bool _1a587a4e9_check_struct_derive_illegal_cycles(_1a5864747_Sema* _self_,jule::Str _179153_derive,jule::Ptr<_1ab810b3d_Struct>& _179167_st1,jule::Ptr<_1a5913e9a_TypeKind>& _179186_k) {
	jule::Bool _1791102_ok = jule::Bool();
	jule::Ptr<_1ab810b3d_Struct> _179217_st2 = _1a5925792_get_struct_from_kind(_179186_k);
	if ((_179217_st2 == nullptr)) {
		_1791102_ok = true;
		return _1791102_ok;
	}
	if (_179167_st1 == _179217_st2) {
		_1a5867bac_push_err(&(*_self_), _179167_st1.get()._field_token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>({jule::Any(_179153_derive),jule::Any(_179167_st1.get()._field_ident)}));
		_1791102_ok = false;
		return _1791102_ok;
	}
	jule::Str _180417_message = jule::Str();
	if ((!(_1a5879e22_check_cross_cycle(&(*_self_), _179167_st1,_179217_st2,_180417_message)))) {
		jule::Str _180721_err_msg = _180417_message;
		_180417_message=jule::Str();
		_1a58798b1_push_cycle_error(&(*_self_), _179167_st1,_179217_st2,_180417_message);
		_180721_err_msg=_180721_err_msg + _180417_message;
		_1a5867bac_push_err(&(*_self_), _179167_st1.get()._field_token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>({jule::Any(_179153_derive),jule::Any(_180721_err_msg)}));
		_1791102_ok = false;
		return _1791102_ok;
	}
	_1791102_ok = true;
	return _1791102_ok;
}



inline jule::Bool _1a587a8b2_check_struct_ins_derive_clone(_1a5864747_Sema* _self_,jule::Ptr<_1ab814515_StructIns> _181852_st) {
	jule::Bool _181870_ok = jule::Bool();
	if ((!(_1ab812ada_is_derives(_181852_st.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
		_181870_ok = true;
		return _181870_ok;
	}
	{
		auto &expr = _181852_st.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a80131bd:;
		if (it != expr.end()) {
			jule::Ptr<_1ab8137bc_FieldIns> _1a8013586_f = *it;
			{
				if ((_1a8013586_f.get()._field_kind == nullptr) || (!(_1a5915809_mutable(_1a8013586_f.get()._field_kind.ptr())))) {
					goto _iter_next_1a80131bd;
				}
				if ((!(_1a5916189_supports_cloning(_1a8013586_f.get()._field_kind.ptr())))) {
					_1a5867bac_push_err(&(*_self_), _181852_st.get()._field_decl.get()._field_token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_1a8013586_f.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					_181870_ok = false;
					return _181870_ok;
				}
				if ((!(_1a587a4e9_check_struct_derive_illegal_cycles(&(*_self_), jule::Str("Clone", 5),_181852_st.get()._field_decl,_1a8013586_f.get()._field_kind)))) {
					_181870_ok = false;
					return _181870_ok;
				}
			}
			_iter_next_1a80131bd:;
			++it;
			goto _iter_begin_1a80131bd;
		}
		_iter_end_1a80131bd:;
	}
	_181870_ok = true;
	return _181870_ok;
}



inline jule::Bool _1a587ac9c_check_struct_derive_clone(_1a5864747_Sema* _self_,jule::Ptr<_1ab810b3d_Struct>& _184149_st) {
	return _1a587a8b2_check_struct_ins_derive_clone(&(*_self_), _1ab8112d1_instance(_184149_st));
}



inline jule::Bool _1a587b066_check_file_derives(_1a5864747_Sema* _self_) {
	jule::Bool _184539_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8018855:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a80188cc_st = *it;
			{
				_184539_ok=_1a587ac9c_check_struct_derive_clone(&(*_self_), _1a80188cc_st);
				if ((!(_184539_ok))) {
					goto _iter_end_1a8018855;
				}
			}
			_iter_next_1a8018855:;
			++it;
			goto _iter_begin_1a8018855;
		}
		_iter_end_1a8018855:;
	}
	return _184539_ok;
}



inline void _1a587b2a8_check_package_derives(_1a5864747_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1a8019b64:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8019c74_f = *it;
			{
				_1a58676d4_set_current_file(&(*_self_), _1a8019c74_f);
				jule::Bool _186017_ok = _1a587b066_check_file_derives(&(*_self_));
				if ((!(_186017_ok))) {
					return;
				}
			}
			_iter_next_1a8019b64:;
			++it;
			goto _iter_begin_1a8019b64;
		}
		_iter_end_1a8019b64:;
	}
}



inline void _1a587b4ea_check_package_decls(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a801b5c2:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a801b7ae_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a801b7ae_f);
				if ((!(_1a5872634_check_type_alias_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a801b5c2:;
			++it;
			goto _iter_begin_1a801b5c2;
		}
		_iter_end_1a801b5c2:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a801b935:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a801ba45_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a801ba45_f);
				if ((!(_1a5875736_check_trait_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a801b935:;
			++it;
			goto _iter_begin_1a801b935;
		}
		_iter_end_1a801b935:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a801c8d1:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a801ca24_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a801ca24_f);
				if ((!(_1a58775d4_check_global_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a801c8d1:;
			++it;
			goto _iter_begin_1a801c8d1;
		}
		_iter_end_1a801c8d1:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a801d8b0:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a801d9c0_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a801d9c0_f);
				if ((!(_1a58793d8_check_fn_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a801d8b0:;
			++it;
			goto _iter_begin_1a801d8b0;
		}
		_iter_end_1a801d8b0:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a801e806:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a801e949_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a801e949_f);
				if ((!(_1a5878cde_check_struct_decls(_self_)))) {
					return;
				}
			}
			_iter_next_1a801e806:;
			++it;
			goto _iter_begin_1a801e806;
		}
		_iter_end_1a801e806:;
	}
	_1a587b2a8_check_package_derives(_self_.ptr());
}



inline void _1a587b93a_check_data_for_type_inference(_1a5864747_Sema* _self_,jule::Ptr<_1a58cee44_Data>& _190849_d,_1aa07563a_Token& _190860_err_token) {
	{
		
		if (_1a58d0593_is_nil(_190849_d.ptr())) {
			_case_begin_1a802252e:;
			{
				_1a5867bac_push_err(&(*_self_), _190860_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1a58d086d_is_void(_190849_d.ptr())) {
			_case_begin_1a80225a6:;
			{
				_1a5867bac_push_err(&(*_self_), _190860_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_190849_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a802262d:;
			{
				_1a5867bac_push_err(&(*_self_), _190860_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8022441:;
	}
}



inline void _1a587bc48_check_var(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a588601b_Var>& _191934_v) {
	if (_191934_v.get()._field_cpp_linked) {
		return;
	}
	if (_1a5886912_is_type_inferred(_191934_v.ptr())) {
		_191934_v.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_191934_v.get()._field_value.get()._field_data.get()._field_kind));
		_1a587b93a_check_data_for_type_inference(_self_.ptr(), _191934_v.get()._field_value.get()._field_data,_191934_v.get()._field_value.get()._field_expr.get()._field_token);
	} else {
		jule::Ptr<_1a592230a_Arr> _193021_arr = _1a5917399_arr(_191934_v.get()._field_kind.get()._field_kind.ptr());
		if ((_193021_arr != nullptr)) {
			if (_193021_arr.get()._field_auto) {
				jule::Ptr<_1a592230a_Arr> _193325_data_arr = _1a5917399_arr(_191934_v.get()._field_value.get()._field_data.get()._field_kind.ptr());
				if ((_193325_data_arr != nullptr)) {
					_193021_arr.get()._field_n=_193325_data_arr.get()._field_n;
				}
			}
		}
		_1a586e202_check_assign_type(_self_, _191934_v.get()._field_reference,_191934_v.get()._field_kind.get()._field_kind,_191934_v.get()._field_value.get()._field_data,_191934_v.get()._field_value.get()._field_expr.get()._field_token);
	}
	if (_191934_v.get()._field_reference && (!(_1a592495b_is_valid_for_ref(_191934_v.get()._field_kind.get()._field_kind)))) {
		_1a5867bac_push_err(_self_.ptr(), _191934_v.get()._field_token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_191934_v.get()._field_kind.get()._field_kind.ptr()))}));
	}
	_1a5871688_check_validity_for_init_expr(_self_, _191934_v.get()._field_mutable,_191934_v.get()._field_reference,_191934_v.get()._field_kind.get()._field_kind,_191934_v.get()._field_value.get()._field_data,_191934_v.get()._field_value.get()._field_expr.get()._field_token);
	if (_191934_v.get()._field_constant) {
		if ((!(_1a58d0b48_is_const(_191934_v.get()._field_value.get()._field_data.ptr())))) {
			_1a5867bac_push_err(_self_.ptr(), _191934_v.get()._field_value.get()._field_expr.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		}
	} else {
		_191934_v.get()._field_value.get()._field_data.get()._field_constant=nullptr;
	}
	if ((_1a59185a9_tup(_191934_v.get()._field_kind.get()._field_kind.ptr()) != nullptr)) {
		_191934_v.get()._field_kind.get()._field_kind=nullptr;
	}
}



inline void _1a587c144_check_type_var(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1a588601b_Var>& _196839_decl,jule::Trait<_1a5932ea8_Lookup> _196855_l) {
	if (_196839_decl.get()._field_cpp_linked || (!(_1a5886637_is_initialized(_196839_decl.ptr())))) {
		return;
	}
	jule::Ptr<_1a58d2397_Eval> _197317_eval = (((_196839_decl.get()._field_kind != nullptr)) ? (_1a586d278_evalpd(_self_, _196855_l,_196839_decl.get()._field_kind.get()._field_kind,_196839_decl)) : (_1a586d278_evalpd(_self_, _196855_l,nullptr,_196839_decl)));
	_197317_eval.get()._field_immutable=(!(_196839_decl.get()._field_mutable));
	_196839_decl.get()._field_value.get()._field_data=_1a5902c03_eval_expr(_197317_eval, _196839_decl.get()._field_value.get()._field_expr);
	if ((_196839_decl.get()._field_value.get()._field_data == nullptr)) {
		return;
	}
	_1a587bc48_check_var(_self_, _196839_decl);
}



inline void _1a587c386_check_global_types(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a803460c:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a8034684_decl = *it;
			{
				if ((_1a5886637_is_initialized(_1a8034684_decl.ptr()) && (_1a8034684_decl.get()._field_value.get()._field_data == nullptr)) || (_1a5886912_is_type_inferred(_1a8034684_decl.ptr()) && (_1a8034684_decl.get()._field_kind.get()._field_kind == nullptr))) {
					_1a587c144_check_type_var(_self_, _1a8034684_decl,jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
				}
			}
			_iter_next_1a803460c:;
			++it;
			goto _iter_begin_1a803460c;
		}
		_iter_end_1a803460c:;
	}
}



inline jule::Ptr<_1ab836218_FnIns> _1a587c81a_ready_to_check_fn(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns>& _199942_s,jule::Ptr<_1ab832324_Fn>& _199962_f) {
	jule::Ptr<_1ab836218_FnIns> _200017_ins = _1ab8345ac_instance(_199962_f);
	if ((_199962_f.get()._field_instances.len() != 0LL)) {
		return _200017_ins;
	}
	_200017_ins.get()._field_owner=_199942_s;
	_1ab834964_append_instance(_199962_f.ptr(), _200017_ins);
	_1a5870852_reload_fn_ins_types(_self_, _200017_ins);
	_200017_ins.get()._field_reloaded=true;
	return _200017_ins;
}



inline void _1a587cc16_check_type_method(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns>& _201142_s,jule::Ptr<_1ab832324_Fn>& _201162_f) {
	if (_201162_f.get()._field_cpp_linked) {
		return;
	}
	if ((_201162_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	_1a587c81a_ready_to_check_fn(_self_, _201142_s,_201162_f);
	{
		auto &expr = _201162_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8039c72:;
		if (it != expr.end()) {
			jule::Ptr<_1ab836218_FnIns> _1a803b02b_ins = *it;
			{
				if ((_1a803b02b_ins.get()._field_scope.get()._field_stmts.len() > 0LL)) {
					goto _iter_next_1a8039c72;
				}
				_1a5880785_check_fn_ins(_self_, _1a803b02b_ins);
			}
			_iter_next_1a8039c72:;
			++it;
			goto _iter_begin_1a8039c72;
		}
		_iter_end_1a8039c72:;
	}
}



inline void _1a587d035_check_field_defaults(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns>& _203145_ins) {
	jule::Ptr<_1a58d2397_Eval> _203217_eval = _1a586dab4_eval(_self_, jule::Trait<_1a5932ea8_Lookup>(_self_, 3));
	{
		auto &expr = _203145_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a803d649:;
		if (it != expr.end()) {
			jule::Ptr<_1ab8137bc_FieldIns> _1a803d79d_f = *it;
			{
				if ((_1a803d79d_f.get()._field_decl.get()._field_default == nullptr)) {
					goto _iter_next_1a803d649;
				}
				_203217_eval.get()._field_prefix=_1a803d79d_f.get()._field_kind;
				_203217_eval.get()._field_field=_1a803d79d_f;
				_1a803d79d_f.get()._field_default=_1a5902c03_eval_expr(_203217_eval, _1a803d79d_f.get()._field_decl.get()._field_default);
				if ((_1a803d79d_f.get()._field_default == nullptr)) {
					goto _iter_next_1a803d649;
				}
				
				_1a586e202_check_assign_type(_self_, false,_1a803d79d_f.get()._field_kind,_1a803d79d_f.get()._field_default,_1a803d79d_f.get()._field_decl.get()._field_default.get()._field_token);
			}
			_iter_next_1a803d649:;
			++it;
			goto _iter_begin_1a803d649;
		}
		_iter_end_1a803d649:;
	}
}



inline jule::Ptr<_1ab836218_FnIns> _1a587d596_check_struct_ins_op(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns>& _205344_s,jule::Ptr<_1ab832324_Fn>& _205364_f,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)> _205372_p) {
	if ((_205364_f == nullptr) || (_205364_f.get()._field_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Ptr<_1ab836218_FnIns> _205717_ins = _1a587c81a_ready_to_check_fn(_self_, _205344_s,_205364_f);
	return ((_205372_p(_205364_f)) ? (_205717_ins) : (nullptr));
}



inline void _1a587d8b5_check_struct_ins(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns>& _206141_s) {
	_1a587d035_check_field_defaults(_self_, _206141_s);
	{
		auto &expr = _206141_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a80450e0:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a80457a5_f = *it;
			{
				_1a587cc16_check_type_method(_self_, _206141_s,_1a80457a5_f);
			}
			_iter_next_1a80450e0:;
			++it;
			goto _iter_begin_1a80450e0;
		}
		_iter_end_1a80450e0:;
	}
}



inline void _1a587dbd4_check_type_struct(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _206842_s) {
	if (_206842_s.get()._field_cpp_linked) {
		return;
	}
	if ((_206842_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_206842_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ab814515_StructIns> _207921_ins = _1ab8112d1_instance(_206842_s);
		_207921_ins.get()._field_checked=true;
		_1ab811688_append_instance(_206842_s.ptr(), _207921_ins);
	}
	{
		auto &expr = _206842_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8048a3e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a8048aa5_ins = *it;
			{
				_1a587d8b5_check_struct_ins(_self_, _1a8048aa5_ins);
			}
			_iter_next_1a8048a3e:;
			++it;
			goto _iter_begin_1a8048a3e;
		}
		_iter_end_1a8048a3e:;
	}
}



inline void _1a587de26_check_struct_types(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8049b3e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8049bb6_s = *it;
			{
				_1a587dbd4_check_type_struct(_self_, _1a8049bb6_s);
			}
			_iter_next_1a8049b3e:;
			++it;
			goto _iter_begin_1a8049b3e;
		}
		_iter_end_1a8049b3e:;
	}
}



inline void _1a587e289_check_struct_ins_operators(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab814515_StructIns> _209550_s) {
	{
		auto &expr = _209550_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a804b118:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a804b1d4_m = *it;
			{
				{
					auto &_match_expr{ _1a804b1d4_m.get()._field_ident };
					
					if (_match_expr == jule::Str("eq", 2)) {
						_case_begin_1a804b613:;
						{
							_209550_s.get()._field_operators._field_eq=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _209968_f) mutable -> jule::Bool {
								return static__1a588821b_eq(_209968_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt", 2)) {
						_case_begin_1a804bb85:;
						{
							_209550_s.get()._field_operators._field_gt=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _210168_f) mutable -> jule::Bool {
								return static__1a5888529_gt(_210168_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("gt_eq", 5)) {
						_case_begin_1a804bbeb:;
						{
							_209550_s.get()._field_operators._field_gt_eq=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _210371_f) mutable -> jule::Bool {
								return static__1a5888837_gt_eq(_210371_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt", 2)) {
						_case_begin_1a804bc62:;
						{
							_209550_s.get()._field_operators._field_lt=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _210568_f) mutable -> jule::Bool {
								return static__1a5888b45_lt(_210568_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("lt_eq", 5)) {
						_case_begin_1a804bcc8:;
						{
							_209550_s.get()._field_operators._field_lt_eq=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _210771_f) mutable -> jule::Bool {
								return static__1a5888e53_lt_eq(_210771_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl", 3)) {
						_case_begin_1a804bd50:;
						{
							_209550_s.get()._field_operators._field_shl=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _210969_f) mutable -> jule::Bool {
								return static__1a588964b_shl(_210969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr", 3)) {
						_case_begin_1a804bdc7:;
						{
							_209550_s.get()._field_operators._field_shr=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _211169_f) mutable -> jule::Bool {
								return static__1a5889959_shr(_211169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add", 3)) {
						_case_begin_1a804be4e:;
						{
							_209550_s.get()._field_operators._field_add=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _211369_f) mutable -> jule::Bool {
								return static__1a5889c67_add(_211369_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub", 3)) {
						_case_begin_1a804bec6:;
						{
							_209550_s.get()._field_operators._field_sub=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _211569_f) mutable -> jule::Bool {
								return static__1a588a075_sub(_211569_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div", 3)) {
						_case_begin_1a804c04d:;
						{
							_209550_s.get()._field_operators._field_div=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _211769_f) mutable -> jule::Bool {
								return static__1a588a383_div(_211769_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul", 3)) {
						_case_begin_1a804c0c5:;
						{
							_209550_s.get()._field_operators._field_mul=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _211969_f) mutable -> jule::Bool {
								return static__1a588a691_mul(_211969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod", 3)) {
						_case_begin_1a804c14c:;
						{
							_209550_s.get()._field_operators._field_mod=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _212169_f) mutable -> jule::Bool {
								return static__1a588a99e_mod(_212169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and", 7)) {
						_case_begin_1a804c1c4:;
						{
							_209550_s.get()._field_operators._field_bit_and=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _212373_f) mutable -> jule::Bool {
								return static__1a588acac_bit_and(_212373_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or", 6)) {
						_case_begin_1a804c24b:;
						{
							_209550_s.get()._field_operators._field_bit_or=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _212572_f) mutable -> jule::Bool {
								return static__1a588b0ba_bit_or(_212572_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor", 7)) {
						_case_begin_1a804c2c3:;
						{
							_209550_s.get()._field_operators._field_bit_xor=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _212773_f) mutable -> jule::Bool {
								return static__1a588b3c8_bit_xor(_212773_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("neg", 3)) {
						_case_begin_1a804c34a:;
						{
							_209550_s.get()._field_operators._field_neg=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _212969_f) mutable -> jule::Bool {
								return static__1a588bac1_neg(_212969_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("pos", 3)) {
						_case_begin_1a804c3c2:;
						{
							_209550_s.get()._field_operators._field_pos=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _213169_f) mutable -> jule::Bool {
								return static__1a588bdce_pos(_213169_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_not", 7)) {
						_case_begin_1a804c449:;
						{
							_209550_s.get()._field_operators._field_bit_not=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _213373_f) mutable -> jule::Bool {
								return static__1a588c1dc_bit_not(_213373_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("add_assign", 10)) {
						_case_begin_1a804c4c1:;
						{
							_209550_s.get()._field_operators._field_add_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _213576_f) mutable -> jule::Bool {
								return static__1a588c8d5_add_assign(_213576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("sub_assign", 10)) {
						_case_begin_1a804c548:;
						{
							_209550_s.get()._field_operators._field_sub_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _213776_f) mutable -> jule::Bool {
								return static__1a588cbe3_sub_assign(_213776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("div_assign", 10)) {
						_case_begin_1a804c5c0:;
						{
							_209550_s.get()._field_operators._field_div_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _213976_f) mutable -> jule::Bool {
								return static__1a588d001_div_assign(_213976_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mul_assign", 10)) {
						_case_begin_1a804c647:;
						{
							_209550_s.get()._field_operators._field_mul_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _214176_f) mutable -> jule::Bool {
								return static__1a588d30e_mul_assign(_214176_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("mod_assign", 10)) {
						_case_begin_1a804c6be:;
						{
							_209550_s.get()._field_operators._field_mod_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _214376_f) mutable -> jule::Bool {
								return static__1a588d61c_mod_assign(_214376_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shl_assign", 10)) {
						_case_begin_1a804c746:;
						{
							_209550_s.get()._field_operators._field_shl_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _214576_f) mutable -> jule::Bool {
								return static__1a588d92a_shl_assign(_214576_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("shr_assign", 10)) {
						_case_begin_1a804c7bd:;
						{
							_209550_s.get()._field_operators._field_shr_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _214776_f) mutable -> jule::Bool {
								return static__1a588dc38_shr_assign(_214776_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_or_assign", 13)) {
						_case_begin_1a804c845:;
						{
							_209550_s.get()._field_operators._field_bit_or_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _214979_f) mutable -> jule::Bool {
								return static__1a588e046_bit_or_assign(_214979_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_and_assign", 14)) {
						_case_begin_1a804c8bc:;
						{
							_209550_s.get()._field_operators._field_bit_and_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _215180_f) mutable -> jule::Bool {
								return static__1a588e354_bit_and_assign(_215180_f);
							}));
						}
					}
					else if (_match_expr == jule::Str("bit_xor_assign", 14)) {
						_case_begin_1a804c944:;
						{
							_209550_s.get()._field_operators._field_bit_xor_assign=_1a587d596_check_struct_ins_op(_self_, _209550_s,_1a804b1d4_m,jule::Fn<jule::Bool(jule::Ptr<_1ab832324_Fn>)>([=](jule::Ptr<_1ab832324_Fn> _215380_f) mutable -> jule::Bool {
								return static__1a588e662_bit_xor_assign(_215380_f);
							}));
						}
					}
					_match_end_1a804b921:;
				}
			}
			_iter_next_1a804b118:;
			++it;
			goto _iter_begin_1a804b118;
		}
		_iter_end_1a804b118:;
	}
}



inline void _1a587e5db_check_type_struct_operators(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab810b3d_Struct>& _215852_s) {
	if (_215852_s.get()._field_cpp_linked) {
		return;
	}
	if ((_215852_s.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_215852_s.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ab814515_StructIns> _216921_ins = _1ab8112d1_instance(_215852_s);
		_216921_ins.get()._field_checked=true;
		_1ab811688_append_instance(_215852_s.ptr(), _216921_ins);
	}
	_1a587e289_check_struct_ins_operators(_self_, _215852_s.get()._field_instances[0LL]);
}



inline void _1a587e861_check_struct_types_operators(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a807e15c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a807e1d4_s = *it;
			{
				_1a587e5db_check_type_struct_operators(_self_, _1a807e1d4_s);
			}
			_iter_next_1a807e15c:;
			++it;
			goto _iter_begin_1a807e15c;
		}
		_iter_end_1a807e15c:;
	}
}



inline void _1a587eb6e_check_rets(_1a5864747_Sema* _self_,jule::Ptr<_1ab836218_FnIns>& _218334_f) {
	if (_1ab8329d9_is_void(_218334_f.get()._field_decl.ptr())) {
		return;
	}
	_1a58825bc_MissingRetChecker _218713_mrc = static__1a5882bb6_new();
	jule::Bool _218813_ok = _1a5884008_check(&_218713_mrc, _218334_f.get()._field_scope);
	if ((!(_218813_ok))) {
		_1a5867bac_push_err(&(*_self_), _218334_f.get()._field_decl.get()._field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	}
}



inline void _1a588006a_check_fn_ins_sc(_1a5864747_Sema* _self_,jule::Ptr<_1ab836218_FnIns>& _219439_f,jule::Ptr<_1ac565bd3_ScopeChecker>& _219455_sc) {
	if (_219439_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_1a588601b_Var>> _219917_vars = _1ac589344_build_ret_vars(_219439_f);
	_219455_sc.get()._field_table.get()._field_vars=jule::append(_219455_sc.get()._field_table.get()._field_vars,_219917_vars);
	_219455_sc.get()._field_table.get()._field_vars=jule::append(_219455_sc.get()._field_table.get()._field_vars,_1ac589652_build_param_vars(_219439_f));
	_219455_sc.get()._field_table.get()._field_type_aliases=jule::append(_219455_sc.get()._field_table.get()._field_type_aliases,_1ac5899a4_build_generic_type_aliases(_219439_f));
	_1ac577bd4_check(_219455_sc, _219439_f.get()._field_decl.get()._field_scope,_219439_f.get()._field_scope);
	if ((_219917_vars.len() > 0LL)) {
		jule::Slice<jule::Any> _220921_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_219439_f.get()._field_scope.get()._field_stmts.len() + static_cast<jule::I64>(static_cast<jule::I64>(_219917_vars.len()))));
		{
			auto &expr = _219917_vars;
			auto it = expr.begin();
			_iter_begin_1a80871dc:;
			if (it != expr.end()) {
				jule::Ptr<_1a588601b_Var> _1a8087bb0_v = *it;
				{
					_220921_stmts = jule::alloc_for_append(_220921_stmts,1);_220921_stmts.__push(jule::Any(_1a8087bb0_v));
				}
				_iter_next_1a80871dc:;
				++it;
				goto _iter_begin_1a80871dc;
			}
			_iter_end_1a80871dc:;
		}
		_220921_stmts=jule::append(_220921_stmts,_219439_f.get()._field_scope.get()._field_stmts);
		_219439_f.get()._field_scope.get()._field_stmts=_220921_stmts;
	}
	if ((!(_1ac567a5e_stopped(_219455_sc.ptr())))) {
		_1a587eb6e_check_rets(&(*_self_), _219439_f);
	}
}



inline void _1a5880466_check_fn_ins_caller(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab836218_FnIns>& _222444_f,jule::Ptr<_1aa07563a_Token> _222459_caller) {
	if (_222444_f.get()._field_decl.get()._field_cpp_linked) {
		return;
	}
	jule::Ptr<_1a58c88ee_SymbolTable> _222917_old = _222444_f.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a58676d4_set_current_file(_222444_f.get()._field_decl.get()._field_sema.ptr(), _222917_old);
	});
	jule::Ptr<_1a58c88ee_SymbolTable> _223117_file = _1ac589d7d_find_file(_222444_f.get()._field_decl.get()._field_sema.get()._field_files,_222444_f.get()._field_decl.get()._field_token._field_file);
	if ((_223117_file != nullptr)) {
		_1a58676d4_set_current_file(_222444_f.get()._field_decl.get()._field_sema.ptr(), _223117_file);
	}
	jule::Ptr<_1ac565bd3_ScopeChecker> _223617_sc = _1ac514c09_new_scope_checker(_222444_f.get()._field_decl.get()._field_sema,_222444_f);
	_223617_sc.get()._field_called_from=_222459_caller;
	_1a588006a_check_fn_ins_sc(_self_.ptr(), _222444_f,_223617_sc);
	if (_222444_f.get()._field_decl.get()._field_sema != _self_) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_222444_f.get()._field_decl.get()._field_sema.get()._field_errors);
		_222444_f.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
	}
}



inline void _1a5880785_check_fn_ins(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab836218_FnIns>& _224637_f) {
	_1a5880466_check_fn_ins_caller(_self_, _224637_f,nullptr);
}



inline void _1a5880aa4_check_type_fn(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _225038_f) {
	if (_225038_f.get()._field_cpp_linked) {
		return;
	}
	if ((_225038_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	{
		auto &expr = _225038_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8092505:;
		if (it != expr.end()) {
			jule::Ptr<_1ab836218_FnIns> _1a8092648_ins = *it;
			{
				_1a5880785_check_fn_ins(_self_, _1a8092648_ins);
			}
			_iter_next_1a8092505:;
			++it;
			goto _iter_begin_1a8092505;
		}
		_iter_end_1a8092505:;
	}
}



inline void _1a5880dc3_check_test_fn(_1a5864747_Sema* _self_,jule::Ptr<_1ab836218_FnIns>& _226537_f) {
	if (_226537_f.get()._field_decl.get()._field_public) {
		_1a5867bac_push_err(&(*_self_), _226537_f.get()._field_decl.get()._field_token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;
	}
	if ((_226537_f.get()._field_params.len() != 1LL) || (_226537_f.get()._field_result != nullptr)) {
		_1a5867bac_push_err(&(*_self_), _226537_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a591d768_Sptr> _227817_sptr = _1a5916a19_sptr(_226537_f.get()._field_params[0LL].get()._field_kind.ptr());
	if ((_227817_sptr == nullptr)) {
		_1a5867bac_push_err(&(*_self_), _226537_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1ab814515_StructIns> _228513_s = _1a5917c29_strct(_227817_sptr.get()._field_elem.ptr());
	if ((_228513_s == nullptr) || (!(_1ac587166_is_std_package(_228513_s.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("testing", 7))))) {
		_1a5867bac_push_err(&(*_self_), _226537_f.get()._field_decl.get()._field_token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1a58680a8_push_suggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;
	}
}



inline void _1a58811e2_precheck_type_fn(jule::Ptr<_1a5864747_Sema> _self_,jule::Ptr<_1ab832324_Fn>& _229341_f) {
	if (_229341_f.get()._field_cpp_linked) {
		return;
	}
	if ((_229341_f.get()._field_generics.len() > 0LL)) {
		return;
	}
	if ((_229341_f.get()._field_instances.len() == 0LL)) {
		jule::Ptr<_1ab836218_FnIns> _230421_ins = _1ab8345ac_instance(_229341_f);
		_229341_f.get()._field_instances = jule::alloc_for_append(_229341_f.get()._field_instances,1);_229341_f.get()._field_instances.__push(_230421_ins);
		_1a5870852_reload_fn_ins_types(_self_, _230421_ins);
		_230421_ins.get()._field_reloaded=true;
		if (_1a5912130_has_directive(_229341_f.get()._field_directives,jule::Str("test", 4))) {
			_1a5880dc3_check_test_fn(_self_.ptr(), _230421_ins);
		}
	}
}



inline void _1a5881434_precheck_fn_types(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_traits;
		auto it = expr.begin();
		_iter_begin_1a80a00b2:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> _1a80a0139_decl = *it;
			{
				{
					auto &expr = _1a80a0139_decl.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a80a08a9:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a80a08ed_m = *it;
						{
							_1a58811e2_precheck_type_fn(_self_, _1a80a08ed_m);
						}
						_iter_next_1a80a08a9:;
						++it;
						goto _iter_begin_1a80a08a9;
					}
					_iter_end_1a80a08a9:;
				}
			}
			_iter_next_1a80a00b2:;
			++it;
			goto _iter_begin_1a80a00b2;
		}
		_iter_end_1a80a00b2:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a80a039d:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a80a0b73_decl = *it;
			{
				_1a58811e2_precheck_type_fn(_self_, _1a80a0b73_decl);
			}
			_iter_next_1a80a039d:;
			++it;
			goto _iter_begin_1a80a039d;
		}
		_iter_end_1a80a039d:;
	}
}



inline void _1a5881676_check_fn_types(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a80a22c3:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a80a234a_decl = *it;
			{
				_1a5880aa4_check_type_fn(_self_, _1a80a234a_decl);
			}
			_iter_next_1a80a22c3:;
			++it;
			goto _iter_begin_1a80a22c3;
		}
		_iter_end_1a80a22c3:;
	}
}



inline void _1a58818b8_check_package_types(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80a81db:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80a83c8_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80a83c8_f);
				_1a587c386_check_global_types(_self_);
			}
			_iter_next_1a80a81db:;
			++it;
			goto _iter_begin_1a80a81db;
		}
		_iter_end_1a80a81db:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80a8582:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80a8692_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80a8692_f);
				_1a5881434_precheck_fn_types(_self_);
			}
			_iter_next_1a80a8582:;
			++it;
			goto _iter_begin_1a80a8582;
		}
		_iter_end_1a80a8582:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80a9385:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80aa001_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80aa001_f);
				_1a587e861_check_struct_types_operators(_self_);
			}
			_iter_next_1a80a9385:;
			++it;
			goto _iter_begin_1a80a9385;
		}
		_iter_end_1a80a9385:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80aa74e:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80aa265_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80aa265_f);
				_1a587de26_check_struct_types(_self_);
			}
			_iter_next_1a80aa74e:;
			++it;
			goto _iter_begin_1a80aa74e;
		}
		_iter_end_1a80aa74e:;
	}
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80aae69:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80ab046_f = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80ab046_f);
				_1a5881676_check_fn_types(_self_);
			}
			_iter_next_1a80aae69:;
			++it;
			goto _iter_begin_1a80aae69;
		}
		_iter_end_1a80aae69:;
	}
}



inline void _1a5881b0a_set_file_sema_fields(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a80ace16:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a80ace8d_f = *it;
			{
				_1a80ace8d_f.get()._field_sema=_self_;
			}
			_iter_next_1a80ace16:;
			++it;
			goto _iter_begin_1a80ace16;
		}
		_iter_end_1a80ace16:;
	}
	{
		auto &expr = _self_.get()._field_file.get()._field_structs;
		auto it = expr.begin();
		_iter_begin_1a80ad169:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a80ad367_st = *it;
			{
				_1a80ad367_st.get()._field_sema=_self_;
			}
			_iter_next_1a80ad169:;
			++it;
			goto _iter_begin_1a80ad169;
		}
		_iter_end_1a80ad169:;
	}
}



inline void _1a5881d4c_set_sema_fields(jule::Ptr<_1a5864747_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a80ae599:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a80ae786_file = *it;
			{
				_1a58676d4_set_current_file(_self_.ptr(), _1a80ae786_file);
				_1a5881b0a_set_file_sema_fields(_self_);
			}
			_iter_next_1a80ae599:;
			++it;
			goto _iter_begin_1a80ae599;
		}
		_iter_end_1a80ae599:;
	}
}



inline void _1a588216b_check(jule::Ptr<_1a5864747_Sema> _self_,jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _238130_files) {
	_self_.get()._field_files=_238130_files;
	_1a586ad25_check_imports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a586b4eb_check_enums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a5881d4c_set_sema_fields(_self_);
	_1a586b2a9_impl_impls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a587b4ea_check_package_decls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;
	}
	_1a58818b8_check_package_types(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a5864747_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a58825bc_MissingRetChecker static__1a5882bb6_new(void) {
	return _1a58825bc_MissingRetChecker(jule::Slice<jule::U64>::alloc(16LL),jule::Bool());
}



inline jule::Bool _1a588303a_check_conditional(_1a58825bc_MissingRetChecker* _self_,jule::Ptr<_1ac560e86_Conditional> _242736_c) {
	{
		auto &expr = _242736_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a80b4dc9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56064a_If> _1a80b4e95_elif = *it;
			{
				if ((_1a80b4e95_elif == nullptr)) {
					return false;
				}
				if ((!(_1a5883b51_check_scope(&(*_self_), _1a80b4e95_elif.get()._field_scope)))) {
					return false;
				}
			}
			_iter_next_1a80b4dc9:;
			++it;
			goto _iter_begin_1a80b4dc9;
		}
		_iter_end_1a80b4dc9:;
	}
	return (_242736_c.get()._field_default != nullptr) && _1a5883b51_check_scope(&(*_self_), _242736_c.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a58833e2_check_match(_1a58825bc_MissingRetChecker* _self_,jule::Ptr<_1ac563ede_Match> _243930_m) {
	{
		auto &expr = _243930_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a80b7a03:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56463d_Case> _1a80b7abe_c = *it;
			{
				if ((_1a80b7abe_c == nullptr)) {
					return false;
				}
				jule::I64 _244417_n = (*_self_)._field_breaked.len();
				jule::Bool _244517_ok = _1a5883b51_check_scope(&(*_self_), _1a80b7abe_c.get()._field_scope);
				{
					
					if (_244417_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
						_case_begin_1a80b93c8:;
						{
							return false;
						}
					}
					else if ((!(_244517_ok))) {
						_case_begin_1a80b9450:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;
							}
							goto _case_begin_1a80b94c7;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1a80b94c7:;
						{
							(*_self_)._field_falled=false;
							if ((_1a80b7abe_c.get()._field_next == nullptr)) {
								return false;
							}
							goto _iter_next_1a80b7a03;
						}
					}
					_match_end_1a80b932e:;
				}
			}
			_iter_next_1a80b7a03:;
			++it;
			goto _iter_begin_1a80b7a03;
		}
		_iter_end_1a80b7a03:;
	}
	return (_243930_m.get()._field_default != nullptr) && _1a5883b51_check_scope(&(*_self_), _243930_m.get()._field_default.get()._field_scope);
}



inline jule::Bool _1a5883799_check_inf_iter(_1a58825bc_MissingRetChecker* _self_,jule::Ptr<_1ac5613a4_InfIter> _246533_it) {
	jule::I64 _246613_n = (*_self_)._field_breaked.len();
	if (_1a5883b51_check_scope(&(*_self_), _246533_it.get()._field_scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246613_n);
		return true;
	}
	if (_246613_n != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_breaked.len()))) {
		jule::U64 _247217_itaddr = static_cast<jule::U64>(_246533_it);
		{
			auto expr = (*_self_)._field_breaked.slice(_246613_n);
			auto it = expr.begin();
			_iter_begin_1a80be114:;
			if (it != expr.end()) {
				jule::U64 _1a80be1e1_addr = *it;
				{
					if (_247217_itaddr == _1a80be1e1_addr) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246613_n);
						return false;
					}
				}
				_iter_next_1a80be114:;
				++it;
				goto _iter_begin_1a80be114;
			}
			_iter_end_1a80be114:;
		}
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_246613_n);
	}
	return true;
}



inline jule::Bool _1a5883b51_check_scope(_1a58825bc_MissingRetChecker* _self_,jule::Ptr<_1ac56022c_Scope> _248430_s) {
	if ((_248430_s == nullptr)) {
		return false;
	}
	{
		auto &expr = _248430_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a80c10b1:;
		if (it != expr.end()) {
			jule::Any _1a80c0b2c_st = *it;
			{
				{
					auto &_match_expr{ _1a80c0b2c_st };
					
					if (_match_expr.type_is<jule::Ptr<_1ac564a5b_FallSt>>()) {
						_case_begin_1a80c17ed:;
						{
							(*_self_)._field_falled=true;
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac56252b_BreakSt>>()) {
						_case_begin_1a80c1897:;
						{
							jule::U64 _249421_addr = _1a80c0b2c_st.operator jule::Ptr<_1ac56252b_BreakSt>().get()._field_it;
							if ((_249421_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_249421_addr);
							}
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac56210d_ContSt>>()) {
						_case_begin_1a80c190d:;
						{
							return false;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
						_case_begin_1a80c1974:;
						{
							if (_1a5883799_check_inf_iter(&(*_self_), _1a80c0b2c_st.operator jule::Ptr<_1ac5613a4_InfIter>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac564e79_RetSt>>()) {
						_case_begin_1a80c19eb:;
						{
							return true;
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac56022c_Scope>>()) {
						_case_begin_1a80c1a73:;
						{
							if (_1a5883b51_check_scope(&(*_self_), _1a80c0b2c_st.operator jule::Ptr<_1ac56022c_Scope>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
						_case_begin_1a80c1aea:;
						{
							{
								auto &_match_expr{ _1a80c0b2c_st.operator jule::Ptr<_1a58cee44_Data>().get()._field_model };
								
								if (_match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
									_case_begin_1a80c5b32:;
									{
										return true;
									}
								}
								_match_end_1a80c5acc:;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac560e86_Conditional>>()) {
						_case_begin_1a80c1b72:;
						{
							if (_1a588303a_check_conditional(&(*_self_), _1a80c0b2c_st.operator jule::Ptr<_1ac560e86_Conditional>())) {
								return true;
							}
						}
					}
					else if (_match_expr.type_is<jule::Ptr<_1ac563ede_Match>>()) {
						_case_begin_1a80c1be9:;
						{
							if (_1a58833e2_check_match(&(*_self_), _1a80c0b2c_st.operator jule::Ptr<_1ac563ede_Match>())) {
								return true;
							}
						}
					}
					_match_end_1a80c1215:;
				}
			}
			_iter_next_1a80c10b1:;
			++it;
			goto _iter_begin_1a80c10b1;
		}
		_iter_end_1a80c10b1:;
	}
	return false;
}



inline jule::Bool _1a5884008_check(_1a58825bc_MissingRetChecker* _self_,jule::Ptr<_1ac56022c_Scope> _253024_s) {
	return _1a5883b51_check_scope(&(*_self_), _253024_s);
}







std::ostream &operator<<(std::ostream &_Stream, _1a58825bc_MissingRetChecker _Src) {
	_Stream << "MissingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5884a0e_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a5887715_dispose(jule::Ptr<_1ab832324_Fn> _1027_f) {
	return ((((((((((_1027_f != nullptr) && (_1027_f.get()._field_owner != nullptr)) && (_1027_f.get()._field_ident == jule::Str("dispose", 7))) && (!(_1027_f.get()._field_statically))) && (!(_1027_f.get()._field_unsafety))) && _1027_f.get()._field_public) && _1ab8329d9_is_void(_1027_f.ptr())) && (_1027_f.get()._field_generics.len() == 0LL)) && (_1027_f.get()._field_params.len() == 1LL)) && _1027_f.get()._field_params[0LL].get()._field_mutable) && (!(_1ab830ed2_is_ref(_1027_f.get()._field_params[0LL].ptr())));
}



inline jule::Bool static__1a5887a23_to_str(jule::Ptr<_1ab832324_Fn> _2526_f) {
	if (((((((((((_2526_f == nullptr) || (_2526_f.get()._field_owner == nullptr)) || (_2526_f.get()._field_ident != jule::Str("to_str", 6))) || _2526_f.get()._field_statically) || _2526_f.get()._field_unsafety) || (!(_2526_f.get()._field_public))) || _1ab8329d9_is_void(_2526_f.ptr())) || (_2526_f.get()._field_generics.len() != 0LL)) || (_2526_f.get()._field_params.len() != 1LL)) || _2526_f.get()._field_params[0LL].get()._field_mutable) || _1ab830ed2_is_ref(_2526_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1ab836218_FnIns> _4017_ins = _2526_f.get()._field_instances[0LL];
	jule::Ptr<_1a591970e_Prim> _4113_prim = _1a591673e_prim(_4017_ins.get()._field_result.ptr());
	if ((_4113_prim == nullptr)) {
		return false;
	}
	return _1a591d13b_is_str(_4113_prim.ptr());
}



inline jule::Bool static__1a5887e0d_logical(jule::Ptr<_1ab832324_Fn>& _4824_f,jule::Str _4832_ident) {
	if ((((((((((((((_4824_f == nullptr) || (_4824_f.get()._field_ident != _4832_ident)) || (_4824_f.get()._field_owner == nullptr)) || (_4824_f.get()._field_instances.len() == 0LL)) || _4824_f.get()._field_statically) || _4824_f.get()._field_unsafety) || (!(_4824_f.get()._field_public))) || _1ab8329d9_is_void(_4824_f.ptr())) || (_4824_f.get()._field_generics.len() != 0LL)) || (_4824_f.get()._field_params.len() != 2LL)) || _4824_f.get()._field_params[0LL].get()._field_mutable) || _1ab830ed2_is_ref(_4824_f.get()._field_params[0LL].ptr())) || _4824_f.get()._field_params[1LL].get()._field_mutable) || _4824_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1ab836218_FnIns> _6617_ins = _4824_f.get()._field_instances[0LL];
	jule::Ptr<_1a591970e_Prim> _6713_prim = _1a591673e_prim(_6617_ins.get()._field_result.ptr());
	if ((_6713_prim == nullptr) || (!(_1a591cd61_is_bool(_6713_prim.ptr())))) {
		return false;
	}
	return _6617_ins.get()._field_owner == _1a5917c29_strct(_6617_ins.get()._field_params[1LL].get()._field_kind.ptr());
}



inline jule::Bool static__1a588821b_eq(jule::Ptr<_1ab832324_Fn> _7522_f) {
	return static__1a5887e0d_logical(_7522_f,jule::Str("eq", 2));
}



inline jule::Bool static__1a5888529_gt(jule::Ptr<_1ab832324_Fn> _8022_f) {
	return static__1a5887e0d_logical(_8022_f,jule::Str("gt", 2));
}



inline jule::Bool static__1a5888837_gt_eq(jule::Ptr<_1ab832324_Fn> _8525_f) {
	return static__1a5887e0d_logical(_8525_f,jule::Str("gt_eq", 5));
}



inline jule::Bool static__1a5888b45_lt(jule::Ptr<_1ab832324_Fn> _9022_f) {
	return static__1a5887e0d_logical(_9022_f,jule::Str("lt", 2));
}



inline jule::Bool static__1a5888e53_lt_eq(jule::Ptr<_1ab832324_Fn> _9525_f) {
	return static__1a5887e0d_logical(_9525_f,jule::Str("lt_eq", 5));
}



inline jule::Bool static__1a588933d_result(jule::Ptr<_1ab832324_Fn>& _9923_f,jule::Str _9931_ident) {
	if ((((((((((((((_9923_f == nullptr) || (_9923_f.get()._field_ident != _9931_ident)) || (_9923_f.get()._field_owner == nullptr)) || (_9923_f.get()._field_instances.len() == 0LL)) || _9923_f.get()._field_statically) || _9923_f.get()._field_unsafety) || (!(_9923_f.get()._field_public))) || _1ab8329d9_is_void(_9923_f.ptr())) || (_9923_f.get()._field_generics.len() != 0LL)) || (_9923_f.get()._field_params.len() != 2LL)) || _9923_f.get()._field_params[0LL].get()._field_mutable) || _1ab830ed2_is_ref(_9923_f.get()._field_params[0LL].ptr())) || _9923_f.get()._field_params[1LL].get()._field_mutable) || _9923_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	jule::Ptr<_1ab836218_FnIns> _11717_ins = _9923_f.get()._field_instances[0LL];
	return _1a5917c29_strct(_11717_ins.get()._field_result.ptr()) == _11717_ins.get()._field_owner;
}



inline jule::Bool static__1a588964b_shl(jule::Ptr<_1ab832324_Fn> _12223_f) {
	return static__1a588933d_result(_12223_f,jule::Str("shl", 3));
}



inline jule::Bool static__1a5889959_shr(jule::Ptr<_1ab832324_Fn> _12723_f) {
	return static__1a588933d_result(_12723_f,jule::Str("shr", 3));
}



inline jule::Bool static__1a5889c67_add(jule::Ptr<_1ab832324_Fn> _13223_f) {
	return static__1a588933d_result(_13223_f,jule::Str("add", 3));
}



inline jule::Bool static__1a588a075_sub(jule::Ptr<_1ab832324_Fn> _13723_f) {
	return static__1a588933d_result(_13723_f,jule::Str("sub", 3));
}



inline jule::Bool static__1a588a383_div(jule::Ptr<_1ab832324_Fn> _14223_f) {
	return static__1a588933d_result(_14223_f,jule::Str("div", 3));
}



inline jule::Bool static__1a588a691_mul(jule::Ptr<_1ab832324_Fn> _14723_f) {
	return static__1a588933d_result(_14723_f,jule::Str("mul", 3));
}



inline jule::Bool static__1a588a99e_mod(jule::Ptr<_1ab832324_Fn> _15223_f) {
	return static__1a588933d_result(_15223_f,jule::Str("mod", 3));
}



inline jule::Bool static__1a588acac_bit_and(jule::Ptr<_1ab832324_Fn> _15727_f) {
	return static__1a588933d_result(_15727_f,jule::Str("bit_and", 7));
}



inline jule::Bool static__1a588b0ba_bit_or(jule::Ptr<_1ab832324_Fn> _16226_f) {
	return static__1a588933d_result(_16226_f,jule::Str("bit_or", 6));
}



inline jule::Bool static__1a588b3c8_bit_xor(jule::Ptr<_1ab832324_Fn> _16727_f) {
	return static__1a588933d_result(_16727_f,jule::Str("bit_xor", 7));
}



inline jule::Bool static__1a588b7b3_unary(jule::Ptr<_1ab832324_Fn>& _17122_f,jule::Str _17130_ident) {
	if ((((((((((((_17122_f == nullptr) || (_17122_f.get()._field_ident != _17130_ident)) || (_17122_f.get()._field_owner == nullptr)) || (_17122_f.get()._field_instances.len() == 0LL)) || _17122_f.get()._field_statically) || _17122_f.get()._field_unsafety) || (!(_17122_f.get()._field_public))) || _1ab8329d9_is_void(_17122_f.ptr())) || (_17122_f.get()._field_generics.len() != 0LL)) || (_17122_f.get()._field_params.len() != 1LL)) || _17122_f.get()._field_params[0LL].get()._field_mutable) || _1ab830ed2_is_ref(_17122_f.get()._field_params[0LL].ptr())) {
		return false;
	}
	jule::Ptr<_1ab836218_FnIns> _18717_ins = _17122_f.get()._field_instances[0LL];
	return _1a5917c29_strct(_18717_ins.get()._field_result.ptr()) == _18717_ins.get()._field_owner;
}



inline jule::Bool static__1a588bac1_neg(jule::Ptr<_1ab832324_Fn> _19223_f) {
	return static__1a588b7b3_unary(_19223_f,jule::Str("neg", 3));
}



inline jule::Bool static__1a588bdce_pos(jule::Ptr<_1ab832324_Fn> _19723_f) {
	return static__1a588b7b3_unary(_19723_f,jule::Str("pos", 3));
}



inline jule::Bool static__1a588c1dc_bit_not(jule::Ptr<_1ab832324_Fn> _20227_f) {
	return static__1a588b7b3_unary(_20227_f,jule::Str("bit_not", 7));
}



inline jule::Bool static__1a588c5c7_assign(jule::Ptr<_1ab832324_Fn>& _20623_f,jule::Str _20631_ident) {
	if ((((((((((((((_20623_f == nullptr) || (_20623_f.get()._field_ident != _20631_ident)) || (_20623_f.get()._field_owner == nullptr)) || (_20623_f.get()._field_instances.len() == 0LL)) || _20623_f.get()._field_statically) || _20623_f.get()._field_unsafety) || (!(_20623_f.get()._field_public))) || (!(_1ab8329d9_is_void(_20623_f.ptr())))) || (_20623_f.get()._field_generics.len() != 0LL)) || (_20623_f.get()._field_params.len() != 2LL)) || (!(_20623_f.get()._field_params[0LL].get()._field_mutable))) || _1ab830ed2_is_ref(_20623_f.get()._field_params[0LL].ptr())) || _20623_f.get()._field_params[1LL].get()._field_mutable) || _20623_f.get()._field_params[1LL].get()._field_reference) {
		return false;
	}
	return true;
}



inline jule::Bool static__1a588c8d5_add_assign(jule::Ptr<_1ab832324_Fn> _22730_f) {
	return static__1a588c5c7_assign(_22730_f,jule::Str("add_assign", 10));
}



inline jule::Bool static__1a588cbe3_sub_assign(jule::Ptr<_1ab832324_Fn> _23230_f) {
	return static__1a588c5c7_assign(_23230_f,jule::Str("sub_assign", 10));
}



inline jule::Bool static__1a588d001_div_assign(jule::Ptr<_1ab832324_Fn> _23730_f) {
	return static__1a588c5c7_assign(_23730_f,jule::Str("div_assign", 10));
}



inline jule::Bool static__1a588d30e_mul_assign(jule::Ptr<_1ab832324_Fn> _24230_f) {
	return static__1a588c5c7_assign(_24230_f,jule::Str("mul_assign", 10));
}



inline jule::Bool static__1a588d61c_mod_assign(jule::Ptr<_1ab832324_Fn> _24730_f) {
	return static__1a588c5c7_assign(_24730_f,jule::Str("mod_assign", 10));
}



inline jule::Bool static__1a588d92a_shl_assign(jule::Ptr<_1ab832324_Fn> _25230_f) {
	return static__1a588c5c7_assign(_25230_f,jule::Str("shl_assign", 10));
}



inline jule::Bool static__1a588dc38_shr_assign(jule::Ptr<_1ab832324_Fn> _25730_f) {
	return static__1a588c5c7_assign(_25730_f,jule::Str("shr_assign", 10));
}



inline jule::Bool static__1a588e046_bit_or_assign(jule::Ptr<_1ab832324_Fn> _26233_f) {
	return static__1a588c5c7_assign(_26233_f,jule::Str("bit_or_assign", 13));
}



inline jule::Bool static__1a588e354_bit_and_assign(jule::Ptr<_1ab832324_Fn> _26734_f) {
	return static__1a588c5c7_assign(_26734_f,jule::Str("bit_and_assign", 14));
}



inline jule::Bool static__1a588e662_bit_xor_assign(jule::Ptr<_1ab832324_Fn> _27234_f) {
	return static__1a588c5c7_assign(_27234_f,jule::Str("bit_xor_assign", 14));
}







std::ostream &operator<<(std::ostream &_Stream, _1a5886d30_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a588601b_Var> _1a58c4169_build_var(_1a58c392c_RangeChecker* _self_,jule::Ptr<_1aa097085_VarDecl>& _91429_decl) {
	jule::Ptr<_1a588601b_Var> _91517_v = _1ab840057_build_var(_91429_decl);
	return _91517_v;
}



inline void _1a58c43ab_set_size_key(_1a58c392c_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_a=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)))));
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a81b4d53:;
			{
				(*_self_)._field_kind.get()._field_key_a.get()._field_iter_relation=jule::new_ptr<_1a5884a0e_IterRelation>(_1a5884a0e_IterRelation((*_self_)._field_d.get()._field_model.operator jule::Ptr<_1a588601b_Var>()));
			}
		}
		_match_end_1a81b4ced:;
	}
}



inline void _1a58c48c8_check_range_expr_validity(_1a58c392c_RangeChecker* _self_,jule::Ptr<_1a58cee44_Data>& _94549_d,jule::Ptr<_1a588601b_Var>& _94560_key,jule::Ptr<_1a5913e9a_TypeKind>& _94576_k) {
	jule::Bool _94617__mut = _94560_key.get()._field_mutable;
	if (_94617__mut && (!(_1a5915809_mutable(_94576_k.ptr())))) {
		_94617__mut=false;
	}
	_1a5871688_check_validity_for_init_expr((*_self_)._field_sc.get()._field_s, _94617__mut,_94560_key.get()._field_reference,_94560_key.get()._field_kind.get()._field_kind,_94549_d,(*_self_)._field_rang.get()._field_in_token);
}



inline void _1a58c4b09_check_slice(_1a58c392c_RangeChecker* _self_) {
	_1a58c43ab_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a591e549_Slc> _96417_slc = _1a5917674_slc((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_96417_slc.get()._field_elem));
	_1a58c48c8_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_96417_slc.get()._field_elem);
}



inline void _1a58c4d4b_check_array(_1a58c392c_RangeChecker* _self_) {
	_1a58c43ab_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a592230a_Arr> _97717_arr = _1a5917399_arr((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_97717_arr.get()._field_elem));
	_1a58c48c8_check_range_expr_validity(&(*_self_), (*_self_)._field_d,(*_self_)._field_kind.get()._field_key_b,_97717_arr.get()._field_elem);
}



inline void _1a58c508d_check_map_key_a(_1a58c392c_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_a == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_a.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a592132b_Map> _98917_m = _1a59182ce_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_a=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_a);
	(*_self_)._field_kind.get()._field_key_a.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_98917_m.get()._field_key));
	jule::Ptr<_1a58cee44_Data> _99317_d = jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d)));
	_99317_d.get()._field_kind=_98917_m.get()._field_key;
	_1a58c48c8_check_range_expr_validity(&(*_self_), _99317_d,(*_self_)._field_kind.get()._field_key_a,_98917_m.get()._field_key);
}



inline void _1a58c52d0_check_map_key_b(_1a58c392c_RangeChecker* _self_) {
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	jule::Ptr<_1a592132b_Map> _100417_m = _1a59182ce_map((*_self_)._field_d.get()._field_kind.ptr());
	(*_self_)._field_kind.get()._field_key_b=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_100417_m.get()._field_val));
	jule::Ptr<_1a58cee44_Data> _100817_d = jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d)));
	_100817_d.get()._field_kind=_100417_m.get()._field_val;
	_1a58c48c8_check_range_expr_validity(&(*_self_), _100817_d,(*_self_)._field_kind.get()._field_key_b,_100417_m.get()._field_val);
}



inline void _1a58c5522_check_map(_1a58c392c_RangeChecker* _self_) {
	_1a58c508d_check_map_key_a(&(*_self_));
	_1a58c52d0_check_map_key_b(&(*_self_));
}



inline void _1a58c5764_check_str(_1a58c392c_RangeChecker* _self_) {
	_1a58c43ab_set_size_key(&(*_self_));
	if (((*_self_)._field_rang.get()._field_key_b == nullptr) || _1aa07861b_is_ignore_ident((*_self_)._field_rang.get()._field_key_b.get()._field_ident)) {
		return;
	}
	(*_self_)._field_kind.get()._field_key_b=_1a58c4169_build_var(&(*_self_), (*_self_)._field_rang.get()._field_key_b);
	(*_self_)._field_kind.get()._field_key_b.get()._field_kind=jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u8", 2)), 5)))));
}



inline jule::Bool _1a58c5a3e_check(_1a58c392c_RangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_kind.get()._field_variadic) {
			_case_begin_1a81d0027:;
		}
		else if ((_1a5917674_slc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a81cd850:;
			{
				_1a58c4b09_check_slice(&(*_self_));
				return true;
			}
		}
		else if ((_1a5917399_arr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a81cd8b6:;
			{
				_1a58c4d4b_check_array(&(*_self_));
				return true;
			}
		}
		else if ((_1a59182ce_map((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a81cd92c:;
			{
				_1a58c5522_check_map(&(*_self_));
				return true;
			}
		}
		else {
			_case_begin_1a81cd7d9:;
			{
				jule::Ptr<_1a591970e_Prim> _104717_prim = _1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr());
				if ((_104717_prim != nullptr) && _1a591d13b_is_str(_104717_prim.ptr())) {
					_1a58c5764_check_str(&(*_self_));
					return true;
				}
			}
		}
		_match_end_1a81cd71d:;
	}
	_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58c392c_RangeChecker _Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a58c91a2_find_package(_1a58c88ee_SymbolTable* _self_,jule::Str _2535_ident) {
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a81ec709:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a81ec7c5_pkg = *it;
			{
				if (_1a81ec7c5_pkg.get()._field_ident == _2535_ident) {
					return _1a81ec7c5_pkg;
				}
			}
			_iter_next_1a81ec709:;
			++it;
			goto _iter_begin_1a81ec709;
		}
		_iter_end_1a81ec709:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a58c9559_select_package(_1a58c88ee_SymbolTable* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> _3737_selector) {
	if ((_3737_selector == nullptr)) {
		return nullptr;
	}
	{
		auto &expr = (*_self_)._field_imports;
		auto it = expr.begin();
		_iter_begin_1a81edbe4:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a81ed70a_pkg = *it;
			{
				if (_3737_selector(_1a81ed70a_pkg)) {
					return _1a81ed70a_pkg;
				}
			}
			_iter_next_1a81edbe4:;
			++it;
			goto _iter_begin_1a81edbe4;
		}
		_iter_end_1a81edbe4:;
	}
	return nullptr;
}



inline jule::Ptr<_1a588601b_Var> _1a58c99dd_find_var(_1a58c88ee_SymbolTable* _self_,jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return _1a58cb77b___find_var(&(*_self_), _5231_ident,_5243_cpp_linked,false);
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1a58c9e72_find_type_alias(_1a58c88ee_SymbolTable* _self_,jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return _1a58cbcdc___find_type_alias(&(*_self_), _5838_ident,_5850_cpp_linked,false);
}



inline jule::Ptr<_1ab810b3d_Struct> _1a58ca406_find_struct(_1a58c88ee_SymbolTable* _self_,jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8202a0b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8202ac7_s = *it;
			{
				if ((_1a8202ac7_s.get()._field_ident == _6434_ident) && (_1a8202ac7_s.get()._field_cpp_linked == _6446_cpp_linked)) {
					return _1a8202ac7_s;
				}
			}
			_iter_next_1a8202a0b:;
			++it;
			goto _iter_begin_1a8202a0b;
		}
		_iter_end_1a8202a0b:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab832324_Fn> _1a58ca88a_find_fn(_1a58c88ee_SymbolTable* _self_,jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a8204656:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a8204722_f = *it;
			{
				if ((_1a8204722_f.get()._field_ident == _7530_ident) && (_1a8204722_f.get()._field_cpp_linked == _7542_cpp_linked)) {
					return _1a8204722_f;
				}
			}
			_iter_next_1a8204656:;
			++it;
			goto _iter_begin_1a8204656;
		}
		_iter_end_1a8204656:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44770d_Trait> _1a58cac42_find_trait(_1a58c88ee_SymbolTable* _self_,jule::Str _8633_ident) {
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a8205eb5:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> _1a8206081_t = *it;
			{
				if (_1a8206081_t.get()._field_ident == _8633_ident) {
					return _1a8206081_t;
				}
			}
			_iter_next_1a8205eb5:;
			++it;
			goto _iter_begin_1a8205eb5;
		}
		_iter_end_1a8205eb5:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44a337_Enum> _1a58cb0e9_find_enum(_1a58c88ee_SymbolTable* _self_,jule::Str _9732_ident) {
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a8207428:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44a337_Enum> _1a82074e4_e = *it;
			{
				if (_1a82074e4_e.get()._field_ident == _9732_ident) {
					return _1a82074e4_e;
				}
			}
			_iter_next_1a8207428:;
			++it;
			goto _iter_begin_1a8207428;
		}
		_iter_end_1a8207428:;
	}
	return nullptr;
}



inline jule::Ptr<_1a588601b_Var> _1a58cb77b___find_var(_1a58c88ee_SymbolTable* _self_,jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = ((*_self_)._field_vars.len() - 1LL);
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1a588601b_Var> _11225_v = (*_self_)._field_vars[_11021_i];
				if ((_11225_v.get()._field_ident == _10829_ident) && (_11225_v.get()._field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_1a82092a4:;
		}
		_iter_end_1a82092a4:;
	} else {
		{
			auto &expr = (*_self_)._field_vars;
			auto it = expr.begin();
			_iter_begin_1a820a827:;
			if (it != expr.end()) {
				jule::Ptr<_1a588601b_Var> _1a820a86b_v = *it;
				{
					if ((_1a820a86b_v.get()._field_ident == _10829_ident) && (_1a820a86b_v.get()._field_cpp_linked == _10841_cpp_linked)) {
						return _1a820a86b_v;
					}
				}
				_iter_next_1a820a827:;
				++it;
				goto _iter_begin_1a820a827;
			}
			_iter_end_1a820a827:;
		}
	}
	return nullptr;
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1a58cbcdc___find_type_alias(_1a58c88ee_SymbolTable* _self_,jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = ((*_self_)._field_type_aliases.len() - 1LL);
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1a5912d12_TypeAlias> _13125_ta = (*_self_)._field_type_aliases[_12921_i];
				if ((_13125_ta.get()._field_ident == _12736_ident) && (_13125_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_1a820c708:;
		}
		_iter_end_1a820c708:;
	} else {
		{
			auto &expr = (*_self_)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_1a82134cd:;
			if (it != expr.end()) {
				jule::Ptr<_1a5912d12_TypeAlias> _1a8213b2c_ta = *it;
				{
					if ((_1a8213b2c_ta.get()._field_ident == _12736_ident) && (_1a8213b2c_ta.get()._field_cpp_linked == _12748_cpp_linked)) {
						return _1a8213b2c_ta;
					}
				}
				_iter_next_1a82134cd:;
				++it;
				goto _iter_begin_1a82134cd;
			}
			_iter_end_1a82134cd:;
		}
	}
	return nullptr;
}



inline jule::Any _1a58cc271_def_by_ident(_1a58c88ee_SymbolTable* _self_,jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8214cd7:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a8214da3_v = *it;
			{
				if ((_1a8214da3_v.get()._field_ident == _14831_ident) && (_1a8214da3_v.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a8214da3_v);
				}
			}
			_iter_next_1a8214cd7:;
			++it;
			goto _iter_begin_1a8214cd7;
		}
		_iter_end_1a8214cd7:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a8214b3e:;
		if (it != expr.end()) {
			jule::Ptr<_1a5912d12_TypeAlias> _1a82150c3_ta = *it;
			{
				if ((_1a82150c3_ta.get()._field_ident == _14831_ident) && (_1a82150c3_ta.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a82150c3_ta);
				}
			}
			_iter_next_1a8214b3e:;
			++it;
			goto _iter_begin_1a8214b3e;
		}
		_iter_end_1a8214b3e:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8215bea:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8215ea3_s = *it;
			{
				if ((_1a8215ea3_s.get()._field_ident == _14831_ident) && (_1a8215ea3_s.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a8215ea3_s);
				}
			}
			_iter_next_1a8215bea:;
			++it;
			goto _iter_begin_1a8215bea;
		}
		_iter_end_1a8215bea:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a8214aea:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a8216dd8_f = *it;
			{
				if ((_1a8216dd8_f.get()._field_ident == _14831_ident) && (_1a8216dd8_f.get()._field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_1a8216dd8_f);
				}
			}
			_iter_next_1a8214aea:;
			++it;
			goto _iter_begin_1a8214aea;
		}
		_iter_end_1a8214aea:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a8217cc9:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> _1a8218acc_t = *it;
			{
				if (_1a8218acc_t.get()._field_ident == _14831_ident) {
					return jule::Any(_1a8218acc_t);
				}
			}
			_iter_next_1a8217cc9:;
			++it;
			goto _iter_begin_1a8217cc9;
		}
		_iter_end_1a8217cc9:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a8217da6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44a337_Enum> _1a821935d_e = *it;
			{
				if (_1a821935d_e.get()._field_ident == _14831_ident) {
					return jule::Any(_1a821935d_e);
				}
			}
			_iter_next_1a8217da6:;
			++it;
			goto _iter_begin_1a8217da6;
		}
		_iter_end_1a8217da6:;
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a58cc7d2_is_duplicated_ident(_1a58c88ee_SymbolTable* _self_,jule::U64 _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1a821abde:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> &_1a821acdd_v = *it;
			{
				if (((static_cast<jule::U64>(_1a821acdd_v) != _19534_itself) && (_1a821acdd_v.get()._field_ident == _19551_ident)) && (_1a821acdd_v.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a821abde:;
			++it;
			goto _iter_begin_1a821abde;
		}
		_iter_end_1a821abde:;
	}
	{
		auto &expr = (*_self_)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_1a821b371:;
		if (it != expr.end()) {
			jule::Ptr<_1a5912d12_TypeAlias> &_1a821b01e_ta = *it;
			{
				if (((static_cast<jule::U64>(_1a821b01e_ta) != _19534_itself) && (_1a821b01e_ta.get()._field_ident == _19551_ident)) && (_1a821b01e_ta.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a821b371:;
			++it;
			goto _iter_begin_1a821b371;
		}
		_iter_end_1a821b371:;
	}
	{
		auto &expr = (*_self_)._field_structs;
		auto it = expr.begin();
		_iter_begin_1a821d42d:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> &_1a821c2b7_s = *it;
			{
				if (((static_cast<jule::U64>(_1a821c2b7_s) != _19534_itself) && (_1a821c2b7_s.get()._field_ident == _19551_ident)) && (_1a821c2b7_s.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a821d42d:;
			++it;
			goto _iter_begin_1a821d42d;
		}
		_iter_end_1a821d42d:;
	}
	{
		auto &expr = (*_self_)._field_funcs;
		auto it = expr.begin();
		_iter_begin_1a821e6b5:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> &_1a821d50a_f = *it;
			{
				if (((static_cast<jule::U64>(_1a821d50a_f) != _19534_itself) && (_1a821d50a_f.get()._field_ident == _19551_ident)) && (_1a821d50a_f.get()._field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_1a821e6b5:;
			++it;
			goto _iter_begin_1a821e6b5;
		}
		_iter_end_1a821e6b5:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_traits;
		auto it = expr.begin();
		_iter_begin_1a822094c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> &_1a821e709_t = *it;
			{
				if ((static_cast<jule::U64>(_1a821e709_t) != _19534_itself) && (_1a821e709_t.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a822094c:;
			++it;
			goto _iter_begin_1a822094c;
		}
		_iter_end_1a822094c:;
	}
	{
		auto &expr = (*_self_)._field_enums;
		auto it = expr.begin();
		_iter_begin_1a821e8b3:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44a337_Enum> &_1a8220cc1_e = *it;
			{
				if ((static_cast<jule::U64>(_1a8220cc1_e) != _19534_itself) && (_1a8220cc1_e.get()._field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_1a821e8b3:;
			++it;
			goto _iter_begin_1a821e8b3;
		}
		_iter_end_1a821e8b3:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58c88ee_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a58d0593_is_nil(_1a58cee44_Data* _self_) {
	return _1a5915254_is_nil((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a58d086d_is_void(_1a58cee44_Data* _self_) {
	return _1a591552e_void((*_self_)._field_kind.ptr());
}



inline jule::Bool _1a58d0b48_is_const(_1a58cee44_Data* _self_) {
	return ((*_self_)._field_constant != nullptr);
}



inline jule::Bool _1a58d1000_good_operand(_1a58cee44_Data* _self_,jule::Ptr<_1a58cee44_Data>& _9836_other) {
	return (((_1a591673e_prim(_9836_other.get()._field_kind.ptr()) == nullptr) || (!(_1a591d416_is_any(_1a591673e_prim(_9836_other.get()._field_kind.ptr()).ptr())))) && (_1a5918004_trt(_9836_other.get()._field_kind.ptr()) == nullptr)) && (!(_1a5915254_is_nil((*_self_)._field_kind.ptr())));
}







std::ostream &operator<<(std::ostream &_Stream, _1a58cee44_Data _Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58d1451_Value _Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _1a58d2b7d_push_err(_1a58d2397_Eval* _self_,_1aa07563a_Token _12627_token,jule::Str _12641_fmt,jule::Slice<jule::Any> _12654_args) {
	_1a5867bac_push_err((*_self_)._field_s.ptr(), _12627_token,_12641_fmt,_12654_args);
}



inline void _1a58d3079_push_suggestion(_1a58d2397_Eval* _self_,jule::Str _13134_fmt,jule::Slice<jule::Any> _13147_args) {
	_1a58680a8_push_suggestion((*_self_)._field_s.ptr(), _13134_fmt,_13147_args);
}



inline void _1a58d32bb_allow_builtin(_1a58d2397_Eval* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a58d350d_disallow_builtin(_1a58d2397_Eval* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Bool _1a58d37d8_is_unsafe(_1a58d2397_Eval* _self_) {
	return (*_self_)._field_unsafety;
}



inline jule::Bool _1a58d3ab3_is_global(_1a58d2397_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a5864747_Sema>>()) {
			_case_begin_1a822a3a2:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a822a65a:;
			{
				return false;
			}
		}
		_match_end_1a822a43a:;
	}
}



inline jule::Bool _1a58d3e6a_apply_numeric_prefix(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _15644_d) {
	if (((((_15644_d == nullptr) || (_15644_d.get()._field_cast_kind != nullptr)) || (!(_1a58d0b48_is_const(_15644_d.ptr())))) || (_1a591673e_prim(_15644_d.get()._field_kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr)) {
		return false;
	}
	jule::Ptr<_1a591970e_Prim> _16413_prim = _1a591673e_prim((*_self_)._field_prefix.ptr());
	if ((_16413_prim == nullptr)) {
		return false;
	}
	{
		
		if (_1ac55e528_is_float(_1a5919cd6_to_str(_16413_prim.ptr()))) {
			_case_begin_1a822dc02:;
			{
				_15644_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac4d4cea_set_f64(_15644_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ac4d3c50_as_f64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ac55da66_is_sig_int(_1a5919cd6_to_str(_16413_prim.ptr()))) {
			_case_begin_1a822d916:;
			{
				if ((!(_1a58a50c3_sig_assignable(_1a5919cd6_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac4d406e_set_i64(_15644_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_15644_d.get()._field_constant.ptr())));
			}
		}
		else if (_1ac55ddb8_is_unsig_int(_1a5919cd6_to_str(_16413_prim.ptr()))) {
			_case_begin_1a822d97c:;
			{
				if ((!(_1a58b527b_unsig_assignable(_1a5919cd6_to_str(_16413_prim.ptr()),_15644_d)))) {
					return false;
				}
				_15644_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>((*((*_self_)._field_prefix)));
				_1ac4d438d_set_u64(_15644_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_15644_d.get()._field_constant.ptr())));
			}
		}
		_match_end_1a822db47:;
	}
	return true;
}



inline jule::Ptr<_1a58cee44_Data> _1a58d4245_lit_nil(_1a58d2397_Eval* _self_) {
	jule::Ptr<_1ac4d0ec2_Const> _19317_constant = static__1ac4d2105_new_nil();
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_19317_constant)),false,_19317_constant));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d45ec_lit_str(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _20423_l) {
	jule::Str _20517_s = _20423_l.get()._field_value.slice(1LL,(_20423_l.get()._field_value.len() - 1LL));
	if (_1aa076e22_is_raw_str(_20423_l.get()._field_value)) {
		_20517_s=_1a58b40b0_to_raw_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	} else {
		_20517_s=_1a58b4412_to_str(static_cast<jule::Slice<jule::U8>>(_20517_s));
	}
	jule::Ptr<_1ac4d0ec2_Const> _21117_constant = static__1ac4d1ab6_new_str(_20517_s);
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_21117_constant)),false,_21117_constant));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d49a4_lit_bool(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _22524_l) {
	jule::Ptr<_1ac4d0ec2_Const> _22617_constant = static__1ac4d17a8_new_bool((_22524_l.get()._field_value == jule::Str("true", 4)));
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_22617_constant)),false,_22617_constant));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d4d5b_lit_rune(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _23924_l) {
	
	
	jule::Str _24313_lt = _23924_l.get()._field_value.slice(1LL,(_23924_l.get()._field_value.len() - 1LL));
	jule::I32 _24413_r = _1a5891246_to_rune(static_cast<jule::Slice<jule::U8>>(_24313_lt));
	jule::Ptr<_1a58cee44_Data> _24517_data = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_24413_r)))));
	jule::Bool _25213_is_ascii = _1a5890c5c_is_ascii(_24413_r);
	if (_25213_is_ascii) {
		_24517_data.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u8", 2)), 5)));
	} else {
		_24517_data.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i32", 3)), 5)));
	}
	_24517_data.get()._field_model=jule::Any(jule::new_ptr<_1ab82b98e_RuneExprModel>(_1ab82b98e_RuneExprModel(_24413_r)));
	_24517_data.get()._field_is_rune=true;
	return _24517_data;
}



inline jule::Ptr<_1a58cee44_Data> _1a58d5213_lit_float(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _26825_l) {
	
	jule::F64 _27113_f = ({
		auto except = _1ac43a448_parse_float(_26825_l.get()._field_value,64LL);
		(except.ok()) ? (except.result) : ({
			jule::MAX_F64;
		});
	});
	jule::Ptr<_1ac4d0ec2_Const> _27217_constant = static__1ac4d1dc4_new_f64(_27113_f);
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_27217_constant)),false,_27217_constant));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d55ba_lit_int(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _28627_l) {
	
	jule::Str _28917_lit = _28627_l.get()._field_value;
	jule::I64 _29017_base = 0LL;
	{
		
		if (_1c471294a_has_prefix(_28917_lit,jule::Str("0x", 2))) {
			_case_begin_1a82443dd:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=16LL;
			}
		}
		else if (_1c471294a_has_prefix(_28917_lit,jule::Str("0b", 2))) {
			_case_begin_1a8244586:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=2LL;
			}
		}
		else if (_1c471294a_has_prefix(_28917_lit,jule::Str("0o", 2))) {
			_case_begin_1a82440d0:;
			{
				(_28917_lit).mut_slice(2LL);
				_29017_base=8LL;
			}
		}
		else if ((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL)) {
			_case_begin_1a8244146:;
			{
				(_28917_lit).mut_slice(1LL);
				_29017_base=8LL;
			}
		}
		else {
			_case_begin_1a8244069:;
			{
				_29017_base=10LL;
			}
		}
		_match_end_1a8244014:;
	}
	jule::Ptr<_1a58cee44_Data> _30917_d = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ac4d0ec2_Const>()));
	jule::Bool _31517_ok = true;
	jule::I64 _31613_sig = ({
		auto except = _1ac05d0e3_parse_int(_28917_lit,_29017_base,64LL);
		(except.ok()) ? (except.result) : ({
			_31517_ok=false;
			0LL;
		});
	});
	if (_31517_ok) {
		_30917_d.get()._field_constant=static__1ac4d13e0_new_i64(_31613_sig);
		_30917_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)));
	} else {
		jule::U64 _32617_unsig = ({
			auto except = _1abea2bd6_parse_uint(_28917_lit,_29017_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1a58d2b7d_push_err(&(*_self_), _28627_l.get()._field_token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1a58d3079_push_suggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());
				jule::MAX_U64;
			});
		});
		_30917_d.get()._field_constant=static__1ac4d1555_new_u64(_32617_unsig);
		_30917_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("uint", 4)), 5)));
	}
	_30917_d.get()._field_model=jule::Any(_30917_d.get()._field_constant);
	if ((!(_1a58d3e6a_apply_numeric_prefix(&(*_self_), _30917_d)))) {
		_1a590ccda_fit_bitsize(_30917_d);
	}
	return _30917_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58d5972_lit_num(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr>& _34727_l) {
	{
		
		if (_1aa077be2_is_float(_34727_l.get()._field_value)) {
			_case_begin_1a824e591:;
			{
				return _1a58d5213_lit_float(&(*_self_), _34727_l);
			}
		}
		else {
			_case_begin_1a824d936:;
			{
				return _1a58d55ba_lit_int(&(*_self_), _34727_l);
			}
		}
		_match_end_1a824d88c:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58d5d29_eval_lit(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08e08d_LitExpr> _35627_lit) {
	{
		
		if (_1dd5909ac_is_nil(_35627_lit.ptr())) {
			_case_begin_1a8250c13:;
			{
				return _1a58d4245_lit_nil(&(*_self_));
			}
		}
		else if (_1aa076b14_is_str(_35627_lit.get()._field_value)) {
			_case_begin_1a8250cac:;
			{
				return _1a58d45ec_lit_str(&(*_self_), _35627_lit);
			}
		}
		else if (_1aa0778d4_is_bool(_35627_lit.get()._field_value)) {
			_case_begin_1a8250d34:;
			{
				return _1a58d49a4_lit_bool(&(*_self_), _35627_lit);
			}
		}
		else if (_1aa077230_is_rune(_35627_lit.get()._field_value)) {
			_case_begin_1a8250a04:;
			{
				return _1a58d4d5b_lit_rune(&(*_self_), _35627_lit);
			}
		}
		else if (_1aa078000_is_num(_35627_lit.get()._field_value)) {
			_case_begin_1a8250a7b:;
			{
				return _1a58d5972_lit_num(&(*_self_), _35627_lit);
			}
		}
		else {
			_case_begin_1a8250592:;
			{
				return nullptr;
			}
		}
		_match_end_1a82504e8:;
	}
}



inline jule::Any _1a58d61d1_find_builtins(_1a58d2397_Eval* _self_,jule::Str _37332_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac580d41_ImportInfo>>()) {
			_case_begin_1a82542aa:;
			{
				jule::Any _37621_def = _1a590ca65_find_builtins_import(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ac580d41_ImportInfo>());
				if (_37621_def != jule::Any(jule::Any(nullptr))) {
					return _37621_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5864747_Sema>>()) {
			_case_begin_1a8254332:;
			{
				jule::Any _38121_def = _1a590d956_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1a5864747_Sema>());
				if (_38121_def != jule::Any(jule::Any(nullptr))) {
					return _38121_def;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a82543a9:;
			{
				jule::Any _38621_def = _1a590d956_find_builtins_sema(_37332_ident,(*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>().get()._field_s);
				if (_38621_def != jule::Any(jule::Any(nullptr))) {
					return _38621_def;
				}
			}
		}
		_match_end_1a8254079:;
	}
	return ((jule::Any(jule::Any((*_self_)._field_dis_builtin))) ? (jule::Any(jule::Any(nullptr))) : (_1a593bea1_find_builtin_def(_37332_ident)));
}



inline jule::Any _1a58d6665_get_def(_1a58d2397_Eval* _self_,jule::Str _39426_ident,jule::Bool _39438_cpp_linked) {
	if ((!(_39438_cpp_linked))) {
		jule::Ptr<_1ac44a337_Enum> _39621_enm = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a5932d32_find_enum((*_self_)._field_lookup, _39426_ident);
		if ((_39621_enm != nullptr)) {
			return jule::Any(_39621_enm);
		}
	}
	jule::Ptr<_1a588601b_Var> _40217_v = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a5931726_find_var((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_40217_v != nullptr)) {
		return jule::Any(_40217_v);
	}
	jule::Ptr<_1ab832324_Fn> _40717_f = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a59325c3_find_fn((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_40717_f != nullptr)) {
		return jule::Any(_40717_f);
	}
	jule::Ptr<_1ab810b3d_Struct> _41217_s = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a593213e_find_struct((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_41217_s != nullptr)) {
		return jule::Any(_41217_s);
	}
	jule::Ptr<_1a5912d12_TypeAlias> _41717_ta = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a5931baa_find_type_alias((*_self_)._field_lookup, _39426_ident,_39438_cpp_linked);
	if ((_41717_ta != nullptr)) {
		return jule::Any(_41717_ta);
	}
	return _1a58d61d1_find_builtins(&(*_self_), _39426_ident);
}



inline void _1a58d6984_push_reference(_1a58d2397_Eval* _self_,jule::Ptr<_1ab839d43_ReferenceStack>& _42538_references) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a825e42a:;
			{
				jule::Ptr<_1ac565bd3_ScopeChecker> _42821_sc = _1ac568114_get_root((*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>());
				if ((!(_1ab83b21d_exist_1(_42538_references.ptr(), _42821_sc.get()._field_owner)))) {
					_1ab83ad66_push(_42538_references.ptr(), jule::Any(_42821_sc.get()._field_owner));
				}
			}
		}
		else {
			_case_begin_1a825dd31:;
			{
				if (((*_self_)._field_owner != nullptr) && (!(_1ab83b21d_exist_0(_42538_references.ptr(), (*_self_)._field_owner)))) {
					_1ab83ad66_push(_42538_references.ptr(), jule::Any((*_self_)._field_owner));
				}
			}
		}
		_match_end_1a825db11:;
	}
}



inline void _1a58d6ca3_push_reference_to_fn(_1a58d2397_Eval* _self_,jule::Ptr<_1ab836218_FnIns>& _43944_f) {
	_1a58d6984_push_reference(&(*_self_), _43944_f.get()._field_references);
}



inline void _1a58d70c2_push_reference_to_var(_1a58d2397_Eval* _self_,jule::Ptr<_1a588601b_Var>& _44345_v) {
	if ((_44345_v.get()._field_references != nullptr)) {
		_1a58d6984_push_reference(&(*_self_), _44345_v.get()._field_references);
	}
}



inline void _1a58d7435_push_reference_to_struct(_1a58d2397_Eval* _self_,jule::Ptr<_1ab814515_StructIns>& _44948_s) {
	_1a58d6984_push_reference(&(*_self_), _44948_s.get()._field_references);
}



inline jule::Ptr<_1a58cee44_Data> _1a58d77cb___eval_enum(_1a58d2397_Eval* _self_,jule::Ptr<_1ac44a337_Enum> _45330_enm) {
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_45330_enm, 3))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),true,nullptr));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d7c60_eval_enum(_1a58d2397_Eval* _self_,jule::Ptr<_1ac44a337_Enum> _46532_enm,_1aa07563a_Token _46544_error_token) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _46532_enm.get()._field_public,_46532_enm.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _46544_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_46532_enm.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _1a58d77cb___eval_enum(&(*_self_), _46532_enm);
}



inline jule::Ptr<_1a58cee44_Data> _1a58d8117___eval_struct(_1a58d2397_Eval* _self_,jule::Ptr<_1ab814515_StructIns> _47532_s) {
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_47532_s, 0))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_47532_s)),true,nullptr));
}



inline jule::Ptr<_1a58cee44_Data> _1a58d859b_eval_struct(_1a58d2397_Eval* _self_,jule::Ptr<_1ab814515_StructIns> _48834_s,_1aa07563a_Token _48849_error_token) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _48834_s.get()._field_decl.get()._field_public,_48834_s.get()._field_decl.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _48849_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_48834_s.get()._field_decl.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a58d8d4e_check_deprecated(&(*_self_), _48834_s.get()._field_decl.get()._field_directives,_48849_error_token);
	return _1a58d8117___eval_struct(&(*_self_), _48834_s);
}



inline jule::Ptr<_1a58cee44_Data> _1a58d8953_eval_fn_ins(_1a58d2397_Eval* _self_,jule::Ptr<_1ab836218_FnIns> _50030_f) {
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_50030_f, 1))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(_50030_f)),false,nullptr));
}



inline void _1a58d8d4e_check_deprecated(_1a58d2397_Eval* _self_,jule::Slice<jule::Ptr<_1dd583043_Directive>>& _51340_directives,_1aa07563a_Token _51382_tok) {
	if (_1a58d37d8_is_unsafe(&(*_self_))) {
		return;
	}
	jule::Ptr<_1dd583043_Directive> _51813_d = _1a590c636_find_directive(_51340_directives,jule::Str("deprecated", 10));
	if ((_51813_d != nullptr)) {
		if ((_51813_d.get()._field_args.len() == 0LL)) {
			_1a58d2b7d_push_err(&(*_self_), _51382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("this code is deprecated", 23))}));
		} else {
			_1a58d2b7d_push_err(&(*_self_), _51382_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>({jule::Any(_51813_d.get()._field_args[0LL]._field_kind)}));
		}
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58d92d3_eval_fn(_1a58d2397_Eval* _self_,jule::Ptr<_1ab832324_Fn> _52930_f,_1aa07563a_Token _52938_error_token) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _52930_f.get()._field_public,_52930_f.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _52938_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_52930_f.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a58d8d4e_check_deprecated(&(*_self_), _52930_f.get()._field_directives,_52938_error_token);
	jule::Ptr<_1ab836218_FnIns> _53817_ins = _1ab8345ac_instance(_52930_f);
	_1a58d6ca3_push_reference_to_fn(&(*_self_), _53817_ins);
	return _1a58d8953_eval_fn_ins(&(*_self_), _53817_ins);
}



inline void _1a58d9800_push_illegal_cycle_error(_1a58d2397_Eval* _self_,jule::Ptr<_1a588601b_Var>& _54344_v1,jule::Ptr<_1a588601b_Var>& _54355_v2,jule::Str& _54370_message) {
	
	jule::Str _54613_refers_to = _1c4810938_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_54344_v1.get()._field_ident),jule::Any(_54355_v2.get()._field_ident)}));
	(_54370_message).buffer.insert(0, (((_1c3ad1c93_repeat(jule::Str(" ", 1),4LL) + _54613_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a58d9c73_check_cross_cycle(_1a58d2397_Eval* _self_,jule::Ptr<_1a588601b_Var>& _55037_v,jule::Str& _55051_message) {
	{
		auto &expr = _55037_v.get()._field_depends;
		auto it = expr.begin();
		_iter_begin_1a827ced7:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> &_1a827d0a3_d = *it;
			{
				if (_1a827d0a3_d == (*_self_)._field_owner) {
					_1a58d9800_push_illegal_cycle_error(&(*_self_), _55037_v,_1a827d0a3_d,_55051_message);
					return false;
				}
				if ((!(_1a58d9c73_check_cross_cycle(&(*_self_), _1a827d0a3_d,_55051_message)))) {
					_1a58d9800_push_illegal_cycle_error(&(*_self_), _55037_v,_1a827d0a3_d,_55051_message);
					return false;
				}
			}
			_iter_next_1a827ced7:;
			++it;
			goto _iter_begin_1a827ced7;
		}
		_iter_end_1a827ced7:;
	}
	return true;
}



inline jule::Bool _1a58da207_check_illegal_cycles(_1a58d2397_Eval* _self_,jule::Ptr<_1a588601b_Var>& _56944_v,_1aa07563a_Token _56953_decl_token) {
	jule::Bool _56974_ok = jule::Bool();
	if (((*_self_)._field_owner == nullptr)) {
		_56974_ok = true;
		return _56974_ok;
	}
	if ((*_self_)._field_owner == _56944_v) {
		_1a58d2b7d_push_err(&(*_self_), (*_self_)._field_owner.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_owner.get()._field_ident)}));
		_56974_ok = false;
		return _56974_ok;
	}
	jule::Str _58117_message = jule::Str();
	if ((!(_1a58d9c73_check_cross_cycle(&(*_self_), _56944_v,_58117_message)))) {
		jule::Str _58421_err_msg = _58117_message;
		_58117_message=jule::Str();
		_1a58d9800_push_illegal_cycle_error(&(*_self_), (*_self_)._field_owner,_56944_v,_58117_message);
		_58421_err_msg=_58421_err_msg + _58117_message;
		_1a58d2b7d_push_err(&(*_self_), _56953_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_58421_err_msg)}));
		_56974_ok = false;
		return _56974_ok;
	}
	(*_self_)._field_owner.get()._field_depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_depends,1);(*_self_)._field_owner.get()._field_depends.__push(_56944_v);
	_56974_ok = true;
	return _56974_ok;
}



inline jule::Ptr<_1a58cee44_Data> _1a58da68b_eval_var(_1a58d2397_Eval* _self_,jule::Ptr<_1a588601b_Var> _59631_v,_1aa07563a_Token _59640_error_token) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _59631_v.get()._field_public,_59631_v.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _59640_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_59631_v.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a58d8d4e_check_deprecated(&(*_self_), _59631_v.get()._field_directives,_59640_error_token);
	_59631_v.get()._field_used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a5864747_Sema>>()) {
			_case_begin_1a82885db:;
			{
				jule::Bool _61017_ok = _1a58da207_check_illegal_cycles(&(*_self_), _59631_v,_59640_error_token);
				if ((!(_61017_ok))) {
					return nullptr;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a82886a7:;
			{
				if ((!(_59631_v.get()._field_reference)) || _1a58d37d8_is_unsafe(&(*_self_))) {
					goto _match_end_1a8288586;
				}
				jule::Ptr<_1ac565bd3_ScopeChecker> _62021_s = (*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>();
				while ((_62021_s.get()._field_owner == nullptr) && (_62021_s.get()._field_parent != nullptr)) {
					{
						_62021_s=_62021_s.get()._field_parent;
					}
				_iter_next_1a828a4de:;
				}
				_iter_end_1a828a4de:;
				if (((_62021_s.get()._field_owner != nullptr) && _62021_s.get()._field_owner.get()._field_anon) && (_59631_v.get()._field_scope != _62021_s.get()._field_owner.get()._field_scope)) {
					_1a58d2b7d_push_err(&(*_self_), _59640_error_token,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>({jule::Any(_59631_v.get()._field_ident)}));
				}
			}
		}
		_match_end_1a8288586:;
	}
	_1a58d70c2_push_reference_to_var(&(*_self_), _59631_v);
	if ((!(_59631_v.get()._field_cpp_linked)) && ((_59631_v.get()._field_value == nullptr) || (_59631_v.get()._field_value.get()._field_data == nullptr))) {
		if (_59631_v.get()._field_constant) {
			_1a587c144_check_type_var((*_self_)._field_s, _59631_v,jule::Trait<_1a5932ea8_Lookup>((*_self_)._field_s, 3));
			if ((_59631_v.get()._field_value.get()._field_data == nullptr)) {
				return nullptr;
			}
		}
	}
	if ((_59631_v.get()._field_kind == nullptr) || (_59631_v.get()._field_kind.get()._field_kind == nullptr)) {
		if ((_59631_v.get()._field_scope != nullptr)) {
			return nullptr;
		}
		_1a587c144_check_type_var((*_self_)._field_s, _59631_v,(*_self_)._field_lookup);
		if ((_59631_v.get()._field_kind == nullptr) || (_59631_v.get()._field_kind.get()._field_kind == nullptr)) {
			return nullptr;
		}
	}
	jule::Ptr<_1a58cee44_Data> _66017_d = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(_59631_v.get()._field_kind.get()._field_kind,jule::Ptr<_1a5913e9a_TypeKind>(),_59631_v.get()._field_mutable,_59631_v.get()._field_reference,(!(_59631_v.get()._field_constant)),jule::Bool(),jule::Any(jule::Any(_59631_v)),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
	if (((!(_59631_v.get()._field_cpp_linked)) && _1a5886637_is_initialized(_59631_v.ptr())) && (_59631_v.get()._field_value.get()._field_data != nullptr)) {
		_66017_d.get()._field_is_rune=_59631_v.get()._field_value.get()._field_data.get()._field_is_rune;
	}
	if (_59631_v.get()._field_constant && (_59631_v.get()._field_value.get()._field_data.get()._field_constant != nullptr)) {
		_66017_d.get()._field_constant=jule::new_ptr<_1ac4d0ec2_Const>((*(_59631_v.get()._field_value.get()._field_data.get()._field_constant)));
		_66017_d.get()._field_model=jule::Any(_66017_d.get()._field_constant);
	}
	if (_1a58d0b48_is_const(_66017_d.ptr())) {
		_1a58d3e6a_apply_numeric_prefix(&(*_self_), _66017_d);
	}
	return _66017_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58dab20_eval_type_alias(_1a58d2397_Eval* _self_,jule::Ptr<_1a5912d12_TypeAlias> _68438_ta,_1aa07563a_Token _68454_error_token) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _68438_ta.get()._field_public,_68438_ta.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _68454_error_token,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_68438_ta.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;
	}
	_68438_ta.get()._field_used=true;
	jule::Trait<_1a591395b_Kind> _69317_kind = _68438_ta.get()._field_kind.get()._field_kind.get()._field_kind;
	jule::Ptr<_1a58cee44_Data> _69417_d = nullptr;
	{
		auto &_match_expr{ _69317_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab814515_StructIns>>()) {
			_case_begin_1a82999a4:;
			{
				_69417_d=_1a58d8117___eval_struct(&(*_self_), _69317_kind.operator jule::Ptr<_1ab814515_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44a337_Enum>>()) {
			_case_begin_1a8299e16:;
			{
				_69417_d=_1a58d77cb___eval_enum(&(*_self_), _69317_kind.operator jule::Ptr<_1ac44a337_Enum>());
			}
		}
		else {
			_case_begin_1a8299d17:;
			{
				_69417_d=jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(((_68438_ta.get()._field_cpp_linked) ? (_68438_ta.get()._field_ident) : (_68438_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident)),jule::Bool(),jule::Bool(),_68438_ta.get()._field_kind.get()._field_kind.get()._field_kind)),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1ac4d0ec2_Const>()));
				_69417_d.get()._field_model=jule::Any(_69417_d.get()._field_kind);
			}
		}
		_match_end_1a8299cb2:;
	}
	_69417_d.get()._field_kind.get()._field_generic=_68438_ta.get()._field_generic;
	return _69417_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58db0a4_eval_def(_1a58d2397_Eval* _self_,jule::Any _71431_def,_1aa07563a_Token _71441_ident) {
	{
		auto &_match_expr{ _71431_def };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a829da74:;
			{
				return _1a58da68b_eval_var(&(*_self_), _71431_def.operator jule::Ptr<_1a588601b_Var>(),_71441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44a337_Enum>>()) {
			_case_begin_1a829dada:;
			{
				return _1a58d7c60_eval_enum(&(*_self_), _71431_def.operator jule::Ptr<_1ac44a337_Enum>(),_71441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a829db51:;
			{
				return _1a58d859b_eval_struct(&(*_self_), _1ab8112d1_instance(_71431_def.operator jule::Ptr<_1ab810b3d_Struct>()),_71441_ident);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab832324_Fn>>()) {
			_case_begin_1a829dbc8:;
			{
				jule::Ptr<_1ab832324_Fn> _72321_f = _71431_def.operator jule::Ptr<_1ab832324_Fn>();
				if ((_72321_f.get()._field_ident != jule::Str("init", 4))) {
					return _1a58d92d3_eval_fn(&(*_self_), _72321_f,_71441_ident);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1a829dc50:;
			{
				return _1a58d8953_eval_fn_ins(&(*_self_), _71431_def.operator jule::Ptr<_1ab836218_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
			_case_begin_1a829dcc7:;
			{
				return _1a58dab20_eval_type_alias(&(*_self_), _71431_def.operator jule::Ptr<_1a5912d12_TypeAlias>(),_71441_ident);
			}
		}
		_match_end_1a829d920:;
	}
	_1a58d2b7d_push_err(&(*_self_), _71441_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_71441_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a58cee44_Data> _1a58db45b_eval_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1aa08ece7_IdentExpr> _73629_ident) {
	jule::Any _73717_def = _1a58d6665_get_def(&(*_self_), _73629_ident.get()._field_ident,_73629_ident.get()._field_cpp_linked);
	return _1a58db0a4_eval_def(&(*_self_), _73717_def,_73629_ident.get()._field_token);
}



inline jule::Ptr<_1a58cee44_Data> _1a58db813_eval_unary(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa090215_UnaryExpr> _74134_u) {
	_1a5903253_UnaryEval _74217_unary = static__1a590396d_new(_self_);
	return _1a5905123_eval(&_74217_unary, _74134_u);
}



inline jule::Ptr<_1a58cee44_Data> _1a58dbbba_eval_variadic(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa090633_VariadicExpr> _74637_v) {
	if ((_74637_v.get()._field_expr == nullptr)) {
		_1a58d2b7d_push_err(_self_.ptr(), _74637_v.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _75217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _75617_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_74637_v.get()._field_expr));
	if ((_75617_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a5916464_variadicable(_75617_d.get()._field_kind.ptr())))) {
		_1a58d2b7d_push_err(_self_.ptr(), _74637_v.get()._field_token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_75617_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	jule::Ptr<_1a591e549_Slc> _76613_slc = _1a5917674_slc(_75617_d.get()._field_kind.ptr());
	_75617_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(_76613_slc.get()._field_elem.get()._field_cpp_ident,_76613_slc.get()._field_elem.get()._field_generic,true,_76613_slc.get()._field_elem.get()._field_kind));
	return _75617_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58dc072_eval_unsafe(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa08e4ab_UnsafeExpr> _77635_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a58cee44_Data> _78017_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_77635_u.get()._field_expr));
	_self_.get()._field_unsafety=_77713_unsafety;
	return _78017_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58dc429_eval_arr(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09326d_SliceExpr> _78732_s) {
	jule::Ptr<_1a592230a_Arr> _78917_pt = _1a5917399_arr(_self_.get()._field_prefix.ptr());
	jule::Ptr<_1a592230a_Arr> _79117_arr = jule::new_ptr<_1a592230a_Arr>(_1a592230a_Arr(false,0LL,_78917_pt.get()._field_elem));
	jule::Bool _79717_filled = false;
	if ((_78732_s.get()._field_exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78732_s.get()._field_exprs[1LL].get()._field_kind };
			
			if (_match_expr.type_is<jule::Ptr<_1aa090633_VariadicExpr>>()) {
				_case_begin_1a82b25e3:;
				{
					if ((_78732_s.get()._field_exprs[1LL].get()._field_kind.operator jule::Ptr<_1aa090633_VariadicExpr>().get()._field_expr != nullptr)) {
						goto _match_end_1a82b256b;
					}
					if (_78917_pt.get()._field_auto) {
						_1a58d2b7d_push_err(_self_.ptr(), _78732_s.get()._field_token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;
					}
					_79717_filled=true;
					_78732_s.get()._field_exprs=_78732_s.get()._field_exprs.slice(0LL,1LL);
				}
			}
			_match_end_1a82b256b:;
		}
	}
	_79117_arr.get()._field_n=static_cast<jule::I64>(_78732_s.get()._field_exprs.len());
	if ((!(_78917_pt.get()._field_auto))) {
		if (_79117_arr.get()._field_n > _78917_pt.get()._field_n) {
			_1a58d2b7d_push_err(_self_.ptr(), _78732_s.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if (_79117_arr.get()._field_n < _78917_pt.get()._field_n) {
			_79117_arr.get()._field_n=_78917_pt.get()._field_n;
		}
	}
	jule::Ptr<_1ab820136_ArrayExprModel> _82617_model = jule::new_ptr<_1ab820136_ArrayExprModel>(_1ab820136_ArrayExprModel(_79117_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(((_79717_filled) ? (2LL) : (static_cast<jule::I64>(static_cast<jule::I64>(_78732_s.get()._field_exprs.len()))))))));
	jule::Ptr<_1a5913e9a_TypeKind> _83117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_79117_arr.get()._field_elem;
	{
		auto &expr = _78732_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a82b7ce1:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a82b8220_elem = *it;
			{
				jule::Ptr<_1a58cee44_Data> _83421_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_1a82b8220_elem));
				if ((_83421_d == nullptr)) {
					goto _iter_next_1a82b7ce1;
				}
				_1a586e202_check_assign_type(_self_.get()._field_s, false,_79117_arr.get()._field_elem,_83421_d,_78732_s.get()._field_token);
				_82617_model.get()._field_elems = jule::alloc_for_append(_82617_model.get()._field_elems,1);_82617_model.get()._field_elems.__push(_83421_d.get()._field_model);
			}
			_iter_next_1a82b7ce1:;
			++it;
			goto _iter_begin_1a82b7ce1;
		}
		_iter_end_1a82b7ce1:;
	}
	_self_.get()._field_prefix=_83117_prefix;
	if (_79717_filled) {
		_82617_model.get()._field_elems = jule::alloc_for_append(_82617_model.get()._field_elems,1);_82617_model.get()._field_elems.__push(jule::Any(nullptr));
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_79117_arr, 10))),jule::Ptr<_1a5913e9a_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_82617_model)),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a58dc8ad_eval_exp_slc(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09326d_SliceExpr> _85836_s,jule::Ptr<_1a5913e9a_TypeKind> _85855_elem_type) {
	jule::Ptr<_1a591e549_Slc> _85917_slc = jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_85855_elem_type));
	jule::Ptr<_1ab81a74c_SliceExprModel> _86317_model = jule::new_ptr<_1ab81a74c_SliceExprModel>(_1ab81a74c_SliceExprModel(_85855_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_85836_s.get()._field_exprs.len()))));
	jule::Ptr<_1a5913e9a_TypeKind> _86817_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_85917_slc.get()._field_elem;
	{
		auto &expr = _85836_s.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a82bda0b:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a82bdb2c_elem = *it;
			{
				jule::Ptr<_1a58cee44_Data> _87121_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_1a82bdb2c_elem));
				if ((_87121_d == nullptr)) {
					goto _iter_next_1a82bda0b;
				}
				_1a586e202_check_assign_type(_self_.get()._field_s, false,_85917_slc.get()._field_elem,_87121_d,_85836_s.get()._field_token);
				_86317_model.get()._field_elems = jule::alloc_for_append(_86317_model.get()._field_elems,1);_86317_model.get()._field_elems.__push(_87121_d.get()._field_model);
			}
			_iter_next_1a82bda0b:;
			++it;
			goto _iter_begin_1a82bda0b;
		}
		_iter_end_1a82bda0b:;
	}
	_self_.get()._field_prefix=_86817_prefix;
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_85917_slc, 7))),jule::Ptr<_1a5913e9a_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_86317_model)),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a58dcc65_eval_slice_expr(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09326d_SliceExpr> _88939_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a5917399_arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a82c2625:;
				{
					return _1a58dc429_eval_arr(_self_, _88939_s);
				}
			}
			else if ((_1a5917674_slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a82c269c:;
				{
					jule::Ptr<_1a591e549_Slc> _89625_pt = _1a5917674_slc(_self_.get()._field_prefix.ptr());
					return _1a58dc8ad_eval_exp_slc(_self_, _88939_s,_89625_pt.get()._field_elem);
				}
			}
			_match_end_1a82c2515:;
		}
	}
	jule::Ptr<_1a5913e9a_TypeKind> _90117_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	if ((_88939_s.get()._field_exprs.len() == 0LL)) {
		_1a58d2b7d_push_err(_self_.ptr(), _88939_s.get()._field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _90917_first_elem = _1a5902494_eval_expr_kind(_self_, jule::Any(_88939_s.get()._field_exprs[0LL]));
	if ((_90917_first_elem == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _91417_d = _1a58dc8ad_eval_exp_slc(_self_, _88939_s,_90917_first_elem.get()._field_kind);
	_self_.get()._field_prefix=_90117_prefix;
	return _91417_d;
}



inline void _1a58dd1a5_check_integer_indexing_by_data(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _92054_d,_1aa07563a_Token _92064_token) {
	jule::Str _92113_err_key = _1a590eec9_check_data_for_integer_indexing(_92054_d);
	{
		auto &_match_expr{ _92113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a82c8eab:;
			{
				return;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a82c8cad:;
			{
				_1a58d2b7d_push_err(&(*_self_), _92064_token,_92113_err_key,jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_92054_d.get()._field_kind.ptr()))}));
			}
		}
		else {
			_case_begin_1a82c865e:;
			{
				_1a58d2b7d_push_err(&(*_self_), _92064_token,_92113_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1a82c8b7b:;
	}
}



inline void _1a58dd66c_indexing_ptr(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _93436_d,jule::Ptr<_1a58cee44_Data>& _93451_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _93466_i) {
	_1a58dd1a5_check_integer_indexing_by_data(&(*_self_), _93451_index,_93466_i.get()._field_token);
	jule::Ptr<_1a59230db_Ptr> _93717_ptr = _1a5916ce4_ptr(_93436_d.get()._field_kind.ptr());
	{
		
		if (_1a5923e33_is_unsafe(_93717_ptr.ptr())) {
			_case_begin_1a82cc3dd:;
			{
				_1a58d2b7d_push_err(&(*_self_), _93466_i.get()._field_token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;
			}
		}
		else if ((!(_1a58d37d8_is_unsafe(&(*_self_))))) {
			_case_begin_1a82cc465:;
			{
				_1a58d2b7d_push_err(&(*_self_), _93466_i.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a82cc311:;
	}
	_93436_d.get()._field_kind=_93717_ptr.get()._field_elem;
}



inline void _1a58ddb45_indexing_arr(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _95036_d,jule::Ptr<_1a58cee44_Data>& _95051_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _95066_i) {
	jule::Ptr<_1a592230a_Arr> _95117_arr = _1a5917399_arr(_95036_d.get()._field_kind.ptr());
	_95036_d.get()._field_kind=_95117_arr.get()._field_elem;
	_1a58dd1a5_check_integer_indexing_by_data(&(*_self_), _95051_index,_95066_i.get()._field_token);
	if (_1a58d0b48_is_const(_95051_index.ptr()) && (_1ac4d3c50_as_f64(_95051_index.get()._field_constant.ptr()) >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_95117_arr.get()._field_n))))) {
		_1a58d2b7d_push_err(&(*_self_), _95066_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a58de11d_indexing_slc(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _95936_d,jule::Ptr<_1a58cee44_Data>& _95951_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _95966_i) {
	jule::Ptr<_1a591e549_Slc> _96017_slc = _1a5917674_slc(_95936_d.get()._field_kind.ptr());
	_95936_d.get()._field_kind=_96017_slc.get()._field_elem;
	_1a58dd1a5_check_integer_indexing_by_data(&(*_self_), _95951_index,_95966_i.get()._field_token);
	if ((!(_1a58d0b48_is_const(_95951_index.ptr())))) {
		return;
	}
	{
		auto &_match_expr{ _95936_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81a74c_SliceExprModel>>()) {
			_case_begin_1a82d57c0:;
			{
				jule::Ptr<_1ab81a74c_SliceExprModel> _97021_m = _95936_d.get()._field_model.operator jule::Ptr<_1ab81a74c_SliceExprModel>();
				jule::F64 _97117_indx = _1ac4d3c50_as_f64(_95951_index.get()._field_constant.ptr());
				if (_97117_indx >= static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_97021_m.get()._field_elems.len())))) {
					_1a58d2b7d_push_err(&(*_self_), _95966_i.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_95936_d.get()._field_model=_97021_m.get()._field_elems[static_cast<jule::I64>(static_cast<jule::U64>(_97117_indx))];
					_95936_d.get()._field_decl=true;
				}
			}
		}
		_match_end_1a82d5759:;
	}
}



inline void _1a58de5e6_indexing_map(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _98136_d,jule::Ptr<_1a58cee44_Data>& _98151_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _98170_i) {
	if ((_98151_index == nullptr)) {
		return;
	}
	jule::Ptr<_1a592132b_Map> _98617_m = _1a59182ce_map(_98136_d.get()._field_kind.ptr());
	_1a58b7778_AssignTypeChecker _98717_atc = _1a58b7778_AssignTypeChecker((*_self_)._field_s,_98617_m.get()._field_key,_98151_index,_98170_i.get()._field_token);
	_1a58b8dea_check(&_98717_atc);
	_98136_d.get()._field_kind=_98617_m.get()._field_val;
}



inline void _1a58deabe_indexing_str(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _99836_d,jule::Ptr<_1a58cee44_Data>& _99851_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _99866_i) {
	
	_99836_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u8", 2)), 5)));
	if ((_99851_index == nullptr)) {
		return;
	}
	_1a58dd1a5_check_integer_indexing_by_data(&(*_self_), _99851_index,_99866_i.get()._field_token);
	if ((!(_1a58d0b48_is_const(_99851_index.ptr())))) {
		_99836_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a58d0b48_is_const(_99836_d.ptr())) {
		_1aa07563a_Token _101417_error_token = _99866_i.get()._field_token;
		jule::I64 _101517_j = _1ac4d369a_as_i64(_99851_index.get()._field_constant.ptr());
		jule::Str _101617_s = _1ac4d30e5_read_str(_99836_d.get()._field_constant.ptr());
		if (static_cast<jule::I64>(_101517_j) >= static_cast<jule::I64>(static_cast<jule::I64>(_101617_s.len()))) {
			_1a58d2b7d_push_err(&(*_self_), _101417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1ac4d438d_set_u64(_99836_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101617_s[_101517_j])));
		}
	}
}



inline void _1a58e0097_to_indexing(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _102535_d,jule::Ptr<_1a58cee44_Data>& _102550_index,jule::Ptr<_1aa093b0e_IndexingExpr>& _102569_i) {
	{
		
		if ((_1a5916ce4_ptr(_102535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a82e30d5:;
			{
				_1a58dd66c_indexing_ptr(&(*_self_), _102535_d,_102550_index,_102569_i);
				return;
			}
		}
		else if ((_1a5917399_arr(_102535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a82e315c:;
			{
				_1a58ddb45_indexing_arr(&(*_self_), _102535_d,_102550_index,_102569_i);
				return;
			}
		}
		else if ((_1a5917674_slc(_102535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a82e31d4:;
			{
				_1a58de11d_indexing_slc(&(*_self_), _102535_d,_102550_index,_102569_i);
				return;
			}
		}
		else if ((_1a59182ce_map(_102535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a82e325b:;
			{
				_1a58de5e6_indexing_map(&(*_self_), _102535_d,_102550_index,_102569_i);
				return;
			}
		}
		else if ((_1a591673e_prim(_102535_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a82e32d3:;
			{
				jule::Ptr<_1a591970e_Prim> _104417_prim = _1a591673e_prim(_102535_d.get()._field_kind.ptr());
				{
					
					if (_1a591d13b_is_str(_104417_prim.ptr())) {
						_case_begin_1a82e8195:;
						{
							_1a58deabe_indexing_str(&(*_self_), _102535_d,_102550_index,_102569_i);
							return;
						}
					}
					_match_end_1a82e80da:;
				}
			}
		}
		_match_end_1a82e2e92:;
	}
	_1a58d2b7d_push_err(&(*_self_), _102569_i.get()._field_token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_102535_d.get()._field_kind.ptr()))}));
}



inline jule::Bool _1a58e0570_push_generics_from_index_data(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _105554_decl,jule::Ptr<_1aa093b0e_IndexingExpr>& _105581_i) {
	{
		auto &_match_expr{ _105581_i.get()._field_index.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa090215_UnaryExpr>>()) {
			_case_begin_1a82eb75e:;
			{
				jule::Ptr<_1a58cee44_Data> _106021_d = _1a58db813_eval_unary(_self_, _105581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aa090215_UnaryExpr>());
				if ((!(_106021_d.get()._field_decl))) {
					_1a58d2b7d_push_err(_self_.ptr(), _105581_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return false;
				}
				_105554_decl.get()._field_generics = jule::alloc_for_append(_105554_decl.get()._field_generics,1);_105554_decl.get()._field_generics.__push(jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_1aa07563a_Token(),jule::Any(jule::Any(_106021_d.get()._field_kind)))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd583461_TypeDecl>>()) {
			_case_begin_1a82ea890:;
			{
				_105554_decl.get()._field_generics = jule::alloc_for_append(_105554_decl.get()._field_generics,1);_105554_decl.get()._field_generics.__push(_105581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1dd583461_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
			_case_begin_1a82ea906:;
			{
				jule::Ptr<_1aa08ece7_IdentExpr> _107121_expr = _105581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aa08ece7_IdentExpr>();
				_105554_decl.get()._field_generics = jule::alloc_for_append(_105554_decl.get()._field_generics,1);_105554_decl.get()._field_generics.__push(jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_1aa07563a_Token(),jule::Any(jule::Any(jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_107121_expr.get()._field_token,_107121_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>())))))));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08db70_TupleExpr>>()) {
			_case_begin_1a82ea96c:;
			{
				{
					auto &expr = _105581_i.get()._field_index.get()._field_kind.operator jule::Ptr<_1aa08db70_TupleExpr>().get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1a83008b7:;
					if (it != expr.end()) {
						jule::Ptr<_1aa08d334_Expr> _1a830170e_expr = *it;
						{
							{
								auto &_match_expr{ _1a830170e_expr.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1dd583461_TypeDecl>>()) {
									_case_begin_1a8301ed4:;
									{
										_105554_decl.get()._field_generics = jule::alloc_for_append(_105554_decl.get()._field_generics,1);_105554_decl.get()._field_generics.__push(_1a830170e_expr.get()._field_kind.operator jule::Ptr<_1dd583461_TypeDecl>());
									}
								}
								else if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
									_case_begin_1a830204a:;
									{
										jule::Ptr<_1aa08ece7_IdentExpr> _108429_expr = _1a830170e_expr.get()._field_kind.operator jule::Ptr<_1aa08ece7_IdentExpr>();
										_105554_decl.get()._field_generics = jule::alloc_for_append(_105554_decl.get()._field_generics,1);_105554_decl.get()._field_generics.__push(jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_1aa07563a_Token(),jule::Any(jule::Any(jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_108429_expr.get()._field_token,_108429_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>())))))));
									}
								}
								_match_end_1a8301e7e:;
							}
						}
						_iter_next_1a83008b7:;
						++it;
						goto _iter_begin_1a83008b7;
					}
					_iter_end_1a83008b7:;
				}
			}
		}
		else {
			_case_begin_1a82ea829:;
			{
				_1a58d2b7d_push_err(_self_.ptr(), _105581_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;
			}
		}
		_match_end_1a82ea72a:;
	}
	return true;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e0a37_eval_ident_decl_from_indexing(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1a58cee44_Data>& _110054_d,jule::Ptr<_1aa093b0e_IndexingExpr>& _110069_i) {
	jule::Ptr<_1dd583461_TypeDecl> _110117_tdecl = jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl());
	jule::Ptr<_1dd58387e_IdentTypeDecl> _110217_decl = nullptr;
	{
		auto &_match_expr{ _110069_i.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
			_case_begin_1a8306527:;
			{
				jule::Ptr<_1aa08ece7_IdentExpr> _110521_expr = _110069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1aa08ece7_IdentExpr>();
				_110217_decl=jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_110521_expr.get()._field_token,_110521_expr.get()._field_ident,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>()));
				_110117_tdecl.get()._field_kind=jule::Any(_110217_decl);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa090e6e_NsSelectionExpr>>()) {
			_case_begin_1a830658d:;
			{
				jule::Ptr<_1aa090e6e_NsSelectionExpr> _111221_expr = _110069_i.get()._field_expr.get()._field_kind.operator jule::Ptr<_1aa090e6e_NsSelectionExpr>();
				_110217_decl=jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_111221_expr.get()._field_ident,_111221_expr.get()._field_ident._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>()));
				_110117_tdecl.get()._field_kind=jule::Any(jule::new_ptr<_1dd583c9c_NamespaceTypeDecl>(_1dd583c9c_NamespaceTypeDecl(_111221_expr.get()._field_ns,_110217_decl)));
			}
		}
		else {
			_case_begin_1a830569c:;
			{
				_1a58d2b7d_push_err(_self_.ptr(), _110069_i.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a830559d:;
	}
	if ((!(_1a58e0570_push_generics_from_index_data(_self_, _110217_decl,_110069_i)))) {
		return nullptr;
	}
	return _1a58e6cb3_eval_type(_self_.ptr(), _110117_tdecl);
}



inline jule::Ptr<_1a58cee44_Data> _1a58e0dcd_eval_indexing(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa093b0e_IndexingExpr> _113137_i) {
	jule::Ptr<_1a5913e9a_TypeKind> _113217_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_113217_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _113617_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_113137_i.get()._field_expr));
	if ((_113617_d == nullptr)) {
		return nullptr;
	}
	if (_113617_d.get()._field_decl) {
		return _1a58e0a37_eval_ident_decl_from_indexing(_self_, _113617_d,_113137_i);
	}
	_1a58cee44_Data _114617_old_d = (*(_113617_d));
	jule::Ptr<_1a58cee44_Data> _114817_index = _1a5902494_eval_expr_kind(_self_, jule::Any(_113137_i.get()._field_index));
	if ((_114817_index == nullptr)) {
		return nullptr;
	}
	_113617_d.get()._field_decl=false;
	_1a58e0097_to_indexing(_self_.ptr(), _113617_d,_114817_index,_113137_i);
	if (_1a58d0b48_is_const(_113617_d.ptr())) {
		_113617_d.get()._field_decl=false;
		_113617_d.get()._field_model=jule::Any(_113617_d.get()._field_constant);
	} else if (_113617_d.get()._field_decl) {
		_113617_d.get()._field_decl=false;
	} else {
		_113617_d.get()._field_model=jule::Any(jule::new_ptr<_1ab81ae9a_IndexingExprModel>(_1ab81ae9a_IndexingExprModel(_113137_i.get()._field_token,jule::new_ptr<_1a58cee44_Data>(_114617_old_d),_114817_index)));
	}
	return _113617_d;
}



inline std::tuple<jule::Ptr<_1a58cee44_Data>,jule::Ptr<_1a58cee44_Data>> _1a58e1285_eval_slicing_exprs(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09402c_SlicingExpr>& _117943_s) {
	jule::Ptr<_1a5913e9a_TypeKind> _118017_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_118017_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _118417_l = nullptr;
	jule::Ptr<_1a58cee44_Data> _118517_r = nullptr;
	if ((_117943_s.get()._field_start != nullptr)) {
		_118417_l=_1a5902494_eval_expr_kind(_self_, jule::Any(_117943_s.get()._field_start));
		if ((_118417_l != nullptr)) {
			_1a58dd1a5_check_integer_indexing_by_data(_self_.ptr(), _118417_l,_117943_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_118417_l=jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),static__1ac4d13e0_new_i64(0LL)));
		_118417_l.get()._field_model=jule::Any(_118417_l.get()._field_constant);
	}
	if ((_117943_s.get()._field_to != nullptr)) {
		_118517_r=_1a5902494_eval_expr_kind(_self_, jule::Any(_117943_s.get()._field_to));
		if ((_118517_r != nullptr)) {
			_1a58dd1a5_check_integer_indexing_by_data(_self_.ptr(), _118517_r,_117943_s.get()._field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_118417_l,_118517_r);
}



inline void _1a58e15a4_slicing_arr(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _121431_d) {
	jule::Ptr<_1a5913e9a_TypeKind> _121517_elem_type = _1a5917399_arr(_121431_d.get()._field_kind.ptr()).get()._field_elem;
	_121431_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_121517_elem_type)), 7)));
	_121431_d.get()._field_lvalue=false;
	_121431_d.get()._field_mutable=_121431_d.get()._field_mutable || (!(_1a5915809_mutable(_121517_elem_type.ptr())));
}



inline void _1a58e1a7c_slicing_str(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _122931_d,jule::Ptr<_1a58cee44_Data>& _122942_l,jule::Ptr<_1a58cee44_Data>& _122953_r) {
	_122931_d.get()._field_lvalue=false;
	_122931_d.get()._field_mutable=true;
	if ((!(_1a58d0b48_is_const(_122931_d.ptr())))) {
		return;
	}
	if ((_122942_l == nullptr) || (_122953_r == nullptr)) {
		_122931_d.get()._field_constant=nullptr;
		return;
	}
	if (_1a58d0b48_is_const(_122942_l.ptr()) && _1a58d0b48_is_const(_122953_r.ptr())) {
		jule::I64 _124217_left = _1ac4d369a_as_i64(_122942_l.get()._field_constant.ptr());
		if ((_124217_left < 0LL)) {
			return;
		}
		jule::Str _124717_s = _1ac4d30e5_read_str(_122931_d.get()._field_constant.ptr());
		jule::I64 _124821_right = 0LL;
		if ((_122953_r == nullptr)) {
			_124821_right=static_cast<jule::I64>(static_cast<jule::I64>(_124717_s.len()));
		} else {
			_124821_right=static_cast<jule::I64>(_1ac4d369a_as_i64(_122953_r.get()._field_constant.ptr()));
		}
		if (_124217_left > _124821_right) {
			return;
		}
		_1ac4d49cb_set_str(_122931_d.get()._field_constant.ptr(), _124717_s.slice(_124217_left,_124821_right));
		_122931_d.get()._field_decl=true;
	} else {
		_122931_d.get()._field_constant=nullptr;
	}
}



inline void _1a58e2132_check_slicing(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data>& _126537_d,jule::Ptr<_1a58cee44_Data>& _126548_l,jule::Ptr<_1a58cee44_Data>& _126559_r,jule::Ptr<_1aa09402c_SlicingExpr>& _126570_s) {
	{
		
		if ((_1a5917399_arr(_126537_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a83221be:;
			{
				_1a58e15a4_slicing_arr(&(*_self_), _126537_d);
				return;
			}
		}
		else if ((_1a5917674_slc(_126537_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8322246:;
			{
				return;
			}
		}
		else if ((_1a591673e_prim(_126537_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a83222bd:;
			{
				jule::Ptr<_1a591970e_Prim> _127317_prim = _1a591673e_prim(_126537_d.get()._field_kind.ptr());
				{
					
					if (_1a591d13b_is_str(_127317_prim.ptr())) {
						_case_begin_1a8324b0b:;
						{
							_1a58e1a7c_slicing_str(&(*_self_), _126537_d,_126548_l,_126559_r);
							return;
						}
					}
					_match_end_1a8324a51:;
				}
			}
		}
		_match_end_1a832209d:;
	}
	_1a58d2b7d_push_err(&(*_self_), _126570_s.get()._field_token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_126537_d.get()._field_kind.ptr()))}));
}



inline jule::Ptr<_1a58cee44_Data> _1a58e24d9_eval_slicing(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09402c_SlicingExpr> _128436_s) {
	jule::Ptr<_1a58cee44_Data> _128517_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_128436_s.get()._field_expr));
	if ((_128517_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _129018_l;
	jule::Ptr<_1a58cee44_Data> _129025_r;
	std::tie(_129018_l,_129025_r) = _1a58e1285_eval_slicing_exprs(_self_, _128436_s);
	if ((_129018_l == nullptr)) {
		return _128517_d;
	}
	_128517_d.get()._field_decl=false;
	_1a58e2132_check_slicing(_self_.ptr(), _128517_d,_129018_l,_129025_r,_128436_s);
	_128517_d.get()._field_cast_kind=nullptr;
	if (_1a58d0b48_is_const(_128517_d.ptr())) {
		_128517_d.get()._field_decl=false;
		_128517_d.get()._field_model=jule::Any(_128517_d.get()._field_constant);
	} else if (_128517_d.get()._field_decl) {
		_128517_d.get()._field_decl=false;
	} else {
		jule::Ptr<_1ab81cce3_SlicingExprModel> _130921_model = jule::new_ptr<_1ab81cce3_SlicingExprModel>(_1ab81cce3_SlicingExprModel(_128436_s.get()._field_token,_128517_d.get()._field_model,_129018_l.get()._field_model,jule::Any()));
		if ((_129025_r != nullptr)) {
			_130921_model.get()._field_right=_129025_r.get()._field_model;
		}
		_128517_d.get()._field_model=jule::Any(_130921_model);
	}
	return _128517_d;
}



inline void _1a58e29b2_cast_ptr(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _132231_t,jule::Ptr<_1a58cee44_Data> _132249_d,_1aa07563a_Token _132259_error_token) {
	jule::Ptr<_1a591d768_Sptr> _132313_sptr = _1a5916a19_sptr(_132249_d.get()._field_kind.ptr());
	if ((_132313_sptr != nullptr)) {
		if ((!(_1a591496d_equals(_1a5916ce4_ptr(_132231_t.ptr()).get()._field_elem, _132313_sptr.get()._field_elem)))) {
			_1a58d2b7d_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_132231_t.ptr()))}));
		}
		return;
	}
	if ((!(_1a58d37d8_is_unsafe(&(*_self_))))) {
		_1a58d2b7d_push_err(&(*_self_), _132259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;
	}
	jule::Ptr<_1a591970e_Prim> _133613_prim = _1a591673e_prim(_132249_d.get()._field_kind.ptr());
	if ((_1a5916ce4_ptr(_132249_d.get()._field_kind.ptr()) == nullptr) && ((_133613_prim == nullptr) || (!(_1ac55e1c6_is_int(_1a5919cd6_to_str(_133613_prim.ptr())))))) {
		_1a58d2b7d_push_err(&(*_self_), _132259_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_132249_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_132231_t.ptr()))}));
	}
	_132249_d.get()._field_constant=nullptr;
}



inline void _1a58e2e8a_cast_struct(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _134434_t,jule::Ptr<_1a58cee44_Data> _134452_d,_1aa07563a_Token _134462_error_token) {
	jule::Ptr<_1ac44770d_Trait> _134517_tr = _1a5918004_trt(_134452_d.get()._field_kind.ptr());
	if ((_134517_tr == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_134434_t.ptr()))}));
		return;
	}
	jule::Ptr<_1ab814515_StructIns> _135117_s = _1a5917c29_strct(_134434_t.ptr());
	_1a58d7435_push_reference_to_struct(&(*_self_), _135117_s);
	if ((!(_1ab812733_is_implements(_135117_s.get()._field_decl.ptr(), _134517_tr)))) {
		_1a58d2b7d_push_err(&(*_self_), _134462_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_134452_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_134434_t.ptr()))}));
	}
}



inline void _1a58e3463_cast_ref(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _135931_t,jule::Ptr<_1a58cee44_Data> _135949_d,_1aa07563a_Token _135959_error_token) {
	jule::Ptr<_1a591d768_Sptr> _136017_sptr = _1a5916a19_sptr(_135931_t.ptr());
	jule::Ptr<_1a59230db_Ptr> _136217_ptr = _1a5916ce4_ptr(_135949_d.get()._field_kind.ptr());
	if ((_136217_ptr != nullptr) && _1a591496d_equals(_136017_sptr.get()._field_elem, _136217_ptr.get()._field_elem)) {
		if ((!(_1a58d37d8_is_unsafe(&(*_self_))))) {
			_1a58d2b7d_push_err(&(*_self_), _135959_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		}
		return;
	}
	if ((_1a5917c29_strct(_136017_sptr.get()._field_elem.ptr()) != nullptr)) {
		_1a58e2e8a_cast_struct(&(*_self_), _136017_sptr.get()._field_elem,_135949_d,_135959_error_token);
		return;
	}
	_1a58d2b7d_push_err(&(*_self_), _135959_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_135949_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_135931_t.ptr()))}));
}



inline void _1a58e393b_cast_slc(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _138131_t,jule::Ptr<_1a58cee44_Data> _138149_d,_1aa07563a_Token _138159_error_token) {
	if ((_1a59170be_enm(_138149_d.get()._field_kind.ptr()) != nullptr)) {
		if ((_1a591673e_prim(_1a59170be_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1a591d13b_is_str(_1a591673e_prim(_1a59170be_enm(_138149_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).ptr())))) {
			_1a58d2b7d_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_138131_t.ptr()))}));
			return;
		}
	} else if ((_1a591673e_prim(_138149_d.get()._field_kind.ptr()) == nullptr) || (!(_1a591d13b_is_str(_1a591673e_prim(_138149_d.get()._field_kind.ptr()).ptr())))) {
		_1a58d2b7d_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_138131_t.ptr()))}));
		return;
	}
	_138131_t=_1a5917674_slc(_138131_t.ptr()).get()._field_elem;
	jule::Ptr<_1a591970e_Prim> _139313_prim = _1a591673e_prim(_138131_t.ptr());
	if ((_139313_prim == nullptr) || ((!(_1a591b2c1_is_u8(_139313_prim.ptr()))) && (!(_1a591ac1b_is_i32(_139313_prim.ptr()))))) {
		_1a58d2b7d_push_err(&(*_self_), _138159_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_138149_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_138131_t.ptr()))}));
	}
}



inline void _1a58e3d37_cast_str(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _139931_d,_1aa07563a_Token _139941_error_token) {
	if ((_1a59170be_enm(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac44a337_Enum> _140121_e = _1a59170be_enm(_139931_d.get()._field_kind.ptr());
		if ((_1a591673e_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()) != nullptr) && _1a591d13b_is_str(_1a591673e_prim(_140121_e.get()._field_kind.get()._field_kind.ptr()).ptr())) {
			return;
		}
	}
	if ((_1a591673e_prim(_139931_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a591970e_Prim> _140817_prim = _1a591673e_prim(_139931_d.get()._field_kind.ptr());
		if ((!(_1a591b2c1_is_u8(_140817_prim.ptr()))) && (!(_1a591ac1b_is_i32(_140817_prim.ptr())))) {
			_1a58d2b7d_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a59145b6_to_str(_139931_d.get()._field_kind.ptr()))}));
		}
		return;
	}
	if ((_1a5917674_slc(_139931_d.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a59145b6_to_str(_139931_d.get()._field_kind.ptr()))}));
		return;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _142017_t = _1a5917674_slc(_139931_d.get()._field_kind.ptr()).get()._field_elem;
	jule::Ptr<_1a591970e_Prim> _142113_prim = _1a591673e_prim(_142017_t.ptr());
	if ((_142113_prim == nullptr) || ((!(_1a591b2c1_is_u8(_142113_prim.ptr()))) && (!(_1a591ac1b_is_i32(_142113_prim.ptr()))))) {
		_1a58d2b7d_push_err(&(*_self_), _139941_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a59145b6_to_str(_139931_d.get()._field_kind.ptr()))}));
	}
}



inline void _1a58e4310_cast_int(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _142731_t,jule::Ptr<_1a58cee44_Data> _142749_d,_1aa07563a_Token _142759_error_token) {
	if (_1a58d0b48_is_const(_142749_d.ptr())) {
		jule::Ptr<_1a591970e_Prim> _142917_prim = _1a591673e_prim(_142731_t.ptr());
		{
			
			if (_1ac55da66_is_sig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1a8351dad:;
				{
					_1ac4d406e_set_i64(_142749_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_142749_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ac55ddb8_is_unsig_int(_142917_prim.get()._field_kind)) {
				_case_begin_1a8351e35:;
				{
					_1ac4d438d_set_u64(_142749_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_142749_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a8351d03:;
		}
	}
	if ((_1a59170be_enm(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac44a337_Enum> _144017_e = _1a59170be_enm(_142749_d.get()._field_kind.ptr());
		if (_1ac55e836_is_num(_1a59145b6_to_str(_144017_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	if ((_1a5916a19_sptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a591970e_Prim> _144717_prim = _1a591673e_prim(_142731_t.ptr());
		if ((!(_1a591ca86_is_uintptr(_144717_prim.ptr())))) {
			_1a58d2b7d_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_142731_t.ptr()))}));
		}
		return;
	}
	if ((_1a5916ce4_ptr(_142749_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1a591970e_Prim> _145417_prim = _1a591673e_prim(_142731_t.ptr());
		if (_1a591ca86_is_uintptr(_145417_prim.ptr())) {
		} else if ((!(_1a58d37d8_is_unsafe(&(*_self_))))) {
			_1a58d2b7d_push_err(&(*_self_), _142759_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		} else if (((((!(_1a591ac1b_is_i32(_145417_prim.ptr()))) && (!(_1a591aee6_is_i64(_145417_prim.ptr())))) && (!(_1a591b59b_is_u16(_145417_prim.ptr())))) && (!(_1a591b876_is_u32(_145417_prim.ptr())))) && (!(_1a591bb51_is_u64(_145417_prim.ptr())))) {
			_1a58d2b7d_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_142731_t.ptr()))}));
		}
		return;
	}
	jule::Ptr<_1a591970e_Prim> _146513_prim = _1a591673e_prim(_142749_d.get()._field_kind.ptr());
	if ((_146513_prim != nullptr) && _1ac55e836_is_num(_1a5919cd6_to_str(_146513_prim.ptr()))) {
		return;
	}
	_1a58d2b7d_push_err(&(*_self_), _142759_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_142749_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_142731_t.ptr()))}));
}



inline void _1a58e47d8_cast_num(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _147331_t,jule::Ptr<_1a58cee44_Data> _147349_d,_1aa07563a_Token _147359_error_token) {
	if (_1a58d0b48_is_const(_147349_d.ptr())) {
		jule::Ptr<_1a591970e_Prim> _147517_prim = _1a591673e_prim(_147331_t.ptr());
		{
			
			if (_1ac55e528_is_float(_147517_prim.get()._field_kind)) {
				_case_begin_1a8361461:;
				{
					_1ac4d4cea_set_f64(_147349_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ac4d3c50_as_f64(_147349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ac55da66_is_sig_int(_147517_prim.get()._field_kind)) {
				_case_begin_1a83614d8:;
				{
					_1ac4d406e_set_i64(_147349_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_147349_d.get()._field_constant.ptr())));
				}
			}
			else if (_1ac55ddb8_is_unsig_int(_147517_prim.get()._field_kind)) {
				_case_begin_1a8361560:;
				{
					_1ac4d438d_set_u64(_147349_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_147349_d.get()._field_constant.ptr())));
				}
			}
			_match_end_1a8361395:;
		}
	}
	if ((_1a59170be_enm(_147349_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ac44a337_Enum> _148717_e = _1a59170be_enm(_147349_d.get()._field_kind.ptr());
		if (_1ac55e836_is_num(_1a59145b6_to_str(_148717_e.get()._field_kind.get()._field_kind.ptr()))) {
			return;
		}
	}
	jule::Ptr<_1a591970e_Prim> _149313_prim = _1a591673e_prim(_147349_d.get()._field_kind.ptr());
	if ((_149313_prim != nullptr) && _1ac55e836_is_num(_1a5919cd6_to_str(_149313_prim.ptr()))) {
		return;
	}
	_1a58d2b7d_push_err(&(*_self_), _147359_error_token,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_147349_d.get()._field_kind.ptr())),jule::Any(_1a59145b6_to_str(_147331_t.ptr()))}));
}



inline void _1a58e4cb1_cast_prim(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _150132_t,jule::Ptr<_1a58cee44_Data> _150150_d,_1aa07563a_Token _150160_error_token) {
	jule::Ptr<_1a591970e_Prim> _150213_prim = _1a591673e_prim(_150132_t.ptr());
	{
		
		if (_1a591d416_is_any(_150213_prim.ptr())) {
			_case_begin_1a836de85:;
		}
		else if (_1a591d13b_is_str(_150213_prim.ptr())) {
			_case_begin_1a836deeb:;
			{
				_1a58e3d37_cast_str(&(*_self_), _150150_d,_150160_error_token);
			}
		}
		else if (_1ac55e1c6_is_int(_1a5919cd6_to_str(_150213_prim.ptr()))) {
			_case_begin_1a836e062:;
			{
				_1a58e4310_cast_int(&(*_self_), _150132_t,_150150_d,_150160_error_token);
			}
		}
		else if (_1ac55e836_is_num(_1a5919cd6_to_str(_150213_prim.ptr()))) {
			_case_begin_1a836e0c8:;
			{
				_1a58e47d8_cast_num(&(*_self_), _150132_t,_150150_d,_150160_error_token);
			}
		}
		else {
			_case_begin_1a8368e6e:;
			{
				_1a58d2b7d_push_err(&(*_self_), _150160_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_150132_t.ptr()))}));
			}
		}
		_match_end_1a8368e08:;
	}
}



inline void _1a58e51ac_cast_constant(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _151737_t,jule::Ptr<_1a58cee44_Data>& _151756_d) {
	if ((_151756_d == nullptr) || (!(_1a58d0b48_is_const(_151756_d.ptr())))) {
		return;
	}
	jule::Ptr<_1a591970e_Prim> _152113_prim = _1a591673e_prim(_151737_t.ptr());
	_1a59106a0_cast_const_by_type(_152113_prim.get()._field_kind,_151756_d);
	_151756_d.get()._field_model=jule::Any(_151756_d.get()._field_constant);
}



inline jule::Ptr<_1a58cee44_Data> _1a58e5762_eval_cast_by_type_n_data(_1a58d2397_Eval* _self_,jule::Ptr<_1a5913e9a_TypeKind> _152647_t,jule::Ptr<_1a58cee44_Data> _152665_d,_1aa07563a_Token _152679_error_token) {
	if ((_152665_d != nullptr) && _152665_d.get()._field_decl) {
		_1a58d2b7d_push_err(&(*_self_), _152679_error_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	{
		
		if ((_1a591673e_prim(_152665_d.get()._field_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim(_152665_d.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a837680b:;
			{
				if ((_1a59170be_enm(_152647_t.ptr()) != nullptr)) {
					_1a58d2b7d_push_err(&(*_self_), _152679_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1a58d3079_push_suggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				}
			}
		}
		else if ((_1a5916ce4_ptr(_152647_t.ptr()) != nullptr)) {
			_case_begin_1a8376872:;
			{
				_1a58e29b2_cast_ptr(&(*_self_), _152647_t,_152665_d,_152679_error_token);
			}
		}
		else if ((_1a5916a19_sptr(_152647_t.ptr()) != nullptr)) {
			_case_begin_1a83768d8:;
			{
				_1a58e3463_cast_ref(&(*_self_), _152647_t,_152665_d,_152679_error_token);
			}
		}
		else if ((_1a5917674_slc(_152647_t.ptr()) != nullptr)) {
			_case_begin_1a837694e:;
			{
				_1a58e393b_cast_slc(&(*_self_), _152647_t,_152665_d,_152679_error_token);
			}
		}
		else if ((_1a5917c29_strct(_152647_t.ptr()) != nullptr)) {
			_case_begin_1a837793e:;
			{
				_1a58e2e8a_cast_struct(&(*_self_), _152647_t,_152665_d,_152679_error_token);
			}
		}
		else if ((_1a591673e_prim(_152647_t.ptr()) != nullptr)) {
			_case_begin_1a83779a5:;
			{
				_1a58e4cb1_cast_prim(&(*_self_), _152647_t,_152665_d,_152679_error_token);
				_1a58e51ac_cast_constant(&(*_self_), _152647_t,_152665_d);
			}
		}
		else {
			_case_begin_1a8376795:;
			{
				_1a58d2b7d_push_err(&(*_self_), _152679_error_token,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_152647_t.ptr()))}));
				_152665_d=nullptr;
			}
		}
		_match_end_1a8376740:;
	}
	if ((_152665_d == nullptr)) {
		return nullptr;
	}
	_152665_d.get()._field_mutable=_152665_d.get()._field_mutable || ((!(_1a5915809_mutable(_152665_d.get()._field_kind.ptr()))) && _1a5915809_mutable(_152647_t.ptr()));
	_152665_d.get()._field_lvalue=false;
	_152665_d.get()._field_decl=false;
	if ((_1a59170be_enm(_152665_d.get()._field_kind.ptr()) == nullptr) || (!(_1a591496d_equals(_1a59170be_enm(_152665_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind, _152647_t)))) {
		_152665_d.get()._field_cast_kind=_152647_t;
		_1a590e946_apply_cast_kind(_152665_d);
		_152665_d.get()._field_model.operator jule::Ptr<_1ab81941b_CastingExprModel>().get()._field_token=_152679_error_token;
	} else {
		_152665_d.get()._field_kind=_152647_t;
	}
	return _152665_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e5b08_eval_cast(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa090a51_CastExpr> _157633_c) {
	jule::Ptr<_1a5918a0a_TypeSymbol> _157717_t = _1ab83bc35_build_type(_157633_c.get()._field_kind);
	jule::Bool _157813_ok = _1a586bee1_check_type(_self_.get()._field_s, _157717_t,_self_.get()._field_lookup);
	if ((!(_157813_ok))) {
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _158317_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_158317_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _158717_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_157633_c.get()._field_expr));
	if ((_158717_d == nullptr)) {
		return nullptr;
	}
	return _1a58e5762_eval_cast_by_type_n_data(_self_.ptr(), _157717_t.get()._field_kind,_158717_d,_157633_c.get()._field_kind.get()._field_token);
}



inline jule::Ptr<_1a58cee44_Data> _1a58e5eb0_eval_ns_selection(_1a58d2397_Eval* _self_,jule::Ptr<_1aa090e6e_NsSelectionExpr> _159536_s) {
	jule::Str _159613_path = _1a59250ee_build_link_path_by_tokens(_159536_s.get()._field_ns);
	jule::Ptr<_1ac580d41_ImportInfo> _159717_imp = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a5931292_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>([=](jule::Ptr<_1ac580d41_ImportInfo> _159753_imp) mutable -> jule::Bool {
		if ((_159536_s.get()._field_ns.len() == 1LL) && (_159753_imp.get()._field_alias == _159613_path)) {
			return true;
		}
		return (_159753_imp.get()._field_link_path == _159613_path) && _1ac5841c9_is_accessible_via_selection(_159753_imp.ptr());
	}));
	if ((_159717_imp == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _159536_s.get()._field_ident,jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_159613_path)}));
		return nullptr;
	}
	jule::Trait<_1a5932ea8_Lookup> _160917_lookup = (*_self_)._field_lookup;
	(*_self_)._field_lookup=jule::Trait<_1a5932ea8_Lookup>(_159717_imp, 1);
	
	_1a58d350d_disallow_builtin(&(*_self_));
	jule::Any _161417_def = _1a58d6665_get_def(&(*_self_), _159536_s.get()._field_ident._field_kind,false);
	_1a58d32bb_allow_builtin(&(*_self_));
	(*_self_)._field_lookup=_160917_lookup;
	jule::Ptr<_1a58cee44_Data> _161817_d = _1a58db0a4_eval_def(&(*_self_), _161417_def,_159536_s.get()._field_ident);
	return _161817_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e6565_eval_struct_lit_explicit(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1ab814515_StructIns> _162348_s,jule::Slice<jule::Ptr<_1aa08d334_Expr>> _162413_exprs,_1aa07563a_Token _162433_error_token) {
	jule::Bool _162513_ok = _1a586950a_check_generic_quantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_162348_s.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_162348_s.get()._field_generics.len()),_162433_error_token);
	if ((!(_162513_ok))) {
		return nullptr;
	}
	if ((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_decl.get()._field_owner == _162348_s.get()._field_decl)) {
		_1a58d2b7d_push_err(_self_.ptr(), _162433_error_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any(_162348_s.get()._field_decl.get()._field_ident)}));
	}
	_1a58d7435_push_reference_to_struct(_self_.ptr(), _162348_s);
	_1a58d8d4e_check_deprecated(_self_.ptr(), _162348_s.get()._field_decl.get()._field_directives,_162433_error_token);
	_1a58c151d_StructLitChecker _163817_slc = _1a58c151d_StructLitChecker(_self_,_162433_error_token,_162348_s,jule::Slice<jule::Ptr<_1ab817da9_StructArgExprModel>>());
	_1a58c32cd_check(&_163817_slc, _162413_exprs);
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_162348_s, 0))),jule::Ptr<_1a5913e9a_TypeKind>(),(!(_self_.get()._field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab818508_StructLitExprModel>(_1ab818508_StructLitExprModel(_162348_s,_163817_slc._field_args)))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a58e690b_eval_struct_lit(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa092514_StructLit> _165739_lit) {
	jule::Ptr<_1a5918a0a_TypeSymbol> _165817_t = _1ab83bc35_build_type(_165739_lit.get()._field_kind);
	jule::Bool _165913_ok = _1a586bee1_check_type(_self_.get()._field_s, _165817_t,_self_.get()._field_lookup);
	if ((!(_165913_ok))) {
		return nullptr;
	}
	jule::Ptr<_1ab814515_StructIns> _166417_s = _1a5917c29_strct(_165817_t.get()._field_kind.ptr());
	if ((_166417_s == nullptr)) {
		if ((_1a5916a19_sptr(_165817_t.get()._field_kind.ptr()) != nullptr)) {
			_166417_s=_1a5917c29_strct(_1a5916a19_sptr(_165817_t.get()._field_kind.ptr()).get()._field_elem.ptr());
			if ((_166417_s != nullptr)) {
				goto _julec_label_eval;
			}
		}
		_1a58d2b7d_push_err(_self_.ptr(), _165739_lit.get()._field_kind.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_1a58cee44_Data> _167717_d = _1a58e6565_eval_struct_lit_explicit(_self_, _166417_s,_165739_lit.get()._field_exprs,_165739_lit.get()._field_kind.get()._field_token);
	if ((_1a5916a19_sptr(_165817_t.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab818508_StructLitExprModel> _167921_model = _167717_d.get()._field_model.operator jule::Ptr<_1ab818508_StructLitExprModel>();
		_1a590d181_make_struct_lit_alloc(_167717_d,_167921_model);
	}
	return _167717_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e6cb3_eval_type(_1a58d2397_Eval* _self_,jule::Ptr<_1dd583461_TypeDecl> _168532_t) {
	jule::Ptr<_1a5918a0a_TypeSymbol> _168617_tk = _1ab83bc35_build_type(_168532_t);
	jule::Bool _168713_ok = _1a586bee1_check_type((*_self_)._field_s, _168617_tk,(*_self_)._field_lookup);
	if ((!(_168713_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(_168617_tk.get()._field_kind,jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_168617_tk.get()._field_kind)),true,jule::Ptr<_1ac4d0ec2_Const>()));
}



inline void _1a58e71ae_call_type_fn(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa091bc8_FnCallExpr>& _169837_fc,jule::Ptr<_1a58cee44_Data>& _169859_d) {
	if ((_169837_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_self_.ptr(), _169837_fc.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_169859_d.get()._field_kind.ptr()))}));
	} else if ((_169837_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_self_.ptr(), _169837_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((_169837_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_self_.ptr(), _169837_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	if ((_169837_fc.get()._field_args.len() > 0LL)) {
		jule::Ptr<_1a5913e9a_TypeKind> _170821_prefix = _self_.get()._field_prefix;
		_self_.get()._field_prefix=nullptr;
		jule::Ptr<_1a58cee44_Data> _171021_arg = _1a5902494_eval_expr_kind(_self_, _169837_fc.get()._field_args[0LL].get()._field_kind);
		_self_.get()._field_prefix=_170821_prefix;
		if ((_171021_arg != nullptr)) {
			_169859_d=_1a58e5762_eval_cast_by_type_n_data(_self_.ptr(), _169859_d.get()._field_kind,_171021_arg,_169837_fc.get()._field_args[0LL].get()._field_token);
		}
	}
	if ((_169859_d != nullptr)) {
		_169859_d.get()._field_decl=false;
	}
}



inline std::tuple<jule::Bool,jule::Bool> _1a58e7643_check_fn_call_generics(_1a58d2397_Eval* _self_,jule::Ptr<_1ab836218_FnIns> _172245_f,jule::Ptr<_1aa091bc8_FnCallExpr> _172313_fc) {
	jule::Bool _172332_ok = jule::Bool();
	jule::Bool _172342_dynamic_annotation = jule::Bool();
	{
		
		if (((_172245_f.get()._field_decl.get()._field_generics.len() > 0LL) && (_172313_fc.get()._field_generics.len() == 0LL)) && (_172245_f.get()._field_params.len() > 0LL)) {
			_case_begin_1a83aad29:;
			{
				_172342_dynamic_annotation=true;
				_172245_f.get()._field_generics=jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>::alloc(static_cast<jule::I64>(_172245_f.get()._field_decl.get()._field_generics.len()));
				_172332_ok = true;
				_172342_dynamic_annotation = true;
				return std::make_tuple(_172332_ok,_172342_dynamic_annotation);
			}
		}
		else if ((!(_1a586950a_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_172245_f.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_172313_fc.get()._field_generics.len()),_172313_fc.get()._field_token)))) {
			_case_begin_1a83aad90:;
			{
				_172332_ok = false;
				_172342_dynamic_annotation = false;
				return std::make_tuple(_172332_ok,_172342_dynamic_annotation);
			}
		}
		else {
			_case_begin_1a83a7650:;
			{
				_172245_f.get()._field_generics=jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_172245_f.get()._field_decl.get()._field_generics.len()));
				{
					auto &expr = _172313_fc.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a83a7b6c:;
					if (it != expr.end()) {
						jule::Ptr<_1dd583461_TypeDecl> _1a83a87c7_g = *it;
						{
							jule::Ptr<_1a5918a0a_TypeSymbol> _173625_k = _1ab83bc35_build_type(_1a83a87c7_g);
							_172332_ok=_1a586bee1_check_type((*_self_)._field_s, _173625_k,(*_self_)._field_lookup);
							if ((!(_172332_ok))) {
								_172332_ok = false;
								_172342_dynamic_annotation = false;
								return std::make_tuple(_172332_ok,_172342_dynamic_annotation);
							}
							_172245_f.get()._field_generics = jule::alloc_for_append(_172245_f.get()._field_generics,1);_172245_f.get()._field_generics.__push(_173625_k.get()._field_kind);
						}
						_iter_next_1a83a7b6c:;
						++it;
						goto _iter_begin_1a83a7b6c;
					}
					_iter_end_1a83a7b6c:;
				}
				_172332_ok = true;
				_172342_dynamic_annotation = false;
				return std::make_tuple(_172332_ok,_172342_dynamic_annotation);
			}
		}
		_match_end_1a83a7584:;
	}
}



inline void _1a58e7a3e_call_builtin_fn(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa091bc8_FnCallExpr>& _174840_fc,jule::Ptr<_1a58cee44_Data>& _174862_d) {
	_174862_d=_1a591794e_fnc(_174862_d.get()._field_kind.ptr()).get()._field_caller(_self_,_174840_fc,_174862_d);
	if ((_174862_d == nullptr)) {
		return;
	}
	_174862_d.get()._field_mutable=true;
}



inline void _1a58e7e7e_check_fn_of_concurrent_call(_1a58d2397_Eval* _self_,jule::Ptr<_1ab836218_FnIns>& _175647_f,_1aa07563a_Token _175658_error_token) {
	if (_1a58d37d8_is_unsafe(&(*_self_))) {
		return;
	}
	{
		auto &expr = _175647_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a83b1e62:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> &_1a83b203e_p = *it;
			{
				if (_1a83b203e_p.get()._field_decl.get()._field_reference) {
					_1a58d2b7d_push_err(&(*_self_), _175658_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>());
					return;
				}
			}
			_iter_next_1a83b1e62:;
			++it;
			goto _iter_begin_1a83b1e62;
		}
		_iter_end_1a83b1e62:;
	}
}



inline void _1a58e848a_process_exceptional_handler(_1a58d2397_Eval* _self_,jule::Ptr<_1ab836218_FnIns>& _176951_f,jule::Ptr<_1aa091bc8_FnCallExpr>& _176967_fc,jule::Ptr<_1a58cee44_Data>& _176989_d) {
	jule::Bool _177013_result_needed = (!(_1ab8329d9_is_void(_176951_f.get()._field_decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored)));
	jule::Ptr<_1ac565bd3_ScopeChecker> _177117_csc = nullptr;
	jule::Ptr<_1ac56022c_Scope> _177217_ch = nullptr;
	jule::Ptr<_1ab81a0ed_FnCallExprModel> _177417_model = _176989_d.get()._field_model.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>();
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1a5864747_Sema>>()) {
			_case_begin_1a83b5c13:;
			{
				jule::Ptr<_1a5864747_Sema> _177821_s = (*_self_)._field_lookup.operator jule::Ptr<_1a5864747_Sema>();
				_177117_csc=_1ac514c09_new_scope_checker(_177821_s,nullptr);
				if (_177013_result_needed) {
					_177117_csc.get()._field_result=_176951_f.get()._field_result;
				}
				_177217_ch=jule::new_ptr<_1ac56022c_Scope>();
				_177117_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177117_csc.get()._field_table.get()._field_vars,1);_177117_csc.get()._field_table.get()._field_vars.__push(_1a590d56b_build_error_var(_177217_ch,_176967_fc));
				_1ac577bd4_check(_177117_csc, _176967_fc.get()._field_exception,_177217_ch);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a83b5c79:;
			{
				jule::Ptr<_1ac565bd3_ScopeChecker> _178721_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>();
				_177117_csc=_1ac577eae_new_child_checker(_178721_sc);
				if (_177013_result_needed) {
					_177117_csc.get()._field_result=_176951_f.get()._field_result;
				}
				_177217_ch=_1ac569da2_get_child(_178721_sc.ptr());
				_177117_csc.get()._field_table.get()._field_vars = jule::alloc_for_append(_177117_csc.get()._field_table.get()._field_vars,1);_177117_csc.get()._field_table.get()._field_vars.__push(_1a590d56b_build_error_var(_177217_ch,_176967_fc));
				_1ac56a37a_check_child_ssc(_178721_sc, _176967_fc.get()._field_exception,_177217_ch,_177117_csc);
			}
		}
		_match_end_1a83b5bad:;
	}
	_177417_model.get()._field_assigned=_177013_result_needed;
	_177417_model.get()._field_except=_177217_ch;
	if (_177013_result_needed && (_177117_csc.get()._field_result != nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _176967_fc.get()._field_token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	}
}



inline void _1a58e8875_call_fn(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa091bc8_FnCallExpr>& _180532_fc,jule::Ptr<_1a58cee44_Data>& _180554_d) {
	jule::Ptr<_1ab836218_FnIns> _180617_f = _1a591794e_fnc(_180554_d.get()._field_kind.ptr());
	if (_1ab837093_is_builtin(_180617_f.ptr())) {
		_1a58e7a3e_call_builtin_fn(_self_, _180532_fc,_180554_d);
		return;
	}
	if ((!(_1ab832cb4_is_method(_180617_f.get()._field_decl.ptr()))) && _1a5912130_has_directive(_180617_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		_1a58d2b7d_push_err(_self_.ptr(), _180532_fc.get()._field_token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_180554_d=nullptr;
		return;
	}
	if ((((!(_180554_d.get()._field_mutable)) && _1ab832cb4_is_method(_180617_f.get()._field_decl.ptr())) && (!(_180617_f.get()._field_decl.get()._field_statically))) && _180617_f.get()._field_decl.get()._field_params[0LL].get()._field_mutable) {
		_1a58d2b7d_push_err(_self_.ptr(), _180532_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if ((!(_1a58d37d8_is_unsafe(_self_.ptr()))) && _180617_f.get()._field_decl.get()._field_unsafety) {
		_1a58d2b7d_push_err(_self_.ptr(), _180532_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	jule::Bool _182418_ok;
	jule::Bool _182422_dynamic_annotation;
	std::tie(_182418_ok,_182422_dynamic_annotation) = _1a58e7643_check_fn_call_generics(_self_.ptr(), _180617_f,_180532_fc);
	if ((!(_182418_ok))) {
		_180554_d=nullptr;
		return;
	}
	jule::Ptr<_1a5864747_Sema> _183017_old = _self_.get()._field_s;
	if ((_180617_f.get()._field_decl.get()._field_owner != nullptr)) {
		_self_.get()._field_s=_180617_f.get()._field_decl.get()._field_owner.get()._field_sema;
	}
	__JULE_DEFER({
		if (_183017_old != _self_.get()._field_s) {
			_183017_old.get()._field_errors=jule::append(_183017_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		}
		_self_.get()._field_s=_183017_old;
	});
	if ((!(_182422_dynamic_annotation))) {
		if ((!(_180617_f.get()._field_reloaded))) {
			_182418_ok=_1a5870852_reload_fn_ins_types(_self_.get()._field_s, _180617_f);
			if ((!(_182418_ok))) {
				_180554_d=nullptr;
				return;
			}
			_180617_f.get()._field_reloaded=true;
		}
	} else {
		_1a58700c1_build_fn_non_generic_type_kinds(_self_.get()._field_s, _180617_f);
	}
	_1a58bd0b9_FnCallArgChecker _185617_fcac = _1a58bd0b9_FnCallArgChecker(_self_,_180532_fc.get()._field_args,_180532_fc.get()._field_token,_180617_f,_182422_dynamic_annotation,jule::Slice<jule::Any>());
	if ((_180617_f.get()._field_decl.get()._field_owner != nullptr)) {
		std::tie(_183017_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183017_old);
		_182418_ok=_1a58c0dbe_check(&_185617_fcac);
		std::tie(_183017_old,_self_.get()._field_s) = std::make_tuple(_self_.get()._field_s,_183017_old);
	} else {
		_182418_ok=_1a58c0dbe_check(&_185617_fcac);
	}
	if ((!(_182418_ok)) && _182422_dynamic_annotation) {
		_180554_d=nullptr;
		return;
	}
	jule::Bool _187614_is_unique_ins;
	jule::I64 _187629_pos;
	std::tie(_187614_is_unique_ins,_187629_pos) = _1ab834964_append_instance(_180617_f.get()._field_decl.ptr(), _180617_f);
	if ((!(_187614_is_unique_ins))) {
		_180617_f=_180617_f.get()._field_decl.get()._field_instances[_187629_pos];
	}
	jule::Any _188117_call_model = _180554_d.get()._field_model;
	if (_1ab8329d9_is_void(_180617_f.get()._field_decl.ptr())) {
		_180554_d=_1a590eb77_build_void_data();
	} else {
		if (_182422_dynamic_annotation) {
			_182418_ok=_1a5870852_reload_fn_ins_types(_self_.get()._field_s, _180617_f);
			if ((!(_182418_ok))) {
				_180554_d=nullptr;
				return;
			}
			_180617_f.get()._field_reloaded=true;
		}
		_180554_d.get()._field_kind=_180617_f.get()._field_result;
		_180554_d.get()._field_lvalue=false;
	}
	_180554_d.get()._field_mutable=true;
	_180554_d.get()._field_model=jule::Any(jule::new_ptr<_1ab81a0ed_FnCallExprModel>(_1ab81a0ed_FnCallExprModel(_180532_fc.get()._field_token,_180617_f,jule::Bool(),_188117_call_model,_185617_fcac._field_arg_models,jule::Ptr<_1ac56022c_Scope>(),jule::Bool())));
	if (_180617_f.get()._field_decl.get()._field_exceptional) {
		{
			
			if (_1dd5c57d3_unhandled(_180532_fc.ptr())) {
				_case_begin_1a83d103b:;
				{
					_1a58d2b7d_push_err(_self_.ptr(), _180532_fc.get()._field_token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1a58d3079_push_suggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1dd5976ea_ignored(_180532_fc.ptr())) {
				_case_begin_1a83d0e09:;
				{
					goto _match_end_1a83d036a;
				}
			}
			else {
				_case_begin_1a83d0436:;
				{
					_1a58e848a_process_exceptional_handler(_self_.ptr(), _180617_f,_180532_fc,_180554_d);
				}
			}
			_match_end_1a83d036a:;
		}
	} else if ((!(_1dd5c57d3_unhandled(_180532_fc.ptr())))) {
		_1a58d2b7d_push_err(_self_.ptr(), _180532_fc.get()._field_token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	}
	if ((_180617_f.get()._field_generics.len() > 0LL) && _187614_is_unique_ins) {
		_1a5880466_check_fn_ins_caller(_self_.get()._field_s, _180617_f,((jule::Ptr<_1aa07563a_Token>)((&(_180532_fc.get()._field_token)))));
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58e8c2c_eval_fn_call(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa091bc8_FnCallExpr> _192836_fc) {
	jule::Ptr<_1a5913e9a_TypeKind> _192917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_192917_prefix;
	});
	{
		auto &_match_expr{ _192836_fc.get()._field_expr.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
			_case_begin_1a83d5804:;
			{
				if ((_192836_fc.get()._field_expr.get()._field_token._field_kind == jule::Str("error", 5))) {
					return _1a5936165_builtin_caller_error(_self_,_192836_fc);
				}
			}
		}
		_match_end_1a83d579e:;
	}
	jule::Ptr<_1a58cee44_Data> _194217_d = _1a5902494_eval_expr_kind(_self_, _192836_fc.get()._field_expr.get()._field_kind);
	if ((_194217_d == nullptr)) {
		return nullptr;
	}
	if (_194217_d.get()._field_decl) {
		_1a58e71ae_call_type_fn(_self_, _192836_fc,_194217_d);
		return _194217_d;
	}
	if ((_1a591794e_fnc(_194217_d.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err(_self_.ptr(), _192836_fc.get()._field_token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;
	}
	_1a58e8875_call_fn(_self_, _192836_fc,_194217_d);
	return _194217_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e91b1_eval_enum_static(_1a58d2397_Eval* _self_,jule::Ptr<_1ac44a337_Enum> _196139_enm,_1aa07563a_Token _196151_ident) {
	jule::Ptr<_1a58cee44_Data> _196217_d = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_196139_enm, 3))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ac4d0ec2_Const>()));
	jule::Ptr<_1ac44948a_EnumItem> _197117_item = _1ac44b2a0_find_item(_196139_enm.ptr(), _196151_ident._field_kind);
	if ((_197117_item == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _196151_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_196139_enm.get()._field_ident),jule::Any(_196151_ident._field_kind)}));
	} else {
		_196217_d.get()._field_constant=jule::new_ptr<_1ac4d0ec2_Const>((*(_197117_item.get()._field_value.get()._field_data.get()._field_constant)));
		_196217_d.get()._field_model=jule::Any(_196217_d.get()._field_constant);
		_1a591035e_apply_cast_model_by_enum(_196217_d,_196139_enm);
	}
	return _196217_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e9645_eval_struct_static(_1a58d2397_Eval* _self_,jule::Ptr<_1ab814515_StructIns> _198341_s,_1aa07563a_Token _198356_ident) {
	jule::Ptr<_1a58cee44_Data> _198417_d = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ac4d0ec2_Const>()));
	
	jule::Ptr<_1ab832324_Fn> _199217_method = _1ab815934_find_method(_198341_s.ptr(), _198356_ident._field_kind,true);
	if ((_199217_method != nullptr)) {
		if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _199217_method.get()._field_public,_199217_method.get()._field_token)))) {
			_1a58d2b7d_push_err(&(*_self_), _198356_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_198356_ident._field_kind)}));
			_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1ab836218_FnIns> _199921_ins = _1ab8345ac_instance(_199217_method);
		_199921_ins.get()._field_owner=_198341_s;
		_1a58d6ca3_push_reference_to_fn(&(*_self_), _199921_ins);
		_198417_d.get()._field_model=jule::Any(jule::new_ptr<_1ab81ea09_StructStaticIdentExprModel>(_1ab81ea09_StructStaticIdentExprModel(_198341_s,_198417_d.get()._field_model,_199921_ins)));
		_198417_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_199921_ins, 1)));
		return _198417_d;
	}
	jule::Ptr<_1a588601b_Var> _201317_sttc = _1ab811ec4_find_static(_198341_s.get()._field_decl.ptr(), _198356_ident._field_kind);
	if ((_201317_sttc != nullptr)) {
		return _1a58da68b_eval_var(&(*_self_), _201317_sttc,_198356_ident);
	}
	_1a58d2b7d_push_err(&(*_self_), _198356_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_198341_s.get()._field_decl.get()._field_ident),jule::Any(_198356_ident._field_kind)}));
	return nullptr;
}



inline jule::Ptr<_1a58cee44_Data> _1a58e9ba6_eval_trait_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _202243_d,jule::Ptr<_1ac44770d_Trait> _202257_trt,_1aa07563a_Token _202274_ident) {
	jule::Ptr<_1ab832324_Fn> _202317_f = _1ac448973_find_method(_202257_trt.ptr(), _202274_ident._field_kind);
	if ((_202317_f == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _202274_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_202257_trt.get()._field_ident),jule::Any(_202274_ident._field_kind)}));
		return nullptr;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1ab8345ac_instance(_202317_f), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab81d640_TraitSubIdentExprModel>(_1ab81d640_TraitSubIdentExprModel(_202274_ident,_202243_d.get()._field_model,_202317_f,_202257_trt)))),false,jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a58ea2e4_eval_struct_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _204544_d,jule::Ptr<_1ab814515_StructIns> _204558_s,jule::Ptr<_1aa09138c_SubIdentExpr> _204577_si,jule::Bool _204596_ref) {
	jule::Ptr<_1ab8137bc_FieldIns> _204617_f = _1ab815cdb_find_field(_204558_s.ptr(), _204577_si.get()._field_ident._field_kind);
	if ((_204617_f != nullptr)) {
		if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _204617_f.get()._field_decl.get()._field_public,_204617_f.get()._field_decl.get()._field_token)))) {
			_1a58d2b7d_push_err(&(*_self_), _204577_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_204617_f.get()._field_decl.get()._field_ident)}));
			_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		}
		jule::Ptr<_1ab81e245_StructSubIdentExprModel> _205321_model = jule::new_ptr<_1ab81e245_StructSubIdentExprModel>(_1ab81e245_StructSubIdentExprModel(_204577_si.get()._field_ident,jule::new_ptr<_1a58cee44_Data>((*(_204544_d))),_204544_d.get()._field_kind,jule::Ptr<_1ab836218_FnIns>(),_204617_f));
		_204544_d.get()._field_model=jule::Any(_205321_model);
		_204544_d.get()._field_kind=_204617_f.get()._field_kind;
		_204544_d.get()._field_lvalue=true;
		if (_204617_f.get()._field_decl.get()._field_mutable && (!(_204544_d.get()._field_mutable))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
					_case_begin_1a8400489:;
					{
						jule::Ptr<_1ac565bd3_ScopeChecker> _206725_scope = _1ac568114_get_root((*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>());
						_204544_d.get()._field_mutable=(_206725_scope.get()._field_owner != nullptr) && (_206725_scope.get()._field_owner.get()._field_owner == _204558_s);
					}
				}
				_match_end_1a8400434:;
			}
		}
		return _204544_d;
	}
	
	jule::Ptr<_1ab832324_Fn> _207617_m = _1ab815934_find_method(_204558_s.ptr(), _204577_si.get()._field_ident._field_kind,false);
	if ((_207617_m == nullptr)) {
		_1a58d2b7d_push_err(&(*_self_), _204577_si.get()._field_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_204558_s.get()._field_decl.get()._field_ident),jule::Any(_204577_si.get()._field_ident._field_kind)}));
		return nullptr;
	}
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _207617_m.get()._field_public,_207617_m.get()._field_token)))) {
		_1a58d2b7d_push_err(&(*_self_), _204577_si.get()._field_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_207617_m.get()._field_ident)}));
		_1a58d3079_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	if (_1ab830ed2_is_ref(_207617_m.get()._field_params[0LL].ptr()) && (!(_204596_ref))) {
		_1a58d2b7d_push_err(&(*_self_), _204577_si.get()._field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	}
	_1a58d8d4e_check_deprecated(&(*_self_), _207617_m.get()._field_directives,_204577_si.get()._field_ident);
	jule::Ptr<_1ab836218_FnIns> _209217_ins = _1ab8345ac_instance(_207617_m);
	_209217_ins.get()._field_owner=_204558_s;
	_1a58d6ca3_push_reference_to_fn(&(*_self_), _209217_ins);
	jule::Ptr<_1a58cee44_Data> _209517_model = jule::new_ptr<_1a58cee44_Data>((*(_204544_d)));
	_204544_d.get()._field_model=jule::Any(jule::new_ptr<_1ab81e245_StructSubIdentExprModel>(_1ab81e245_StructSubIdentExprModel(_204577_si.get()._field_ident,_209517_model,_204544_d.get()._field_kind,_209217_ins,jule::Ptr<_1ab8137bc_FieldIns>())));
	_204544_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_209217_ins, 1)));
	return _204544_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a58ea778_eval_slice_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _210643_d,_1aa07563a_Token _210657_ident) {
	{
		auto &_match_expr{ _210657_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a840b918:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_210643_d.get()._field_kind,_210643_d.get()._field_model,_210657_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a840b97e:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_210643_d.get()._field_kind,_210643_d.get()._field_model,_210657_ident,jule::Str("cap()", 5))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a840a53d:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_210643_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_210643_d.get()._field_kind,_210643_d.get()._field_model,_210657_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a840a252:;
			{
				_1a58d2b7d_push_err(&(*_self_), _210657_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_210643_d.get()._field_kind.ptr())),jule::Any(_210657_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a840a472:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eac0c_eval_array_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _216643_d,_1aa07563a_Token _216657_ident) {
	{
		auto &_match_expr{ _216657_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8411bc6:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _216921_c = static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5917399_arr(_216643_d.get()._field_kind.ptr()).get()._field_n)));
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_216921_c)),jule::Bool(),_216921_c));
			}
		}
		else if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a8411c3c:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("i", 1))),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))))),jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("j", 1))),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)))))}),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_216643_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_216643_d.get()._field_kind,_216643_d.get()._field_model,_216657_ident,jule::Str("swap", 4))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a84118da:;
			{
				_1a58d2b7d_push_err(&(*_self_), _216657_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_216643_d.get()._field_kind.ptr())),jule::Any(_216657_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8411b0a:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eb191_eval_map_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _221241_d,_1aa07563a_Token _221255_ident) {
	jule::Ptr<_1a592132b_Map> _221317_map_kind = _1a59182ce_map(_221241_d.get()._field_kind.ptr());
	{
		auto &_match_expr{ _221255_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a84197a0:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("len()", 5))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("clear", 5)) {
			_case_begin_1a8418073:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_221241_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("clear", 5))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("keys", 4)) {
			_case_begin_1a84180d9:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_221317_map_kind.get()._field_key)), 7))),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_221241_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("keys", 4))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("values", 6)) {
			_case_begin_1a8418150:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_221317_map_kind.get()._field_val)), 7))),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_221241_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("values", 6))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("has", 3)) {
			_case_begin_1a84181b6:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("key", 3))),_221317_map_kind.get()._field_key))}),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5938101_builtin_caller_common),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_221241_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("has", 3))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("del", 3)) {
			_case_begin_1a8419519:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("key", 3))),_221317_map_kind.get()._field_key))}),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5936000_builtin_caller_common_mut),jule::Bool())), 1))),jule::Ptr<_1a5913e9a_TypeKind>(),_221241_d.get()._field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_221241_d.get()._field_kind,_221241_d.get()._field_model,_221255_ident,jule::Str("del", 3))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a841800c:;
			{
				_1a58d2b7d_push_err(&(*_self_), _221255_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a5921903_to_str(_221317_map_kind.ptr())),jule::Any(_221255_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8417ea7:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eb625_eval_str_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _233541_d,_1aa07563a_Token _233555_ident) {
	jule::Ptr<_1a5913e9a_TypeKind> _233617_str_kind = jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("str", 3)), 5)));
	{
		auto &_match_expr{ _233555_ident._field_kind };
		
		if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8425bb8:;
			{
				jule::Ptr<_1a58cee44_Data> _233921_sd = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
				if (_1a58d0b48_is_const(_233541_d.ptr())) {
					_233921_sd.get()._field_constant=static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d30e5_read_str(_233541_d.get()._field_constant.ptr()).len())));
					_233921_sd.get()._field_model=jule::Any(_233921_sd.get()._field_constant);
				} else {
					_233921_sd.get()._field_model=jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_233541_d.get()._field_kind,_233541_d.get()._field_model,_233555_ident,jule::Str("len()", 5))));
				}
				return _233921_sd;
			}
		}
		else {
			_case_begin_1a8424887:;
			{
				_1a58d2b7d_push_err(&(*_self_), _233555_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_233617_str_kind.ptr())),jule::Any(_233555_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8424832:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eb9cc_eval_int_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _236039_ident) {
	
	{
		auto &_match_expr{ _236039_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a842a508:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _236521_c = static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac557d4b_max(jule::Str("int", 3)))));
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_236521_c)),jule::Bool(),_236521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a842a56e:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _237221_c = static__1ac4d13e0_new_i64(static_cast<jule::I64>(static_cast<jule::I64>(_1ac5579e9_min(jule::Str("int", 3)))));
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_237221_c)),jule::Bool(),_237221_c));
			}
		}
		else {
			_case_begin_1a84293c5:;
			{
				_1a58d2b7d_push_err(&(*_self_), _236039_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_236039_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8429370:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ebd84_eval_uint_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _238440_ident) {
	
	{
		auto &_match_expr{ _238440_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a842ec49:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _238921_c = static__1ac4d1555_new_u64(static_cast<jule::U64>(static_cast<jule::U64>(_1ac557d4b_max(jule::Str("uint", 4)))));
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_238921_c)),jule::Bool(),_238921_c));
			}
		}
		else {
			_case_begin_1a842db16:;
			{
				_1a58d2b7d_push_err(&(*_self_), _238440_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_238440_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a842dab1:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ec23b_eval_i8_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _240138_ident) {
	
	
	
	{
		auto &_match_expr{ _240138_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8433698:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _240821_c = static__1ac4d13e0_new_i64(127LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_240821_c)),jule::Bool(),_240821_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a843370e:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _241521_c = static__1ac4d13e0_new_i64(-128LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i8", 2)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_241521_c)),jule::Bool(),_241521_c));
			}
		}
		else {
			_case_begin_1a8432576:;
			{
				_1a58d2b7d_push_err(&(*_self_), _240138_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_240138_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8432521:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ec5e3_eval_i16_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _242739_ident) {
	
	
	
	{
		auto &_match_expr{ _242739_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8437d2e:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _243421_c = static__1ac4d13e0_new_i64(32767LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_243421_c)),jule::Bool(),_243421_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8437d95:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _244121_c = static__1ac4d13e0_new_i64(-32768LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i16", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_244121_c)),jule::Bool(),_244121_c));
			}
		}
		else {
			_case_begin_1a8436c0c:;
			{
				_1a58d2b7d_push_err(&(*_self_), _242739_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_242739_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8436ba7:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ec99a_eval_i32_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _245339_ident) {
	
	
	
	{
		auto &_match_expr{ _245339_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a843c4b5:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _246021_c = static__1ac4d13e0_new_i64(2147483647LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246021_c)),jule::Bool(),_246021_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a843c52b:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _246721_c = static__1ac4d13e0_new_i64(-2147483648LL);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_246721_c)),jule::Bool(),_246721_c));
			}
		}
		else {
			_case_begin_1a843b393:;
			{
				_1a58d2b7d_push_err(&(*_self_), _245339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_245339_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a843b33d:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ecd52_eval_i64_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _247939_ident) {
	
	
	
	{
		auto &_match_expr{ _247939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8441ab3:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _248621_c = static__1ac4d13e0_new_i64(jule::MAX_I64);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_248621_c)),jule::Bool(),_248621_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8441b29:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _249321_c = static__1ac4d13e0_new_i64(jule::MIN_I64);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_249321_c)),jule::Bool(),_249321_c));
			}
		}
		else {
			_case_begin_1a844073d:;
			{
				_1a58d2b7d_push_err(&(*_self_), _247939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_247939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a844095d:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ed209_eval_u8_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _250538_ident) {
	
	
	{
		auto &_match_expr{ _250538_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8446117:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _251121_c = static__1ac4d1555_new_u64(255LLU);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u8", 2)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_251121_c)),jule::Bool(),_251121_c));
			}
		}
		else {
			_case_begin_1a8444e6d:;
			{
				_1a58d2b7d_push_err(&(*_self_), _250538_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_250538_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8444e18:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ed5b1_eval_u16_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _252339_ident) {
	
	
	{
		auto &_match_expr{ _252339_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a844934b:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _252921_c = static__1ac4d1555_new_u64(65535LLU);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u16", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_252921_c)),jule::Bool(),_252921_c));
			}
		}
		else {
			_case_begin_1a84481a2:;
			{
				_1a58d2b7d_push_err(&(*_self_), _252339_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_252339_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a844814c:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ed968_eval_u32_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _254139_ident) {
	
	
	{
		auto &_match_expr{ _254139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a844c580:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _254721_c = static__1ac4d1555_new_u64(4294967295LLU);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_254721_c)),jule::Bool(),_254721_c));
			}
		}
		else {
			_case_begin_1a844b3d6:;
			{
				_1a58d2b7d_push_err(&(*_self_), _254139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_254139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a844b381:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58edd20_eval_u64_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _255939_ident) {
	
	
	{
		auto &_match_expr{ _255939_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8450770:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _256521_c = static__1ac4d1555_new_u64(jule::MAX_U64);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_256521_c)),jule::Bool(),_256521_c));
			}
		}
		else {
			_case_begin_1a844e032:;
			{
				_1a58d2b7d_push_err(&(*_self_), _255939_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_255939_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a844e571:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ee1c7_eval_f32_type_tatic(_1a58d2397_Eval* _self_,_1aa07563a_Token _257738_ident) {
	
	
	
	
	{
		auto &_match_expr{ _257738_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8454125:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _258521_c = static__1ac4d1dc4_new_f64(340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_258521_c)),jule::Bool(),_258521_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a845418b:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _259221_c = static__1ac4d1dc4_new_f64(-340282346638528860000000000000000000000.0);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259221_c)),jule::Bool(),_259221_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a8453e5a:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _259921_c = static__1ac4d1dc4_new_f64(0.000000000000000000000000000000000000000000001401298464324817);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f32", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_259921_c)),jule::Bool(),_259921_c));
			}
		}
		else {
			_case_begin_1a8452ee2:;
			{
				_1a58d2b7d_push_err(&(*_self_), _257738_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_257738_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8452e8c:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58ee57e_eval_f64_type_static(_1a58d2397_Eval* _self_,_1aa07563a_Token _261139_ident) {
	
	
	
	
	{
		auto &_match_expr{ _261139_ident._field_kind };
		
		if (_match_expr == jule::Str("MAX", 3)) {
			_case_begin_1a8459acb:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _261921_c = static__1ac4d1dc4_new_f64(jule::MAX_F64);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_261921_c)),jule::Bool(),_261921_c));
			}
		}
		else if (_match_expr == jule::Str("MIN", 3)) {
			_case_begin_1a8459b42:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _262621_c = static__1ac4d1dc4_new_f64(jule::MIN_F64);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_262621_c)),jule::Bool(),_262621_c));
			}
		}
		else if (_match_expr == jule::Str("SMALLEST_NON_ZERO", 17)) {
			_case_begin_1a8459911:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _263321_c = static__1ac4d1dc4_new_f64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("f64", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_263321_c)),jule::Bool(),_263321_c));
			}
		}
		else {
			_case_begin_1a8458998:;
			{
				_1a58d2b7d_push_err(&(*_self_), _261139_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_261139_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8458943:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eea13_eval_prim_static(_1a58d2397_Eval* _self_,jule::Str _264535_kind,_1aa07563a_Token _264546_ident) {
	{
		auto &_match_expr{ _264535_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a845e7b2:;
			{
				return _1a58eb9cc_eval_int_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a845e828:;
			{
				return _1a58ebd84_eval_uint_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a845e88e:;
			{
				return _1a58ec23b_eval_i8_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a845e905:;
			{
				return _1a58ec5e3_eval_i16_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a845da14:;
			{
				return _1a58ec99a_eval_i32_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a845da7a:;
			{
				return _1a58ecd52_eval_i64_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a845dae1:;
			{
				return _1a58ed209_eval_u8_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a845db57:;
			{
				return _1a58ed5b1_eval_u16_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a845dbce:;
			{
				return _1a58ed968_eval_u32_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a845eac0:;
			{
				return _1a58edd20_eval_u64_type_static(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a845eb47:;
			{
				return _1a58ee1c7_eval_f32_type_tatic(&(*_self_), _264546_ident);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a845ebbe:;
			{
				return _1a58ee57e_eval_f64_type_static(&(*_self_), _264546_ident);
			}
		}
		else {
			_case_begin_1a845d74a:;
			{
				_1a58d2b7d_push_err(&(*_self_), _264546_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>({jule::Any(_264535_kind),jule::Any(_264546_ident._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a845d7d3:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a58eee97_eval_type_static(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _267739_d,jule::Ptr<_1aa09138c_SubIdentExpr> _267753_si) {
	{
		
		if ((_1a591673e_prim(_267739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8466ce7:;
			{
				return _1a58eea13_eval_prim_static(&(*_self_), _1a5919cd6_to_str(_1a591673e_prim(_267739_d.get()._field_kind.ptr()).ptr()),_267753_si.get()._field_ident);
			}
		}
		else if ((_1a59170be_enm(_267739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8466d5d:;
			{
				return _1a58e91b1_eval_enum_static(&(*_self_), _1a59170be_enm(_267739_d.get()._field_kind.ptr()),_267753_si.get()._field_ident);
			}
		}
		else if ((_1a5917c29_strct(_267739_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8465983:;
			{
				return _1a58e9645_eval_struct_static(&(*_self_), _1a5917c29_strct(_267739_d.get()._field_kind.ptr()),_267753_si.get()._field_ident);
			}
		}
		else {
			_case_begin_1a846591c:;
			{
				_1a58d2b7d_push_err(&(*_self_), _267753_si.get()._field_ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_267739_d.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a8465884:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590042b_eval_obj_sub_ident(_1a58d2397_Eval* _self_,jule::Ptr<_1a58cee44_Data> _269141_d,jule::Ptr<_1aa09138c_SubIdentExpr> _269155_si) {
	if (_1aa07861b_is_ignore_ident(_269155_si.get()._field_ident._field_kind)) {
		_1a58d2b7d_push_err(&(*_self_), _269155_si.get()._field_ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _269717_kind = _269141_d.get()._field_kind;
	{
		
		if ((_1a5916ce4_ptr(_269141_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a846c22b:;
			{
				jule::Ptr<_1a59230db_Ptr> _270017_ptr = _1a5916ce4_ptr(_269141_d.get()._field_kind.ptr());
				if (_1a5923e33_is_unsafe(_270017_ptr.ptr())) {
					goto _match_end_1a846c11b;
				}
				if ((!(_269155_si.get()._field_is_self)) && (!(_1a58d37d8_is_unsafe(&(*_self_))))) {
					_1a58d2b7d_push_err(&(*_self_), _269155_si.get()._field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				_269717_kind=_1a5916ce4_ptr(_269141_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else if ((_1a5916a19_sptr(_269141_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a846c2a3:;
			{
				_269717_kind=_1a5916a19_sptr(_269141_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		_match_end_1a846c11b:;
	}
	{
		
		if ((_1a5918004_trt(_269141_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84704a4:;
			{
				return _1a58e9ba6_eval_trait_sub_ident(&(*_self_), _269141_d,_1a5918004_trt(_269141_d.get()._field_kind.ptr()),_269155_si.get()._field_ident);
			}
		}
		else if ((_1a5917c29_strct(_269717_kind.ptr()) != nullptr)) {
			_case_begin_1a847051a:;
			{
				jule::Ptr<_1ab814515_StructIns> _271617_s = _1a5917c29_strct(_269717_kind.ptr());
				if (_1a590e10a_is_instanced_struct(_271617_s)) {
					jule::Bool _271825_used_reference_elem = (_1a5916a19_sptr(_269141_d.get()._field_kind.ptr()) != nullptr);
					return _1a58ea2e4_eval_struct_sub_ident(&(*_self_), _269141_d,_1a5917c29_strct(_269717_kind.ptr()),_269155_si,_271825_used_reference_elem);
				}
			}
		}
		else if ((_1a5917674_slc(_269717_kind.ptr()) != nullptr)) {
			_case_begin_1a8470592:;
			{
				return _1a58ea778_eval_slice_sub_ident(&(*_self_), _269141_d,_269155_si.get()._field_ident);
			}
		}
		else if ((_1a5917399_arr(_269717_kind.ptr()) != nullptr)) {
			_case_begin_1a8470619:;
			{
				return _1a58eac0c_eval_array_sub_ident(&(*_self_), _269141_d,_269155_si.get()._field_ident);
			}
		}
		else if ((_1a59182ce_map(_269717_kind.ptr()) != nullptr)) {
			_case_begin_1a8470691:;
			{
				return _1a58eb191_eval_map_sub_ident(&(*_self_), _269141_d,_269155_si.get()._field_ident);
			}
		}
		else if ((_1a591673e_prim(_269717_kind.ptr()) != nullptr)) {
			_case_begin_1a8470dcd:;
			{
				jule::Ptr<_1a591970e_Prim> _272817_p = _1a591673e_prim(_269717_kind.ptr());
				{
					auto &_match_expr{ _272817_p.get()._field_kind };
					
					if (_match_expr == jule::Str("str", 3)) {
						_case_begin_1a8477302:;
						{
							return _1a58eb625_eval_str_sub_ident(&(*_self_), _269141_d,_269155_si.get()._field_ident);
						}
					}
					_match_end_1a847790c:;
				}
			}
		}
		_match_end_1a846cd53:;
	}
	_1a58d2b7d_push_err(&(*_self_), _269155_si.get()._field_ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_269141_d.get()._field_kind.ptr()))}));
	return nullptr;
}



inline jule::Ptr<_1a58cee44_Data> _1a59007d3_eval_sub_ident(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09138c_SubIdentExpr> _273838_si) {
	jule::Ptr<_1a5913e9a_TypeKind> _273917_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273917_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _274317_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_273838_si.get()._field_expr));
	if ((_274317_d == nullptr)) {
		return nullptr;
	}
	if (_274317_d.get()._field_decl) {
		return _1a58eee97_eval_type_static(_self_.ptr(), _274317_d,_273838_si);
	}
	return _1a590042b_eval_obj_sub_ident(_self_.ptr(), _274317_d,_273838_si);
}



inline jule::Ptr<_1a58cee44_Data> _1a5900b8a_eval_tuple(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa08db70_TupleExpr> _275534_tup) {
	jule::Ptr<_1a59203b3_Tuple> _275617_tup_t = jule::new_ptr<_1a59203b3_Tuple>(_1a59203b3_Tuple());
	_275617_tup_t.get()._field_types=jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_275534_tup.get()._field_expr.len()));
	jule::Ptr<_1ab821599_TupleExprModel> _275917_model = jule::new_ptr<_1ab821599_TupleExprModel>(_1ab821599_TupleExprModel(jule::Slice<jule::Ptr<_1a58cee44_Data>>::alloc(0LL,static_cast<jule::I64>(_275534_tup.get()._field_expr.len()))));
	jule::Bool _276317_ok = true;
	{
		auto &expr = _275534_tup.get()._field_expr;
		auto it = expr.begin();
		_iter_begin_1a847e4a2:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a847e6a0_expr = *it;
			{
				jule::Ptr<_1a58cee44_Data> _276521_d = _1a5902494_eval_expr_kind(_self_, _1a847e6a0_expr.get()._field_kind);
				if ((_276521_d == nullptr)) {
					_276317_ok=false;
					goto _iter_next_1a847e4a2;
				}
				_275617_tup_t.get()._field_types = jule::alloc_for_append(_275617_tup_t.get()._field_types,1);_275617_tup_t.get()._field_types.__push(_276521_d.get()._field_kind);
				_275917_model.get()._field_datas = jule::alloc_for_append(_275917_model.get()._field_datas,1);_275917_model.get()._field_datas.__push(_276521_d);
			}
			_iter_next_1a847e4a2:;
			++it;
			goto _iter_begin_1a847e4a2;
		}
		_iter_end_1a847e4a2:;
	}
	if ((!(_276317_ok))) {
		return nullptr;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_275617_tup_t, 8))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_275917_model)),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a590111e_eval_map(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1a592132b_Map> _278432_m,jule::Ptr<_1aa092932_BraceLit> _278445_lit) {
	jule::Ptr<_1ab81c496_MapExprModel> _278517_model = jule::new_ptr<_1ab81c496_MapExprModel>(_1ab81c496_MapExprModel(_278432_m.get()._field_key,_278432_m.get()._field_val,jule::Slice<jule::Ptr<_1ab81bc48_KeyValPairExprModel>>()));
	{
		auto &expr = _278445_lit.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a8483462:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a8483671_expr = *it;
			{
				{
					auto &_match_expr{ _1a8483671_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1aa092d50_KeyValPair>>()) {
						_case_begin_1a8483aa0:;
						{
							goto _match_end_1a8483d25;
						}
					}
					else {
						_case_begin_1a8483d7a:;
						{
							_1a58d2b7d_push_err(_self_.ptr(), _278445_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;
						}
					}
					_match_end_1a8483d25:;
				}
				jule::Ptr<_1aa092d50_KeyValPair> _280021_pair = _1a8483671_expr.get()._field_kind.operator jule::Ptr<_1aa092d50_KeyValPair>();
				jule::Ptr<_1a58cee44_Data> _280221_key = _1a5902494_eval_expr_kind(_self_, jule::Any(_280021_pair.get()._field_key));
				if ((_280221_key == nullptr)) {
					return nullptr;
				}
				jule::Ptr<_1a58cee44_Data> _280721_val = _1a5902494_eval_expr_kind(_self_, jule::Any(_280021_pair.get()._field_val));
				if ((_280721_val == nullptr)) {
					return nullptr;
				}
				_1a586e202_check_assign_type(_self_.get()._field_s, false,_278432_m.get()._field_key,_280221_key,_280021_pair.get()._field_colon);
				_1a586e202_check_assign_type(_self_.get()._field_s, false,_278432_m.get()._field_val,_280721_val,_280021_pair.get()._field_colon);
				_278517_model.get()._field_entries = jule::alloc_for_append(_278517_model.get()._field_entries,1);_278517_model.get()._field_entries.__push(jule::new_ptr<_1ab81bc48_KeyValPairExprModel>(_1ab81bc48_KeyValPairExprModel(_280221_key.get()._field_model,_280721_val.get()._field_model)));
			}
			_iter_next_1a8483462:;
			++it;
			goto _iter_begin_1a8483462;
		}
		_iter_end_1a8483462:;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_278432_m, 9))),jule::Ptr<_1a5913e9a_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(_278517_model)),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a59014c6_eval_brace_lit(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa092932_BraceLit> _282838_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a848a47a:;
			{
				_1a58d2b7d_push_err(_self_.ptr(), _282838_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else if ((_1a59182ce_map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a848a4e1:;
			{
				return _1a590111e_eval_map(_self_, _1a59182ce_map(_self_.get()._field_prefix.ptr()),_282838_lit);
			}
		}
		else if ((_1a5917c29_strct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a8489589:;
			{
				return _1a58e6565_eval_struct_lit_explicit(_self_, _1a5917c29_strct(_self_.get()._field_prefix.ptr()),_282838_lit.get()._field_exprs,_282838_lit.get()._field_token);
			}
		}
		else {
			_case_begin_1a8489523:;
			{
				_1a58d2b7d_push_err(_self_.ptr(), _282838_lit.get()._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a8489479:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590187d_eval_anon_fn(_1a58d2397_Eval* _self_,jule::Ptr<_1aa096b67_FnDecl> _284335_decl) {
	_1a5927189_TypeChecker _284417_tc = _1a5927189_TypeChecker((*_self_)._field_s,(*_self_)._field_lookup,jule::Ptr<_1a5926045_Referencer>(),_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool());
	jule::Ptr<_1ab836218_FnIns> _284817_ins = _1a592e46b_build_fn(&_284417_tc, _284335_decl);
	_284817_ins.get()._field_anon=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
			_case_begin_1a8490d98:;
			{
				jule::Ptr<_1ac565bd3_ScopeChecker> _285321_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>();
				jule::Ptr<_1ac565bd3_ScopeChecker> _285421_scc = _1ac577eae_new_child_checker(_285321_sc);
				_285421_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>>(nullptr);
				_285421_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>>(nullptr);
				_285421_scc.get()._field_owner=nullptr;
				_285421_scc.get()._field_child_index=0LL;
				_285421_scc.get()._field_it=0LLU;
				_285421_scc.get()._field_cse=0LLU;
				_285421_scc.get()._field_owner=_284817_ins;
				_1a588006a_check_fn_ins_sc((*_self_)._field_s.ptr(), _284817_ins,_285421_scc);
			}
		}
		else {
			_case_begin_1a84905b2:;
			{
				_1a5880785_check_fn_ins((*_self_)._field_s, _284817_ins);
			}
		}
		_match_end_1a849055c:;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_284817_ins, 1))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab81b5e9_AnonFnExprModel>(_1ab81b5e9_AnonFnExprModel(_284817_ins,_1a58d3ab3_is_global(&(*_self_)))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a5901c35_eval_binop(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa0917aa_BinopExpr> _287734_op) {
	_1a5905772_BinaryEval _287817_bs = static__1a590608b_new_plain(_self_);
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a591970e_Prim> _288217_prim = _1a591673e_prim(_self_.get()._field_prefix.ptr());
		if ((_288217_prim == nullptr) || (!(_1ac55e836_is_num(_1a5919cd6_to_str(_288217_prim.ptr()))))) {
			jule::Ptr<_1a5913e9a_TypeKind> _288425_prefix = _self_.get()._field_prefix;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288425_prefix;
			});
			return _1a590c191_eval(&_287817_bs, _287734_op);
		}
	}
	return _1a590c191_eval(&_287817_bs, _287734_op);
}



inline jule::Ptr<_1a58cee44_Data> _1a59020dc_eval_ternary(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa09444a_TernaryExpr> _289436_ter) {
	jule::Ptr<_1a58cee44_Data> _289517_d = _1a5902494_eval_expr_kind(_self_, jule::Any(_289436_ter.get()._field_condition));
	if ((_289517_d == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a591970e_Prim> _290013_prim = _1a591673e_prim(_289517_d.get()._field_kind.ptr());
	if ((_290013_prim == nullptr) || (!(_1a591cd61_is_bool(_290013_prim.ptr())))) {
		_1a58d2b7d_push_err(_self_.ptr(), _289436_ter.get()._field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _290617_td = _1a5902494_eval_expr_kind(_self_, jule::Any(_289436_ter.get()._field_true_expr));
	if ((_290617_td == nullptr)) {
		return nullptr;
	}
	_1a58d3e6a_apply_numeric_prefix(_self_.ptr(), _290617_td);
	if (_1a591552e_void(_290617_td.get()._field_kind.ptr())) {
		_1a58d2b7d_push_err(_self_.ptr(), _289436_ter.get()._field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _291717_prefix = _self_.get()._field_prefix;
	_self_.get()._field_prefix=_290617_td.get()._field_kind;
	jule::Ptr<_1a58cee44_Data> _292017_fd = _1a5902494_eval_expr_kind(_self_, jule::Any(_289436_ter.get()._field_false_expr));
	_1a58d3e6a_apply_numeric_prefix(_self_.ptr(), _292017_fd);
	_self_.get()._field_prefix=_291717_prefix;
	if ((_292017_fd == nullptr)) {
		return nullptr;
	}
	_1a58b7778_AssignTypeChecker _292817_ac = _1a58b7778_AssignTypeChecker(_self_.get()._field_s,jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a58cee44_Data>(),_289436_ter.get()._field_token);
	if (_1a58d0b48_is_const(_290617_td.ptr()) && (!(_1a58d0b48_is_const(_292017_fd.ptr())))) {
		_292817_ac._field_dest=_292017_fd.get()._field_kind;
		_292817_ac._field_d=_290617_td;
	} else {
		_292817_ac._field_dest=_290617_td.get()._field_kind;
		_292817_ac._field_d=_292017_fd;
	}
	if ((!(_1a58b8dea_check(&_292817_ac)))) {
		_1a58d3079_push_suggestion(_self_.ptr(), jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>());
	}
	if (_1a58d0b48_is_const(_289517_d.ptr())) {
		if (_1ac4d2d1a_read_bool(_289517_d.get()._field_constant.ptr())) {
			return _290617_td;
		}
		return _292017_fd;
	}
	jule::Ptr<_1a58cee44_Data> _295017_r = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data());
	_295017_r.get()._field_kind=_292817_ac._field_dest;
	_295017_r.get()._field_lvalue=false;
	_295017_r.get()._field_mutable=_1a5915809_mutable(_295017_r.get()._field_kind.ptr());
	_295017_r.get()._field_model=jule::Any(jule::new_ptr<_1ab82c72b_TernaryExprModel>(_1ab82c72b_TernaryExprModel(_289517_d.get()._field_model,_290617_td.get()._field_model,_292017_fd.get()._field_model)));
	return _295017_r;
}



inline jule::Ptr<_1a58cee44_Data> _1a5902494_eval_expr_kind(jule::Ptr<_1a58d2397_Eval> _self_,jule::Any _296238_kind) {
	jule::Ptr<_1a58cee44_Data> _296317_d = nullptr;
	{
		auto &_match_expr{ _296238_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08d334_Expr>>()) {
			_case_begin_1a84a6287:;
			{
				_296317_d=_1a5902494_eval_expr_kind(_self_, _296238_kind.operator jule::Ptr<_1aa08d334_Expr>().get()._field_kind);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08e08d_LitExpr>>()) {
			_case_begin_1a84a62ed:;
			{
				_296317_d=_1a58d5d29_eval_lit(_self_.ptr(), _296238_kind.operator jule::Ptr<_1aa08e08d_LitExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
			_case_begin_1a84a6364:;
			{
				_296317_d=_1a58db45b_eval_ident(_self_.ptr(), _296238_kind.operator jule::Ptr<_1aa08ece7_IdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa090215_UnaryExpr>>()) {
			_case_begin_1a84a6562:;
			{
				_296317_d=_1a58db813_eval_unary(_self_, _296238_kind.operator jule::Ptr<_1aa090215_UnaryExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa090633_VariadicExpr>>()) {
			_case_begin_1a84a65c8:;
			{
				_296317_d=_1a58dbbba_eval_variadic(_self_, _296238_kind.operator jule::Ptr<_1aa090633_VariadicExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08e4ab_UnsafeExpr>>()) {
			_case_begin_1a84a663e:;
			{
				_296317_d=_1a58dc072_eval_unsafe(_self_, _296238_kind.operator jule::Ptr<_1aa08e4ab_UnsafeExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09326d_SliceExpr>>()) {
			_case_begin_1a84a66b6:;
			{
				_296317_d=_1a58dcc65_eval_slice_expr(_self_, _296238_kind.operator jule::Ptr<_1aa09326d_SliceExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa093b0e_IndexingExpr>>()) {
			_case_begin_1a84a673d:;
			{
				_296317_d=_1a58e0dcd_eval_indexing(_self_, _296238_kind.operator jule::Ptr<_1aa093b0e_IndexingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09402c_SlicingExpr>>()) {
			_case_begin_1a84a67b5:;
			{
				_296317_d=_1a58e24d9_eval_slicing(_self_, _296238_kind.operator jule::Ptr<_1aa09402c_SlicingExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa090a51_CastExpr>>()) {
			_case_begin_1a84a683c:;
			{
				_296317_d=_1a58e5b08_eval_cast(_self_, _296238_kind.operator jule::Ptr<_1aa090a51_CastExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa090e6e_NsSelectionExpr>>()) {
			_case_begin_1a84a68b4:;
			{
				_296317_d=_1a58e5eb0_eval_ns_selection(_self_.ptr(), _296238_kind.operator jule::Ptr<_1aa090e6e_NsSelectionExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa092514_StructLit>>()) {
			_case_begin_1a84a693b:;
			{
				_296317_d=_1a58e690b_eval_struct_lit(_self_, _296238_kind.operator jule::Ptr<_1aa092514_StructLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd583461_TypeDecl>>()) {
			_case_begin_1a84a69b3:;
			{
				_296317_d=_1a58e6cb3_eval_type(_self_.ptr(), _296238_kind.operator jule::Ptr<_1dd583461_TypeDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>()) {
			_case_begin_1a84a6a3a:;
			{
				_296317_d=_1a58e8c2c_eval_fn_call(_self_, _296238_kind.operator jule::Ptr<_1aa091bc8_FnCallExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09138c_SubIdentExpr>>()) {
			_case_begin_1a84a6ab2:;
			{
				_296317_d=_1a59007d3_eval_sub_ident(_self_, _296238_kind.operator jule::Ptr<_1aa09138c_SubIdentExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08db70_TupleExpr>>()) {
			_case_begin_1a84a6b39:;
			{
				_296317_d=_1a5900b8a_eval_tuple(_self_, _296238_kind.operator jule::Ptr<_1aa08db70_TupleExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa092932_BraceLit>>()) {
			_case_begin_1a84a6bb1:;
			{
				_296317_d=_1a59014c6_eval_brace_lit(_self_, _296238_kind.operator jule::Ptr<_1aa092932_BraceLit>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa096b67_FnDecl>>()) {
			_case_begin_1a84a6c38:;
			{
				_296317_d=_1a590187d_eval_anon_fn(_self_.ptr(), _296238_kind.operator jule::Ptr<_1aa096b67_FnDecl>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa0917aa_BinopExpr>>()) {
			_case_begin_1a84a6cb0:;
			{
				_296317_d=_1a5901c35_eval_binop(_self_, _296238_kind.operator jule::Ptr<_1aa0917aa_BinopExpr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa09444a_TernaryExpr>>()) {
			_case_begin_1a84a6d37:;
			{
				_296317_d=_1a59020dc_eval_ternary(_self_, _296238_kind.operator jule::Ptr<_1aa09444a_TernaryExpr>());
			}
		}
		_match_end_1a84a61bb:;
	}
	if ((_296317_d == nullptr)) {
		return nullptr;
	}
	if ((_296317_d.get()._field_kind == nullptr)) {
		return _296317_d;
	}
	if ((!(_296317_d.get()._field_decl)) && (_self_.get()._field_prefix != nullptr)) {
		if (((((((!(_1a5914e79_cpp_linked(_296317_d.get()._field_kind.ptr()))) && (_296317_d.get()._field_cast_kind == nullptr)) && (!(_296317_d.get()._field_kind.get()._field_variadic))) && (!(_296317_d.get()._field_lvalue))) && (!(_1a58d0b48_is_const(_296317_d.ptr())))) && (_1a591673e_prim(_296317_d.get()._field_kind.ptr()) != nullptr)) && _1ac55e836_is_num(_1a591673e_prim(_296317_d.get()._field_kind.ptr()).get()._field_kind)) {
			_296317_d.get()._field_cast_kind=_296317_d.get()._field_kind;
		}
		_1a590e946_apply_cast_kind(_296317_d);
		if ((_1a591673e_prim(_296317_d.get()._field_kind.ptr()) == nullptr) || (!(_1a591d416_is_any(_1a591673e_prim(_296317_d.get()._field_kind.ptr()).ptr())))) {
			if ((_1a591673e_prim(_self_.get()._field_prefix.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim(_self_.get()._field_prefix.ptr()).ptr())) {
				_296317_d.get()._field_cast_kind=_self_.get()._field_prefix;
				_1a590e6c1_apply_cast_kind_model(_296317_d);
				_296317_d.get()._field_cast_kind=nullptr;
			}
		}
	}
	return _296317_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a590284b_eval(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa08d334_Expr> _304128_expr) {
	jule::Ptr<_1a58cee44_Data> _304217_d = _1a5902494_eval_expr_kind(_self_, _304128_expr.get()._field_kind);
	if ((_304217_d == nullptr) || (_304217_d.get()._field_kind == nullptr)) {
		return nullptr;
	}
	{
		
		if ((_1a591794e_fnc(_304217_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84bb731:;
			{
				jule::Ptr<_1ab836218_FnIns> _304921_f = _1a591794e_fnc(_304217_d.get()._field_kind.ptr());
				if (_1ab837093_is_builtin(_304921_f.ptr())) {
					goto _match_end_1a84bb654;
				}
				if (_304921_f.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_304921_f.get()._field_decl.get()._field_generics.len()))) {
					_1a5867bac_push_err(_self_.get()._field_s.ptr(), _304128_expr.get()._field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				}
				if (_1ab832cb4_is_method(_304921_f.get()._field_decl.ptr())) {
					_1a5867bac_push_err(_self_.get()._field_s.ptr(), _304128_expr.get()._field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				}
			}
		}
		_match_end_1a84bb654:;
	}
	return _304217_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5902c03_eval_expr(jule::Ptr<_1a58d2397_Eval> _self_,jule::Ptr<_1aa08d334_Expr> _306733_expr) {
	jule::Ptr<_1a58cee44_Data> _306817_d = _1a590284b_eval(_self_, _306733_expr);
	{
		
		if ((_306817_d == nullptr)) {
			_case_begin_1a84c111a:;
			{
				return nullptr;
			}
		}
		else if (_306817_d.get()._field_decl) {
			_case_begin_1a84c1181:;
			{
				_1a58d2b7d_push_err(_self_.ptr(), _306733_expr.get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		else {
			_case_begin_1a84c0a10:;
			{
				return _306817_d;
			}
		}
		_match_end_1a84c09aa:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a58d2397_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a5903253_UnaryEval static__1a590396d_new(jule::Ptr<_1a58d2397_Eval> _308823_e) {
	return _1a5903253_UnaryEval(_308823_e,jule::Ptr<_1a58cee44_Data>(),jule::Ptr<_1aa090215_UnaryExpr>());
}



inline void _1a5903bb0_minus(_1a5903253_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a84c2d42:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84c332b:;
			{
				if ((!(_1ac55e836_is_num(_1a59145b6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84c3392:;
			{
				if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a84c29bd:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a84c2902:;
	}
	if (_1a58d0b48_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac4d5e72_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84cbb4d:;
				{
					_1ac4d4cea_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((-(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ac4d5317_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84cbbc5:;
				{
					_1ac4d406e_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ac4d55e2_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84cbc4c:;
				{
					_1ac4d406e_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((-(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a84cb8b7:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a5903e02_plus(_1a5903253_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a84d2945:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84d2e2e:;
			{
				if ((!(_1ac55e836_is_num(_1a59145b6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84d2e95:;
			{
				if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a84d25c1:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a84d2505:;
	}
	if (_1a58d0b48_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac4d5e72_is_f64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84d68e4:;
				{
					_1ac4d4cea_set_f64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::F64>((+(static_cast<jule::F64>(static_cast<jule::F64>(_1ac4d33c0_read_f64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ac4d5317_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84d696b:;
				{
					_1ac4d406e_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ac4d55e2_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84d69e3:;
				{
					_1ac4d406e_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((+(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a84d665d:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a5904144_caret(_1a5903253_UnaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_kind == nullptr)) {
			_case_begin_1a84dc7b8:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84dcca2:;
			{
				if ((!(_1ac55e1c6_is_int(_1a59145b6_to_str((*_self_)._field_d.get()._field_kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84dcd18:;
			{
				if ((_1a5917c29_strct((*_self_)._field_d.get()._field_kind.ptr()).get()._field_operators._field_bit_not == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;
				}
			}
		}
		else {
			_case_begin_1a84dc444:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a84dc378:;
	}
	if (_1a58d0b48_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac4d5317_is_i64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84e1767:;
				{
					_1ac4d406e_set_i64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::I64>((~(static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d2765_read_i64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			else if (_1ac4d55e2_is_u64((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84e17cd:;
				{
					_1ac4d438d_set_u64((*_self_)._field_d.get()._field_constant.ptr(), static_cast<jule::U64>((~(static_cast<jule::U64>(static_cast<jule::U64>(_1ac4d2a40_read_u64((*_self_)._field_d.get()._field_constant.ptr())))))));
				}
			}
			_match_end_1a84e14d1:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a5904386_excl(_1a5903253_UnaryEval* _self_) {
	jule::Ptr<_1a591970e_Prim> _320713_t = _1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr());
	if ((_320713_t == nullptr) || (!(_1a591cd61_is_bool(_320713_t.ptr())))) {
		(*_self_)._field_d=nullptr;
		return;
	}
	if (_1a58d0b48_is_const((*_self_)._field_d.ptr())) {
		{
			
			if (_1ac4d58bc_is_bool((*_self_)._field_d.get()._field_constant.ptr())) {
				_case_begin_1a84e774b:;
				{
					_1ac4d46ac_set_bool((*_self_)._field_d.get()._field_constant.ptr(), (!(_1ac4d2d1a_read_bool((*_self_)._field_d.get()._field_constant.ptr()))));
				}
			}
			_match_end_1a84e764c:;
		}
	}
	(*_self_)._field_d.get()._field_lvalue=false;
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
}



inline void _1a59045c8_star(_1a5903253_UnaryEval* _self_) {
	(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
	{
		
		if ((_1a5916ce4_ptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84eb4ca:;
			{
				if ((!(_1a58d37d8_is_unsafe((*_self_)._field_e.ptr())))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				}
				jule::Ptr<_1a59230db_Ptr> _323921_t = _1a5916ce4_ptr((*_self_)._field_d.get()._field_kind.ptr());
				if (_1a5923e33_is_unsafe(_323921_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;
				}
				(*_self_)._field_d.get()._field_kind=_323921_t.get()._field_elem;
			}
		}
		else if ((_1a5916a19_sptr((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a84eb9b4:;
			{
				(*_self_)._field_d.get()._field_kind=_1a5916a19_sptr((*_self_)._field_d.get()._field_kind.ptr()).get()._field_elem;
			}
		}
		else {
			_case_begin_1a84eb178:;
			{
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a84eb123:;
	}
	(*_self_)._field_d.get()._field_constant=nullptr;
	(*_self_)._field_d.get()._field_lvalue=true;
}



inline void _1a590481a_amper(_1a5903253_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab818508_StructLitExprModel>>()) {
			_case_begin_1a8502008:;
			{
				jule::Ptr<_1ab818508_StructLitExprModel> _325921_lit = (*_self_)._field_d.get()._field_model.operator jule::Ptr<_1ab818508_StructLitExprModel>();
				_1a590d181_make_struct_lit_alloc((*_self_)._field_d,_325921_lit);
			}
		}
		else {
			_case_begin_1a85019a8:;
			{
				{
					
					if (_1a59242eb_can_get_ptr((*_self_)._field_d)) {
						_case_begin_1a8502316:;
						{
							(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a59230db_Ptr>(_1a59230db_Ptr((*_self_)._field_d.get()._field_kind)), 11)));
							(*_self_)._field_d.get()._field_model=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>((*((*_self_)._field_d))),(*_self_)._field_u.get()._field_op)));
						}
					}
					else {
						_case_begin_1a8501e92:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1a8501de8:;
				}
			}
		}
		_match_end_1a8501931:;
	}
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_constant=nullptr;
		(*_self_)._field_d.get()._field_lvalue=false;
	}
}



inline void _1a5904a5c_type_decl(_1a5903253_UnaryEval* _self_) {
	_1a5927189_TypeChecker _328417_tc = _1a5927189_TypeChecker((*_self_)._field_e.get()._field_s,(*_self_)._field_e.get()._field_lookup,jule::Ptr<_1a5926045_Referencer>(),(*_self_)._field_u.get()._field_op,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8509142:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a592c887_build_ptr_from_type(&_328417_tc, (*_self_)._field_d.get()._field_kind), 11)));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a85091a8:;
			{
				(*_self_)._field_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a592c128_build_sptr_from_type(&_328417_tc, (*_self_)._field_d.get()._field_kind), 6)));
			}
		}
		else {
			_case_begin_1a850633c:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_d.get()._field_kind.ptr()))}));
				(*_self_)._field_d=nullptr;
				return;
			}
		}
		_match_end_1a85073c6:;
	}
	(*_self_)._field_d.get()._field_decl=true;
}



inline void _1a5904c9e_eval_data(_1a5903253_UnaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a850ca3b:;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _330621_prefix = (*_self_)._field_e.get()._field_prefix;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1a5902494_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
				(*_self_)._field_e.get()._field_prefix=_330621_prefix;
			}
		}
		else {
			_case_begin_1a850c233:;
			{
				(*_self_)._field_d=_1a5902494_eval_expr_kind((*_self_)._field_e, jule::Any((*_self_)._field_u.get()._field_expr));
			}
		}
		_match_end_1a850c6c8:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5905123_eval(_1a5903253_UnaryEval* _self_,jule::Ptr<_1aa090215_UnaryExpr> _331527_u) {
	(*_self_)._field_u=_331527_u;
	_1a5904c9e_eval_data(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;
	}
	if ((*_self_)._field_d.get()._field_decl) {
		_1a5904a5c_type_decl(&(*_self_));
		return (*_self_)._field_d;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _332617_cast_kind = (*_self_)._field_d.get()._field_cast_kind;
	jule::Ptr<_1a5913e9a_TypeKind> _332713_kind = (*_self_)._field_d.get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a85129db:;
			{
				_1a5903bb0_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a8512a52:;
			{
				_1a5903e02_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a8512ab8:;
			{
				_1a5904144_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a8512b2e:;
			{
				_1a5904386_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a85131d4:;
			{
				_1a59045c8_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a851324a:;
			{
				_1a590481a_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1a851039b:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1a8512843:;
	}
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a85154a0:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>({jule::Any((*_self_)._field_u.get()._field_op._field_kind),jule::Any(_1a59145b6_to_str(_332713_kind.ptr()))}));
				return nullptr;
			}
		}
		else if (_1a58d0b48_is_const((*_self_)._field_d.ptr())) {
			_case_begin_1a8515516:;
			{
				(*_self_)._field_d.get()._field_model=jule::Any((*_self_)._field_d.get()._field_constant);
			}
		}
		else if ((_332617_cast_kind != nullptr)) {
			_case_begin_1a851557c:;
			{
				(*_self_)._field_d.get()._field_cast_kind=_332617_cast_kind;
				_1a590e946_apply_cast_kind((*_self_)._field_d);
			}
		}
		_match_end_1a8514e3e:;
	}
	(*_self_)._field_d.get()._field_mutable=true;
	return (*_self_)._field_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5903253_UnaryEval _Src) {
	_Stream << "UnaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a59145b6_to_str(_1a5913e9a_TypeKind* _self_) {
	if (_1a5915254_is_nil(&(*_self_))) {
		return jule::Str("nil", 3);
	}
	jule::Str _7717_kind = jule::Str();
	if ((*_self_)._field_variadic) {
		_7717_kind+=jule::Str("...", 3);
	}
	if (_1a5914e79_cpp_linked(&(*_self_))) {
		_7717_kind+=jule::Str("cpp.", 4);
		_7717_kind+=(*_self_)._field_cpp_ident;
	} else {
		_7717_kind+=_1a591395b_Kind_mptr_data[((*_self_)._field_kind).type_offset]._1a591342d_to_str((*_self_)._field_kind);
	}
	return _7717_kind;
}



inline jule::Bool _1a591496d_equals(jule::Ptr<_1a5913e9a_TypeKind> _self_,jule::Ptr<_1a5913e9a_TypeKind> _9326_other) {
	if (_1a5915254_is_nil(_self_.ptr())) {
		return _1a5915254_is_nil(_9326_other.ptr());
	}
	if (_1a5914e79_cpp_linked(_self_.ptr())) {
		return _1a5914e79_cpp_linked(_9326_other.ptr()) && (_self_.get()._field_cpp_ident == _9326_other.get()._field_cpp_ident);
	}
	return _1a591395b_Kind_mptr_data[(_self_.get()._field_kind).type_offset]._1a59137d5_equals(_self_.get()._field_kind, _9326_other);
}



inline jule::Bool _1a5914e79_cpp_linked(_1a5913e9a_TypeKind* _self_) {
	return ((*_self_)._field_cpp_ident.len() != 0LL);
}



inline jule::Bool _1a5915254_is_nil(_1a5913e9a_TypeKind* _self_) {
	return ((*_self_)._field_kind == nullptr);
}



inline jule::Bool _1a591552e_void(_1a5913e9a_TypeKind* _self_) {
	jule::Ptr<_1a591970e_Prim> _11613_prim = _1a591673e_prim(&(*_self_));
	return (_11613_prim != nullptr) && (_11613_prim.get()._field_kind == jule::Str("void", 4));
}



inline jule::Bool _1a5915809_mutable(_1a5913e9a_TypeKind* _self_) {
	{
		_1a5913e9a_TypeKind* _12321__self = (&((*_self_)));
		if ((_1a5917c29_strct(_12321__self) != nullptr)) {
			return _1a5917c29_strct(_12321__self).get()._field_mutable;
		}
		if ((_1a5918004_trt(_12321__self) != nullptr)) {
			return _1a5918004_trt(_12321__self).get()._field_mutable;
		}
		if ((_1a591673e_prim(_12321__self) != nullptr)) {
			jule::Ptr<_1a591970e_Prim> _13221_p = _1a591673e_prim(_12321__self);
			return _1a591d416_is_any(_13221_p.ptr());
		}
		if ((_1a5917399_arr(_12321__self) != nullptr)) {
			return _1a5915809_mutable(_1a5917399_arr(_12321__self).get()._field_elem.ptr());
		}
		return ((_1a5917674_slc(_12321__self) != nullptr) || (_1a5916ce4_ptr(_12321__self) != nullptr)) || (_1a5916a19_sptr(_12321__self) != nullptr);
	}
}



inline jule::Bool _1a5915ad4_nil_compatible(_1a5913e9a_TypeKind* _self_) {
	{
		_1a5913e9a_TypeKind* _14721__self = (&((*_self_)));
		jule::Ptr<_1a591970e_Prim> _14917_prim = _1a591673e_prim(_14721__self);
		if ((_14917_prim != nullptr) && _1a591d416_is_any(_14917_prim.ptr())) {
			return true;
		}
		return (((((_1a5915254_is_nil(_14721__self) || (_1a591794e_fnc(_14721__self) != nullptr)) || (_1a5916a19_sptr(_14721__self) != nullptr)) || (_1a5916ce4_ptr(_14721__self) != nullptr)) || (_1a5918004_trt(_14721__self) != nullptr)) || (_1a5917674_slc(_14721__self) != nullptr)) || (_1a59182ce_map(_14721__self) != nullptr);
	}
}



inline jule::Bool _1a5915dae_performs_rc(_1a5913e9a_TypeKind* _self_) {
	{
		_1a5913e9a_TypeKind* _16721__self = (&((*_self_)));
		return ((_1a5916a19_sptr(_16721__self) != nullptr) || (_1a5917674_slc(_16721__self) != nullptr)) || (_1a5918004_trt(_16721__self) != nullptr);
	}
}



inline jule::Bool _1a5916189_supports_cloning(_1a5913e9a_TypeKind* _self_) {
	{
		_1a5913e9a_TypeKind* _17521__self = (&((*_self_)));
		{
			
			if ((_1a591673e_prim(_17521__self) != nullptr)) {
				_case_begin_1a85eeb1c:;
				{
					return (!(_1a591d416_is_any(_1a591673e_prim(_17521__self).ptr())));
				}
			}
			else if ((_1a59170be_enm(_17521__self) != nullptr)) {
				_case_begin_1a85eeb83:;
				{
					return true;
				}
			}
			else if ((_1a591794e_fnc(_17521__self) != nullptr)) {
				_case_begin_1a85ee842:;
				{
					return true;
				}
			}
			else if ((_1a5916ce4_ptr(_17521__self) != nullptr)) {
				_case_begin_1a85ee8a8:;
				{
					return true;
				}
			}
			else if ((_1a5917674_slc(_17521__self) != nullptr)) {
				_case_begin_1a85ee91e:;
				{
					return _1a5916189_supports_cloning(_1a5917674_slc(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a59182ce_map(_17521__self) != nullptr)) {
				_case_begin_1a85ee446:;
				{
					jule::Ptr<_1a592132b_Map> _18521_m = _1a59182ce_map(_17521__self);
					return _1a5916189_supports_cloning(_18521_m.get()._field_key.ptr()) && _1a5916189_supports_cloning(_18521_m.get()._field_val.ptr());
				}
			}
			else if ((_1a5917399_arr(_17521__self) != nullptr)) {
				_case_begin_1a85ee4ac:;
				{
					return _1a5916189_supports_cloning(_1a5917399_arr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a5916a19_sptr(_17521__self) != nullptr)) {
				_case_begin_1a85ee523:;
				{
					return _1a5916189_supports_cloning(_1a5916a19_sptr(_17521__self).get()._field_elem.ptr());
				}
			}
			else if ((_1a5917c29_strct(_17521__self) != nullptr)) {
				_case_begin_1a85ee589:;
				{
					jule::Ptr<_1ab814515_StructIns> _19225_s = _1a5917c29_strct(_17521__self);
					if ((!(_19225_s.get()._field_mutable))) {
						return true;
					}
					if (((_19225_s.get()._field_decl == nullptr) || _19225_s.get()._field_decl.get()._field_cpp_linked) || (!(_1ab812ada_is_derives(_19225_s.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
						return false;
					}
					return true;
				}
			}
			else {
				_case_begin_1a85ee3d0:;
				{
					return false;
				}
			}
			_match_end_1a85ee358:;
		}
	}
}



inline jule::Bool _1a5916464_variadicable(_1a5913e9a_TypeKind* _self_) {
	{
		_1a5913e9a_TypeKind* _21221__self = (&((*_self_)));
		return (_1a5917674_slc(_21221__self) != nullptr);
	}
}



inline jule::Ptr<_1a591970e_Prim> _1a591673e_prim(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a591970e_Prim>>()) {
			_case_begin_1a8609044:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a591970e_Prim>();
			}
		}
		else {
			_case_begin_1a8605e97:;
			{
				return nullptr;
			}
		}
		_match_end_1a8605e42:;
	}
}



inline jule::Ptr<_1a591d768_Sptr> _1a5916a19_sptr(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a591d768_Sptr>>()) {
			_case_begin_1a86060da:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a591d768_Sptr>();
			}
		}
		else {
			_case_begin_1a8608e23:;
			{
				return nullptr;
			}
		}
		_match_end_1a8608dbd:;
	}
}



inline jule::Ptr<_1a59230db_Ptr> _1a5916ce4_ptr(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a59230db_Ptr>>()) {
			_case_begin_1a860ac05:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a59230db_Ptr>();
			}
		}
		else {
			_case_begin_1a860a0bc:;
			{
				return nullptr;
			}
		}
		_match_end_1a860a298:;
	}
}



inline jule::Ptr<_1ac44a337_Enum> _1a59170be_enm(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44a337_Enum>>()) {
			_case_begin_1a860a7c6:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac44a337_Enum>();
			}
		}
		else {
			_case_begin_1a860aad4:;
			{
				return nullptr;
			}
		}
		_match_end_1a860aa7e:;
	}
}



inline jule::Ptr<_1a592230a_Arr> _1a5917399_arr(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a592230a_Arr>>()) {
			_case_begin_1a860c872:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a592230a_Arr>();
			}
		}
		else {
			_case_begin_1a860bc39:;
			{
				return nullptr;
			}
		}
		_match_end_1a860be15:;
	}
}



inline jule::Ptr<_1a591e549_Slc> _1a5917674_slc(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a591e549_Slc>>()) {
			_case_begin_1a860c443:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a591e549_Slc>();
			}
		}
		else {
			_case_begin_1a860c751:;
			{
				return nullptr;
			}
		}
		_match_end_1a860c6eb:;
	}
}



inline jule::Ptr<_1ab836218_FnIns> _1a591794e_fnc(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1a860e4de:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ab836218_FnIns>();
			}
		}
		else {
			_case_begin_1a860d8a6:;
			{
				return nullptr;
			}
		}
		_match_end_1a860da82:;
	}
}



inline jule::Ptr<_1ab814515_StructIns> _1a5917c29_strct(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ab814515_StructIns>>()) {
			_case_begin_1a860e0b0:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ab814515_StructIns>();
			}
		}
		else {
			_case_begin_1a860e3bd:;
			{
				return nullptr;
			}
		}
		_match_end_1a860e368:;
	}
}



inline jule::Ptr<_1ac44770d_Trait> _1a5918004_trt(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ac44770d_Trait>>()) {
			_case_begin_1a8610358:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1ac44770d_Trait>();
			}
		}
		else {
			_case_begin_1a8610523:;
			{
				return nullptr;
			}
		}
		_match_end_1a86104bd:;
	}
}



inline jule::Ptr<_1a592132b_Map> _1a59182ce_map(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a592132b_Map>>()) {
			_case_begin_1a8610ca4:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a592132b_Map>();
			}
		}
		else {
			_case_begin_1a861107e:;
			{
				return nullptr;
			}
		}
		_match_end_1a8611029:;
	}
}



inline jule::Ptr<_1a59203b3_Tuple> _1a59185a9_tup(_1a5913e9a_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a59203b3_Tuple>>()) {
			_case_begin_1a861238d:;
			{
				return (*_self_)._field_kind.operator jule::Ptr<_1a59203b3_Tuple>();
			}
		}
		else {
			_case_begin_1a861227d:;
			{
				return nullptr;
			}
		}
		_match_end_1a8612228:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a5913e9a_TypeKind _Src) {
	_Stream << _1a59145b6_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1a591916a_checked(_1a5918a0a_TypeSymbol* _self_) {
	return ((*_self_)._field_kind != nullptr);
}



inline void _1a59193ac_remove_kind(_1a5918a0a_TypeSymbol* _self_) {
	(*_self_)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5918a0a_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5919cd6_to_str(_1a591970e_Prim* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a591a18d_equals(jule::Ptr<_1a591970e_Prim> _self_,jule::Ptr<_1a5913e9a_TypeKind> _33326_other) {
	jule::Ptr<_1a591970e_Prim> _33413_prim = _1a591673e_prim(_33326_other.ptr());
	if ((_33413_prim == nullptr)) {
		return false;
	}
	return _self_.get()._field_kind == _33413_prim.get()._field_kind;
}



inline jule::Bool _1a591a666_is_i8(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _1a591a941_is_i16(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _1a591ac1b_is_i32(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _1a591aee6_is_i64(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _1a591b2c1_is_u8(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _1a591b59b_is_u16(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _1a591b876_is_u32(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _1a591bb51_is_u64(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _1a591be2b_is_f32(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _1a591c206_is_f64(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _1a591c4d1_is_int(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _1a591c7ab_is_uint(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _1a591ca86_is_uintptr(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _1a591cd61_is_bool(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _1a591d13b_is_str(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _1a591d416_is_any(_1a591970e_Prim* _self_) {
	return ((*_self_)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1a591970e_Prim _Src) {
	_Stream << _1a5919cd6_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a591dd40_to_str(_1a591d768_Sptr* _self_) {
	return jule::Str("&", 1) + _1a59145b6_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a591e1e7_equals(jule::Ptr<_1a591d768_Sptr> _self_,jule::Ptr<_1a5913e9a_TypeKind> _40226_other) {
	jule::Ptr<_1a591d768_Sptr> _40313_sptr = _1a5916a19_sptr(_40226_other.ptr());
	if ((_40313_sptr == nullptr)) {
		return false;
	}
	return _1a591496d_equals(_self_.get()._field_elem, _40313_sptr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a591d768_Sptr _Src) {
	_Stream << _1a591dd40_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a591eba9_to_str(_1a591e549_Slc* _self_) {
	return jule::Str("[]", 2) + _1a59145b6_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a5920061_equals(jule::Ptr<_1a591e549_Slc> _self_,jule::Ptr<_1a5913e9a_TypeKind> _42126_other) {
	jule::Ptr<_1a591e549_Slc> _42213_slc = _1a5917674_slc(_42126_other.ptr());
	if ((_42213_slc == nullptr)) {
		return false;
	}
	return _1a591496d_equals(_self_.get()._field_elem, _42213_slc.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a591e549_Slc _Src) {
	_Stream << _1a591eba9_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a5920a23_to_str(_1a59203b3_Tuple* _self_) {
	jule::Str _43817_s = jule::Str("(", 1);
	_43817_s+=_1a59145b6_to_str((*_self_)._field_types[0LL].ptr());
	{
		auto expr = (*_self_)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a8625c0e:;
		if (it != expr.end()) {
			jule::Ptr<_1a5913e9a_TypeKind> &_1a8625db8_t = *it;
			{
				_43817_s+=jule::Str(",", 1);
				_43817_s+=_1a59145b6_to_str(_1a8625db8_t.ptr());
			}
			_iter_next_1a8625c0e:;
			++it;
			goto _iter_begin_1a8625c0e;
		}
		_iter_end_1a8625c0e:;
	}
	_43817_s+=jule::Str(")", 1);
	return _43817_s;
}



inline jule::Bool _1a5920dca_equals(jule::Ptr<_1a59203b3_Tuple> _self_,jule::Ptr<_1a5913e9a_TypeKind> _44926_other) {
	jule::Ptr<_1a59203b3_Tuple> _45013_tup = _1a59185a9_tup(_44926_other.ptr());
	if ((_45013_tup == nullptr)) {
		return false;
	}
	if (_self_.get()._field_types.len() != static_cast<jule::I64>(static_cast<jule::I64>(_45013_tup.get()._field_types.len()))) {
		return false;
	}
	jule::I64 _45917_i = 0LL;
	for (; _45917_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_types.len())); (_45917_i)++) {
		{
			if ((!(_1a591496d_equals(_self_.get()._field_types[_45917_i], _45013_tup.get()._field_types[_45917_i])))) {
				return false;
			}
		}
	_iter_next_1a8628e32:;
	}
	_iter_end_1a8628e32:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a59203b3_Tuple _Src) {
	_Stream << _1a5920a23_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a5921903_to_str(_1a592132b_Map* _self_) {
	jule::Str _47917_s = jule::Str("[", 1);
	_47917_s+=_1a59145b6_to_str((*_self_)._field_key.ptr());
	_47917_s+=jule::Str(":", 1);
	_47917_s+=_1a59145b6_to_str((*_self_)._field_val.ptr());
	_47917_s+=jule::Str("]", 1);
	return _47917_s;
}



inline jule::Bool _1a5921caa_equals(jule::Ptr<_1a592132b_Map> _self_,jule::Ptr<_1a5913e9a_TypeKind> _48826_other) {
	jule::Ptr<_1a592132b_Map> _48913_map = _1a59182ce_map(_48826_other.ptr());
	if ((_48913_map == nullptr)) {
		return false;
	}
	return _1a591496d_equals(_self_.get()._field_key, _48913_map.get()._field_key) && _1a591496d_equals(_self_.get()._field_val, _48913_map.get()._field_val);
}







std::ostream &operator<<(std::ostream &_Stream, _1a592132b_Map _Src) {
	_Stream << _1a5921903_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a59228d2_to_str(_1a592230a_Arr* _self_) {
	jule::Str _50717_s = jule::Str("[", 1);
	_50717_s+=_1ac445de3_itoa((*_self_)._field_n);
	_50717_s+=jule::Str("]", 1);
	_50717_s+=_1a59145b6_to_str((*_self_)._field_elem.ptr());
	return _50717_s;
}



inline jule::Bool _1a5922c89_equals(jule::Ptr<_1a592230a_Arr> _self_,jule::Ptr<_1a5913e9a_TypeKind> _51526_other) {
	jule::Ptr<_1a592230a_Arr> _51613_arr = _1a5917399_arr(_51526_other.ptr());
	if ((_51613_arr == nullptr)) {
		return false;
	}
	return (_self_.get()._field_n == _51613_arr.get()._field_n) && _1a591496d_equals(_self_.get()._field_elem, _51613_arr.get()._field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, _1a592230a_Arr _Src) {
	_Stream << _1a59228d2_to_str(&_Src);
	return _Stream;
}



inline jule::Str _1a59236b3_to_str(_1a59230db_Ptr* _self_) {
	if (_1a5923e33_is_unsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + _1a59145b6_to_str((*_self_)._field_elem.ptr());
}



inline jule::Bool _1a5923a6a_equals(jule::Ptr<_1a59230db_Ptr> _self_,jule::Ptr<_1a5913e9a_TypeKind> _53926_other) {
	jule::Ptr<_1a59230db_Ptr> _54013_ptr = _1a5916ce4_ptr(_53926_other.ptr());
	if ((_54013_ptr == nullptr)) {
		return false;
	}
	return _1a591496d_equals(_self_.get()._field_elem, _54013_ptr.get()._field_elem);
}



inline jule::Bool _1a5923e33_is_unsafe(_1a59230db_Ptr* _self_) {
	return ((*_self_)._field_elem == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a59230db_Ptr _Src) {
	_Stream << _1a59236b3_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5926045_Referencer _Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd532d5b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "prod:" << _Src._field_prod << ", ";
	_Stream << "test:" << _Src._field_test << ", ";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "cpp_std:" << _Src._field_cpp_std;
	_Stream << "}";
	return _Stream;
}



inline void _1dd53b0c8_push_err(_1aa0a0203_DirectiveEval* _self_,_1aa07563a_Token _2127_t,jule::Str _2137_fmt,jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_1c4810251_Log(static_cast<jule::I64>(1LL),_2127_t._field_row,_2127_t._field_column,_2127_t._field_file.get()._field_path,_1c4810938_logf(_2137_fmt,_2150_args),jule::Str(),jule::Str()));
}



inline jule::Slice<jule::Slice<_1aa07563a_Token>> _1dd53c360_split_operans(_1aa0a0203_DirectiveEval* _self_,jule::Str _3332_op,jule::Slice<_1aa07563a_Token>& _3352_tokens) {
	jule::Slice<jule::Slice<_1aa07563a_Token>> _3417_parts = jule::Slice<jule::Slice<_1aa07563a_Token>>::alloc(0LL,10LL);
	jule::I64 _3617_i = 0LL;
	jule::I64 _3717_range_n = 0LL;
	jule::I64 _3817_last = 0LL;
	for (; _3617_i < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len())) - 1LL))); (_3617_i)++) {
		{
			_1aa07563a_Token _4017_b = _3352_tokens[_3617_i];
			if (_4017_b._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4017_b._field_kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab692d44:;
						{
							(_3717_range_n)++;
							goto _iter_next_1ab691cbb;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab692daa:;
						{
							(_3717_range_n)--;
						}
					}
					_match_end_1ab692cab:;
				}
			}
			if ((_3717_range_n > 0LL) || (_4017_b._field_id != static_cast<jule::U64>(7LLU))) {
				goto _iter_next_1ab691cbb;
			}
			if (_4017_b._field_kind == _3332_op) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last,_3617_i));
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			}
		}
	_iter_next_1ab691cbb:;
	}
	_iter_end_1ab691cbb:;
	if (_3817_last < static_cast<jule::I64>(static_cast<jule::I64>(_3352_tokens.len()))) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3352_tokens.slice(_3817_last));
	} else {
		_1dd53b0c8_push_err(&(*_self_), _3352_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return _3417_parts;
}



inline jule::Bool _1dd53846b_eval_directive_ident(_1aa0a0203_DirectiveEval* _self_,jule::Str _7435_ident) {
	if (_7435_ident.empty()) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab697563:;
		if (it != expr.end()) {
			jule::Str &_1ab6978c6_var = *it;
			{
				if (_1ab6978c6_var == _7435_ident) {
					return true;
				}
			}
			_iter_next_1ab697563:;
			++it;
			goto _iter_begin_1ab697563;
		}
		_iter_end_1ab697563:;
	}
	return false;
}



inline jule::Bool _1dd546b94_eval_directive_part(_1aa0a0203_DirectiveEval* _self_,jule::Slice<_1aa07563a_Token> _8842_part) {
	jule::Bool _8913_logical_not = (_8842_part[0LL]._field_id == static_cast<jule::U64>(7LLU)) && (_8842_part[0LL]._field_kind == jule::Str("!", 1));
	if (_8913_logical_not) {
		_8842_part=_8842_part.slice(1LL);
	}
	if ((_8842_part.len() > 1LL)) {
		_1dd53b0c8_push_err(&(*_self_), _8842_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _9917_result = _1dd53846b_eval_directive_ident(&(*_self_), _8842_part[0LL]._field_kind);
	if (_8913_logical_not) {
		_9917_result=(!(_9917_result));
	}
	return _9917_result;
}



inline jule::Bool _1dd54d67e_eval(_1aa0a0203_DirectiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_args.len() == 0LL)) {
		_1dd53b0c8_push_err(&(*_self_), (*_self_)._field_d.get()._field_tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;
	}
	jule::Bool _11217_result = false;
	jule::Slice<jule::Slice<_1aa07563a_Token>> _11417_logical_or_parts = _1dd53c360_split_operans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_args);
	if ((_11417_logical_or_parts == nullptr)) {
		return false;
	}
	{
		auto &expr = _11417_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_1ab69e702:;
		if (it != expr.end()) {
			jule::Slice<_1aa07563a_Token> _1ab69e4c1_part = *it;
			{
				jule::Bool _12021_and = true;
				jule::Slice<jule::Slice<_1aa07563a_Token>> _12121_logical_and_parts = _1dd53c360_split_operans(&(*_self_), jule::Str("&&", 2),_1ab69e4c1_part);
				if ((_12121_logical_and_parts == nullptr)) {
					return false;
				}
				{
					auto &expr = _12121_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_1ab6a0d96:;
					if (it != expr.end()) {
						jule::Slice<_1aa07563a_Token> _1ab6a0b76_and_part = *it;
						{
							_1aa07563a_Token _12721_first = _1ab6a0b76_and_part[0LL];
							if ((_12721_first._field_id == static_cast<jule::U64>(3LLU)) && (_12721_first._field_kind == jule::Str("(", 1))) {
								_1aa07563a_Token _12925_end = _1ab6a0b76_and_part[(_1ab6a0b76_and_part.len() - 1LL)];
								if ((_12925_end._field_id != static_cast<jule::U64>(3LLU)) || (_12925_end._field_kind != jule::Str(")", 1))) {
									_1dd53b0c8_push_err(&(*_self_), _12721_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;
								}
								_1ab6a0b76_and_part=_1ab6a0b76_and_part.slice(1LL,(_1ab6a0b76_and_part.len() - 1LL));
							}
							_12021_and=_12021_and && _1dd546b94_eval_directive_part(&(*_self_), _1ab6a0b76_and_part);
						}
						_iter_next_1ab6a0d96:;
						++it;
						goto _iter_begin_1ab6a0d96;
					}
					_iter_end_1ab6a0d96:;
				}
				_11217_result=_11217_result || _12021_and;
			}
			_iter_next_1ab69e702:;
			++it;
			goto _iter_begin_1ab69e702;
		}
		_iter_end_1ab69e702:;
	}
	return _11217_result;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0a0203_DirectiveEval _Src) {
	_Stream << "DirectiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a599d551_JuleImporter> static__1a599dbe4_new(_1dd532d5b_CompileInfo _5823_info) {
	jule::Ptr<_1a599d551_JuleImporter> _5917_imp = jule::new_ptr<_1a599d551_JuleImporter>(_1a599d551_JuleImporter(jule::Slice<jule::Str>({_1c4820a47_PATH_STDLIB}),jule::Str(),jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>>(),jule::Slice<jule::Str>()));
	_1dd5339e9_init_vars(_5917_imp.get()._field_vars,_5823_info);
	return _5917_imp;
}



inline jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _1a599debe_all_packages(_1a599d551_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;
}



inline void _1a599e431_set_mod_path(_1a599d551_JuleImporter* _self_,jule::Str _7535_path) {
	(*_self_)._field_mod=_7535_path;
}



inline jule::Str _1a599e70b_get_mod_path(_1a599d551_JuleImporter* _self_) {
	return (*_self_)._field_mod;
}



inline jule::Str _1a599eab3_mod_by_id(_1a599d551_JuleImporter* _self_,jule::I64 _8328_id) {
	return (*_self_)._field_mods[_8328_id];
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a599ee6a_get_import(_1a599d551_JuleImporter* _self_,jule::Str _8733_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ab6a93aa:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1ab6a96c9_p = *it;
			{
				if (_1ab6a96c9_p.get()._field_path == _8733_path) {
					return _1ab6a96c9_p;
				}
			}
			_iter_next_1ab6a93aa:;
			++it;
			goto _iter_begin_1ab6a93aa;
		}
		_iter_end_1ab6a93aa:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<jule::Ptr<_1dd582707_Ast>>,jule::Slice<_1c4810251_Log>> _1a59a03ee_import_package(_1a599d551_JuleImporter* _self_,jule::Str _9637_path,jule::Bool _9648_update_mod) {
	jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>> _9717_dirents = ({
		auto except = static__1c478d2de_read(_9637_path);
		(except.ok()) ? (except.result) : ({{
			return std::make_tuple(nullptr,jule::Slice<_1c4810251_Log>({_1a599ceac_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
			return std::make_tuple(nullptr,jule::Slice<_1c4810251_Log>({_1a599ceac_flat_compiler_err(jule::Str("connot read package directory: ", 31) + _9637_path)}));
		} jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>();});
	});
	if (_9648_update_mod) {
		jule::Str _10217_new_mod = _1dd542332_find_module_file_deep(_9637_path);
		if (_10217_new_mod != (*_self_)._field_mod) {
			(*_self_)._field_mod=_10217_new_mod;
			jule::Slice<_1c4810251_Log> _10525_errs = _1dd544147_check_module_file((*_self_)._field_mod);
			if ((_10525_errs.len() != 0LL)) {
				return std::make_tuple(nullptr,_10525_errs);
			}
		}
	}
	jule::Slice<jule::Ptr<_1dd582707_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1dd582707_Ast>>::alloc(0LL,static_cast<jule::I64>(_9717_dirents.len()));
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1ab6aeadb:;
		if (it != expr.end()) {
			jule::Ptr<_1dc3797b9_DirEntry> _1ab6aec73_dirent = *it;
			{
				if (_1dc309947_is_dir(_1ab6aec73_dirent.get()._field_stat.ptr()) || (!(_1c47561a8_has_suffix(_1ab6aec73_dirent.get()._field_name,jule::Str(".jule", 5))))) {
					goto _iter_next_1ab6aeadb;
				}
				jule::Str _11917__path = _1c4789ac1_join(jule::Slice<jule::Str>({_9637_path,_1ab6aec73_dirent.get()._field_name}));
				jule::Ptr<_1aa07b982_File> _12021_file = _1aa07d522_new_file_set(_11917__path);
				_1aa07c422_fill(_12021_file.ptr(), _1a599cb9e_read_buff(_12021_file.get()._field_path));
				jule::Slice<_1c4810251_Log> _12221_errors = _1aa08b266_lex(_12021_file,static_cast<jule::I64>(0LL));
				if ((_12221_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_1aa5da8b4_FileInfo> _12721_finfo = _1aa5db200_parse_file(_12021_file);
				if ((_12721_finfo.get()._field_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_12721_finfo.get()._field_errors);
				}
				if ((!(_1dd531be5_is_pass_file_annotation(_1ab6aec73_dirent.get()._field_name)))) {
					goto _iter_next_1ab6aeadb;
				}
				jule::Bool _13718_r;
				jule::Slice<_1c4810251_Log> _13725_logs;
				std::tie(_13718_r,_13725_logs) = _1a59a0c4b_is_pass_build_directives(&(*_self_), _12721_finfo.get()._field_ast);
				if ((_13725_logs.len() > 0LL)) {
					return std::make_tuple(nullptr,_13725_logs);
				}
				if ((!(_13718_r))) {
					goto _iter_next_1ab6aeadb;
				}
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_ast);
			}
			_iter_next_1ab6aeadb:;
			++it;
			goto _iter_begin_1ab6aeadb;
		}
		_iter_end_1ab6aeadb:;
	}
	return std::make_tuple(_11217_asts,nullptr);
}



inline void _1a59a071d_imported(_1a599d551_JuleImporter* _self_,jule::Ptr<_1ac580d41_ImportInfo> _15335_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ab6b7330:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1ab6b764e_p = *it;
			{
				if ((_1ab6b764e_p.get()._field_cpp_linked == _15335_imp.get()._field_cpp_linked) && (_1ab6b764e_p.get()._field_link_path == _15335_imp.get()._field_link_path)) {
					return;
				}
			}
			_iter_next_1ab6b7330:;
			++it;
			goto _iter_begin_1ab6b7330;
		}
		_iter_end_1ab6b7330:;
	}
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1a87915e9:;
			if (it != expr.end()) {
				jule::I64 _1a8791819_i = it - expr.begin();
				jule::Str _1a879196d_mod = *it;
				{
					if ((*_self_)._field_mod == _1a879196d_mod) {
						_15335_imp.get()._field_mod_id=_1a8791819_i;
						goto _julec_label_setted;
					}
				}
				_iter_next_1a87915e9:;
				++it;
				_1a8791819_i++;
				goto _iter_begin_1a87915e9;
			}
			_iter_end_1a87915e9:;
		}
		_15335_imp.get()._field_mod_id=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);
		_julec_label_setted:;
	}
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15335_imp);
}



inline std::tuple<jule::Bool,jule::Slice<_1c4810251_Log>> _1a59a0c4b_is_pass_build_directives(_1a599d551_JuleImporter* _self_,jule::Ptr<_1dd582707_Ast>& _17948_file) {
	{
		auto &expr = _17948_file.get()._field_top_directives;
		auto it = expr.begin();
		_iter_begin_1a8794ce5:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1a8794e16_td = *it;
			{
				if ((_1a8794e16_td.get()._field_tag._field_kind != jule::Str("build", 5))) {
					goto _iter_next_1a8794ce5;
				}
				_1aa0a0203_DirectiveEval _18421_de = _1aa0a0203_DirectiveEval(jule::Slice<_1c4810251_Log>(),_1a8794e16_td,(*_self_)._field_vars);
				jule::Bool _18817_result = _1dd54d67e_eval(&_18421_de);
				if ((_18421_de._field_logs.len() > 0LL)) {
					return std::make_tuple(false,_18421_de._field_logs);
				}
				if ((!(_18817_result))) {
					return std::make_tuple(false,nullptr);
				}
			}
			_iter_next_1a8794ce5:;
			++it;
			goto _iter_begin_1a8794ce5;
		}
		_iter_end_1a8794ce5:;
	}
	return std::make_tuple(true,nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a599d551_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a59a3e6e_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a59a4b51_is_common_ordered_0(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>& _1737_s,jule::Ptr<_1ab810b3d_Struct> _1746_t) {
	jule::Ptr<_1ab810b3d_Struct>* _1817_p = (&(_1746_t.get()._field_depends[0LL]));
	jule::Ptr<_1ab810b3d_Struct>* _1913_end = _1817_p + static_cast<jule::I64>(static_cast<jule::I64>(_1746_t.get()._field_depends.len()));
	{
		auto &expr = _1737_s;
		auto it = expr.begin();
		_iter_begin_1aa62b460:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> &_1aa63380d_tt = *it;
			{
				{
					if (_1aa63380d_tt == _1746_t) {
						goto _iter_end_1aa62b460;
					}
					if (((*(_1817_p)).get()._field_cpp_linked || ((*(_1817_p)).get()._field_depends.len() == 0LL)) || (_1aa63380d_tt == (*(_1817_p)))) {
						(_1817_p)++;
						if (_1817_p == _1913_end) {
							return true;
						}
					}
				}
			}
			_iter_next_1aa62b460:;
			++it;
			goto _iter_begin_1aa62b460;
		}
		_iter_end_1aa62b460:;
	}
	return false;
}



inline void static__1a59a4dc6_order_common_0(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>& _3840_s) {
	jule::I64 _3917_i = 0LL;
	{
		auto &expr = _3840_s;
		auto it = expr.begin();
		_iter_begin_1aa12d9ac:;
		if (it != expr.end()) {
			jule::I64 _1aa1480ae_j = it - expr.begin();
			jule::Ptr<_1ab810b3d_Struct> _1aa338eb4_t = *it;
			{
				if (_1aa338eb4_t.get()._field_cpp_linked || (_1aa338eb4_t.get()._field_depends.len() == 0LL)) {
					_3840_s.swap(_3917_i,_1aa1480ae_j);
					(_3917_i)++;
				}
			}
			_iter_next_1aa12d9ac:;
			++it;
			_1aa1480ae_j++;
			goto _iter_begin_1aa12d9ac;
		}
		_iter_end_1aa12d9ac:;
	}
	jule::I64 _4717_j = _3917_i;
	for (; _4717_j < static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())); (_4717_j)++) {
		{
			jule::I64 _4921_k = _3917_i;
			for (; _4921_k < static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3840_s.len())) - 1LL))); (_4921_k)++) {
				{
					if ((!(static__1a59a4b51_is_common_ordered_0(_3840_s,_3840_s[_4921_k])))) {
						_3840_s.swap(_4921_k,static_cast<jule::I64>((_4921_k + 1LL)));
					}
				}
			_iter_next_1aa82b60a:;
			}
			_iter_end_1aa82b60a:;
		}
	_iter_next_1aa79b05d:;
	}
	_iter_end_1aa79b05d:;
}



inline void static__1a59a514b_order_structures(jule::Slice<jule::Ptr<_1ab810b3d_Struct>>& _6041_structs) {
	static__1a59a4dc6_order_common_0(_6041_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1a59a4414_DefineOrderer _Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



inline void _1a59ac241_optimize_child(jule::Ptr<_1a59aba6a_ScopeDeadCode> _self_,jule::Ptr<_1ac56022c_Scope>& _2739_s) {
	jule::Ptr<_1a59aba6a_ScopeDeadCode> _2817_sdc = jule::new_ptr<_1a59aba6a_ScopeDeadCode>(_1a59aba6a_ScopeDeadCode(_self_,_2739_s,(&(_2739_s.get()._field_stmts)),jule::I64()));
	{
		_1a59ac9e4_optimize_stmts(_2817_sdc);
	}
}



inline void _1a59ac483_eliminate_followed(_1a59aba6a_ScopeDeadCode* _self_) {
	(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	jule::Ptr<_1a59aba6a_ScopeDeadCode> _3817_parent = (*_self_)._field_parent;
	while ((_3817_parent != nullptr)) {
		{
			(*(_3817_parent.get()._field_stmts))=(*(_3817_parent.get()._field_stmts)).slice(0LL,(_3817_parent.get()._field_i + 1LL));
			_3817_parent=_3817_parent.get()._field_parent;
		}
	_iter_next_1aba1403e:;
	}
	_iter_end_1aba1403e:;
}



inline void _1a59ac7a2_optimize_stmt(jule::Ptr<_1a59aba6a_ScopeDeadCode> _self_,jule::Any _4544_st) {
	{
		auto &_match_expr{ _4544_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac56022c_Scope>>()) {
			_case_begin_1abc64ee8:;
			{
				jule::Ptr<_1ac56022c_Scope> _4821_scope = _4544_st.operator jule::Ptr<_1ac56022c_Scope>();
				if (_4821_scope.get()._field_deferred) {
					_1a59acd68_eliminate_dead_code_of_scope(_4821_scope);
				} else {
					_1a59ac241_optimize_child(_self_, _4821_scope);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1abc782a3:;
			{
				{
					auto &_match_expr{ _4544_st.operator jule::Ptr<_1a58cee44_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>()) {
						_case_begin_1abd42449:;
						{
							_1a59ac483_eliminate_followed(_self_.ptr());
						}
					}
					_match_end_1abd42746:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac564e79_RetSt>>()) {
			_case_begin_1abc65900:;
			{
				_1a59ac483_eliminate_followed(_self_.ptr());
			}
		}
		_match_end_1abc6516e:;
	}
}



inline void _1a59ac9e4_optimize_stmts(jule::Ptr<_1a59aba6a_ScopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; _self_.get()._field_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_stmts->len())); (_self_.get()._field_i)++) {
		{
			_1a59ac7a2_optimize_stmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1aa4584e0:;
	}
	_iter_end_1aa4584e0:;
}







std::ostream &operator<<(std::ostream &_Stream, _1a59aba6a_ScopeDeadCode _Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void static__1a59ce807_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a59ce96c_print(jule::Str _2025_escape,jule::Str _2038_text) {
	jule::out(_2025_escape);
	jule::out(_2038_text);
	static__1a59ce807_reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a59ce3d9_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a59d0e35_log_flat(_1c4810251_Log& _1429_l) {
	jule::outln(_1429_l._field_text);
}



inline void static__1a59d11aa_log_error(_1c4810251_Log& _1930_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1930_l._field_text);
	static__1a59ce807_reset();
	if ((_1930_l._field_path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1930_l._field_path);
	}
	if ((_1930_l._field_row != 0LL) && (_1930_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ac445de3_itoa(_1930_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ac445de3_itoa(_1930_l._field_column));
	}
	if ((_1930_l._field_line.len() != 0LL)) {
		jule::Str _3621_line = _1c47864b3_trim_left(_1930_l._field_line,jule::Str("\r\n\v\b ", 5));
		jule::I64 _3721_offset = ((_1930_l._field_line.len() - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) + 1LL);
		jule::I64 _3821_old_len = _3621_line.len();
		_3621_line=_1c47864b3_trim_left(_3621_line,jule::Str("\t", 1));
		if (_3821_old_len != static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))) {
			_3721_offset+=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_3821_old_len - static_cast<jule::I64>(static_cast<jule::I64>(_3621_line.len()))))) << 3LLU);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ac445de3_itoa(_1930_l._field_row);
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1c3ad1c93_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1c3ad1c93_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_1930_l._field_column - _3721_offset)));
		jule::out(jule::Str("^", 1));
		if ((_1930_l._field_suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1c3ad1c93_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a59ce96c_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1930_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a59d1430_log(_1c4810251_Log& _6524_l) {
	{
		auto &_match_expr{ _6524_l._field_kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ab8e89e5:;
			{
				static__1a59d0e35_log_flat(_6524_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1abbdc0d5:;
			{
				static__1a59d11aa_log_error(_6524_l);
			}
		}
		_match_end_1abb1ee5d:;
	}
}



inline void static__1a59d16a5_print_logs(jule::Slice<_1c4810251_Log>& _7531_logs) {
	{
		auto &expr = _7531_logs;
		auto it = expr.begin();
		_iter_begin_1abce0e0e:;
		if (it != expr.end()) {
			_1c4810251_Log &_1aa633b60_l = *it;
			{
				static__1a59d1430_log(_1aa633b60_l);
			}
			_iter_next_1abce0e0e:;
			++it;
			goto _iter_begin_1abce0e0e;
		}
		_iter_end_1abce0e0e:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ac445de3_itoa(static_cast<jule::I64>(_7531_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a59d0918_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a631ed5b_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6320279_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "node:" << _Src._field_node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63207da_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6321753_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a632326b_ScopeOptimizer> static__1a6323711_new(jule::Ptr<_1ac56022c_Scope> _4527_scope) {
	return jule::new_ptr<_1a632326b_ScopeOptimizer>(_1a632326b_ScopeOptimizer(jule::I64(),_4527_scope));
}



inline void _1a63239db_set_current_stmt(_1a632326b_ScopeOptimizer* _self_,jule::Any _5139_stmt) {
	(*_self_)._field_scope.get()._field_stmts[(*_self_)._field_i]=_5139_stmt;
}



inline void _1a6323d0a_optimize_data(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1a58cee44_Data> _5536_d) {
	{
		auto &_match_expr{ _5536_d.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
			_case_begin_1abc17880:;
			{
				jule::Ptr<_1ab81a0ed_FnCallExprModel> _5821_m = _5536_d.get()._field_model.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>();
				if (_1dc2523c8_PRODUCTION) {
					if ((!(_1ab837093_is_builtin(_5821_m.get()._field_func.ptr()))) && _1a632724d_is_std_package(_5821_m.get()._field_func.get()._field_decl.get()._field_token._field_file.get()._field_path,jule::Str("debug", 5))) {
						_1a63239db_set_current_stmt(&(*_self_), jule::Any(nullptr));
						return;
					}
				}
			}
		}
		_match_end_1abc1782a:;
	}
	static__1a632985a_optimize(_5536_d.get()._field_model);
}



inline void _1a6324129_optimize_var(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1a588601b_Var> _7035_v) {
	if ((_7035_v.get()._field_value != nullptr)) {
		static__1a632985a_optimize(_7035_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1a6324448_optimize_conditional(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac560e86_Conditional> _7643_c) {
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd5c387:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56064a_If> _1abd5c4a8_elif = *it;
			{
				static__1a632985a_optimize(_1abd5c4a8_elif.get()._field_expr);
				_1a6326a66_optimize_child(&(*_self_), _1abd5c4a8_elif.get()._field_scope);
			}
			_iter_next_1abd5c387:;
			++it;
			goto _iter_begin_1abd5c387;
		}
		_iter_end_1abd5c387:;
	}
	if ((_7643_c.get()._field_default != nullptr)) {
		_1a6326a66_optimize_child(&(*_self_), _7643_c.get()._field_default.get()._field_scope);
	}
	if ((!(_1dc252e01_OPT_COND))) {
		return;
	}
	jule::Bool _8917_const_case = false;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd5ea71:;
		if (it != expr.end()) {
			jule::I64 _1abd5ebb4_i = it - expr.begin();
			jule::Ptr<_1ac56064a_If> _1abd5ed5c_elif = *it;
			{
				if ((!(_1a6327616_is_constant_valid_conditional_case(_1abd5ed5c_elif)))) {
					goto _iter_next_1abd5ea71;
				}
				_8917_const_case=true;
				_7643_c.get()._field_elifs=_7643_c.get()._field_elifs.slice(0LL,_1abd5ebb4_i);
				_7643_c.get()._field_default=jule::new_ptr<_1ac560a68_Else>(_1ac560a68_Else(_1abd5ed5c_elif.get()._field_scope));
				goto _iter_end_1abd5ea71;
			}
			_iter_next_1abd5ea71:;
			++it;
			_1abd5ebb4_i++;
			goto _iter_begin_1abd5ea71;
		}
		_iter_end_1abd5ea71:;
	}
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1ac56064a_If>* _10917_i = (&(_7643_c.get()._field_elifs[0LL]));
	jule::Ptr<_1ac56064a_If>* _11013_end = (&(_7643_c.get()._field_elifs[(_7643_c.get()._field_elifs.len() - 1LL)]));
	for (; _10917_i <= _11013_end; (_10917_i)++) {
		{
			{
				if (_1a63280c8_is_unreachable_conditional_case((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				}
			}
		}
	_iter_next_1abd5c0ce:;
	}
	_iter_end_1abd5c0ce:;
	if ((_7643_c.get()._field_elifs.len() == 0LL)) {
		return;
	}
	if ((!(_8917_const_case))) {
		return;
	}
	jule::I64 _12817_only = -1LL;
	{
		auto &expr = _7643_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1abd64aba:;
		if (it != expr.end()) {
			jule::I64 _1abd64bec_j = it - expr.begin();
			jule::Ptr<_1ac56064a_If> _1abd64da6_elif = *it;
			{
				if ((_1abd64da6_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;
					}
					_12817_only=_1abd64bec_j;
				}
			}
			_iter_next_1abd64aba:;
			++it;
			_1abd64bec_j++;
			goto _iter_begin_1abd64aba;
		}
		_iter_end_1abd64aba:;
	}
	if ((_12817_only != -1LL)) {
		_1a63239db_set_current_stmt(&(*_self_), jule::Any(_7643_c.get()._field_elifs[_12817_only].get()._field_scope));
	}
}



inline void _1a6324767_optimize_match(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac563ede_Match> _14537_m) {
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd6720a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56463d_Case> _1abd6732b_case = *it;
			{
				{
					auto &expr = _1abd6732b_case.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1abd679d0:;
					if (it != expr.end()) {
						jule::Ptr<_1a58cee44_Data> _1abd67a68_expr = *it;
						{
							static__1a632985a_optimize(_1abd67a68_expr.get()._field_model);
						}
						_iter_next_1abd679d0:;
						++it;
						goto _iter_begin_1abd679d0;
					}
					_iter_end_1abd679d0:;
				}
				_1a6326a66_optimize_child(&(*_self_), _1abd6732b_case.get()._field_scope);
			}
			_iter_next_1abd6720a:;
			++it;
			goto _iter_begin_1abd6720a;
		}
		_iter_end_1abd6720a:;
	}
	if ((_14537_m.get()._field_default != nullptr)) {
		_1a6326a66_optimize_child(&(*_self_), _14537_m.get()._field_default.get()._field_scope);
	}
	if ((!(_1dc252e01_OPT_COND))) {
		return;
	}
	jule::Bool _16017_const_case = false;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd6997c:;
		if (it != expr.end()) {
			jule::I64 _1abd69ac0_i = it - expr.begin();
			jule::Ptr<_1ac56463d_Case> _1abd69c68_case = *it;
			{
				if ((!(_1a6327c87_is_constant_valid_match_case(_1abd69c68_case)))) {
					goto _iter_next_1abd6997c;
				}
				_16017_const_case=true;
				_14537_m.get()._field_cases=_14537_m.get()._field_cases.slice(0LL,_1abd69ac0_i);
				_1abd69c68_case.get()._field_exprs=nullptr;
				_14537_m.get()._field_default=_1abd69c68_case;
				goto _iter_end_1abd6997c;
			}
			_iter_next_1abd6997c:;
			++it;
			_1abd69ac0_i++;
			goto _iter_begin_1abd6997c;
		}
		_iter_end_1abd6997c:;
	}
	if ((_14537_m.get()._field_cases.len() == 0LL)) {
		return;
	}
	jule::Ptr<_1ac56463d_Case>* _17917_i = (&(_14537_m.get()._field_cases[0LL]));
	jule::Ptr<_1ac56463d_Case>* _18013_end = (&(_14537_m.get()._field_cases[(_14537_m.get()._field_cases.len() - 1LL)]));
	for (; _17917_i <= _18013_end; (_17917_i)++) {
		{
			{
				if (_1a6328419_is_unreachable_match_case((*(_17917_i)))) {
					(*(_17917_i))=nullptr;
				}
			}
		}
	_iter_next_1abd66e52:;
	}
	_iter_end_1abd66e52:;
	if ((!(_16017_const_case))) {
		return;
	}
	jule::I64 _19417_only = -1LL;
	{
		auto &expr = _14537_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1abd6e300:;
		if (it != expr.end()) {
			jule::I64 _1abd6e432_j = it - expr.begin();
			jule::Ptr<_1ac56463d_Case> _1abd6e5db_case = *it;
			{
				if ((_1abd6e5db_case != nullptr)) {
					if ((_19417_only != -1LL)) {
						return;
					}
					_19417_only=_1abd6e432_j;
				}
			}
			_iter_next_1abd6e300:;
			++it;
			_1abd6e432_j++;
			goto _iter_begin_1abd6e300;
		}
		_iter_end_1abd6e300:;
	}
	if ((_19417_only != -1LL)) {
		_1a63239db_set_current_stmt(&(*_self_), jule::Any(_14537_m.get()._field_cases[_19417_only].get()._field_scope));
	}
}



inline void _1a6324a86_optimize_range_iter(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac561be0_RangeIter> _21142_it) {
	static__1a632985a_optimize(_21142_it.get()._field_expr.get()._field_model);
	_1a6326a66_optimize_child(&(*_self_), _21142_it.get()._field_scope);
}



inline void _1a6324da5_optimize_while_iter(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac5617c2_WhileIter> _21642_it) {
	static__1a632985a_optimize(_21642_it.get()._field_expr);
	_1a6326747_optimize_stmt(&(*_self_), _21642_it.get()._field_next);
	_1a6326a66_optimize_child(&(*_self_), _21642_it.get()._field_scope);
}



inline jule::Bool _1a632525c_substr(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac5636a3_Assign> _22229_a) {
	{
		auto &_match_expr{ _22229_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81cce3_SlicingExprModel>>()) {
			_case_begin_1abd7505e:;
			{
				jule::Ptr<_1ab81cce3_SlicingExprModel> _22521_sem = _22229_a.get()._field_r.get()._field_model.operator jule::Ptr<_1ab81cce3_SlicingExprModel>();
				if (_22521_sem.get()._field_expr == _22229_a.get()._field_l.get()._field_model) {
					_1a63239db_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a632106b_MutSlicingExprModel>(_1a632106b_MutSlicingExprModel(_22521_sem.get()._field_token,_22521_sem.get()._field_expr,_22521_sem.get()._field_left,_22521_sem.get()._field_right))));
					return true;
				}
			}
		}
		_match_end_1abd75009:;
	}
	return false;
}



inline jule::Bool _1a6325614_str_insert(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac5636a3_Assign> _23933_a) {
	{
		auto &_match_expr{ _23933_a.get()._field_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
			_case_begin_1abd77db9:;
			{
				jule::Ptr<_1ab8170b7_BinopExprModel> _24221_m = _23933_a.get()._field_r.get()._field_model.operator jule::Ptr<_1ab8170b7_BinopExprModel>();
				if (_24221_m.get()._field_right.get()._field_model == _23933_a.get()._field_l.get()._field_model) {
					_1a63239db_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a6321753_StrInsertBeginExprModel>(_1a6321753_StrInsertBeginExprModel(_23933_a.get()._field_l.get()._field_model,_24221_m.get()._field_left.get()._field_model))));
					return true;
				}
			}
		}
		_match_end_1abd77d64:;
	}
	return false;
}



inline jule::Bool _1a63259bb_str_assign(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac5636a3_Assign> _25433_a) {
	if ((_25433_a.get()._field_op._field_kind != jule::Str("=", 1))) {
		return false;
	}
	jule::Ptr<_1a591970e_Prim> _25813_lp = _1a591673e_prim(_25433_a.get()._field_l.get()._field_kind.ptr());
	if ((_25813_lp == nullptr) || (!(_1a591d13b_is_str(_25813_lp.ptr())))) {
		return false;
	}
	{
		
		if (_1a632525c_substr(&(*_self_), _25433_a) || _1a6325614_str_insert(&(*_self_), _25433_a)) {
			_case_begin_1abd7c396:;
			{
				return true;
			}
		}
		_match_end_1abd7c341:;
	}
	return false;
}



inline void _1a6325cda_optimize_assign(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac5636a3_Assign> _27038_assign) {
	if (_1dc2524e9_OPT_COPY && _1a63259bb_str_assign(&(*_self_), _27038_assign)) {
		return;
	}
	static__1a632985a_optimize(_27038_assign.get()._field_l.get()._field_model);
	static__1a632985a_optimize(_27038_assign.get()._field_r.get()._field_model);
	{
		auto &_match_expr{ _27038_assign.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1abd7dce3:;
			{
				if (_1dc25285c_OPT_MATH && (_1a5917c29_strct(_27038_assign.get()._field_l.get()._field_kind.ptr()) == nullptr)) {
					_27038_assign.get()._field_op._field_kind=_27038_assign.get()._field_op._field_kind.slice(0LL,(_27038_assign.get()._field_op._field_kind.len() - 1LL));
					jule::Any _28325_model = jule::Any(jule::new_ptr<_1ab8170b7_BinopExprModel>(_1ab8170b7_BinopExprModel(_27038_assign.get()._field_l,_27038_assign.get()._field_r,_27038_assign.get()._field_op)));
					static__1a632985a_optimize(_28325_model);
					{
						auto &_match_expr{ _28325_model };
						
						if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
							_case_begin_1abd82a2d:;
							{
								_27038_assign.get()._field_r=jule::new_ptr<_1ab816825_OperandExprModel>((*(_27038_assign.get()._field_r)));
								_27038_assign.get()._field_op._field_kind=jule::Str("=", 1);
								_27038_assign.get()._field_r.get()._field_model=_28325_model;
								return;
							}
						}
						_match_end_1abd829c8:;
					}
					_27038_assign.get()._field_op._field_kind+=jule::Str("=", 1);
					return;
				}
			}
		}
		_match_end_1abd800ad:;
	}
	if (_1dc25273b_OPT_APPEND) {
		{
			auto &_match_expr{ _27038_assign.get()._field_r.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>>()) {
				_case_begin_1abd84a63:;
				{
					jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel> _30425_m = _27038_assign.get()._field_r.get()._field_model.operator jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>();
					{
						auto &_match_expr{ _30425_m.get()._field_elements };
						
						if (_match_expr.type_is<jule::Ptr<_1ab81a74c_SliceExprModel>>()) {
							_case_begin_1abd85b30:;
							{
								{
									auto &_match_expr{ _30425_m.get()._field_dest };
									
									if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>() || _match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
										_case_begin_1abd86438:;
										{
											_1a63239db_set_current_stmt(&(*_self_), jule::Any(jule::new_ptr<_1a63207da_PushToSliceExprModel>(_1a63207da_PushToSliceExprModel(_30425_m.get()._field_dest,_30425_m.get()._field_elements.operator jule::Ptr<_1ab81a74c_SliceExprModel>()))));
										}
									}
									_match_end_1abd863a0:;
								}
							}
						}
						_match_end_1abd85a97:;
					}
				}
			}
			_match_end_1abd849ec:;
		}
	}
}



inline void _1a6326109_optimize_multi_assign(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac563ac1_MultiAssign> _32044_assign) {
	{
		auto &expr = _32044_assign.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1abd869aa:;
		if (it != expr.end()) {
			jule::I64 _1abd86a32_i = it - expr.begin();
			jule::Any _1abd879cd_l = *it;
			{
				static__1a632985a_optimize(_1abd879cd_l);
				_32044_assign.get()._field_l[_1abd86a32_i]=_1abd879cd_l;
			}
			_iter_next_1abd869aa:;
			++it;
			_1abd86a32_i++;
			goto _iter_begin_1abd869aa;
		}
		_iter_end_1abd869aa:;
	}
	static__1a632985a_optimize(_32044_assign.get()._field_r);
}



inline void _1a6326428_optimize_ret(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac564e79_RetSt> _32835_r) {
	static__1a632985a_optimize(_32835_r.get()._field_expr);
}



inline void _1a6326747_optimize_stmt(_1a632326b_ScopeOptimizer* _self_,jule::Any _33236_stmt) {
	{
		auto &_match_expr{ _33236_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ac56022c_Scope>>()) {
			_case_begin_1abd8999c:;
			{
				_1a6326a66_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac56022c_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1abd89a13:;
			{
				_1a6323d0a_optimize_data(&(*_self_), _33236_stmt.operator jule::Ptr<_1a58cee44_Data>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1abd89a8a:;
			{
				_1a6324129_optimize_var(&(*_self_), _33236_stmt.operator jule::Ptr<_1a588601b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac560e86_Conditional>>()) {
			_case_begin_1abd89b01:;
			{
				_1a6324448_optimize_conditional(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac560e86_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac561be0_RangeIter>>()) {
			_case_begin_1abd89b67:;
			{
				_1a6324a86_optimize_range_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac561be0_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5617c2_WhileIter>>()) {
			_case_begin_1abd89bcd:;
			{
				_1a6324da5_optimize_while_iter(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac5617c2_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
			_case_begin_1abd89c44:;
			{
				_1a6326a66_optimize_child(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac5613a4_InfIter>().get()._field_scope);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5636a3_Assign>>()) {
			_case_begin_1abd89cbb:;
			{
				_1a6325cda_optimize_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac5636a3_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563ac1_MultiAssign>>()) {
			_case_begin_1abd89d43:;
			{
				_1a6326109_optimize_multi_assign(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac563ac1_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563ede_Match>>()) {
			_case_begin_1abd89dba:;
			{
				_1a6324767_optimize_match(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac563ede_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac564e79_RetSt>>()) {
			_case_begin_1abd89e42:;
			{
				_1a6326428_optimize_ret(&(*_self_), _33236_stmt.operator jule::Ptr<_1ac564e79_RetSt>());
			}
		}
		_match_end_1abd8986a:;
	}
}



inline void _1a6326a66_optimize_child(_1a632326b_ScopeOptimizer* _self_,jule::Ptr<_1ac56022c_Scope> _35937_child) {
	jule::Ptr<_1a632326b_ScopeOptimizer> _36017_so = static__1a6323711_new(_35937_child);
	_1a6326ca8_optimize(_36017_so.ptr());
}



inline void _1a6326ca8_optimize(_1a632326b_ScopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1abd929e9:;
		if (it != expr.end()) {
			jule::I64 _1abd92a82_i = it - expr.begin();
			jule::Any _1abd92c91_stmt = *it;
			{
				(*_self_)._field_i=_1abd92a82_i;
				_1a6326747_optimize_stmt(&(*_self_), _1abd92c91_stmt);
			}
			_iter_next_1abd929e9:;
			++it;
			_1abd92a82_i++;
			goto _iter_begin_1abd929e9;
		}
		_iter_end_1abd929e9:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a632326b_ScopeOptimizer _Src) {
	_Stream << "ScopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1a632985a_optimize(jule::Any& _5533_model) {
	{
		
		if (_1dc252cd0_OPT_PTR || _1dc25285c_OPT_MATH || _1dc25297d_OPT_ACCESS || _1dc252e01_OPT_COND) {
			_case_begin_1abd93203:;
			{
				jule::Ptr<_1a63299d1_ExprOptimizer> _6221_exop = jule::new_ptr<_1a63299d1_ExprOptimizer>(_1a63299d1_ExprOptimizer(((jule::Ptr<jule::Any>)((&(_5533_model))))));
				_1a6331ce6_do(_6221_exop.ptr());
			}
		}
		_match_end_1abd93137:;
	}
}



inline jule::Bool _1a632a3a5_str_cond(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab8170b7_BinopExprModel> _6927_m) {
	jule::Ptr<_1a591970e_Prim> _7013_lp = _1a591673e_prim(_6927_m.get()._field_left.get()._field_kind.ptr());
	if ((_7013_lp == nullptr) || (!(_1a591d13b_is_str(_7013_lp.ptr())))) {
		return false;
	}
	if ((_6927_m.get()._field_op._field_kind != jule::Str("==", 2)) && (_6927_m.get()._field_op._field_kind != jule::Str("!=", 2))) {
		return false;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_left.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1abd981d6:;
			{
				std::tie(_6927_m.get()._field_left,_6927_m.get()._field_right) = std::make_tuple(_6927_m.get()._field_right,_6927_m.get()._field_left);
				goto _julec_label_opt;
			}
		}
		_match_end_1abd980c6:;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1abd97614:;
			{
				goto _match_end_1abd9936e;
			}
		}
		else {
			_case_begin_1abd993c4:;
			{
				return true;
			}
		}
		_match_end_1abd9936e:;
	}
	_julec_label_opt:;
	jule::Ptr<_1ac4d0ec2_Const> _8913_c = _6927_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ac4d0ec2_Const>();
	if ((!(_1ac4d30e5_read_str(_8913_c.ptr()).empty()))) {
		return false;
	}
	{
		auto &_match_expr{ _6927_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1abd9a77c:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_6927_m.get()._field_left.get()._field_kind,_6927_m.get()._field_left.get()._field_model,_1aa07563a_Token(),jule::Str("empty()", 7))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1abd9acdd:;
			{
				_1aa07563a_Token _10121_op = _6927_m.get()._field_op;
				_10121_op._field_kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1ab817716_UnaryExprModel>(_1ab817716_UnaryExprModel(jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82106b_CommonSubIdentExprModel>(_1ab82106b_CommonSubIdentExprModel(_6927_m.get()._field_left.get()._field_kind,_6927_m.get()._field_left.get()._field_model,_1aa07563a_Token(),jule::Str("empty()", 7))))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>())),_10121_op)));
			}
		}
		_match_end_1abd9ac88:;
	}
	return true;
}



inline void _1a632a6c4_binary(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab8170b7_BinopExprModel> _11725_m) {
	static__1a632985a_optimize(_11725_m.get()._field_left.get()._field_model);
	static__1a632985a_optimize(_11725_m.get()._field_right.get()._field_model);
	{
		auto &_match_expr{ _11725_m.get()._field_right.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1abd9ec37:;
			{
				goto _match_end_1abda072c;
			}
		}
		else {
			_case_begin_1abda0782:;
			{
				return;
			}
		}
		_match_end_1abda072c:;
	}
	if (_1dc252e01_OPT_COND && _1a632a3a5_str_cond(&(*_self_), _11725_m)) {
		return;
	}
	if ((!(_1dc25285c_OPT_MATH))) {
		return;
	}
	{
		auto &_match_expr{ _11725_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1abda16a6:;
			{
				jule::Bool _13718_ok;
				jule::U64 _13722_x;
				std::tie(_13718_ok,_13722_x) = _1a63322d0_check_for_bit_shift_opt(_11725_m.get()._field_left,_11725_m.get()._field_right);
				if (_13718_ok) {
					_11725_m.get()._field_op._field_kind=jule::Str("<<", 2);
					jule::Ptr<_1ac4d0ec2_Const> _14025_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ac4d0ec2_Const>();
					_1ac4d438d_set_u64(_14025_c.ptr(), _13722_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a88ebc1b:;
			{
				jule::Bool _14518_ok;
				jule::U64 _14522_x;
				std::tie(_14518_ok,_14522_x) = _1a63322d0_check_for_bit_shift_opt(_11725_m.get()._field_left,_11725_m.get()._field_right);
				if (_14518_ok) {
					_11725_m.get()._field_op._field_kind=jule::Str(">>", 2);
					jule::Ptr<_1ac4d0ec2_Const> _14825_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ac4d0ec2_Const>();
					_1ac4d438d_set_u64(_14825_c.ptr(), _14522_x);
					return;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a88ebc82:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _15321_c = _11725_m.get()._field_right.get()._field_model.operator jule::Ptr<_1ac4d0ec2_Const>();
				jule::F64 _15417_d = _1ac4d3c50_as_f64(_15321_c.ptr());
				if ((_15417_d == 2LL)) {
					_11725_m.get()._field_op._field_kind=jule::Str("&", 1);
					_1ac4d406e_set_i64(_15321_c.ptr(), 1LL);
				}
			}
		}
		_match_end_1a88ebbb6:;
	}
	(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a631ed5b_UnsafeBinopExprModel>(_1a631ed5b_UnsafeBinopExprModel(_11725_m)));
}



inline void _1a632a9e3_unary(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab817716_UnaryExprModel> _16524_m) {
	static__1a632985a_optimize(_16524_m.get()._field_expr.get()._field_model);
	if (_1dc252cd0_OPT_PTR && (_16524_m.get()._field_op._field_kind == jule::Str("*", 1))) {
		{
			auto &_match_expr{ _16524_m.get()._field_expr.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ab817716_UnaryExprModel>>()) {
				_case_begin_1a8904905:;
				{
					jule::Ptr<_1ab817716_UnaryExprModel> _17025_um = _16524_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1ab817716_UnaryExprModel>();
					if ((_17025_um.get()._field_op._field_kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_17025_um.get()._field_expr.get()._field_model;
					}
				}
			}
			_match_end_1a890488e:;
		}
	}
}



inline void _1a632ad12_structure_lit(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab818508_StructLitExprModel> _17832_m) {
	{
		auto &expr = _17832_m.get()._field_args;
		auto it = expr.begin();
		_iter_begin_1a8906e9b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab817da9_StructArgExprModel> _1a89070bc_arg = *it;
			{
				static__1a632985a_optimize(_1a89070bc_arg.get()._field_expr);
			}
			_iter_next_1a8906e9b:;
			++it;
			goto _iter_begin_1a8906e9b;
		}
		_iter_end_1a8906e9b:;
	}
}



inline void _1a632b131_alloc_structure(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab818ae1_AllocStructLitExprModel> _18434_m) {
	_1a632ad12_structure_lit(&(*_self_), _18434_m.get()._field_lit);
}



inline void _1a632b450_casting(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81941b_CastingExprModel> _18826_m) {
	static__1a632985a_optimize(_18826_m.get()._field_expr);
}



inline void _1a632b76e_args(_1a63299d1_ExprOptimizer* _self_,jule::Slice<jule::Any> _19223_args) {
	{
		auto &expr = _19223_args;
		auto it = expr.begin();
		_iter_begin_1a89099e8:;
		if (it != expr.end()) {
			jule::I64 _1a8909a3c_i = it - expr.begin();
			jule::Any _1a8909cb2_arg = *it;
			{
				static__1a632985a_optimize(_1a8909cb2_arg);
				_19223_args[_1a8909a3c_i]=_1a8909cb2_arg;
			}
			_iter_next_1a89099e8:;
			++it;
			_1a8909a3c_i++;
			goto _iter_begin_1a89099e8;
		}
		_iter_end_1a89099e8:;
	}
}



inline void _1a632ba8d_scope(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ac56022c_Scope>& _19925_s) {
	jule::Ptr<_1a632326b_ScopeOptimizer> _20017_scopt = static__1a6323711_new(_19925_s);
	_1a6326ca8_optimize(_20017_scopt.ptr());
}



inline void _1a632bdac_func_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81a0ed_FnCallExprModel> _20428_m) {
	static__1a632985a_optimize(_20428_m.get()._field_expr);
	_1a632b76e_args(&(*_self_), _20428_m.get()._field_args);
	if ((_20428_m.get()._field_except != nullptr)) {
		_1a632ba8d_scope(&(*_self_), _20428_m.get()._field_except);
	}
}



inline void _1a632c1cb_slice(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81a74c_SliceExprModel> _21224_m) {
	_1a632b76e_args(&(*_self_), _21224_m.get()._field_elems);
}



inline void _1a632c4ea_array(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab820136_ArrayExprModel> _21624_m) {
	if ((_21624_m.get()._field_elems.len() == 2LL) && (_21624_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		jule::Any _21821_elem = _21624_m.get()._field_elems[0LL];
		static__1a632985a_optimize(_21821_elem);
		_21624_m.get()._field_elems[0LL]=_21821_elem;
	}
	_1a632b76e_args(&(*_self_), _21624_m.get()._field_elems);
}



inline void _1a632c819_indexing(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81ae9a_IndexingExprModel> _22527_m) {
	static__1a632985a_optimize(_22527_m.get()._field_expr.get()._field_model);
	static__1a632985a_optimize(_22527_m.get()._field_index.get()._field_model);
	if ((!(_1dc25297d_OPT_ACCESS))) {
		return;
	}
	jule::Bool _23113_array = (_1a5917399_arr(_22527_m.get()._field_expr.get()._field_kind.ptr()) != nullptr);
	if (_23113_array && _1a58d0b48_is_const(_22527_m.get()._field_index.ptr())) {
		(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a6320279_UnsafeIndexingExprModel>(_1a6320279_UnsafeIndexingExprModel(_22527_m)));
		return;
	}
	{
		auto &_match_expr{ _22527_m.get()._field_index.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a89157c3:;
			{
				jule::Ptr<_1a588601b_Var> _24117_i = _22527_m.get()._field_index.get()._field_model.operator jule::Ptr<_1a588601b_Var>();
				if (_24117_i.get()._field_mutable || (_24117_i.get()._field_iter_relation == nullptr)) {
					goto _match_end_1a891573a;
				}
				{
					auto &_match_expr{ _22527_m.get()._field_expr.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
						_case_begin_1a891720e:;
						{
							jule::Ptr<_1a588601b_Var> _24721_r = _22527_m.get()._field_expr.get()._field_model.operator jule::Ptr<_1a588601b_Var>();
							if (_24117_i.get()._field_iter_relation.get()._field_range == _24721_r) {
								(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1a6320279_UnsafeIndexingExprModel>(_1a6320279_UnsafeIndexingExprModel(_22527_m)));
							}
						}
					}
					_match_end_1a89170ee:;
				}
			}
		}
		_match_end_1a891573a:;
	}
}



inline void _1a632cb38_anon_func(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81b5e9_AnonFnExprModel> _25828_m) {
	_1a632ba8d_scope(&(*_self_), _25828_m.get()._field_func.get()._field_scope);
}



inline void _1a632ce57_map(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81c496_MapExprModel> _26222_m) {
	{
		auto &expr = _26222_m.get()._field_entries;
		auto it = expr.begin();
		_iter_begin_1a891a014:;
		if (it != expr.end()) {
			jule::Ptr<_1ab81bc48_KeyValPairExprModel> _1a891a135_pair = *it;
			{
				static__1a632985a_optimize(_1a891a135_pair.get()._field_key);
				static__1a632985a_optimize(_1a891a135_pair.get()._field_val);
			}
			_iter_next_1a891a014:;
			++it;
			goto _iter_begin_1a891a014;
		}
		_iter_end_1a891a014:;
	}
}



inline void _1a632d276_slicing(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81cce3_SlicingExprModel> _26926_m) {
	static__1a632985a_optimize(_26926_m.get()._field_expr);
	static__1a632985a_optimize(_26926_m.get()._field_left);
	if (_26926_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		static__1a632985a_optimize(_26926_m.get()._field_right);
	}
}



inline void _1a632d595_trait_sub(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81d640_TraitSubIdentExprModel> _27728_m) {
	static__1a632985a_optimize(_27728_m.get()._field_expr);
}



inline void _1a632d8b4_structure_sub(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab81e245_StructSubIdentExprModel> _28132_m) {
	static__1a632985a_optimize(_28132_m.get()._field_expr.get()._field_model);
}



inline void _1a632dbd3_common_sub(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82106b_CommonSubIdentExprModel> _28529_m) {
	static__1a632985a_optimize(_28529_m.get()._field_expr);
}



inline void _1a632e002_tuple(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab821599_TupleExprModel> _28924_m) {
	{
		auto &expr = _28924_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1a89204d1:;
		if (it != expr.end()) {
			jule::Ptr<_1a58cee44_Data> _1a8920602_d = *it;
			{
				static__1a632985a_optimize(_1a8920602_d.get()._field_model);
			}
			_iter_next_1a89204d1:;
			++it;
			goto _iter_begin_1a89204d1;
		}
		_iter_end_1a89204d1:;
	}
}



inline void _1a632e321_new_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel> _29527_m) {
	if (_29527_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		static__1a632985a_optimize(_29527_m.get()._field_init);
	}
}



inline void _1a632e640_out_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab821c81_BuiltinOutCallExprModel> _30127_m) {
	static__1a632985a_optimize(_30127_m.get()._field_expr);
}



inline void _1a632e95e_outln_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel> _30529_m) {
	static__1a632985a_optimize(_30529_m.get()._field_expr);
}



inline void _1a632ec7d_panic_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab823887_BuiltinPanicCallExprModel> _30929_m) {
	static__1a632985a_optimize(_30929_m.get()._field_expr);
}



inline void _1a633009c_assert_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel> _31330_m) {
	static__1a632985a_optimize(_31330_m.get()._field_expr);
}



inline void _1a63303bb_error_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel> _31729_m) {
	static__1a632985a_optimize(_31729_m.get()._field_err);
}



inline void _1a63306da_make_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel> _32128_m) {
	if (_32128_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		static__1a632985a_optimize(_32128_m.get()._field_len);
	}
	if (_32128_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		static__1a632985a_optimize(_32128_m.get()._field_cap);
	}
}



inline void _1a6330a09_append_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel> _33030_m) {
	static__1a632985a_optimize(_33030_m.get()._field_dest);
	static__1a632985a_optimize(_33030_m.get()._field_elements);
}



inline void _1a6330d28_clone_call(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel> _33529_m) {
	static__1a632985a_optimize(_33529_m.get()._field_expr);
}



inline void _1a6331147_sizeof(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82ab25_SizeofExprModel> _33925_m) {
	static__1a632985a_optimize(_33925_m.get()._field_expr);
}



inline void _1a6331466_alignof(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82b4c7_AlignofExprModel> _34326_m) {
	static__1a632985a_optimize(_34326_m.get()._field_expr);
}



inline void _1a6331785_integrated_to_str(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82c000_IntegratedToStrExprModel> _34736_m) {
	static__1a632985a_optimize(_34736_m.get()._field_expr);
}



inline void _1a6331aa4_ternary(_1a63299d1_ExprOptimizer* _self_,jule::Ptr<_1ab82c72b_TernaryExprModel> _35126_m) {
	static__1a632985a_optimize(_35126_m.get()._field_condition);
	static__1a632985a_optimize(_35126_m.get()._field_true_expr);
	static__1a632985a_optimize(_35126_m.get()._field_false_expr);
}



inline void _1a6331ce6_do(_1a63299d1_ExprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a892cec2:;
			{
				(*((*_self_)._field_model))=(*((*_self_)._field_model)).operator jule::Ptr<_1a58cee44_Data>().get()._field_model;
				_1a6331ce6_do(&(*_self_));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
			_case_begin_1a892d28b:;
			{
				_1a632a6c4_binary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab8170b7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab817716_UnaryExprModel>>()) {
			_case_begin_1a892d302:;
			{
				_1a632a9e3_unary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab817716_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab818508_StructLitExprModel>>()) {
			_case_begin_1a892d379:;
			{
				_1a632ad12_structure_lit(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab818508_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab818ae1_AllocStructLitExprModel>>()) {
			_case_begin_1a892d401:;
			{
				_1a632b131_alloc_structure(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab818ae1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81941b_CastingExprModel>>()) {
			_case_begin_1a892d478:;
			{
				_1a632b450_casting(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81941b_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
			_case_begin_1a892d500:;
			{
				_1a632bdac_func_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81a0ed_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81a74c_SliceExprModel>>()) {
			_case_begin_1a892d577:;
			{
				_1a632c1cb_slice(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81a74c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab820136_ArrayExprModel>>()) {
			_case_begin_1a892d5ee:;
			{
				_1a632c4ea_array(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab820136_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81ae9a_IndexingExprModel>>()) {
			_case_begin_1a892d676:;
			{
				_1a632c819_indexing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81ae9a_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81b5e9_AnonFnExprModel>>()) {
			_case_begin_1a892d6ed:;
			{
				_1a632cb38_anon_func(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81b5e9_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81c496_MapExprModel>>()) {
			_case_begin_1a892d775:;
			{
				_1a632ce57_map(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81c496_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81cce3_SlicingExprModel>>()) {
			_case_begin_1a892d7ec:;
			{
				_1a632d276_slicing(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81cce3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81d640_TraitSubIdentExprModel>>()) {
			_case_begin_1a892d874:;
			{
				_1a632d595_trait_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81d640_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
			_case_begin_1a892d8eb:;
			{
				_1a632d8b4_structure_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82106b_CommonSubIdentExprModel>>()) {
			_case_begin_1a892d973:;
			{
				_1a632dbd3_common_sub(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82106b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab821599_TupleExprModel>>()) {
			_case_begin_1a892d9ea:;
			{
				_1a632e002_tuple(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab821599_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>>()) {
			_case_begin_1a892da72:;
			{
				_1a632e640_out_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a892dae9:;
			{
				_1a632e95e_outln_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>>()) {
			_case_begin_1a892db71:;
			{
				_1a632e321_new_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a892dbe8:;
			{
				_1a632ec7d_panic_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a892dc70:;
			{
				_1a633009c_assert_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a892dce7:;
			{
				_1a63303bb_error_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a892dd6e:;
			{
				_1a63306da_make_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a892dde6:;
			{
				_1a6330a09_append_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a892de6d:;
			{
				_1a6330d28_clone_call(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82ab25_SizeofExprModel>>()) {
			_case_begin_1a892dee5:;
			{
				_1a6331147_sizeof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82ab25_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82b4c7_AlignofExprModel>>()) {
			_case_begin_1a892e06c:;
			{
				_1a6331466_alignof(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82b4c7_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82c000_IntegratedToStrExprModel>>()) {
			_case_begin_1a892e0e4:;
			{
				_1a6331785_integrated_to_str(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82c000_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82c72b_TernaryExprModel>>()) {
			_case_begin_1a892e16b:;
			{
				_1a6331aa4_ternary(&(*_self_), (*((*_self_)._field_model)).operator jule::Ptr<_1ab82c72b_TernaryExprModel>());
			}
		}
		_match_end_1a892ce5b:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a63299d1_ExprOptimizer _Src) {
	_Stream << "ExprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a633317c_Optimizer> static__1a6333743_new(jule::Ptr<_1a59a1895_IR>& _2228_ir) {
	return jule::new_ptr<_1a633317c_Optimizer>(_1a633317c_Optimizer(_2228_ir));
}



inline void _1a6333a62_optimize_global(_1a633317c_Optimizer* _self_,jule::Ptr<_1a588601b_Var>& _2839_v) {
	if ((!(_2839_v.get()._field_cpp_linked))) {
		static__1a632985a_optimize(_2839_v.get()._field_value.get()._field_data.get()._field_model);
	}
}



inline void _1a6333d81_optimize_function(_1a633317c_Optimizer* _self_,jule::Ptr<_1ab832324_Fn>& _3441_func) {
	if (_3441_func.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _3441_func.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8948493:;
		if (it != expr.end()) {
			jule::Ptr<_1ab836218_FnIns> _1a89485c5_ins = *it;
			{
				jule::Ptr<_1a632326b_ScopeOptimizer> _3921_so = static__1a6323711_new(_1a89485c5_ins.get()._field_scope);
				_1a6326ca8_optimize(_3921_so.ptr());
			}
			_iter_next_1a8948493:;
			++it;
			goto _iter_begin_1a8948493;
		}
		_iter_end_1a8948493:;
	}
}



inline void _1a63341a0_optimize_struct(_1a633317c_Optimizer* _self_,jule::Ptr<_1ab810b3d_Struct>& _4439_s) {
	if (_4439_s.get()._field_cpp_linked) {
		return;
	}
	{
		auto &expr = _4439_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8949e12:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a894a044_ins = *it;
			{
				{
					auto &expr = _1a894a044_ins.get()._field_fields;
					auto it = expr.begin();
					_iter_begin_1a894a6b5:;
					if (it != expr.end()) {
						jule::Ptr<_1ab8137bc_FieldIns> _1a894a74d_f = *it;
						{
							if ((_1a894a74d_f.get()._field_default != nullptr)) {
								static__1a632985a_optimize(_1a894a74d_f.get()._field_default.get()._field_model);
							}
						}
						_iter_next_1a894a6b5:;
						++it;
						goto _iter_begin_1a894a6b5;
					}
					_iter_end_1a894a6b5:;
				}
				{
					auto &expr = _1a894a044_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a894ae79:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a894a907_m = *it;
						{
							_1a6333d81_optimize_function(&(*_self_), _1a894a907_m);
						}
						_iter_next_1a894ae79:;
						++it;
						goto _iter_begin_1a894ae79;
					}
					_iter_end_1a894ae79:;
				}
			}
			_iter_next_1a8949e12:;
			++it;
			goto _iter_begin_1a8949e12;
		}
		_iter_end_1a8949e12:;
	}
}



inline void _1a63344be_optimize_globals(_1a633317c_Optimizer* _self_,jule::Ptr<_1ac58451a_Package>& _6040_p) {
	{
		auto &expr = _6040_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a894c6b7:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a894c7d8_f = *it;
			{
				{
					auto &expr = _1a894c7d8_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1a894ce8c:;
					if (it != expr.end()) {
						jule::Ptr<_1a588601b_Var> _1a894d025_v = *it;
						{
							_1a6333a62_optimize_global(&(*_self_), _1a894d025_v);
						}
						_iter_next_1a894ce8c:;
						++it;
						goto _iter_begin_1a894ce8c;
					}
					_iter_end_1a894ce8c:;
				}
			}
			_iter_next_1a894c6b7:;
			++it;
			goto _iter_begin_1a894c6b7;
		}
		_iter_end_1a894c6b7:;
	}
}



inline void _1a63347dd_optimize_functions(_1a633317c_Optimizer* _self_,jule::Ptr<_1ac58451a_Package>& _6842_p) {
	{
		auto &expr = _6842_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a894ded2:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a894e103_f = *it;
			{
				{
					auto &expr = _1a894e103_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a894e7a7:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a894e840_func = *it;
						{
							_1a6333d81_optimize_function(&(*_self_), _1a894e840_func);
						}
						_iter_next_1a894e7a7:;
						++it;
						goto _iter_begin_1a894e7a7;
					}
					_iter_end_1a894e7a7:;
				}
			}
			_iter_next_1a894ded2:;
			++it;
			goto _iter_begin_1a894ded2;
		}
		_iter_end_1a894ded2:;
	}
}



inline void _1a6334b0c_optimize_structs(_1a633317c_Optimizer* _self_,jule::Ptr<_1ac58451a_Package>& _7640_p) {
	{
		auto &expr = _7640_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8950786:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a89508a7_f = *it;
			{
				{
					auto &expr = _1a89508a7_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1a895105b:;
					if (it != expr.end()) {
						jule::Ptr<_1ab810b3d_Struct> _1a89510e4_s = *it;
						{
							_1a63341a0_optimize_struct(&(*_self_), _1a89510e4_s);
						}
						_iter_next_1a895105b:;
						++it;
						goto _iter_begin_1a895105b;
					}
					_iter_end_1a895105b:;
				}
			}
			_iter_next_1a8950786:;
			++it;
			goto _iter_begin_1a8950786;
		}
		_iter_end_1a8950786:;
	}
}



inline void _1a6334e2b_optimize_package(_1a633317c_Optimizer* _self_,jule::Ptr<_1ac58451a_Package>& _8440_p) {
	_1a63344be_optimize_globals(&(*_self_), _8440_p);
	_1a63347dd_optimize_functions(&(*_self_), _8440_p);
	_1a6334b0c_optimize_structs(&(*_self_), _8440_p);
}



inline void _1a633516d_optimize(_1a633317c_Optimizer* _self_) {
	{
		
		if (_1dc252e01_OPT_COND || _1dc25273b_OPT_APPEND || _1dc2524e9_OPT_COPY) {
			_case_begin_1a8953976:;
			{
				goto _match_end_1a8953426;
			}
		}
		else {
			_case_begin_1a89534e2:;
			{
				return;
			}
		}
		_match_end_1a8953426:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8953d94:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a89540b4_u = *it;
			{
				if ((!(_1a89540b4_u.get()._field_cpp_linked))) {
					_1a6334e2b_optimize_package(&(*_self_), _1a89540b4_u.get()._field_package);
				}
			}
			_iter_next_1a8953d94:;
			++it;
			goto _iter_begin_1a8953d94;
		}
		_iter_end_1a8953d94:;
	}
	_1a6334e2b_optimize_package(&(*_self_), (*_self_)._field_ir.get()._field_main);
}







std::ostream &operator<<(std::ostream &_Stream, _1a633317c_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a6397026_unix(_1a63968c7_AbsTime* _self_) {
	jule::Bool _5417_leap = false;
	jule::U64 _5517_y = ((*_self_)._field_year - 1900LLU);
	jule::U64 _5617_m = ((*_self_)._field_month - 1LLU);
	if ((_5617_m >= 12LLU) || (_5617_m < 0LLU)) {
		jule::U64 _5821_adj = (_5617_m / 12LLU);
		_5617_m%=12LL;
		if ((_5617_m < 0LLU)) {
			(_5821_adj)--;
			_5617_m+=12LLU;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1a639c56a_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1a639c999_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::U64>(86400LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(((*_self_)._field_day - 1LLU)))));
	_6617_t+=static_cast<jule::U64>(3600LLU * (*_self_)._field_hour);
	_6617_t+=static_cast<jule::U64>(60LLU * (*_self_)._field_minute);
	_6617_t+=(*_self_)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63968c7_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



inline _1a6397378_Time static__1a6397983_unix(jule::U64 _8924_sec) {
	return _1a6397378_Time(_8924_sec);
}



inline _1a6397378_Time static__1a6397bb4_now(void) {
	return static__1a6397983_unix(static_cast<jule::U64>(_1a639c180_unix()));
}



inline jule::U64 _1a639817b_unix(_1a6397378_Time* _self_) {
	return (*_self_)._field_sec;
}



inline jule::U64 _1a6398456_day(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_day;
}



inline jule::U64 _1a6398731_month(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_month;
}



inline jule::U64 _1a6398a0b_year(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_year;
}



inline jule::U64 _1a6398cd6_second(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_second;
}



inline jule::U64 _1a63990b1_minute(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_minute;
}



inline jule::U64 _1a639938b_hour(_1a6397378_Time* _self_) {
	return _1a6399666_abs(&(*_self_))._field_hour;
}



inline _1a63968c7_AbsTime _1a6399666_abs(_1a6397378_Time* _self_) {
	jule::U64 _12513_secs = ((*_self_)._field_sec - 951868800LLU);
	jule::U64 _12617_days = (_12513_secs / 86400LLU);
	jule::U64 _12717_rem_secs = (_12513_secs % 86400LL);
	if ((_12717_rem_secs < 0LLU)) {
		_12717_rem_secs+=86400LLU;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = (_12617_days / 146097LLU);
	jule::U64 _13417_rem_days = (_12617_days % 146097LL);
	if ((_13417_rem_days < 0LLU)) {
		_13417_rem_days+=146097LLU;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = (_13417_rem_days / 36524LLU);
	if ((_14017_c_cycles == 4LLU)) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14017_c_cycles * 36524LLU));
	jule::U64 _14617_q_cycles = (_13417_rem_days / 1461LLU);
	if ((_14617_q_cycles == 25LLU)) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_14617_q_cycles * 1461LLU));
	jule::U64 _15217_rem_years = (_13417_rem_days / 365LLU);
	if ((_15217_rem_years == 4LLU)) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>((_15217_rem_years * 365LLU));
	jule::U64 _15813_leap = static_cast<jule::U64>(((((_15217_rem_years == 0LLU) && ((_14617_q_cycles > 0LLU) || (_14017_c_cycles == 0LLU)))) ? (1LLU) : (0LLU)));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LLU) + 28LLU) + _15813_leap;
	if (_15917_y_day >= static_cast<jule::U64>(static_cast<jule::U64>(365LLU + _15813_leap))) {
		_15917_y_day-=static_cast<jule::U64>(365LLU + _15813_leap);
	}
	jule::U64 _16417_months = 0LLU;
	for (; _1a6395bc3_MDAYS[static_cast<jule::I64>(_16417_months)] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1a6395bc3_MDAYS[static_cast<jule::I64>(_16417_months)];
		}
	_iter_next_1a897d110:;
	}
	_iter_end_1a897d110:;
	_1a63968c7_AbsTime _16917_t = _1a63968c7_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_15217_rem_years + static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _14617_q_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(100LLU * _14017_c_cycles)))) + static_cast<jule::U64>(static_cast<jule::U64>(400LLU * _13317_qc_cycles)))) + 100LLU));
	_16917_t._field_month=static_cast<jule::U64>((_16417_months + 2LLU));
	if ((_16917_t._field_month >= 12LLU)) {
		_16917_t._field_month-=12LLU;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LLU;
	_16917_t._field_year+=1900LLU;
	_16917_t._field_day=static_cast<jule::U64>((_13417_rem_days + 1LLU));
	_16917_t._field_week_day=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(3LLU + _12617_days))) % 7LL));
	if ((_16917_t._field_week_day < 0LLU)) {
		_16917_t._field_week_day+=7LLU;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>((_12717_rem_secs / 3600LLU));
	_16917_t._field_minute=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((_12717_rem_secs / 60LLU))) % 60LL));
	_16917_t._field_second=static_cast<jule::U64>((_12717_rem_secs % 60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6397378_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 static__1a639a15b_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>((_22231_d * 1LL));
}



inline jule::I64 static__1a639a469_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>((_22732_d * 1000LL));
}



inline jule::I64 static__1a639a777_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>((_23232_d * 1000000LL));
}



inline jule::I64 static__1a639aa85_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>((_23727_d * 1000000000LL));
}



inline jule::I64 static__1a639ad93_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>((_24227_d * 60000000000LL));
}



inline jule::I64 static__1a639b1a1_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>((_24725_d * 3600000000000LL));
}







std::ostream &operator<<(std::ostream &_Stream, _1a63999b8_Duration _Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a61c4716_TestCoder> static__1a621d40d_new(jule::Ptr<_1a639d47d_ObjectCoder>& _2928_oc) {
	return jule::new_ptr<_1a61c4716_TestCoder>(_1a61c4716_TestCoder(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Ptr<_1ab832324_Fn>(),jule::Ptr<_1ab832324_Fn>(),_2928_oc));
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1a621d5ea_find_testing_package(_1a61c4716_TestCoder* _self_) {
	{
		auto &expr = (*_self_)._field_oc.get()._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a89bd4e6:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a89bd590_imp = *it;
			{
				if ((_1a89bd590_imp.get()._field_link_path == jule::Str("std::testing", 12))) {
					return _1a89bd590_imp;
				}
			}
			_iter_next_1a89bd4e6:;
			++it;
			goto _iter_begin_1a89bd4e6;
		}
		_iter_end_1a89bd4e6:;
	}
	return nullptr;
}



inline void _1a621d8d6_append_test(_1a61c4716_TestCoder* _self_,jule::Str& _4435_obj,jule::Ptr<_1ab836218_FnIns> _4449_f) {
	_4435_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_4435_obj+=_1a621e1ab_call_tm_reset(&(*_self_));
	_4435_obj+=jule::Str(";\n", 2);
	_4435_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35);
	_4435_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("jule::outln(", 12);
	_4435_obj+=_1a6340b07_cstr_lit(static_cast<jule::Slice<jule::U8>>(_4449_f.get()._field_decl.get()._field_ident));
	_4435_obj+=jule::Str(");\n", 3);
	_4435_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_4435_obj+=static__1a6345ea3_func_ins(_4449_f);
	_4435_obj+=jule::Str("(_t);\n", 6);
	_4435_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_4435_obj+=jule::Str("post_test();\n", 13);
}



inline void _1a621dc16_append_package_tests(_1a61c4716_TestCoder* _self_,jule::Str& _6144_obj,jule::Ptr<_1ac58451a_Package>& _6159_p) {
	{
		auto &expr = _6159_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a89c4b5c:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a89c4c5b_file = *it;
			{
				{
					auto &expr = _1a89c4c5b_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a89c5443:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a89c54cb_f = *it;
						{
							if (_1a63a7c6d_has_directive(_1a89c54cb_f.get()._field_directives,jule::Str("test", 4))) {
								_1a621d8d6_append_test(&(*_self_), _6144_obj,_1a89c54cb_f.get()._field_instances[0LL]);
							}
						}
						_iter_next_1a89c5443:;
						++it;
						goto _iter_begin_1a89c5443;
					}
					_iter_end_1a89c5443:;
				}
			}
			_iter_next_1a89c4b5c:;
			++it;
			goto _iter_begin_1a89c4b5c;
		}
		_iter_end_1a89c4b5c:;
	}
}



inline jule::Bool _1a621de47_ready_testing_package(_1a61c4716_TestCoder* _self_) {
	jule::Ptr<_1ac580d41_ImportInfo> _7217_p = _1a621d5ea_find_testing_package(&(*_self_));
	if ((_7217_p == nullptr)) {
		return false;
	}
	(*_self_)._field_t=_1ac582848_find_struct(_7217_p.ptr(), jule::Str("T", 1),false).get()._field_instances[0LL];
	(*_self_)._field_tm_reset=_1ab815934_find_method((*_self_)._field_t.ptr(), jule::Str("reset", 5),false);
	(*_self_)._field_tm_failed=_1ab815934_find_method((*_self_)._field_t.ptr(), jule::Str("failed", 6),false);
	(*_self_)._field_tm_skipped=_1ab815934_find_method((*_self_)._field_t.ptr(), jule::Str("skipped", 7),false);
	return true;
}



inline jule::Str _1a621e1ab_call_tm_reset(_1a61c4716_TestCoder* _self_) {
	jule::Str _8817_obj = static__1a6345b95_func((*_self_)._field_tm_reset);
	_8817_obj+=jule::Str("(_t)", 4);
	return _8817_obj;
}



inline jule::Str _1a621e486_call_tm_failed(_1a61c4716_TestCoder* _self_) {
	jule::Str _9417_obj = static__1a6345b95_func((*_self_)._field_tm_failed);
	_9417_obj+=jule::Str("(_t)", 4);
	return _9417_obj;
}



inline jule::Str _1a621e761_call_tm_skipped(_1a61c4716_TestCoder* _self_) {
	jule::Str _10017_obj = static__1a6345b95_func((*_self_)._field_tm_skipped);
	_10017_obj+=jule::Str("(_t)", 4);
	return _10017_obj;
}



inline void _1a621ea80_serialize(_1a61c4716_TestCoder* _self_,jule::Str& _10737_obj) {
	_10737_obj+=jule::Str("\nvoid test_point(void) {\n", 25);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((!(_1a621de47_ready_testing_package(&(*_self_))))) {
		_10737_obj+=jule::Str("}", 1);
		_1a635371e_done_indent((*_self_)._field_oc.ptr());
		return;
	}
	_10737_obj+=static__1a63a9e18_as_sptr(static__1a63ac2b1_structure_ins((*_self_)._field_t));
	_10737_obj+=jule::Str(" _t = jule::new_ptr<", 20);
	_10737_obj+=static__1a63ac2b1_structure_ins((*_self_)._field_t);
	_10737_obj+=jule::Str(">(); _t.ref = nullptr;\n", 23);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("auto post_test = [&](void) {\n", 29);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("++total;\n", 9);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (", 4);
	_10737_obj+=_1a621e486_call_tm_failed(&(*_self_));
	_10737_obj+=jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else if (", 9);
	_10737_obj+=_1a621e761_call_tm_skipped(&(*_self_));
	_10737_obj+=jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("};\n", 3);
	_1a621dc16_append_package_tests(&(*_self_), _10737_obj,(*_self_)._field_oc.get()._field_ir.get()._field_main);
	_10737_obj+=jule::Str("\n\n", 2);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154);
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("if (failed != 0) std::exit(1);\n", 31);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_10737_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_10737_obj+=jule::Str("}\n", 2);
}







std::ostream &operator<<(std::ostream &_Stream, _1a61c4716_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tm_reset:" << _Src._field_tm_reset << ", ";
	_Stream << "tm_failed:" << _Src._field_tm_failed << ", ";
	_Stream << "tm_skipped:" << _Src._field_tm_skipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a62cbac6_ScopeCoder> static__1a62729a1_new(jule::Ptr<_1a639d47d_ObjectCoder>& _4824_oc) {
	return jule::new_ptr<_1a62cbac6_ScopeCoder>(_1a62cbac6_ScopeCoder(_4824_oc));
}



inline jule::Str _1a6223457_range_index_iter(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac561be0_RangeIter>& _5440_it) {
	jule::Str _5513_begin = static__1a6347614_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5613_next = static__1a6347c30_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	jule::Str _5817_obj = jule::Str("{\n", 2);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto ", 5);
	if (_1dc2524e9_OPT_COPY && _1a62be217_is_copy_optimizable(_5440_it.get()._field_expr)) {
		_5817_obj+=jule::Str("&", 1);
	}
	_5817_obj+=jule::Str("expr = ", 7);
	_5817_obj+=_1a633dd58_model((*_self_)._field_oc.get()._field_ec.ptr(), _5440_it.get()._field_expr.get()._field_model);
	_5817_obj+=jule::Str(";\n", 2);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=_1a639ea45_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_a,jule::Str("it - expr.begin()", 17));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	if ((_5440_it.get()._field_key_b != nullptr)) {
		if (_1dc2524e9_OPT_COPY) {
			_5440_it.get()._field_key_b.get()._field_reference=_1a62c0603_is_iter_copy_optimizable(_5440_it.get()._field_expr,_5440_it.get()._field_key_b);
		}
		_5817_obj+=_1a639ea45_var_init_expr((*_self_)._field_oc.ptr(), _5440_it.get()._field_key_b,jule::Str("*it", 3));
		_5817_obj+=jule::Str("\n", 1);
		_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=_1a62bc589_scope(&(*_self_), _5440_it.get()._field_scope);
	_5817_obj+=jule::Str("\n", 1);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_5613_next;
	_5817_obj+=jule::Str(":;\n", 3);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("++it;\n", 6);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((_5440_it.get()._field_key_a != nullptr)) {
		_5817_obj+=static__1a6347306_var(_5440_it.get()._field_key_a);
		_5817_obj+=jule::Str("++;\n", 4);
		_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	_5817_obj+=jule::Str("goto ", 5);
	_5817_obj+=_5513_begin;
	_5817_obj+=jule::Str(";\n", 2);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}\n", 2);
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=static__1a6347922_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_5440_it)));
	_5817_obj+=jule::Str(":;\n", 3);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_5817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_5817_obj+=jule::Str("}", 1);
	return _5817_obj;
}



inline jule::Str _1a6281eee_range_hashmap_iter(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac561be0_RangeIter>& _12442_it) {
	jule::Str _12513_begin = static__1a6347614_iter_begin(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12613_next = static__1a6347c30_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	jule::Str _12817_obj = jule::Str("{\n", 2);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto ", 5);
	if (_1dc2524e9_OPT_COPY && _1a62be217_is_copy_optimizable(_12442_it.get()._field_expr)) {
		_12817_obj+=jule::Str("&", 1);
	}
	_12817_obj+=jule::Str("expr = ", 7);
	_12817_obj+=_1a633dd58_model((*_self_)._field_oc.get()._field_ec.ptr(), _12442_it.get()._field_expr.get()._field_model);
	_12817_obj+=jule::Str(";\n", 2);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((_12442_it.get()._field_key_a != nullptr)) {
		if (_1dc2524e9_OPT_COPY) {
			_12442_it.get()._field_key_a.get()._field_reference=_1a62c0603_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_a);
		}
		_12817_obj+=_1a639ea45_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_a,jule::Str("it->first", 9));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	if ((_12442_it.get()._field_key_b != nullptr)) {
		if (_1dc2524e9_OPT_COPY) {
			_12442_it.get()._field_key_b.get()._field_reference=_1a62c0603_is_iter_copy_optimizable(_12442_it.get()._field_expr,_12442_it.get()._field_key_b);
		}
		_12817_obj+=_1a639ea45_var_init_expr((*_self_)._field_oc.ptr(), _12442_it.get()._field_key_b,jule::Str("it->second", 10));
		_12817_obj+=jule::Str("\n", 1);
		_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	_12817_obj+=_1a62bc589_scope(&(*_self_), _12442_it.get()._field_scope);
	_12817_obj+=jule::Str("\n", 1);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_12613_next;
	_12817_obj+=jule::Str(":;\n", 3);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("++it;\n", 6);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("goto ", 5);
	_12817_obj+=_12513_begin;
	_12817_obj+=jule::Str(";\n", 2);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}\n", 2);
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=static__1a6347922_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_12442_it)));
	_12817_obj+=jule::Str(":;\n", 3);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_12817_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_12817_obj+=jule::Str("}", 1);
	return _12817_obj;
}



inline jule::Str _1a6225316_if_case(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac56064a_If> _19230_i) {
	jule::Str _19317_obj = jule::Str();
	if (_19230_i.get()._field_expr != jule::Any(jule::Any(nullptr))) {
		_19317_obj+=jule::Str("if (", 4);
		_19317_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _19230_i.get()._field_expr);
		_19317_obj+=jule::Str(") ", 2);
	}
	_19317_obj+=_1a62bc589_scope(&(*_self_), _19230_i.get()._field_scope);
	return _19317_obj;
}



inline jule::Str _1a6227a66_conditional(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac560e86_Conditional> _20334_c) {
	jule::Str _20417_obj = jule::Str();
	{
		auto &expr = _20334_c.get()._field_elifs;
		auto it = expr.begin();
		_iter_begin_1a8a1000a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56064a_If> _1a8a100c6_elif = *it;
			{
				if ((_1a8a100c6_elif == nullptr)) {
					goto _iter_next_1a8a1000a;
				}
				if ((_20417_obj.len() != 0LL)) {
					_20417_obj+=jule::Str(" else ", 6);
				}
				_20417_obj+=_1a6225316_if_case(&(*_self_), _1a8a100c6_elif);
			}
			_iter_next_1a8a1000a:;
			++it;
			goto _iter_begin_1a8a1000a;
		}
		_iter_end_1a8a1000a:;
	}
	if ((_20334_c.get()._field_default != nullptr)) {
		if ((_20417_obj.len() != 0LL)) {
			_20417_obj+=jule::Str(" else ", 6);
		}
		_20417_obj+=_1a62bc589_scope(&(*_self_), _20334_c.get()._field_default.get()._field_scope);
	}
	return _20417_obj;
}



inline jule::Str _1a6276e39_inf_iter(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac5613a4_InfIter> _22331_it) {
	jule::Str _22417_obj = jule::Str("for (;;) {\n", 11);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_22417_obj+=_1a62bc589_scope(&(*_self_), _22331_it.get()._field_scope);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("\n", 1);
	_22417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__1a6347c30_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;\n", 3);
	_22417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_22417_obj+=jule::Str("}\n", 2);
	_22417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_22417_obj+=static__1a6347922_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_22331_it)));
	_22417_obj+=jule::Str(":;", 2);
	return _22417_obj;
}



inline jule::Str _1a627b04d_while_iter(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac5617c2_WhileIter> _24433_it) {
	jule::Str _24517_obj = jule::Str();
	if ((_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) && (_24433_it.get()._field_next == jule::Any(jule::Any(nullptr)))) {
		_24517_obj+=jule::Str("while (", 7);
		_24517_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		_24517_obj+=jule::Str(") {\n", 4);
	} else {
		_24517_obj+=jule::Str("for (; ", 7);
		if (_24433_it.get()._field_expr != jule::Any(jule::Any(nullptr))) {
			_24517_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _24433_it.get()._field_expr);
		}
		_24517_obj+=jule::Str("; ", 2);
		if (_24433_it.get()._field_next != jule::Any(jule::Any(nullptr))) {
			jule::Str _25721_st = _1a62b7ab2_st(&(*_self_), _24433_it.get()._field_next);
			_24517_obj+=_25721_st.slice(0LL,(_25721_st.len() - 1LL));
		}
		_24517_obj+=jule::Str(") {\n", 4);
	}
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1a62bc589_scope(&(*_self_), _24433_it.get()._field_scope);
	_24517_obj+=jule::Str("\n", 1);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_24517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__1a6347c30_iter_next(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;\n", 3);
	_24517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_24517_obj+=jule::Str("}\n", 2);
	_24517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_24517_obj+=static__1a6347922_iter_end(static_cast<jule::U64>(static_cast<jule::U64>(_24433_it)));
	_24517_obj+=jule::Str(":;", 2);
	return _24517_obj;
}



inline jule::Str _1a627d45c_range_iter(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac561be0_RangeIter> _28033_it) {
	{
		
		if ((_1a5917674_slc(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8a2236e:;
			{
				return _1a6223457_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_1a5917399_arr(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8a21d1e:;
			{
				return _1a6223457_range_index_iter(&(*_self_), _28033_it);
			}
		}
		else if ((_1a59182ce_map(_28033_it.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8a21d85:;
			{
				return _1a6281eee_range_hashmap_iter(&(*_self_), _28033_it);
			}
		}
		else {
			_case_begin_1a8a21714:;
			{
				return _1a6223457_range_index_iter(&(*_self_), _28033_it);
			}
		}
		_match_end_1a8a2166a:;
	}
}



inline jule::Str _1a62921da_cont(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac56210d_ContSt> _29319_c) {
	jule::Str _29417_obj = jule::Str("goto ", 5);
	_29417_obj+=static__1a6347c30_iter_next(_29319_c.get()._field_it);
	_29417_obj+=jule::Str(";", 1);
	return _29417_obj;
}



inline jule::Str _1a62a27e4_label(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac562949_Label> _30020_l) {
	return (static__1a634803d_label(_30020_l.get()._field_ident) + jule::Str(":;", 2));
}



inline jule::Str _1a62a7e15_goto_st(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac562d67_GotoSt> _30422_gt) {
	jule::Str _30517_obj = jule::Str("goto ", 5);
	_30517_obj+=static__1a634803d_label(_30422_gt.get()._field_ident);
	_30517_obj+=jule::Str(";", 1);
	return _30517_obj;
}



inline jule::Str _1a62addd8_postfix(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac563285_Postfix> _31130_p) {
	jule::Str _31217_obj = jule::Str("(", 1);
	_31217_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _31130_p.get()._field_expr);
	_31217_obj+=jule::Str(")", 1);
	_31217_obj+=_31130_p.get()._field_op;
	_31217_obj+=jule::Str(";", 1);
	return _31217_obj;
}



inline jule::Str _1a630c84e_assign(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac5636a3_Assign> _32029_a) {
	jule::Str _32117_obj = _1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_l.get()._field_model);
	_32117_obj+=_32029_a.get()._field_op._field_kind;
	_32117_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32029_a.get()._field_r.get()._field_model);
	_32117_obj+=jule::Str(";", 1);
	return _32117_obj;
}



inline jule::Str _1a6315b10_multi_assign(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac563ac1_MultiAssign> _32835_a) {
	jule::Str _32917_obj = jule::Str("std::tie(", 9);
	{
		auto &expr = _32835_a.get()._field_l;
		auto it = expr.begin();
		_iter_begin_1a8a2d4bd:;
		if (it != expr.end()) {
			jule::Any _1a8a2d589_l = *it;
			{
				_32917_obj+=(((_1a8a2d589_l == jule::Any(jule::Any(nullptr)))) ? (jule::Str("std::ignore", 11)) : (_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a2d589_l)));
				_32917_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8a2d4bd:;
			++it;
			goto _iter_begin_1a8a2d4bd;
		}
		_iter_end_1a8a2d4bd:;
	}
	(_32917_obj).mut_slice(0LL,_32917_obj.len() - 1LL);
	_32917_obj+=jule::Str(") = ", 4);
	_32917_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _32835_a.get()._field_r);
	_32917_obj+=jule::Str(";", 1);
	return _32917_obj;
}



inline jule::Str _1a62856d9_match_expr(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac563ede_Match>& _34334_m) {
	if ((!(_1a58d0b48_is_const(_34334_m.get()._field_expr.ptr())))) {
		return jule::Str("_match_expr", 11);
	}
	if ((!(_1ac4d58bc_is_bool(_34334_m.get()._field_expr.get()._field_constant.ptr()))) || (!(_1ac4d2d1a_read_bool(_34334_m.get()._field_expr.get()._field_constant.ptr())))) {
		return _1a633dd58_model((*_self_)._field_oc.get()._field_ec.ptr(), _34334_m.get()._field_expr.get()._field_model);
	}
	return jule::Str();
}



inline jule::Str _1a62a5660_case(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac563ede_Match> _35327_m,jule::Ptr<_1ac56463d_Case> _35342_c) {
	jule::Str _35417_obj = jule::Str();
	if ((_35342_c.get()._field_exprs.len() != 0LL) && (!(_1ac536995_is_generic_type_match(_35327_m.ptr())))) {
		if ((_35327_m.get()._field_cases.len() > 0LL) && (_35327_m.get()._field_cases[0LL] == _35342_c)) {
			_35417_obj+=jule::Str("if (", 4);
		} else {
			_35417_obj+=jule::Str("else if (", 9);
		}
		{
			auto &expr = _35342_c.get()._field_exprs;
			auto it = expr.begin();
			_iter_begin_1a8a36152:;
			if (it != expr.end()) {
				jule::I64 _1a8a35a7a_i = it - expr.begin();
				jule::Ptr<_1a58cee44_Data> _1a8a361b8_expr = *it;
				{
					{
						
						if ((!(_35327_m.get()._field_type_match))) {
							_case_begin_1a8a37a9e:;
							{
								jule::Str _36525_case_expr = _1a62856d9_match_expr(&(*_self_), _35327_m);
								if (_1a58d1000_good_operand(_35327_m.get()._field_expr.ptr(), _1a8a361b8_expr)) {
									if ((_36525_case_expr.len() != 0LL)) {
										_35417_obj+=_36525_case_expr;
										_35417_obj+=jule::Str(" == ", 4);
									}
									_35417_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a361b8_expr.get()._field_model);
								} else {
									_35417_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a361b8_expr.get()._field_model);
									if ((_36525_case_expr.len() != 0LL)) {
										_35417_obj+=jule::Str(" == ", 4);
										_35417_obj+=_36525_case_expr;
									}
								}
							}
						}
						else {
							_case_begin_1a8a367c3:;
							{
								_35417_obj+=jule::Str("_match_expr", 11);
								_35417_obj+=jule::Str(".type_is<", 9);
								_35417_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a361b8_expr.get()._field_model);
								_35417_obj+=jule::Str(">()", 3);
							}
						}
						_match_end_1a8a36707:;
					}
					if ((_1a8a35a7a_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_35342_c.get()._field_exprs.len()))) {
						_35417_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_1a8a36152:;
				++it;
				_1a8a35a7a_i++;
				goto _iter_begin_1a8a36152;
			}
			_iter_end_1a8a36152:;
		}
		_35417_obj+=jule::Str(") ", 2);
	} else if ((_35327_m.get()._field_default == _35342_c) && (_35327_m.get()._field_cases.len() != 0LL)) {
		_35417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
		_35417_obj+=jule::Str("else ", 5);
	}
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_35417_obj+=jule::Str("{\n", 2);
	_35417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_35417_obj+=static__1a6348659_case_begin(static_cast<jule::U64>(static_cast<jule::U64>(_35342_c)));
	_35417_obj+=jule::Str(":;\n", 3);
	if ((_35342_c.get()._field_scope.get()._field_stmts.len() > 0LL)) {
		_35417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
		_35417_obj+=_1a62bc589_scope(&(*_self_), _35342_c.get()._field_scope);
		_35417_obj+=jule::Str("\n", 1);
	}
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_35417_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_35417_obj+=jule::Str("}", 1);
	return _35417_obj;
}



inline jule::Str _1a62c9442_match_st(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac563ede_Match> _41531_m) {
	if ((_41531_m.get()._field_cases.len() == 0LL) && (_41531_m.get()._field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _42013_generic_type_match = _1ac536995_is_generic_type_match(_41531_m.ptr());
	if (_42013_generic_type_match && ((_41531_m.get()._field_default == nullptr) || (_41531_m.get()._field_default.get()._field_scope.get()._field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42517_obj = jule::Str("{\n", 2);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_42517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((!(_42013_generic_type_match)) && (!(_1a58d0b48_is_const(_41531_m.get()._field_expr.ptr())))) {
		if (_1dc2524e9_OPT_COPY && _1a62be217_is_copy_optimizable(_41531_m.get()._field_expr)) {
			_42517_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42517_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42517_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _41531_m.get()._field_expr.get()._field_model);
		_42517_obj+=jule::Str(" };\n", 4);
		_42517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	}
	if ((_41531_m.get()._field_cases.len() > 0LL)) {
		{
			auto &expr = _41531_m.get()._field_cases;
			auto it = expr.begin();
			_iter_begin_1a8a47cac:;
			if (it != expr.end()) {
				jule::Ptr<_1ac56463d_Case> _1a8a47eaa_c = *it;
				{
					if ((_1a8a47eaa_c == nullptr)) {
						goto _iter_next_1a8a47cac;
					}
					_42517_obj+=jule::Str("\n", 1);
					_42517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
					_42517_obj+=_1a62a5660_case(&(*_self_), _41531_m,_1a8a47eaa_c);
				}
				_iter_next_1a8a47cac:;
				++it;
				goto _iter_begin_1a8a47cac;
			}
			_iter_end_1a8a47cac:;
		}
	}
	if ((_41531_m.get()._field_default != nullptr)) {
		_42517_obj+=jule::Str("\n", 1);
		_42517_obj+=_1a62a5660_case(&(*_self_), _41531_m,_41531_m.get()._field_default);
	}
	_42517_obj+=jule::Str("\n", 1);
	_42517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_42517_obj+=static__1a634834b_match_end(static_cast<jule::U64>(static_cast<jule::U64>(_41531_m)));
	_42517_obj+=jule::Str(":;", 2);
	_42517_obj+=jule::Str("\n", 1);
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_42517_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_42517_obj+=jule::Str("}", 1);
	return _42517_obj;
}



inline jule::Str _1a622d52d_fall_st(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac564a5b_FallSt> _47322_f) {
	jule::Str _47417_obj = jule::Str("goto ", 5);
	_47417_obj+=static__1a6348659_case_begin(_47322_f.get()._field_dest_case);
	_47417_obj+=jule::Str(";", 1);
	return _47417_obj;
}



inline jule::Str _1a624ddcd_break_st(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac56252b_BreakSt> _48023_b) {
	jule::Str _48117_obj = jule::Str("goto ", 5);
	if ((_48023_b.get()._field_it != 0LLU)) {
		_48117_obj+=static__1a6347922_iter_end(_48023_b.get()._field_it);
	} else {
		_48117_obj+=static__1a634834b_match_end(_48023_b.get()._field_mtch);
	}
	_48117_obj+=jule::Str(";", 1);
	return _48117_obj;
}



inline jule::Str _1a62526b7_ret_with_vars(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac564e79_RetSt> _49136_r) {
	jule::Str _49217_obj = jule::Str();
	{
		auto &expr = _49136_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8a514e1:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a8a515ac_v = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a8a515ac_v.get()._field_ident)) {
					_49217_obj+=_1a633e96e_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a515ac_v.get()._field_kind.get()._field_kind);
				} else {
					_49217_obj+=static__1a6347306_var(_1a8a515ac_v);
				}
				_49217_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8a514e1:;
			++it;
			goto _iter_begin_1a8a514e1;
		}
		_iter_end_1a8a514e1:;
	}
	(_49217_obj).mut_slice(0LL,_49217_obj.len() - 1LL);
	jule::Str _50417_oobj = jule::Str("return ", 7);
	if (_49136_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50417_oobj+=jule::Str("jule::Exceptional<", 18);
		_50417_oobj+=static__1a63adc30_kind(_49136_r.get()._field_func.get()._field_result);
		_50417_oobj+=jule::Str(">(jule::Any(), ", 15);
	}
	if ((_49136_r.get()._field_vars.len() > 1LL)) {
		_50417_oobj+=jule::Str("std::make_tuple(", 16);
		_50417_oobj+=_49217_obj;
		_50417_oobj+=jule::Str(")", 1);
	} else {
		_50417_oobj+=_49217_obj;
	}
	if (_49136_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_50417_oobj+=jule::Str(")", 1);
	}
	_50417_oobj+=jule::Str(";", 1);
	return _50417_oobj;
}



inline jule::Str _1a6265c2a_ret_tuple(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac564e79_RetSt> _52832_r) {
	jule::Slice<jule::Ptr<_1a58cee44_Data>> _52917_datas = _52832_r.get()._field_expr.operator jule::Ptr<_1ab821599_TupleExprModel>().get()._field_datas;
	jule::Str _53017_obj = jule::Str();
	{
		auto &expr = _52832_r.get()._field_vars;
		auto it = expr.begin();
		_iter_begin_1a8a5cd8d:;
		if (it != expr.end()) {
			jule::I64 _1a8a5d08b_i = it - expr.begin();
			jule::Ptr<_1a588601b_Var> _1a8a5d267_v = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a8a5d267_v.get()._field_ident)) {
					goto _iter_next_1a8a5cd8d;
				}
				jule::Any _53621_model = _52917_datas[_1a8a5d08b_i].get()._field_model;
				if (_53621_model == jule::Any(jule::Any(_1a8a5d267_v))) {
					goto _iter_next_1a8a5cd8d;
				}
				jule::Str _54117_ident = static__1a6347306_var(_1a8a5d267_v);
				_53017_obj+=_54117_ident;
				_53017_obj+=jule::Str(" = ", 3);
				_53017_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _53621_model);
				_53017_obj+=jule::Str(";\n", 2);
				_53017_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
			}
			_iter_next_1a8a5cd8d:;
			++it;
			_1a8a5d08b_i++;
			goto _iter_begin_1a8a5cd8d;
		}
		_iter_end_1a8a5cd8d:;
	}
	jule::Str _54917_oobj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _52917_datas;
		auto it = expr.begin();
		_iter_begin_1a8a5c1cd:;
		if (it != expr.end()) {
			jule::I64 _1a8a5d575_i = it - expr.begin();
			jule::Ptr<_1a58cee44_Data> _1a8a61545_d = *it;
			{
				jule::Ptr<_1a588601b_Var> _55121_v = _52832_r.get()._field_vars[_1a8a5d575_i];
				if (_1aa07861b_is_ignore_ident(_55121_v.get()._field_ident)) {
					_54917_oobj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a61545_d.get()._field_model);
				} else {
					_54917_oobj+=static__1a6347306_var(_55121_v);
				}
				_54917_oobj+=jule::Str(",", 1);
			}
			_iter_next_1a8a5c1cd:;
			++it;
			_1a8a5d575_i++;
			goto _iter_begin_1a8a5c1cd;
		}
		_iter_end_1a8a5c1cd:;
	}
	(_54917_oobj).mut_slice(0LL,_54917_oobj.len() - 1LL);
	_54917_oobj+=jule::Str(")", 1);
	if (_52832_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		_53017_obj+=jule::Str("return jule::Exceptional<", 25);
		_53017_obj+=static__1a63adc30_kind(_52832_r.get()._field_func.get()._field_result);
		_53017_obj+=jule::Str(">(jule::Any(),", 14);
		_53017_obj+=_54917_oobj;
		_53017_obj+=jule::Str(")", 1);
	} else {
		_53017_obj+=jule::Str("return ", 7);
		_53017_obj+=_54917_oobj;
	}
	_53017_obj+=jule::Str(";", 1);
	return _53017_obj;
}



inline jule::Str _1a62668da_ret_with_exprs(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac564e79_RetSt> _57837_r) {
	if ((_57837_r.get()._field_vars.len() > 1LL)) {
		return _1a6265c2a_ret_tuple(&(*_self_), _57837_r);
	}
	if ((_57837_r.get()._field_vars.len() > 0LL)) {
		jule::Ptr<_1a588601b_Var> _58521_v = _57837_r.get()._field_vars[0LL];
		if ((!(_1aa07861b_is_ignore_ident(_58521_v.get()._field_ident))) && (_57837_r.get()._field_expr != jule::Any(jule::Any(_58521_v)))) {
			jule::Str _58721_ident = static__1a6347306_var(_58521_v);
			jule::Str _58825_obj = _58721_ident;
			_58825_obj+=jule::Str(" = ", 3);
			_58825_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
			_58825_obj+=jule::Str(";\n", 2);
			_58825_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
			if (_57837_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
				_58825_obj+=jule::Str("return jule::Exceptional<", 25);
				_58825_obj+=static__1a63adc30_kind(_57837_r.get()._field_func.get()._field_result);
				_58825_obj+=jule::Str(">(jule::Any(),", 14);
				_58825_obj+=_58721_ident;
				_58825_obj+=jule::Str(")", 1);
			} else {
				_58825_obj+=jule::Str("return ", 7);
				_58825_obj+=_58721_ident;
			}
			_58825_obj+=jule::Str(";", 1);
			return _58825_obj;
		}
	}
	if (_57837_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
		jule::Str _60921_obj = jule::Str("return jule::Exceptional<", 25);
		_60921_obj+=static__1a63adc30_kind(_57837_r.get()._field_func.get()._field_result);
		_60921_obj+=jule::Str(">(jule::Any(),", 14);
		_60921_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
		_60921_obj+=jule::Str(")", 1);
		_60921_obj+=jule::Str(";", 1);
		return _60921_obj;
	}
	jule::Str _61817_obj = jule::Str("return ", 7);
	_61817_obj+=_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), _57837_r.get()._field_expr);
	_61817_obj+=jule::Str(";", 1);
	return _61817_obj;
}



inline jule::Str _1a62a3b03_ret_st(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac564e79_RetSt> _62429_r) {
	if ((_62429_r.get()._field_expr == jule::Any(jule::Any(nullptr))) && (_62429_r.get()._field_vars.len() == 0LL)) {
		if (_62429_r.get()._field_func.get()._field_decl.get()._field_exceptional) {
			return jule::Str("return jule::VoidExceptional();", 31);
		}
		return jule::Str("return;", 7);
	}
	if (_62429_r.get()._field_expr == jule::Any(jule::Any(nullptr))) {
		return _1a62526b7_ret_with_vars(&(*_self_), _62429_r);
	}
	return _1a62668da_ret_with_exprs(&(*_self_), _62429_r);
}



inline jule::Str _1a62a484b_ret_with_defaults(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1a5913e9a_TypeKind> _63940_result) {
	jule::Str _64017_obj = jule::Str("return ", 7);
	if ((_1a59185a9_tup(_63940_result.ptr()) != nullptr)) {
		_64017_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto &expr = _1a59185a9_tup(_63940_result.ptr()).get()._field_types;
			auto it = expr.begin();
			_iter_begin_1a8a738ed:;
			if (it != expr.end()) {
				jule::Ptr<_1a5913e9a_TypeKind> _1a8a73c83_t = *it;
				{
					_64017_obj+=_1a633e96e_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _1a8a73c83_t);
					_64017_obj+=jule::Str(",", 1);
				}
				_iter_next_1a8a738ed:;
				++it;
				goto _iter_begin_1a8a738ed;
			}
			_iter_end_1a8a738ed:;
		}
		(_64017_obj).mut_slice(0LL,_64017_obj.len() - 1LL);
		_64017_obj+=jule::Str(")", 1);
	} else {
		_64017_obj+=_1a633e96e_init_expr((*_self_)._field_oc.get()._field_ec.ptr(), _63940_result);
	}
	_64017_obj+=jule::Str(";", 1);
	return _64017_obj;
}



inline jule::Str _1a62aacd6_var(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1a588601b_Var> _65626_v) {
	if (_65626_v.get()._field_constant) {
		return jule::Str();
	}
	return _1a639ebaa_var((*_self_)._field_oc.ptr(), _65626_v);
}



inline jule::Str _1a62b7ab2_st(_1a62cbac6_ScopeCoder* _self_,jule::Any _66425_st) {
	if (_66425_st == jule::Any(jule::Any(nullptr))) {
		return jule::Str();
	}
	{
		auto &_match_expr{ _66425_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ac56022c_Scope>>()) {
			_case_begin_1a8a77b33:;
			{
				return _1a62bc589_scope(&(*_self_), _66425_st.operator jule::Ptr<_1ac56022c_Scope>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a8a77cdc:;
			{
				return _1a62aacd6_var(&(*_self_), _66425_st.operator jule::Ptr<_1a588601b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a8a78837:;
			{
				return (_1a633e210_expr((*_self_)._field_oc.get()._field_ec.ptr(), jule::Any(_66425_st.operator jule::Ptr<_1a58cee44_Data>())) + jule::Str(";", 1));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac560e86_Conditional>>()) {
			_case_begin_1a8a7889d:;
			{
				return _1a6227a66_conditional(&(*_self_), _66425_st.operator jule::Ptr<_1ac560e86_Conditional>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
			_case_begin_1a8a78639:;
			{
				return _1a6276e39_inf_iter(&(*_self_), _66425_st.operator jule::Ptr<_1ac5613a4_InfIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5617c2_WhileIter>>()) {
			_case_begin_1a8a786a0:;
			{
				return _1a627b04d_while_iter(&(*_self_), _66425_st.operator jule::Ptr<_1ac5617c2_WhileIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac561be0_RangeIter>>()) {
			_case_begin_1a8a78716:;
			{
				return _1a627d45c_range_iter(&(*_self_), _66425_st.operator jule::Ptr<_1ac561be0_RangeIter>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac56210d_ContSt>>()) {
			_case_begin_1a8a7877c:;
			{
				return _1a62921da_cont(&(*_self_), _66425_st.operator jule::Ptr<_1ac56210d_ContSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac562949_Label>>()) {
			_case_begin_1a8a78936:;
			{
				return _1a62a27e4_label(&(*_self_), _66425_st.operator jule::Ptr<_1ac562949_Label>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac562d67_GotoSt>>()) {
			_case_begin_1a8a7899c:;
			{
				return _1a62a7e15_goto_st(&(*_self_), _66425_st.operator jule::Ptr<_1ac562d67_GotoSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563285_Postfix>>()) {
			_case_begin_1a8a78a24:;
			{
				return _1a62addd8_postfix(&(*_self_), _66425_st.operator jule::Ptr<_1ac563285_Postfix>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5636a3_Assign>>()) {
			_case_begin_1a8a78a9b:;
			{
				return _1a630c84e_assign(&(*_self_), _66425_st.operator jule::Ptr<_1ac5636a3_Assign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563ac1_MultiAssign>>()) {
			_case_begin_1a8a78b23:;
			{
				return _1a6315b10_multi_assign(&(*_self_), _66425_st.operator jule::Ptr<_1ac563ac1_MultiAssign>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563ede_Match>>()) {
			_case_begin_1a8a78b9a:;
			{
				return _1a62c9442_match_st(&(*_self_), _66425_st.operator jule::Ptr<_1ac563ede_Match>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac564a5b_FallSt>>()) {
			_case_begin_1a8a78c22:;
			{
				return _1a622d52d_fall_st(&(*_self_), _66425_st.operator jule::Ptr<_1ac564a5b_FallSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac56252b_BreakSt>>()) {
			_case_begin_1a8a78c99:;
			{
				return _1a624ddcd_break_st(&(*_self_), _66425_st.operator jule::Ptr<_1ac56252b_BreakSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac564e79_RetSt>>()) {
			_case_begin_1a8a78d21:;
			{
				return _1a62a3b03_ret_st(&(*_self_), _66425_st.operator jule::Ptr<_1ac564e79_RetSt>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a63207da_PushToSliceExprModel>>()) {
			_case_begin_1a8a78d98:;
			{
				return _1a633aa47_push_to_slice((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_1a63207da_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a632106b_MutSlicingExprModel>>()) {
			_case_begin_1a8a78e20:;
			{
				return _1a633d5e9_mut_slicing((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_1a632106b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6321753_StrInsertBeginExprModel>>()) {
			_case_begin_1a8a78e97:;
			{
				return _1a633d9a1_str_insert_begin((*_self_)._field_oc.get()._field_ec.ptr(), _66425_st.operator jule::Ptr<_1a6321753_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1a8a7831a:;
			{
				return jule::Str("<unimplemented_stmt>", 20);
			}
		}
		_match_end_1a8a7824e:;
	}
}



inline jule::Str _1a62bc589_scope(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ac56022c_Scope> _71528_s) {
	jule::Str _71617_obj = jule::Str("{\n", 2);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	{
		auto &expr = _71528_s.get()._field_stmts;
		auto it = expr.begin();
		_iter_begin_1a8a87417:;
		if (it != expr.end()) {
			jule::Any _1a8a874d3_st = *it;
			{
				_71617_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
				_71617_obj+=_1a62b7ab2_st(&(*_self_), _1a8a874d3_st);
				_71617_obj+=jule::Str("\n", 1);
			}
			_iter_next_1a8a87417:;
			++it;
			goto _iter_begin_1a8a87417;
		}
		_iter_end_1a8a87417:;
	}
	_1a635371e_done_indent((*_self_)._field_oc.ptr());
	_71617_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_71617_obj+=jule::Str("}", 1);
	if (_71528_s.get()._field_deferred) {
		_71617_obj=((jule::Str("__JULE_DEFER(", 13) + _71617_obj) + jule::Str(");", 2));
	}
	return _71617_obj;
}



inline jule::Str _1a62bd458_func_scope(_1a62cbac6_ScopeCoder* _self_,jule::Ptr<_1ab836218_FnIns> _73733_f) {
	if ((_73733_f.get()._field_scope == nullptr)) {
		return jule::Str();
	}
	jule::Str _74117_obj = _1a62bc589_scope(&(*_self_), _73733_f.get()._field_scope);
	if (_73733_f.get()._field_decl.get()._field_exceptional && _1ab8329d9_is_void(_73733_f.get()._field_decl.ptr())) {
		_74117_obj=(_74117_obj.slice(0LL,(_74117_obj.len() - 2LL)) + jule::Str(" return jule::VoidExceptional(); }", 34));
	}
	return _74117_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a62cbac6_ScopeCoder _Src) {
	_Stream << "ScopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6224546_ExprCoder> static__1a6221763_new(jule::Ptr<_1a639d47d_ObjectCoder>& _9124_oc) {
	return jule::new_ptr<_1a6224546_ExprCoder>(_1a6224546_ExprCoder(_9124_oc));
}



inline jule::Str _1a62c42e9_string(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ac4d0ec2_Const>& _9722_c) {
	jule::Str _9813_content = _1ac4d30e5_read_str(_9722_c.ptr());
	if ((_9813_content.len() == 0LL)) {
		return jule::Str("jule::Str()", 11);
	}
	jule::Slice<jule::U8> _10213_bytes = static_cast<jule::Slice<jule::U8>>(_9813_content);
	jule::Str _10313_len = _1ac445ad5_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_10213_bytes.len())),10LL);
	jule::Str _10413_lit = _1a6340b07_cstr_lit(_10213_bytes);
	return ((((jule::Str("jule::Str(", 10) + _10413_lit) + jule::Str(", ", 2)) + _10313_len) + jule::Str(")", 1));
}



inline jule::Str _1a62c50a8_boolean(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ac4d0ec2_Const>& _10823_c) {
	return ((_1ac4d2d1a_read_bool(_10823_c.ptr())) ? (jule::Str("true", 4)) : (jule::Str("false", 5)));
}



inline jule::Str _1a62c5d67_nil_lit(_1a6224546_ExprCoder* _self_) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _1a62ca19b_ftoa_special_cases(_1a6224546_ExprCoder* _self_,jule::F64& _11634_x) {
	{
		
		if (_1ac30e196_is_nan(_11634_x)) {
			_case_begin_1a8a92bb4:;
			{
				return jule::Str("NAN", 3);
			}
		}
		else if (_1ac331185_is_inf(_11634_x,1LL)) {
			_case_begin_1a8a92d29:;
			{
				return jule::Str("INFINITY", 8);
			}
		}
		else if (_1ac331185_is_inf(_11634_x,-1LL)) {
			_case_begin_1a8a92d90:;
			{
				return jule::Str("-INFINITY", 9);
			}
		}
		else {
			_case_begin_1a8a925a9:;
			{
				return jule::Str();
			}
		}
		_match_end_1a8a92510:;
	}
}



inline jule::Str _1a62cadb1_float32(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ac4d0ec2_Const>& _12923_c) {
	jule::F64 _13013_x = _1ac4d3c50_as_f64(_12923_c.ptr());
	jule::Str _13313_f = _1a62ca19b_ftoa_special_cases(&(*_self_), _13013_x);
	if ((!(_13313_f.empty()))) {
		return _13313_f;
	}
	{
		
		if ((_13013_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a8a9603b:;
			{
				return jule::Str("jule::MAX_F32", 13);
			}
		}
		else if ((_13013_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a8a959ec:;
			{
				return jule::Str("jule::MIN_F32", 13);
			}
		}
		else {
			_case_begin_1a8a953d1:;
			{
				return (_1a6340ee2_ftoa(_13013_x,32LL) + jule::Str("f", 1));
			}
		}
		_match_end_1a8a95326:;
	}
}



inline jule::Str _1a62ccac7_float64(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ac4d0ec2_Const>& _14823_c) {
	jule::F64 _14913_x = _1ac4d3c50_as_f64(_14823_c.ptr());
	jule::Str _15213_f = _1a62ca19b_ftoa_special_cases(&(*_self_), _14913_x);
	if ((!(_15213_f.empty()))) {
		return _15213_f;
	}
	{
		
		if ((_14913_x == jule::MAX_F64)) {
			_case_begin_1a8a98d63:;
			{
				return jule::Str("jule::MAX_F64", 13);
			}
		}
		else if ((_14913_x == jule::MIN_F64)) {
			_case_begin_1a8a98b10:;
			{
				return jule::Str("jule::MIN_F64", 13);
			}
		}
		else {
			_case_begin_1a8a9833a:;
			{
				return _1a6340ee2_ftoa(_14913_x,64LL);
			}
		}
		_match_end_1a8a98280:;
	}
}



inline jule::Str _1a631742a_constant(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ac4d0ec2_Const> _16827_c,jule::Bool _16838_fx32) {
	{
		
		if (_1ac4d5b97_is_str(_16827_c.ptr())) {
			_case_begin_1a8a9a903:;
			{
				return _1a62c42e9_string(&(*_self_), _16827_c);
			}
		}
		else if (_1ac4d58bc_is_bool(_16827_c.ptr())) {
			_case_begin_1a8a9a969:;
			{
				return _1a62c50a8_boolean(&(*_self_), _16827_c);
			}
		}
		else if (_1ac4d5e72_is_f64(_16827_c.ptr())) {
			_case_begin_1a8a9a9e1:;
			{
				{
					
					if (_16838_fx32) {
						_case_begin_1a8a9d0a9:;
						{
							return _1a62cadb1_float32(&(*_self_), _16827_c);
						}
					}
					else {
						_case_begin_1a8a9c44e:;
						{
							return _1a62ccac7_float64(&(*_self_), _16827_c);
						}
					}
					_match_end_1a8a9c383:;
				}
			}
		}
		else if (_1ac4d5317_is_i64(_16827_c.ptr())) {
			_case_begin_1a8a9a507:;
			{
				return _1a6341300_itoa(static_cast<jule::I64>(_1ac4d2765_read_i64(_16827_c.ptr())));
			}
		}
		else if (_1ac4d55e2_is_u64(_16827_c.ptr())) {
			_case_begin_1a8a9a56d:;
			{
				return _1a6341696_utoa(static_cast<jule::U64>(_1ac4d2a40_read_u64(_16827_c.ptr())));
			}
		}
		else if (_1ac4d624c_is_nil(_16827_c.ptr())) {
			_case_begin_1a8a9a5d4:;
			{
				return _1a62c5d67_nil_lit(&(*_self_));
			}
		}
		else {
			_case_begin_1a8a9a491:;
			{
				return jule::Str("<unimplemented_constant_expression>", 35);
			}
		}
		_match_end_1a8a9a408:;
	}
}



inline jule::Str _1a6318d00_div_by_zero_binary(_1a6224546_ExprCoder* _self_,_1aa07563a_Token& _19238_op,jule::Ptr<_1ab816825_OperandExprModel>& _19254_l,jule::Ptr<_1ab816825_OperandExprModel>& _19281_r) {
	jule::Str _19317_op_func = jule::Str();
	{
		auto &_match_expr{ _19238_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1a8aa0e36:;
			{
				_19317_op_func=jule::Str("div", 3);
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a8aa140e:;
			{
				_19317_op_func=jule::Str("mod", 3);
			}
		}
		_match_end_1a8aa1343:;
	}
	jule::Str _20317_obj = jule::Str("jule::", 6);
	_20317_obj+=_19317_op_func;
	_20317_obj+=jule::Str("(", 1);
	if ((!(_1dc2523c8_PRODUCTION))) {
		_20317_obj+=jule::Str("\"", 1);
		_20317_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _19238_op);
		_20317_obj+=jule::Str("\",", 2);
	}
	_20317_obj+=_1a633e210_expr(&(*_self_), _19254_l.get()._field_model);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_1a633e210_expr(&(*_self_), _19281_r.get()._field_model);
	_20317_obj+=jule::Str(")", 1);
	return _20317_obj;
}



inline jule::Str _1a6224964_unsafe_binary(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab8170b7_BinopExprModel> _21836_m) {
	jule::Str _21917_obj = jule::Str("(", 1);
	_21917_obj+=_1a633dd58_model(&(*_self_), _21836_m.get()._field_left.get()._field_model);
	_21917_obj+=jule::Str(" ", 1);
	_21917_obj+=_21836_m.get()._field_op._field_kind;
	_21917_obj+=jule::Str(" ", 1);
	_21917_obj+=_1a633dd58_model(&(*_self_), _21836_m.get()._field_right.get()._field_model);
	_21917_obj+=jule::Str(")", 1);
	return _21917_obj;
}



inline jule::Str _1a628284b_binary(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab8170b7_BinopExprModel> _22929_m) {
	{
		auto &_match_expr{ _22929_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1a8aa80c5:;
			{
				if ((_1a5917c29_strct(_22929_m.get()._field_left.get()._field_kind.ptr()) == nullptr)) {
					return _1a6318d00_div_by_zero_binary(&(*_self_), _22929_m.get()._field_op,_22929_m.get()._field_left,_22929_m.get()._field_right);
				}
			}
		}
		_match_end_1a8aa7ec6:;
	}
	return _1a6224964_unsafe_binary(&(*_self_), _22929_m);
}



inline jule::Str _1a6307a58_var(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a588601b_Var> _24022_m) {
	if (_24022_m.get()._field_cpp_linked) {
		jule::Ptr<_1dd583043_Directive> _24217_d = _1a63a782d_find_directive(_24022_m.get()._field_directives,jule::Str("namespace", 9));
		if ((_24217_d != nullptr)) {
			jule::Str _24425_obj = _1a633ed37_concat_all_parts(_24217_d.get()._field_args);
			_24425_obj+=jule::Str("::", 2);
			_24425_obj+=static__1a6347306_var(_24022_m);
			return _24425_obj;
		}
	}
	return static__1a6347306_var(_24022_m);
}



inline jule::Str _1a622426b_structure(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab810b3d_Struct> _25324_m) {
	return static__1a63abea3_structure(_25324_m);
}



inline jule::Str _1a6307739_structure_ins(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab814515_StructIns> _25732_m) {
	return static__1a63ac2b1_structure_ins(_25732_m);
}



inline jule::Str _1a631a6c5_unary(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab817716_UnaryExprModel> _26128_m) {
	{
		auto &_match_expr{ _26128_m.get()._field_op._field_kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a8aae84b:;
			{
				jule::Str _26421_obj = jule::Str("(~(", 3);
				_26421_obj+=_1a633e210_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
				_26421_obj+=jule::Str("))", 2);
				return _26421_obj;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8aae8b2:;
			{
				if (_1dc2523c8_PRODUCTION || (_1a5916a19_sptr(_26128_m.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					goto _match_end_1a8aae74c;
				}
				jule::Str _27221_obj = _1a633e210_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
				_27221_obj+=jule::Str(".get(\"", 6);
				_27221_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _26128_m.get()._field_op);
				_27221_obj+=jule::Str("\")", 2);
				return _27221_obj;
			}
		}
		_match_end_1a8aae74c:;
	}
	jule::Str _27917_obj = jule::Str("(", 1);
	_27917_obj+=_26128_m.get()._field_op._field_kind;
	_27917_obj+=jule::Str("(", 1);
	_27917_obj+=_1a633e210_expr(&(*_self_), _26128_m.get()._field_expr.get()._field_model);
	_27917_obj+=jule::Str("))", 2);
	return _27917_obj;
}



inline jule::Str _1a62b960d_cpp_structure_lit(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab818508_StructLitExprModel> _28740_m) {
	jule::Str _28817_obj = jule::Str("(", 1) + static__1a63ac2b1_structure_ins(_28740_m.get()._field_strct);
	_28817_obj+=jule::Str("){", 2);
	if ((_28740_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _28740_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8ab5cb4:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8ab5de6_f = *it;
				{
					if (_28740_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
						{
							auto &expr = _28740_m.get()._field_args;
							auto it = expr.begin();
							_iter_begin_1a8ab6996:;
							if (it != expr.end()) {
								jule::Ptr<_1ab817da9_StructArgExprModel> _1a8ab6a62_arg = *it;
								{
									if (_1a8ab6a62_arg.get()._field_field == _1a8ab5de6_f) {
										_28817_obj+=jule::Str(".", 1);
										_28817_obj+=static__1a6346ee8_field(_1a8ab5de6_f.get()._field_decl);
										_28817_obj+=jule::Str("=", 1);
										_28817_obj+=_1a633e210_expr(&(*_self_), _1a8ab6a62_arg.get()._field_expr);
										_28817_obj+=jule::Str(",", 1);
										goto _iter_next_1a8ab5cb4;
									}
								}
								_iter_next_1a8ab6996:;
								++it;
								goto _iter_begin_1a8ab6996;
							}
							_iter_end_1a8ab6996:;
						}
						goto _iter_next_1a8ab5cb4;
					}
					_28817_obj+=static__1a6346ee8_field(_1a8ab5de6_f.get()._field_decl);
					_28817_obj+=jule::Str(": ", 2);
					{
						auto &expr = _28740_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1a8ab92b2:;
						if (it != expr.end()) {
							jule::Ptr<_1ab817da9_StructArgExprModel> _1a8ab938e_arg = *it;
							{
								if (_1a8ab938e_arg.get()._field_field == _1a8ab5de6_f) {
									_28817_obj+=_1a633e210_expr(&(*_self_), _1a8ab938e_arg.get()._field_expr);
									_28817_obj+=jule::Str(",", 1);
									goto _iter_next_1a8ab5cb4;
								}
							}
							_iter_next_1a8ab92b2:;
							++it;
							goto _iter_begin_1a8ab92b2;
						}
						_iter_end_1a8ab92b2:;
					}
					_28817_obj+=_1a633e96e_init_expr(&(*_self_), _1a8ab5de6_f.get()._field_kind);
					_28817_obj+=jule::Str(",", 1);
				}
				_iter_next_1a8ab5cb4:;
				++it;
				goto _iter_begin_1a8ab5cb4;
			}
			_iter_end_1a8ab5cb4:;
		}
		(_28817_obj).mut_slice(0LL,_28817_obj.len() - 1LL);
	}
	_28817_obj+=jule::Str("}", 1);
	return _28817_obj;
}



inline jule::Str _1a62b9773_structure_lit(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab818508_StructLitExprModel> _32436_m) {
	if (_32436_m.get()._field_strct.get()._field_decl.get()._field_cpp_linked) {
		return _1a62b960d_cpp_structure_lit(&(*_self_), _32436_m);
	}
	jule::Str _32917_obj = static__1a6346bda_structure_ins(_32436_m.get()._field_strct);
	_32917_obj+=jule::Str("(", 1);
	if ((_32436_m.get()._field_args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _32436_m.get()._field_strct.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8abe1a7:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8abe2d9_f = *it;
				{
					{
						auto &expr = _32436_m.get()._field_args;
						auto it = expr.begin();
						_iter_begin_1a8abe97c:;
						if (it != expr.end()) {
							jule::Ptr<_1ab817da9_StructArgExprModel> _1a8abea48_arg = *it;
							{
								if (_1a8abea48_arg.get()._field_field == _1a8abe2d9_f) {
									_32917_obj+=_1a633e210_expr(&(*_self_), _1a8abea48_arg.get()._field_expr);
									_32917_obj+=jule::Str(",", 1);
									goto _iter_next_1a8abe1a7;
								}
							}
							_iter_next_1a8abe97c:;
							++it;
							goto _iter_begin_1a8abe97c;
						}
						_iter_end_1a8abe97c:;
					}
					_32917_obj+=_1a633e96e_init_expr(&(*_self_), _1a8abe2d9_f.get()._field_kind);
					_32917_obj+=jule::Str(",", 1);
				}
				_iter_next_1a8abe1a7:;
				++it;
				goto _iter_begin_1a8abe1a7;
			}
			_iter_end_1a8abe1a7:;
		}
		(_32917_obj).mut_slice(0LL,_32917_obj.len() - 1LL);
	}
	_32917_obj+=jule::Str(")", 1);
	return _32917_obj;
}



inline jule::Str _1a627187e_alloc_structure(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab818ae1_AllocStructLitExprModel> _35038_m) {
	jule::Str _35117_obj = jule::Str("jule::new_ptr<", 14);
	_35117_obj+=static__1a6346bda_structure_ins(_35038_m.get()._field_lit.get()._field_strct);
	_35117_obj+=jule::Str(">(", 2);
	_35117_obj+=_1a62b9773_structure_lit(&(*_self_), _35038_m.get()._field_lit);
	_35117_obj+=jule::Str(")", 1);
	return _35117_obj;
}



inline jule::Str _1a62719e4_casting(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81941b_CastingExprModel> _35930_m) {
	jule::Str _36017_obj = jule::Str();
	{
		
		if ((_1a591673e_prim(_35930_m.get()._field_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim(_35930_m.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a8ac65ee:;
			{
				_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str("(", 1);
				_36017_obj+=_1a633dd58_model(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(")", 1);
			}
		}
		else if ((_1a5916ce4_ptr(_35930_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a5916ce4_ptr(_35930_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8ac52bd:;
			{
				_36017_obj+=jule::Str("((", 2);
				_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str(")(", 2);
				_36017_obj+=_1a633e210_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str("))", 2);
			}
		}
		else if ((_1a5918004_trt(_35930_m.get()._field_expr_kind.ptr()) != nullptr) || (_1a591673e_prim(_35930_m.get()._field_expr_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim(_35930_m.get()._field_expr_kind.ptr()).ptr())) {
			_case_begin_1a8ac67b9:;
			{
				_36017_obj+=_1a633dd58_model(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(".", 1);
				if (_1dc2523c8_PRODUCTION) {
					_36017_obj+=jule::Str("operator ", 9);
					_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
					_36017_obj+=jule::Str("()", 2);
				} else {
					if ((_1a5918004_trt(_35930_m.get()._field_expr_kind.ptr()) != nullptr) && (_1a5916a19_sptr(_35930_m.get()._field_kind.ptr()) != nullptr)) {
						_36017_obj+=jule::Str("cast_ptr<", 9);
						_36017_obj+=static__1a63adc30_kind(_1a5916a19_sptr(_35930_m.get()._field_kind.ptr()).get()._field_elem);
					} else {
						_36017_obj+=jule::Str("cast<", 5);
						_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
					}
					_36017_obj+=jule::Str(">(\"", 3);
					_36017_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _35930_m.get()._field_token);
					_36017_obj+=jule::Str("\")", 2);
				}
			}
		}
		else if ((_1a5918004_trt(_35930_m.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8ac6830:;
			{
				_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str("(", 1);
				_36017_obj+=_1a633e210_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(", ", 2);
				_36017_obj+=_1ac445de3_itoa(static_cast<jule::I64>(_1a637c160_find_type_offset((*_self_)._field_oc.ptr(), _1a5918004_trt(_35930_m.get()._field_kind.ptr()),_35930_m.get()._field_expr_kind)));
				_36017_obj+=jule::Str(")", 1);
			}
		}
		else {
			_case_begin_1a8ac4e49:;
			{
				_36017_obj+=jule::Str("static_cast<", 12);
				_36017_obj+=static__1a63adc30_kind(_35930_m.get()._field_kind);
				_36017_obj+=jule::Str(">(", 2);
				_36017_obj+=_1a633e210_expr(&(*_self_), _35930_m.get()._field_expr);
				_36017_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1a8ac4dc2:;
	}
	return _36017_obj;
}



inline jule::Str _1a62227b9_args(_1a6224546_ExprCoder* _self_,jule::Slice<jule::Any> _41127_args) {
	if ((_41127_args.len() == 0LL)) {
		return jule::Str();
	}
	jule::Str _41517_obj = jule::Str();
	{
		auto &expr = _41127_args;
		auto it = expr.begin();
		_iter_begin_1a8ad48b5:;
		if (it != expr.end()) {
			jule::Any _1a8ad49a3_a = *it;
			{
				_41517_obj+=_1a633e210_expr(&(*_self_), _1a8ad49a3_a);
				_41517_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8ad48b5:;
			++it;
			goto _iter_begin_1a8ad48b5;
		}
		_iter_end_1a8ad48b5:;
	}
	(_41517_obj).mut_slice(0LL,_41517_obj.len() - 1LL);
	return _41517_obj;
}



inline jule::Str _1a622292e_model_for_call(_1a6224546_ExprCoder* _self_,jule::Any _42437_expr) {
	{
		auto &_match_expr{ _42437_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1a8ad6488:;
			{
				return _1a6338704_func_ins(&(*_self_), _42437_expr.operator jule::Ptr<_1ab836218_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
			_case_begin_1a8ad64ee:;
			{
				jule::Ptr<_1ab81e245_StructSubIdentExprModel> _42921_ssie = _42437_expr.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>();
				if ((_42921_ssie.get()._field_method != nullptr)) {
					return _1a6338704_func_ins(&(*_self_), _42921_ssie.get()._field_method);
				}
			}
		}
		_match_end_1a8ad63ab:;
	}
	return _1a633dd58_model(&(*_self_), _42437_expr);
}



inline void _1a6281938_push_call_inf(_1a6224546_ExprCoder* _self_,jule::Str& _43737_obj,jule::Ptr<_1ab81a0ed_FnCallExprModel>& _43748_m) {
	if (_1dc2523c8_PRODUCTION || ((!(_43748_m.get()._field_func.get()._field_anon)) && (!(_1a6341d06_is_builtin_call_has_debuginf(_43748_m))))) {
		_43737_obj+=jule::Str("(", 1);
		return;
	}
	if (_43748_m.get()._field_func.get()._field_anon) {
		{
			auto &_match_expr{ _43748_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
				_case_begin_1a8adade9:;
				{
					if (_43748_m.get()._field_expr.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>().get()._field_field.get()._field_decl.get()._field_owner.get()._field_cpp_linked) {
						_43737_obj+=jule::Str("(", 1);
						return;
					}
					goto _case_begin_1a8ada8cc;
				}
			}
			else {
				_case_begin_1a8ada8cc:;
				{
					_43737_obj+=jule::Str(".call", 5);
				}
			}
			_match_end_1a8ada877:;
		}
	}
	_43737_obj+=jule::Str("(\"", 2);
	_43737_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _43748_m.get()._field_token);
	_43737_obj+=jule::Str("\"", 1);
	if ((_43748_m.get()._field_args.len() != 0LL)) {
		_43737_obj+=jule::Str(",", 1);
	}
}



inline jule::Str _1a6281b25_pure_func_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81a0ed_FnCallExprModel>& _46238_m) {
	jule::Str _46317_obj = _1a622292e_model_for_call(&(*_self_), _46238_m.get()._field_expr);
	if ((!(_1ab837093_is_builtin(_46238_m.get()._field_func.ptr())))) {
		if (_46238_m.get()._field_func.get()._field_decl.get()._field_cpp_linked && (_46238_m.get()._field_func.get()._field_generics.len() > 0LL)) {
			if ((!(_1a63a7c6d_has_directive(_46238_m.get()._field_func.get()._field_decl.get()._field_directives,jule::Str("cdef", 4))))) {
				_46317_obj+=jule::Str("<", 1);
				{
					auto &expr = _46238_m.get()._field_func.get()._field_generics;
					auto it = expr.begin();
					_iter_begin_1a8ae0283:;
					if (it != expr.end()) {
						jule::Ptr<_1a5913e9a_TypeKind> _1a8ae04e7_g = *it;
						{
							_46317_obj+=static__1a63adc30_kind(_1a8ae04e7_g);
							_46317_obj+=jule::Str(",", 1);
						}
						_iter_next_1a8ae0283:;
						++it;
						goto _iter_begin_1a8ae0283;
					}
					_iter_end_1a8ae0283:;
				}
				(_46317_obj).mut_slice(0LL,_46317_obj.len() - 1LL);
				_46317_obj+=jule::Str(">", 1);
			}
		}
	}
	_1a6281938_push_call_inf(&(*_self_), _46317_obj,_46238_m);
	jule::Bool _47817_locinfo = false;
	jule::Str _47917_wrap_receiver = jule::Str();
	if (((!(_1ab837093_is_builtin(_46238_m.get()._field_func.ptr()))) && (_46238_m.get()._field_func.get()._field_decl.get()._field_params.len() > 0LL)) && _1ab830c07_is_self(_46238_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
		{
			auto &_match_expr{ _46238_m.get()._field_expr };
			
			if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
				_case_begin_1a8ae38e6:;
				{
					jule::Ptr<_1ab81e245_StructSubIdentExprModel> _48325_ssie = _46238_m.get()._field_expr.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>();
					{
						
						if (_1ab830ed2_is_ref(_46238_m.get()._field_func.get()._field_decl.get()._field_params[0LL].ptr())) {
							_case_begin_1a8ae4ebe:;
							{
								_46317_obj+=_1a633dd58_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
							}
						}
						else if ((_1a5916a19_sptr(_48325_ssie.get()._field_expr_kind.ptr()) != nullptr)) {
							_case_begin_1a8ae7444:;
							{
								_46317_obj+=_1a633dd58_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
								_46317_obj+=jule::Str(".ptr(", 5);
								if ((!(_1dc2523c8_PRODUCTION))) {
									_46317_obj+=jule::Str("\"", 1);
									_46317_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _46238_m.get()._field_token);
									_46317_obj+=jule::Str("\"", 1);
								}
								_46317_obj+=jule::Str(")", 1);
							}
						}
						else {
							_case_begin_1a8ae474e:;
							{
								if ((_1a5917c29_strct(_48325_ssie.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
									_46317_obj+=jule::Str("&", 1);
									if ((!(_48325_ssie.get()._field_expr.get()._field_lvalue))) {
										_47917_wrap_receiver=_1a633dd58_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
									}
								}
								if ((!(_47917_wrap_receiver.empty()))) {
									_46317_obj+=jule::Str("_wrap_copy", 10);
								} else {
									_46317_obj+=_1a633dd58_model(&(*_self_), jule::Any(_48325_ssie.get()._field_expr));
								}
							}
						}
						_match_end_1a8ae46e9:;
					}
					if ((_46238_m.get()._field_args.len() > 0LL)) {
						_46317_obj+=jule::Str(", ", 2);
					}
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ab81d640_TraitSubIdentExprModel>>()) {
				_case_begin_1a8ae395c:;
				{
					_46317_obj+=_1a633dd58_model(&(*_self_), _46238_m.get()._field_expr.operator jule::Ptr<_1ab81d640_TraitSubIdentExprModel>().get()._field_expr);
					if ((!(_1dc2523c8_PRODUCTION))) {
						_47817_locinfo=true;
					}
					if ((_46238_m.get()._field_args.len() > 0LL)) {
						_46317_obj+=jule::Str(", ", 2);
					}
				}
			}
			_match_end_1a8ae3880:;
		}
	}
	_46317_obj+=_1a62227b9_args(&(*_self_), _46238_m.get()._field_args);
	if (_47817_locinfo) {
		_46317_obj+=jule::Str(", \"", 3);
		_46317_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _46238_m.get()._field_token);
		_46317_obj+=jule::Str("\"", 1);
	}
	_46317_obj+=jule::Str(")", 1);
	if ((!(_47917_wrap_receiver.empty()))) {
		(_46317_obj).buffer.insert(0, (((jule::Str("({ auto _wrap_copy = ", 21) + _47917_wrap_receiver) + jule::Str("; ", 2))));
		_46317_obj+=jule::Str("; })", 4);
	}
	if (_46238_m.get()._field_is_co) {
		(_46317_obj).buffer.insert(0, (jule::Str("__JULE_CO(", 10)));
		_46317_obj+=jule::Str(")", 1);
	}
	return _46317_obj;
}



inline jule::Str _1a6335415_func_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81a0ed_FnCallExprModel> _54432_m) {
	if ((_1ab837093_is_builtin(_54432_m.get()._field_func.ptr()) || (!(_54432_m.get()._field_func.get()._field_decl.get()._field_exceptional))) || ((_54432_m.get()._field_except != nullptr) && (_54432_m.get()._field_except.get()._field_stmts.len() == 0LL))) {
		return _1a6281b25_pure_func_call(&(*_self_), _54432_m);
	}
	jule::Str _55217_obj = jule::Str("({\n", 3);
	_1a635060b_add_indent((*_self_)._field_oc.ptr());
	_55217_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_55217_obj+=jule::Str("auto except = ", 14);
	_55217_obj+=_1a6281b25_pure_func_call(&(*_self_), _54432_m);
	_55217_obj+=jule::Str(";\n", 2);
	_55217_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	if ((_54432_m.get()._field_except != nullptr)) {
		if ((_54432_m.get()._field_func.get()._field_result == nullptr) || (!(_54432_m.get()._field_assigned))) {
			_55217_obj+=jule::Str("if (!except.ok()) ", 18);
			_55217_obj+=_1a62bc589_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54432_m.get()._field_except);
			_55217_obj+=jule::Str("\n", 1);
		} else {
			jule::Bool _56521_forwarded = _1a63419a4_is_forwarded(_54432_m.get()._field_except);
			_55217_obj+=jule::Str("(except.ok()) ? (except.result) : (", 35);
			if (_56521_forwarded) {
				_55217_obj+=jule::Str("{", 1);
			}
			_55217_obj+=_1a62bc589_scope((*_self_)._field_oc.get()._field_sc.ptr(), _54432_m.get()._field_except);
			if (_56521_forwarded) {
				_55217_obj+=jule::Str(" ", 1);
				_55217_obj+=_1a633e96e_init_expr(&(*_self_), _54432_m.get()._field_func.get()._field_result);
				_55217_obj+=jule::Str(";}", 2);
			}
			_55217_obj+=jule::Str(");\n", 3);
		}
		_1a635371e_done_indent((*_self_)._field_oc.ptr());
	} else {
		_55217_obj+=jule::Str("if (!except.ok()) jule::panic(jule::Str(\"", 41);
		_55217_obj+=jule::Str("unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 98);
		_55217_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _54432_m.get()._field_token);
		_55217_obj+=jule::Str("\"));\n", 5);
		if ((!(_1ab8329d9_is_void(_54432_m.get()._field_func.get()._field_decl.ptr())))) {
			_55217_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
			_55217_obj+=jule::Str("(except.result);\n", 17);
		}
		_1a635371e_done_indent((*_self_)._field_oc.ptr());
	}
	_55217_obj+=_1a635307b_indent((*_self_)._field_oc.ptr());
	_55217_obj+=jule::Str("})", 2);
	return _55217_obj;
}



inline jule::Str _1a633579a_slice(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81a74c_SliceExprModel> _59628_m) {
	if ((_59628_m.get()._field_elems.len() == 0LL)) {
		return (static__1a63aae5d_as_slice(_59628_m.get()._field_elem_kind) + jule::Str("()", 2));
	}
	jule::Str _60017_obj = static__1a63aae5d_as_slice(_59628_m.get()._field_elem_kind);
	_60017_obj+=jule::Str("({", 2);
	_60017_obj+=_1a62227b9_args(&(*_self_), _59628_m.get()._field_elems);
	_60017_obj+=jule::Str("})", 2);
	return _60017_obj;
}



inline jule::Str _1a6335b52_indexing(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81ae9a_IndexingExprModel> _60731_m) {
	jule::Str _60817_obj = _1a633dd58_model(&(*_self_), _60731_m.get()._field_expr.get()._field_model);
	{
		
		if (_1dc2523c8_PRODUCTION || (_1a5916ce4_ptr(_60731_m.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a59182ce_map(_60731_m.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8b120da:;
			{
				_60817_obj+=jule::Str("[", 1);
				_60817_obj+=_1a633e210_expr(&(*_self_), _60731_m.get()._field_index.get()._field_model);
				_60817_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1a8b11062:;
			{
				_60817_obj+=jule::Str(".at(\"", 5);
				_60817_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _60731_m.get()._field_token);
				_60817_obj+=jule::Str("\",", 2);
				_60817_obj+=_1a633e210_expr(&(*_self_), _60731_m.get()._field_index.get()._field_model);
				_60817_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1a8b1100c:;
	}
	return _60817_obj;
}



inline jule::Str _1a6336009_unsafe_indexing(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a6320279_UnsafeIndexingExprModel> _62738_m) {
	jule::Str _62817_obj = _1a633dd58_model(&(*_self_), _62738_m.get()._field_node.get()._field_expr.get()._field_model);
	{
		
		if (_1dc2523c8_PRODUCTION || (_1a5916ce4_ptr(_62738_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr) || (_1a59182ce_map(_62738_m.get()._field_node.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8b16b5b:;
			{
				_62817_obj+=jule::Str("[", 1);
				_62817_obj+=_1a633e210_expr(&(*_self_), _62738_m.get()._field_node.get()._field_index.get()._field_model);
				_62817_obj+=jule::Str("]", 1);
			}
		}
		else {
			_case_begin_1a8b15a39:;
			{
				_62817_obj+=jule::Str(".__at(", 6);
				_62817_obj+=_1a633e210_expr(&(*_self_), _62738_m.get()._field_node.get()._field_index.get()._field_model);
				_62817_obj+=jule::Str(")", 1);
			}
		}
		_match_end_1a8b159c3:;
	}
	return _62817_obj;
}



inline jule::Str _1a63363b1_anon_func(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81b5e9_AnonFnExprModel> _64532_m) {
	jule::Str _64617_obj = static__1a63ad922_func(_64532_m.get()._field_func);
	_64617_obj+=jule::Str("([=]", 4);
	_64617_obj+=_1a639dc75_params_ins((*_self_)._field_oc.ptr(), _64532_m.get()._field_func.get()._field_params);
	_64617_obj+=jule::Str(" mutable -> ", 12);
	_64617_obj+=static__1a63ad306_func_ins_result(_64532_m.get()._field_func);
	_64617_obj+=jule::Str(" ", 1);
	_64617_obj+=_1a62bd458_func_scope((*_self_)._field_oc.get()._field_sc.ptr(), _64532_m.get()._field_func);
	_64617_obj+=jule::Str(")", 1);
	return _64617_obj;
}



inline jule::Str _1a6336768_map(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81c496_MapExprModel> _65726_m) {
	jule::Str _65817_obj = jule::Str("jule::Map<", 10);
	_65817_obj+=static__1a63adc30_kind(_65726_m.get()._field_key_kind);
	_65817_obj+=jule::Str(",", 1);
	_65817_obj+=static__1a63adc30_kind(_65726_m.get()._field_val_kind);
	_65817_obj+=jule::Str(">({", 3);
	if ((_65726_m.get()._field_entries.len() > 0LL)) {
		{
			auto &expr = _65726_m.get()._field_entries;
			auto it = expr.begin();
			_iter_begin_1a8b1eb86:;
			if (it != expr.end()) {
				jule::Ptr<_1ab81bc48_KeyValPairExprModel> _1a8b1ed84_pair = *it;
				{
					jule::Str _66525_pair_obj = jule::Str("{", 1);
					_66525_pair_obj+=_1a633e210_expr(&(*_self_), _1a8b1ed84_pair.get()._field_key);
					_66525_pair_obj+=jule::Str(",", 1);
					_66525_pair_obj+=_1a633e210_expr(&(*_self_), _1a8b1ed84_pair.get()._field_val);
					_66525_pair_obj+=jule::Str("}", 1);
					_65817_obj+=_66525_pair_obj;
					_65817_obj+=jule::Str(",", 1);
				}
				_iter_next_1a8b1eb86:;
				++it;
				goto _iter_begin_1a8b1eb86;
			}
			_iter_end_1a8b1eb86:;
		}
		(_65817_obj).mut_slice(0LL,_65817_obj.len() - 1LL);
	}
	_65817_obj+=jule::Str("})", 2);
	return _65817_obj;
}



inline jule::Str _1a6336b20_slicing(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81cce3_SlicingExprModel> _67930_m) {
	jule::Str _68017_obj = _1a633dd58_model(&(*_self_), _67930_m.get()._field_expr);
	_68017_obj+=jule::Str(".slice(", 7);
	if ((!(_1dc2523c8_PRODUCTION))) {
		_68017_obj+=jule::Str("\"", 1);
		_68017_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _67930_m.get()._field_token);
		_68017_obj+=jule::Str("\",", 2);
	}
	_68017_obj+=_1a633e210_expr(&(*_self_), _67930_m.get()._field_left);
	if (_67930_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_68017_obj+=jule::Str(",", 1);
		_68017_obj+=_1a633e210_expr(&(*_self_), _67930_m.get()._field_right);
	}
	_68017_obj+=jule::Str(")", 1);
	return _68017_obj;
}



inline jule::Str _1a6336ec7_trait_sub(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81d640_TraitSubIdentExprModel> _69632_m) {
	jule::Str _69717_obj = static__1a63462b1_trait_decl(_69632_m.get()._field_trt);
	_69717_obj+=jule::Str("_mptr_data", 10);
	_69717_obj+=jule::Str("[(", 2);
	_69717_obj+=_1a633dd58_model(&(*_self_), _69632_m.get()._field_expr);
	_69717_obj+=jule::Str(").type_offset].", 15);
	_69717_obj+=static__1a6345b95_func(_69632_m.get()._field_method);
	return _69717_obj;
}



inline jule::Str _1a633737e_structure_sub(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81e245_StructSubIdentExprModel> _70636_m) {
	jule::Str _70717_obj = _1a633dd58_model(&(*_self_), jule::Any(_70636_m.get()._field_expr));
	if ((_70636_m.get()._field_field != nullptr)) {
		if ((_1a5916ce4_ptr(_70636_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70717_obj+=jule::Str("->", 2);
		} else if ((_1a5916a19_sptr(_70636_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_70717_obj+=jule::Str(".get(", 5);
			if ((!(_1dc2523c8_PRODUCTION))) {
				_70717_obj+=jule::Str("\"", 1);
				_70717_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _70636_m.get()._field_token);
				_70717_obj+=jule::Str("\"", 1);
			}
			_70717_obj+=jule::Str(").", 2);
		} else {
			_70717_obj+=jule::Str(".", 1);
		}
		_70717_obj+=static__1a6346ee8_field(_70636_m.get()._field_field.get()._field_decl);
	}
	return _70717_obj;
}



inline jule::Str _1a6337736_common_ident(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab820686_CommonIdentExprModel> _72727_m) {
	return _72727_m.get()._field_ident;
}



inline jule::Str _1a6337add_common_sub(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82106b_CommonSubIdentExprModel> _73133_m) {
	jule::Str _73217_obj = _1a633dd58_model(&(*_self_), _73133_m.get()._field_expr);
	{
		
		if ((_1a5916ce4_ptr(_73133_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1a8b2ea0e:;
			{
				_73217_obj+=jule::Str("->", 2);
			}
		}
		else if ((_1a5916a19_sptr(_73133_m.get()._field_expr_kind.ptr()) != nullptr)) {
			_case_begin_1a8b2e756:;
			{
				_73217_obj+=jule::Str(".get(", 5);
				if ((!(_1dc2523c8_PRODUCTION))) {
					_73217_obj+=jule::Str("\n", 1);
					_73217_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _73133_m.get()._field_token);
					_73217_obj+=jule::Str("\n", 1);
				}
				_73217_obj+=jule::Str(").", 2);
			}
		}
		else {
			_case_begin_1a8b2e3d2:;
			{
				_73217_obj+=jule::Str(".", 1);
			}
		}
		_match_end_1a8b2e37c:;
	}
	_73217_obj+=_73133_m.get()._field_ident;
	return _73217_obj;
}



inline jule::Str _1a6337e95_array(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab820136_ArrayExprModel> _75128_m) {
	jule::Str _75217_obj = static__1a63ac5be_array(_75128_m.get()._field_kind);
	if ((_75128_m.get()._field_elems.len() == 0LL)) {
		_75217_obj+=jule::Str("()", 2);
		return _75217_obj;
	}
	if ((_75128_m.get()._field_elems.len() == 2LL) && (_75128_m.get()._field_elems[1LL] == jule::Any(jule::Any(nullptr)))) {
		_75217_obj+=jule::Str("(", 1);
		_75217_obj+=_1a633e210_expr(&(*_self_), _75128_m.get()._field_elems[0LL]);
		_75217_obj+=jule::Str(")", 1);
		return _75217_obj;
	}
	_75217_obj+=jule::Str("({", 2);
	_75217_obj+=_1a62227b9_args(&(*_self_), _75128_m.get()._field_elems);
	_75217_obj+=jule::Str("})", 2);
	return _75217_obj;
}



inline jule::Str _1a633834c_func_ins_common(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab836218_FnIns> _77434_m) {
	jule::Str _77517_obj = static__1a63ad922_func(_77434_m);
	_77517_obj+=jule::Str("(", 1);
	_77517_obj+=_1a6338704_func_ins(&(*_self_), _77434_m);
	_77517_obj+=jule::Str(")", 1);
	return _77517_obj;
}



inline jule::Str _1a6338704_func_ins(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab836218_FnIns> _78327_m) {
	if ((_78327_m.get()._field_decl != nullptr) && _78327_m.get()._field_decl.get()._field_cpp_linked) {
		jule::Ptr<_1dd583043_Directive> _78517_d = _1a63a782d_find_directive(_78327_m.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_78517_d != nullptr)) {
			jule::Str _78725_obj = _1a633ed37_concat_all_parts(_78517_d.get()._field_args);
			_78725_obj+=jule::Str("::", 2);
			_78725_obj+=static__1a6345ea3_func_ins(_78327_m);
			return _78725_obj;
		}
	}
	return static__1a6345ea3_func_ins(_78327_m);
}



inline jule::Str _1a6338aab_tuple(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab821599_TupleExprModel> _79628_m) {
	jule::Str _79717_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &expr = _79628_m.get()._field_datas;
		auto it = expr.begin();
		_iter_begin_1a8b3b884:;
		if (it != expr.end()) {
			jule::Ptr<_1a58cee44_Data> _1a8b3b950_d = *it;
			{
				_79717_obj+=_1a633e210_expr(&(*_self_), _1a8b3b950_d.get()._field_model);
				_79717_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8b3b884:;
			++it;
			goto _iter_begin_1a8b3b884;
		}
		_iter_end_1a8b3b884:;
	}
	(_79717_obj).mut_slice(0LL,_79717_obj.len() - 1LL);
	_79717_obj+=jule::Str(")", 1);
	return _79717_obj;
}



inline jule::Str _1a6338e63_new_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel> _80731_m) {
	jule::Str _80817_obj = jule::Str("jule::new_ptr<", 14);
	_80817_obj+=static__1a63adc30_kind(_80731_m.get()._field_kind);
	_80817_obj+=jule::Str(">(", 2);
	if (_80731_m.get()._field_init != jule::Any(jule::Any(nullptr))) {
		_80817_obj+=_1a633e210_expr(&(*_self_), _80731_m.get()._field_init);
	}
	_80817_obj+=jule::Str(")", 1);
	return _80817_obj;
}



inline jule::Str _1a633931a_out_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab821c81_BuiltinOutCallExprModel> _81831_m) {
	if (_81831_m.get()._field_debug && _1dc2523c8_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _82217_obj = jule::Str("jule::out(", 10);
	_82217_obj+=_1a633e210_expr(&(*_self_), _81831_m.get()._field_expr);
	_82217_obj+=jule::Str(")", 1);
	return _82217_obj;
}



inline jule::Str _1a63396c2_outln_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel> _82833_m) {
	if (_82833_m.get()._field_debug && _1dc2523c8_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _83217_obj = jule::Str("jule::outln(", 12);
	_83217_obj+=_1a633e210_expr(&(*_self_), _82833_m.get()._field_expr);
	_83217_obj+=jule::Str(")", 1);
	return _83217_obj;
}



inline jule::Str _1a6339a79_panic_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab823887_BuiltinPanicCallExprModel> _83833_m) {
	jule::Str _83917_obj = jule::Str("jule::panic(", 12);
	_83917_obj+=_1a633e210_expr(&(*_self_), _83833_m.get()._field_expr);
	_83917_obj+=jule::Str(" + jule::Str(\"\\nlocation: ", 26);
	_83917_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _83833_m.get()._field_token);
	_83917_obj+=jule::Str("\"));", 4);
	return _83917_obj;
}



inline jule::Str _1a6339e31_assert_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel> _84734_m) {
	if (_1dc2523c8_PRODUCTION) {
		return jule::Str();
	}
	jule::Str _85117_obj = jule::Str("if (!(", 6);
	_85117_obj+=_1a633e210_expr(&(*_self_), _84734_m.get()._field_expr);
	_85117_obj+=jule::Str(")) jule::panic(jule::Str(", 25);
	_85117_obj+=_1a6340b07_cstr_lit(static_cast<jule::Slice<jule::U8>>(_84734_m.get()._field_log));
	_85117_obj+=jule::Str(") + jule::Str(\"\\nlocation: ", 27);
	_85117_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _84734_m.get()._field_token);
	_85117_obj+=jule::Str("\"));", 4);
	return _85117_obj;
}



inline jule::Str _1a633a2d8_error_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel> _86133_m) {
	jule::Str _86217_obj = jule::Str("return ", 7);
	if (_1ab8329d9_is_void(_86133_m.get()._field_func.get()._field_decl.ptr())) {
		_86217_obj+=jule::Str("jule::VoidExceptional(", 22);
	} else {
		_86217_obj+=jule::Str("jule::Exceptional<", 18);
		_86217_obj+=static__1a63adc30_kind(_86133_m.get()._field_func.get()._field_result);
		_86217_obj+=jule::Str(">(", 2);
	}
	_86217_obj+=_1a633e210_expr(&(*_self_), _86133_m.get()._field_err);
	_86217_obj+=jule::Str(")", 1);
	return _86217_obj;
}



inline jule::Str _1a633a690_make_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel> _87532_m) {
	jule::Str _87617_obj = jule::Str();
	if (_87532_m.get()._field_len != jule::Any(jule::Any(nullptr))) {
		_87617_obj+=_1a633e210_expr(&(*_self_), _87532_m.get()._field_len);
	} else {
		_87617_obj+=jule::Str("0", 1);
	}
	if (_87532_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
		_87617_obj+=jule::Str(",", 1) + _1a633e210_expr(&(*_self_), _87532_m.get()._field_cap);
	}
	if ((_1a59170be_enm(_1a5917674_slc(_87532_m.get()._field_kind.ptr()).get()._field_elem.ptr()) != nullptr)) {
		_87617_obj+=jule::Str(",", 1);
		_87617_obj+=_1a633e96e_init_expr(&(*_self_), _1a5917674_slc(_87532_m.get()._field_kind.ptr()).get()._field_elem);
		if (_87532_m.get()._field_cap != jule::Any(jule::Any(nullptr))) {
			(_87617_obj).buffer.insert(0, ((static__1a63adc30_kind(_87532_m.get()._field_kind) + jule::Str("::alloc(", 8))));
		} else {
			(_87617_obj).buffer.insert(0, ((static__1a63adc30_kind(_87532_m.get()._field_kind) + jule::Str("::alloc_def(", 12))));
		}
	} else {
		(_87617_obj).buffer.insert(0, ((static__1a63adc30_kind(_87532_m.get()._field_kind) + jule::Str("::alloc(", 8))));
	}
	_87617_obj+=jule::Str(")", 1);
	return _87617_obj;
}



inline jule::Str _1a633aa47_push_to_slice(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a63207da_PushToSliceExprModel> _90236_m) {
	jule::Str _90313_dest = _1a633dd58_model(&(*_self_), _90236_m.get()._field_dest);
	jule::Str _90417_obj = _90313_dest;
	_90417_obj+=jule::Str(" = jule::alloc_for_append(", 26);
	_90417_obj+=_90313_dest;
	_90417_obj+=jule::Str(",", 1);
	_90417_obj+=_1ac445de3_itoa(static_cast<jule::I64>(_90236_m.get()._field_elems.get()._field_elems.len()));
	_90417_obj+=jule::Str(");", 2);
	{
		auto &expr = _90236_m.get()._field_elems.get()._field_elems;
		auto it = expr.begin();
		_iter_begin_1a8b54baa:;
		if (it != expr.end()) {
			jule::Any _1a8b54c32_e = *it;
			{
				_90417_obj+=_90313_dest;
				_90417_obj+=jule::Str(".__push(", 8);
				_90417_obj+=_1a633dd58_model(&(*_self_), _1a8b54c32_e);
				_90417_obj+=jule::Str(");", 2);
			}
			_iter_next_1a8b54baa:;
			++it;
			goto _iter_begin_1a8b54baa;
		}
		_iter_end_1a8b54baa:;
	}
	return _90417_obj;
}



inline jule::Str _1a633adee_append_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel> _92034_m) {
	jule::Str _92117_obj = jule::Str("jule::append(", 13);
	_92117_obj+=_1a633dd58_model(&(*_self_), _92034_m.get()._field_dest);
	_92117_obj+=jule::Str(",", 1);
	_92117_obj+=_1a633dd58_model(&(*_self_), _92034_m.get()._field_elements);
	_92117_obj+=jule::Str(")", 1);
	return _92117_obj;
}



inline jule::Str _1a633b2a6_clone_call(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel> _92933_m) {
	jule::Str _93017_obj = jule::Str("jule::clone(", 12);
	_93017_obj+=_1a633dd58_model(&(*_self_), _92933_m.get()._field_expr);
	_93017_obj+=jule::Str(")", 1);
	return _93017_obj;
}



inline jule::Str _1a633b65d_sizeof(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82ab25_SizeofExprModel> _93629_m) {
	jule::Str _93717_obj = jule::Str("sizeof(", 7);
	_93717_obj+=_1a633e210_expr(&(*_self_), _93629_m.get()._field_expr);
	_93717_obj+=jule::Str(")", 1);
	return _93717_obj;
}



inline jule::Str _1a633ba15_alignof(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82b4c7_AlignofExprModel> _94330_m) {
	jule::Str _94417_obj = jule::Str("alignof(", 8);
	_94417_obj+=_1a633e210_expr(&(*_self_), _94330_m.get()._field_expr);
	_94417_obj+=jule::Str(")", 1);
	return _94417_obj;
}



inline jule::Str _1a633bdbc_rune_lit(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82b98e_RuneExprModel> _95023_m) {
	if ((_95023_m.get()._field_code <= 127LL)) {
		jule::Str _95221_b = _1a6340497_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_95023_m.get()._field_code)));
		if ((_95221_b == jule::Str("'", 1))) {
			_95221_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _95221_b) + jule::Str("'", 1));
	}
	return _1a6341300_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_95023_m.get()._field_code)));
}



inline jule::Str _1a633c274_structure_static(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab81ea09_StructStaticIdentExprModel> _96135_m) {
	return static__1a6345ea3_func_ins(_96135_m.get()._field_method);
}



inline jule::Str _1a633c62b_integrated_to_str(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82c000_IntegratedToStrExprModel> _96540_m) {
	jule::Str _96617_obj = jule::Str("jule::to_str(", 13);
	_96617_obj+=_1a633dd58_model(&(*_self_), _96540_m.get()._field_expr);
	_96617_obj+=jule::Str(")", 1);
	return _96617_obj;
}



inline jule::Str _1a633c9d3_ternary(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82c72b_TernaryExprModel> _97230_m) {
	jule::Str _97317_obj = jule::Str("((", 2);
	_97317_obj+=_1a633dd58_model(&(*_self_), _97230_m.get()._field_condition);
	_97317_obj+=jule::Str(") ? (", 5);
	_97317_obj+=_1a633dd58_model(&(*_self_), _97230_m.get()._field_true_expr);
	_97317_obj+=jule::Str(") : (", 5);
	_97317_obj+=_1a633dd58_model(&(*_self_), _97230_m.get()._field_false_expr);
	_97317_obj+=jule::Str("))", 2);
	return _97317_obj;
}



inline jule::Str _1a633cd8a_backend_emit(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82cd7a_BackendEmitExprModel> _98335_m) {
	if ((_98335_m.get()._field_exprs.len() == 0LL)) {
		return _98335_m.get()._field_code;
	}
	{
		auto &expr = _98335_m.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a8b64b32:;
		if (it != expr.end()) {
			jule::I64 _1a8b6569e_i = it - expr.begin();
			jule::Any _1a8b65825_expr = *it;
			{
				_98335_m.get()._field_exprs[_1a8b6569e_i]=jule::Any(_1a633e210_expr(&(*_self_), _1a8b65825_expr));
			}
			_iter_next_1a8b64b32:;
			++it;
			_1a8b6569e_i++;
			goto _iter_begin_1a8b64b32;
		}
		_iter_end_1a8b64b32:;
	}
	return _1a59874d5_format(_98335_m.get()._field_code,_98335_m.get()._field_exprs);
}



inline jule::Str _1a633d242_free(_1a6224546_ExprCoder* _self_,jule::Ptr<_1ab82d3ca_FreeExprModel> _99327_m) {
	if (_1dc254111_RC) {
		return (_1a633e210_expr(&(*_self_), _99327_m.get()._field_expr) + jule::Str(".dealloc()", 10));
	}
	return (_1a633e210_expr(&(*_self_), _99327_m.get()._field_expr) + jule::Str(".__free()", 9));
}



inline jule::Str _1a633d5e9_mut_slicing(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a632106b_MutSlicingExprModel> _100034_m) {
	jule::Str _100117_obj = jule::Str("(", 1);
	_100117_obj+=_1a633dd58_model(&(*_self_), _100034_m.get()._field_expr);
	_100117_obj+=jule::Str(").mut_slice(", 12);
	if ((!(_1dc2523c8_PRODUCTION))) {
		_100117_obj+=jule::Str("\"", 1);
		_100117_obj+=_1a637c88b_loc_info((*_self_)._field_oc.ptr(), _100034_m.get()._field_token);
		_100117_obj+=jule::Str("\",", 2);
	}
	_100117_obj+=_1a633e210_expr(&(*_self_), _100034_m.get()._field_left);
	if (_100034_m.get()._field_right != jule::Any(jule::Any(nullptr))) {
		_100117_obj+=jule::Str(",", 1);
		_100117_obj+=_1a633e210_expr(&(*_self_), _100034_m.get()._field_right);
	}
	_100117_obj+=jule::Str(");", 2);
	return _100117_obj;
}



inline jule::Str _1a633d9a1_str_insert_begin(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a6321753_StrInsertBeginExprModel> _101839_m) {
	jule::Str _101917_obj = jule::Str("(", 1);
	_101917_obj+=_1a633dd58_model(&(*_self_), _101839_m.get()._field_dest);
	_101917_obj+=jule::Str(").buffer.insert(0, (", 20);
	_101917_obj+=_1a633dd58_model(&(*_self_), _101839_m.get()._field_expr);
	_101917_obj+=jule::Str("));", 3);
	return _101917_obj;
}



inline jule::Str _1a633dd58_model(_1a6224546_ExprCoder* _self_,jule::Any _102728_m) {
	{
		auto &_match_expr{ _102728_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a8b6d8c7:;
			{
				return _1a633dd58_model(&(*_self_), _102728_m.operator jule::Ptr<_1a58cee44_Data>().get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5913e9a_TypeKind>>()) {
			_case_begin_1a8b6e301:;
			{
				return static__1a63adc30_kind(_102728_m.operator jule::Ptr<_1a5913e9a_TypeKind>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1a8b6dbc4:;
			{
				return _1a631742a_constant(&(*_self_), _102728_m.operator jule::Ptr<_1ac4d0ec2_Const>(),false);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a8b6dc3a:;
			{
				return _1a6307a58_var(&(*_self_), _102728_m.operator jule::Ptr<_1a588601b_Var>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44770d_Trait>>()) {
			_case_begin_1a8b6dca1:;
			{
				return static__1a63462b1_trait_decl(_102728_m.operator jule::Ptr<_1ac44770d_Trait>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a8b6dd17:;
			{
				return _1a622426b_structure(&(*_self_), _102728_m.operator jule::Ptr<_1ab810b3d_Struct>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab814515_StructIns>>()) {
			_case_begin_1a8b6de6b:;
			{
				return _1a6307739_structure_ins(&(*_self_), _102728_m.operator jule::Ptr<_1ab814515_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1a8b6ded2:;
			{
				return _1a633834c_func_ins_common(&(*_self_), _102728_m.operator jule::Ptr<_1ab836218_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a631ed5b_UnsafeBinopExprModel>>()) {
			_case_begin_1a8b6e048:;
			{
				return _1a6224964_unsafe_binary(&(*_self_), _102728_m.operator jule::Ptr<_1a631ed5b_UnsafeBinopExprModel>().get()._field_node);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
			_case_begin_1a8b6e0c0:;
			{
				return _1a628284b_binary(&(*_self_), _102728_m.operator jule::Ptr<_1ab8170b7_BinopExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab817716_UnaryExprModel>>()) {
			_case_begin_1a8b6e147:;
			{
				return _1a631a6c5_unary(&(*_self_), _102728_m.operator jule::Ptr<_1ab817716_UnaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab818508_StructLitExprModel>>()) {
			_case_begin_1a8b6e1be:;
			{
				return _1a62b9773_structure_lit(&(*_self_), _102728_m.operator jule::Ptr<_1ab818508_StructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab818ae1_AllocStructLitExprModel>>()) {
			_case_begin_1a8b6e6db:;
			{
				return _1a627187e_alloc_structure(&(*_self_), _102728_m.operator jule::Ptr<_1ab818ae1_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81941b_CastingExprModel>>()) {
			_case_begin_1a8b6e763:;
			{
				return _1a62719e4_casting(&(*_self_), _102728_m.operator jule::Ptr<_1ab81941b_CastingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
			_case_begin_1a8b6e7da:;
			{
				return _1a6335415_func_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81a74c_SliceExprModel>>()) {
			_case_begin_1a8b6e862:;
			{
				return _1a633579a_slice(&(*_self_), _102728_m.operator jule::Ptr<_1ab81a74c_SliceExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab820136_ArrayExprModel>>()) {
			_case_begin_1a8b6e8d9:;
			{
				return _1a6337e95_array(&(*_self_), _102728_m.operator jule::Ptr<_1ab820136_ArrayExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6320279_UnsafeIndexingExprModel>>()) {
			_case_begin_1a8b6e961:;
			{
				return _1a6336009_unsafe_indexing(&(*_self_), _102728_m.operator jule::Ptr<_1a6320279_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81ae9a_IndexingExprModel>>()) {
			_case_begin_1a8b6e9d8:;
			{
				return _1a6335b52_indexing(&(*_self_), _102728_m.operator jule::Ptr<_1ab81ae9a_IndexingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81b5e9_AnonFnExprModel>>()) {
			_case_begin_1a8b6ea60:;
			{
				return _1a63363b1_anon_func(&(*_self_), _102728_m.operator jule::Ptr<_1ab81b5e9_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81c496_MapExprModel>>()) {
			_case_begin_1a8b6ead7:;
			{
				return _1a6336768_map(&(*_self_), _102728_m.operator jule::Ptr<_1ab81c496_MapExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81cce3_SlicingExprModel>>()) {
			_case_begin_1a8b6eb5e:;
			{
				return _1a6336b20_slicing(&(*_self_), _102728_m.operator jule::Ptr<_1ab81cce3_SlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81d640_TraitSubIdentExprModel>>()) {
			_case_begin_1a8b6ebd6:;
			{
				return _1a6336ec7_trait_sub(&(*_self_), _102728_m.operator jule::Ptr<_1ab81d640_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
			_case_begin_1a8b6ec5d:;
			{
				return _1a633737e_structure_sub(&(*_self_), _102728_m.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab820686_CommonIdentExprModel>>()) {
			_case_begin_1a8b6ecd5:;
			{
				return _1a6337736_common_ident(&(*_self_), _102728_m.operator jule::Ptr<_1ab820686_CommonIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82106b_CommonSubIdentExprModel>>()) {
			_case_begin_1a8b6ed5c:;
			{
				return _1a6337add_common_sub(&(*_self_), _102728_m.operator jule::Ptr<_1ab82106b_CommonSubIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab821599_TupleExprModel>>()) {
			_case_begin_1a8b6edd4:;
			{
				return _1a6338aab_tuple(&(*_self_), _102728_m.operator jule::Ptr<_1ab821599_TupleExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>>()) {
			_case_begin_1a8b6ee5b:;
			{
				return _1a633931a_out_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>>()) {
			_case_begin_1a8b6eed3:;
			{
				return _1a63396c2_outln_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>>()) {
			_case_begin_1a8b7005a:;
			{
				return _1a6338e63_new_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab8231c2_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>>()) {
			_case_begin_1a8b700d2:;
			{
				return _1a6339a79_panic_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab823887_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>>()) {
			_case_begin_1a8b70159:;
			{
				return _1a6339e31_assert_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
			_case_begin_1a8b701d1:;
			{
				return _1a633a2d8_error_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>>()) {
			_case_begin_1a8b70258:;
			{
				return _1a633a690_make_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab82976c_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>>()) {
			_case_begin_1a8b702d0:;
			{
				return _1a633adee_append_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab829e32_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>>()) {
			_case_begin_1a8b70357:;
			{
				return _1a633b2a6_clone_call(&(*_self_), _102728_m.operator jule::Ptr<_1ab822a0c_BuiltinCloneCallExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82ab25_SizeofExprModel>>()) {
			_case_begin_1a8b703ce:;
			{
				return _1a633b65d_sizeof(&(*_self_), _102728_m.operator jule::Ptr<_1ab82ab25_SizeofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82b4c7_AlignofExprModel>>()) {
			_case_begin_1a8b70456:;
			{
				return _1a633ba15_alignof(&(*_self_), _102728_m.operator jule::Ptr<_1ab82b4c7_AlignofExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82b98e_RuneExprModel>>()) {
			_case_begin_1a8b704cd:;
			{
				return _1a633bdbc_rune_lit(&(*_self_), _102728_m.operator jule::Ptr<_1ab82b98e_RuneExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81ea09_StructStaticIdentExprModel>>()) {
			_case_begin_1a8b70555:;
			{
				return _1a633c274_structure_static(&(*_self_), _102728_m.operator jule::Ptr<_1ab81ea09_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82c000_IntegratedToStrExprModel>>()) {
			_case_begin_1a8b705cc:;
			{
				return _1a633c62b_integrated_to_str(&(*_self_), _102728_m.operator jule::Ptr<_1ab82c000_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82c72b_TernaryExprModel>>()) {
			_case_begin_1a8b70654:;
			{
				return _1a633c9d3_ternary(&(*_self_), _102728_m.operator jule::Ptr<_1ab82c72b_TernaryExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82cd7a_BackendEmitExprModel>>()) {
			_case_begin_1a8b706cb:;
			{
				return _1a633cd8a_backend_emit(&(*_self_), _102728_m.operator jule::Ptr<_1ab82cd7a_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab82d3ca_FreeExprModel>>()) {
			_case_begin_1a8b70753:;
			{
				return _1a633d242_free(&(*_self_), _102728_m.operator jule::Ptr<_1ab82d3ca_FreeExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a632106b_MutSlicingExprModel>>()) {
			_case_begin_1a8b707ca:;
			{
				return _1a633d5e9_mut_slicing(&(*_self_), _102728_m.operator jule::Ptr<_1a632106b_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a6321753_StrInsertBeginExprModel>>()) {
			_case_begin_1a8b70852:;
			{
				return _1a633d9a1_str_insert_begin(&(*_self_), _102728_m.operator jule::Ptr<_1a6321753_StrInsertBeginExprModel>());
			}
		}
		else {
			_case_begin_1a8b6da70:;
			{
				return jule::Str("<unimplemented_expression_model>", 32);
			}
		}
		_match_end_1a8b6d993:;
	}
}



inline jule::Str _1a633e210_expr(_1a6224546_ExprCoder* _self_,jule::Any _112627_e) {
	jule::Str _112717_obj = _1a633dd58_model(&(*_self_), _112627_e);
	if ((_112717_obj.len() == 0LL) || (_112717_obj[0LL] != '(')) {
		return _112717_obj;
	}
	{
		auto &_match_expr{ _112627_e };
		
		if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
			_case_begin_1a8b8b8b2:;
			{
				(_112717_obj).mut_slice(1LL,_112717_obj.len() - 1LL);
			}
		}
		_match_end_1a8b8b6d6:;
	}
	return _112717_obj;
}



inline jule::Str _1a633e5b7_val(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a58d1451_Value> _113826_v) {
	if (_1a58d0b48_is_const(_113826_v.get()._field_data.ptr())) {
		return _1a631742a_constant(&(*_self_), _113826_v.get()._field_data.get()._field_constant,(_113826_v.get()._field_data.get()._field_kind != nullptr) && _1a591be2b_is_f32(_1a591673e_prim(_113826_v.get()._field_data.get()._field_kind.ptr()).ptr()));
	}
	return _1a633e210_expr(&(*_self_), _113826_v.get()._field_data.get()._field_model);
}



inline jule::Str _1a633e96e_init_expr(_1a6224546_ExprCoder* _self_,jule::Ptr<_1a5913e9a_TypeKind> _114532_t) {
	if ((_1a5916ce4_ptr(_114532_t.ptr()) != nullptr)) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_1ac44a337_Enum> _114917_enm = _1a59170be_enm(_114532_t.ptr());
	if ((_114917_enm != nullptr)) {
		return _1a633e5b7_val(&(*_self_), _114917_enm.get()._field_items[0LL].get()._field_value);
	}
	return (static__1a63adc30_kind(_114532_t) + jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a6224546_ExprCoder _Src) {
	_Stream << "ExprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a6342aa4_clone_func_decl(jule::Ptr<_1ab810b3d_Struct>& _1032_s) {
	jule::Str _1117_obj = static__1a63abea3_structure(_1032_s);
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;
}



inline jule::Str static__1a6342db2_clone_func_def(jule::Ptr<_1ab810b3d_Struct>& _1631_s) {
	jule::Str _1717_obj = static__1a63abea3_structure(_1631_s);
	_1717_obj+=jule::Str(" ", 1) + _1717_obj;
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6342510_DeriveCoder _Src) {
	_Stream << "DeriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a6344bc7_to_ident(jule::Str _3124_ident) {
	return jule::Str("_", 1) + _3124_ident;
}



inline jule::Str static__1a6344ed5_addr(jule::U64 _3620_addr) {
	return jule::Str("_", 1) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_3620_addr)),15LL);
}



inline jule::Str static__1a63453c0_to_out(jule::Str _4522_ident,jule::U64 _4534_addr) {
	if ((_4534_addr != 0LLU)) {
		jule::Str _4721_obj = static__1a6344ed5_addr(_4534_addr);
		_4721_obj+=jule::Str("_", 1);
		_4721_obj+=_4522_ident;
		return _4721_obj;
	}
	return static__1a6344bc7_to_ident(_4522_ident);
}



inline jule::Str static__1a6345887_to_local(jule::I64 _6124_row,jule::I64 _6134_col,jule::Str _6144_ident) {
	jule::Str _6217_obj = _1ac445de3_itoa(_6124_row);
	_6217_obj+=_1ac445de3_itoa(_6134_col);
	_6217_obj+=jule::Str("_", 1);
	_6217_obj+=_6144_ident;
	return static__1a6344bc7_to_ident(_6217_obj);
}



inline jule::Str static__1a6345b95_func(jule::Ptr<_1ab832324_Fn>& _7021_f) {
	{
		
		if (_7021_f.get()._field_cpp_linked) {
			_case_begin_1a8b99b89:;
			{
				return _7021_f.get()._field_ident;
			}
		}
		else if ((_7021_f.get()._field_ident == jule::Str("main", 4))) {
			_case_begin_1a8b99c00:;
			{
				return jule::Str("entry_point", 11);
			}
		}
		else if (_1ab832cb4_is_method(_7021_f.ptr())) {
			_case_begin_1a8b9935e:;
			{
				jule::Str _7721_obj = static__1a63453c0_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
				if (_7021_f.get()._field_statically) {
					(_7721_obj).buffer.insert(0, (jule::Str("static_", 7)));
					return _7721_obj;
				}
				return _7721_obj;
			}
		}
		else {
			_case_begin_1a8b992e8:;
			{
				return static__1a63453c0_to_out(_7021_f.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_7021_f)));
			}
		}
		_match_end_1a8b99161:;
	}
}



inline jule::Str static__1a6345ea3_func_ins(jule::Ptr<_1ab836218_FnIns>& _8929_f) {
	if (_1ab837093_is_builtin(_8929_f.ptr())) {
		return jule::Str("jule::", 6) + _8929_f.get()._field_decl.get()._field_ident;
	}
	if (_8929_f.get()._field_decl.get()._field_cpp_linked || (_8929_f.get()._field_generics.len() == 0LL)) {
		return static__1a6345b95_func(_8929_f.get()._field_decl);
	}
	{
		auto &expr = _8929_f.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8b9dad3:;
		if (it != expr.end()) {
			jule::I64 _1a8b9dbe3_i = it - expr.begin();
			jule::Ptr<_1ab836218_FnIns> _1a8b9de13_ins = *it;
			{
				if (_1ab837725_same(_1a8b9de13_ins.ptr(), _8929_f)) {
					jule::Str _9825_obj = static__1a6345b95_func(_8929_f.get()._field_decl);
					_9825_obj+=jule::Str("_", 1);
					_9825_obj+=_1ac445de3_itoa(_1a8b9dbe3_i);
					return _9825_obj;
				}
			}
			_iter_next_1a8b9dad3:;
			++it;
			_1a8b9dbe3_i++;
			goto _iter_begin_1a8b9dad3;
		}
		_iter_end_1a8b9dad3:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a63462b1_trait_decl(jule::Ptr<_1ac44770d_Trait> _10826_t) {
	if (_1ac4485bb_is_builtin(_10826_t.ptr())) {
		return jule::Str("jule::", 6) + _10826_t.get()._field_ident;
	}
	return static__1a63453c0_to_out(_10826_t.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_10826_t)));
}



inline jule::Str static__1a63465be_param(jule::Ptr<_1ab830300_Param>& _11622_p) {
	if (_1aa078929_is_anon_ident(_11622_p.get()._field_ident) || _1aa07861b_is_ignore_ident(_11622_p.get()._field_ident)) {
		return jule::Str();
	}
	if (_1ab830c07_is_self(_11622_p.ptr())) {
		return jule::Str("_self_", 6);
	}
	return static__1a6345887_to_local(_11622_p.get()._field_token._field_row,_11622_p.get()._field_token._field_column,_11622_p.get()._field_ident);
}



inline jule::Str static__1a63468cc_structure(jule::Ptr<_1ab810b3d_Struct>& _12726_s) {
	if (_12726_s.get()._field_cpp_linked) {
		if (_1a63a7c6d_has_directive(_12726_s.get()._field_directives,jule::Str("typedef", 7))) {
			return _12726_s.get()._field_ident;
		}
		return jule::Str("struct ", 7) + _12726_s.get()._field_ident;
	}
	return static__1a63453c0_to_out(_12726_s.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_12726_s)));
}



inline jule::Str static__1a6346bda_structure_ins(jule::Ptr<_1ab814515_StructIns>& _13834_s) {
	if (_13834_s.get()._field_decl.get()._field_cpp_linked || (_13834_s.get()._field_generics.len() == 0LL)) {
		return static__1a63468cc_structure(_13834_s.get()._field_decl);
	}
	{
		auto &expr = _13834_s.get()._field_decl.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8ba70b4:;
		if (it != expr.end()) {
			jule::I64 _1a8ba71e6_i = it - expr.begin();
			jule::Ptr<_1ab814515_StructIns> _1a8ba7405_ins = *it;
			{
				if (_1ab8154a0_same(_1a8ba7405_ins.ptr(), _13834_s)) {
					jule::Str _14425_obj = static__1a63468cc_structure(_13834_s.get()._field_decl);
					_14425_obj+=jule::Str("_", 1);
					_14425_obj+=_1ac445de3_itoa(_1a8ba71e6_i);
					return _14425_obj;
				}
			}
			_iter_next_1a8ba70b4:;
			++it;
			_1a8ba71e6_i++;
			goto _iter_begin_1a8ba70b4;
		}
		_iter_end_1a8ba70b4:;
	}
	return jule::Str("__?__", 5);
}



inline jule::Str static__1a6346ee8_field(jule::Ptr<_1ab80cdd2_Field>& _15422_f) {
	if (_15422_f.get()._field_owner.get()._field_cpp_linked) {
		return _15422_f.get()._field_ident;
	}
	return jule::Str("_field_", 7) + _15422_f.get()._field_ident;
}



inline jule::Str static__1a6347306_var(jule::Ptr<_1a588601b_Var> _16223_v) {
	{
		
		if (_16223_v.get()._field_cpp_linked) {
			_case_begin_1a8baa370:;
			{
				return _16223_v.get()._field_ident;
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("error", 5))) {
			_case_begin_1a8ba9a45:;
			{
				return jule::Str("except.error", 12);
			}
		}
		else if ((_16223_v.get()._field_ident == jule::Str("self", 4))) {
			_case_begin_1a8ba9aab:;
			{
				if ((_1a5916a19_sptr(_16223_v.get()._field_kind.get()._field_kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);
				}
				return jule::Str("_self_", 6);
			}
		}
		else if ((_16223_v.get()._field_scope != nullptr)) {
			_case_begin_1a8ba9b22:;
			{
				return static__1a6345887_to_local(_16223_v.get()._field_token._field_row,_16223_v.get()._field_token._field_column,_16223_v.get()._field_ident);
			}
		}
		else {
			_case_begin_1a8ba99ce:;
			{
				return static__1a63453c0_to_out(_16223_v.get()._field_ident,static_cast<jule::U64>(static_cast<jule::U64>(_16223_v)));
			}
		}
		_match_end_1a8ba9638:;
	}
}



inline jule::Str static__1a6347614_iter_begin(jule::U64 _18126_it) {
	return jule::Str("_iter_begin_", 12) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18126_it)),15LL);
}



inline jule::Str static__1a6347922_iter_end(jule::U64 _18624_it) {
	return jule::Str("_iter_end_", 10) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_18624_it)),15LL);
}



inline jule::Str static__1a6347c30_iter_next(jule::U64 _19125_it) {
	return jule::Str("_iter_next_", 11) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_19125_it)),15LL);
}



inline jule::Str static__1a634803d_label(jule::Str _19621_ident) {
	return jule::Str("_julec_label_", 13) + _19621_ident;
}



inline jule::Str static__1a634834b_match_end(jule::U64 _20125_m) {
	return jule::Str("_match_end_", 11) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20125_m)),15LL);
}



inline jule::Str static__1a6348659_case_begin(jule::U64 _20626_c) {
	return jule::Str("_case_begin_", 12) + _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_20626_c)),15LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1a63445bc_IdentCoder _Src) {
	_Stream << "IdentCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a639cb42_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "compiler:" << _Src._field_compiler << ", ";
	_Stream << "compiler_command:" << _Src._field_compiler_command;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a639d060_TraitHash _Src) {
	_Stream << "TraitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a63a8653_to_str(_1a63a7ee3_CustomType* _self_) {
	return (*_self_)._field_kind;
}



inline jule::Bool _1a63a8a0a_equals(jule::Ptr<_1a63a7ee3_CustomType> _self_,jule::Ptr<_1a5913e9a_TypeKind> _5326_k) {
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63a7ee3_CustomType _Src) {
	_Stream << _1a63a8653_to_str(&_Src);
	return _Stream;
}



inline jule::Str static__1a63a94de_to_type(jule::Str _7327_id) {
	_7327_id=_1ac552a27_real_kind_of(_7327_id);
	if ((97LL <= _7327_id[0LL]) && (_7327_id[0LL] <= 122LLU)) {
		_7327_id[0LL]-=32LLU;
	}
	return jule::Str("jule::", 6) + _7327_id;
}



inline jule::Str static__1a63a97ec_prim(jule::Ptr<_1a591970e_Prim> _8220_p) {
	return static__1a63a94de_to_type(_1a5919cd6_to_str(_8220_p.ptr()));
}



inline jule::Str static__1a63a9b0a_tuple(jule::Ptr<_1a59203b3_Tuple> _8725_t) {
	jule::Str _8817_obj = jule::Str("std::tuple<", 11);
	{
		auto &expr = _8725_t.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1a8ca9b9a:;
		if (it != expr.end()) {
			jule::Ptr<_1a5913e9a_TypeKind> _1a8ca9c66_tk = *it;
			{
				_8817_obj+=static__1a63adc30_kind(_1a8ca9c66_tk);
				_8817_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8ca9b9a:;
			++it;
			goto _iter_begin_1a8ca9b9a;
		}
		_iter_end_1a8ca9b9a:;
	}
	(_8817_obj).mut_slice(0LL,_8817_obj.len() - 1LL);
	_8817_obj+=jule::Str(">", 1);
	return _8817_obj;
}



inline jule::Str static__1a63a9e18_as_sptr(jule::Str _9923_elem) {
	jule::Str _10017_obj = jule::Str("jule::Ptr<", 10);
	_10017_obj+=_9923_elem;
	_10017_obj+=jule::Str(">", 1);
	return _10017_obj;
}



inline jule::Str static__1a63aa226_as_ptr(jule::Str _10722_elem) {
	return (_10722_elem + jule::Str("*", 1));
}



inline jule::Str static__1a63aa534_sptr(jule::Ptr<_1a591d768_Sptr> _11224_sptr) {
	return static__1a63a9e18_as_sptr(static__1a63adc30_kind(_11224_sptr.get()._field_elem));
}



inline jule::Str static__1a63aa842_ptr(jule::Ptr<_1a59230db_Ptr> _11723_p) {
	
	if (_1a5923e33_is_unsafe(_11723_p.ptr())) {
		return jule::Str("void*", 5);
	}
	jule::Str _12217_elem = static__1a63adc30_kind(_11723_p.get()._field_elem);
	_12217_elem+=jule::Str("*", 1);
	return _12217_elem;
}



inline jule::Str static__1a63aab50_enum_decl(jule::Ptr<_1ac44a337_Enum> _12829_e) {
	return static__1a63adc30_kind(_12829_e.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a63aae5d_as_slice(jule::Ptr<_1a5913e9a_TypeKind> _13228_elem) {
	jule::Str _13317_obj = jule::Str("jule::Slice<", 12);
	_13317_obj+=static__1a63adc30_kind(_13228_elem);
	_13317_obj+=jule::Str(">", 1);
	return _13317_obj;
}



inline jule::Str static__1a63ab26b_slice(jule::Ptr<_1a591e549_Slc> _14025_s) {
	return static__1a63aae5d_as_slice(_14025_s.get()._field_elem);
}



inline jule::Str static__1a63ab579_map(jule::Ptr<_1a592132b_Map> _14523_m) {
	jule::Str _14617_obj = jule::Str("jule::Map<", 10);
	_14617_obj+=static__1a63adc30_kind(_14523_m.get()._field_key);
	_14617_obj+=jule::Str(",", 1);
	_14617_obj+=static__1a63adc30_kind(_14523_m.get()._field_val);
	_14617_obj+=jule::Str(">", 1);
	return _14617_obj;
}



inline jule::Str static__1a63ab887_trait_ident(jule::Str _15427_ident) {
	jule::Str _15517_obj = jule::Str("jule::Trait<", 12);
	_15517_obj+=_15427_ident;
	_15517_obj+=jule::Str(">", 1);
	return _15517_obj;
}



inline jule::Str static__1a63abb95_trait_decl(jule::Ptr<_1ac44770d_Trait> _16226_t) {
	return static__1a63ab887_trait_ident(static__1a63462b1_trait_decl(_16226_t));
}



inline jule::Str static__1a63abea3_structure(jule::Ptr<_1ab810b3d_Struct> _16725_s) {
	jule::Str _16817_rep = jule::Str();
	if (_16725_s.get()._field_cpp_linked && (!(_1a63a7c6d_has_directive(_16725_s.get()._field_directives,jule::Str("typedef", 7))))) {
		_16817_rep+=jule::Str("struct ", 7);
	}
	_16817_rep+=static__1a63468cc_structure(_16725_s);
	return _16817_rep;
}



inline jule::Str static__1a63ac2b1_structure_ins(jule::Ptr<_1ab814515_StructIns> _17733_s) {
	if (_17733_s.get()._field_decl.get()._field_cpp_linked) {
		jule::Str _17921_ident = static__1a6346bda_structure_ins(_17733_s);
		if ((_17733_s.get()._field_generics.len() > 0LL)) {
			_17921_ident+=jule::Str("<", 1);
			{
				auto &expr = _17733_s.get()._field_generics;
				auto it = expr.begin();
				_iter_begin_1a8cb7339:;
				if (it != expr.end()) {
					jule::Ptr<_1a5913e9a_TypeKind> _1a8cb7845_g = *it;
					{
						_17921_ident+=static__1a63adc30_kind(_1a8cb7845_g);
						_17921_ident+=jule::Str(",", 1);
					}
					_iter_next_1a8cb7339:;
					++it;
					goto _iter_begin_1a8cb7339;
				}
				_iter_end_1a8cb7339:;
			}
			(_17921_ident).mut_slice(0LL,_17921_ident.len() - 1LL);
			_17921_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_1dd583043_Directive> _18917_d = _1a63a782d_find_directive(_17733_s.get()._field_decl.get()._field_directives,jule::Str("namespace", 9));
		if ((_18917_d != nullptr)) {
			(_17921_ident).buffer.insert(0, ((_1a633ed37_concat_all_parts(_18917_d.get()._field_args) + jule::Str("::", 2))));
		}
		return _17921_ident;
	}
	return static__1a6346bda_structure_ins(_17733_s);
}



inline jule::Str static__1a63ac5be_array(jule::Ptr<_1a592230a_Arr> _19925_a) {
	jule::Str _20017_obj = jule::Str("jule::Array<", 12);
	_20017_obj+=static__1a63adc30_kind(_19925_a.get()._field_elem);
	_20017_obj+=jule::Str(",", 1);
	_20017_obj+=_1ac445de3_itoa(_19925_a.get()._field_n);
	_20017_obj+=jule::Str(">", 1);
	return _20017_obj;
}



inline jule::Str static__1a63ac8cc_param(jule::Ptr<_1ab830300_Param>& _20926_p) {
	jule::Str _21017_obj = jule::Str();
	if (_20926_p.get()._field_variadic) {
		_21017_obj+=jule::Str("jule::Slice<", 12);
		_21017_obj+=static__1a63adc30_kind(_20926_p.get()._field_kind.get()._field_kind);
		_21017_obj+=jule::Str(">", 1);
	} else {
		_21017_obj+=static__1a63adc30_kind(_20926_p.get()._field_kind.get()._field_kind);
	}
	if (_20926_p.get()._field_reference) {
		_21017_obj+=jule::Str("&", 1);
	}
	return _21017_obj;
}



inline jule::Str static__1a63acbda_param_ins(jule::Ptr<_1ab834db5_ParamIns>& _22530_p) {
	jule::Str _22617_obj = jule::Str();
	if (_22530_p.get()._field_decl.get()._field_variadic) {
		_22617_obj+=jule::Str("jule::Slice<", 12);
		_22617_obj+=static__1a63adc30_kind(_22530_p.get()._field_kind);
		_22617_obj+=jule::Str(">", 1);
	} else {
		_22617_obj+=static__1a63adc30_kind(_22530_p.get()._field_kind);
	}
	if (_22530_p.get()._field_decl.get()._field_reference) {
		_22617_obj+=jule::Str("&", 1);
	}
	return _22617_obj;
}



inline jule::Str static__1a63acee8_func_result(jule::Ptr<_1ab832324_Fn>& _24132_f) {
	if (_1ab8329d9_is_void(_24132_f.ptr())) {
		if (_24132_f.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_24132_f.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a63adc30_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind)) + jule::Str(">", 1));
	}
	return static__1a63adc30_kind(_24132_f.get()._field_result.get()._field_kind.get()._field_kind);
}



inline jule::Str static__1a63ad306_func_ins_result(jule::Ptr<_1ab836218_FnIns>& _25536_f) {
	if (_1ab8329d9_is_void(_25536_f.get()._field_decl.ptr())) {
		if (_25536_f.get()._field_decl.get()._field_exceptional) {
			return jule::Str("jule::VoidExceptional", 21);
		}
		return jule::Str("void", 4);
	}
	if (_25536_f.get()._field_decl.get()._field_exceptional) {
		return ((jule::Str("jule::Exceptional<", 18) + static__1a63adc30_kind(_25536_f.get()._field_result)) + jule::Str(">", 1));
	}
	return static__1a63adc30_kind(_25536_f.get()._field_result);
}



inline jule::Str static__1a63ad614_anon_func(jule::Ptr<_1ab836218_FnIns> _26829_f) {
	jule::Str _26917_decl = static__1a63ad306_func_ins_result(_26829_f);
	_26917_decl+=jule::Str("(", 1);
	if ((_26829_f.get()._field_params.len() > 0LL)) {
		{
			auto &expr = _26829_f.get()._field_params;
			auto it = expr.begin();
			_iter_begin_1a8cc5d70:;
			if (it != expr.end()) {
				jule::Ptr<_1ab834db5_ParamIns> _1a8cc5e3b_param = *it;
				{
					if (_1ab830c07_is_self(_1a8cc5e3b_param.get()._field_decl.ptr())) {
						goto _iter_next_1a8cc5d70;
					}
					_26917_decl+=static__1a63acbda_param_ins(_1a8cc5e3b_param);
					_26917_decl+=jule::Str(",", 1);
				}
				_iter_next_1a8cc5d70:;
				++it;
				goto _iter_begin_1a8cc5d70;
			}
			_iter_end_1a8cc5d70:;
		}
		(_26917_decl).mut_slice(0LL,_26917_decl.len() - 1LL);
	} else {
		_26917_decl+=jule::Str("void", 4);
	}
	_26917_decl+=jule::Str(")", 1);
	return _26917_decl;
}



inline jule::Str static__1a63ad922_func(jule::Ptr<_1ab836218_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);
	_28917_obj+=static__1a63ad614_anon_func(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;
}



inline jule::Str static__1a63adc30_kind(jule::Ptr<_1a5913e9a_TypeKind> _29624_k) {
	{
		
		if (_1a5914e79_cpp_linked(_29624_k.ptr())) {
			_case_begin_1a8cc8dd9:;
			{
				return _29624_k.get()._field_cpp_ident;
			}
		}
		else if ((_1a591673e_prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc9071:;
			{
				return static__1a63a97ec_prim(_1a591673e_prim(_29624_k.ptr()));
			}
		}
		else if ((_1a59185a9_tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc90d7:;
			{
				return static__1a63a9b0a_tuple(_1a59185a9_tup(_29624_k.ptr()));
			}
		}
		else if ((_1a5916a19_sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc914d:;
			{
				return static__1a63aa534_sptr(_1a5916a19_sptr(_29624_k.ptr()));
			}
		}
		else if ((_1a5916ce4_ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc91c5:;
			{
				return static__1a63aa842_ptr(_1a5916ce4_ptr(_29624_k.ptr()));
			}
		}
		else if ((_1a59170be_enm(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc924c:;
			{
				return static__1a63aab50_enum_decl(_1a59170be_enm(_29624_k.ptr()));
			}
		}
		else if ((_1a5917674_slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc92c4:;
			{
				return static__1a63ab26b_slice(_1a5917674_slc(_29624_k.ptr()));
			}
		}
		else if ((_1a59182ce_map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc934b:;
			{
				return static__1a63ab579_map(_1a59182ce_map(_29624_k.ptr()));
			}
		}
		else if ((_1a5918004_trt(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc93c3:;
			{
				return static__1a63abb95_trait_decl(_1a5918004_trt(_29624_k.ptr()));
			}
		}
		else if ((_1a5917c29_strct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc944a:;
			{
				return static__1a63ac2b1_structure_ins(_1a5917c29_strct(_29624_k.ptr()));
			}
		}
		else if ((_1a5917399_arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc94c2:;
			{
				return static__1a63ac5be_array(_1a5917399_arr(_29624_k.ptr()));
			}
		}
		else if ((_1a591794e_fnc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1a8cc9549:;
			{
				return static__1a63ad922_func(_1a591794e_fnc(_29624_k.ptr()));
			}
		}
		_match_end_1a8cc8d0c:;
	}
	{
		auto &_match_expr{ _29624_k.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a63a7ee3_CustomType>>()) {
			_case_begin_1a8cd3630:;
			{
				return _29624_k.get()._field_kind.operator jule::Ptr<_1a63a7ee3_CustomType>().get()._field_kind;
			}
		}
		else {
			_case_begin_1a8cd3234:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);
			}
		}
		_match_end_1a8cd308b:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a63a8c5d_TypeCoder _Src) {
	_Stream << "TypeCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a8ced34d_name(_1a63c12d6_Flag_0* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1a8ced4b3_what(_1a63c12d6_Flag_0* _self_) {
	return (*_self_)._field__what;
}



inline void _1a8ced628_reset(_1a63c12d6_Flag_0* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1a8ced78d_short(_1a63c12d6_Flag_0* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c12d6_Flag_0 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8d01681_name(_1a63c12d6_Flag_1* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1a8ced914_what(_1a63c12d6_Flag_1* _self_) {
	return (*_self_)._field__what;
}



inline void _1a8d00097_reset(_1a63c12d6_Flag_1* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1a8d013d9_short(_1a63c12d6_Flag_1* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c12d6_Flag_1 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8d04b90_name(_1a63c12d6_Flag_2* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1a8d01e23_what(_1a63c12d6_Flag_2* _self_) {
	return (*_self_)._field__what;
}



inline void _1a8d035a6_reset(_1a63c12d6_Flag_2* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1a8d048e8_short(_1a63c12d6_Flag_2* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c12d6_Flag_2 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8d05498_name(_1a63c12d6_Flag_3* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1a8d081e3_what(_1a63c12d6_Flag_3* _self_) {
	return (*_self_)._field__what;
}



inline void _1a8d06b09_reset(_1a63c12d6_Flag_3* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1a8d07e4b_short(_1a63c12d6_Flag_3* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c12d6_Flag_3 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a8d0b702_name(_1a63c12d6_Flag_4* _self_) {
	return (*_self_)._field__name;
}



inline jule::Str _1a8d08985_what(_1a63c12d6_Flag_4* _self_) {
	return (*_self_)._field__what;
}



inline void _1a8d0a118_reset(_1a63c12d6_Flag_4* _self_) {
	(*((*_self_)._field__data))=(*_self_)._field__default;
}



inline jule::I32 _1a8d0b45a_short(_1a63c12d6_Flag_4* _self_) {
	return (*_self_)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c12d6_Flag_4 _Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a63c28c0_FlagSet> static__1a63c2ddc_new(void) {
	return jule::new_ptr<_1a63c28c0_FlagSet>(_1a63c28c0_FlagSet(jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>>::alloc(0LL,20LL)));
}



inline jule::Trait<_1a63c0dda_CommonFlag> _1a63c344d_find_flag(_1a63c28c0_FlagSet* _self_,jule::Str _6732_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a8d155b8:;
		if (it != expr.end()) {
			jule::Trait<_1a63c0dda_CommonFlag> _1a8d15684_flag = *it;
			{
				if (_1a63c0dda_CommonFlag_mptr_data[(_1a8d15684_flag).type_offset]._1a63c07ad_name(_1a8d15684_flag) == _6732_name) {
					return _1a8d15684_flag;
				}
			}
			_iter_next_1a8d155b8:;
			++it;
			goto _iter_begin_1a8d155b8;
		}
		_iter_end_1a8d155b8:;
	}
	return nullptr;
}



inline jule::Trait<_1a63c0dda_CommonFlag> _1a63c3805_find_flag_short(_1a63c28c0_FlagSet* _self_,jule::I32 _7738_name) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a8d169e8:;
		if (it != expr.end()) {
			jule::Trait<_1a63c0dda_CommonFlag> _1a8d16ab4_flag = *it;
			{
				if (_1a63c0dda_CommonFlag_mptr_data[(_1a8d16ab4_flag).type_offset]._1a63c0923_short(_1a8d16ab4_flag) == _7738_name) {
					return _1a8d16ab4_flag;
				}
			}
			_iter_next_1a8d169e8:;
			++it;
			goto _iter_begin_1a8d169e8;
		}
		_iter_end_1a8d169e8:;
	}
	return nullptr;
}



inline jule::Slice<jule::Trait<_1a63c0dda_CommonFlag>> _1a63c3ad0_flags(_1a63c28c0_FlagSet* _self_) {
	return (*_self_)._field__flags;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a63c3e87_parse(_1a63c28c0_FlagSet* _self_,jule::Slice<jule::Str> _11128_args) {
	_1a63c5a7c_ArgParser _11217_ap = _1a63c5a7c_ArgParser((*_self_),_11128_args,jule::Slice<jule::Str>(),jule::I64());
	({
		auto except = _1a63c7573_parse(&_11217_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(),_11217_ap._field_content);
}



inline void _1a63c41c9_reset(_1a63c28c0_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field__flags;
		auto it = expr.begin();
		_iter_begin_1a8d201e9:;
		if (it != expr.end()) {
			jule::Trait<_1a63c0dda_CommonFlag> _1a8d2046e_f = *it;
			{
				_1a63c0dda_CommonFlag_mptr_data[(_1a8d2046e_f).type_offset]._1a63c0c75_reset(_1a8d2046e_f);
			}
			_iter_next_1a8d201e9:;
			++it;
			goto _iter_begin_1a8d201e9;
		}
		_iter_end_1a8d201e9:;
	}
}



inline jule::Ptr<_1a63c12d6_Flag_4> _1a63c473a_add_flag_common_0(_1a63c28c0_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_1a8d938bb:;
			{
				goto _match_end_1a8d93866;
			}
		}
		_match_end_1a8d93866:;
	}
	if ((_1a63c344d_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_1a63c3805_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1a63c12d6_Flag_4> _14417_flag = jule::new_ptr<_1a63c12d6_Flag_4>(_1a63c12d6_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a63c0dda_CommonFlag>(_14417_flag, 4));
	return _14417_flag;
}

inline jule::Ptr<_1a63c12d6_Flag_3> _1a63c473a_add_flag_common_1(_1a63c28c0_FlagSet* _self_,jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	{
		
{
			_case_begin_1a8d9d596:;
			{
				goto _match_end_1a8d9d541;
			}
		}
		_match_end_1a8d9d541:;
	}
	if ((_1a63c344d_find_flag(&(*_self_), _12741_name) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	}
	if ((_12752_short != 0LL) && (_1a63c3805_find_flag_short(&(*_self_), _12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	}
	jule::Ptr<_1a63c12d6_Flag_3> _14417_flag = jule::new_ptr<_1a63c12d6_Flag_3>(_1a63c12d6_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*_self_)._field__flags = jule::alloc_for_append((*_self_)._field__flags,1);(*_self_)._field__flags.__push(jule::Trait<_1a63c0dda_CommonFlag>(_14417_flag, 3));
	return _14417_flag;
}





inline void _1a63c542d_add_var_0(_1a63c28c0_FlagSet* _self_,jule::Ptr<jule::Str> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1a63c12d6_Flag_4> _17217_flag = _1a63c473a_add_flag_common_0(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}

inline void _1a63c542d_add_var_1(_1a63c28c0_FlagSet* _self_,jule::Ptr<jule::Bool> _17137_var,jule::Str _17146_name,jule::I32 _17157_short,jule::Str _17170_what) {
	jule::Ptr<_1a63c12d6_Flag_3> _17217_flag = _1a63c473a_add_flag_common_1(&(*_self_), _17146_name,_17157_short,_17170_what);
	_17217_flag.get()._field__default=(*(_17137_var));
	_17217_flag.get()._field__data=_17137_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a63c28c0_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5909ac_is_nil(_1aa08e08d_LitExpr* _self_) {
	return ((*_self_)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08e08d_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08e4ab_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08e8c9_CoExpr _Src) {
	_Stream << "CoExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a9ec9836_is_self(_1aa08ece7_IdentExpr* _self_) {
	return ((*_self_)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08ece7_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa090215_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa60c82b_AssignInfo _Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa090633_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd583043_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa090e6e_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09138c_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0917aa_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5c57d3_unhandled(_1aa091bc8_FnCallExpr* _self_) {
	return ((*_self_)._field_exception == nullptr);
}



inline jule::Bool _1dd5976ea_ignored(_1aa091bc8_FnCallExpr* _self_) {
	return ((*_self_)._field_exception != nullptr) && (*_self_)._field_exception.get()._field_deferred;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa091bc8_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "exception:" << _Src._field_exception;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5636a3_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd598be6_is_targeted(_1aa0920e6_FieldExprPair* _self_) {
	return (*_self_)._field_field._field_id != static_cast<jule::U64>(0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0920e6_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1dd583461_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5a92cd_is_empty(_1aa092932_BraceLit* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa092932_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa092d50_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab8137bc_FieldIns> _1ab80d300_instance(jule::Ptr<_1ab80cdd2_Field> _self_) {
	return jule::new_ptr<_1ab8137bc_FieldIns>(_1ab8137bc_FieldIns(_self_,_self_.get()._field_kind.get()._field_kind,jule::Ptr<_1a58cee44_Data>()));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab80cdd2_Field _Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac565397_ScopeLabel _Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5aa7c9_is_empty(_1aa09326d_SliceExpr* _self_) {
	return ((*_self_)._field_exprs.len() == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09326d_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab814515_StructIns> _1ab8112d1_instance(jule::Ptr<_1ab810b3d_Struct> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	jule::Ptr<_1ab814515_StructIns> _10017_ins = jule::new_ptr<_1ab814515_StructIns>(_1ab814515_StructIns(jule::Bool(),_self_,jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab8137bc_FieldIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_fields.len())),jule::Slice<jule::Ptr<_1ab832324_Fn>>(),jule::Bool(),static__1ab83a294_new(),_1ab80e8b7_Operators()));
	{
		auto &expr = _self_.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a7aceb7a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab80cdd2_Field> _1a7ad0bae_f = *it;
			{
				_10017_ins.get()._field_fields = jule::alloc_for_append(_10017_ins.get()._field_fields,1);_10017_ins.get()._field_fields.__push(_1ab80d300_instance(_1a7ad0bae_f));
				if (((!(_1a7ad0bae_f.get()._field_mutable)) && (_1a7ad0bae_f.get()._field_kind.get()._field_kind != nullptr)) && _1a5915809_mutable(_1a7ad0bae_f.get()._field_kind.get()._field_kind.ptr())) {
					_10017_ins.get()._field_mutable=true;
				}
			}
			_iter_next_1a7aceb7a:;
			++it;
			goto _iter_begin_1a7aceb7a;
		}
		_iter_end_1a7aceb7a:;
	}
	if ((_self_.get()._field_generics.len() == 0LL)) {
		_10017_ins.get()._field_methods=_self_.get()._field_methods;
	} else {
		_10017_ins.get()._field_methods=jule::Slice<jule::Ptr<_1ab832324_Fn>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_methods.len()));
		{
			auto &expr = _self_.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1a7ad3d27:;
			if (it != expr.end()) {
				jule::Ptr<_1ab832324_Fn> _1a7ad46c9_f = *it;
				{
					jule::Ptr<_1ab832324_Fn> _11825_fins = jule::new_ptr<_1ab832324_Fn>((*(_1a7ad46c9_f)));
					_11825_fins.get()._field_instances=nullptr;
					_10017_ins.get()._field_methods = jule::alloc_for_append(_10017_ins.get()._field_methods,1);_10017_ins.get()._field_methods.__push(_11825_fins);
				}
				_iter_next_1a7ad3d27:;
				++it;
				goto _iter_begin_1a7ad3d27;
			}
			_iter_end_1a7ad3d27:;
		}
	}
	return _10017_ins;
}



inline jule::Ptr<_1ab814515_StructIns> _1ab811688_append_instance(_1ab810b3d_Struct* _self_,jule::Ptr<_1ab814515_StructIns>& _12939_ins) {
	if (((*_self_)._field_generics.len() == 0LL) && ((*_self_)._field_instances.len() == 1LL)) {
		return (*_self_)._field_instances[0LL];
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a7ad6ba4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a7ad73e1_ains = *it;
			{
				if (_1ab8154a0_same(_1a7ad73e1_ains.ptr(), _12939_ins)) {
					return _1a7ad73e1_ains;
				}
			}
			_iter_next_1a7ad6ba4:;
			++it;
			goto _iter_begin_1a7ad6ba4;
		}
		_iter_end_1a7ad6ba4:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_12939_ins);
	return nullptr;
}



inline jule::Ptr<_1ab832324_Fn> _1ab811b1c_find_method(_1ab810b3d_Struct* _self_,jule::Str _14734_ident,jule::Bool _14746_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ad9635:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7ad9701_f = *it;
			{
				if ((_1a7ad9701_f.get()._field_statically == _14746_statically) && (_1a7ad9701_f.get()._field_ident == _14734_ident)) {
					return _1a7ad9701_f;
				}
			}
			_iter_next_1a7ad9635:;
			++it;
			goto _iter_begin_1a7ad9635;
		}
		_iter_end_1a7ad9635:;
	}
	return nullptr;
}



inline jule::Ptr<_1a588601b_Var> _1ab811ec4_find_static(_1ab810b3d_Struct* _self_,jule::Str _15834_ident) {
	{
		auto &expr = (*_self_)._field_statics;
		auto it = expr.begin();
		_iter_begin_1a7adae94:;
		if (it != expr.end()) {
			jule::Ptr<_1a588601b_Var> _1a7adb060_v = *it;
			{
				if (_1a7adb060_v.get()._field_ident == _15834_ident) {
					return _1a7adb060_v;
				}
			}
			_iter_next_1a7adae94:;
			++it;
			goto _iter_begin_1a7adae94;
		}
		_iter_end_1a7adae94:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab80cdd2_Field> _1ab81237b_find_field(_1ab810b3d_Struct* _self_,jule::Str _16933_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a7adc407:;
		if (it != expr.end()) {
			jule::Ptr<_1ab80cdd2_Field> _1a7adc4c3_f = *it;
			{
				if (_1a7adc4c3_f.get()._field_ident == _16933_ident) {
					return _1a7adc4c3_f;
				}
			}
			_iter_next_1a7adc407:;
			++it;
			goto _iter_begin_1a7adc407;
		}
		_iter_end_1a7adc407:;
	}
	return nullptr;
}



inline jule::Bool _1ab812733_is_implements(_1ab810b3d_Struct* _self_,jule::Ptr<_1ac44770d_Trait> _17932_t) {
	{
		auto &expr = (*_self_)._field_implements;
		auto it = expr.begin();
		_iter_begin_1a7add86a:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44770d_Trait> &_1a7add936_it = *it;
			{
				if (_17932_t == _1a7add936_it) {
					return true;
				}
			}
			_iter_next_1a7add86a:;
			++it;
			goto _iter_begin_1a7add86a;
		}
		_iter_end_1a7add86a:;
	}
	return false;
}



inline jule::Bool _1ab812ada_is_derives(_1ab810b3d_Struct* _self_,jule::Str _18929_ident) {
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1a7adeb9b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> &_1a7adec67_d = *it;
			{
				if ((_1a7adec67_d.get()._field_tag._field_kind == jule::Str("derive", 6))) {
					if ((_1a7adec67_d.get()._field_args.len() == 1LL) && (_1a7adec67_d.get()._field_args[0LL]._field_kind == _18929_ident)) {
						return true;
					}
				}
			}
			_iter_next_1a7adeb9b:;
			++it;
			goto _iter_begin_1a7adeb9b;
		}
		_iter_end_1a7adeb9b:;
	}
	return false;
}



inline jule::Bool _1ab812e92_is_uses(_1ab810b3d_Struct* _self_,jule::Ptr<_1ab810b3d_Struct> _20126_s) {
	{
		auto &expr = (*_self_)._field_uses;
		auto it = expr.begin();
		_iter_begin_1a7ae21ed:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> &_1a7ae22b9_u = *it;
			{
				while (_20126_s == _1a7ae22b9_u) {
					{
						return true;
					}
				_iter_next_1a7ae26e8:;
				}
				_iter_end_1a7ae26e8:;
			}
			_iter_next_1a7ae21ed:;
			++it;
			goto _iter_begin_1a7ae21ed;
		}
		_iter_end_1a7ae21ed:;
	}
	return false;
}



inline jule::Bool _1ab81326c_has_ref_accessible(_1ab810b3d_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7ae3056:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> &_1a7ae3254_m = *it;
			{
				if ((_1a7ae3254_m.get()._field_params.len() > 0LL) && _1ab830ed2_is_ref(_1a7ae3254_m.get()._field_params[0LL].ptr())) {
					return true;
				}
			}
			_iter_next_1a7ae3056:;
			++it;
			goto _iter_begin_1a7ae3056;
		}
		_iter_end_1a7ae3056:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab810b3d_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa093b0e_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac5815e4_find_package(_1ac580d41_ImportInfo* _self_,jule::Str ) {
	return nullptr;
}



inline jule::Ptr<_1ac580d41_ImportInfo> _1ac58199b_select_package(_1ac580d41_ImportInfo* _self_,jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)> ) {
	return nullptr;
}



inline jule::Ptr<_1a588601b_Var> _1ac581e30_find_var(_1ac580d41_ImportInfo* _self_,jule::Str _16431_ident,jule::Bool _16443_cpp_linked) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _16431_ident)))) {
		return nullptr;
	}
	return _1ac57d6bd_find_var_in_package((*_self_)._field_package.get()._field_files,_16431_ident,false);
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1ac5823b4_find_type_alias(_1ac580d41_ImportInfo* _self_,jule::Str _17738_ident,jule::Bool _17750_cpp_linked) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _17738_ident)))) {
		return nullptr;
	}
	return _1ac57dc1d_find_type_alias_in_package((*_self_)._field_package.get()._field_files,_17738_ident,false);
}



inline jule::Ptr<_1ab810b3d_Struct> _1ac582848_find_struct(_1ac580d41_ImportInfo* _self_,jule::Str _19034_ident,jule::Bool _19046_cpp_linked) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _19034_ident)))) {
		return nullptr;
	}
	return _1ac57e1c4_find_struct_in_package((*_self_)._field_package.get()._field_files,_19034_ident,false);
}



inline jule::Ptr<_1ab832324_Fn> _1ac582ccc_find_fn(_1ac580d41_ImportInfo* _self_,jule::Str _20330_ident,jule::Bool _20342_cpp_linked) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _20330_ident)))) {
		return nullptr;
	}
	return _1ac57e6d0_find_fn_in_package((*_self_)._field_package.get()._field_files,_20330_ident,false);
}



inline jule::Ptr<_1ac44770d_Trait> _1ac583184_find_trait(_1ac580d41_ImportInfo* _self_,jule::Str _21533_ident) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _21533_ident)))) {
		return nullptr;
	}
	return _1ac57eaba_find_trait_in_package((*_self_)._field_package.get()._field_files,_21533_ident);
}



inline jule::Ptr<_1ac44a337_Enum> _1ac58353b_find_enum(_1ac580d41_ImportInfo* _self_,jule::Str _22732_ident) {
	if ((!(_1ac583a03_is_lookupable(&(*_self_), _22732_ident)))) {
		return nullptr;
	}
	return _1ac57eea5_find_enum_in_package((*_self_)._field_package.get()._field_files,_22732_ident);
}



inline jule::Bool _1ac583a03_is_lookupable(_1ac580d41_ImportInfo* _self_,jule::Str _23728_ident) {
	if ((*_self_)._field_cpp_linked) {
		return false;
	}
	if ((!((*_self_)._field_import_all))) {
		if (((*_self_)._field_alias.len() != 0LL) || _1ac583daa_exist_ident(&(*_self_), jule::Str("self", 4))) {
			return true;
		}
		if (((*_self_)._field_selected.len() > 0LL)) {
			if ((!(_1ac583daa_exist_ident(&(*_self_), _23728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1ac583daa_exist_ident(_1ac580d41_ImportInfo* _self_,jule::Str _25726_ident) {
	{
		auto &expr = (*_self_)._field_selected;
		auto it = expr.begin();
		_iter_begin_1a7d9a7b4:;
		if (it != expr.end()) {
			_1aa07563a_Token &_1a7d9a880_sident = *it;
			{
				if (_1a7d9a880_sident._field_kind == _25726_ident) {
					return true;
				}
			}
			_iter_next_1a7d9a7b4:;
			++it;
			goto _iter_begin_1a7d9a7b4;
		}
		_iter_end_1a7d9a7b4:;
	}
	return false;
}



inline jule::Bool _1ac5841c9_is_accessible_via_selection(_1ac580d41_ImportInfo* _self_) {
	return ((*_self_)._field_import_all || ((*_self_)._field_selected.len() == 0LL)) || _1ac583daa_exist_ident(&(*_self_), jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, _1ac580d41_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package << ", ";
	_Stream << "mod_id:" << _Src._field_mod_id;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ab814b31_to_str(_1ab814515_StructIns* _self_) {
	jule::Str _24417_kind = jule::Str();
	_24417_kind+=(*_self_)._field_decl.get()._field_ident;
	if (((*_self_)._field_generics.len() > 0LL)) {
		_24417_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_generics;
			auto it = expr.begin();
			_iter_begin_1a7ae5e9e:;
			if (it != expr.end()) {
				jule::Ptr<_1a5913e9a_TypeKind> &_1a7ae6136_g = *it;
				{
					_24417_kind+=_1a59145b6_to_str(_1a7ae6136_g.ptr());
					_24417_kind+=jule::Str(",", 1);
				}
				_iter_next_1a7ae5e9e:;
				++it;
				goto _iter_begin_1a7ae5e9e;
			}
			_iter_end_1a7ae5e9e:;
		}
		(_24417_kind).mut_slice(0LL,_24417_kind.len() - 1LL);
		_24417_kind+=jule::Str("]", 1);
	}
	return _24417_kind;
}



inline jule::Bool _1ab814ed8_equals(jule::Ptr<_1ab814515_StructIns> _self_,jule::Ptr<_1a5913e9a_TypeKind> _25926_other) {
	jule::Ptr<_1ab814515_StructIns> _26013_s = _1a5917c29_strct(_25926_other.ptr());
	if ((_26013_s == nullptr)) {
		return false;
	}
	if (_self_.get()._field_decl != _26013_s.get()._field_decl) {
		return false;
	}
	if (_self_.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>(_26013_s.get()._field_generics.len()))) {
		return false;
	}
	jule::I64 _27317_i = 0LL;
	for (; _27317_i < static_cast<jule::I64>(static_cast<jule::I64>(_self_.get()._field_generics.len())); (_27317_i)++) {
		{
			if ((!(_1a591496d_equals(_self_.get()._field_generics[_27317_i], _26013_s.get()._field_generics[_27317_i])))) {
				return false;
			}
		}
	_iter_next_1a7aea756:;
	}
	_iter_end_1a7aea756:;
	return true;
}



inline jule::Bool _1ab8154a0_same(_1ab814515_StructIns* _self_,jule::Ptr<_1ab814515_StructIns> _28723_s) {
	if (((*_self_)._field_decl != _28723_s.get()._field_decl) || (_28723_s.get()._field_generics.len() != static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_generics.len())))) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_generics;
		auto it = expr.begin();
		_iter_begin_1a7aec8ac:;
		if (it != expr.end()) {
			jule::I64 _1a7aedacd_i = it - expr.begin();
			jule::Ptr<_1a5913e9a_TypeKind> &_1a7aedc65_g = *it;
			{
				if ((!(_1a591496d_equals(_1a7aedc65_g, _28723_s.get()._field_generics[_1a7aedacd_i])))) {
					return false;
				}
			}
			_iter_next_1a7aec8ac:;
			++it;
			_1a7aedacd_i++;
			goto _iter_begin_1a7aec8ac;
		}
		_iter_end_1a7aec8ac:;
	}
	return true;
}



inline jule::Ptr<_1ab832324_Fn> _1ab815934_find_method(_1ab814515_StructIns* _self_,jule::Str _30234_ident,jule::Bool _30246_statically) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7b0097b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7b00a47_f = *it;
			{
				if ((_1a7b00a47_f.get()._field_statically == _30246_statically) && (_1a7b00a47_f.get()._field_ident == _30234_ident)) {
					return _1a7b00a47_f;
				}
			}
			_iter_next_1a7b0097b:;
			++it;
			goto _iter_begin_1a7b0097b;
		}
		_iter_end_1a7b0097b:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab8137bc_FieldIns> _1ab815cdb_find_field(_1ab814515_StructIns* _self_,jule::Str _31333_ident) {
	{
		auto &expr = (*_self_)._field_fields;
		auto it = expr.begin();
		_iter_begin_1a7b022da:;
		if (it != expr.end()) {
			jule::Ptr<_1ab8137bc_FieldIns> _1a7b023a6_f = *it;
			{
				if (_1a7b023a6_f.get()._field_decl.get()._field_ident == _31333_ident) {
					return _1a7b023a6_f;
				}
			}
			_iter_next_1a7b022da:;
			++it;
			goto _iter_begin_1a7b022da;
		}
		_iter_end_1a7b022da:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab814515_StructIns _Src) {
	_Stream << _1ab814b31_to_str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09402c_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab8170b7_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab817716_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5886637_is_initialized(_1a588601b_Var* _self_) {
	return ((*_self_)._field_value != nullptr);
}



inline jule::Bool _1a5886912_is_type_inferred(_1a588601b_Var* _self_) {
	return ((*_self_)._field_kind == nullptr) || ((*_self_)._field_kind.get()._field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1a588601b_Var _Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09444a_TernaryExpr _Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



inline void _1a58b64be_push_err(_1a58b5c2c_TypeCompatibilityChecker* _self_,jule::Str _13027_fmt,jule::Slice<jule::Any> _13040_args) {
	_1a5867bac_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_13027_fmt,_13040_args);
}



inline jule::Bool _1a58b6799_check_trait(_1a58b5c2c_TypeCompatibilityChecker* _self_) {
	jule::Bool _13432_ok = jule::Bool();
	if (_1a5915254_is_nil((*_self_)._field_src.ptr())) {
		_13432_ok = true;
		return _13432_ok;
	}
	jule::Ptr<_1ac44770d_Trait> _13913_trt = _1a5918004_trt((*_self_)._field_dest.ptr());
	jule::Bool _14017_ref = false;
	{
		
		if ((_1a5916a19_sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a810c84a:;
			{
				_14017_ref=true;
				(*_self_)._field_src=_1a5916a19_sptr((*_self_)._field_src.ptr()).get()._field_elem;
				if ((_1a5917c29_strct((*_self_)._field_src.ptr()) == nullptr)) {
					_13432_ok = false;
					return _13432_ok;
				}
				goto _case_begin_1a810c916;
			}
		}
		else if ((_1a5917c29_strct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a810c916:;
			{
				jule::Ptr<_1ab814515_StructIns> _15117_s = _1a5917c29_strct((*_self_)._field_src.ptr());
				if ((!(_1ab812733_is_implements(_15117_s.get()._field_decl.ptr(), _13913_trt)))) {
					_13432_ok = false;
					return _13432_ok;
				}
				if ((!(_14017_ref)) && _1a589290c_trait_has_reference_receiver(_13913_trt)) {
					_1a58b64be_push_err(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					_13432_ok = false;
					return _13432_ok;
				}
				_13432_ok = true;
				return _13432_ok;
			}
		}
		else if ((_1a5918004_trt((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1a810c97c:;
			{
				_13432_ok = _13913_trt == _1a5918004_trt((*_self_)._field_src.ptr());
				return _13432_ok;
			}
		}
		else {
			_case_begin_1a810c196:;
			{
				_13432_ok = false;
				return _13432_ok;
			}
		}
		_match_end_1a810c11e:;
	}
}



inline jule::Bool _1a58b6a74_check_ptr(_1a58b5c2c_TypeCompatibilityChecker* _self_) {
	jule::Bool _17130_ok = jule::Bool();
	if (_1a5915254_is_nil((*_self_)._field_src.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	jule::Ptr<_1a59230db_Ptr> _17617_dest = _1a5916ce4_ptr((*_self_)._field_dest.ptr());
	if (_1a5923e33_is_unsafe(_17617_dest.ptr())) {
		_17130_ok = true;
		return _17130_ok;
	}
	_17130_ok = _1a591496d_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _17130_ok;
}



inline jule::Bool _1a58b6d4e_check_prim(_1a58b5c2c_TypeCompatibilityChecker* _self_) {
	jule::Bool _18531_ok = jule::Bool();
	if ((!((*_self_)._field_dest.get()._field_variadic))) {
		jule::Ptr<_1a591970e_Prim> _18717_prim = _1a591673e_prim((*_self_)._field_dest.ptr());
		if ((_18717_prim != nullptr) && _1a591d416_is_any(_18717_prim.ptr())) {
			_18531_ok = true;
			return _18531_ok;
		}
	}
	_18531_ok = _1a591496d_equals((*_self_)._field_dest, (*_self_)._field_src);
	return _18531_ok;
}



inline jule::Bool _1a58b7129_check(_1a58b5c2c_TypeCompatibilityChecker* _self_) {
	jule::Bool _19526_ok = jule::Bool();
	if ((_1a5916ce4_ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		_19526_ok = _1a58b6a74_check_ptr(&(*_self_));
		return _19526_ok;
	}
	if (_1a5915ad4_nil_compatible((*_self_)._field_dest.ptr())) {
		if (_1a5915254_is_nil((*_self_)._field_src.ptr())) {
			_19526_ok = true;
			return _19526_ok;
		}
	}
	{
		
		if ((_1a591673e_prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a811936d:;
			{
				_19526_ok = _1a58b6d4e_check_prim(&(*_self_));
				return _19526_ok;
			}
		}
		else if ((_1a5918004_trt((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1a8118ec7:;
			{
				_19526_ok = _1a58b6799_check_trait(&(*_self_));
				return _19526_ok;
			}
		}
		else {
			_case_begin_1a81188ab:;
			{
				_19526_ok = _1a591496d_equals((*_self_)._field_dest, (*_self_)._field_src);
				return _19526_ok;
			}
		}
		_match_end_1a81187ce:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a58b5c2c_TypeCompatibilityChecker _Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a58b7eb5_push_err(_1a58b7778_AssignTypeChecker* _self_,jule::Str _22527_fmt,jule::Slice<jule::Any> _22540_args) {
	_1a5867bac_push_err((*_self_)._field_s.ptr(), (*_self_)._field_error_token,_22527_fmt,_22540_args);
}



inline jule::Bool _1a58b8290_check_validity(_1a58b7778_AssignTypeChecker* _self_) {
	jule::Bool _23017_valid = true;
	{
		
		if ((_1a591794e_fnc((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a811c5e6:;
			{
				jule::Ptr<_1ab836218_FnIns> _23317_f = _1a591794e_fnc((*_self_)._field_d.get()._field_kind.ptr());
				{
					
					if (_1ab837093_is_builtin(_23317_f.ptr())) {
						_case_begin_1a811dcbd:;
						{
							_1a58b7eb5_push_err(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_23317_f.get()._field_decl.get()._field_cpp_linked) {
						_case_begin_1a811dd45:;
						{
							_1a58b7eb5_push_err(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if (_1ab832cb4_is_method(_23317_f.get()._field_decl.ptr())) {
						_case_begin_1a811ddbc:;
						{
							_1a58b7eb5_push_err(&(*_self_), jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					else if ((_23317_f.get()._field_decl.get()._field_generics.len() > 0LL)) {
						_case_begin_1a811de44:;
						{
							_1a58b7eb5_push_err(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_23017_valid=false;
						}
					}
					_match_end_1a811dbd0:;
				}
			}
		}
		else if ((_1a59185a9_tup((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a811c66d:;
			{
				_1a58b7eb5_push_err(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23017_valid=false;
			}
		}
		_match_end_1a811c52a:;
	}
	return _23017_valid;
}



inline jule::Bool _1a58b856a_check_const(_1a58b7778_AssignTypeChecker* _self_) {
	if ((((!(_1a58d0b48_is_const((*_self_)._field_d.ptr()))) || (_1a591673e_prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()) == nullptr)) || (!(_1ac55e836_is_num(_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind)))) {
		return false;
	}
	if ((*_self_)._field_d.get()._field_model != (*_self_)._field_d.get()._field_constant) {
		return false;
	}
	jule::Str _26913_kind = _1a591673e_prim((*_self_)._field_dest.ptr()).get()._field_kind;
	{
		
		if (_1ac55e528_is_float(_26913_kind)) {
			_case_begin_1a812729e:;
			{
				if ((!(_1a589766a_float_assignable(_26913_kind,(*_self_)._field_d)))) {
					_1a58b7eb5_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else if (_1ac55e1c6_is_int(_26913_kind)) {
			_case_begin_1a812739d:;
			{
				if ((!(_1a58b5600_int_assignable(_26913_kind,(*_self_)._field_d)))) {
					_1a58b7eb5_push_err(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;
				}
			}
		}
		else {
			_case_begin_1a8126b83:;
			{
				return false;
			}
		}
		_match_end_1a8126b2d:;
	}
	return true;
}



inline jule::Bool _1a58b8845_is_prim(_1a58b7778_AssignTypeChecker* _self_) {
	if ((*_self_)._field_dest.get()._field_variadic || (*_self_)._field_d.get()._field_kind.get()._field_variadic) {
		return false;
	}
	if (_1a5914e79_cpp_linked((*_self_)._field_dest.ptr()) || _1a5914e79_cpp_linked((*_self_)._field_d.get()._field_kind.ptr())) {
		return false;
	}
	return (_1a591673e_prim((*_self_)._field_dest.ptr()) != nullptr) && (_1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr()) != nullptr);
}



inline jule::Bool _1a58b8b20_check_compatibility(_1a58b7778_AssignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1a812cae0:;
			{
				return false;
			}
		}
		else if ((!(_1a58b8290_check_validity(&(*_self_))))) {
			_case_begin_1a812cb67:;
			{
				return false;
			}
		}
		else if (_1a58b856a_check_const(&(*_self_))) {
			_case_begin_1a812cbde:;
			{
				return true;
			}
		}
		else if ((_1a59170be_enm((*_self_)._field_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a812cc66:;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _31121_dkind = (*_self_)._field_dest;
				if ((_1a59170be_enm((*_self_)._field_dest.ptr()) != nullptr)) {
					_31121_dkind=_1a59170be_enm((*_self_)._field_dest.ptr()).get()._field_kind.get()._field_kind;
				} else if ((_1a591673e_prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a812c99c;
				}
				if (_1ac55a5ac_types_are_compatible(_1a591673e_prim(_1a59170be_enm((*_self_)._field_d.get()._field_kind.ptr()).get()._field_kind.get()._field_kind.ptr()).get()._field_kind,_1a591673e_prim(_31121_dkind.ptr()).get()._field_kind)) {
					return true;
				}
			}
		}
		else if (_1a58b8845_is_prim(&(*_self_))) {
			_case_begin_1a812ccdd:;
			{
				jule::Ptr<_1a591970e_Prim> _32117_dest = _1a591673e_prim((*_self_)._field_dest.ptr());
				if (_1a591d416_is_any(_32117_dest.ptr())) {
					return true;
				}
				jule::Ptr<_1a591970e_Prim> _32521_src = _1a591673e_prim((*_self_)._field_d.get()._field_kind.ptr());
				if (_1ac55a5ac_types_are_compatible(_32117_dest.get()._field_kind,_32521_src.get()._field_kind)) {
					return true;
				}
			}
		}
		_match_end_1a812c99c:;
	}
	return _1a586e7a7_check_type_compatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_kind,(*_self_)._field_error_token);
}



inline jule::Bool _1a58b8dea_check(_1a58b7778_AssignTypeChecker* _self_) {
	jule::Bool _33413_ok = _1a58b8b20_check_compatibility(&(*_self_));
	if (_33413_ok) {
		_1a59307ad_apply_implicit_cast((*_self_)._field_dest,(*_self_)._field_d);
	}
	return _33413_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58b7778_AssignTypeChecker _Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _1a58ba0a5_push_generic(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _35236_k,jule::I64 _35250_i) {
	(*_self_)._field_f.get()._field_generics[_35250_i]=_35236_k;
}



inline jule::Bool _1a58ba429_annotate_prim(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _35644_k) {
	jule::Bool _35660_ok = jule::Bool();
	jule::Str _35713_kind = _1a59145b6_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8138ac9:;
		if (it != expr.end()) {
			jule::I64 _1a8138b51_i = it - expr.begin();
			jule::Ptr<_1aa094868_GenericDecl> _1a8138da4_g = *it;
			{
				if (_35713_kind != _1a8138da4_g.get()._field_ident) {
					goto _iter_next_1a8138ac9;
				}
				jule::Ptr<_1a5913e9a_TypeKind> _36317_t = (*_self_)._field_f.get()._field_generics[_1a8138b51_i];
				{
					
					if ((_36317_t == nullptr)) {
						_case_begin_1a813a24b:;
						{
							_1a58ba0a5_push_generic(&(*_self_), _35644_k,_1a8138b51_i);
						}
					}
					else if ((!(_1a591496d_equals(_36317_t, _35644_k)))) {
						_case_begin_1a813a2c3:;
						{
							_35660_ok = false;
							return _35660_ok;
						}
					}
					_match_end_1a813a14c:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_35644_k.get()._field_kind;
				_35660_ok = true;
				return _35660_ok;
			}
			_iter_next_1a8138ac9:;
			++it;
			_1a8138b51_i++;
			goto _iter_begin_1a8138ac9;
		}
		_iter_end_1a8138ac9:;
	}
	_35660_ok = false;
	return _35660_ok;
}



inline jule::Bool _1a58ba7d1_annotate_slc(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _38043_k) {
	jule::Bool _38059_ok = jule::Bool();
	jule::Ptr<_1a591e549_Slc> _38117_pslc = _1a5917674_slc((*((*_self_)._field_k)).ptr());
	if ((_38117_pslc == nullptr)) {
		_38059_ok = false;
		return _38059_ok;
	}
	jule::Ptr<_1a591e549_Slc> _38617_slc = _1a5917674_slc(_38043_k.ptr());
	(*_self_)._field_k=(&(_38117_pslc.get()._field_elem));
	_38059_ok = _1a58bc492_annotate_kind(&(*_self_), _38617_slc.get()._field_elem);
	return _38059_ok;
}



inline jule::Bool _1a58bac65_check_map_key(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>* _39143_k,jule::Ptr<_1a5913e9a_TypeKind>& _39163_ck) {
	jule::Bool _39180_ok = jule::Bool();
	jule::Ptr<_1a5913e9a_TypeKind>* _39217_old = (*_self_)._field_k;
	(*_self_)._field_k=_39143_k;
	_39180_ok=_1a58bc492_annotate_kind(&(*_self_), _39163_ck);
	(*_self_)._field_k=_39217_old;
	return _39180_ok;
}



inline jule::Bool _1a58bb11c_annotate_map(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _39943_k) {
	jule::Bool _39959_ok = jule::Bool();
	jule::Ptr<_1a592132b_Map> _40017_pmap = _1a59182ce_map((*((*_self_)._field_k)).ptr());
	if ((_40017_pmap == nullptr)) {
		_39959_ok = false;
		return _39959_ok;
	}
	jule::Ptr<_1a592132b_Map> _40517_m = _1a59182ce_map(_39943_k.ptr());
	_39959_ok = _1a58bac65_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_key)),_40517_m.get()._field_key) && _1a58bac65_check_map_key(&(*_self_), (&(_40017_pmap.get()._field_val)),_40517_m.get()._field_val);
	return _39959_ok;
}



inline jule::Bool _1a58bb4c4_annotate_fn(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _41142_k) {
	jule::Bool _41158_ok = jule::Bool();
	jule::Ptr<_1ab836218_FnIns> _41217_pf = _1a591794e_fnc((*((*_self_)._field_k)).ptr());
	if ((_41217_pf == nullptr)) {
		_41158_ok = false;
		return _41158_ok;
	}
	jule::Ptr<_1ab836218_FnIns> _41617_f = _1a591794e_fnc(_41142_k.ptr());
	{
		
		if (_41217_pf.get()._field_params.len() != static_cast<jule::I64>(static_cast<jule::I64>(_41617_f.get()._field_params.len()))) {
			_case_begin_1a8146e39:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		else if (_1ab8329d9_is_void(_41217_pf.get()._field_decl.ptr()) != _1ab8329d9_is_void(_41617_f.get()._field_decl.ptr())) {
			_case_begin_1a8146eb1:;
			{
				_41158_ok = false;
				return _41158_ok;
			}
		}
		_match_end_1a8146d6d:;
	}
	_41158_ok=true;
	jule::Ptr<_1a5913e9a_TypeKind>* _42617_old = (*_self_)._field_k;
	{
		auto &expr = _41617_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a8148ed5:;
		if (it != expr.end()) {
			jule::I64 _1a81490b2_i = it - expr.begin();
			jule::Ptr<_1ab834db5_ParamIns> _1a81492b0_fp = *it;
			{
				(*_self_)._field_k=(&(_41217_pf.get()._field_params[_1a81490b2_i].get()._field_kind));
				_41158_ok=_1a58bc492_annotate_kind(&(*_self_), _1a81492b0_fp.get()._field_kind) && _41158_ok;
			}
			_iter_next_1a8148ed5:;
			++it;
			_1a81490b2_i++;
			goto _iter_begin_1a8148ed5;
		}
		_iter_end_1a8148ed5:;
	}
	if ((!(_1ab8329d9_is_void(_41217_pf.get()._field_decl.ptr())))) {
		(*_self_)._field_k=(&(_41217_pf.get()._field_result));
		_41158_ok=_1a58bc492_annotate_kind(&(*_self_), _41617_f.get()._field_result) && _41158_ok;
	}
	(*_self_)._field_k=_42617_old;
	return _41158_ok;
}



inline jule::Bool _1a58bb87b_annotate_ptr(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _44143_k) {
	jule::Bool _44159_ok = jule::Bool();
	jule::Ptr<_1a59230db_Ptr> _44217_pptr = _1a5916ce4_ptr((*((*_self_)._field_k)).ptr());
	if ((_44217_pptr == nullptr)) {
		_44159_ok = false;
		return _44159_ok;
	}
	jule::Ptr<_1a59230db_Ptr> _44717_ptr = _1a5916ce4_ptr(_44143_k.ptr());
	(*_self_)._field_k=(&(_44217_pptr.get()._field_elem));
	_44159_ok = _1a58bc492_annotate_kind(&(*_self_), _44717_ptr.get()._field_elem);
	return _44159_ok;
}



inline jule::Bool _1a58bbc33_annotate_sptr(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _45244_k) {
	jule::Bool _45260_ok = jule::Bool();
	jule::Ptr<_1a591d768_Sptr> _45317_ssptr = _1a5916a19_sptr((*((*_self_)._field_k)).ptr());
	if ((_45317_ssptr == nullptr)) {
		_45260_ok = false;
		return _45260_ok;
	}
	jule::Ptr<_1a591d768_Sptr> _45817_sptr = _1a5916a19_sptr(_45244_k.ptr());
	(*_self_)._field_k=(&(_45317_ssptr.get()._field_elem));
	_45260_ok = _1a58bc492_annotate_kind(&(*_self_), _45817_sptr.get()._field_elem);
	return _45260_ok;
}



inline jule::Bool _1a58bc0da_annotate_any(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _46343_k) {
	jule::Bool _46359_ok = jule::Bool();
	jule::Str _46413_kind = _1a59145b6_to_str((*((*_self_)._field_k)).ptr());
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a815353e:;
		if (it != expr.end()) {
			jule::I64 _1a81535b6_i = it - expr.begin();
			jule::Ptr<_1aa094868_GenericDecl> _1a8153808_g = *it;
			{
				if (_46413_kind != _1a8153808_g.get()._field_ident) {
					goto _iter_next_1a815353e;
				}
				jule::Ptr<_1a5913e9a_TypeKind> _47017_t = (*_self_)._field_f.get()._field_generics[_1a81535b6_i];
				{
					
					if ((_47017_t == nullptr)) {
						_case_begin_1a8154ba0:;
						{
							_1a58ba0a5_push_generic(&(*_self_), _46343_k,_1a81535b6_i);
						}
					}
					else if ((!(_1a591496d_equals(_47017_t, _46343_k)))) {
						_case_begin_1a8154c27:;
						{
							_46359_ok = false;
							return _46359_ok;
						}
					}
					_match_end_1a8154aa1:;
				}
				(*((*_self_)._field_k)).get()._field_kind=_46343_k.get()._field_kind;
				_46359_ok = true;
				return _46359_ok;
			}
			_iter_next_1a815353e:;
			++it;
			_1a81535b6_i++;
			goto _iter_begin_1a815353e;
		}
		_iter_end_1a815353e:;
	}
	_46359_ok = false;
	return _46359_ok;
}



inline jule::Bool _1a58bc492_annotate_kind(_1a58b9747_DynamicTypeAnnotation* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _48744_k) {
	jule::Bool _48760_ok = jule::Bool();
	if (((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr)) {
		return _48760_ok;
	}
	{
		
		if (_1a58bc0da_annotate_any(&(*_self_), _48744_k)) {
			_case_begin_1a8157e4a:;
			{
				_48760_ok = true;
				return _48760_ok;
			}
		}
		else if ((_1a591673e_prim(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a8157eb1:;
			{
				_48760_ok = _1a58ba429_annotate_prim(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1a5917674_slc(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a8157b3c:;
			{
				_48760_ok = _1a58ba7d1_annotate_slc(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1a59182ce_map(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a8157ba3:;
			{
				_48760_ok = _1a58bb11c_annotate_map(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1a591794e_fnc(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a8157c19:;
			{
				_48760_ok = _1a58bb4c4_annotate_fn(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1a5916ce4_ptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a8157796:;
			{
				_48760_ok = _1a58bb87b_annotate_ptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else if ((_1a5916a19_sptr(_48744_k.ptr()) != nullptr)) {
			_case_begin_1a815780c:;
			{
				_48760_ok = _1a58bbc33_annotate_sptr(&(*_self_), _48744_k);
				return _48760_ok;
			}
		}
		else {
			_case_begin_1a8157730:;
			{
				_48760_ok = false;
				return _48760_ok;
			}
		}
		_match_end_1a8156d6c:;
	}
}



inline jule::Bool _1a58bc76c_annotate(_1a58b9747_DynamicTypeAnnotation* _self_) {
	jule::Bool _50436_ok = jule::Bool();
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_kind));
	_50436_ok = _1a58bc492_annotate_kind(&(*_self_), (*_self_)._field_a.get()._field_kind);
	return _50436_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58b9747_DynamicTypeAnnotation _Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _1a58bd927_push_err_token(_1a58bd0b9_FnCallArgChecker* _self_,_1aa07563a_Token _52033_token,jule::Str _52047_fmt,jule::Slice<jule::Any> _52060_args) {
	_1a5867bac_push_err((*_self_)._field_e.get()._field_s.ptr(), _52033_token,_52047_fmt,_52060_args);
}



inline void _1a58bdd23_push_err(_1a58bd0b9_FnCallArgChecker* _self_,jule::Str _52427_fmt,jule::Slice<jule::Any> _52440_args) {
	_1a58bd927_push_err_token(&(*_self_), (*_self_)._field_error_token,_52427_fmt,_52440_args);
}



inline jule::Slice<jule::Ptr<_1ab834db5_ParamIns>> _1a58be0ed_get_params(_1a58bd0b9_FnCallArgChecker* _self_) {
	if ((((*_self_)._field_f.get()._field_params.len() > 0LL) && ((*_self_)._field_f.get()._field_params[0LL].get()._field_decl != nullptr)) && _1ab830c07_is_self((*_self_)._field_f.get()._field_params[0LL].get()._field_decl.ptr())) {
		return (*_self_)._field_f.get()._field_params.slice(1LL);
	}
	return (*_self_)._field_f.get()._field_params;
}



inline jule::Bool _1a58be4a5_check_counts(_1a58bd0b9_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>& _53732_params) {
	jule::Bool _53755_ok = jule::Bool();
	jule::I64 _53817_n = _53732_params.len();
	if ((_53817_n > 0LL) && _1ab830c07_is_self(_53732_params[0LL].get()._field_decl.ptr())) {
		(_53817_n)--;
	}
	jule::I64 _54317_diff = _53817_n - static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	{
		
		if ((_54317_diff == 0LL)) {
			_case_begin_1a8166b18:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_53817_n > 0LL) && _53732_params[(_53817_n - 1LL)].get()._field_decl.get()._field_variadic) {
			_case_begin_1a8166b90:;
			{
				_53755_ok = true;
				return _53755_ok;
			}
		}
		else if ((_54317_diff < 0LL) || (_54317_diff > static_cast<jule::I64>(static_cast<jule::I64>(_53732_params.len())))) {
			_case_begin_1a8166c17:;
			{
				_1a58bdd23_push_err(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				_53755_ok = false;
				return _53755_ok;
			}
		}
		_match_end_1a8166a3b:;
	}
	jule::Str _55417_idents = jule::Str();
	for (; (_54317_diff > 0LL); (_54317_diff)--) {
		{
			_55417_idents+=jule::Str(", ", 2) + _53732_params[_53817_n - _54317_diff].get()._field_decl.get()._field_ident;
		}
	_iter_next_1a81694de:;
	}
	_iter_end_1a81694de:;
	(_55417_idents).mut_slice(2LL);
	_1a58bdd23_push_err(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_55417_idents)}));
	_53755_ok = false;
	return _53755_ok;
}



inline jule::Bool _1a58bea16_check_arg(_1a58bd0b9_FnCallArgChecker* _self_,jule::Ptr<_1ab834db5_ParamIns>& _56433_p,jule::Ptr<_1a58cee44_Data>& _56452_arg,_1aa07563a_Token& _56469_error_token) {
	jule::Bool _56491_ok = jule::Bool();
	if ((*_self_)._field_dynamic_annotation && _1ab8384e5_parameter_uses_generics(_56433_p.get()._field_decl,(*_self_)._field_f.get()._field_decl.get()._field_generics)) {
		_56491_ok=(!(_56433_p.get()._field_decl.get()._field_variadic));
		if (_56491_ok) {
			_1a58b9747_DynamicTypeAnnotation _56825_dta = _1a58b9747_DynamicTypeAnnotation((*_self_)._field_e,(*_self_)._field_f,_56433_p,_56452_arg,_56469_error_token,nullptr);
			_56491_ok=_1a58bc76c_annotate(&_56825_dta);
		}
		if ((!(_56491_ok))) {
			_1a58bd927_push_err_token(&(*_self_), _56469_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			_56491_ok = false;
			return _56491_ok;
		}
	}
	if (_1a5871688_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_mutable,_56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token)) {
		_1a586e202_check_assign_type((*_self_)._field_e.get()._field_s, _56433_p.get()._field_decl.get()._field_reference,_56433_p.get()._field_kind,_56452_arg,_56469_error_token);
	}
	_56491_ok = true;
	return _56491_ok;
}



inline jule::Bool _1a58bee9a_push(_1a58bd0b9_FnCallArgChecker* _self_,jule::Ptr<_1ab834db5_ParamIns>& _59128_p,jule::Ptr<_1aa08d334_Expr> _59146_arg) {
	jule::Bool _59160_ok = jule::Bool();
	jule::Ptr<_1a5913e9a_TypeKind> _59217_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _59313_old_immut = (*_self_)._field_e.get()._field_immutable;
	jule::Ptr<_1a58cee44_Data> _59417_d = nullptr;
	(*_self_)._field_e.get()._field_immutable=(!(_59128_p.get()._field_decl.get()._field_mutable));
	if ((!((*_self_)._field_dynamic_annotation)) && (!(_59128_p.get()._field_decl.get()._field_variadic))) {
		(*_self_)._field_e.get()._field_prefix=_59128_p.get()._field_kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	}
	_59417_d=_1a5902494_eval_expr_kind((*_self_)._field_e, _59146_arg.get()._field_kind);
	(*_self_)._field_e.get()._field_prefix=_59217_old;
	(*_self_)._field_e.get()._field_immutable=_59313_old_immut;
	if ((_59417_d == nullptr)) {
		_59160_ok = false;
		return _59160_ok;
	}
	(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_59417_d));
	_59160_ok = _1a58bea16_check_arg(&(*_self_), _59128_p,_59417_d,_59146_arg.get()._field_token);
	return _59160_ok;
}



inline jule::Bool _1a58c042e_push_variadic(_1a58bd0b9_FnCallArgChecker* _self_,jule::Ptr<_1ab834db5_ParamIns>& _61537_p,jule::I64 _61555_i) {
	jule::Bool _61565_ok = jule::Bool();
	_61565_ok=true;
	jule::Bool _61717_variadiced = false;
	jule::Bool _61813_more = (_61555_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()));
	jule::Ptr<_1ab81a74c_SliceExprModel> _61917_model = jule::new_ptr<_1ab81a74c_SliceExprModel>(_1ab81a74c_SliceExprModel(_61537_p.get()._field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_1a5913e9a_TypeKind> _62317_old = (*_self_)._field_e.get()._field_prefix;
	jule::Bool _62813_variadic = _61537_p.get()._field_kind.get()._field_variadic;
	_61537_p.get()._field_kind.get()._field_variadic=false;
	__JULE_DEFER({
		_61537_p.get()._field_kind.get()._field_variadic=_62813_variadic;
	});
	for (; _61555_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); (_61555_i)++) {
		{
			jule::Ptr<_1aa08d334_Expr> _63521_arg = (*_self_)._field_args[_61555_i];
			{
				auto &_match_expr{ _63521_arg.get()._field_kind };
				
				if (_match_expr.type_is<jule::Ptr<_1aa090633_VariadicExpr>>()) {
					_case_begin_1a8179ad7:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_61537_p.get()._field_kind)), 7)));
					}
				}
				else {
					_case_begin_1a817b721:;
					{
						(*_self_)._field_e.get()._field_prefix=_61537_p.get()._field_kind;
					}
				}
				_match_end_1a817b699:;
			}
			jule::Ptr<_1a58cee44_Data> _64821_d = _1a590284b_eval((*_self_)._field_e, _63521_arg);
			if ((_64821_d == nullptr)) {
				_61565_ok=false;
				goto _iter_next_1a817ac5e;
			}
			if (_64821_d.get()._field_kind.get()._field_variadic) {
				_61717_variadiced=true;
				{
					auto &_match_expr{ _64821_d.get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab81a74c_SliceExprModel>>()) {
						_case_begin_1a817e6ad:;
						{
							_61917_model=_64821_d.get()._field_model.operator jule::Ptr<_1ab81a74c_SliceExprModel>();
							_61917_model.get()._field_elem_kind=_61537_p.get()._field_kind;
						}
					}
					else {
						_case_begin_1a817e1b3:;
						{
							_61917_model=nullptr;
							(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_64821_d));
						}
					}
					_match_end_1a817e15d:;
				}
				_61537_p.get()._field_kind.get()._field_variadic=true;
				_61565_ok=_61565_ok && _1a58bea16_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
				(_61555_i)++;
				goto _iter_end_1a817ac5e;
			}
			_61565_ok=_61565_ok && _1a58bea16_check_arg(&(*_self_), _61537_p,_64821_d,_63521_arg.get()._field_token);
			_61917_model.get()._field_elems = jule::alloc_for_append(_61917_model.get()._field_elems,1);_61917_model.get()._field_elems.__push(_64821_d.get()._field_model);
		}
	_iter_next_1a817ac5e:;
	}
	_iter_end_1a817ac5e:;
	(*_self_)._field_e.get()._field_prefix=_62317_old;
	if (_61717_variadiced && _61813_more) {
		_1a58bd927_push_err_token(&(*_self_), (*_self_)._field_args[_61555_i].get()._field_token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	}
	if ((_61917_model != nullptr)) {
		(*_self_)._field_arg_models = jule::alloc_for_append((*_self_)._field_arg_models,1);(*_self_)._field_arg_models.__push(jule::Any(_61917_model));
	}
	return _61565_ok;
}



inline jule::Bool _1a58c07d6_check_args(_1a58bd0b9_FnCallArgChecker* _self_,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>& _69434_params) {
	jule::Bool _69457_ok = jule::Bool();
	jule::Bool _69513_arg = (*_self_)._field_e.get()._field_arg;
	(*_self_)._field_e.get()._field_arg=true;
	_69457_ok=true;
	jule::I64 _69917_i = 0LL;
	_julec_label_iter:;
	while (_69917_i < static_cast<jule::I64>(static_cast<jule::I64>(_69434_params.len()))) {
		{
			jule::Ptr<_1ab834db5_ParamIns> _70221_p = _69434_params[_69917_i];
			{
				
				if (_1ab830c07_is_self(_70221_p.get()._field_decl.ptr())) {
					_case_begin_1a8186c48:;
					{
						goto _match_end_1a818684c;
					}
				}
				else if (_70221_p.get()._field_decl.get()._field_variadic) {
					_case_begin_1a818693a:;
					{
						_69457_ok=_1a58c042e_push_variadic(&(*_self_), _70221_p,_69917_i) && _69457_ok;
						goto _iter_end_1a8185dac;
					}
				}
				else if ((*_self_)._field_args.len() <= _69917_i) {
					_case_begin_1a81869a1:;
					{
						_69457_ok=false;
						goto _iter_end_1a8185dac;
					}
				}
				else {
					_case_begin_1a81868c4:;
					{
						_69457_ok=_1a58bee9a_push(&(*_self_), _70221_p,(*_self_)._field_args[_69917_i]) && _69457_ok;
					}
				}
				_match_end_1a818684c:;
			}
			(_69917_i)++;
		}
	_iter_next_1a8185dac:;
	}
	_iter_end_1a8185dac:;
	(*_self_)._field_e.get()._field_arg=_69513_arg;
	return _69457_ok;
}



inline jule::Bool _1a58c0b05_check_dynamic_type_annotation(_1a58bd0b9_FnCallArgChecker* _self_) {
	jule::Bool _72450_ok = jule::Bool();
	{
		auto &expr = (*_self_)._field_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a818a4ee:;
		if (it != expr.end()) {
			jule::Ptr<_1a5913e9a_TypeKind> _1a818a576_g = *it;
			{
				if ((_1a818a576_g == nullptr)) {
					_1a58bdd23_push_err(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					_72450_ok = false;
					return _72450_ok;
				}
			}
			_iter_next_1a818a4ee:;
			++it;
			goto _iter_begin_1a818a4ee;
		}
		_iter_end_1a818a4ee:;
	}
	_72450_ok = true;
	return _72450_ok;
}



inline jule::Bool _1a58c0dbe_check(_1a58bd0b9_FnCallArgChecker* _self_) {
	jule::Bool _73426_ok = jule::Bool();
	jule::Slice<jule::Ptr<_1ab834db5_ParamIns>> _73517_params = _1a58be0ed_get_params(&(*_self_));
	_73426_ok=_1a58be4a5_check_counts(&(*_self_), _73517_params);
	if ((!(_73426_ok))) {
		_73426_ok = false;
		return _73426_ok;
	}
	_73426_ok=_1a58c07d6_check_args(&(*_self_), _73517_params);
	if (_73426_ok && (*_self_)._field_dynamic_annotation) {
		_73426_ok=_1a58c0b05_check_dynamic_type_annotation(&(*_self_));
	}
	return _73426_ok;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58bd0b9_FnCallArgChecker _Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _1a58c1d37_push_err(_1a58c151d_StructLitChecker* _self_,_1aa07563a_Token _75827_token,jule::Str _75841_fmt,jule::Slice<jule::Any> _75854_args) {
	_1a58d2b7d_push_err((*_self_)._field_e.ptr(), _75827_token,_75841_fmt,_75854_args);
}



inline void _1a58c2233_push_suggestion(_1a58c151d_StructLitChecker* _self_,jule::Str _76334_fmt,jule::Slice<jule::Any> _76347_args) {
	_1a58d3079_push_suggestion((*_self_)._field_e.ptr(), _76334_fmt,_76347_args);
}



inline void _1a58c270b_push_match(_1a58c151d_StructLitChecker* _self_,jule::Ptr<_1ab8137bc_FieldIns>& _76734_f,jule::Ptr<_1a58cee44_Data>& _76753_d,_1aa07563a_Token& _76768_error_token) {
	
	if (_1a5871688_check_validity_for_init_expr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_76734_f.get()._field_kind,_76753_d,_76768_error_token)) {
		_1a586e202_check_assign_type((*_self_)._field_e.get()._field_s, false,_76734_f.get()._field_kind,_76753_d,_76768_error_token);
	}
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1ab817da9_StructArgExprModel>(_1ab817da9_StructArgExprModel(_76734_f,_76753_d.get()._field_model)));
}



inline void _1a58c2b07_check_pair(_1a58c151d_StructLitChecker* _self_,jule::Ptr<_1aa0920e6_FieldExprPair>& _78034_pair,jule::Slice<jule::Ptr<_1aa08d334_Expr>>& _78061_exprs) {
	jule::Ptr<_1ab8137bc_FieldIns> _78217_f = _1ab815cdb_find_field((*_self_)._field_s.ptr(), _78034_pair.get()._field_field._field_kind);
	if ((_78217_f == nullptr)) {
		_1a58c1d37_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		return;
	}
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_e.get()._field_s.ptr(), _78217_f.get()._field_decl.get()._field_public,_78217_f.get()._field_decl.get()._field_token)))) {
		_1a58c1d37_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
		_1a58c2233_push_suggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	}
	_julec_label_dup_lookup:;
	{
		auto &expr = _78061_exprs;
		auto it = expr.begin();
		_iter_begin_1a819a135:;
		if (it != expr.end()) {
			jule::Ptr<_1aa08d334_Expr> _1a819a212_expr = *it;
			{
				{
					auto &_match_expr{ _1a819a212_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1aa0920e6_FieldExprPair>>()) {
						_case_begin_1a819a9b5:;
						{
							jule::Ptr<_1aa0920e6_FieldExprPair> _79725_dpair = _1a819a212_expr.get()._field_kind.operator jule::Ptr<_1aa0920e6_FieldExprPair>();
							{
								
								if (_78034_pair == _79725_dpair) {
									_case_begin_1a819b7b8:;
									{
										goto _iter_end_1a819a135;
									}
								}
								else if (_78034_pair.get()._field_field._field_kind == _79725_dpair.get()._field_field._field_kind) {
									_case_begin_1a819b840:;
									{
										_1a58c1d37_push_err(&(*_self_), _78034_pair.get()._field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_78034_pair.get()._field_field._field_kind)}));
										goto _iter_end_1a819a135;
									}
								}
								_match_end_1a819b6ec:;
							}
						}
					}
					_match_end_1a819a960:;
				}
			}
			_iter_next_1a819a135:;
			++it;
			goto _iter_begin_1a819a135;
		}
		_iter_end_1a819a135:;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _80817_prefix = (*_self_)._field_e.get()._field_prefix;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_80817_prefix;
	});
	(*_self_)._field_e.get()._field_prefix=_78217_f.get()._field_kind;
	jule::Ptr<_1a58cee44_Data> _81217_d = _1a5902494_eval_expr_kind((*_self_)._field_e, jule::Any(_78034_pair.get()._field_expr));
	if ((_81217_d == nullptr)) {
		return;
	}
	_1a58c270b_push_match(&(*_self_), _78217_f,_81217_d,_78034_pair.get()._field_field);
}



inline jule::Bool _1a58c2eae_ready_exprs(_1a58c151d_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1aa08d334_Expr>>& _81935_exprs) {
	jule::Bool _82017_ok = true;
	{
		auto &expr = _81935_exprs;
		auto it = expr.begin();
		_iter_begin_1a81a1218:;
		if (it != expr.end()) {
			jule::I64 _1a81a12b2_i = it - expr.begin();
			jule::Ptr<_1aa08d334_Expr> _1a81a1537_expr = *it;
			{
				{
					auto &_match_expr{ _1a81a1537_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1aa092d50_KeyValPair>>()) {
						_case_begin_1a81a1d1d:;
						{
							jule::Ptr<_1aa092d50_KeyValPair> _82425_pair = _1a81a1537_expr.get()._field_kind.operator jule::Ptr<_1aa092d50_KeyValPair>();
							{
								auto &_match_expr{ _82425_pair.get()._field_key.get()._field_kind };
								
								if (_match_expr.type_is<jule::Ptr<_1aa08ece7_IdentExpr>>()) {
									_case_begin_1a81a24d3:;
									{
										goto _match_end_1a81a2d41;
									}
								}
								else {
									_case_begin_1a81a2d96:;
									{
										_1a58c1d37_push_err(&(*_self_), _82425_pair.get()._field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_82017_ok=false;
										goto _iter_next_1a81a1218;
									}
								}
								_match_end_1a81a2d41:;
							}
							_81935_exprs[_1a81a12b2_i].get()._field_kind=jule::Any(jule::new_ptr<_1aa0920e6_FieldExprPair>(_1aa0920e6_FieldExprPair(_82425_pair.get()._field_key.get()._field_token,_82425_pair.get()._field_val)));
						}
					}
					_match_end_1a81a1cb8:;
				}
			}
			_iter_next_1a81a1218:;
			++it;
			_1a81a12b2_i++;
			goto _iter_begin_1a81a1218;
		}
		_iter_end_1a81a1218:;
	}
	return _82017_ok;
}



inline void _1a58c32cd_check(_1a58c151d_StructLitChecker* _self_,jule::Slice<jule::Ptr<_1aa08d334_Expr>>& _84329_exprs) {
	if ((_84329_exprs.len() == 0LL)) {
		return;
	}
	if ((!(_1a58c2eae_ready_exprs(&(*_self_), _84329_exprs)))) {
		return;
	}
	jule::Bool _85217_paired = false;
	{
		auto &expr = _84329_exprs;
		auto it = expr.begin();
		_iter_begin_1a81a5d44:;
		if (it != expr.end()) {
			jule::I64 _1a81a5dee_i = it - expr.begin();
			jule::Ptr<_1aa08d334_Expr> _1a81a6163_expr = *it;
			{
				{
					auto &_match_expr{ _1a81a6163_expr.get()._field_kind };
					
					if (_match_expr.type_is<jule::Ptr<_1aa0920e6_FieldExprPair>>()) {
						_case_begin_1a81aa783:;
						{
							jule::Ptr<_1aa0920e6_FieldExprPair> _85625_pair = _1a81a6163_expr.get()._field_kind.operator jule::Ptr<_1aa0920e6_FieldExprPair>();
							if ((_1a81a5dee_i > 0LL) && (!(_85217_paired))) {
								_1a58c1d37_push_err(&(*_self_), _85625_pair.get()._field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							}
							_85217_paired=true;
							_1a58c2b07_check_pair(&(*_self_), _85625_pair,_84329_exprs);
						}
					}
					else {
						_case_begin_1a81a6949:;
						{
							if (_85217_paired) {
								_1a58c1d37_push_err(&(*_self_), _1a81a6163_expr.get()._field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							}
							if (_1a81a5dee_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_s.get()._field_fields.len()))) {
								_1a58c1d37_push_err(&(*_self_), _1a81a6163_expr.get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1a81a5d44;
							}
							jule::Ptr<_1ab8137bc_FieldIns> _87125_field = (*_self_)._field_s.get()._field_fields[_1a81a5dee_i];
							jule::Ptr<_1a5913e9a_TypeKind> _87325_prefix = (*_self_)._field_e.get()._field_prefix;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_87325_prefix;
							});
							(*_self_)._field_e.get()._field_prefix=_87125_field.get()._field_kind;
							jule::Ptr<_1a58cee44_Data> _87725_d = _1a5902494_eval_expr_kind((*_self_)._field_e, _1a81a6163_expr.get()._field_kind);
							if ((_87725_d == nullptr)) {
								goto _iter_next_1a81a5d44;
							}
							_1a58c270b_push_match(&(*_self_), _87125_field,_87725_d,_1a81a6163_expr.get()._field_token);
						}
					}
					_match_end_1a81a68e4:;
				}
			}
			_iter_next_1a81a5d44:;
			++it;
			_1a81a5dee_i++;
			goto _iter_begin_1a81a5d44;
		}
		_iter_end_1a81a5d44:;
	}
	if ((!(_85217_paired))) {
		jule::I64 _88817_n = (*_self_)._field_s.get()._field_fields.len();
		jule::I64 _88921_diff = _88817_n - static_cast<jule::I64>(static_cast<jule::I64>(_84329_exprs.len()));
		{
			
			if ((_88921_diff <= 0LL)) {
				_case_begin_1a81ae039:;
				{
					return;
				}
			}
			_match_end_1a81ade5c:;
		}
		jule::Str _89521_idents = jule::Str();
		for (; (_88921_diff > 0LL); (_88921_diff)--) {
			{
				_89521_idents+=jule::Str(", ", 2) + (*_self_)._field_s.get()._field_fields[_88817_n - _88921_diff].get()._field_decl.get()._field_ident;
			}
		_iter_next_1a81a6482:;
		}
		_iter_end_1a81a6482:;
		(_89521_idents).mut_slice(2LL);
		_1a58c1d37_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_89521_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1a58c151d_StructLitChecker _Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa094868_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _1a58c6b2d_prepare_types(_1a58c648a_RetTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1a5891730_get_result_types((*_self_)._field_f.get()._field_result);
	}
}



inline void _1a58c6e4c_prepare_exprs(_1a58c648a_RetTypeChecker* _self_,jule::Ptr<_1aa08d334_Expr>& _107637_e) {
	if ((_107637_e == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ _107637_e.get()._field_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08db70_TupleExpr>>()) {
			_case_begin_1a81d612c:;
			{
				(*_self_)._field_exprs=_107637_e.get()._field_kind.operator jule::Ptr<_1aa08db70_TupleExpr>().get()._field_expr;
			}
		}
		else {
			_case_begin_1a81d5c75:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_107637_e);
			}
		}
		_match_end_1a81d578b:;
	}
}



inline void _1a58c718e_ret_vars(_1a58c648a_RetTypeChecker* _self_) {
	if (((*_self_)._field_f == nullptr) || _1ab8329d9_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		return;
	}
	(*_self_)._field_vars=jule::Slice<jule::Ptr<_1a588601b_Var>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents.len()));
	jule::Ptr<_1ac565bd3_ScopeChecker> _109417_root_scope = _1ac568114_get_root((*_self_)._field_sc);
	jule::I64 _109617_j = 0LL;
	{
		auto &expr = (*_self_)._field_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a81d99b0:;
		if (it != expr.end()) {
			jule::I64 _1a81d9a37_i = it - expr.begin();
			_1aa07563a_Token _1a81d9c8a_ident = *it;
			{
				if ((!(_1aa07861b_is_ignore_ident(_1a81d9c8a_ident._field_kind)))) {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(_109417_root_scope.get()._field_table.get()._field_vars[_109617_j]);
					(_109617_j)++;
				} else {
					(*_self_)._field_vars = jule::alloc_for_append((*_self_)._field_vars,1);(*_self_)._field_vars.__push(jule::new_ptr<_1a588601b_Var>(_1a588601b_Var(jule::Ptr<_1ac56022c_Scope>(),_1aa07563a_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),(*_self_)._field_types[_1a81d9a37_i])),jule::Ptr<_1a58d1451_Value>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>())));
				}
			}
			_iter_next_1a81d99b0:;
			++it;
			_1a81d9a37_i++;
			goto _iter_begin_1a81d99b0;
		}
		_iter_end_1a81d99b0:;
	}
	if ((_109617_j == 0LL)) {
		(*_self_)._field_vars=nullptr;
	}
}



inline void _1a58c73d1_check_exprs(_1a58c648a_RetTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;
	}
	jule::Slice<jule::Ptr<_1a58cee44_Data>> _112017_datas = jule::Slice<jule::Ptr<_1a58cee44_Data>>::alloc(0LL,static_cast<jule::I64>((*_self_)._field_exprs.len()));
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a81dd95e:;
		if (it != expr.end()) {
			jule::I64 _1a81dd453_i = it - expr.begin();
			jule::Ptr<_1aa08d334_Expr> _1a81ddc28_expr = *it;
			{
				if (_1a81dd453_i >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
					goto _iter_end_1a81dd95e;
				}
				jule::Ptr<_1a5913e9a_TypeKind> _112721_t = (*_self_)._field_types[_1a81dd453_i];
				jule::Ptr<_1a58cee44_Data> _112921_d = _1a5902c03_eval_expr(_1a586d70c_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1a5932ea8_Lookup>((*_self_)._field_sc, 0),_112721_t), _1a81ddc28_expr);
				if ((_112921_d == nullptr)) {
					goto _iter_next_1a81dd95e;
				}
				_112017_datas = jule::alloc_for_append(_112017_datas,1);_112017_datas.__push(_112921_d);
				if ((!(_112921_d.get()._field_mutable)) && _1a5915809_mutable(_112921_d.get()._field_kind.ptr())) {
					_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;
				}
				_1a58b7778_AssignTypeChecker _114121_ac = _1a58b7778_AssignTypeChecker((*_self_)._field_sc.get()._field_s,_112721_t,_112921_d,(*_self_)._field_error_token);
				_1a58b8dea_check(&_114121_ac);
			}
			_iter_next_1a81dd95e:;
			++it;
			_1a81dd453_i++;
			goto _iter_begin_1a81dd95e;
		}
		_iter_end_1a81dd95e:;
	}
	if ((_112017_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1ab821599_TupleExprModel>(_1ab821599_TupleExprModel(_112017_datas)));
	} else if ((_112017_datas.len() == 1LL)) {
		(*_self_)._field_model=_112017_datas[0LL].get()._field_model;
	}
}



inline jule::Bool _1a58c7788_check(_1a58c648a_RetTypeChecker* _self_,jule::Ptr<_1aa08d334_Expr>& _116029_e) {
	_1a58c6b2d_prepare_types(&(*_self_));
	_1a58c6e4c_prepare_exprs(&(*_self_), _116029_e);
	_1a58c718e_ret_vars(&(*_self_));
	jule::I64 _116513_n = (*_self_)._field_exprs.len();
	if ((_116513_n == 0LL) && ((*_self_)._field_types.len() > 0LL)) {
		if ((!(_1ab83391e_any_var((*_self_)._field_f.get()._field_decl.ptr())))) {
			_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;
		}
		return true;
	}
	if (((_116513_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1ab8329d9_is_void((*_self_)._field_f.get()._field_decl.ptr())) {
		_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;
	}
	if (_116513_n > static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if (_116513_n < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_types.len()))) {
		_1a5867bac_push_err((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_error_token,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	}
	_1a58c73d1_check_exprs(&(*_self_));
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, _1a58c648a_RetTypeChecker _Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa094c86_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81941b_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81a0ed_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "except:" << _Src._field_except << ", ";
	_Stream << "assigned:" << _Src._field_assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0951a4_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81ae9a_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}



inline _1a5905772_BinaryEval static__1a590608b_new_plain(jule::Ptr<_1a58d2397_Eval> _336829_e) {
	return _1a5905772_BinaryEval(_336829_e,jule::Ptr<_1a58cee44_Data>(),jule::Ptr<_1a58cee44_Data>(),_1aa07563a_Token());
}



inline _1a5905772_BinaryEval static__1a5906476_new(jule::Ptr<_1a58d2397_Eval> _337423_e,_1aa07563a_Token _337437_op) {
	return _1a5905772_BinaryEval(_337423_e,jule::Ptr<_1a58cee44_Data>(),jule::Ptr<_1a58cee44_Data>(),_337437_op);
}



inline jule::Bool _1a5906795_check_type_compatibility(_1a5905772_BinaryEval* _self_) {
	return _1a586e7a7_check_type_compatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_kind,(*_self_)._field_r.get()._field_kind,(*_self_)._field_op);
}



inline jule::Bool _1a5906ac5_check_struct_common_operator_compatibility(_1a5905772_BinaryEval* _self_) {
	jule::Ptr<_1ab836218_FnIns> _338817_overload = nullptr;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a851c09a:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a851c111:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a851c177:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a851c1dd:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a851d70b:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a851d772:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a851d7d8:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a851d84e:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_and;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a851da6e:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_or;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a851dad5:;
			{
				_338817_overload=_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_bit_xor;
			}
		}
		else {
			_case_begin_1a851ba4a:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return false;
			}
		}
		_match_end_1a851c034:;
	}
	if ((_338817_overload == nullptr)) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
		return false;
	}
	jule::Ptr<_1ab834db5_ParamIns> _342017_p = _338817_overload.get()._field_params[1LL];
	return _1a586e202_check_assign_type((*_self_)._field_e.get()._field_s, _342017_p.get()._field_decl.get()._field_reference,_342017_p.get()._field_kind,(*_self_)._field_r,(*_self_)._field_op);
}



inline jule::Ptr<_1a58cee44_Data> _1a5906da0_eval_nil(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5915ad4_nil_compatible((*_self_)._field_r.get()._field_kind.ptr())))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any(_1a59145b6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a852b7b3:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a8529daa:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
				return nullptr;
			}
		}
		_match_end_1a852a2b7:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590717a_eval_enum(_1a5905772_BinaryEval* _self_) {
	jule::Ptr<_1ac44a337_Enum> _344517_enm = _1a59170be_enm((*_self_)._field_l.get()._field_kind.ptr());
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a852c61b:;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _344921_rkind = (*_self_)._field_r.get()._field_kind;
				if ((_1a59170be_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
					_344921_rkind=_1a59170be_enm((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind.get()._field_kind;
				}
				if ((!(_1a586e7a7_check_type_compatibility((*_self_)._field_e.get()._field_s, _344517_enm.get()._field_kind.get()._field_kind,_344921_rkind,(*_self_)._field_op)))) {
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		_match_end_1a852cebd:;
	}
	if ((_1a59170be_enm((*_self_)._field_r.get()._field_kind.ptr()) == nullptr) || (_344517_enm != _1a59170be_enm((*_self_)._field_r.get()._field_kind.ptr()))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_344517_enm.get()._field_ident),jule::Any(_1a59145b6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a85339c9:;
			{
				if ((!(_1ac55e836_is_num(_1a59145b6_to_str(_344517_enm.get()._field_kind.get()._field_kind.ptr()))))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344517_enm.get()._field_ident)}));
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a853359a:;
			{
				if ((_1a591673e_prim(_344517_enm.get()._field_kind.get()._field_kind.ptr()) == nullptr) || (!(_1ac55e1c6_is_int(_1a5919cd6_to_str(_1a591673e_prim(_344517_enm.get()._field_kind.get()._field_kind.ptr()).ptr()))))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344517_enm.get()._field_ident)}));
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a8532775:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_344517_enm.get()._field_ident)}));
				return nullptr;
			}
		}
		_match_end_1a8533534:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5907455_eval_sptr(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a853c065:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a853a33d:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a853a706:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5907730_eval_ptr(_1a5905772_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a853e94c:;
			{
				if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a853e9b3:;
			{
				if ((_1a5916ce4_ptr((*_self_)._field_l.get()._field_kind.ptr()) == nullptr)) {
					std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				}
				if (_1a5923e33_is_unsafe(_1a5916ce4_ptr((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				}
				if ((!(_1a590e47e_is_ptr_arithmetic_compatible_int((*_self_)._field_r)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a853c40b:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a853d077:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5907a0a_eval_arr(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8547d51:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a854614b:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a85464ae:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5907cd5_eval_slc(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a854acbb:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a854910a:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a8549429:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a59080b0_eval_fn(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a854dc36:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a854c075:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a854c394:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590838a_eval_struct(_1a5905772_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a854ec9d:;
			{
				if ((_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt == nullptr)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a854ed14:;
			{
				if ((_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_gt_eq == nullptr)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a854ed7a:;
			{
				if ((_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt == nullptr)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a854ee02:;
			{
				if ((_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()).get()._field_operators._field_lt_eq == nullptr)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a854ee79:;
			{
				if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
					return nullptr;
				}
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		_match_end_1a854ec48:;
	}
	if ((!(_1a5906ac5_check_struct_common_operator_compatibility(&(*_self_))))) {
		return nullptr;
	}
	return (*_self_)._field_l;
}



inline jule::Ptr<_1a58cee44_Data> _1a5908665_eval_trait(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a855d98d:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a855bc44:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a855c10c:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5908940_eval_any(_1a5905772_BinaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8560b38:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a855dd34:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
				return nullptr;
			}
		}
		_match_end_1a855e9a0:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5908c1a_eval_bool(_1a5905772_BinaryEval* _self_) {
	if ((!(_1a5906795_check_type_compatibility(&(*_self_))))) {
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a8563e38:;
			{
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a8562277:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(_1a59145b6_to_str((*_self_)._field_l.get()._field_kind.ptr()))}));
				return nullptr;
			}
		}
		_match_end_1a8562596:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5908ee5_eval_str(_1a5905772_BinaryEval* _self_) {
	jule::Str _371817_rk = _1a59145b6_to_str((*_self_)._field_r.get()._field_kind.ptr());
	if ((_371817_rk != jule::Str("str", 3))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_371817_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a85676ab:;
			{
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8566611:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		else {
			_case_begin_1a8565214:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("str", 3))}));
				return nullptr;
			}
		}
		_match_end_1a8566534:;
	}
}



inline void _1a5909237_set_type_to_greater(_1a5905772_BinaryEval* _self_) {
	if (_1a58d0b48_is_const((*_self_)._field_l.ptr())) {
		if ((!(_1a58d0b48_is_const((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			return;
		}
		goto _julec_label_set;
	}
	if (_1a58d0b48_is_const((*_self_)._field_r.ptr())) {
		return;
	}
	_julec_label_set:;
	if (_1ac55c537_is_greater(_1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind,_1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind)) {
		(*_self_)._field_l.get()._field_kind=(*_self_)._field_r.get()._field_kind;
	}
}



inline void _1a5909523_check_mod_data(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _376138_d) {
	if ((!(_1a58d0b48_is_const(_376138_d.ptr())))) {
		if ((_1a591673e_prim(_376138_d.get()._field_kind.ptr()) == nullptr) || (!(_1ac55e1c6_is_int(_1a591673e_prim(_376138_d.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		}
		return;
	}
	{
		
		if (_1a58a50c3_sig_assignable(jule::Str("i64", 3),_376138_d)) {
			_case_begin_1a8570560:;
			{
				_1ac4d406e_set_i64(_376138_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_376138_d.get()._field_constant.ptr())));
			}
		}
		else if (_1a58b527b_unsig_assignable(jule::Str("u64", 3),_376138_d)) {
			_case_begin_1a8570285:;
			{
				_1ac4d438d_set_u64(_376138_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_376138_d.get()._field_constant.ptr())));
			}
		}
		else {
			_case_begin_1a857021e:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1a85701b9:;
	}
}



inline void _1a5909765_mod(_1a5905772_BinaryEval* _self_) {
	_1a5909523_check_mod_data(&(*_self_), (*_self_)._field_l);
	_1a5909523_check_mod_data(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1a5909c3d_numbers_are_compatibile(_1a5905772_BinaryEval* _self_,jule::Str& _378339_lk,jule::Str& _378349_rk) {
	if ((!(_1ac55e836_is_num(_378349_rk)))) {
		return false;
	}
	if (_1a58d0b48_is_const((*_self_)._field_l.ptr())) {
		return true;
	}
	if ((_378339_lk == jule::Str("f32", 3))) {
		if (_1a58d0b48_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_378349_rk == jule::Str("f32", 3));
	}
	if ((_378339_lk == jule::Str("f64", 3))) {
		if (_1a58d0b48_is_const((*_self_)._field_r.ptr())) {
			return true;
		}
		return (_378349_rk == jule::Str("f64", 3));
	}
	if (_1a58d0b48_is_const((*_self_)._field_r.ptr())) {
		return true;
	}
	return _378339_lk == _378349_rk;
}



inline jule::Ptr<_1a58cee44_Data> _1a590a007_eval_float(_1a5905772_BinaryEval* _self_) {
	jule::Str _381313_lk = _1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _381413_rk = _1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	if ((!(_1a5909c3d_numbers_are_compatibile(&(*_self_), _381313_lk,_381413_rk)))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381313_lk),jule::Any(_381413_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8579d72:;
			{
				if ((!(_1a58d0b48_is_const((*_self_)._field_l.ptr()))) || (!(_1a58b5600_int_assignable(jule::Str("i64", 3),(*_self_)._field_l)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381313_lk),jule::Any(_381413_rk)}));
					return nullptr;
				}
				if ((!(_1a58d0b48_is_const((*_self_)._field_r.ptr()))) || (!(_1a58b5600_int_assignable(jule::Str("u64", 3),(*_self_)._field_r)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381313_lk),jule::Any(_381413_rk)}));
					return nullptr;
				}
				_1ac4d406e_set_i64((*_self_)._field_l.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64((*_self_)._field_l.get()._field_constant.ptr())));
				_1ac4d438d_set_u64((*_self_)._field_r.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64((*_self_)._field_r.get()._field_constant.ptr())));
				if ((!(_1a590dc64_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1a857a23a:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a857a2c3:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		_match_end_1a8581609:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a8583cd2:;
			{
				_1a5909237_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8583d48:;
			{
				if ((!(_1ac55e1c6_is_int(_381413_rk)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_381313_lk),jule::Any(_381413_rk)}));
					return nullptr;
				}
				_1a5909765_mod(&(*_self_));
				return (*_self_)._field_r;
			}
		}
		else {
			_case_begin_1a857a6d0:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a8582198:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590a2d2_eval_int(_1a5905772_BinaryEval* _self_) {
	jule::Str _387713_lk = _1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()).get()._field_kind;
	jule::Str _387813_rk = _1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()).get()._field_kind;
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a8586ee4:;
			{
				if ((!(_1ac55e1c6_is_int(_387713_lk))) || (!(_1ac55e1c6_is_int(_387813_rk)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_387713_lk),jule::Any(_387813_rk)}));
					return nullptr;
				}
				if ((!(_1a590dc64_is_ok_for_shifting((*_self_)._field_r)))) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;
				}
				return (*_self_)._field_l;
			}
		}
		_match_end_1a8587a0b:;
	}
	if ((!(_1a5909c3d_numbers_are_compatibile(&(*_self_), _387713_lk,_387813_rk)))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_387713_lk),jule::Any(_387813_rk)}));
		return nullptr;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a858a8dd:;
			{
				return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("bool", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
			}
		}
		_match_end_1a858bb86:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a858e35e:;
			{
				_1a5909237_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a858e3c5:;
			{
				_1a5909765_mod(&(*_self_));
				_1a5909237_set_type_to_greater(&(*_self_));
				return (*_self_)._field_l;
			}
		}
		else {
			_case_begin_1a858bc63:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind)}));
				return nullptr;
			}
		}
		_match_end_1a858c736:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590a5ac_eval_prim(_1a5905772_BinaryEval* _self_) {
	jule::Ptr<_1a591970e_Prim> _393613_prim = _1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr());
	{
		
		if (_1a591cd61_is_bool(_393613_prim.ptr())) {
			_case_begin_1a8591a48:;
			{
				return _1a5908c1a_eval_bool(&(*_self_));
			}
		}
		else if (_1a591d13b_is_str(_393613_prim.ptr())) {
			_case_begin_1a8591ac0:;
			{
				return _1a5908ee5_eval_str(&(*_self_));
			}
		}
		_match_end_1a85919b0:;
	}
	if ((_1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(_1a5919cd6_to_str(_393613_prim.ptr())),jule::Any(_1a59145b6_to_str((*_self_)._field_r.get()._field_kind.ptr()))}));
		return nullptr;
	}
	{
		
		if (_1ac55e528_is_float(_393613_prim.get()._field_kind)) {
			_case_begin_1a8594d6a:;
			{
				return _1a590a007_eval_float(&(*_self_));
			}
		}
		else if (_1ac55e1c6_is_int(_393613_prim.get()._field_kind)) {
			_case_begin_1a8594e36:;
			{
				return _1a590a2d2_eval_int(&(*_self_));
			}
		}
		else {
			_case_begin_1a859461c:;
			{
				return nullptr;
			}
		}
		_match_end_1a8594441:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a590a887_eval_op(_1a5905772_BinaryEval* _self_) {
	{
		
		if (_1a591552e_void((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a8596a4d:;
			{
				_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>({jule::Any((*_self_)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
				return nullptr;
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim((*_self_)._field_r.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a8596ab4:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a8596b4c;
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr) && _1a591d416_is_any(_1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()).ptr())) {
			_case_begin_1a8596b4c:;
			{
				return _1a5908940_eval_any(&(*_self_));
			}
		}
		else if (_1a5915254_is_nil((*_self_)._field_l.get()._field_kind.ptr())) {
			_case_begin_1a8596bb3:;
			{
				return _1a5906da0_eval_nil(&(*_self_));
			}
		}
		else if ((_1a59170be_enm((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a85964a9:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a8596520;
			}
		}
		else if ((_1a59170be_enm((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596520:;
			{
				return _1a590717a_eval_enum(&(*_self_));
			}
		}
		else if ((_1a5916a19_sptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596586:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a85965ec;
			}
		}
		else if ((_1a5916a19_sptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a85965ec:;
			{
				return _1a5907455_eval_sptr(&(*_self_));
			}
		}
		else if ((_1a5916ce4_ptr((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596c5c:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a8596cc3;
			}
		}
		else if ((_1a5916ce4_ptr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596cc3:;
			{
				return _1a5907730_eval_ptr(&(*_self_));
			}
		}
		else if ((_1a5917399_arr((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596d4a:;
			{
				return _1a5907a0a_eval_arr(&(*_self_));
			}
		}
		else if ((_1a5917674_slc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596dc2:;
			{
				return _1a5907cd5_eval_slc(&(*_self_));
			}
		}
		else if ((_1a591794e_fnc((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596e49:;
			{
				return _1a59080b0_eval_fn(&(*_self_));
			}
		}
		else if ((_1a5918004_trt((*_self_)._field_r.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8596ec1:;
			{
				std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple((*_self_)._field_r,(*_self_)._field_l);
				goto _case_begin_1a8597048;
			}
		}
		else if ((_1a5918004_trt((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8597048:;
			{
				return _1a5908665_eval_trait(&(*_self_));
			}
		}
		else if ((_1a5917c29_strct((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a85970c0:;
			{
				return _1a590838a_eval_struct(&(*_self_));
			}
		}
		else if ((_1a591673e_prim((*_self_)._field_l.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1a8597147:;
			{
				return _1a590a5ac_eval_prim(&(*_self_));
			}
		}
		else {
			_case_begin_1a8596443:;
			{
				return nullptr;
			}
		}
		_match_end_1a8596377:;
	}
}



inline void _1a590aba6_eval_const(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _400634_d) {
	{
		
		if ((_400634_d == nullptr)) {
			_case_begin_1a85a84dd:;
			{
				return;
			}
		}
		else if ((!(_1a58d0b48_is_const((*_self_)._field_l.ptr()))) || (!(_1a58d0b48_is_const((*_self_)._field_r.ptr())))) {
			_case_begin_1a85a8565:;
			{
				_400634_d.get()._field_constant=nullptr;
				return;
			}
		}
		_match_end_1a85a8400:;
	}
	{
		auto &_match_expr{ (*_self_)._field_op._field_kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a85a8620:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) == (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a85a96ed:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) != (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a85a9764:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool(_1ac4d6d63_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a85aa08e:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool(_1ac4d69ab_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a85aa105:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) > (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a85aa16b:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) < (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a85aa1d2:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) >= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a85aa248:;
			{
				_400634_d.get()._field_constant=static__1ac4d17a8_new_bool((*((*_self_)._field_l.get()._field_constant)) <= (*((*_self_)._field_r.get()._field_constant)));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a85aa2ae:;
			{
				_1ac4d8590_add((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a85aa325:;
			{
				_1ac4d8947_sub((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a85aa38b:;
			{
				_1ac4d8cee_mul((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a85aa402:;
			{
				jule::Bool _404317_ok = _1ac4d91a6_div((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_404317_ok)) && (_1ac4d3c50_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
				jule::Ptr<_1a591970e_Prim> _404821_prim = _1a591673e_prim(_400634_d.get()._field_kind.ptr());
				{
					
					if (_1ac55da66_is_sig_int(_404821_prim.get()._field_kind)) {
						_case_begin_1a85b9d90:;
						{
							_1ac4d406e_set_i64(_400634_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_400634_d.get()._field_constant.ptr())));
						}
					}
					else if (_1ac55ddb8_is_unsig_int(_404821_prim.get()._field_kind)) {
						_case_begin_1a85b9e17:;
						{
							_1ac4d438d_set_u64(_400634_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_400634_d.get()._field_constant.ptr())));
						}
					}
					_match_end_1a85b9ce6:;
				}
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a85aa468:;
			{
				jule::Bool _405617_ok = _1ac4d955d_mod((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				if ((!(_405617_ok)) && (_1ac4d3c50_as_f64((*_self_)._field_r.get()._field_constant.ptr()) == 0LL)) {
					_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				}
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a85aa4ce:;
			{
				_1ac4d9cbc_bitwise_or((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a85aa545:;
			{
				_1ac4d9915_bitwise_and((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a85aa5bc:;
			{
				_1ac4da174_xor((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a85aa644:;
			{
				_1ac4da52b_lshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a85aa6bb:;
			{
				_1ac4da8d3_rshift((*_self_)._field_l.get()._field_constant.ptr(), (*((*_self_)._field_r.get()._field_constant)));
				_400634_d.get()._field_constant=(*_self_)._field_l.get()._field_constant;
			}
		}
		_match_end_1a85a9698:;
	}
	_1a591035e_apply_cast_model_by_enum(_400634_d,_1a59170be_enm(_400634_d.get()._field_kind.ptr()));
	jule::Ptr<_1a591970e_Prim> _408017_prim = _1a591673e_prim(_400634_d.get()._field_kind.ptr());
	if ((_408017_prim == nullptr) || (!(_1ac55e836_is_num(_1a5919cd6_to_str(_408017_prim.ptr()))))) {
		_400634_d.get()._field_model=jule::Any(_400634_d.get()._field_constant);
		return;
	}
	if (((*_self_)._field_op._field_kind != jule::Str("<<", 2)) && ((*_self_)._field_op._field_kind != jule::Str(">>", 2))) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model != (*_self_)._field_r.get()._field_constant)) {
			_400634_d.get()._field_kind=(*_self_)._field_r.get()._field_kind;
			_408017_prim=_1a591673e_prim(_400634_d.get()._field_kind.ptr());
		}
	}
	_1a590ccda_fit_bitsize(_400634_d);
	_1a59106a0_cast_const_by_type(_408017_prim.get()._field_kind,_400634_d);
}



inline void _1a590aec5_check_data(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _409634_d) {
	jule::Ptr<_1ab836218_FnIns> _409713_f = _1a591794e_fnc(_409634_d.get()._field_kind.ptr());
	if (((_409713_f != nullptr) && (_409713_f.get()._field_decl != nullptr)) && _1ab832cb4_is_method(_409713_f.get()._field_decl.ptr())) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	}
}



inline void _1a590b217_check_datas(_1a5905772_BinaryEval* _self_) {
	_1a590aec5_check_data(&(*_self_), (*_self_)._field_l);
	_1a590aec5_check_data(&(*_self_), (*_self_)._field_r);
}



inline void _1a590b536_set_model(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _410833_d) {
	if (_1a58d0b48_is_const(_410833_d.ptr())) {
		if (((*_self_)._field_l.get()._field_model == (*_self_)._field_l.get()._field_constant) && ((*_self_)._field_r.get()._field_model == (*_self_)._field_r.get()._field_constant)) {
			return;
		}
	}
	jule::Ptr<_1a58cee44_Data> _411618_l = (*_self_)._field_l;
	jule::Ptr<_1a58cee44_Data> _411625_r = (*_self_)._field_r;
	std::tie(_411618_l,_411625_r) = std::make_tuple((*_self_)._field_l,(*_self_)._field_r);
	if ((!(_1a58d1000_good_operand(_411618_l.ptr(), _411625_r)))) {
		std::tie(_411618_l,_411625_r) = std::make_tuple(_411625_r,_411618_l);
	}
	_410833_d.get()._field_model=jule::Any(jule::new_ptr<_1ab8170b7_BinopExprModel>(_1ab8170b7_BinopExprModel(jule::new_ptr<_1ab816825_OperandExprModel>(_1ab816825_OperandExprModel(_411618_l.get()._field_kind,_411618_l.get()._field_model)),jule::new_ptr<_1ab816825_OperandExprModel>(_1ab816825_OperandExprModel(_411625_r.get()._field_kind,_411625_r.get()._field_model)),(*_self_)._field_op)));
}



inline void _1a590b855_post_eval(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _413433_d) {
	_413433_d.get()._field_lvalue=false;
	_1a590b536_set_model(&(*_self_), _413433_d);
}



inline jule::Ptr<_1a58cee44_Data> _1a590bcd9_solve_explicit(_1a5905772_BinaryEval* _self_,jule::Ptr<_1a58cee44_Data>& _413938_l,jule::Ptr<_1a58cee44_Data>& _413953_r) {
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413938_l,_413953_r);
	_1a590b217_check_datas(&(*_self_));
	jule::Ptr<_1a58cee44_Data> _414417_d = _1a590a887_eval_op(&(*_self_));
	std::tie((*_self_)._field_l,(*_self_)._field_r) = std::make_tuple(_413938_l,_413953_r);
	_1a590aba6_eval_const(&(*_self_), _414417_d);
	if ((_414417_d != nullptr)) {
		_414417_d.get()._field_mutable=true;
		_1a590b855_post_eval(&(*_self_), _414417_d);
	}
	return _414417_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a590c191_eval(_1a5905772_BinaryEval* _self_,jule::Ptr<_1aa0917aa_BinopExpr>& _415928_op) {
	if ((_415928_op.get()._field_op._field_kind == jule::Str("=", 1))) {
		_1a58d2b7d_push_err((*_self_)._field_e.ptr(), _415928_op.get()._field_op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1a58d3079_push_suggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _416617_l = _1a5902494_eval_expr_kind((*_self_)._field_e, jule::Any(_415928_op.get()._field_left));
	if ((_416617_l == nullptr) || (_416617_l.get()._field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _417117_prefix = (*_self_)._field_e.get()._field_prefix;
	(*_self_)._field_e.get()._field_prefix=_416617_l.get()._field_kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_417117_prefix;
	});
	jule::Ptr<_1a58cee44_Data> _417417_r = _1a5902494_eval_expr_kind((*_self_)._field_e, jule::Any(_415928_op.get()._field_right));
	if ((_417417_r == nullptr) || (_417417_r.get()._field_kind == nullptr)) {
		return nullptr;
	}
	(*_self_)._field_op=_415928_op.get()._field_op;
	jule::Ptr<_1a58cee44_Data> _418117_d = _1a590bcd9_solve_explicit(&(*_self_), _416617_l,_417417_r);
	if (((_418117_d != nullptr) && _416617_l.get()._field_is_rune) && _417417_r.get()._field_is_rune) {
		_418117_d.get()._field_is_rune=true;
	}
	return _418117_d;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5905772_BinaryEval _Src) {
	_Stream << "BinaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5912d12_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0955c2_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0959e0_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa095e0d_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81cce3_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81d640_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "trt:" << _Src._field_trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab81e245_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa03a4e0_is_prim(_1dd58387e_IdentTypeDecl* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, _1dd58387e_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5a7c27_is_self(_1aa096749_ParamDecl* _self_) {
	return _1c47561a8_has_suffix((*_self_)._field_ident,jule::Str("self", 4));
}



inline jule::Bool _1dd5b1ba9_is_ref(_1aa096749_ParamDecl* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1aa096749_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5772ac_is_anon(_1aa096b67_FnDecl* _self_) {
	return ((*_self_)._field_ident == jule::Str("<anonymous>", 11));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa096b67_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab82106b_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline void _1a5927b5c_push_err(_1a5927189_TypeChecker* _self_,_1aa07563a_Token _70827_token,jule::Str _70841_fmt,jule::Slice<jule::Any> _70854_args) {
	_1a5867bac_push_err((*_self_)._field_s.ptr(), _70827_token,_70841_fmt,_70854_args);
}



inline void _1a5927d9e_allow_builtin(_1a5927189_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=false;
}



inline void _1a59280e1_disallow_builtin(_1a5927189_TypeChecker* _self_) {
	(*_self_)._field_dis_builtin=true;
}



inline jule::Ptr<_1a591970e_Prim> _1a5928498_build_prim(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _72030_decl) {
	if ((!(_1a5925aa0_is_prim(_72030_decl.get()._field_ident)))) {
		_1a5927b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((_72030_decl.get()._field_generics.len() > 0LL)) {
		_1a5927b5c_push_err(&(*_self_), _72030_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_72030_decl.get()._field_ident)}));
		return nullptr;
	}
	return _1a59253eb_build_prim_type(_72030_decl.get()._field_ident);
}



inline void _1a5928971_push_cycle_error(_1a5927189_TypeChecker* _self_,jule::Any _73431_def1,jule::Any _73442_def2,jule::Str& _73458_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _73713_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _73729_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _73729_def };
			
			if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
				_case_begin_1a8643963:;
				{
					return _73729_def.operator jule::Ptr<_1a5912d12_TypeAlias>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
				_case_begin_1a864429e:;
				{
					return _73729_def.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_ident;
				}
			}
			else if (_match_expr.type_is<jule::Ptr<_1ac44a337_Enum>>()) {
				_case_begin_1a8644315:;
				{
					return _73729_def.operator jule::Ptr<_1ac44a337_Enum>().get()._field_ident;
				}
			}
			else {
				_case_begin_1a8643b1c:;
				{
					return jule::Str();
				}
			}
			_match_end_1a8643a51:;
		}
	});
	jule::Str _75013_def1_ident = _73713_get_ident(_73431_def1);
	jule::Str _75113_def2_ident = _73713_get_ident(_73442_def2);
	jule::Str _75213_refers_to = _1c4810938_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_75013_def1_ident),jule::Any(_75113_def2_ident)}));
	(_73458_message).buffer.insert(0, (((_1c3ad1c93_repeat(jule::Str(" ", 1),4LL) + _75213_refers_to) + jule::Str("\n", 1))));
}



inline jule::Bool _1a5928e05_check_cross_cycle(_1a5927189_TypeChecker* _self_,jule::Any _75632_decl,jule::Str& _75648_message) {
	{
		auto &_match_expr{ _75632_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
			_case_begin_1a8647736:;
			{
				jule::Ptr<_1a5912d12_TypeAlias> _75917_ta = _75632_decl.operator jule::Ptr<_1a5912d12_TypeAlias>();
				{
					auto &expr = _75917_ta.get()._field_refers;
					auto it = expr.begin();
					_iter_begin_1a864858e:;
					if (it != expr.end()) {
						jule::Any &_1a86485d3_d = *it;
						{
							{
								
								if (_1a86485d3_d == (*_self_)._field_referencer.get()._field_owner) {
									_case_begin_1a8648c98:;
									{
										_1a5928971_push_cycle_error(&(*_self_), jule::Any(_75917_ta),_1a86485d3_d,_75648_message);
										return false;
									}
								}
								else if ((!(_1a5928e05_check_cross_cycle(&(*_self_), _1a86485d3_d,_75648_message)))) {
									_case_begin_1a8648d20:;
									{
										_1a5928971_push_cycle_error(&(*_self_), jule::Any(_75917_ta),_1a86485d3_d,_75648_message);
										return false;
									}
								}
								_match_end_1a8648b88:;
							}
						}
						_iter_next_1a864858e:;
						++it;
						goto _iter_begin_1a864858e;
					}
					_iter_end_1a864858e:;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a864779c:;
			{
				jule::Ptr<_1ab810b3d_Struct> _77117_s = _75632_decl.operator jule::Ptr<_1ab810b3d_Struct>();
				{
					auto &expr = _77117_s.get()._field_depends;
					auto it = expr.begin();
					_iter_begin_1a8648979:;
					if (it != expr.end()) {
						jule::Ptr<_1ab810b3d_Struct> &_1a864b21d_d = *it;
						{
							{
								
								if ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_1a864b21d_d))) {
									_case_begin_1a864b85b:;
									{
										_1a5928971_push_cycle_error(&(*_self_), jule::Any(_77117_s),jule::Any(_1a864b21d_d),_75648_message);
										return false;
									}
								}
								else if ((!(_1a5928e05_check_cross_cycle(&(*_self_), jule::Any(_1a864b21d_d),_75648_message)))) {
									_case_begin_1a864b8d3:;
									{
										_1a5928971_push_cycle_error(&(*_self_), jule::Any(_77117_s),jule::Any(_1a864b21d_d),_75648_message);
										return false;
									}
								}
								_match_end_1a864b74b:;
							}
						}
						_iter_next_1a8648979:;
						++it;
						goto _iter_begin_1a8648979;
					}
					_iter_end_1a8648979:;
				}
			}
		}
		_match_end_1a8647626:;
	}
	return true;
}



inline jule::Bool _1a5929389_check_illegal_cycles(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _79040_ident,jule::Any _79067_decl) {
	jule::Bool _79080_ok = jule::Bool();
	if (((*_self_)._field_referencer == nullptr)) {
		_79080_ok = true;
		return _79080_ok;
	}
	{
		auto &_match_expr{ _79067_decl };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a864e2ed:;
			{
				if ((*_self_)._field_not_plain || _79067_decl.operator jule::Ptr<_1ab810b3d_Struct>().get()._field_cpp_linked) {
					_79080_ok = true;
					return _79080_ok;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
			_case_begin_1a864e364:;
			{
				if (_79067_decl.operator jule::Ptr<_1a5912d12_TypeAlias>().get()._field_cpp_linked) {
					_79080_ok = true;
					return _79080_ok;
				}
			}
		}
		_match_end_1a864e4eb:;
	}
	if (_79067_decl == (*_self_)._field_referencer.get()._field_owner) {
		_1a5927b5c_push_err(&(*_self_), _79040_ident.get()._field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*_self_)._field_referencer.get()._field_ident)}));
		_79080_ok = false;
		return _79080_ok;
	}
	jule::Str _81317_message = jule::Str();
	if ((!(_1a5928e05_check_cross_cycle(&(*_self_), _79067_decl,_81317_message)))) {
		jule::Str _81621_err_msg = _81317_message;
		_81317_message=jule::Str();
		_1a5928971_push_cycle_error(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_79067_decl,_81317_message);
		_81621_err_msg=_81621_err_msg + _81317_message;
		_1a5927b5c_push_err(&(*_self_), _79040_ident.get()._field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_81621_err_msg)}));
		_79080_ok = false;
		return _79080_ok;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1a5912d12_TypeAlias>>()) {
			_case_begin_1a86548a8:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>({_79067_decl}));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a8654952:;
			{
				{
					auto &_match_expr{ _79067_decl };
					
					if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
						_case_begin_1a8655139:;
						{
							jule::Ptr<_1ab810b3d_Struct> _83225_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ab810b3d_Struct>();
							_83225_s.get()._field_depends = jule::alloc_for_append(_83225_s.get()._field_depends,1);_83225_s.get()._field_depends.__push(_79067_decl.operator jule::Ptr<_1ab810b3d_Struct>());
						}
					}
					_match_end_1a86550d4:;
				}
			}
		}
		_match_end_1a8654853:;
	}
	_79080_ok = true;
	return _79080_ok;
}



inline jule::Trait<_1a591395b_Kind> _1a592981d_from_type_alias(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _84035_decl,jule::Ptr<_1a5912d12_TypeAlias>& _84062_ta) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _84062_ta.get()._field_public,_84062_ta.get()._field_token)))) {
		_1a5927b5c_push_err(&(*_self_), _84035_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_84035_decl.get()._field_ident)}));
		return nullptr;
	}
	_84062_ta.get()._field_used=true;
	if ((_84035_decl.get()._field_generics.len() > 0LL)) {
		_1a5927b5c_push_err(&(*_self_), _84035_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_84035_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((!((*_self_)._field_inscatch)) && ((*_self_)._field_banned_generics != nullptr)) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1a865a914:;
			if (it != expr.end()) {
				jule::Ptr<_1a5912d12_TypeAlias> _1a865ae97_bg = *it;
				{
					if ((_1a865ae97_bg == _84062_ta) || ((_84062_ta.get()._field_kind.get()._field_kind != nullptr) && _1a591496d_equals(_84062_ta.get()._field_kind.get()._field_kind, _1a865ae97_bg.get()._field_kind.get()._field_kind))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1a865a914;
					}
				}
				_iter_next_1a865a914:;
				++it;
				goto _iter_begin_1a865a914;
			}
			_iter_end_1a865a914:;
		}
	}
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_banned_generics;
			auto it = expr.begin();
			_iter_begin_1a865ceee:;
			if (it != expr.end()) {
				jule::Ptr<_1a5912d12_TypeAlias> _1a865d32e_bg = *it;
				{
					if (_1a865d32e_bg == _84062_ta) {
						_1a5927b5c_push_err(&(*_self_), _84035_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_84035_decl.get()._field_ident)}));
						return nullptr;
					}
					{
						auto &expr = _84062_ta.get()._field_generics;
						auto it = expr.begin();
						_iter_begin_1a865e8e6:;
						if (it != expr.end()) {
							jule::Ptr<_1a5912d12_TypeAlias> _1a865d928_dg = *it;
							{
								if (_1a865d32e_bg == _1a865d928_dg) {
									_1a5927b5c_push_err(&(*_self_), _84035_decl.get()._field_token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>({jule::Any(_84035_decl.get()._field_ident)}));
									return nullptr;
								}
							}
							_iter_next_1a865e8e6:;
							++it;
							goto _iter_begin_1a865e8e6;
						}
						_iter_end_1a865e8e6:;
					}
				}
				_iter_next_1a865ceee:;
				++it;
				goto _iter_begin_1a865ceee;
			}
			_iter_end_1a865ceee:;
		}
	}
	jule::Bool _88217_ok = _1a5929389_check_illegal_cycles(&(*_self_), _84035_decl,jule::Any(_84062_ta));
	if ((!(_88217_ok))) {
		return nullptr;
	}
	_88217_ok=_1a5871b1c_check_type_alias_decl_kind((*_self_)._field_s, _84062_ta,(*_self_)._field_lookup);
	if ((!(_88217_ok))) {
		return nullptr;
	}
	if (_84062_ta.get()._field_generic && ((*_self_)._field_owner_alias != nullptr)) {
		(*_self_)._field_owner_alias.get()._field_generics = jule::alloc_for_append((*_self_)._field_owner_alias.get()._field_generics,1);(*_self_)._field_owner_alias.get()._field_generics.__push(_84062_ta);
	}
	return jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(((_84062_ta.get()._field_cpp_linked) ? (_84062_ta.get()._field_ident) : (_84062_ta.get()._field_kind.get()._field_kind.get()._field_cpp_ident)),_84062_ta.get()._field_generic,jule::Bool(),_84062_ta.get()._field_kind.get()._field_kind.get()._field_kind)), 4);
}



inline jule::Ptr<_1ac44a337_Enum> _1a5929ca2_from_enum(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _90629_decl,jule::Ptr<_1ac44a337_Enum>& _90656_e) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _90656_e.get()._field_public,_90656_e.get()._field_token)))) {
		_1a5927b5c_push_err(&(*_self_), _90629_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_90629_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_90629_decl.get()._field_generics.len() > 0LL)) {
		_1a5927b5c_push_err(&(*_self_), _90629_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_90629_decl.get()._field_ident)}));
		return nullptr;
	}
	return _90656_e;
}



inline jule::Ptr<_1ac44770d_Trait> _1a592a236_from_trait(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _91830_decl,jule::Ptr<_1ac44770d_Trait>& _91857_t) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _91857_t.get()._field_public,_91857_t.get()._field_token)))) {
		_1a5927b5c_push_err(&(*_self_), _91830_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_91830_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((_91830_decl.get()._field_generics.len() > 0LL)) {
		_1a5927b5c_push_err(&(*_self_), _91830_decl.get()._field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_91830_decl.get()._field_ident)}));
		return nullptr;
	}
	return _91857_t;
}



inline jule::Bool _1a592a6ba_check_struct_ins(_1a5927189_TypeChecker* _self_,jule::Ptr<_1ab814515_StructIns>& _93040_ins,_1aa07563a_Token& _93058_error_token) {
	jule::Bool _93080_ok = jule::Bool();
	if (_93040_ins.get()._field_checked) {
		_93080_ok = true;
		return _93080_ok;
	}
	_93040_ins.get()._field_checked=true;
	if (((*_self_)._field_referencer != nullptr) && ((*_self_)._field_referencer.get()._field_owner == jule::Any(jule::Any(_93040_ins.get()._field_decl)))) {
		_93080_ok = true;
		return _93080_ok;
	}
	jule::Ptr<_1a58c88ee_SymbolTable> _94117_old_file = (*_self_)._field_s.get()._field_file;
	__JULE_DEFER({
		_1a58676d4_set_current_file((*_self_)._field_s.ptr(), _94117_old_file);
	});
	jule::Ptr<_1a58c88ee_SymbolTable> _94417_file = _1ac589d7d_find_file((*_self_)._field_s.get()._field_files,_93040_ins.get()._field_decl.get()._field_token._field_file);
	if ((_94417_file != nullptr)) {
		_1a58676d4_set_current_file((*_self_)._field_s.ptr(), _94417_file);
	}
	jule::Ptr<_1a5926045_Referencer> _94917_referencer = jule::new_ptr<_1a5926045_Referencer>(_1a5926045_Referencer(_93040_ins.get()._field_decl.get()._field_ident,jule::Any(jule::Any(_93040_ins.get()._field_decl)),nullptr));
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _95417_generics = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_93040_ins.get()._field_generics.len()));
	{
		auto &expr = _93040_ins.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a86707e7:;
		if (it != expr.end()) {
			jule::I64 _1a8670de1_i = it - expr.begin();
			jule::Ptr<_1a5913e9a_TypeKind> _1a8671023_g = *it;
			{
				_95417_generics = jule::alloc_for_append(_95417_generics,1);_95417_generics.__push(jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_1aa07563a_Token(),_93040_ins.get()._field_decl.get()._field_generics[_1a8670de1_i].get()._field_ident,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_1a8671023_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>())));
			}
			_iter_next_1a86707e7:;
			++it;
			_1a8670de1_i++;
			goto _iter_begin_1a86707e7;
		}
		_iter_end_1a86707e7:;
	}
	jule::Ptr<_1a58c88ee_SymbolTable> _96417_old_sema_file = _93040_ins.get()._field_decl.get()._field_sema.get()._field_file;
	__JULE_DEFER({
		_1a58676d4_set_current_file(_93040_ins.get()._field_decl.get()._field_sema.ptr(), _96417_old_sema_file);
	});
	_1a5927189_TypeChecker _96917_tc = _1a5927189_TypeChecker(_93040_ins.get()._field_decl.get()._field_sema,jule::Trait<_1a5932ea8_Lookup>(_93040_ins.get()._field_decl.get()._field_sema, 3),_94917_referencer,_1aa07563a_Token(),jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>(),_95417_generics,jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5912d12_TypeAlias>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>(),jule::Bool());
	{
		auto &expr = _93040_ins.get()._field_fields;
		auto it = expr.begin();
		_iter_begin_1a8673179:;
		if (it != expr.end()) {
			jule::Ptr<_1ab8137bc_FieldIns> _1a8673b19_field = *it;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _97821_kind = _1a5930082_check_decl(&_96917_tc, _1a8673b19_field.get()._field_decl.get()._field_kind.get()._field_decl);
				_93080_ok=(_97821_kind != nullptr);
				if (((_93040_ins.get()._field_decl.get()._field_sema != nullptr) && ((*_self_)._field_s != _93040_ins.get()._field_decl.get()._field_sema)) && (_93040_ins.get()._field_decl.get()._field_sema.get()._field_errors.len() > 0LL)) {
					(*_self_)._field_s.get()._field_errors=jule::append((*_self_)._field_s.get()._field_errors,_93040_ins.get()._field_decl.get()._field_sema.get()._field_errors);
					_93040_ins.get()._field_decl.get()._field_sema.get()._field_errors=nullptr;
				}
				if ((!(_93080_ok))) {
					_93080_ok = false;
					return _93080_ok;
				}
				_1a8673b19_field.get()._field_kind=_97821_kind;
				if ((!(_1a8673b19_field.get()._field_decl.get()._field_mutable)) && _1a5915809_mutable(_1a8673b19_field.get()._field_kind.ptr())) {
					_93040_ins.get()._field_mutable=true;
					_1a587a8b2_check_struct_ins_derive_clone((*_self_)._field_s.ptr(), _93040_ins);
				}
			}
			_iter_next_1a8673179:;
			++it;
			goto _iter_begin_1a8673179;
		}
		_iter_end_1a8673179:;
	}
	if ((_93040_ins.get()._field_generics.len() > 0LL)) {
		_1a587e289_check_struct_ins_operators((*_self_)._field_s, _93040_ins);
		_1a587d8b5_check_struct_ins((*_self_)._field_s, _93040_ins);
	}
	_93080_ok = true;
	return _93080_ok;
}



inline void _1a592aa2d_append_used_struct_reference(_1a5927189_TypeChecker* _self_,jule::Ptr<_1ab810b3d_Struct>& _100552_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;
	}
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type_is<jule::Ptr<_1ab810b3d_Struct>>()) {
			_case_begin_1a867ad1e:;
			{
				jule::Ptr<_1ab810b3d_Struct> _101221_ref_s = (*_self_)._field_referencer.get()._field_owner.operator jule::Ptr<_1ab810b3d_Struct>();
				if ((!(_1ab812e92_is_uses(_101221_ref_s.ptr(), _100552_s)))) {
					_101221_ref_s.get()._field_uses = jule::alloc_for_append(_101221_ref_s.get()._field_uses,1);_101221_ref_s.get()._field_uses.__push(_100552_s);
				}
			}
		}
		_match_end_1a867acb9:;
	}
}



inline jule::Ptr<_1ab814515_StructIns> _1a592aea1_build_struct_instance(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _101945_decl,jule::Ptr<_1ab810b3d_Struct>& _101972_s) {
	jule::Ptr<_1a5926045_Referencer> _102117_referencer = (*_self_)._field_referencer;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _102317_banned_generics = (*_self_)._field_banned_generics;
	if (((*_self_)._field_banned_generics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1ac565bd3_ScopeChecker>>()) {
				_case_begin_1a867e2c8:;
				{
					jule::Ptr<_1ac565bd3_ScopeChecker> _103025_sc = (*_self_)._field_lookup.operator jule::Ptr<_1ac565bd3_ScopeChecker>();
					jule::Ptr<_1ac565bd3_ScopeChecker> _103125_hard = _1ac5683de_get_hard_root(_103025_sc);
					if ((_103125_hard.get()._field_owner.get()._field_owner == nullptr) || (_103125_hard.get()._field_owner.get()._field_owner.get()._field_decl != _101972_s)) {
						goto _match_end_1a867e086;
					}
					jule::I64 _103521_n = _103125_hard.get()._field_owner.get()._field_generics.len() + static_cast<jule::I64>(static_cast<jule::I64>(_103125_hard.get()._field_owner.get()._field_owner.get()._field_generics.len()));
					(*_self_)._field_banned_generics=_103125_hard.get()._field_table.get()._field_type_aliases.slice(0LL,_103521_n);
				}
			}
			_match_end_1a867e086:;
		}
	} else {
		(*_self_)._field_inscatch=true;
	}
	jule::Ptr<_1ab814515_StructIns> _104517_ins = _1ab8112d1_instance(_101972_s);
	_104517_ins.get()._field_generics=jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_101945_decl.get()._field_generics.len()));
	{
		auto &expr = _101945_decl.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1a8683233:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583461_TypeDecl> _1a8683871_g = *it;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _104821_kind = _1a592ebca_build(&(*_self_), _1a8683871_g.get()._field_kind);
				if ((_104821_kind == nullptr)) {
					return nullptr;
				}
				_104517_ins.get()._field_generics = jule::alloc_for_append(_104517_ins.get()._field_generics,1);_104517_ins.get()._field_generics.__push(_104821_kind);
			}
			_iter_next_1a8683233:;
			++it;
			goto _iter_begin_1a8683233;
		}
		_iter_end_1a8683233:;
	}
	(*_self_)._field_banned_generics=_102317_banned_generics;
	(*_self_)._field_referencer=_102117_referencer;
	return _104517_ins;
}



inline jule::Ptr<_1ab814515_StructIns> _1a592b435_from_struct(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl>& _106235_decl,jule::Ptr<_1ab810b3d_Struct>& _106262_s) {
	if ((!(_1a586853c_is_accessible_define((*_self_)._field_s.ptr(), _106262_s.get()._field_public,_106262_s.get()._field_token)))) {
		_1a5927b5c_push_err(&(*_self_), _106235_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_106235_decl.get()._field_ident)}));
		return nullptr;
	}
	if ((*_self_)._field_selection) {
		if ((_106235_decl.get()._field_generics.len() > 0LL)) {
			_1a5927b5c_push_err(&(*_self_), _106235_decl.get()._field_token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;
		}
		return jule::new_ptr<_1ab814515_StructIns>(_1ab814515_StructIns(jule::Bool(),_106262_s,jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab8137bc_FieldIns>>(),jule::Slice<jule::Ptr<_1ab832324_Fn>>(),jule::Bool(),jule::Ptr<_1ab839d43_ReferenceStack>(),_1ab80e8b7_Operators()));
	}
	if ((_106262_s.get()._field_generics.len() > 0LL) && ((*_self_)._field_ignore_generics.len() > 0LL)) {
		return nullptr;
	}
	jule::Bool _108517_ok = (*_self_)._field_not_plain || _1a5929389_check_illegal_cycles(&(*_self_), _106235_decl,jule::Any(_106262_s));
	if ((!(_108517_ok))) {
		return nullptr;
	}
	_1a592aa2d_append_used_struct_reference(&(*_self_), _106262_s);
	jule::Ptr<_1ab814515_StructIns> _109117_ins = _1a592aea1_build_struct_instance(&(*_self_), _106235_decl,_106262_s);
	if ((_109117_ins == nullptr)) {
		return nullptr;
	}
	_108517_ok=_1a586950a_check_generic_quantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_109117_ins.get()._field_decl.get()._field_generics.len()),static_cast<jule::I64>(_109117_ins.get()._field_generics.len()),_106235_decl.get()._field_token);
	if ((!(_108517_ok))) {
		return nullptr;
	}
	jule::Ptr<_1ab814515_StructIns> _110117_exist_instance = _1ab811688_append_instance(_106262_s.ptr(), _109117_ins);
	if ((_110117_exist_instance != nullptr)) {
		return _110117_exist_instance;
	}
	_108517_ok=_1a592a6ba_check_struct_ins(&(*_self_), _109117_ins,_106235_decl.get()._field_token);
	if ((!(_108517_ok))) {
		return nullptr;
	}
	return _109117_ins;
}



inline jule::Trait<_1a591395b_Kind> _1a592b8b9_get_def(_1a5927189_TypeChecker* _self_,jule::Trait<_1a5932ea8_Lookup> _112326_l,jule::Ptr<_1dd58387e_IdentTypeDecl>& _112342_decl) {
	{
		auto &expr = (*_self_)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_1a86903b6:;
		if (it != expr.end()) {
			jule::Ptr<_1aa094868_GenericDecl> _1a86904c6_g = *it;
			{
				if (_1a86904c6_g.get()._field_ident == _112342_decl.get()._field_ident) {
					return jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(_1a86904c6_g.get()._field_ident), 5);
				}
			}
			_iter_next_1a86903b6:;
			++it;
			goto _iter_begin_1a86903b6;
		}
		_iter_end_1a86903b6:;
	}
	{
		auto &expr = (*_self_)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_1a8690b25:;
		if (it != expr.end()) {
			jule::Ptr<_1a5912d12_TypeAlias> _1a869073a_g = *it;
			{
				if (_1a869073a_g.get()._field_ident == _112342_decl.get()._field_ident) {
					jule::Ptr<_1ab814515_StructIns> _113225_st = _1a5917c29_strct(_1a869073a_g.get()._field_kind.get()._field_kind.ptr());
					if ((_113225_st != nullptr)) {
						jule::Bool _113425_ok = _1a5929389_check_illegal_cycles(&(*_self_), _112342_decl,jule::Any(_113225_st.get()._field_decl));
						if ((!(_113425_ok))) {
							return nullptr;
						}
					}
					return _1a869073a_g.get()._field_kind.get()._field_kind.get()._field_kind;
				}
			}
			_iter_next_1a8690b25:;
			++it;
			goto _iter_begin_1a8690b25;
		}
		_iter_end_1a8690b25:;
	}
	if ((!(_112342_decl.get()._field_cpp_linked))) {
		jule::Ptr<_1ac44a337_Enum> _114421_e = _1a5932ea8_Lookup_mptr_data[(_112326_l).type_offset]._1a5932d32_find_enum(_112326_l, _112342_decl.get()._field_ident);
		if ((_114421_e != nullptr)) {
			return jule::Trait<_1a591395b_Kind>(_1a5929ca2_from_enum(&(*_self_), _112342_decl,_114421_e), 3);
		}
		jule::Ptr<_1ac44770d_Trait> _114921_t = _1a5932ea8_Lookup_mptr_data[(_112326_l).type_offset]._1a593297a_find_trait(_112326_l, _112342_decl.get()._field_ident);
		if ((_114921_t == nullptr) && (!((*_self_)._field_dis_builtin))) {
			_114921_t=_1a598764a_find_builtin_trait(_112342_decl.get()._field_ident);
		}
		if ((_114921_t != nullptr)) {
			return jule::Trait<_1a591395b_Kind>(_1a592a236_from_trait(&(*_self_), _112342_decl,_114921_t), 2);
		}
	} else if ((*_self_)._field_selection) {
		_1a5927b5c_push_err(&(*_self_), _112342_decl.get()._field_token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab810b3d_Struct> _116117_s = _1a5932ea8_Lookup_mptr_data[(_112326_l).type_offset]._1a593213e_find_struct(_112326_l, _112342_decl.get()._field_ident,_112342_decl.get()._field_cpp_linked);
	if ((_116117_s != nullptr)) {
		return jule::Trait<_1a591395b_Kind>(_1a592b435_from_struct(&(*_self_), _112342_decl,_116117_s), 0);
	}
	jule::Ptr<_1a5912d12_TypeAlias> _116617_ta = _1a5932ea8_Lookup_mptr_data[(_112326_l).type_offset]._1a5931baa_find_type_alias(_112326_l, _112342_decl.get()._field_ident,_112342_decl.get()._field_cpp_linked);
	if ((_116617_ta == nullptr) && (!((*_self_)._field_dis_builtin))) {
		_116617_ta=_1a595be9e_find_builtin_type_alias(_112342_decl.get()._field_ident);
	}
	if ((_116617_ta != nullptr)) {
		return _1a592981d_from_type_alias(&(*_self_), _112342_decl,_116617_ta);
	}
	_1a5927b5c_push_err(&(*_self_), _112342_decl.get()._field_token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>({jule::Any(_112342_decl.get()._field_ident)}));
	return nullptr;
}



inline jule::Trait<_1a591395b_Kind> _1a592bc71_build_ident(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd58387e_IdentTypeDecl> _117834_decl) {
	{
		
		if (_1a5925aa0_is_prim(_117834_decl.get()._field_ident)) {
			_case_begin_1a869c0a4:;
			{
				return jule::Trait<_1a591395b_Kind>(_1a5928498_build_prim(&(*_self_), _117834_decl), 5);
			}
		}
		else {
			_case_begin_1a869b999:;
			{
				return _1a592b8b9_get_def(&(*_self_), (*_self_)._field_lookup,_117834_decl);
			}
		}
		_match_end_1a869b900:;
	}
}



inline jule::Ptr<_1a591d768_Sptr> _1a592c128_build_sptr_from_type(_1a5927189_TypeChecker* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _118744_elem) {
	{
		
		if ((_118744_elem == nullptr)) {
			_case_begin_1a869d32a:;
			{
				return nullptr;
			}
		}
		else if ((_1a5917c29_strct(_118744_elem.ptr()) != nullptr)) {
			_case_begin_1a869d3a2:;
			{
				jule::Ptr<_1ab814515_StructIns> _119317_s = _1a5917c29_strct(_118744_elem.ptr());
				if ((_119317_s.get()._field_decl != nullptr) && _119317_s.get()._field_decl.get()._field_cpp_linked) {
					_1a5927b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;
				}
			}
		}
		else if ((_1a5917399_arr(_118744_elem.ptr()) != nullptr) && _1a5917399_arr(_118744_elem.ptr()).get()._field_auto) {
			_case_begin_1a869d429:;
			{
				_1a5927b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a869cc0e:;
	}
	return jule::new_ptr<_1a591d768_Sptr>(_1a591d768_Sptr(_118744_elem));
}



inline jule::Ptr<_1a591d768_Sptr> _1a592c4d0_build_sptr(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08b453_SptrTypeDecl> _120733_decl) {
	jule::Bool _120813_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_120813_not_plain;
	});
	jule::Ptr<_1a5913e9a_TypeKind> _121217_elem = _1a5930082_check_decl(&(*_self_), _120733_decl.get()._field_elem);
	return _1a592c128_build_sptr_from_type(&(*_self_), _121217_elem);
}



inline jule::Ptr<_1a59230db_Ptr> _1a592c887_build_ptr_from_type(_1a5927189_TypeChecker* _self_,jule::Ptr<_1a5913e9a_TypeKind>& _121643_elem) {
	{
		
		if ((_121643_elem == nullptr)) {
			_case_begin_1a86a4452:;
			{
				return nullptr;
			}
		}
		else if ((_1a5917399_arr(_121643_elem.ptr()) != nullptr) && _1a5917399_arr(_121643_elem.ptr()).get()._field_auto) {
			_case_begin_1a86a44c9:;
			{
				_1a5927b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1a59230db_Ptr>();
			}
		}
		_match_end_1a86a4364:;
	}
	return jule::new_ptr<_1a59230db_Ptr>(_1a59230db_Ptr(_121643_elem));
}



inline jule::Ptr<_1a59230db_Ptr> _1a592cc3e_build_ptr(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08c1ac_PtrTypeDecl> _123232_decl) {
	jule::Bool _123313_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_123313_not_plain;
	});
	jule::Ptr<_1a5913e9a_TypeKind> _123717_elem = nullptr;
	if ((!(_1aa051bbb_is_unsafe(_123232_decl.ptr())))) {
		_123717_elem=_1a5930082_check_decl(&(*_self_), _123232_decl.get()._field_elem);
		return _1a592c887_build_ptr_from_type(&(*_self_), _123717_elem);
	}
	return jule::new_ptr<_1a59230db_Ptr>(_1a59230db_Ptr(_123717_elem));
}



inline jule::Ptr<_1a591e549_Slc> _1a592d0e6_build_slc(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08b871_SlcTypeDecl> _124932_decl) {
	jule::Bool _125013_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_125013_not_plain;
	});
	jule::Ptr<_1a5913e9a_TypeKind> _125417_elem = _1a5930082_check_decl(&(*_self_), _124932_decl.get()._field_elem);
	{
		
		if ((_125417_elem == nullptr)) {
			_case_begin_1a86aaa63:;
			{
				return nullptr;
			}
		}
		else if ((_1a5917399_arr(_125417_elem.ptr()) != nullptr) && _1a5917399_arr(_125417_elem.ptr()).get()._field_auto) {
			_case_begin_1a86aaada:;
			{
				_1a5927b5c_push_err(&(*_self_), _124932_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a86aaa0d:;
	}
	return jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(_125417_elem));
}



inline jule::Ptr<_1a592230a_Arr> _1a592d49d_build_arr(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08c5ca_ArrTypeDecl> _127132_decl) {
	jule::Bool _127213_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_127213_not_plain;
	});
	jule::I64 _127617_n = 0LL;
	if ((!(_1aa054361_auto_sized(_127132_decl.ptr())))) {
		jule::Ptr<_1a58cee44_Data> _127921_size = _1a5902c03_eval_expr(_1a586dab4_eval((*_self_)._field_s, (*_self_)._field_lookup), _127132_decl.get()._field_size);
		if ((_127921_size == nullptr)) {
			return nullptr;
		}
		if ((!(_1a58d0b48_is_const(_127921_size.ptr())))) {
			_1a5927b5c_push_err(&(*_self_), _127132_decl.get()._field_size.get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1a591673e_prim(_127921_size.get()._field_kind.ptr()) == nullptr) || (!(_1ac55e1c6_is_int(_1a591673e_prim(_127921_size.get()._field_kind.ptr()).get()._field_kind)))) {
			_1a5927b5c_push_err(&(*_self_), _127132_decl.get()._field_size.get()._field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;
		}
		_127617_n=static_cast<jule::I64>(static_cast<jule::I64>(_1ac4d369a_as_i64(_127921_size.get()._field_constant.ptr())));
		if ((_127617_n < 0LL)) {
			_1a5927b5c_push_err(&(*_self_), _127132_decl.get()._field_elem.get()._field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;
		} else if ((_1ac5523c8_BIT_SIZE != 64LL) && (static_cast<jule::F64>(_127617_n) > static_cast<jule::F64>(static_cast<jule::F64>(_1ac557d4b_max(jule::Str("int", 3)))))) {
			_1a5927b5c_push_err(&(*_self_), _127132_decl.get()._field_size.get()._field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;
		}
	}
	jule::Ptr<_1a5913e9a_TypeKind> _130217_elem = _1a5930082_check_decl(&(*_self_), _127132_decl.get()._field_elem);
	{
		
		if ((_130217_elem == nullptr)) {
			_case_begin_1a86b682c:;
			{
				return nullptr;
			}
		}
		else if ((_1a5917399_arr(_130217_elem.ptr()) != nullptr) && _1a5917399_arr(_130217_elem.ptr()).get()._field_auto) {
			_case_begin_1a86b6893:;
			{
				_1a5927b5c_push_err(&(*_self_), _127132_decl.get()._field_elem.get()._field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a86b66a6:;
	}
	return jule::new_ptr<_1a592230a_Arr>(_1a592230a_Arr(_1aa054361_auto_sized(_127132_decl.ptr()),_127617_n,_130217_elem));
}



inline jule::Ptr<_1a592132b_Map> _1a592d855_build_map(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08c9e8_MapTypeDecl> _132032_decl) {
	jule::Bool _132113_not_plain = (*_self_)._field_not_plain;
	(*_self_)._field_not_plain=true;
	__JULE_DEFER({
		(*_self_)._field_not_plain=_132113_not_plain;
	});
	jule::Ptr<_1a5913e9a_TypeKind> _132517_key = _1a5930082_check_decl(&(*_self_), _132032_decl.get()._field_key);
	if ((_132517_key == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _133017_val = _1a5930082_check_decl(&(*_self_), _132032_decl.get()._field_val);
	if ((_133017_val == nullptr)) {
		return nullptr;
	}
	if ((_1a59170be_enm(_133017_val.ptr()) != nullptr)) {
		_1a5927b5c_push_err(&(*_self_), _132032_decl.get()._field_val.get()._field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	}
	return jule::new_ptr<_1a592132b_Map>(_1a592132b_Map(_132517_key,_133017_val));
}



inline jule::Ptr<_1a59203b3_Tuple> _1a592dc0c_build_tuple(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa08bc8e_TupleTypeDecl> _134434_decl) {
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _134517_types = jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_134434_decl.get()._field_types.len()));
	{
		auto &expr = _134434_decl.get()._field_types;
		auto it = expr.begin();
		_iter_begin_1a86bd702:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583461_TypeDecl> _1a86bdc30_t = *it;
			{
				jule::Ptr<_1a5913e9a_TypeKind> _134721_kind = _1a5930082_check_decl(&(*_self_), _1a86bdc30_t);
				if ((_134721_kind == nullptr)) {
					return nullptr;
				}
				_134517_types = jule::alloc_for_append(_134517_types,1);_134517_types.__push(_134721_kind);
			}
			_iter_next_1a86bd702:;
			++it;
			goto _iter_begin_1a86bd702;
		}
		_iter_end_1a86bd702:;
	}
	return jule::new_ptr<_1a59203b3_Tuple>(_1a59203b3_Tuple(_134517_types));
}



inline jule::Bool _1a592e0b4_check_fn_types(_1a5927189_TypeChecker* _self_,jule::Ptr<_1ab836218_FnIns>& _135738_f) {
	jule::Bool _135751_ok = jule::Bool();
	{
		auto &expr = _135738_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a86c0d0e:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a86c0dca_p = *it;
			{
				_1a86c0dca_p.get()._field_kind=_1a592ebca_build(&(*_self_), _1a86c0dca_p.get()._field_decl.get()._field_kind.get()._field_decl.get()._field_kind);
				_135751_ok=(_1a86c0dca_p.get()._field_kind != nullptr);
				if ((!(_135751_ok))) {
					_135751_ok = false;
					return _135751_ok;
				}
			}
			_iter_next_1a86c0d0e:;
			++it;
			goto _iter_begin_1a86c0d0e;
		}
		_iter_end_1a86c0d0e:;
	}
	if ((!(_1ab8329d9_is_void(_135738_f.get()._field_decl.ptr())))) {
		_135738_f.get()._field_result=_1a592ebca_build(&(*_self_), _135738_f.get()._field_decl.get()._field_result.get()._field_kind.get()._field_decl.get()._field_kind);
		_135751_ok = (_135738_f.get()._field_result != nullptr);
		return _135751_ok;
	}
	_135751_ok = true;
	return _135751_ok;
}



inline jule::Ptr<_1ab836218_FnIns> _1a592e46b_build_fn(_1a5927189_TypeChecker* _self_,jule::Ptr<_1aa096b67_FnDecl> _137431_decl) {
	if ((_137431_decl.get()._field_generics.len() > 0LL)) {
		_1a5927b5c_push_err(&(*_self_), _137431_decl.get()._field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab832324_Fn> _138017_f = _1ab83dad3_build_fn(_137431_decl);
	jule::Ptr<_1ab836218_FnIns> _138117_ins = _1ab8342d2_instance_force(_138017_f);
	_138117_ins.get()._field_anon=true;
	jule::Bool _138413_ok = _1a592e0b4_check_fn_types(&(*_self_), _138117_ins);
	if ((!(_138413_ok))) {
		return nullptr;
	}
	return _138117_ins;
}



inline jule::Trait<_1a591395b_Kind> _1a592e823_build_by_namespace(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd583c9c_NamespaceTypeDecl> _139241_decl) {
	jule::Str _139313_path = _1a59250ee_build_link_path_by_tokens(_139241_decl.get()._field_idents);
	jule::Ptr<_1ac580d41_ImportInfo> _139417_imp = _1a5932ea8_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1a5931292_select_package((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1ac580d41_ImportInfo>)>([=](jule::Ptr<_1ac580d41_ImportInfo> _139453_imp) mutable -> jule::Bool {
		if ((_139241_decl.get()._field_idents.len() == 1LL) && (_139453_imp.get()._field_alias == _139313_path)) {
			return true;
		}
		return (_139453_imp.get()._field_link_path == _139313_path) && _1ac5841c9_is_accessible_via_selection(_139453_imp.ptr());
	}));
	if ((_139417_imp == nullptr) || (!(_1ac583a03_is_lookupable(_139417_imp.ptr(), jule::Str("self", 4))))) {
		_1a5927b5c_push_err(&(*_self_), _139241_decl.get()._field_idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>({jule::Any(_139313_path)}));
		return nullptr;
	}
	_1a59280e1_disallow_builtin(&(*_self_));
	jule::Trait<_1a591395b_Kind> _140717_kind = _1a592b8b9_get_def(&(*_self_), jule::Trait<_1a5932ea8_Lookup>(_139417_imp, 1),_139241_decl.get()._field_kind);
	_1a5927d9e_allow_builtin(&(*_self_));
	return _140717_kind;
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a592ebca_build(_1a5927189_TypeChecker* _self_,jule::Any& _141329_decl_kind) {
	jule::Trait<_1a591395b_Kind> _141417_kind = nullptr;
	{
		auto &_match_expr{ _141329_decl_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5913e9a_TypeKind>>()) {
			_case_begin_1a86cd239:;
			{
				_141417_kind=jule::Trait<_1a591395b_Kind>(_141329_decl_kind.operator jule::Ptr<_1a5913e9a_TypeKind>(), 4);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd58387e_IdentTypeDecl>>()) {
			_case_begin_1a86cd2a0:;
			{
				jule::Trait<_1a591395b_Kind> _141921_t = _1a592bc71_build_ident(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1dd58387e_IdentTypeDecl>());
				if ((_141921_t != nullptr)) {
					_141417_kind=_141921_t;
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08b453_SptrTypeDecl>>()) {
			_case_begin_1a86cd316:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a591d768_Sptr> _142521_t = _1a592c4d0_build_sptr(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08b453_SptrTypeDecl>());
				if ((_142521_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_142521_t, 6);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08c1ac_PtrTypeDecl>>()) {
			_case_begin_1a86cd37c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a59230db_Ptr> _143121_t = _1a592cc3e_build_ptr(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08c1ac_PtrTypeDecl>());
				if ((_143121_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_143121_t, 11);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08b871_SlcTypeDecl>>()) {
			_case_begin_1a86cdd61:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a591e549_Slc> _143721_t = _1a592d0e6_build_slc(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08b871_SlcTypeDecl>());
				if ((_143721_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_143721_t, 7);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08c5ca_ArrTypeDecl>>()) {
			_case_begin_1a86cddc7:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a592230a_Arr> _144321_t = _1a592d49d_build_arr(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08c5ca_ArrTypeDecl>());
				if ((_144321_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_144321_t, 10);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08c9e8_MapTypeDecl>>()) {
			_case_begin_1a86cde3d:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a592132b_Map> _144921_t = _1a592d855_build_map(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08c9e8_MapTypeDecl>());
				if ((_144921_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_144921_t, 9);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa08bc8e_TupleTypeDecl>>()) {
			_case_begin_1a86cdea4:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1a59203b3_Tuple> _145521_t = _1a592dc0c_build_tuple(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa08bc8e_TupleTypeDecl>());
				if ((_145521_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_145521_t, 8);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa096b67_FnDecl>>()) {
			_case_begin_1a86ce180:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1ab836218_FnIns> _146121_t = _1a592e46b_build_fn(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1aa096b67_FnDecl>());
				if ((_146121_t != nullptr)) {
					_141417_kind=jule::Trait<_1a591395b_Kind>(_146121_t, 1);
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1dd583c9c_NamespaceTypeDecl>>()) {
			_case_begin_1a86ce1e6:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1a591395b_Kind> _146721_t = _1a592e823_build_by_namespace(&(*_self_), _141329_decl_kind.operator jule::Ptr<_1dd583c9c_NamespaceTypeDecl>());
				if ((_146721_t != nullptr)) {
					_141417_kind=_146721_t;
				}
			}
		}
		else {
			_case_begin_1a86cd0d5:;
			{
				_1a5927b5c_push_err(&(*_self_), (*_self_)._field_error_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;
			}
		}
		_match_end_1a86cd019:;
	}
	if ((_141417_kind == nullptr)) {
		return nullptr;
	}
	{
		auto &_match_expr{ _141417_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a5913e9a_TypeKind>>()) {
			_case_begin_1a86db324:;
			{
				return _141417_kind.operator jule::Ptr<_1a5913e9a_TypeKind>();
			}
		}
		else {
			_case_begin_1a86da554:;
			{
				return jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_141417_kind));
			}
		}
		_match_end_1a86d7d26:;
	}
}



inline jule::Ptr<_1a5913e9a_TypeKind> _1a5930082_check_decl(_1a5927189_TypeChecker* _self_,jule::Ptr<_1dd583461_TypeDecl>& _148834_decl) {
	_1aa07563a_Token _149017_error_token = (*_self_)._field_error_token;
	(*_self_)._field_error_token=_148834_decl.get()._field_token;
	jule::Ptr<_1a5913e9a_TypeKind> _149317_kind = _1a592ebca_build(&(*_self_), _148834_decl.get()._field_kind);
	(*_self_)._field_error_token=_149017_error_token;
	return _149317_kind;
}



inline void _1a59303a1_check(_1a5927189_TypeChecker* _self_,jule::Ptr<_1a5918a0a_TypeSymbol>& _149929_t) {
	if ((_149929_t.get()._field_decl == nullptr)) {
		return;
	}
	jule::Ptr<_1a5913e9a_TypeKind> _150317_kind = _1a5930082_check_decl(&(*_self_), _149929_t.get()._field_decl);
	if ((_150317_kind == nullptr)) {
		_1a59193ac_remove_kind(_149929_t.ptr());
		return;
	}
	_149929_t.get()._field_kind=_150317_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5927189_TypeChecker _Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain << ", ";
	_Stream << "dis_builtin:" << _Src._field_dis_builtin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "owner_alias:" << _Src._field_owner_alias << ", ";
	_Stream << "banned_generics:" << _Src._field_banned_generics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa097085_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0974a3_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa004377_is_inf(_1aa0978c1_Iter* _self_) {
	return (*_self_)._field_kind == jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa0978c1_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::Ptr<_1a59a1895_IR>,jule::Slice<_1c4810251_Log>> static__1a59a20c1_build(jule::Str _2825_path,jule::I64 _2836_flags) {
	jule::Ptr<_1a599d551_JuleImporter> _2917_importer = static__1a599dbe4_new(_1a59a3666_build_compile_info());
	jule::Slice<jule::Ptr<_1dd582707_Ast>> _3018_files;
	jule::Slice<_1c4810251_Log> _3029_logs;
	std::tie(_3018_files,_3029_logs) = _1a59a03ee_import_package(_2917_importer.ptr(), _2825_path,true);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Str _3413_root = _2825_path;
	if ((_3018_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1ac58451a_Package> _4018_pkg;
	std::tie(_4018_pkg,_3029_logs) = _1a5934817_analyze_package(_3018_files,jule::Trait<_1ac57d25b_Importer>(_2917_importer, 0),_2836_flags);
	if ((_3029_logs.len() > 0LL)) {
		return std::make_tuple(nullptr,_3029_logs);
	}
	jule::Ptr<_1a59a1895_IR> _4517_ir = jule::new_ptr<_1a59a1895_IR>(_1a59a1895_IR(_3413_root,jule::Slice<jule::Str>(),_4018_pkg,_1a599debe_all_packages(_2917_importer.ptr()),_1a59a3e6e_OrderedDefines()));
	_4517_ir.get()._field_passes=_1a59a3435_get_all_unique_passes(_4517_ir.get()._field_main,_4517_ir.get()._field_used);
	return std::make_tuple(_4517_ir,nullptr);
}



inline void _1a59a25cc_append_structs(_1a59a1895_IR* _self_,jule::Ptr<_1ac58451a_Package>& _5734_p,jule::Slice<jule::Ptr<_1ab810b3d_Struct>>& _5758_buffer) {
	{
		auto &expr = _5734_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1dd515987:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1dd511961_f = *it;
			{
				{
					auto &expr = _1dd511961_f.get()._field_structs;
					auto it = expr.begin();
					_iter_begin_1dd526aca:;
					if (it != expr.end()) {
						jule::Ptr<_1ab810b3d_Struct> _1dd5135de_s = *it;
						{
							if ((!(_1dd5135de_s.get()._field_cpp_linked))) {
								_5758_buffer = jule::alloc_for_append(_5758_buffer,1);_5758_buffer.__push(_1dd5135de_s);
							}
						}
						_iter_next_1dd526aca:;
						++it;
						goto _iter_begin_1dd526aca;
					}
					_iter_end_1dd526aca:;
				}
			}
			_iter_next_1dd515987:;
			++it;
			goto _iter_begin_1dd515987;
		}
		_iter_end_1dd515987:;
	}
}



inline jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _1a59a28a7_get_all_structures(_1a59a1895_IR* _self_) {
	jule::Slice<jule::Ptr<_1ab810b3d_Struct>> _7017_buffer = nullptr;
	_1a59a25cc_append_structs(&(*_self_), (*_self_)._field_main,_7017_buffer);
	{
		auto &expr = (*_self_)._field_used;
		auto it = expr.begin();
		_iter_begin_1aa0e27b7:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1dd51d929_u = *it;
			{
				if ((!(_1dd51d929_u.get()._field_cpp_linked))) {
					_1a59a25cc_append_structs(&(*_self_), _1dd51d929_u.get()._field_package,_7017_buffer);
				}
			}
			_iter_next_1aa0e27b7:;
			++it;
			goto _iter_begin_1aa0e27b7;
		}
		_iter_end_1aa0e27b7:;
	}
	return _7017_buffer;
}



inline void _1a59a2ae9_order(_1a59a1895_IR* _self_) {
	(*_self_)._field_ordered._field_structs=_1a59a28a7_get_all_structures(&(*_self_));
	static__1a59a514b_order_structures((*_self_)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, _1a59a1895_IR _Src) {
	_Stream << "IR{";
	_Stream << "root:" << _Src._field_root << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1dd5b0c96_is_while_next(_1aa097cde_WhileKind* _self_) {
	return (*_self_)._field_next != jule::Any(jule::Any(nullptr));
}







std::ostream &operator<<(std::ostream &_Stream, _1aa097cde_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09820c_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab823887_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab828ea8_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "log:" << _Src._field_log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09862a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa098a48_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa098e66_If _Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09942d_Else _Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a632106b_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08d334_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "range:" << _Src._field_range << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09a330_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09a93a_Case _Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09b188_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09ba29_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa09c783_auto_expr(_1aa09c134_EnumItemDecl* _self_) {
	return ((*_self_)._field_expr == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09c134_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aa09d09c_default_typed(_1aa09cb7e_EnumDecl* _self_) {
	return ((*_self_)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09cb7e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab834db5_ParamIns> _1ab83092c_instance(jule::Ptr<_1ab830300_Param> _self_) {
	return jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(_self_,jule::Ptr<_1a5913e9a_TypeKind>()));
}



inline jule::Bool _1ab830c07_is_self(_1ab830300_Param* _self_) {
	return ((*_self_)._field_ident == jule::Str("&self", 5)) || ((*_self_)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _1ab830ed2_is_ref(_1ab830300_Param* _self_) {
	return (!((*_self_)._field_ident.empty())) && ((*_self_)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, _1ab830300_Param _Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab8329d9_is_void(_1ab832324_Fn* _self_) {
	return ((*_self_)._field_result == nullptr);
}



inline jule::Bool _1ab832cb4_is_method(_1ab832324_Fn* _self_) {
	return ((*_self_)._field_owner != nullptr);
}



inline jule::Bool _1ab83308e_is_entry_point(_1ab832324_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _1ab833369_is_init(_1ab832324_Fn* _self_) {
	return ((*_self_)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _1ab833644_is_anon(_1ab832324_Fn* _self_) {
	return _1aa078929_is_anon_ident((*_self_)._field_ident);
}



inline jule::Bool _1ab83391e_any_var(_1ab832324_Fn* _self_) {
	return ((*_self_)._field_result != nullptr) && ((*_self_)._field_result.get()._field_idents.len() > 0LL);
}



inline jule::Bool _1ab833c3d_parameters_uses_generics(_1ab832324_Fn* _self_) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		return false;
	}
	{
		auto &expr = (*_self_)._field_params;
		auto it = expr.begin();
		_iter_begin_1a7b0acd8:;
		if (it != expr.end()) {
			jule::Ptr<_1ab830300_Param> &_1a7b0ae2b_p = *it;
			{
				if (_1ab8384e5_parameter_uses_generics(_1a7b0ae2b_p,(*_self_)._field_generics)) {
					return true;
				}
			}
			_iter_next_1a7b0acd8:;
			++it;
			goto _iter_begin_1a7b0acd8;
		}
		_iter_end_1a7b0acd8:;
	}
	return false;
}



inline jule::Bool _1ab834007_result_uses_generics(_1ab832324_Fn* _self_) {
	if (_1ab8329d9_is_void(&(*_self_))) {
		return false;
	} else if (((*_self_)._field_result.get()._field_kind == nullptr) || ((*_self_)._field_result.get()._field_kind.get()._field_kind == nullptr)) {
		return false;
	}
	return _1ab838072_kind_uses_generics((*_self_)._field_result.get()._field_kind.get()._field_kind,(*_self_)._field_generics);
}



inline jule::Ptr<_1ab836218_FnIns> _1ab8342d2_instance_force(jule::Ptr<_1ab832324_Fn> _self_) {
	jule::Ptr<_1ab836218_FnIns> _12717_ins = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),_self_,jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::new_ptr<_1ac56022c_Scope>(_1ac56022c_Scope()),static__1ab83a294_new(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(),jule::Bool()));
	_12717_ins.get()._field_params=jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>::alloc(0LL,static_cast<jule::I64>(_self_.get()._field_params.len()));
	{
		auto &expr = _self_.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a7b0edca:;
		if (it != expr.end()) {
			jule::Ptr<_1ab830300_Param> _1a7b10738_p = *it;
			{
				_12717_ins.get()._field_params = jule::alloc_for_append(_12717_ins.get()._field_params,1);_12717_ins.get()._field_params.__push(_1ab83092c_instance(_1a7b10738_p));
			}
			_iter_next_1a7b0edca:;
			++it;
			goto _iter_begin_1a7b0edca;
		}
		_iter_end_1a7b0edca:;
	}
	if ((_12717_ins.get()._field_decl.get()._field_result != nullptr)) {
		_12717_ins.get()._field_result=_12717_ins.get()._field_decl.get()._field_result.get()._field_kind.get()._field_kind;
	}
	return _12717_ins;
}



inline jule::Ptr<_1ab836218_FnIns> _1ab8345ac_instance(jule::Ptr<_1ab832324_Fn> _self_) {
	if ((_self_.get()._field_generics.len() == 0LL) && (_self_.get()._field_instances.len() == 1LL)) {
		return _self_.get()._field_instances[0LL];
	}
	return _1ab8342d2_instance_force(_self_);
}



inline std::tuple<jule::Bool,jule::I64> _1ab834964_append_instance(_1ab832324_Fn* _self_,jule::Ptr<_1ab836218_FnIns>& _15439_ins) {
	if (((*_self_)._field_generics.len() == 0LL)) {
		if (((*_self_)._field_instances.len() == 1LL)) {
			return std::make_tuple(false,0LL);
		}
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	if (((*_self_)._field_instances.len() == 0LL)) {
		(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
		return std::make_tuple(true,-1LL);
	}
	{
		auto &expr = (*_self_)._field_instances;
		auto it = expr.begin();
		_iter_begin_1a7b168b5:;
		if (it != expr.end()) {
			jule::I64 _1a7b174cb_j = it - expr.begin();
			jule::Ptr<_1ab836218_FnIns> _1a7b1760d_ains = *it;
			{
				if (_1ab837725_same(_1a7b1760d_ains.ptr(), _15439_ins)) {
					return std::make_tuple(false,_1a7b174cb_j);
				}
			}
			_iter_next_1a7b168b5:;
			++it;
			_1a7b174cb_j++;
			goto _iter_begin_1a7b168b5;
		}
		_iter_end_1a7b168b5:;
	}
	(*_self_)._field_instances = jule::alloc_for_append((*_self_)._field_instances,1);(*_self_)._field_instances.__push(_15439_ins);
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab832324_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "exceptional:" << _Src._field_exceptional << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09d5db_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09de7c_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa09e631_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab83b66e_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa08d752_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a639d47d_ObjectCoder> static__1a635b859_new(jule::Ptr<_1a59a1895_IR>& _7628_ir,_1a639cb42_SerializationInfo _7637_info) {
	jule::Ptr<_1a639d47d_ObjectCoder> _7717_oc = jule::new_ptr<_1a639d47d_ObjectCoder>(_1a639d47d_ObjectCoder(_7628_ir,_7637_info,jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Str(),jule::Slice<jule::Ptr<_1a639d060_TraitHash>>(),jule::Ptr<_1a6224546_ExprCoder>(),jule::Ptr<_1a62cbac6_ScopeCoder>()));
	_7717_oc.get()._field_ec=static__1a6221763_new(_7717_oc);
	_7717_oc.get()._field_sc=static__1a62729a1_new(_7717_oc);
	return _7717_oc;
}



inline void _1a635060b_add_indent(_1a639d47d_ObjectCoder* _self_) {
	
	(*_self_)._field_indent_buffer+=jule::Str("\t", 1);
}



inline void _1a635371e_done_indent(_1a639d47d_ObjectCoder* _self_) {
	(*_self_)._field_indent_buffer=(*_self_)._field_indent_buffer.slice(0LL,((*_self_)._field_indent_buffer.len() - 1LL));
}



inline jule::Str _1a635307b_indent(_1a639d47d_ObjectCoder* _self_) {
	return (*_self_)._field_indent_buffer;
}



inline jule::I64 _1a637c160_find_type_offset(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac44770d_Trait> _10231_t,jule::Ptr<_1a5913e9a_TypeKind> _10246_k) {
	jule::Ptr<_1ab814515_StructIns> _10317_s = nullptr;
	if ((_1a5916a19_sptr(_10246_k.ptr()) != nullptr)) {
		_10246_k=_1a5916a19_sptr(_10246_k.ptr()).get()._field_elem;
	}
	if ((_1a5917c29_strct(_10246_k.ptr()) == nullptr)) {
		return -1LL;
	}
	_10317_s=_1a5917c29_strct(_10246_k.ptr());
	{
		auto &expr = (*_self_)._field_trait_map;
		auto it = expr.begin();
		_iter_begin_1a8bbbb9a:;
		if (it != expr.end()) {
			jule::Ptr<_1a639d060_TraitHash> &_1a8bbc1b7_hash = *it;
			{
				if ((_1a8bbc1b7_hash.get()._field_t == _10231_t) && (_1a8bbc1b7_hash.get()._field_s == _10317_s)) {
					return _1a8bbc1b7_hash.get()._field_i;
				}
			}
			_iter_next_1a8bbbb9a:;
			++it;
			goto _iter_begin_1a8bbbb9a;
		}
		_iter_end_1a8bbbb9a:;
	}
	return -1LL;
}



inline jule::Str _1a637c88b_loc_info(_1a639d47d_ObjectCoder* _self_,_1aa07563a_Token& _12024_t) {
	jule::Str _12117_loc = _12024_t._field_file.get()._field_path;
	if (_1dc2523c8_PRODUCTION) {
		{
			
			if (_1c471294a_has_prefix(_12117_loc,_1c4820a47_PATH_STDLIB)) {
				_case_begin_1a8bbe021:;
				{
					(_12117_loc).mut_slice(_1c478a891_dir(_1c4820a47_PATH_STDLIB).len() + 1LL);
				}
			}
			else if (_1c471294a_has_prefix(_12117_loc,(*_self_)._field_ir.get()._field_root)) {
				_case_begin_1a8bbe098:;
				{
					(_12117_loc).mut_slice(_1c478a891_dir((*_self_)._field_ir.get()._field_root).len() + 1LL);
				}
			}
			_match_end_1a8bbde11:;
		}
	}
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_1ac445de3_itoa(_12024_t._field_row);
	_12117_loc+=jule::Str(":", 1);
	_12117_loc+=_1ac445de3_itoa(_12024_t._field_column);
	return _1a63407e9_cstr_bytes(static_cast<jule::Slice<jule::U8>>(_12117_loc));
}



inline jule::Str _1a637959c_links(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _14517_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8bc2a4c:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8bc2ae6_pkg = *it;
			{
				{
					
					if ((!(_1a8bc2ae6_pkg.get()._field_cpp_linked))) {
						_case_begin_1a8bc329a:;
						{
							goto _iter_next_1a8bc2a4c;
						}
					}
					else if (_1c47ee0a8_is_std_header_path(_1a8bc2ae6_pkg.get()._field_path)) {
						_case_begin_1a8bc3322:;
						{
							_14517_obj+=jule::Str("#include ", 9);
							_14517_obj+=_1a8bc2ae6_pkg.get()._field_path;
							_14517_obj+=jule::Str("\n", 1);
						}
					}
					_match_end_1a8bc318a:;
				}
			}
			_iter_next_1a8bc2a4c:;
			++it;
			goto _iter_begin_1a8bc2a4c;
		}
		_iter_end_1a8bc2a4c:;
	}
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8bc4873:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8bc2d49_pkg = *it;
			{
				{
					
					if ((!(_1a8bc2d49_pkg.get()._field_cpp_linked))) {
						_case_begin_1a8bc4c19:;
						{
							goto _iter_next_1a8bc4873;
						}
					}
					else if (_1a63a68c6_is_cpp_header_file(_1a8bc2d49_pkg.get()._field_path)) {
						_case_begin_1a8bc4c91:;
						{
							_14517_obj+=jule::Str("#include \"", 10);
							_14517_obj+=_1a8bc2d49_pkg.get()._field_path;
							_14517_obj+=jule::Str("\"\n", 2);
						}
					}
					_match_end_1a8bc4b09:;
				}
			}
			_iter_next_1a8bc4873:;
			++it;
			goto _iter_begin_1a8bc4873;
		}
		_iter_end_1a8bc4873:;
	}
	return _14517_obj;
}



inline jule::Str _1a6359a99_param_ins(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab834db5_ParamIns>& _17129_p) {
	jule::Str _17217_obj = static__1a63acbda_param_ins(_17129_p);
	_17217_obj+=jule::Str(" ", 1);
	_17217_obj+=static__1a63465be_param(_17129_p.get()._field_decl);
	return _17217_obj;
}



inline jule::Str _1a635d691_param(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab830300_Param>& _17929_p) {
	jule::Str _18017_obj = static__1a63ac8cc_param(_17929_p);
	if (((!(_17929_p.get()._field_ident.empty())) && (!(_1aa07861b_is_ignore_ident(_17929_p.get()._field_ident)))) && (!(_1aa078929_is_anon_ident(_17929_p.get()._field_ident)))) {
		_18017_obj+=jule::Str(" ", 1);
		_18017_obj+=static__1a63465be_param(_17929_p);
	}
	return _18017_obj;
}



inline jule::Str _1a63611aa_params(_1a639d47d_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ab830300_Param>>& _18930_params) {
	if ((_18930_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _19317_obj = jule::Str("(", 1);
	{
		auto &expr = _18930_params;
		auto it = expr.begin();
		_iter_begin_1a8bcb407:;
		if (it != expr.end()) {
			jule::Ptr<_1ab830300_Param> _1a8bcb44b_p = *it;
			{
				if (_1ab830c07_is_self(_1a8bcb44b_p.ptr())) {
					if (_1ab830ed2_is_ref(_1a8bcb44b_p.ptr())) {
						_19317_obj+=_1a635d691_param(&(*_self_), _1a8bcb44b_p);
					}
				} else {
					_19317_obj+=_1a635d691_param(&(*_self_), _1a8bcb44b_p);
				}
				_19317_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8bcb407:;
			++it;
			goto _iter_begin_1a8bcb407;
		}
		_iter_end_1a8bcb407:;
	}
	(_19317_obj).mut_slice(0LL,_19317_obj.len() - 1LL);
	return (_19317_obj + jule::Str(")", 1));
}



inline jule::Str _1a639dc75_params_ins(_1a639d47d_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>& _21034_params) {
	{
		
		if ((_21034_params.len() == 0LL)) {
			_case_begin_1a8bcdd88:;
			{
				return jule::Str("(void)", 6);
			}
		}
		_match_end_1a8bcdcab:;
	}
	jule::Str _21617_obj = jule::Str("(", 1);
	{
		auto &expr = _21034_params;
		auto it = expr.begin();
		_iter_begin_1a8bce74b:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a8bce790_p = *it;
			{
				_21617_obj+=_1a6359a99_param_ins(&(*_self_), _1a8bce790_p);
				_21617_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8bce74b:;
			++it;
			goto _iter_begin_1a8bce74b;
		}
		_iter_end_1a8bce74b:;
	}
	(_21617_obj).mut_slice(0LL,_21617_obj.len() - 1LL);
	return (_21617_obj + jule::Str(")", 1));
}



inline jule::Str _1a639ddda_params_decls(_1a639d47d_ObjectCoder* _self_,jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>& _22836_params) {
	if ((_22836_params.len() == 0LL)) {
		return jule::Str("(void)", 6);
	}
	jule::Str _23317_obj = jule::Str("(", 1);
	{
		auto &expr = _22836_params;
		auto it = expr.begin();
		_iter_begin_1a8bd2276:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a8bd22ba_p = *it;
			{
				_23317_obj+=static__1a63acbda_param_ins(_1a8bd22ba_p);
				_23317_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8bd2276:;
			++it;
			goto _iter_begin_1a8bd2276;
		}
		_iter_end_1a8bd2276:;
	}
	(_23317_obj).mut_slice(0LL,_23317_obj.len() - 1LL);
	return (_23317_obj + jule::Str(")", 1));
}



inline void _1a639e050_prepare_structure(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab810b3d_Struct>& _24441_s) {
	{
		auto &expr = _24441_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8bd3c17:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a8bd3d38_ins = *it;
			{
				{
					auto &expr = _1a8bd3d38_ins.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a8bd44dc:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a8bd4575_m = *it;
						{
							if (_1a8bd4575_m.get()._field_statically) {
								goto _iter_next_1a8bd44dc;
							}
							{
								auto &expr = _1a8bd4575_m.get()._field_instances;
								auto it = expr.begin();
								_iter_begin_1a8bd4ba2:;
								if (it != expr.end()) {
									jule::Ptr<_1ab836218_FnIns> _1a8bd5235_ins = *it;
									{
										jule::Ptr<_1ab834db5_ParamIns> _25129_p = _1a8bd5235_ins.get()._field_params[0LL];
										if ((!(_1ab830ed2_is_ref(_25129_p.get()._field_decl.ptr())))) {
											_25129_p.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a63a7ee3_CustomType>(_1a63a7ee3_CustomType(static__1a63aa226_as_ptr(static__1a63adc30_kind(_25129_p.get()._field_kind)))), 12)));
										} else {
											_25129_p.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a63a7ee3_CustomType>(_1a63a7ee3_CustomType(static__1a63adc30_kind(_25129_p.get()._field_kind))), 12)));
										}
									}
									_iter_next_1a8bd4ba2:;
									++it;
									goto _iter_begin_1a8bd4ba2;
								}
								_iter_end_1a8bd4ba2:;
							}
						}
						_iter_next_1a8bd44dc:;
						++it;
						goto _iter_begin_1a8bd44dc;
					}
					_iter_end_1a8bd44dc:;
				}
			}
			_iter_next_1a8bd3c17:;
			++it;
			goto _iter_begin_1a8bd3c17;
		}
		_iter_end_1a8bd3c17:;
	}
}



inline void _1a639e1b5_prepare_structures(_1a639d47d_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8bd4982:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8bd77cb_s = *it;
			{
				if ((!(_1a8bd77cb_s.get()._field_cpp_linked)) && (_1a8bd77cb_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_1a639e050_prepare_structure(&(*_self_), _1a8bd77cb_s);
				}
			}
			_iter_next_1a8bd4982:;
			++it;
			goto _iter_begin_1a8bd4982;
		}
		_iter_end_1a8bd4982:;
	}
}



inline void _1a639e32a_build_trait_wrapper(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1a639d060_TraitHash>& _27843_hash) {
	{
		auto &expr = _27843_hash.get()._field_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a8bd9e2c:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a8bd9ec6_m = *it;
			{
				jule::Str _28017_ident = _1a8bd9ec6_m.get()._field_ident;
				_1a8bd9ec6_m.get()._field_instances[0LL].get()._field_scope=nullptr;
				jule::Bool _28217_ptr = (!(_1ab830ed2_is_ref(_1a8bd9ec6_m.get()._field_params[0LL].ptr())));
				jule::Ptr<_1ab832324_Fn> _28421_sm = _1ab815934_find_method(_27843_hash.get()._field_s.ptr(), _1a8bd9ec6_m.get()._field_ident,false);
				if ((_28421_sm == nullptr) || (_28421_sm.get()._field_instances.len() == 0LL)) {
					goto _iter_next_1a8bd9e2c;
				}
				_1a8bd9ec6_m.get()._field_ident=(_28017_ident + jule::Str("_", 1)) + _1ac445de3_itoa(_27843_hash.get()._field_i);
				(*_self_)._field_trait_wrappers+=_1a63a387e_func(&(*_self_), _1a8bd9ec6_m);
				_1a8bd9ec6_m.get()._field_ident=_28017_ident;
				_1a635060b_add_indent(&(*_self_));
				(*_self_)._field_trait_wrappers+=jule::Str("{\n", 2);
				(*_self_)._field_trait_wrappers+=_1a635307b_indent(&(*_self_));
				if ((!(_1ab8329d9_is_void(_28421_sm.ptr())))) {
					(*_self_)._field_trait_wrappers+=jule::Str("return ", 7);
				}
				(*_self_)._field_trait_wrappers+=static__1a6345b95_func(_28421_sm);
				(*_self_)._field_trait_wrappers+=jule::Str("(", 1);
				if (_28217_ptr) {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.safe_ptr<", 16);
					(*_self_)._field_trait_wrappers+=static__1a63ac2b1_structure_ins(_27843_hash.get()._field_s);
					(*_self_)._field_trait_wrappers+=jule::Str(">(", 2);
					if ((!(_1dc2523c8_PRODUCTION))) {
						(*_self_)._field_trait_wrappers+=jule::Str("_00___file", 10);
					}
					(*_self_)._field_trait_wrappers+=jule::Str(")", 1);
				} else {
					(*_self_)._field_trait_wrappers+=jule::Str("_self_.data.as<", 15);
					(*_self_)._field_trait_wrappers+=static__1a63abea3_structure(_28421_sm.get()._field_owner);
					(*_self_)._field_trait_wrappers+=jule::Str(">()", 3);
				}
				{
					auto expr = _1a8bd9ec6_m.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1a8bde508:;
					if (it != expr.end()) {
						jule::Ptr<_1ab830300_Param> _1a8be4046_mp = *it;
						{
							(*_self_)._field_trait_wrappers+=jule::Str(", ", 2);
							(*_self_)._field_trait_wrappers+=static__1a63465be_param(_1a8be4046_mp);
						}
						_iter_next_1a8bde508:;
						++it;
						goto _iter_begin_1a8bde508;
					}
					_iter_end_1a8bde508:;
				}
				(*_self_)._field_trait_wrappers+=jule::Str(");\n}\n", 5);
				_1a635371e_done_indent(&(*_self_));
			}
			_iter_next_1a8bd9e2c:;
			++it;
			goto _iter_begin_1a8bd9e2c;
		}
		_iter_end_1a8bd9e2c:;
	}
}



inline void _1a639e490_trait_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac44770d_Trait>& _32234_t) {
	jule::Str _32313_ident = static__1a63462b1_trait_decl(_32234_t);
	jule::Str _32513_type_data = (_32313_ident + jule::Str("MptrData", 8));
	(*_self_)._field_trait_data_t+=jule::Str("struct ", 7);
	(*_self_)._field_trait_data_t+=_32513_type_data;
	(*_self_)._field_trait_data_t+=jule::Str(" {\n", 3);
	{
		auto &expr = _32234_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a8be6bb4:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a8be6d4b_m = *it;
			{
				jule::Ptr<_1ab836218_FnIns> _33121_ins = _1a8be6d4b_m.get()._field_instances[0LL];
				jule::Ptr<_1ab834db5_ParamIns> _33221_p = _33121_ins.get()._field_params[0LL];
				_33221_p.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_32234_t, 2)));
				{
					auto expr = _33121_ins.get()._field_params.slice(1LL);
					auto it = expr.begin();
					_iter_begin_1a8be8853:;
					if (it != expr.end()) {
						jule::I64 _1a8be8a2e_i = it - expr.begin();
						jule::Ptr<_1ab834db5_ParamIns> _1a8be8ba5_ip = *it;
						{
							if (_1aa078929_is_anon_ident(_1a8be8ba5_ip.get()._field_decl.get()._field_ident)) {
								_1a8be8ba5_ip.get()._field_decl.get()._field_ident=jule::Str("_", 1) + _1ac445de3_itoa(_1a8be8a2e_i);
							}
						}
						_iter_next_1a8be8853:;
						++it;
						_1a8be8a2e_i++;
						goto _iter_begin_1a8be8853;
					}
					_iter_end_1a8be8853:;
				}
				if ((!(_1dc2523c8_PRODUCTION))) {
					_33121_ins.get()._field_params = jule::alloc_for_append(_33121_ins.get()._field_params,1);_33121_ins.get()._field_params.__push(jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str("__file", 6))),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a63a7ee3_CustomType>(_1a63a7ee3_CustomType(jule::Str("const char*", 11))), 12))))));
				}
				_1a635060b_add_indent(&(*_self_));
				(*_self_)._field_trait_data_t+=_1a63a2075_func_decl(&(*_self_), _1a8be6d4b_m,true);
				_1a635371e_done_indent(&(*_self_));
			}
			_iter_next_1a8be6bb4:;
			++it;
			goto _iter_begin_1a8be6bb4;
		}
		_iter_end_1a8be6bb4:;
	}
	(*_self_)._field_trait_data_t+=_1a635307b_indent(&(*_self_));
	(*_self_)._field_trait_data_t+=jule::Str("};", 2);
	(*_self_)._field_trait_data_t+=jule::Str("\n\n", 2);
	jule::I64 _36213_n = (*_self_)._field_trait_map.len();
	jule::I64 _36317_i = 0LL;
	{
		auto &expr = _32234_t.get()._field_implemented;
		auto it = expr.begin();
		_iter_begin_1a8bed87a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8bed9bd_s = *it;
			{
				{
					auto &expr = _1a8bed9bd_s.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1a8bee13e:;
					if (it != expr.end()) {
						jule::Ptr<_1ab814515_StructIns> _1a8bee1c7_ins = *it;
						{
							jule::Ptr<_1a639d060_TraitHash> _36625_hash = jule::new_ptr<_1a639d060_TraitHash>(_1a639d060_TraitHash(_32234_t,_1a8bee1c7_ins,_36317_i));
							(_36317_i)++;
							_1a639e32a_build_trait_wrapper(&(*_self_), _36625_hash);
							(*_self_)._field_trait_map = jule::alloc_for_append((*_self_)._field_trait_map,1);(*_self_)._field_trait_map.__push(_36625_hash);
						}
						_iter_next_1a8bee13e:;
						++it;
						goto _iter_begin_1a8bee13e;
					}
					_iter_end_1a8bee13e:;
				}
			}
			_iter_next_1a8bed87a:;
			++it;
			goto _iter_begin_1a8bed87a;
		}
		_iter_end_1a8bed87a:;
	}
	(*_self_)._field_trait_declarations+=jule::Str("struct ", 7);
	(*_self_)._field_trait_declarations+=_32313_ident;
	(*_self_)._field_trait_declarations+=jule::Str(" {};\n", 5);
	_1a635060b_add_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("static ", 7);
	(*_self_)._field_trait_data+=_32513_type_data;
	(*_self_)._field_trait_data+=jule::Str(" ", 1);
	(*_self_)._field_trait_data+=_32313_ident;
	(*_self_)._field_trait_data+=jule::Str("_mptr_data[] = {\n", 17);
	{
		auto expr = (*_self_)._field_trait_map.slice(_36213_n);
		auto it = expr.begin();
		_iter_begin_1a8c022b8:;
		if (it != expr.end()) {
			jule::Ptr<_1a639d060_TraitHash> _1a8c023d9_hash = *it;
			{
				(*_self_)._field_trait_data+=_1a635307b_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("{\n", 2);
				_1a635060b_add_indent(&(*_self_));
				{
					auto &expr = _1a8c023d9_hash.get()._field_t.get()._field_methods;
					auto it = expr.begin();
					_iter_begin_1a8c038a2:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a8c0393a_m = *it;
						{
							jule::Str _39321_m_ident = static__1a6345b95_func(_1a8c0393a_m);
							(*_self_)._field_trait_data+=_1a635307b_indent(&(*_self_));
							(*_self_)._field_trait_data+=jule::Str(".", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("=", 1);
							(*_self_)._field_trait_data+=_39321_m_ident;
							(*_self_)._field_trait_data+=jule::Str("_", 1);
							(*_self_)._field_trait_data+=_1ac445de3_itoa(_1a8c023d9_hash.get()._field_i);
							(*_self_)._field_trait_data+=jule::Str(",\n", 2);
						}
						_iter_next_1a8c038a2:;
						++it;
						goto _iter_begin_1a8c038a2;
					}
					_iter_end_1a8c038a2:;
				}
				_1a635371e_done_indent(&(*_self_));
				(*_self_)._field_trait_data+=_1a635307b_indent(&(*_self_));
				(*_self_)._field_trait_data+=jule::Str("},\n", 3);
			}
			_iter_next_1a8c022b8:;
			++it;
			goto _iter_begin_1a8c022b8;
		}
		_iter_end_1a8c022b8:;
	}
	_1a635371e_done_indent(&(*_self_));
	(*_self_)._field_trait_data+=_1a635307b_indent(&(*_self_));
	(*_self_)._field_trait_data+=jule::Str("};", 2);
}



inline void _1a639e605_trait_decls(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac58451a_Package>& _41335_p) {
	{
		auto &expr = _41335_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8c07dc3:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8c07ee4_f = *it;
			{
				{
					auto &expr = _1a8c07ee4_f.get()._field_traits;
					auto it = expr.begin();
					_iter_begin_1a8c08698:;
					if (it != expr.end()) {
						jule::Ptr<_1ac44770d_Trait> _1a8c08731_t = *it;
						{
							if (_1a8c08731_t.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) {
								_1a639e490_trait_decl(&(*_self_), _1a8c08731_t);
							}
						}
						_iter_next_1a8c08698:;
						++it;
						goto _iter_begin_1a8c08698;
					}
					_iter_end_1a8c08698:;
				}
			}
			_iter_next_1a8c07dc3:;
			++it;
			goto _iter_begin_1a8c07dc3;
		}
		_iter_end_1a8c07dc3:;
	}
}



inline jule::Str _1a639e76a_structure_plain_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab810b3d_Struct>& _42444_s) {
	jule::Str _42517_obj = jule::Str();
	{
		auto &expr = _42444_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8c0a238:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a8c0a359_ins = *it;
			{
				_42517_obj+=jule::Str("\nstruct ", 8);
				_42517_obj+=static__1a6346bda_structure_ins(_1a8c0a359_ins);
				_42517_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1a8c0a238:;
			++it;
			goto _iter_begin_1a8c0a238;
		}
		_iter_end_1a8c0a238:;
	}
	return _42517_obj;
}



inline jule::Str _1a639e8d0_structure_plain_decls(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _43617_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8c0ba86:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8c0bb0d_s = *it;
			{
				if ((!(_1a8c0bb0d_s.get()._field_cpp_linked)) && (_1a8c0bb0d_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_43617_obj+=_1a639e76a_structure_plain_decl(&(*_self_), _1a8c0bb0d_s);
					_43617_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a8c0ba86:;
			++it;
			goto _iter_begin_1a8c0ba86;
		}
		_iter_end_1a8c0ba86:;
	}
	return _43617_obj;
}



inline jule::Str _1a639ea45_var_init_expr(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1a588601b_Var>& _44737_v,jule::Str _44746_init) {
	jule::Str _44817_obj = jule::Str();
	if (_44737_v.get()._field_statically) {
		_44817_obj+=jule::Str("static ", 7);
	}
	_44817_obj+=static__1a63adc30_kind(_44737_v.get()._field_kind.get()._field_kind);
	_44817_obj+=jule::Str(" ", 1);
	if (_44737_v.get()._field_reference) {
		_44817_obj+=jule::Str("&", 1);
	}
	_44817_obj+=static__1a6347306_var(_44737_v);
	if ((!(_44746_init.empty()))) {
		_44817_obj+=jule::Str(" = ", 3);
		_44817_obj+=_44746_init;
	}
	_44817_obj+=jule::Str(";", 1);
	return _44817_obj;
}



inline jule::Str _1a639ebaa_var(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1a588601b_Var> _46826_v) {
	if (_1aa07861b_is_ignore_ident(_46826_v.get()._field_ident)) {
		return jule::Str();
	}
	if ((_46826_v.get()._field_value != nullptr) && (_46826_v.get()._field_value.get()._field_expr != nullptr)) {
		if (_46826_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
			return _1a639ea45_var_init_expr(&(*_self_), _46826_v,_1a633e5b7_val((*_self_)._field_ec.ptr(), _46826_v.get()._field_value));
		}
		return _1a639ea45_var_init_expr(&(*_self_), _46826_v,jule::Str());
	}
	return _1a639ea45_var_init_expr(&(*_self_), _46826_v,_1a633e96e_init_expr((*_self_)._field_ec.ptr(), _46826_v.get()._field_kind.get()._field_kind));
}



inline jule::Str _1a639ed20_field_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab8137bc_FieldIns>& _48234_f) {
	jule::Str _48317_obj = static__1a63adc30_kind(_48234_f.get()._field_kind);
	_48317_obj+=jule::Str(" ", 1);
	_48317_obj+=static__1a6346ee8_field(_48234_f.get()._field_decl);
	_48317_obj+=jule::Str(" = ", 3);
	if ((_48234_f.get()._field_default == nullptr)) {
		_48317_obj+=_1a633e96e_init_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_kind);
	} else {
		_48317_obj+=_1a633e210_expr((*_self_)._field_ec.ptr(), _48234_f.get()._field_default.get()._field_model);
	}
	_48317_obj+=jule::Str(";", 1);
	return _48317_obj;
}



inline jule::Str _1a639ee85_structure_constructor(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _49845_s) {
	jule::Str _49917_obj = static__1a6346bda_structure_ins(_49845_s);
	_49917_obj+=jule::Str("(", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c18e6c:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c1908d_f = *it;
				{
					_49917_obj+=static__1a63adc30_kind(_1a8c1908d_f.get()._field_kind);
					_49917_obj+=jule::Str(" __param_", 9);
					_49917_obj+=_1a8c1908d_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str(", ", 2);
				}
				_iter_next_1a8c18e6c:;
				++it;
				goto _iter_begin_1a8c18e6c;
			}
			_iter_end_1a8c18e6c:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	} else {
		_49917_obj+=jule::Str("void", 4);
	}
	_49917_obj+=jule::Str(")", 1);
	if ((_49845_s.get()._field_fields.len() > 0LL)) {
		_49917_obj+=jule::Str(": ", 2);
		{
			auto &expr = _49845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c1b5bd:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c1b755_f = *it;
				{
					_49917_obj+=static__1a6346ee8_field(_1a8c1b755_f.get()._field_decl);
					_49917_obj+=jule::Str("(", 1);
					_49917_obj+=jule::Str("__param_", 8);
					_49917_obj+=_1a8c1b755_f.get()._field_decl.get()._field_ident;
					_49917_obj+=jule::Str("), ", 3);
				}
				_iter_next_1a8c1b5bd:;
				++it;
				goto _iter_begin_1a8c1b5bd;
			}
			_iter_end_1a8c1b5bd:;
		}
		(_49917_obj).mut_slice(0LL,_49917_obj.len() - 2LL);
	}
	_49917_obj+=jule::Str(" {}", 3);
	return _49917_obj;
}



inline jule::Str _1a63a00ea_structure_destructor(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _53144_s) {
	
	jule::Ptr<_1ab832324_Fn> _53313_dispose_method = _1ab815934_find_method(_53144_s.ptr(), jule::Str("dispose", 7),false);
	jule::Bool _53417_disposed = static__1a5887715_dispose(_53313_dispose_method);
	if ((!(_53417_disposed))) {
		return jule::Str();
	}
	jule::Str _53917_obj = jule::Str("~", 1);
	_53917_obj+=static__1a6346bda_structure_ins(_53144_s);
	_53917_obj+=jule::Str("(void) { ", 9);
	_53917_obj+=static__1a6345b95_func(_53313_dispose_method);
	_53917_obj+=jule::Str("(this); }", 9);
	return _53917_obj;
}



inline void _1a63a0260_structure_operator_eq(_1a639d47d_ObjectCoder* _self_,jule::Str& _54745_obj,jule::Str& _54756_ident,jule::Ptr<_1ab814515_StructIns>& _54773_s) {
	if ((_54773_s.get()._field_operators._field_eq != nullptr)) {
		_1a63a053a_structure_operator(&(*_self_), _54745_obj,_54756_ident,_54773_s.get()._field_operators._field_eq,jule::Str("==", 2));
		return;
	}
	_54745_obj+=_1a635307b_indent(&(*_self_));
	if (_1dc252a9e_OPT_INLINE) {
		_54745_obj+=jule::Str("inline ", 7);
	}
	_54745_obj+=jule::Str("bool operator==(", 16);
	_54745_obj+=_54756_ident;
	_54745_obj+=jule::Str(" _other) {", 10);
	if ((_54773_s.get()._field_fields.len() > 0LL)) {
		_1a635060b_add_indent(&(*_self_));
		_54745_obj+=jule::Str("\n", 1);
		_54745_obj+=_1a635307b_indent(&(*_self_));
		_54745_obj+=jule::Str("return ", 7);
		_1a635060b_add_indent(&(*_self_));
		jule::I64 _56721_n = 0LL;
		{
			auto &expr = _54773_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c25eac:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c260cd_f = *it;
				{
					jule::Ptr<_1ab814515_StructIns> _57021_strct = _1a5917c29_strct(_1a8c260cd_f.get()._field_kind.ptr());
					if (((_57021_strct != nullptr) && (_57021_strct.get()._field_decl != nullptr)) && _57021_strct.get()._field_decl.get()._field_cpp_linked) {
						goto _iter_next_1a8c25eac;
					}
					(_56721_n)++;
					_54745_obj+=jule::Str("\n", 1);
					_54745_obj+=_1a635307b_indent(&(*_self_));
					_54745_obj+=jule::Str("this->", 6);
					jule::Str _57921_f_ident = static__1a6346ee8_field(_1a8c260cd_f.get()._field_decl);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" == _other.", 11);
					_54745_obj+=_57921_f_ident;
					_54745_obj+=jule::Str(" &&", 3);
				}
				_iter_next_1a8c25eac:;
				++it;
				goto _iter_begin_1a8c25eac;
			}
			_iter_end_1a8c25eac:;
		}
		_1a635371e_done_indent(&(*_self_));
		if ((_56721_n > 0LL)) {
			(_54745_obj).mut_slice(0LL,_54745_obj.len() - 3LL);
		} else {
			_54745_obj+=jule::Str("true", 4);
		}
		_54745_obj+=jule::Str(";\n", 2);
		_1a635371e_done_indent(&(*_self_));
		_54745_obj+=_1a635307b_indent(&(*_self_));
		_54745_obj+=jule::Str("}", 1);
	} else {
		_54745_obj+=jule::Str(" return true; }", 15);
	}
	_54745_obj+=jule::Str("\n\n", 2);
}



inline void _1a63a03c5_structure_operator_not_eq(_1a639d47d_ObjectCoder* _self_,jule::Str& _60149_obj,jule::Str& _60160_ident,jule::Ptr<_1ab814515_StructIns>& _60177_s) {
	_60149_obj+=_1a635307b_indent(&(*_self_));
	if (_1dc252a9e_OPT_INLINE) {
		_60149_obj+=jule::Str("inline ", 7);
	}
	_60149_obj+=jule::Str("bool operator!=(", 16);
	_60149_obj+=_60160_ident;
	_60149_obj+=jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48);
}



inline void _1a63a053a_structure_operator(_1a639d47d_ObjectCoder* _self_,jule::Str& _61242_obj,jule::Str& _61253_ident,jule::Ptr<_1ab836218_FnIns>& _61270_f,jule::Str _61281_op) {
	if ((_61270_f == nullptr)) {
		return;
	}
	jule::Bool _61713_unary = (_61270_f.get()._field_params.len() == 1LL);
	jule::Bool _61813_assignment = _1ab8329d9_is_void(_61270_f.get()._field_decl.ptr());
	_61242_obj+=_1a635307b_indent(&(*_self_));
	if (_1dc252a9e_OPT_INLINE) {
		_61242_obj+=jule::Str("inline ", 7);
	}
	if (_61813_assignment) {
		_61242_obj+=_61253_ident;
		_61242_obj+=jule::Str("&", 1);
	} else {
		if ((_1a591673e_prim(_61270_f.get()._field_result.ptr()) == nullptr)) {
			_61242_obj+=_61253_ident;
		} else {
			_61242_obj+=jule::Str("jule::Bool", 10);
		}
	}
	_61242_obj+=jule::Str(" operator", 9);
	_61242_obj+=_61281_op;
	_61242_obj+=jule::Str("(", 1);
	if ((!(_61713_unary))) {
		jule::Ptr<_1ab834db5_ParamIns> _64021_p = _61270_f.get()._field_params[1LL];
		_61242_obj+=static__1a63acbda_param_ins(_64021_p);
		_61242_obj+=jule::Str(" _other", 7);
	}
	_61242_obj+=jule::Str(") { ", 4);
	if ((!(_61813_assignment))) {
		_61242_obj+=jule::Str("return ", 7);
	}
	_61242_obj+=static__1a6345ea3_func_ins(_61270_f);
	if ((!(_61713_unary))) {
		_61242_obj+=jule::Str("(this, _other); ", 16);
		if (_61813_assignment) {
			_61242_obj+=jule::Str("return *this; ", 14);
		}
		_61242_obj+=jule::Str("}", 1);
	} else {
		_61242_obj+=jule::Str("(this); }", 9);
	}
	_61242_obj+=jule::Str("\n\n", 2);
}



inline jule::Str _1a63a0738_structure_operators(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _66143_s) {
	jule::Str _66213_ident = static__1a6346bda_structure_ins(_66143_s);
	jule::Str _66317_obj = jule::Str();
	_1a63a0260_structure_operator_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_1a63a03c5_structure_operator_not_eq(&(*_self_), _66317_obj,_66213_ident,_66143_s);
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt,jule::Str(">", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_gt_eq,jule::Str(">=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt,jule::Str("<", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_lt_eq,jule::Str("<=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl,jule::Str("<<", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr,jule::Str(">>", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add,jule::Str("+", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub,jule::Str("-", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div,jule::Str("/", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul,jule::Str("*", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod,jule::Str("%", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and,jule::Str("&", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or,jule::Str("|", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor,jule::Str("^", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_neg,jule::Str("-", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_pos,jule::Str("+", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_not,jule::Str("~", 1));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_add_assign,jule::Str("+=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_sub_assign,jule::Str("-=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_div_assign,jule::Str("/=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mul_assign,jule::Str("*=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_mod_assign,jule::Str("%=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shl_assign,jule::Str("<<=", 3));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_shr_assign,jule::Str(">>=", 3));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_or_assign,jule::Str("|=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_and_assign,jule::Str("&=", 2));
	_1a63a053a_structure_operator(&(*_self_), _66317_obj,_66213_ident,_66143_s.get()._field_operators._field_bit_xor_assign,jule::Str("^=", 2));
	return _66317_obj;
}



inline jule::Str _1a63a0b34_structure_derive_defs_decls(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _70247_s) {
	jule::Str _70317_obj = jule::Str();
	if (_1ab812ada_is_derives(_70247_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_70317_obj+=_1a635307b_indent(&(*_self_));
		_70317_obj+=static__1a6342aa4_clone_func_decl(_70247_s.get()._field_decl);
		_70317_obj+=jule::Str(";\n\n", 3);
	}
	return _70317_obj;
}



inline jule::Str _1a63a0eca_structure_ins_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _71242_s) {
	jule::Str _71317_obj = jule::Str();
	if ((_71242_s.get()._field_methods.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_methods;
			auto it = expr.begin();
			_iter_begin_1a8c4bed3:;
			if (it != expr.end()) {
				jule::Ptr<_1ab832324_Fn> _1a8c4c104_m = *it;
				{
					_71317_obj+=_1a63a2075_func_decl(&(*_self_), _1a8c4c104_m,false);
				}
				_iter_next_1a8c4bed3:;
				++it;
				goto _iter_begin_1a8c4bed3;
			}
			_iter_end_1a8c4bed3:;
		}
	}
	_71317_obj+=jule::Str("struct ", 7);
	jule::Str _72213_out_ident = static__1a6346bda_structure_ins(_71242_s);
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str(" {\n", 3);
	_1a635060b_add_indent(&(*_self_));
	if ((_71242_s.get()._field_fields.len() > 0LL)) {
		{
			auto &expr = _71242_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c4e17d:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c4e26b_f = *it;
				{
					_71317_obj+=_1a635307b_indent(&(*_self_));
					_71317_obj+=_1a639ed20_field_decl(&(*_self_), _1a8c4e26b_f);
					_71317_obj+=jule::Str("\n", 1);
				}
				_iter_next_1a8c4e17d:;
				++it;
				goto _iter_begin_1a8c4e17d;
			}
			_iter_end_1a8c4e17d:;
		}
		_71317_obj+=jule::Str("\n\n", 2);
		_71317_obj+=_1a635307b_indent(&(*_self_));
		_71317_obj+=_1a639ee85_structure_constructor(&(*_self_), _71242_s);
		_71317_obj+=jule::Str("\n\n", 2);
	}
	_71317_obj+=_1a635307b_indent(&(*_self_));
	_71317_obj+=_1a63a00ea_structure_destructor(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n\n", 2);
	_71317_obj+=_1a635307b_indent(&(*_self_));
	_71317_obj+=_72213_out_ident;
	_71317_obj+=jule::Str("(void) = default;\n\n", 19);
	_71317_obj+=_1a63a0b34_structure_derive_defs_decls(&(*_self_), _71242_s);
	_71317_obj+=_1a63a0738_structure_operators(&(*_self_), _71242_s);
	_71317_obj+=jule::Str("\n", 1);
	_1a635371e_done_indent(&(*_self_));
	_71317_obj+=(_1a635307b_indent(&(*_self_)) + jule::Str("};", 2));
	return _71317_obj;
}



inline jule::Str _1a63a1382_structure_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab810b3d_Struct>& _76238_s) {
	jule::Str _76317_obj = jule::Str();
	{
		auto &expr = _76238_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8c54639:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a8c5475a_ins = *it;
			{
				_76317_obj+=_1a63a0eca_structure_ins_decl(&(*_self_), _1a8c5475a_ins);
			}
			_iter_next_1a8c54639:;
			++it;
			goto _iter_begin_1a8c54639;
		}
		_iter_end_1a8c54639:;
	}
	return _76317_obj;
}



inline jule::Str _1a63a165c_structure_decls(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _77217_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8c55d99:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8c55e21_s = *it;
			{
				if ((!(_1a8c55e21_s.get()._field_cpp_linked)) && (_1a8c55e21_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_77217_obj+=_1a63a1382_structure_decl(&(*_self_), _1a8c55e21_s);
					_77217_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a8c55d99:;
			++it;
			goto _iter_begin_1a8c55d99;
		}
		_iter_end_1a8c55d99:;
	}
	return _77217_obj;
}



inline jule::Str _1a63a1ae1_func_head(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab836218_FnIns>& _78233_f,jule::Bool _78244_ptr) {
	jule::Str _78317_obj = jule::Str();
	if (((!(_78244_ptr)) && _1dc252a9e_OPT_INLINE) && (!(_1ab83308e_is_entry_point(_78233_f.get()._field_decl.ptr())))) {
		_78317_obj+=jule::Str("inline ", 7);
	}
	_78317_obj+=static__1a63ad306_func_ins_result(_78233_f);
	if (_78244_ptr) {
		_78317_obj+=jule::Str("(*", 2);
		_78317_obj+=static__1a6345ea3_func_ins(_78233_f);
		_78317_obj+=jule::Str(")", 1);
	} else {
		_78317_obj+=jule::Str(" ", 1);
		_78317_obj+=static__1a6345ea3_func_ins(_78233_f);
	}
	return _78317_obj;
}



inline jule::Str _1a63a2075_func_decl(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab832324_Fn>& _80033_f,jule::Bool _80041_ptr) {
	jule::Str _80117_obj = jule::Str();
	{
		auto &expr = _80033_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8c5b0e1:;
		if (it != expr.end()) {
			jule::Ptr<_1ab836218_FnIns> _1a8c5b212_c = *it;
			{
				_80117_obj+=_1a635307b_indent(&(*_self_));
				_80117_obj+=_1a63a1ae1_func_head(&(*_self_), _1a8c5b212_c,_80041_ptr);
				_80117_obj+=_1a639ddda_params_decls(&(*_self_), _1a8c5b212_c.get()._field_params);
				_80117_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1a8c5b0e1:;
			++it;
			goto _iter_begin_1a8c5b0e1;
		}
		_iter_end_1a8c5b0e1:;
	}
	return _80117_obj;
}



inline jule::Str _1a63a242c_func_decls(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac58451a_Package>& _81234_pkg) {
	jule::Str _81317_obj = jule::Str();
	{
		auto &expr = _81234_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8c5d632:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8c5d753_file = *it;
			{
				{
					auto &expr = _1a8c5d753_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a8c5dde6:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a8c5de90_f = *it;
						{
							if ((!(_1a8c5de90_f.get()._field_cpp_linked)) && (_1a8c5de90_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_81317_obj+=_1a63a2075_func_decl(&(*_self_), _1a8c5de90_f,false);
							}
						}
						_iter_next_1a8c5dde6:;
						++it;
						goto _iter_begin_1a8c5dde6;
					}
					_iter_end_1a8c5dde6:;
				}
			}
			_iter_next_1a8c5d632:;
			++it;
			goto _iter_begin_1a8c5d632;
		}
		_iter_end_1a8c5d632:;
	}
	return _81317_obj;
}



inline void _1a63a266e_build_trait_map(_1a639d47d_ObjectCoder* _self_) {
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8c6090e:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8c60997_u = *it;
			{
				if ((!(_1a8c60997_u.get()._field_cpp_linked))) {
					_1a639e605_trait_decls(&(*_self_), _1a8c60997_u.get()._field_package);
				}
			}
			_iter_next_1a8c6090e:;
			++it;
			goto _iter_begin_1a8c6090e;
		}
		_iter_end_1a8c6090e:;
	}
	_1a639e605_trait_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
}



inline void _1a63a28b1_process_traits(_1a639d47d_ObjectCoder* _self_) {
	_1a63a266e_build_trait_map(&(*_self_));
}



inline jule::Str _1a63a2b8b_decls(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _83917_obj = jule::Str();
	_83917_obj+=(*_self_)._field_trait_declarations;
	_83917_obj+=_1a639e8d0_structure_plain_decls(&(*_self_));
	_83917_obj+=_1a63a165c_structure_decls(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8c64061:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8c6410a_u = *it;
			{
				if ((!(_1a8c6410a_u.get()._field_cpp_linked))) {
					_83917_obj+=_1a63a242c_func_decls(&(*_self_), _1a8c6410a_u.get()._field_package);
				}
			}
			_iter_next_1a8c64061:;
			++it;
			goto _iter_begin_1a8c64061;
		}
		_iter_end_1a8c64061:;
	}
	_83917_obj+=_1a63a242c_func_decls(&(*_self_), (*_self_)._field_ir.get()._field_main);
	if (((*_self_)._field_trait_map.len() > 0LL)) {
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data_t;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_wrappers;
		_83917_obj+=jule::Str("\n\n", 2);
		_83917_obj+=(*_self_)._field_trait_data;
	}
	return _83917_obj;
}



inline jule::Str _1a63a3120_pkg_globals(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac58451a_Package>& _86535_p,jule::Str& _86553_global_initializers) {
	jule::Str _86617_obj = jule::Str();
	{
		auto &expr = _86535_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8c67c46:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8c67d67_f = *it;
			{
				{
					auto &expr = _1a8c67d67_f.get()._field_vars;
					auto it = expr.begin();
					_iter_begin_1a8c6850a:;
					if (it != expr.end()) {
						jule::Ptr<_1a588601b_Var> _1a8c685a4_v = *it;
						{
							if (((_1a8c685a4_v.get()._field_token._field_id != static_cast<jule::U64>(0LLU)) && (!(_1a8c685a4_v.get()._field_cpp_linked))) && (!(_1a8c685a4_v.get()._field_constant))) {
								_86617_obj+=static__1a63adc30_kind(_1a8c685a4_v.get()._field_kind.get()._field_kind);
								_86617_obj+=jule::Str(" ", 1);
								if (_1a8c685a4_v.get()._field_reference) {
									_86617_obj+=jule::Str("&", 1);
								}
								_86617_obj+=static__1a6347306_var(_1a8c685a4_v);
								_86617_obj+=jule::Str(";\n", 2);
								_86553_global_initializers+=_1a635307b_indent(&(*_self_));
								_86553_global_initializers+=static__1a6347306_var(_1a8c685a4_v);
								if ((_1a8c685a4_v.get()._field_value != nullptr) && (_1a8c685a4_v.get()._field_value.get()._field_expr != nullptr)) {
									if (_1a8c685a4_v.get()._field_value.get()._field_data.get()._field_model != jule::Any(jule::Any(nullptr))) {
										_86553_global_initializers+=jule::Str(" = ", 3);
										_86553_global_initializers+=_1a633e5b7_val((*_self_)._field_ec.ptr(), _1a8c685a4_v.get()._field_value);
									}
								} else {
									_86553_global_initializers+=jule::Str(" = ", 3);
									_86553_global_initializers+=_1a633e96e_init_expr((*_self_)._field_ec.ptr(), _1a8c685a4_v.get()._field_kind.get()._field_kind);
								}
								_86553_global_initializers+=jule::Str(";\n", 2);
							}
						}
						_iter_next_1a8c6850a:;
						++it;
						goto _iter_begin_1a8c6850a;
					}
					_iter_end_1a8c6850a:;
				}
			}
			_iter_next_1a8c67c46:;
			++it;
			goto _iter_begin_1a8c67c46;
		}
		_iter_end_1a8c67c46:;
	}
	return _86617_obj;
}



inline jule::Str _1a63a34c7_globals(_1a639d47d_ObjectCoder* _self_,jule::Str& _89731_global_initializers) {
	jule::Str _89817_obj = jule::Str();
	_1a635060b_add_indent(&(*_self_));
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8c6ed5d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8c6ede6_u = *it;
			{
				if ((!(_1a8c6ede6_u.get()._field_cpp_linked))) {
					_89817_obj+=_1a63a3120_pkg_globals(&(*_self_), _1a8c6ede6_u.get()._field_package,_89731_global_initializers);
				}
			}
			_iter_next_1a8c6ed5d:;
			++it;
			goto _iter_begin_1a8c6ed5d;
		}
		_iter_end_1a8c6ed5d:;
	}
	_89817_obj+=_1a63a3120_pkg_globals(&(*_self_), (*_self_)._field_ir.get()._field_main,_89731_global_initializers);
	_1a635371e_done_indent(&(*_self_));
	return _89817_obj;
}



inline jule::Str _1a63a387e_func(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab832324_Fn>& _91128_f) {
	jule::Str _91217_obj = jule::Str();
	{
		auto &expr = _91128_f.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8c722b1:;
		if (it != expr.end()) {
			jule::Ptr<_1ab836218_FnIns> _1a8c723d2_ins = *it;
			{
				_91217_obj+=_1a63a1ae1_func_head(&(*_self_), _1a8c723d2_ins,false);
				_91217_obj+=_1a639dc75_params_ins(&(*_self_), _1a8c723d2_ins.get()._field_params);
				_91217_obj+=jule::Str(" ", 1);
				_91217_obj+=_1a62bd458_func_scope((*_self_)._field_sc.ptr(), _1a8c723d2_ins);
				if ((_1a8c723d2_ins.get()._field_scope != nullptr)) {
					_91217_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1a8c722b1:;
			++it;
			goto _iter_begin_1a8c722b1;
		}
		_iter_end_1a8c722b1:;
	}
	return _91217_obj;
}



inline jule::Str _1a63a3c36_pkg_funcs(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac58451a_Package>& _92633_p) {
	jule::Str _92717_obj = jule::Str();
	{
		auto &expr = _92633_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8c75182:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8c752a3_f = *it;
			{
				{
					auto &expr = _1a8c752a3_f.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a8c75946:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> _1a8c759e0_f = *it;
						{
							if ((!(_1dc253e57_TEST)) && _1a63a7c6d_has_directive(_1a8c759e0_f.get()._field_directives,jule::Str("test", 4))) {
								goto _iter_next_1a8c75946;
							}
							if ((!(_1a8c759e0_f.get()._field_cpp_linked)) && (_1a8c759e0_f.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
								_92717_obj+=_1a63a387e_func(&(*_self_), _1a8c759e0_f);
								_92717_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_1a8c75946:;
						++it;
						goto _iter_begin_1a8c75946;
					}
					_iter_end_1a8c75946:;
				}
			}
			_iter_next_1a8c75182:;
			++it;
			goto _iter_begin_1a8c75182;
		}
		_iter_end_1a8c75182:;
	}
	return _92717_obj;
}



inline jule::Str _1a63a40dd_structure_methods(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _94341_s) {
	jule::Str _94417_obj = jule::Str();
	{
		auto &expr = _94341_s.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1a8c784c6:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a8c785e7_f = *it;
			{
				_94417_obj+=_1a635307b_indent(&(*_self_));
				_94417_obj+=_1a63a387e_func(&(*_self_), _1a8c785e7_f);
				_94417_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a8c784c6:;
			++it;
			goto _iter_begin_1a8c784c6;
		}
		_iter_end_1a8c784c6:;
	}
	return _94417_obj;
}



inline jule::Str _1a63a4495_structure_ostream(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _95441_s) {
	jule::Str _95517_obj = jule::Str();
	_95517_obj+=_1a635307b_indent(&(*_self_));
	_95517_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48);
	_95517_obj+=static__1a6346bda_structure_ins(_95441_s);
	_95517_obj+=jule::Str(" _Src) {\n", 9);
	_1a635060b_add_indent(&(*_self_));
	_95517_obj+=_1a635307b_indent(&(*_self_));
	jule::Ptr<_1ab832324_Fn> _96317_fts = _1ab815934_find_method(_95441_s.ptr(), jule::Str("to_str", 6),false);
	if (static__1a5887a23_to_str(_96317_fts)) {
		_95517_obj+=jule::Str("_Stream << ", 11);
		_95517_obj+=static__1a6345b95_func(_96317_fts);
		_95517_obj+=jule::Str("(&_Src);\n", 9);
	} else {
		_95517_obj+=jule::Str("_Stream << \"", 12);
		_95517_obj+=_95441_s.get()._field_decl.get()._field_ident;
		_95517_obj+=jule::Str("{\";\n", 4);
		{
			auto &expr = _95441_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c7d883:;
			if (it != expr.end()) {
				jule::I64 _1a8c7db2a_i = it - expr.begin();
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c7dcc3_f = *it;
				{
					_95517_obj+=_1a635307b_indent(&(*_self_));
					_95517_obj+=jule::Str("_Stream << \"", 12);
					_95517_obj+=_1a8c7dcc3_f.get()._field_decl.get()._field_ident;
					_95517_obj+=jule::Str(":", 1);
					jule::Ptr<_1ab814515_StructIns> _98021_strct = _1a5917c29_strct(_1a8c7dcc3_f.get()._field_kind.ptr());
					if (((_98021_strct != nullptr) && (_98021_strct.get()._field_decl != nullptr)) && _98021_strct.get()._field_decl.get()._field_cpp_linked) {
						_95517_obj+=jule::Str(" cpp.", 5);
						_95517_obj+=static__1a6346ee8_field(_1a8c7dcc3_f.get()._field_decl);
						_95517_obj+=jule::Str("\"", 1);
					} else {
						_95517_obj+=jule::Str("\" << _Src.", 10);
						_95517_obj+=static__1a6346ee8_field(_1a8c7dcc3_f.get()._field_decl);
					}
					if ((_1a8c7db2a_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_95441_s.get()._field_fields.len()))) {
						_95517_obj+=jule::Str(" << \", \"", 8);
					}
					_95517_obj+=jule::Str(";\n", 2);
				}
				_iter_next_1a8c7d883:;
				++it;
				_1a8c7db2a_i++;
				goto _iter_begin_1a8c7d883;
			}
			_iter_end_1a8c7d883:;
		}
		_95517_obj+=_1a635307b_indent(&(*_self_));
		_95517_obj+=jule::Str("_Stream << \"}\";\n", 16);
	}
	_95517_obj+=_1a635307b_indent(&(*_self_));
	_95517_obj+=jule::Str("return _Stream;\n", 16);
	_1a635371e_done_indent(&(*_self_));
	_95517_obj+=_1a635307b_indent(&(*_self_));
	_95517_obj+=jule::Str("}", 1);
	return _95517_obj;
}



inline jule::Str _1a63a484c_structure_derive_defs(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _100845_s) {
	jule::Str _100917_obj = jule::Str();
	if (_1ab812ada_is_derives(_100845_s.get()._field_decl.ptr(), jule::Str("Clone", 5))) {
		_100917_obj+=_1a635307b_indent(&(*_self_));
		_100917_obj+=static__1a6342db2_clone_func_def(_100845_s.get()._field_decl);
		_100917_obj+=jule::Str("{\n", 2);
		_1a635060b_add_indent(&(*_self_));
		_100917_obj+=_1a635307b_indent(&(*_self_));
		_100917_obj+=static__1a63ac2b1_structure_ins(_100845_s);
		_100917_obj+=jule::Str(" clone;\n", 8);
		{
			auto &expr = _100845_s.get()._field_fields;
			auto it = expr.begin();
			_iter_begin_1a8c8611b:;
			if (it != expr.end()) {
				jule::Ptr<_1ab8137bc_FieldIns> _1a8c8712d_f = *it;
				{
					jule::Str _101921_ident = static__1a6346ee8_field(_1a8c8712d_f.get()._field_decl);
					_100917_obj+=_1a635307b_indent(&(*_self_));
					_100917_obj+=jule::Str("clone.", 6);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(" = jule::clone(this->", 21);
					_100917_obj+=_101921_ident;
					_100917_obj+=jule::Str(");\n", 3);
				}
				_iter_next_1a8c8611b:;
				++it;
				goto _iter_begin_1a8c8611b;
			}
			_iter_end_1a8c8611b:;
		}
		_100917_obj+=_1a635307b_indent(&(*_self_));
		_100917_obj+=jule::Str("return clone;\n", 14);
		_1a635371e_done_indent(&(*_self_));
		_100917_obj+=_1a635307b_indent(&(*_self_));
		_100917_obj+=jule::Str("}", 1);
	}
	return _100917_obj;
}



inline jule::Str _1a63a4c04_structure_ins(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab814515_StructIns>& _103737_s) {
	jule::Str _103817_obj = _1a63a40dd_structure_methods(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_1a63a484c_structure_derive_defs(&(*_self_), _103737_s);
	_103817_obj+=jule::Str("\n\n", 2);
	_103817_obj+=_1a63a4495_structure_ostream(&(*_self_), _103737_s);
	return _103817_obj;
}



inline jule::Str _1a63a50ab_structure(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ab810b3d_Struct>& _104733_s) {
	jule::Str _104817_obj = jule::Str();
	{
		auto &expr = _104733_s.get()._field_instances;
		auto it = expr.begin();
		_iter_begin_1a8c8c892:;
		if (it != expr.end()) {
			jule::Ptr<_1ab814515_StructIns> _1a8c8c9b3_ins = *it;
			{
				_104817_obj+=_1a63a4c04_structure_ins(&(*_self_), _1a8c8c9b3_ins);
				_104817_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_1a8c8c892:;
			++it;
			goto _iter_begin_1a8c8c892;
		}
		_iter_end_1a8c8c892:;
	}
	return _104817_obj;
}



inline jule::Str _1a63a5386_structures(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _105817_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_ordered._field_structs;
		auto it = expr.begin();
		_iter_begin_1a8c8e311:;
		if (it != expr.end()) {
			jule::Ptr<_1ab810b3d_Struct> _1a8c8e388_s = *it;
			{
				if ((!(_1a8c8e388_s.get()._field_cpp_linked)) && (_1a8c8e388_s.get()._field_token._field_id != static_cast<jule::U64>(0LLU))) {
					_105817_obj+=_1a63a50ab_structure(&(*_self_), _1a8c8e388_s);
					_105817_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_1a8c8e311:;
			++it;
			goto _iter_begin_1a8c8e311;
		}
		_iter_end_1a8c8e311:;
	}
	return _105817_obj;
}



inline jule::Str _1a63a5661_funcs(_1a639d47d_ObjectCoder* _self_) {
	jule::Str _107017_obj = jule::Str();
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8c91654:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8c916ed_u = *it;
			{
				if ((!(_1a8c916ed_u.get()._field_cpp_linked))) {
					_107017_obj+=_1a63a3c36_pkg_funcs(&(*_self_), _1a8c916ed_u.get()._field_package);
				}
			}
			_iter_next_1a8c91654:;
			++it;
			goto _iter_begin_1a8c91654;
		}
		_iter_end_1a8c91654:;
	}
	_107017_obj+=_1a63a3c36_pkg_funcs(&(*_self_), (*_self_)._field_ir.get()._field_main);
	return _107017_obj;
}



inline void _1a63a5a5c_push_init(_1a639d47d_ObjectCoder* _self_,jule::Ptr<_1ac58451a_Package>& _108029_pkg,jule::Str& _108049_obj) {
	
	{
		auto &expr = _108029_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1a8c93d93:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8c93eb4_file = *it;
			{
				{
					auto &expr = _1a8c93eb4_file.get()._field_funcs;
					auto it = expr.begin();
					_iter_begin_1a8c94657:;
					if (it != expr.end()) {
						jule::Ptr<_1ab832324_Fn> &_1a8c94701_f = *it;
						{
							if ((_1a8c94701_f.get()._field_ident == jule::Str("init", 4))) {
								_108049_obj+=jule::Str("\n\t", 2);
								_108049_obj+=static__1a6345b95_func(_1a8c94701_f);
								_108049_obj+=jule::Str("();", 3);
							}
						}
						_iter_next_1a8c94657:;
						++it;
						goto _iter_begin_1a8c94657;
					}
					_iter_end_1a8c94657:;
				}
			}
			_iter_next_1a8c93d93:;
			++it;
			goto _iter_begin_1a8c93d93;
		}
		_iter_end_1a8c93d93:;
	}
}



inline jule::Str _1a63a5e14_init_caller(_1a639d47d_ObjectCoder* _self_,jule::Str& _109431_global_initializers) {
	jule::Str _109517_obj = jule::Str("void ", 5);
	_109517_obj+=jule::Str("__jule_call_initializers", 24);
	_109517_obj+=jule::Str("(void) {\n", 9);
	_109517_obj+=_109431_global_initializers;
	{
		auto &expr = (*_self_)._field_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8c96747:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1a8c96802_u = *it;
			{
				if ((!(_1a8c96802_u.get()._field_cpp_linked))) {
					_1a63a5a5c_push_init(&(*_self_), _1a8c96802_u.get()._field_package,_109517_obj);
				}
			}
			_iter_next_1a8c96747:;
			++it;
			goto _iter_begin_1a8c96747;
		}
		_iter_end_1a8c96747:;
	}
	_1a63a5a5c_push_init(&(*_self_), (*_self_)._field_ir.get()._field_main,_109517_obj);
	_109517_obj+=jule::Str("\n}", 2);
	return _109517_obj;
}



inline void _1a63a6233_append_standard(_1a639d47d_ObjectCoder* _self_,jule::Str& _111339_obj_code) {
	_1a6397378_Time _111413_time = static__1a6397bb4_now();
	_1a63968c7_AbsTime _111513_abs = _1a6399666_abs(&_111413_time);
	jule::Str _111717_time_str = jule::Str();
	_111717_time_str+=_1ac4456a6_fmt_uint(_111513_abs._field_day,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_1ac4456a6_fmt_uint(_111513_abs._field_month,10LL);
	_111717_time_str+=jule::Str("/", 1);
	_111717_time_str+=_1ac4456a6_fmt_uint(_111513_abs._field_year,10LL);
	_111717_time_str+=jule::Str(" ", 1);
	_111717_time_str+=_1ac4456a6_fmt_uint(_111513_abs._field_hour,10LL);
	_111717_time_str+=jule::Str(".", 1);
	_111717_time_str+=_1ac4456a6_fmt_uint(_111513_abs._field_minute,10LL);
	_111717_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _112917_s = jule::Str();
	_112917_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_112917_s+=jule::Str("// JuleC version: ", 18);
	_112917_s+=jule::Str("jule0.0.10 @master", 18);
	_112917_s+=jule::Str("\n", 1);
	_112917_s+=jule::Str("// Date: ", 9);
	_112917_s+=_111717_time_str;
	_112917_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_112917_s+=(*_self_)._field_info._field_compiler;
	_112917_s+=jule::Str(" ", 1);
	_112917_s+=(*_self_)._field_info._field_compiler_command;
	_112917_s+=jule::Str("\n\n", 2);
	if (_1dc2523c8_PRODUCTION) {
		_112917_s+=jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34);
	}
	if ((!(_1dc254111_RC))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43);
	}
	if ((!(_1dc254353_SAFETY))) {
		_112917_s+=jule::Str("#define __JULE_DISABLE__SAFETY\n", 31);
	}
	_112917_s+=jule::Str("\n\n#include \"", 12);
	_112917_s+=_1c4823396_PATH_API;
	_112917_s+=jule::Str("\"\n\n", 3);
	_112917_s+=_111339_obj_code;
	_112917_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 149);
	if (_1dc253e57_TEST) {
		_112917_s+=jule::Str("test_point();", 13);
	} else {
		_112917_s+=jule::Str("entry_point();", 14);
	}
	_112917_s+=jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28);
	_111339_obj_code=_112917_s;
}



inline jule::Str _1a63a650d_serialize(_1a639d47d_ObjectCoder* _self_) {
	_1a639e1b5_prepare_structures(&(*_self_));
	_1a63a28b1_process_traits(&(*_self_));
	jule::Str _118217_global_initializers = jule::Str();
	jule::Str _118317_obj = jule::Str();
	_118317_obj+=_1a637959c_links(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1a63a2b8b_decls(&(*_self_));
	_118317_obj+=jule::Str("\n\n", 2);
	_118317_obj+=_1a63a34c7_globals(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1a63a5386_structures(&(*_self_));
	_118317_obj+=_1a63a5661_funcs(&(*_self_));
	_118317_obj+=jule::Str("\n", 1);
	_118317_obj+=_1a63a5e14_init_caller(&(*_self_), _118217_global_initializers);
	_118317_obj+=jule::Str("\n", 1);
	return _118317_obj;
}







std::ostream &operator<<(std::ostream &_Stream, _1a639d47d_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "indent_buffer:" << _Src._field_indent_buffer << ", ";
	_Stream << "trait_declarations:" << _Src._field_trait_declarations << ", ";
	_Stream << "trait_wrappers:" << _Src._field_trait_wrappers << ", ";
	_Stream << "trait_data:" << _Src._field_trait_data << ", ";
	_Stream << "trait_data_t:" << _Src._field_trait_data_t << ", ";
	_Stream << "trait_map:" << _Src._field_trait_map << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac447d3a_to_str(_1ac44770d_Trait* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1ac4481e2_equals(jule::Ptr<_1ac44770d_Trait> _self_,jule::Ptr<_1a5913e9a_TypeKind> _2626_other) {
	jule::Ptr<_1ac44770d_Trait> _2713_trt = _1a5918004_trt(_2626_other.ptr());
	return _self_ == _2713_trt;
}



inline jule::Bool _1ac4485bb_is_builtin(_1ac44770d_Trait* _self_) {
	return (*_self_)._field_token._field_id == static_cast<jule::U64>(0LLU);
}



inline jule::Ptr<_1ab832324_Fn> _1ac448973_find_method(_1ac44770d_Trait* _self_,jule::Str _4034_ident) {
	{
		auto &expr = (*_self_)._field_methods;
		auto it = expr.begin();
		_iter_begin_1a7bae09a:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1a7bae166_f = *it;
			{
				if (_1a7bae166_f.get()._field_ident == _4034_ident) {
					return _1a7bae166_f;
				}
			}
			_iter_next_1a7bae09a:;
			++it;
			goto _iter_begin_1a7bae09a;
		}
		_iter_end_1a7bae09a:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44770d_Trait _Src) {
	_Stream << _1ac447d3a_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1ac449ad9_auto_expr(_1ac44948a_EnumItem* _self_) {
	return ((*_self_)._field_value == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44948a_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ac44a90e_to_str(_1ac44a337_Enum* _self_) {
	return (*_self_)._field_ident;
}



inline jule::Bool _1ac44acb6_equals(jule::Ptr<_1ac44a337_Enum> _self_,jule::Ptr<_1a5913e9a_TypeKind> _3826_other) {
	jule::Ptr<_1ac44a337_Enum> _3913_enm = _1a59170be_enm(_3826_other.ptr());
	return _self_ == _3913_enm;
}



inline jule::Ptr<_1ac44948a_EnumItem> _1ac44b2a0_find_item(_1ac44a337_Enum* _self_,jule::Str _4732_ident) {
	{
		auto &expr = (*_self_)._field_items;
		auto it = expr.begin();
		_iter_begin_1a7bb319d:;
		if (it != expr.end()) {
			jule::Ptr<_1ac44948a_EnumItem> _1a7bb3269_item = *it;
			{
				if (_1a7bb3269_item.get()._field_ident == _4732_ident) {
					return _1a7bb3269_item;
				}
			}
			_iter_next_1a7bb319d:;
			++it;
			goto _iter_begin_1a7bb319d;
		}
		_iter_end_1a7bb319d:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac44a337_Enum _Src) {
	_Stream << _1ac44a90e_to_str(&_Src);
	return _Stream;
}



inline jule::Bool _1dd5ead7a_is_decl(_1dd582b25_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09cb7e_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_1aa096b67_FnDecl>>() || _match_expr.type_is<jule::Ptr<_1aa09de7c_StructDecl>>() || _match_expr.type_is<jule::Ptr<_1aa09e631_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_1aa09a330_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_1aa09d5db_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_1aa09ba29_UseDecl>>() || _match_expr.type_is<jule::Ptr<_1aa097085_VarDecl>>() || _match_expr.type_is<jule::Ptr<_1dd583461_TypeDecl>>()) {
			_case_begin_1a6c9855e:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a6c98817:;
			{
				return false;
			}
		}
		_match_end_1a6c987b2:;
	}
}



inline jule::Bool _1aa006b4e_is_directive(_1dd582b25_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1dd583043_Directive>>()) {
			_case_begin_1a6c99c9c:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a6c9a550:;
			{
				return false;
			}
		}
		_match_end_1a6c9a4ea:;
	}
}



inline jule::Bool _1aa01dc98_is_impl(_1dd582b25_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09ecd5_Impl>>()) {
			_case_begin_1a6c9b067:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a6c9b474:;
			{
				return false;
			}
		}
		_match_end_1a6c9b41e:;
	}
}



inline jule::Bool _1aa029c82_is_use_decl(_1dd582b25_Node* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type_is<jule::Ptr<_1aa09ba29_UseDecl>>()) {
			_case_begin_1a6c9bd59:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a6c9c3ba:;
			{
				return false;
			}
		}
		_match_end_1a6c9c365:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, _1dd582b25_Node _Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Bool> _1a63c63a7_parse_integer_0(_1a63c5a7c_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::I64 _18684_x = jule::I64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_1a8d2a875:;
			{
				_18684_x = 0LL;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1a8d2aed5:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1a8d2b04b:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1a8d2b0b2:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1a8d2a567:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a8d2a501:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1a8d2a435:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}

inline std::tuple<jule::U64,jule::Bool> _1a63c63a7_parse_integer_1(_1a63c5a7c_ArgParser* _self_,jule::Str& _18632_s,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)> _18640_parser) {
	jule::U64 _18684_x = jule::U64();
	jule::Bool _18690_ok = jule::Bool();
	{
		
		if (_18632_s.empty()) {
			_case_begin_1a8d34dbd:;
			{
				_18684_x = 0LLU;
				_18690_ok = false;
				return std::make_tuple(_18684_x,_18690_ok);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0x", 2))) {
			_case_begin_1a8d3552d:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),16LL);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0b", 2))) {
			_case_begin_1a8d35594:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),2LL);
			}
		}
		else if (_1c471294a_has_prefix(_18632_s,jule::Str("0o", 2))) {
			_case_begin_1a8d3560a:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(2LL),8LL);
			}
		}
		else if (_18632_s[0LL] == '0') {
			_case_begin_1a8d34ab0:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s.slice(1LL),8LL);
			}
		}
		else {
			_case_begin_1a8d34a49:;
			{
				std::tie(_18684_x,_18690_ok) = _18640_parser(_18632_s,10LL);
			}
		}
		_match_end_1a8d3497d:;
	}
	return std::make_tuple(_18684_x,_18690_ok);
}



inline jule::Str _1a63c6682_get_data(_1a63c5a7c_ArgParser* _self_) {
	if (((*_self_)._field_i + 1LL) >= static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len()))) {
		return jule::Str();
	}
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];
}



inline jule::VoidExceptional _1a63c69a1_process_flag(_1a63c5a7c_ArgParser* _self_,jule::Trait<_1a63c0dda_CommonFlag>& _21236_flag) {
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a63c12d6_Flag_3>>()) {
			_case_begin_1a8d22bad:;
			{
				jule::Ptr<_1a63c12d6_Flag_3> _21521_bf = _21236_flag.operator jule::Ptr<_1a63c12d6_Flag_3>();
				(*(_21521_bf.get()._field__data))=(!(_21521_bf.get()._field__default));
				return jule::VoidExceptional();
			}
		}
		_match_end_1a8d22ac0:;
	}
	jule::Str _22013_data = _1a63c6682_get_data(&(*_self_));
	if (_22013_data.empty()) {
		return jule::VoidExceptional(((jule::Str("--", 2) + _1a63c0dda_CommonFlag_mptr_data[(_21236_flag).type_offset]._1a63c07ad_name(_21236_flag)) + jule::Str(": expression missing", 20)));
	}
	{
		auto &_match_expr{ _21236_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1a63c12d6_Flag_0>>()) {
			_case_begin_1a8d242ec:;
			{
				jule::Ptr<_1a63c12d6_Flag_0> _22721_intf = _21236_flag.operator jule::Ptr<_1a63c12d6_Flag_0>();
				jule::Bool _22833_ok;
				std::tie((*(_22721_intf.get()._field__data)),_22833_ok) = _1a63c63a7_parse_integer_0(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::I64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _22872_s,jule::I64 _22880_base) mutable -> std::tuple<jule::I64,jule::Bool> {
					return std::make_tuple(static_cast<jule::I64>(({
						auto except = _1ac05d0e3_parse_int(_22872_s,_22880_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LL,false);
							return std::make_tuple(0LL,false);
						} jule::I64();});
					})),true);
				}));
				if ((!(_22833_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a63c0dda_CommonFlag_mptr_data[(_21236_flag).type_offset]._1a63c07ad_name(_21236_flag)) + jule::Str(": expression must be valid signed integer", 41)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a63c12d6_Flag_1>>()) {
			_case_begin_1a8d24d69:;
			{
				jule::Ptr<_1a63c12d6_Flag_1> _23521_uintf = _21236_flag.operator jule::Ptr<_1a63c12d6_Flag_1>();
				jule::Bool _23634_ok;
				std::tie((*(_23521_uintf.get()._field__data)),_23634_ok) = _1a63c63a7_parse_integer_1(&(*_self_), _22013_data,jule::Fn<std::tuple<jule::U64,jule::Bool>(jule::Str,jule::I64)>([=](jule::Str _23673_s,jule::I64 _23681_base) mutable -> std::tuple<jule::U64,jule::Bool> {
					return std::make_tuple(static_cast<jule::U64>(({
						auto except = _1abea2bd6_parse_uint(_23673_s,_23681_base,64LL);
						(except.ok()) ? (except.result) : ({{
							return std::make_tuple(0LLU,false);
							return std::make_tuple(0LLU,false);
						} jule::U64();});
					})),true);
				}));
				if ((!(_23634_ok))) {
					return jule::VoidExceptional(((jule::Str("--", 2) + _1a63c0dda_CommonFlag_mptr_data[(_21236_flag).type_offset]._1a63c07ad_name(_21236_flag)) + jule::Str(": expression must be valid unsigned integer", 43)));
				}
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a63c12d6_Flag_2>>()) {
			_case_begin_1a8d24dd0:;
			{
				jule::Ptr<_1a63c12d6_Flag_2> _24321_ff = _21236_flag.operator jule::Ptr<_1a63c12d6_Flag_2>();
				(*(_24321_ff.get()._field__data))=static_cast<jule::F64>(({
					auto except = _1ac43a448_parse_float(_22013_data,64LL);
					(except.ok()) ? (except.result) : ({{
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a63c0dda_CommonFlag_mptr_data[(_21236_flag).type_offset]._1a63c07ad_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
						return jule::VoidExceptional(((jule::Str("--", 2) + _1a63c0dda_CommonFlag_mptr_data[(_21236_flag).type_offset]._1a63c07ad_name(_21236_flag)) + jule::Str(": expression must be valid floating-point", 41)));
					} jule::F64();});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a63c12d6_Flag_4>>()) {
			_case_begin_1a8d24e46:;
			{
				(*(_21236_flag.operator jule::Ptr<_1a63c12d6_Flag_4>().get()._field__data))=_22013_data;
			}
		}
		_match_end_1a8d24110:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a63c6cc0_single_dash(_1a63c5a7c_ArgParser* _self_,jule::Str& _25231_arg) {
	jule::Slice<jule::I32> _25313_rarg = static_cast<jule::Slice<jule::I32>>(_25231_arg).slice(1LL);
	{
		auto &expr = _25313_rarg;
		auto it = expr.begin();
		_iter_begin_1a8d3c128:;
		if (it != expr.end()) {
			jule::I32 &_1a8d3c205_r = *it;
			{
				jule::Trait<_1a63c0dda_CommonFlag> _25521_flag = _1a63c3805_find_flag_short(&(*_self_)._field_set, _1a8d3c205_r);
				if ((_25521_flag == nullptr)) {
					return jule::VoidExceptional((_25231_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_1a8d3c205_r));
				}
				({
					auto except = _1a63c69a1_process_flag(&(*_self_), _25521_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a8d3c128:;
			++it;
			goto _iter_begin_1a8d3c128;
		}
		_iter_end_1a8d3c128:;
	} return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a63c70de_double_dash(_1a63c5a7c_ArgParser* _self_,jule::Str& _26431_arg) {
	jule::Trait<_1a63c0dda_CommonFlag> _26517_flag = _1a63c344d_find_flag(&(*_self_)._field_set, _26431_arg.slice(2LL));
	if ((_26517_flag == nullptr)) {
		return jule::VoidExceptional((_26431_arg + jule::Str(": flag is not exist", 19)));
	}
	({
		auto except = _1a63c69a1_process_flag(&(*_self_), _26517_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	}); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a63c7331_try_arg(_1a63c5a7c_ArgParser* _self_) {
	jule::Str _27413_arg = (*_self_)._field_args[(*_self_)._field_i];
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();
	}
	if (_27413_arg[0LL] == '-') {
		if (((*_self_)._field_args.len() > 1LL) && (_27413_arg[1LL] == '-')) {
			({
				auto except = _1a63c70de_double_dash(&(*_self_), _27413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();
		}
		({
			auto except = _1a63c6cc0_single_dash(&(*_self_), _27413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();
	}
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_27413_arg); return jule::VoidExceptional(); }



inline jule::VoidExceptional _1a63c7573_parse(_1a63c5a7c_ArgParser* _self_) {
	for (; (*_self_)._field_i < static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_args.len())); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a63c7331_try_arg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a8d3e12a:;
	}
	_iter_end_1a8d3e12a:; return jule::VoidExceptional(); }







std::ostream &operator<<(std::ostream &_Stream, _1a63c5a7c_ArgParser _Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1dc2530dd_push_opt_level(jule::I64 _3323_level) {
	_1dc2524e9_OPT_COPY=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc25261a_OPT_DEADCODE=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc25273b_OPT_APPEND=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc25285c_OPT_MATH=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc25297d_OPT_ACCESS=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc252a9e_OPT_INLINE=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc252cd0_OPT_PTR=_3323_level >= static_cast<jule::I64>(1LL);
	_1dc252e01_OPT_COND=_3323_level >= static_cast<jule::I64>(1LL);
}



inline void _1dc339636_free(void* _4524_ptr) {
	free(_4524_ptr);
}



inline jule::Str _1dc361905_byte_ptr_to_str(jule::U8* _6931_s) {
	if ((_6931_s == nullptr)) {
		return jule::Str();
	}
	{
		return static_cast<jule::Str>(_6931_s);
	}
}



inline jule::I64 _1dc311e27_get_last_errno(void) {
	return errno;
}



inline jule::I64 _1dc327c95_stat(jule::U8* _4020_path,struct stat* _4037_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4020_path)), _4037_stat));
}



inline jule::I64 _1dc3362ae_open(jule::U8* _4520_path,jule::I64 _4533_flag,jule::I64 _4544_mode) {
	return static_cast<jule::I64>(open(((char*)(_4520_path)),_4533_flag,_4544_mode));
}



inline jule::U8* _1dc322c7e_getcwd(jule::U8* _5122_buff,jule::U64 _5135_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5122_buff)),_5135_bufflen)));
}



inline DIR* _1dc362560_opendir(jule::U8* _5623_path) {
	return opendir(((char*)(_5623_path)));
}



inline struct dirent* _1dc3626c5_readdir(DIR* _5927_dir) {
	return readdir(_5927_dir);
}



inline jule::I64 _1dc362a6b_closedir(DIR* _6228_dir) {
	return static_cast<jule::I64>(closedir(_6228_dir));
}



inline jule::I64 _1dc362eab_mkdir(jule::U8* _7121_path,jule::I64 _7134_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7121_path)),_7134_mode));
}



inline jule::I64 _1dc363121_rmdir(jule::U8* _7621_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_7621_path))));
}



inline jule::I64 _1dc363286_unlink(jule::U8* _7922_path) {
	return static_cast<jule::I64>(unlink(((char*)(_7922_path))));
}



inline jule::I64 _1dc3719d1_seek(jule::I64 _2613_handle,jule::I64 _2626_offset,jule::I64 _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::I64 _1dc371e98_read(jule::I64 _3120_handle,void* _3137_buff,jule::U64 _3152_n) {
	return static_cast<jule::I64>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::I64 _1dc37233e_close(jule::I64 _3614_handle) {
	return static_cast<jule::I64>(close(_3614_handle));
}



inline jule::I64 _1dc372806_write(jule::I64 _3921_handle,void* _3934_buff,jule::U64 _3949_n) {
	return static_cast<jule::I64>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _1dc372a7b_exit(jule::I64 _4413_code) {
	exit(_4413_code);
}



inline jule::I64 _1dc401698_get_last_os_error(void) {
	jule::I64 _309_err = _1dc311e27_get_last_errno();
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a643de69:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a643ded0:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a643e046:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a643e0ac:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a643e266:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a643e2cc:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a643e343:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else {
			_case_begin_1a643de03:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a643dd9d:;
	}
}



inline jule::Slice<jule::Str> _1dc401da2_args(void) {
	return jule::args();
}



inline jule::Exceptional<jule::Str> _1dc402204_working_dir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(),({
		auto except = _1dc403029___getwd();
		(except.ok()) ? (except.result) : ({{
			return jule::Exceptional<jule::Str>(except.error);
			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));
}



inline jule::Exceptional<jule::Str> _1dc403029___getwd(void) {
	jule::U8* _1113_buff = _1dc322c7e_getcwd(nullptr,0LLU);
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(_1dc401698_get_last_os_error());
	}
	jule::Str _159_pwd = _1dc361905_byte_ptr_to_str(_1113_buff);
	{
		_1dc339636_free(_1113_buff);
	}
	return jule::Exceptional<jule::Str>(jule::Any(),_159_pwd);
}



inline jule::Slice<jule::U8> _1dd07e1e3_stobs(jule::Str& _915_s) {
	{
		jule::Slice<jule::U8> slice;;
		slice.data.alloc = _915_s.begin();;
		slice.data.ref = nullptr;;
		slice._slice = slice.data.alloc;;
		slice._len = slice._cap = _915_s.len();;
		return slice;
	}
}



inline jule::Bool _1c3a88d6b_is_letter(jule::I32 _7618_r) {
	if ((static_cast<jule::U32>(_7618_r) <= 255LLU)) {
		return ((_1c3ac4eea__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7618_r))] & 96LLU) != 0LLU);
	}
	return _1c3accc5b_is_excluding_latin(_1c3a9001a_LETTER,_7618_r);
}



inline jule::Bool _1c3acc013_is16(jule::Slice<_1c3ac9829_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU)) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1a6994689:;
			if (it != expr.end()) {
				jule::I64 _1a69953d2_i = it - expr.begin();
				{
					_1c3ac9829_Range16* _19417_range = (&(_1919_ranges[_1a69953d2_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a6994689:;
				++it;
				_1a69953d2_i++;
				goto _iter_begin_1a6994689;
			}
			_iter_end_1a6994689:;
		}
		return false;
	}
	jule::I64 _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::I64 _21113_m = _20813_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_20913_hi - _20813_lo))) >> 1LLU));
			_1c3ac9829_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LLU) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LLU);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				}
			}
		}
	_iter_next_1a6993ad9:;
	}
	_iter_end_1a6993ad9:;
	return false;
}



inline jule::Bool _1c3acc3ed_is32(jule::Slice<_1c3aca0bb_Range32> _2289_ranges,jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1a699becc:;
			if (it != expr.end()) {
				jule::I64 _1a699c1ec_i = it - expr.begin();
				{
					_1c3aca0bb_Range32* _23117_range = (&(_2289_ranges[_1a699c1ec_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LLU);
						}
					}
				}
				_iter_next_1a699becc:;
				++it;
				_1a699c1ec_i++;
				goto _iter_begin_1a699becc;
			}
			_iter_end_1a699becc:;
		}
		return false;
	}
	jule::I64 _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::I64 _24813_m = _24513_lo + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_24613_hi - _24513_lo))) >> 1LLU));
			_1c3aca0bb_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LLU) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LLU);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				}
			}
		}
	_iter_next_1a699913e:;
	}
	_iter_end_1a699913e:;
	return false;
}



inline jule::Bool _1c3accc5b_is_excluding_latin(jule::Ptr<_1c3aca819_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_1c3ac9829_Range16> &_28014_r16 = _27823_range_tab.get()._field_r16;
		jule::I64 _28213_off = _27823_range_tab.get()._field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(static_cast<jule::U32>(static_cast<jule::U32>(_28014_r16[(_28014_r16.len() - 1LL)]._field_hi))))) {
			return _1c3acc013_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27847_r)));
		}
	}
	jule::Slice<_1c3aca0bb_Range32> &_28710_r32 = _27823_range_tab.get()._field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_28710_r32[0LL]._field_lo))))) {
		return _1c3acc3ed_is32(_28710_r32,static_cast<jule::U32>(static_cast<jule::U32>(_27847_r)));
	}
	return false;
}



inline std::tuple<jule::I32,jule::I64> _1c477e19d_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::I64 _18242_size = jule::I64();
	if ((_18220_p.len() < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _1c477ce05_FIRST[static_cast<jule::I64>(_1869_p0)];
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>((_1879_x << 31LLU))) >> 31LLU));
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(_18220_p[0LL]))) & static_cast<jule::I32>(static_cast<jule::I32>((~(_19213_mask)))))) | static_cast<jule::I32>(static_cast<jule::I32>(65533LL & _19213_mask)));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));
	_1c477d499_accept_range _1969_accept = _1c477baa2_ACCEPT_RANGES[static_cast<jule::I64>((_1879_x >> 4LLU))];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 31LLU)))) << 6LL))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LLU) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 15LLU)))) << 12LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LLU) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_1869_p0 & 7LLU)))) << 18LL))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2009_b1 & 63LLU)))) << 12LL))))) | static_cast<jule::I32>(static_cast<jule::I32>((static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2079_b2 & 63LLU)))) << 6LL))))) | static_cast<jule::I32>(static_cast<jule::I32>(static_cast<jule::I32>((_2149_b3 & 63LLU)))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::I64> _1c477e80d_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::I64 _27647_size = jule::I64();
	if ((_27625_p.len() == 0LL)) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = (_2809_end - 1LL);
	_27638_r=static_cast<jule::I32>(static_cast<jule::I32>(_27625_p[_28113_start]));
	if ((_27638_r < 128LL)) {
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = (_2809_end - 4LL);
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_1c478159b_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_1a69eedba;
			}
		}
	_iter_next_1a69eedba:;
	}
	_iter_end_1a69eedba:;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _1c477e19d_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	return std::make_tuple(_27638_r,_27647_size);
}



inline jule::Slice<jule::U8> _1c4780787_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if ((_39835_r <= 127LL)) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(_39835_r))}));
	}
	return _1c4780b72_append_rune_non_ascii(_39824_p,_39835_r);
}



inline jule::Slice<jule::U8> _1c4780b72_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		
		if ((_4079_i <= 2047LLU)) {
			_case_begin_1a6a190e3:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else if ((_4079_i > 1114111LLU) || (55296LL <= _4079_i) && (_4079_i <= 57343LLU)) {
			_case_begin_1a6a19159:;
			{
				_40545_r=65533LL;
				goto _case_begin_1a6a191c0;
			}
		}
		else if ((_4079_i <= 65535LLU)) {
			_case_begin_1a6a191c0:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		else {
			_case_begin_1a6a15ead:;
			{
				return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LLU | static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 18LL))))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 12LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_40545_r >> 6LL)))) & 63LLU)))),static_cast<jule::U8>(128LLU | static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_40545_r))) & 63LLU))))}));
			}
		}
		_match_end_1a6a15de2:;
	}
}



inline jule::I64 _1c478128d_rune_count_str(jule::Str _46623_s) {
	jule::I64 _46633_n = jule::I64();
	jule::I64 _46713_i = 0LL;
	for (; _46713_i < static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len())); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if ((_46917_c < 128LLU)) {
				(_46713_i)++;
				goto _iter_next_1a6a24362;
			}
			jule::U8 _47513_x = _1c477ce05_FIRST[static_cast<jule::I64>(_46917_c)];
			if ((_47513_x == 241LLU)) {
				(_46713_i)++;
				goto _iter_next_1a6a24362;
			}
			jule::I64 _48017_size = static_cast<jule::I64>((_47513_x & 7LLU));
			if ((_46713_i + _48017_size) > static_cast<jule::I64>(static_cast<jule::I64>(_46623_s.len()))) {
				(_46713_i)++;
				goto _iter_next_1a6a24362;
			}
			_1c477d499_accept_range _48513_accept = _1c477baa2_ACCEPT_RANGES[static_cast<jule::I64>((_47513_x >> 4LLU))];
			_46917_c=_46623_s[(_46713_i + 1LL)];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if ((_48017_size == 2LL)) {
			} else {
				_46917_c=_46623_s[(_46713_i + 2LL)];
				if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if ((_48017_size == 3LL)) {
				} else {
					_46917_c=_46623_s[(_46713_i + 3LL)];
					if ((_46917_c < 128LLU) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_1a6a24362:;
	}
	_iter_end_1a6a24362:;
	return _46633_n;
}



inline jule::Bool _1c478159b_rune_start(jule::U8 _51019_b) {
	return ((_51019_b & 192LLU) != 128LLU);
}



inline jule::Str _1c3ad1c93_repeat(jule::Str _1415_s,jule::I64 _1427_n) {
	if ((_1427_n <= 0LL)) {
		return jule::Str();
	}
	jule::Str _1913_ss = _1415_s;
	for (; (_1427_n > 1LL); (_1427_n)--) {
		{
			_1913_ss+=_1415_s;
		}
	_iter_next_1a6a5e842:;
	}
	_iter_end_1a6a5e842:;
	return _1913_ss;
}



inline jule::Bool _1c47025c7__has_prefix(jule::Str& _2617_s,jule::Str& _2626_sub,jule::I64 _2640_start) {
	if ((_2626_sub.len() == 0LL) || ((_2617_s.len() - _2640_start) < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())))) {
		return false;
	}
	jule::I64 _3113_i = 0LL;
	for (; _3113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2626_sub.len())); std::tie(_3113_i,_2640_start) = std::make_tuple(static_cast<jule::I64>((_3113_i + 1LL)),static_cast<jule::I64>((_2640_start + 1LL)))) {
		{
			if (_2617_s[_2640_start] != _2626_sub[_3113_i]) {
				return false;
			}
		}
	_iter_next_1a6a61932:;
	}
	_iter_end_1a6a61932:;
	return true;
}



inline jule::Bool _1c471294a_has_prefix(jule::Str _4119_s,jule::Str _4127_sub) {
	return _1c47025c7__has_prefix(_4119_s,_4127_sub,0LL);
}



inline jule::Bool _1c471a17d__has_suffix(jule::Str& _4517_s,jule::Str& _4526_sub,jule::I64 _4540_start) {
	if ((_4526_sub.len() == 0LL) || ((_4517_s.len() - _4540_start) < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())))) {
		return false;
	}
	_4540_start=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4517_s.len())) - _4540_start);
	jule::I64 _5113_i = 0LL;
	for (; _5113_i < static_cast<jule::I64>(static_cast<jule::I64>(_4526_sub.len())); (_5113_i)++) {
		{
			if (_4517_s[((_4540_start - _5113_i) - 1LL)] != _4526_sub[((_4526_sub.len() - _5113_i) - 1LL)]) {
				return false;
			}
		}
	_iter_next_1a6a6368c:;
	}
	_iter_end_1a6a6368c:;
	return true;
}



inline jule::Bool _1c47561a8_has_suffix(jule::Str _6119_s,jule::Str _6127_sub) {
	return _1c471a17d__has_suffix(_6119_s,_6127_sub,0LL);
}



inline jule::I64 _1c478228e_find_at(jule::Str _6916_s,jule::Str _6924_sub,jule::I64 _6938_i) {
	if (((_6938_i < 0LL) || (_6916_s.len() < static_cast<jule::I64>(static_cast<jule::I64>(_6924_sub.len())))) || (_6924_sub.len() == 0LL)) {
		return -1LL;
	}
	for (; _6938_i < static_cast<jule::I64>(static_cast<jule::I64>(_6916_s.len())); (_6938_i)++) {
		{
			if (_1c47025c7__has_prefix(_6916_s,_6924_sub,_6938_i)) {
				return _6938_i;
			}
		}
	_iter_next_1a6a68450:;
	}
	_iter_end_1a6a68450:;
	return -1LL;
}



inline jule::I64 _1c4782569_find_last_at(jule::Str _9221_s,jule::Str _9229_sub,jule::I64 _9239_i) {
	jule::I64 _9313_j = ((_9239_i - static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len()))) + 1LL);
	if ((((_9229_sub.len() == 0LL) || (_9239_i < 0LL)) || (_9239_i >= static_cast<jule::I64>(static_cast<jule::I64>(_9221_s.len())))) || (_9313_j < 0LL)) {
		return -1LL;
	}
	_julec_label_loop:;
	for (; (_9313_j >= 0LL); (_9313_j)--) {
		{
			jule::I64 _9917_k = _9313_j;
			jule::I64 _10017_z = 0LL;
			for (; _10017_z < static_cast<jule::I64>(static_cast<jule::I64>(_9229_sub.len())); std::tie(_9917_k,_10017_z) = std::make_tuple(static_cast<jule::I64>((_9917_k + 1LL)),static_cast<jule::I64>((_10017_z + 1LL)))) {
				{
					if (_9221_s[_9917_k] != _9229_sub[_10017_z]) {
						goto _iter_next_1a6a6b321;
					}
				}
			_iter_next_1a6a6d6ec:;
			}
			_iter_end_1a6a6d6ec:;
			return _9313_j;
		}
	_iter_next_1a6a6b321:;
	}
	_iter_end_1a6a6b321:;
	return -1LL;
}



inline jule::I64 _1c47826ce_find_last(jule::Str _11418_s,jule::Str _11426_sub) {
	return static_cast<jule::I64>(_1c4782569_find_last_at(_11418_s,_11426_sub,static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_11418_s.len())) - 1LL))));
}



inline jule::I64 _1c4782de9__find_rune(jule::Slice<jule::U8>& _17016_s,jule::I32 _17027_r) {
	jule::I64 _17113_i = 0LL;
	while (_17113_i < static_cast<jule::I64>(static_cast<jule::I64>(_17016_s.len()))) {
		{
			jule::I32 _17314_br;
			jule::I64 _17318_n;
			std::tie(_17314_br,_17318_n) = _1c477e19d_decode_rune(_17016_s.slice(_17113_i));
			if (_17027_r == _17314_br) {
				return _17113_i;
			}
			_17113_i+=_17318_n;
		}
	_iter_next_1a6a781c9:;
	}
	_iter_end_1a6a781c9:;
	return -1LL;
}



inline jule::I64 _1c4783405_find_last_byte(jule::Str _19723_s,jule::U8 _19731_b) {
	jule::I64 _19813_i = (_19723_s.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			if (_19723_s[_19813_i] == _19731_b) {
				return _19813_i;
			}
		}
	_iter_next_1a6a7ad14:;
	}
	_iter_end_1a6a7ad14:;
	return -1LL;
}



inline jule::I64 _1c47839aa_find_any(jule::Str _23817_s,jule::Str _23825_runes) {
	jule::Slice<jule::U8> _2399_sb = _1dd07e1e3_stobs(_23817_s);
	jule::Slice<jule::U8> _24013_rb = _1dd07e1e3_stobs(_23825_runes);
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_2399_sb.len()))) {
		{
			jule::I32 _24314_r;
			jule::I64 _24317_n;
			std::tie(_24314_r,_24317_n) = _1c477e19d_decode_rune(_2399_sb.slice(_24113_i));
			if ((_1c4782de9__find_rune(_24013_rb,_24314_r) != -1LL)) {
				return _24113_i;
			}
			_24113_i+=_24317_n;
		}
	_iter_next_1a6a80c92:;
	}
	_iter_end_1a6a80c92:;
	return -1LL;
}



inline jule::Slice<jule::Str> _1c4783c85_split(jule::Str _27214_s,jule::Str _27222_sub,jule::I64 _27236_n) {
	jule::Slice<jule::Str> _27313_parts = jule::Slice<jule::Str>::alloc(0LL,static_cast<jule::I64>((((_27236_n < 0LL)) ? (10LL) : (_27236_n))));
	if ((_27236_n == 0LL)) {
		return _27313_parts;
	}
	if ((_27236_n < 0LL)) {
		_27236_n=static_cast<jule::I64>(_27214_s.len());
	}
	jule::I64 _28013_i = 0LL;
	for (; (_27236_n > 0LL); (_27236_n)--) {
		{
			jule::I64 _28213_j = _1c478228e_find_at(_27214_s,_27222_sub,_28013_i);
			if ((_28213_j == -1LL)) {
				goto _iter_end_1a6a8731a;
			}
			_27313_parts = jule::alloc_for_append(_27313_parts,1);_27313_parts.__push(_27214_s.slice(_28013_i,_28213_j));
			_28013_i=static_cast<jule::I64>(_28213_j + static_cast<jule::I64>(static_cast<jule::I64>(_27222_sub.len())));
		}
	_iter_next_1a6a8731a:;
	}
	_iter_end_1a6a8731a:;
	if ((_27236_n > 0LL) && (_28013_i < static_cast<jule::I64>(static_cast<jule::I64>(_27214_s.len())))) {
		_27313_parts = jule::alloc_for_append(_27313_parts,1);_27313_parts.__push(_27214_s.slice(_28013_i));
	}
	return _27313_parts;
}



inline jule::Bool _1c4783dea_contains(jule::Str _29617_s,jule::Str _29625_sub) {
	return (_1c478228e_find_at(_29617_s,_29625_sub,0LL) != -1LL);
}



inline jule::Bool _1c478459e_contains_any(jule::Str _31221_s,jule::Str _31229_runes) {
	return (_1c47839aa_find_any(_31221_s,_31229_runes) != -1LL);
}



inline jule::Str _1c478502d_replace(jule::Str _33816_s,jule::Str _33824_sub,jule::Str _33834_new,jule::I64 _33848_n) {
	if ((_33848_n == 0LL) || (_33824_sub == _33834_new)) {
		return _33816_s;
	}
	if ((_33848_n < 0LL)) {
		_33848_n=static_cast<jule::I64>(_33816_s.len());
	}
	jule::Str _34713_ss = jule::Str();
	jule::I64 _34813_i = 0LL;
	for (; (_33848_n > 0LL); (_33848_n)--) {
		{
			jule::I64 _35013_j = _1c478228e_find_at(_33816_s,_33824_sub,_34813_i);
			if ((_35013_j == -1LL)) {
				goto _iter_end_1a6a92479;
			}
			_34713_ss+=_33816_s.slice(_34813_i,_35013_j);
			_34713_ss+=_33834_new;
			_34813_i=static_cast<jule::I64>(_35013_j + static_cast<jule::I64>(static_cast<jule::I64>(_33824_sub.len())));
		}
	_iter_next_1a6a92479:;
	}
	_iter_end_1a6a92479:;
	_34713_ss+=_33816_s.slice(_34813_i);
	return _34713_ss;
}



inline void _1c478612d__trim_left(jule::Slice<jule::U8>& _39020_s,jule::Slice<jule::U8>& _39032_cutset) {
	jule::I64 _39113_i = 0LL;
	while (_39113_i < static_cast<jule::I64>(static_cast<jule::I64>(_39020_s.len()))) {
		{
			jule::I32 _39314_r;
			jule::I64 _39317_n;
			std::tie(_39314_r,_39317_n) = _1c477e19d_decode_rune(_39020_s.slice(_39113_i));
			if ((_1c4782de9__find_rune(_39032_cutset,_39314_r) == -1LL)) {
				_39020_s=_39020_s.slice(_39113_i);
				return;
			}
			_39113_i+=_39317_n;
		}
	_iter_next_1a6a9810b:;
	}
	_iter_end_1a6a9810b:;
	_39020_s=nullptr;
}



inline jule::Str _1c47864b3_trim_left(jule::Str _40518_s,jule::Str _40526_cutset) {
	jule::Slice<jule::U8> _40613_bytes = _1dd07e1e3_stobs(_40518_s);
	jule::Slice<jule::U8> _4079_bcutset = _1dd07e1e3_stobs(_40526_cutset);
	_1c478612d__trim_left(_40613_bytes,_4079_bcutset);
	return static_cast<jule::Str>(_40613_bytes);
}



inline void _1c4786815__trim_right(jule::Slice<jule::U8>& _41221_s,jule::Slice<jule::U8>& _41233_cutset) {
	jule::I64 _41313_i = _41221_s.len();
	while ((_41313_i > 0LL)) {
		{
			jule::I32 _41514_r;
			jule::I64 _41517_n;
			std::tie(_41514_r,_41517_n) = _1c477e80d_decode_last_rune(_41221_s.slice(0LL,_41313_i));
			if ((_1c4782de9__find_rune(_41233_cutset,_41514_r) == -1LL)) {
				_41221_s=_41221_s.slice(0LL,_41313_i);
				return;
			}
			_41313_i-=_41517_n;
		}
	_iter_next_1a6a9b7e6:;
	}
	_iter_end_1a6a9b7e6:;
	_41221_s=nullptr;
}



inline jule::Str _1c47870da_trim(jule::Str _43613_s,jule::Str _43621_cutset) {
	jule::Slice<jule::U8> _43713_bytes = _1dd07e1e3_stobs(_43613_s);
	jule::Slice<jule::U8> _4389_bcutset = _1dd07e1e3_stobs(_43621_cutset);
	_1c478612d__trim_left(_43713_bytes,_4389_bcutset);
	_1c4786815__trim_right(_43713_bytes,_4389_bcutset);
	return static_cast<jule::Str>(_43713_bytes);
}



inline jule::Str _1c478910e_clean(jule::Str _10818_path) {
	jule::Str _1099_original_path = _10818_path;
	jule::I64 _1109_vol_len = _1c478c134_volume_name_len(_10818_path);
	(_10818_path).mut_slice(_1109_vol_len);
	if (_10818_path.empty()) {
		if (((_1109_vol_len > 1LL) && _1c478b9c4_is_path_sep(_1099_original_path[0LL])) && _1c478b9c4_is_path_sep(_1099_original_path[1LL])) {
			return _1c478976e_from_slash(_1099_original_path);
		}
		return (_1099_original_path + jule::Str(".", 1));
	}
	jule::Bool _1199_rooted = _1c478b9c4_is_path_sep(_10818_path[0LL]);
	jule::I64 _1269_n = _10818_path.len();
	_1c4787e32_LazyBuff _12713_out = _1c4787e32_LazyBuff(_10818_path,jule::Slice<jule::U8>(),jule::I64(),_1099_original_path,_1109_vol_len);
	jule::I64 _13214_r = 0LL;
	jule::I64 _13221_dotdot = 0LL;
	std::tie(_13214_r,_13221_dotdot) = std::make_tuple(0LL,0LL);
	if (_1199_rooted) {
		_1c478896b_append(&_12713_out, 47LLU);
		std::tie(_13214_r,_13221_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13214_r < _1269_n) {
		{
			{
				
				if (_1c478b9c4_is_path_sep(_10818_path[_13214_r])) {
					_case_begin_1a6abaded:;
					{
						(_13214_r)++;
					}
				}
				else if ((_10818_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1c478b9c4_is_path_sep(_10818_path[(_13214_r + 1LL)]))) {
					_case_begin_1a6abbbbd:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10818_path[_13214_r] == '.') && (_10818_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1c478b9c4_is_path_sep(_10818_path[(_13214_r + 2LL)]))) {
					_case_begin_1a6abbc34:;
					{
						_13214_r+=2LL;
						{
							
							if (_12713_out._field_w > _13221_dotdot) {
								_case_begin_1a6ac04a7:;
								{
									(_12713_out._field_w)--;
									while ((_12713_out._field_w > _13221_dotdot) && (!(_1c478b9c4_is_path_sep(static_cast<jule::U8>(_1c478864c_index(&_12713_out, _12713_out._field_w)))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a6ac0e58:;
									}
									_iter_end_1a6ac0e58:;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a6ac0573:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1c478896b_append(&_12713_out, 47LLU);
									}
									_1c478896b_append(&_12713_out, '.');
									_1c478896b_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a6ac041e:;
						}
					}
				}
				else {
					_case_begin_1a6ab647b:;
					{
						if ((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL))) {
							_1c478896b_append(&_12713_out, 47LLU);
						}
						
						for (; (_13214_r < _1269_n) && (!(_1c478b9c4_is_path_sep(_10818_path[_13214_r]))); (_13214_r)++) {
							{
								_1c478896b_append(&_12713_out, _10818_path[_13214_r]);
							}
						_iter_next_1a6ab7e2d:;
						}
						_iter_end_1a6ab7e2d:;
					}
				}
				_match_end_1a6ab5eb4:;
			}
		}
	_iter_next_1a6ab62e4:;
	}
	_iter_end_1a6ab62e4:;
	if ((_12713_out._field_w == 0LL)) {
		_1c478896b_append(&_12713_out, '.');
	}
	return _1c478976e_from_slash(_1c4788c46_string(&_12713_out));
}



inline jule::Str _1c478976e_from_slash(jule::Str _21119_path) {
	if (47LL == '/') {
		return _21119_path;
	}
	return _1c478502d_replace(_21119_path,jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _1c4789ac1_join(jule::Slice<jule::Str> _22513_elem) {
	return _1c478cb7e___join(_22513_elem);
}



inline jule::Str _1c4789dce_ext(jule::Str _23012_path) {
	jule::I64 _23113_i = (_23012_path.len() - 1LL);
	for (; (_23113_i >= 0LL) && (!(_1c478b9c4_is_path_sep(_23012_path[_23113_i]))); (_23113_i)--) {
		{
			if (_23012_path[_23113_i] == '.') {
				return _23012_path.slice(_23113_i);
			}
		}
	_iter_next_1a6ac6205:;
	}
	_iter_end_1a6ac6205:;
	return jule::Str();
}



inline std::tuple<jule::Str,jule::Bool> _1c478a1dc_abs(jule::Str _24512_path) {
	jule::Str _24610_abs_path;
	jule::Bool _24620_ok;
	std::tie(_24610_abs_path,_24620_ok) = _1c478c486___abs(_24512_path);
	return std::make_tuple(_24610_abs_path,_24620_ok);
}



inline jule::Str _1c478a4ea_base(jule::Str _25417_path) {
	if (_25417_path.empty()) {
		return jule::Str(".", 1);
	}
	while ((_25417_path.len() > 0LL) && _1c478b9c4_is_path_sep(_25417_path[(_25417_path.len() - 1LL)])) {
		{
			(_25417_path).mut_slice(0LL,_25417_path.len() - 1LL);
		}
	_iter_next_1a6ac96d1:;
	}
	_iter_end_1a6ac96d1:;
	(_25417_path).mut_slice(_1c478ab9e_volume_name(_25417_path).len());
	jule::I64 _26513_i = (_25417_path.len() - 1LL);
	while ((_26513_i >= 0LL) && (!(_1c478b9c4_is_path_sep(_25417_path[_26513_i])))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a6aca182:;
	}
	_iter_end_1a6aca182:;
	if ((_26513_i >= 0LL)) {
		(_25417_path).mut_slice(_26513_i + 1LL);
	}
	if (_25417_path.empty()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25417_path;
}



inline jule::Str _1c478a891_dir(jule::Str _28512_path) {
	jule::Str _2869_vol = _1c478ab9e_volume_name(_28512_path);
	jule::I64 _28713_i = (_28512_path.len() - 1LL);
	while ((_28713_i >= static_cast<jule::I64>(static_cast<jule::I64>(_2869_vol.len()))) && (!(_1c478b9c4_is_path_sep(_28512_path[_28713_i])))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a6accb79:;
	}
	_iter_end_1a6accb79:;
	jule::Str _2919_dir = _1c478910e_clean(_28512_path.slice(_2869_vol.len(),(_28713_i + 1LL)));
	if ((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL)) {
		return _2869_vol;
	}
	return _2869_vol + _2919_dir;
}



inline jule::Str _1c478ab9e_volume_name(jule::Str _30320_path) {
	return _1c478976e_from_slash(_30320_path.slice(0LL,_1c478c134_volume_name_len(_30320_path)));
}



inline jule::Bool _1c478b9c4_is_path_sep(jule::U8 _4820_c) {
	return 47LL == _4820_c;
}



inline jule::Bool _1c478bd26_is_abs(jule::Str _5315_path) {
	return _1c471294a_has_prefix(_5315_path,jule::Str("/", 1));
}



inline jule::I64 _1c478c134_volume_name_len(jule::Str _5920_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _1c478c486___abs(jule::Str _6310_path) {
	jule::Bool _6328_ok = jule::Bool();
	if (_1c478bd26_is_abs(_6310_path)) {
		_6328_ok = true;
		return std::make_tuple(_1c478910e_clean(_6310_path),_6328_ok);
	}
	jule::Str _679_wd = ({
		auto except = _1dc402204_working_dir();
		(except.ok()) ? (except.result) : ({{
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
			_6328_ok = false;
			return std::make_tuple(jule::Str(),_6328_ok);
		} jule::Str();});
	});
	_6328_ok = true;
	return std::make_tuple(_1c478cb7e___join(jule::Slice<jule::Str>({_679_wd,_6310_path})),_6328_ok);
}



inline jule::Str _1c478c871_str_join(jule::Slice<jule::Str> _7313_elems,jule::Str _7327_sep) {
	{
		auto _match_expr{ _7313_elems.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a6ad51ae:;
			{
				return jule::Str();
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a6ad5225:;
			{
				return _7313_elems[0LL];
			}
		}
		_match_end_1a6ad4e7d:;
	}
	jule::Str _7913_s = _7313_elems[0LL];
	{
		auto expr = _7313_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a6ad55dd:;
		if (it != expr.end()) {
			jule::Str &_1a6ad639c_elem = *it;
			{
				_7913_s+=_7327_sep + _1a6ad639c_elem;
			}
			_iter_next_1a6ad55dd:;
			++it;
			goto _iter_begin_1a6ad55dd;
		}
		_iter_end_1a6ad55dd:;
	}
	return _7913_s;
}



inline jule::Str _1c478cb7e___join(jule::Slice<jule::Str> _8611_elem) {
	{
		auto &expr = _8611_elem;
		auto it = expr.begin();
		_iter_begin_1a6ad66bb:;
		if (it != expr.end()) {
			jule::I64 _1a6ad6dc5_i = it - expr.begin();
			jule::Str &_1a6ad703a_e = *it;
			{
				if ((!(_1a6ad703a_e.empty()))) {
					return _1c478910e_clean(_1c478c871_str_join(_8611_elem.slice(_1a6ad6dc5_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_1a6ad66bb:;
			++it;
			_1a6ad6dc5_i++;
			goto _iter_begin_1a6ad66bb;
		}
		_iter_end_1a6ad66bb:;
	}
	return jule::Str();
}



inline jule::I64 _1dc2b9ee0_get_last_fs_error(void) {
	jule::I64 _729_err = _1dc311e27_get_last_errno();
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a6b12a9e:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a6b12b59:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a6b12bc0:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a6b12593:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a6b12609:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a6b12670:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1a6b126d6:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a6b12de0:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a6b12e56:;
			{
				return static_cast<jule::I64>(8LL);
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a6b12ebc:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a6b13033:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a6b13099:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a6b13121:;
			{
				return static_cast<jule::I64>(12LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a6b13198:;
			{
				return static_cast<jule::I64>(13LL);
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a6b13220:;
			{
				return static_cast<jule::I64>(14LL);
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1a6b13297:;
			{
				return static_cast<jule::I64>(15LL);
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a6b1331e:;
			{
				return static_cast<jule::I64>(16LL);
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a6b13396:;
			{
				return static_cast<jule::I64>(17LL);
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a6b1341d:;
			{
				return static_cast<jule::I64>(18LL);
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1a6b13495:;
			{
				return static_cast<jule::I64>(19LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a6b1351c:;
			{
				return static_cast<jule::I64>(20LL);
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a6b13594:;
			{
				return static_cast<jule::I64>(21LL);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a6b1361b:;
			{
				return static_cast<jule::I64>(22LL);
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a6b13693:;
			{
				return static_cast<jule::I64>(23LL);
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a6b1371a:;
			{
				return static_cast<jule::I64>(24LL);
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1a6b13792:;
			{
				return static_cast<jule::I64>(25LL);
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1a6b13819:;
			{
				return static_cast<jule::I64>(26LL);
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1a6b13891:;
			{
				return static_cast<jule::I64>(27LL);
			}
		}
		else {
			_case_begin_1a6b1252c:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		_match_end_1a6b124c7:;
	}
}



inline jule::I64 _1c484a720_get_last_process_error(void) {
	jule::I64 _429_err = _1dc311e27_get_last_errno();
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a6b2a9a7:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a6b2aa1d:;
			{
				return static_cast<jule::I64>(1LL);
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a6b2a402:;
			{
				return static_cast<jule::I64>(2LL);
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a6b2a468:;
			{
				return static_cast<jule::I64>(3LL);
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a6b2a4ce:;
			{
				return static_cast<jule::I64>(4LL);
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a6b2a545:;
			{
				return static_cast<jule::I64>(5LL);
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a6b2a6dd:;
			{
				return static_cast<jule::I64>(6LL);
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a6b2a754:;
			{
				return static_cast<jule::I64>(7LL);
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a6b2a7ba:;
			{
				return static_cast<jule::I64>(9LL);
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1a6b2a831:;
			{
				return static_cast<jule::I64>(10LL);
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a6b2a897:;
			{
				return static_cast<jule::I64>(11LL);
			}
		}
		else {
			_case_begin_1a6b27861:;
			{
				return static_cast<jule::I64>(0LL);
			}
		}
		_match_end_1a6b2a2e2:;
	}
}



inline jule::Slice<char*> _1c484dc95_str_slice_to_cstr_slice(jule::Slice<jule::Str> _2128_s) {
	jule::Slice<char*> _2213_cs = jule::Slice<char*>::alloc(0LL,static_cast<jule::I64>((_2128_s.len() + 1LL)));
	{
		auto &expr = _2128_s;
		auto it = expr.begin();
		_iter_begin_1a6b2e1e7:;
		if (it != expr.end()) {
			jule::I64 _1a6b2e747_i = it - expr.begin();
			{
				_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(((char*)((&(_2128_s[_1a6b2e747_i][0LL])))));
			}
			_iter_next_1a6b2e1e7:;
			++it;
			_1a6b2e747_i++;
			goto _iter_begin_1a6b2e1e7;
		}
		_iter_end_1a6b2e1e7:;
	}
	_2213_cs = jule::alloc_for_append(_2213_cs,1);_2213_cs.__push(nullptr);
	return _2213_cs;
}



inline jule::I64 _1c484e207_execvp(jule::Str _3011_file,jule::Slice<jule::Str> _3022_argv) {
	jule::Slice<char*> _319_cargv = _1c484dc95_str_slice_to_cstr_slice(_3022_argv);
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_3011_file[0LL])))), (char*const*)(&(_319_cargv[0LL]))));
	}
}



inline jule::I64 _1c484e6be_execve(jule::Str _3711_file,jule::Slice<jule::Str> _3722_argv,jule::Slice<jule::Str> _3735_env) {
	jule::Slice<char*> _389_cargv = _1c484dc95_str_slice_to_cstr_slice(_3722_argv);
	jule::Slice<char*> _399_cenv = _1c484dc95_str_slice_to_cstr_slice(_3735_env);
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3711_file[0LL])))), (char*const*)(&(_389_cargv[0LL])), (char*const*)((&(_399_cenv[0LL])))));
	}
}



inline void _1c485047d_exit(jule::I64 _1213_code) {
	_1dc372a7b_exit(_1213_code);
}



inline jule::Str _1c48506ae_executable(void) {
	return jule::executable();
}



inline jule::Bool _1c47ee0a8_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _1c47ee21d_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &expr = _1c478e7da_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_1a6b66383:;
		if (it != expr.end()) {
			jule::Str &_1a6b67a05_valid_ext = *it;
			{
				if (_3128_ext == _1a6b67a05_valid_ext) {
					return true;
				}
			}
			_iter_next_1a6b66383:;
			++it;
			goto _iter_begin_1a6b66383;
		}
		_iter_end_1a6b66383:;
	}
	return false;
}



inline jule::Bool _1c47ee40a_is_valid_cpp_ext(jule::Str _4225_ext) {
	if ((_4225_ext == jule::Str(".c", 2))) {
		return true;
	}
	{
		auto &expr = _1c47ec86a_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a6b688c4:;
		if (it != expr.end()) {
			jule::Str &_1a6b67d13_e = *it;
			{
				if (_4225_ext == _1a6b67d13_e) {
					return true;
				}
			}
			_iter_next_1a6b688c4:;
			++it;
			goto _iter_begin_1a6b688c4;
		}
		_iter_end_1a6b688c4:;
	}
	{
		auto &expr = _1c47ede87_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_1a6b69650:;
		if (it != expr.end()) {
			jule::Str &_1a6b69111_e = *it;
			{
				if (_4225_ext == _1a6b69111_e) {
					return true;
				}
			}
			_iter_next_1a6b69650:;
			++it;
			goto _iter_begin_1a6b69650;
		}
		_iter_end_1a6b69650:;
	}
	return false;
}



inline jule::Str _1c4810938_logf(jule::Str _29313_fmt,jule::Slice<jule::Any> _29326_args) {
	return _1c48114c7_apply_fmt(_29313_fmt,_29326_args);
}



inline jule::Str _1c4810c8a_arg_to_str(jule::Any _29715_arg) {
	{
		auto &_match_expr{ _29715_arg };
		
		if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a6b6a365:;
			{
				return _29715_arg.operator jule::Str();
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a6b6ad9e:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::U8());
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a6b6ae15:;
			{
				return static_cast<jule::Str>(_29715_arg.operator jule::I32());
			}
		}
		else {
			_case_begin_1a6b6610d:;
			{
				return jule::Str("<fmt?>", 6);
			}
		}
		_match_end_1a6b660a8:;
	}
}



inline jule::I64 _1c4811098_find_next_fmt(jule::Str _30618_fmt) {
	{
		auto &expr = _30618_fmt;
		auto it = expr.begin();
		_iter_begin_1a6b6b982:;
		if (it != expr.end()) {
			jule::I64 _1a6b6b586_i = it - expr.begin();
			jule::U8 &_1a6b6c169_b = *it;
			{
				if (_1a6b6c169_b == '@') {
					return _1a6b6b586_i;
				}
			}
			_iter_next_1a6b6b982:;
			++it;
			_1a6b6b586_i++;
			goto _iter_begin_1a6b6b982;
		}
		_iter_end_1a6b6b982:;
	}
	return -1LL;
}



inline jule::Str _1c48114c7_apply_fmt(jule::Str _31518_fmt,jule::Slice<jule::Any> _31528_args) {
	jule::Str _31613_s = jule::Str();
	{
		auto &expr = _31528_args;
		auto it = expr.begin();
		_iter_begin_1a6b6d2d0:;
		if (it != expr.end()) {
			jule::Any &_1a6b6d379_arg = *it;
			{
				jule::I64 _31913_i = _1c4811098_find_next_fmt(_31518_fmt);
				if ((_31913_i == -1LL)) {
					goto _iter_end_1a6b6d2d0;
				}
				_31613_s+=_31518_fmt.slice(0LL,_31913_i);
				_31613_s+=_1c4810c8a_arg_to_str(_1a6b6d379_arg);
				(_31518_fmt).mut_slice(_31913_i + 1LL);
			}
			_iter_next_1a6b6d2d0:;
			++it;
			goto _iter_begin_1a6b6d2d0;
		}
		_iter_end_1a6b6d2d0:;
	}
	_31613_s+=_31518_fmt;
	return _31613_s;
}



inline jule::Bool _1c48126d7_is_top_directive(jule::Str _2825_directive) {
	return (_2825_directive == jule::Str("pass", 4)) || (_2825_directive == jule::Str("build", 5));
}



inline jule::Bool _1c4814453_is_windows(jule::Str _5119_os) {
	return (_5119_os == jule::Str("windows", 7));
}



inline jule::Bool _1c48147a5_is_darwin(jule::Str _5318_os) {
	return (_5318_os == jule::Str("darwin", 6));
}



inline jule::Bool _1c4814ab3_is_linux(jule::Str _5517_os) {
	return (_5517_os == jule::Str("linux", 5));
}



inline jule::Bool _1c4814e15_is_i386(jule::Str _5716_arch) {
	return (_5716_arch == jule::Str("i386", 4));
}



inline jule::Bool _1c4815223_is_amd64(jule::Str _5917_arch) {
	return (_5917_arch == jule::Str("amd64", 5));
}



inline jule::Bool _1c4815531_is_arm64(jule::Str _6117_arch) {
	return (_6117_arch == jule::Str("arm64", 5));
}



inline jule::Bool _1c481583e_is_unix(jule::Str _6316_os) {
	return _1c48147a5_is_darwin(_6316_os) || _1c4814ab3_is_linux(_6316_os);
}



inline jule::Bool _1c4815bd5_is_32bit(jule::Str _6517_arch) {
	return _1c4814e15_is_i386(_6517_arch);
}



inline jule::Bool _1c4815ee3_is_64bit(jule::Str _6717_arch) {
	return _1c4815223_is_amd64(_6717_arch) || _1c4815531_is_arm64(_6717_arch);
}



inline void _1c4824b5b_init(void) {
	jule::Str _2513_path = _1c48506ae_executable();
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	}
	jule::Str _309_pwd = ({
		auto except = _1dc402204_working_dir();
		(except.ok()) ? (except.result) : ({{
			jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:31:9"));;
			return;
			return;
		} jule::Str();});
	});
	jule::Str _359_path_exec = _1c478a891_dir(_2513_path);
	_2513_path=_1c4789ac1_join(jule::Slice<jule::Str>({_359_path_exec,jule::Str("..", 2)}));
	{
		_1c4821d56_PATH_WD=_309_pwd;
		_1c4834187_PATH_EXEC=_359_path_exec;
		_1c4820a47_PATH_STDLIB=_1c4789ac1_join(jule::Slice<jule::Str>({_2513_path,jule::Str("std", 3)}));
		_1c4823396_PATH_API=_1c4789ac1_join(jule::Slice<jule::Str>({_1c4834187_PATH_EXEC,jule::Str("..", 2)}));
		_1c4823396_PATH_API=_1c4789ac1_join(jule::Slice<jule::Str>({_1c4823396_PATH_API,jule::Str("api", 3)}));
		_1c4823396_PATH_API=_1c4789ac1_join(jule::Slice<jule::Str>({_1c4823396_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Bool _1aa076152_is_unary_op(jule::Str _31820_kind) {
	{
		auto &expr = _1dd5c52d8_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_1a6c1d814:;
		if (it != expr.end()) {
			jule::Str &_1a6c1d858_op = *it;
			{
				if (_31820_kind == _1a6c1d858_op) {
					return true;
				}
			}
			_iter_next_1a6c1d814:;
			++it;
			goto _iter_begin_1a6c1d814;
		}
		_iter_end_1a6c1d814:;
	}
	return false;
}



inline jule::Bool _1aa0764a4_is_bin_op(jule::Str _32918_kind) {
	{
		auto &expr = _1dd5c5409_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_1a6c1e34d:;
		if (it != expr.end()) {
			jule::Str &_1a6c1da45_op = *it;
			{
				if (_32918_kind == _1a6c1da45_op) {
					return true;
				}
			}
			_iter_next_1a6c1e34d:;
			++it;
			goto _iter_begin_1a6c1e34d;
		}
		_iter_end_1a6c1e34d:;
	}
	return false;
}



inline jule::Bool _1aa076b14_is_str(jule::Str _35115_k) {
	return (!(_35115_k.empty())) && ((_35115_k[0LL] == '\"') || _1aa076e22_is_raw_str(_35115_k));
}



inline jule::Bool _1aa076e22_is_raw_str(jule::Str _35319_k) {
	return (!(_35319_k.empty())) && (_35319_k[0LL] == '`');
}



inline jule::Bool _1aa077230_is_rune(jule::Str _35616_k) {
	return (!(_35616_k.empty())) && (_35616_k[0LL] == '\'');
}



inline jule::Bool _1aa0778d4_is_bool(jule::Str _36016_k) {
	return (_36016_k == jule::Str("true", 4)) || (_36016_k == jule::Str("false", 5));
}



inline jule::Bool _1aa077be2_is_float(jule::Str _36317_k) {
	if (_1c471294a_has_prefix(_36317_k,jule::Str("0x", 2))) {
		return _1c478459e_contains_any(_36317_k,jule::Str(".pP", 3));
	}
	return _1c478459e_contains_any(_36317_k,jule::Str(".eE", 3));
}



inline jule::Bool _1aa078000_is_num(jule::Str _37115_k) {
	if (_37115_k.empty()) {
		return false;
	}
	jule::U8 _3769_b = _37115_k[0LL];
	return (_3769_b == '.') || (('0' <= _3769_b) && (_3769_b <= '9'));
}



inline jule::Bool _1aa07861b_is_ignore_ident(jule::Str _38624_ident) {
	return (_38624_ident == jule::Str("_", 1));
}



inline jule::Bool _1aa078929_is_anon_ident(jule::Str _38822_ident) {
	return (_38822_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _1aa079045_is_space(jule::I32 _40217_r) {
	{
		auto &expr = _1dd5c5ea9_SPACES;
		auto it = expr.begin();
		_iter_begin_1a6c29457:;
		if (it != expr.end()) {
			jule::I32 &_1a6c28b4e_cr = *it;
			{
				if (_40217_r == _1a6c28b4e_cr) {
					return true;
				}
			}
			_iter_next_1a6c29457:;
			++it;
			goto _iter_begin_1a6c29457;
		}
		_iter_end_1a6c29457:;
	}
	return false;
}



inline jule::Bool _1aa079474_is_letter(jule::I32 _41318_r) {
	return _1c3a88d6b_is_letter(_41318_r);
}



inline jule::Bool _1aa079a90_is_decimal(jule::U8 _43519_b) {
	return ('0' <= _43519_b) && (_43519_b <= '9');
}



inline jule::Bool _1aa079d9d_is_binary(jule::U8 _43718_b) {
	return (_43718_b == '0') || (_43718_b == '1');
}



inline jule::Bool _1aa07a1ab_is_octal(jule::U8 _43917_b) {
	return ('0' <= _43917_b) && (_43917_b <= '7');
}



inline jule::Bool _1aa07a4b9_is_hex(jule::U8 _44215_b) {
	{
		
		if (('0' <= _44215_b) && (_44215_b <= '9')) {
			_case_begin_1a6c2e34c:;
			{
				return true;
			}
		}
		else if (('a' <= _44215_b) && (_44215_b <= 'f')) {
			_case_begin_1a6c2e43a:;
			{
				return true;
			}
		}
		else if (('A' <= _44215_b) && (_44215_b <= 'F')) {
			_case_begin_1a6c2e4a1:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a6c2dbed:;
			{
				return false;
			}
		}
		_match_end_1a6c2c0b4:;
	}
}



inline jule::Bool _1aa07a7c7_is_assign(jule::U64 _45418_id) {
	return ((((((_45418_id == static_cast<jule::U64>(2LLU)) || (_45418_id == static_cast<jule::U64>(31LLU))) || (_45418_id == static_cast<jule::U64>(34LLU))) || (_45418_id == static_cast<jule::U64>(20LLU))) || (_45418_id == static_cast<jule::U64>(28LLU))) || (_45418_id == static_cast<jule::U64>(3LLU))) || (_45418_id == static_cast<jule::U64>(7LLU));
}



inline jule::Bool _1aa07aad5_is_postfix_op(jule::Str _46722_kind) {
	{
		auto &expr = _1dd5c564b_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_1a6c30ccc:;
		if (it != expr.end()) {
			jule::Str &_1a6c32ecc_op = *it;
			{
				if (_46722_kind == _1a6c32ecc_op) {
					return true;
				}
			}
			_iter_next_1a6c30ccc:;
			++it;
			goto _iter_begin_1a6c30ccc;
		}
		_iter_end_1a6c30ccc:;
	}
	return false;
}



inline jule::Bool _1aa07ade3_is_assign_op(jule::Str _47821_kind) {
	if (_1aa07aad5_is_postfix_op(_47821_kind)) {
		return true;
	}
	{
		auto &expr = _1aa06ce5c_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_1a6c331ec:;
		if (it != expr.end()) {
			jule::Str &_1a6c33241_op = *it;
			{
				if (_47821_kind == _1a6c33241_op) {
					return true;
				}
			}
			_iter_next_1a6c331ec:;
			++it;
			goto _iter_begin_1a6c331ec;
		}
		_iter_end_1a6c331ec:;
	}
	return false;
}



inline jule::Ptr<_1aa07b982_File> _1aa07d522_new_file_set(jule::Str _6321_path) {
	return jule::new_ptr<_1aa07b982_File>(_1aa07b982_File(_6321_path,jule::Slice<jule::U8>(),jule::Slice<_1aa07563a_Token>()));
}



inline _1c4810251_Log _1aa080249_make_err(jule::I64 _11113_row,jule::I64 _11123_col,jule::Ptr<_1aa07b982_File>& _11134_f,jule::Str _11144_fmt,jule::Slice<jule::Any> _11157_args) {
	return _1c4810251_Log(static_cast<jule::I64>(1LL),_11113_row,_11123_col,_11134_f.get()._field_path,_1c4810938_logf(_11144_fmt,_11157_args),jule::Str(),jule::Str());
}



inline jule::Bool _1aa080678_bytes_has_prefix(jule::Slice<jule::U8>& _12122_bytes,jule::Str _12137_prefix) {
	if (_12122_bytes.len() < static_cast<jule::I64>(static_cast<jule::I64>(_12137_prefix.len()))) {
		return false;
	}
	{
		auto &expr = _12137_prefix;
		auto it = expr.begin();
		_iter_begin_1a6c36c6c:;
		if (it != expr.end()) {
			jule::I64 _1a6c371ce_i = it - expr.begin();
			{
				if (_12122_bytes[_1a6c371ce_i] != _12137_prefix[_1a6c371ce_i]) {
					return false;
				}
			}
			_iter_next_1a6c36c6c:;
			++it;
			_1a6c371ce_i++;
			goto _iter_begin_1a6c36c6c;
		}
		_iter_end_1a6c36c6c:;
	}
	return true;
}



inline jule::Str _1aa080a63_float_fmt_e(jule::Slice<jule::U8>& _13317_txt,jule::I64 _13334_i) {
	jule::Str _13344_lit = jule::Str();
	(_13334_i)++;
	if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
		return _13344_lit;
	}
	jule::U8 _13913_b = _13317_txt[_13334_i];
	if (_13913_b == '_') {
		return _13344_lit;
	}
	if ((_13913_b == '+') || (_13913_b == '-')) {
		(_13334_i)++;
		if (_13334_i >= static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len()))) {
			return _13344_lit;
		}
		if (_13317_txt[_13334_i] == '_') {
			return _13344_lit;
		}
	}
	jule::I64 _1539_first = _13334_i;
	for (; _13334_i < static_cast<jule::I64>(static_cast<jule::I64>(_13317_txt.len())); (_13334_i)++) {
		{
			_13913_b=_13317_txt[_13334_i];
			if ((_13913_b != '_') && (!(_1aa079a90_is_decimal(_13913_b)))) {
				goto _iter_end_1a6c3a29d;
			}
		}
	_iter_next_1a6c3a29d:;
	}
	_iter_end_1a6c3a29d:;
	if (_13334_i == _1539_first) {
		_13344_lit = jule::Str();
		return _13344_lit;
	}
	_13344_lit = static_cast<jule::Str>(_13317_txt.slice(0LL,_13334_i));
	return _13344_lit;
}



inline jule::Str _1aa080e92_float_fmt_p(jule::Slice<jule::U8>& _16717_txt,jule::I64 _16730_i) {
	return _1aa080a63_float_fmt_e(_16717_txt,_16730_i);
}



inline jule::Str _1aa08137c_float_fmt_dotnp(jule::Slice<jule::U8>& _17121_txt,jule::I64 _17138_i) {
	if (_17121_txt[_17138_i] != '.') {
		return jule::Str();
	}
	(_17138_i)++;
	_julec_label_loop:;
	for (; _17138_i < static_cast<jule::I64>(static_cast<jule::I64>(_17121_txt.len())); (_17138_i)++) {
		{
			jule::U8 _17913_b = _17121_txt[_17138_i];
			{
				
				if (_17913_b == '_' || _1aa079a90_is_decimal(_17913_b)) {
					_case_begin_1a6c3e3a1:;
					{
						goto _iter_next_1a6c3d504;
					}
				}
				else if (_1aa082eb6_is_float_fmt_p(_17913_b,_17138_i)) {
					_case_begin_1a6c3e417:;
					{
						return _1aa080e92_float_fmt_p(_17121_txt,_17138_i);
					}
				}
				else {
					_case_begin_1a6c3e307:;
					{
						goto _iter_end_1a6c3d504;
					}
				}
				_match_end_1a6c3e2a2:;
			}
		}
	_iter_next_1a6c3d504:;
	}
	_iter_end_1a6c3d504:;
	return jule::Str();
}



inline jule::Str _1aa081767_float_fmt_dotfp(jule::Slice<jule::U8>& _19421_txt,jule::I64 _19438_i) {
	_19438_i+=2LL;
	return _1aa080a63_float_fmt_e(_19421_txt,_19438_i);
}



inline jule::Str _1aa081b52_float_fmt_dotp(jule::Slice<jule::U8>& _19920_txt,jule::I64 _19937_i) {
	(_19937_i)++;
	return _1aa080a63_float_fmt_e(_19920_txt,_19937_i);
}



inline jule::Str _1aa0820c5_float_num(jule::Slice<jule::U8>& _20415_txt,jule::I64 _20432_i) {
	jule::Str _20442_lit = jule::Str();
	(_20432_i)++;
	if (_20432_i >= static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len()))) {
		_20442_lit = static_cast<jule::Str>(_20415_txt);
		return _20442_lit;
	}
	if (_20415_txt[_20432_i] == '_') {
		(_20432_i)--;
		_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
		return _20442_lit;
	}
	for (; _20432_i < static_cast<jule::I64>(static_cast<jule::I64>(_20415_txt.len())); (_20432_i)++) {
		{
			jule::U8 _21413_b = _20415_txt[_20432_i];
			if ((_20432_i > 1LL) && ((_21413_b == 'e') || (_21413_b == 'E'))) {
				_20442_lit = _1aa080a63_float_fmt_e(_20415_txt,_20432_i);
				return _20442_lit;
			}
			if ((_21413_b != '_') && (!(_1aa079a90_is_decimal(_21413_b)))) {
				goto _iter_end_1a6c4377e;
			}
		}
	_iter_next_1a6c4377e:;
	}
	_iter_end_1a6c4377e:;
	if ((_20432_i == 1LL)) {
		return _20442_lit;
	}
	_20442_lit = static_cast<jule::Str>(_20415_txt.slice(0LL,_20432_i));
	return _20442_lit;
}



inline jule::Str _1aa0823d3_common_num(jule::Slice<jule::U8>& _22916_txt) {
	jule::Str _22931_lit = jule::Str();
	jule::I64 _23013_i = 0LL;
	_julec_label_loop:;
	for (; _23013_i < static_cast<jule::I64>(static_cast<jule::I64>(_22916_txt.len())); (_23013_i)++) {
		{
			jule::U8 _23313_b = _22916_txt[_23013_i];
			{
				
				if (_23313_b == '.') {
					_case_begin_1a6c475b8:;
					{
						_22931_lit = _1aa0820c5_float_num(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if (_23313_b == '_') {
					_case_begin_1a6c47640:;
					{
						goto _iter_next_1a6c469e6;
					}
				}
				else if (_1aa082acb_is_float_fmt_e(_23313_b,_23013_i)) {
					_case_begin_1a6c476b7:;
					{
						_22931_lit = _1aa080a63_float_fmt_e(_22916_txt,_23013_i);
						return _22931_lit;
					}
				}
				else if ((!(_1aa079a90_is_decimal(_23313_b)))) {
					_case_begin_1a6c4773e:;
					{
						goto _iter_end_1a6c469e6;
					}
				}
				_match_end_1a6c474ca:;
			}
		}
	_iter_next_1a6c469e6:;
	}
	_iter_end_1a6c469e6:;
	if ((_23013_i == 0LL)) {
		return _22931_lit;
	}
	_22931_lit = static_cast<jule::Str>(_22916_txt.slice(0LL,_23013_i));
	return _22931_lit;
}



inline jule::Str _1aa0826e1_binary_num(jule::Slice<jule::U8>& _25216_txt) {
	jule::Str _25231_lit = jule::Str();
	if ((!(_1aa080678_bytes_has_prefix(_25216_txt,jule::Str("0b", 2))))) {
		_25231_lit = jule::Str();
		return _25231_lit;
	}
	if ((_25216_txt.len() < 2LL)) {
		return _25231_lit;
	}
	
	jule::I64 _26113_i = 2LL;
	for (; _26113_i < static_cast<jule::I64>(static_cast<jule::I64>(_25216_txt.len())); (_26113_i)++) {
		{
			if ((_25216_txt[_26113_i] != '_') && (!(_1aa079d9d_is_binary(_25216_txt[_26113_i])))) {
				goto _iter_end_1a6c4b5ab;
			}
		}
	_iter_next_1a6c4b5ab:;
	}
	_iter_end_1a6c4b5ab:;
	if ((_26113_i == 2LL)) {
		return _25231_lit;
	}
	_25231_lit = static_cast<jule::Str>(_25216_txt.slice(0LL,_26113_i));
	return _25231_lit;
}



inline jule::Bool _1aa082acb_is_float_fmt_e(jule::U8 _27419_b,jule::I64 _27428_i) {
	return (_27428_i > 0LL) && ((_27419_b == 'e') || (_27419_b == 'E'));
}



inline jule::Bool _1aa082eb6_is_float_fmt_p(jule::U8 _27819_b,jule::I64 _27828_i) {
	return (_27828_i > 0LL) && ((_27819_b == 'p') || (_27819_b == 'P'));
}



inline jule::Bool _1aa0833a1_is_float_fmt_dotnp(jule::Slice<jule::U8>& _28224_txt,jule::I64 _28241_i) {
	if (_28224_txt[_28241_i] != '.') {
		return false;
	}
	(_28241_i)++;
	_julec_label_loop:;
	for (; _28241_i < static_cast<jule::I64>(static_cast<jule::I64>(_28224_txt.len())); (_28241_i)++) {
		{
			jule::U8 _28913_b = _28224_txt[_28241_i];
			{
				
				if (_28913_b == '_' || _1aa079a90_is_decimal(_28913_b)) {
					_case_begin_1a6c51759:;
					{
						goto _iter_next_1a6c509cd;
					}
				}
				else if (_1aa082eb6_is_float_fmt_p(_28913_b,_28241_i)) {
					_case_begin_1a6c517c0:;
					{
						return true;
					}
				}
				else {
					_case_begin_1a6c516b0:;
					{
						goto _iter_end_1a6c509cd;
					}
				}
				_match_end_1a6c5165a:;
			}
		}
	_iter_next_1a6c509cd:;
	}
	_iter_end_1a6c509cd:;
	return false;
}



inline jule::Bool _1aa08378b_is_float_fmt_dotp(jule::Slice<jule::U8>& _30323_txt,jule::I64 _30336_i) {
	{
		
		if ((_30323_txt.len() < 3LL)) {
			_case_begin_1a6c538d2:;
			{
				goto _case_begin_1a6c539c0;
			}
		}
		else if (_30323_txt[_30336_i] != '.') {
			_case_begin_1a6c539c0:;
			{
				goto _case_begin_1a6c53a36;
			}
		}
		else if ((_30323_txt[(_30336_i + 1LL)] != 'p') && (_30323_txt[(_30336_i + 1LL)] != 'P')) {
			_case_begin_1a6c53a36:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a6c53283:;
			{
				return true;
			}
		}
		_match_end_1a6c531d9:;
	}
}



inline jule::Bool _1aa083b76_is_float_fmt_dotfp(jule::Slice<jule::U8>& _31624_txt,jule::I64 _31637_i) {
	{
		
		if ((_31624_txt.len() < 4LL)) {
			_case_begin_1a6c55e56:;
			{
				goto _case_begin_1a6c56033;
			}
		}
		else if (_31624_txt[_31637_i] != '.') {
			_case_begin_1a6c56033:;
			{
				goto _case_begin_1a6c56099;
			}
		}
		else if ((_31624_txt[(_31637_i + 1LL)] != 'f') && (_31624_txt[(_31637_i + 1LL)] != 'F')) {
			_case_begin_1a6c56099:;
			{
				goto _case_begin_1a6c55c58;
			}
		}
		else if ((_31624_txt[(_31637_i + 2LL)] != 'p') && (_31624_txt[(_31637_i + 1LL)] != 'P')) {
			_case_begin_1a6c55c58:;
			{
				return false;
			}
		}
		else {
			_case_begin_1a6c55582:;
			{
				return true;
			}
		}
		_match_end_1a6c554d8:;
	}
}



inline jule::Str _1aa0840a5_octal_num(jule::Slice<jule::U8>& _33115_txt) {
	jule::Str _33130_lit = jule::Str();
	if (_33115_txt[0LL] != '0') {
		_33130_lit = jule::Str();
		return _33130_lit;
	}
	if ((_33115_txt.len() < 2LL)) {
		return _33130_lit;
	}
	jule::I64 _33913_octal_start = 1LL;
	jule::Bool _34113_o = false;
	if (_33115_txt[1LL] == 'o') {
		if ((_33115_txt.len() < 3LL)) {
			return _33130_lit;
		}
		(_33913_octal_start)++;
		_34113_o=true;
	}
	jule::I64 _35013_i = _33913_octal_start;
	for (; _35013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33115_txt.len())); (_35013_i)++) {
		{
			jule::U8 _35213_b = _33115_txt[_35013_i];
			if (_35213_b == '.') {
				if (_34113_o) {
					_33130_lit = jule::Str();
					return _33130_lit;
				}
				_33130_lit = _1aa0820c5_float_num(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if (_1aa082acb_is_float_fmt_e(_35213_b,_35013_i)) {
				_33130_lit = _1aa080a63_float_fmt_e(_33115_txt,_35013_i);
				return _33130_lit;
			}
			if ((_35213_b != '_') && (!(_1aa07a1ab_is_octal(_35213_b)))) {
				goto _iter_end_1a6c5a741;
			}
		}
	_iter_next_1a6c5a741:;
	}
	_iter_end_1a6c5a741:;
	if (_35013_i == _33913_octal_start) {
		return _33130_lit;
	}
	_33130_lit = static_cast<jule::Str>(_33115_txt.slice(0LL,_35013_i));
	return _33130_lit;
}



inline jule::Str _1aa0843b3_hex_num(jule::Slice<jule::U8>& _37313_txt) {
	jule::Str _37328_lit = jule::Str();
	if ((_37313_txt.len() < 3LL)) {
		return _37328_lit;
	}
	if ((_37313_txt[0LL] != '0') || ((_37313_txt[1LL] != 'x') && (_37313_txt[1LL] != 'X'))) {
		return _37328_lit;
	}
	
	jule::I64 _38213_i = 2LL;
	_julec_label_loop:;
	for (; _38213_i < static_cast<jule::I64>(static_cast<jule::I64>(_37313_txt.len())); (_38213_i)++) {
		{
			jule::U8 _38513_b = _37313_txt[_38213_i];
			{
				
				if (_1aa08378b_is_float_fmt_dotp(_37313_txt,_38213_i)) {
					_case_begin_1a6c621b5:;
					{
						_37328_lit = _1aa081b52_float_fmt_dotp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1aa083b76_is_float_fmt_dotfp(_37313_txt,_38213_i)) {
					_case_begin_1a6c6223c:;
					{
						_37328_lit = _1aa081767_float_fmt_dotfp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1aa082eb6_is_float_fmt_p(_38513_b,_38213_i)) {
					_case_begin_1a6c622b4:;
					{
						_37328_lit = _1aa080e92_float_fmt_p(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if (_1aa0833a1_is_float_fmt_dotnp(_37313_txt,_38213_i)) {
					_case_begin_1a6c6233b:;
					{
						_37328_lit = _1aa08137c_float_fmt_dotnp(_37313_txt,_38213_i);
						return _37328_lit;
					}
				}
				else if ((_38513_b != '_') && (!(_1aa07a4b9_is_hex(_38513_b)))) {
					_case_begin_1a6c623b3:;
					{
						goto _iter_end_1a6c61626;
					}
				}
				_match_end_1a6c620b6:;
			}
		}
	_iter_next_1a6c61626:;
	}
	_iter_end_1a6c61626:;
	if ((_38213_i == 2LL)) {
		return _37328_lit;
	}
	_37328_lit = static_cast<jule::Str>(_37313_txt.slice(0LL,_38213_i));
	return _37328_lit;
}



inline jule::Str _1aa08479d_hex_escape(jule::Slice<jule::U8>& _40616_txt,jule::I64 _40629_n) {
	jule::Str _40639_seq = jule::Str();
	if (_40616_txt.len() < _40629_n) {
		return _40639_seq;
	}
	
	jule::I64 _41213_i = 2LL;
	for (; _41213_i < _40629_n; (_41213_i)++) {
		{
			if ((!(_1aa07a4b9_is_hex(_40616_txt[_41213_i])))) {
				return _40639_seq;
			}
		}
	_iter_next_1a6c65350:;
	}
	_iter_end_1a6c65350:;
	_40639_seq=static_cast<jule::Str>(_40616_txt.slice(0LL,_40629_n));
	return _40639_seq;
}



inline jule::Str _1aa084b00_big_unicode_point_escape(jule::Slice<jule::U8>& _42430_txt) {
	return _1aa08479d_hex_escape(_42430_txt,10LL);
}



inline jule::Str _1aa084e41_little_unicode_point_escape(jule::Slice<jule::U8>& _42933_txt) {
	return _1aa08479d_hex_escape(_42933_txt,6LL);
}



inline jule::Str _1aa08523d_hex_byte_escape(jule::Slice<jule::U8>& _43421_txt) {
	return _1aa08479d_hex_escape(_43421_txt,4LL);
}



inline jule::Str _1aa08554b_byte_escape(jule::Slice<jule::U8>& _43917_txt) {
	jule::Str _43932_seq = jule::Str();
	if ((_43917_txt.len() < 4LL)) {
		return _43932_seq;
	}
	if (((!(_1aa07a1ab_is_octal(_43917_txt[1LL]))) || (!(_1aa07a1ab_is_octal(_43917_txt[2LL])))) || (!(_1aa07a1ab_is_octal(_43917_txt[3LL])))) {
		return _43932_seq;
	}
	_43932_seq = static_cast<jule::Str>(_43917_txt.slice(0LL,4LL));
	return _43932_seq;
}



inline jule::Slice<_1c4810251_Log> _1aa08b266_lex(jule::Ptr<_1aa07b982_File> _83216_f,jule::I64 _83226_mode) {
	if ((_83216_f == nullptr)) {
		return nullptr;
	}
	_1aa085ddc_Lex _83713_lex = _1aa085ddc_Lex(_83226_mode,jule::Slice<_1aa07563a_Token>(),_83216_f,0LL,jule::I64(),-1LL,jule::Slice<_1c4810251_Log>());
	_1aa08950b_new_line(&_83713_lex);
	_1aa086d99_lex(&_83713_lex);
	if ((_83713_lex._field_errors.len() > 0LL)) {
		return _83713_lex._field_errors;
	}
	_83216_f.get()._field_tokens=_83713_lex._field_tokens;
	return nullptr;
}



inline jule::Bool _1dd541bd3_find_module_file(jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>& _1226_dirents) {
	{
		auto &expr = _1226_dirents;
		auto it = expr.begin();
		_iter_begin_1a6cacc27:;
		if (it != expr.end()) {
			jule::Ptr<_1dc3797b9_DirEntry> &_1a6cacc6b_d = *it;
			{
				if ((!(_1dc309947_is_dir(_1a6cacc6b_d.get()._field_stat.ptr()))) && (_1a6cacc6b_d.get()._field_name == jule::Str("jule.mod", 8))) {
					return true;
				}
			}
			_iter_next_1a6cacc27:;
			++it;
			goto _iter_begin_1a6cacc27;
		}
		_iter_end_1a6cacc27:;
	}
	return false;
}



inline jule::Str _1dd542332_find_module_file_deep(jule::Str _2434_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>> _2617_dirents = ({
				auto except = static__1c478d2de_read(_2434_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a6cad200;
					goto _iter_end_1a6cad200;
				} jule::Slice<jule::Ptr<_1dc3797b9_DirEntry>>();});
			});
			jule::Bool _3013_exist = _1dd541bd3_find_module_file(_2617_dirents);
			if (_3013_exist) {
				return _2434_path;
			}
			jule::I64 _3513_n = _2434_path.len();
			_2434_path=_1c478a891_dir(_2434_path);
			if (_2434_path.len() == _3513_n) {
				goto _iter_end_1a6cad200;
			}
		}
	_iter_next_1a6cad200:;
	}
	_iter_end_1a6cad200:;
	return jule::Str();
}



inline jule::Slice<_1c4810251_Log> _1dd544147_check_module_file(jule::Str _4626_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1dc2bd389_read(_1c4789ac1_join(jule::Slice<jule::Str>({_4626_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1c4810251_Log>({_1c4810251_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
			return jule::Slice<_1c4810251_Log>({_1c4810251_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file could not checked because of a problem", 50),jule::Str(),jule::Str())});
		} jule::Slice<jule::U8>();});
	});
	jule::Str _549_s = _1c47870da_trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));
	if ((_549_s.len() != 0LL)) {
		return jule::Slice<_1c4810251_Log>({_1c4810251_Log(static_cast<jule::I64>(0LL),jule::I64(),jule::I64(),jule::Str(),jule::Str("module file has syntax error(s)", 31),jule::Str(),jule::Str())});
	}
	return nullptr;
}



inline jule::Ptr<_1aa5da8b4_FileInfo> _1aa5db200_parse_file(jule::Ptr<_1aa07b982_File> _2323_f) {
	if ((_2323_f == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_1aa5da8b4_FileInfo> _2813_finf = jule::new_ptr<_1aa5da8b4_FileInfo>(_1aa5da8b4_FileInfo());
	std::tie(_2813_finf.get()._field_ast,_2813_finf.get()._field_errors) = _1aa5db552_parse_fileset(_2323_f);
	if ((_2813_finf.get()._field_errors.len() > 0LL)) {
		_2813_finf.get()._field_ast=nullptr;
	}
	return _2813_finf;
}



inline std::tuple<jule::Ptr<_1dd582707_Ast>,jule::Slice<_1c4810251_Log>> _1aa5db552_parse_fileset(jule::Ptr<_1aa07b982_File> _6022_f) {
	jule::Ptr<_1aa611b60_Parser> _6113_p = jule::new_ptr<_1aa611b60_Parser>(_1aa611b60_Parser());
	_1aa624810_parse(_6113_p, _6022_f);
	return std::make_tuple(_6113_p.get()._field_ast,_6113_p.get()._field_errors);
}



inline jule::Ptr<_1aa09632b_ScopeTree> _1aa5dc234_new_scope(void) {
	return jule::new_ptr<_1aa09632b_ScopeTree>();
}



inline std::tuple<jule::Bool,jule::Bool> _1aa5dc4a9_is_st(_1aa07563a_Token _4710_current,_1aa07563a_Token _4726_prev) {
	jule::Bool _4741_ok = jule::Bool();
	jule::Bool _4751_terminated = jule::Bool();
	_4741_ok=(_4710_current._field_id == static_cast<jule::U64>(5LLU)) || (_4726_prev._field_row < _4710_current._field_row);
	_4751_terminated=_4710_current._field_id == static_cast<jule::U64>(5LLU);
	return std::make_tuple(_4741_ok,_4751_terminated);
}



inline jule::Bool _1aa5dc8d8_prev_is_incomplete_expr(jule::Slice<_1aa07563a_Token>& _5329_tokens,jule::I64& _5347_i) {
	if ((_5347_i > 1LL) && (_5329_tokens[(_5347_i - 2LL)]._field_id == static_cast<jule::U64>(23LLU))) {
		return false;
	}
	{
		_1aa07563a_Token* _5913_prev = (&(_5329_tokens[(_5347_i - 1LL)]));
		return (_5913_prev->_field_id == static_cast<jule::U64>(20LLU)) || (((_5913_prev->_field_id == static_cast<jule::U64>(7LLU)) && _1aa0764a4_is_bin_op(_5913_prev->_field_kind)) && (_5913_prev->_field_row < _5329_tokens[_5347_i]._field_row));
	}
}



inline std::tuple<jule::I64,jule::Bool> _1aa5dcd06_next_st_pos(jule::Slice<_1aa07563a_Token>& _6817_tokens,jule::I64 _6834_start) {
	jule::I64 _6913_brace_n = 0LL;
	jule::I64 _7013_i = _6834_start;
	for (; _7013_i < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;
			jule::Bool _7317_terminated = false;
			_1aa07563a_Token _7413_tok = _6817_tokens[_7013_i];
			{
				auto &_match_expr{ _7413_tok._field_id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1a71b0734:;
					{
						{
							auto &_match_expr{ _7413_tok._field_kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a71b2bed:;
								{
									if ((_6913_brace_n == 0LL) && (_7013_i > _6834_start)) {
										if ((!(_1aa5dc8d8_prev_is_incomplete_expr(_6817_tokens,_7013_i)))) {
											std::tie(_7217_ok,_7317_terminated) = _1aa5dc4a9_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
											if (_7217_ok) {
												goto _julec_label_return;
											}
										}
									}
									(_6913_brace_n)++;
								}
							}
							else {
								_case_begin_1a71b1070:;
								{
									(_6913_brace_n)--;
									if ((_6913_brace_n == 0LL) && ((_7013_i + 1LL) < static_cast<jule::I64>(static_cast<jule::I64>(_6817_tokens.len())))) {
										std::tie(_7217_ok,_7317_terminated) = _1aa5dc4a9_is_st(_6817_tokens[(_7013_i + 1LL)],_7413_tok);
										if (_7217_ok) {
											(_7013_i)++;
											goto _julec_label_return;
										}
									}
								}
							}
							_match_end_1a71b12b2:;
						}
						goto _iter_next_1a71ae48b;
					}
				}
				_match_end_1a71b0954:;
			}
			if ((_6913_brace_n != 0LL)) {
				goto _iter_next_1a71ae48b;
			}
			if (_7013_i > _6834_start) {
				if (_1aa5dc8d8_prev_is_incomplete_expr(_6817_tokens,_7013_i)) {
					goto _iter_next_1a71ae48b;
				}
				std::tie(_7217_ok,_7317_terminated) = _1aa5dc4a9_is_st(_7413_tok,_6817_tokens[(_7013_i - 1LL)]);
			} else {
				std::tie(_7217_ok,_7317_terminated) = _1aa5dc4a9_is_st(_7413_tok,_7413_tok);
			}
			if ((!(_7217_ok))) {
				goto _iter_next_1a71ae48b;
			}
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			}
			return std::make_tuple(_7013_i,_7317_terminated);
		}
	_iter_next_1a71ae48b:;
	}
	_iter_end_1a71ae48b:;
	return std::make_tuple(_7013_i,false);
}



inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Bool> _1aa5dd1e1_skip_st(jule::I64& _13017_i,jule::Slice<_1aa07563a_Token> _13029_tokens) {
	jule::I64 _1319_start = _13017_i;
	jule::Bool _13213_terminated = false;
	std::tie(_13017_i,_13213_terminated) = _1aa5dcd06_next_st_pos(_13029_tokens,_1319_start);
	jule::Slice<_1aa07563a_Token> _13413_st_tokens = _13029_tokens.slice(_1319_start,_13017_i);
	if (_13213_terminated) {
		if ((_13413_st_tokens.len() == 1LL)) {
			std::tie(_13413_st_tokens,_13213_terminated) = _1aa5dd1e1_skip_st(_13017_i,_13029_tokens);
			return std::make_tuple(_13413_st_tokens,_13213_terminated);
		}
		_13413_st_tokens=_13413_st_tokens.slice(0LL,(_13413_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_13413_st_tokens,_13213_terminated);
}



inline jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _1aa5ddb92_split_stmts(jule::Slice<_1aa07563a_Token>& _15221_tokens) {
	jule::Slice<jule::Ptr<_1aa5dd587_Stmt>> _15313_stmts = nullptr;
	jule::I64 _15413_pos = 0LL;
	while (_15413_pos < static_cast<jule::I64>(static_cast<jule::I64>(_15221_tokens.len()))) {
		{
			jule::Slice<_1aa07563a_Token> _15618_stmt;
			jule::Bool _15624_terminated;
			std::tie(_15618_stmt,_15624_terminated) = _1aa5dd1e1_skip_st(_15413_pos,_15221_tokens);
			_15313_stmts = jule::alloc_for_append(_15313_stmts,1);_15313_stmts.__push(jule::new_ptr<_1aa5dd587_Stmt>(_1aa5dd587_Stmt(_15618_stmt,_15624_terminated)));
		}
	_iter_next_1a71bb399:;
	}
	_iter_end_1a71bb399:;
	return _15313_stmts;
}



inline jule::Ptr<_1aa5ed278_CallData> _1aa5ed850_get_call_data(jule::Slice<_1aa07563a_Token>& _4523_tokens) {
	jule::Ptr<_1aa5ed278_CallData> _4613_data = jule::new_ptr<_1aa5ed278_CallData>(_1aa5ed278_CallData());
	std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_args_tokens) = _1aa6100d1_range_last(_4523_tokens);
	if ((_4613_data.get()._field_expr_tokens.len() == 0LL)) {
		return _4613_data;
	}
	_1aa07563a_Token _539_token = _4613_data.get()._field_expr_tokens[(_4613_data.get()._field_expr_tokens.len() - 1LL)];
	if ((_539_token._field_id == static_cast<jule::U64>(3LLU)) && (_539_token._field_kind == jule::Str("]", 1))) {
		std::tie(_4613_data.get()._field_expr_tokens,_4613_data.get()._field_generics_tokens) = _1aa6100d1_range_last(_4613_data.get()._field_expr_tokens);
	}
	return _4613_data;
}



inline jule::Slice<_1aa07563a_Token> _1aa5edba2_get_block_expr(jule::Slice<_1aa07563a_Token>& _6124_tokens) {
	jule::I64 _6213_brace_n = 0LL;
	jule::I64 _6313_skip_to_next_brace_close = 0LL;
	{
		auto &expr = _6124_tokens;
		auto it = expr.begin();
		_iter_begin_1a71c1987:;
		if (it != expr.end()) {
			jule::I64 _1a71c1a31_i = it - expr.begin();
			_1aa07563a_Token _1a71c1ca6_tok = *it;
			{
				{
					auto &_match_expr{ _1a71c1ca6_tok._field_id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1a71c225c:;
						{
							(_6313_skip_to_next_brace_close)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a71c25d1:;
						{
							{
								auto &_match_expr{ _1a71c1ca6_tok._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a71c3a22:;
									{
										if ((_6213_brace_n > 0LL) || (_6313_skip_to_next_brace_close > 0LL)) {
											if ((_6313_skip_to_next_brace_close > 0LL)) {
												(_6313_skip_to_next_brace_close)--;
											}
											(_6213_brace_n)++;
											goto _match_end_1a71c367b;
										}
										return _6124_tokens.slice(0LL,_1a71c1a31_i);
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a71c3c86:;
									{
										(_6213_brace_n)++;
									}
								}
								else {
									_case_begin_1a71c34b1:;
									{
										(_6213_brace_n)--;
									}
								}
								_match_end_1a71c367b:;
							}
						}
					}
					_match_end_1a71c257b:;
				}
			}
			_iter_next_1a71c1987:;
			++it;
			_1a71c1a31_i++;
			goto _iter_begin_1a71c1987;
		}
		_iter_end_1a71c1987:;
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Slice<_1aa07563a_Token>> _1aa5edeb0_split_colon(jule::Slice<_1aa07563a_Token>& _9521_tokens) {
	jule::I64 _9613_range_n = 0LL;
	{
		auto &expr = _9521_tokens;
		auto it = expr.begin();
		_iter_begin_1a71c4e0d:;
		if (it != expr.end()) {
			jule::I64 _1a71c4ea7_i = it - expr.begin();
			_1aa07563a_Token _1a71c201a_token = *it;
			{
				{
					auto &_match_expr{ _1a71c201a_token._field_id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a71c5826:;
						{
							{
								auto &_match_expr{ _1a71c201a_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a71c688d:;
									{
										(_9613_range_n)++;
										goto _iter_next_1a71c4e0d;
									}
								}
								else {
									_case_begin_1a71c6283:;
									{
										(_9613_range_n)--;
									}
								}
								_match_end_1a71c64c5:;
							}
						}
					}
					else if (_match_expr == static_cast<jule::U64>(11LLU)) {
						_case_begin_1a71c5b45:;
						{
							if ((_9613_range_n < 1LL)) {
								jule::Slice<_1aa07563a_Token> _11325_l = _9521_tokens.slice(0LL,_1a71c4ea7_i);
								jule::Slice<_1aa07563a_Token> _11425_r = _9521_tokens.slice((_1a71c4ea7_i + 1LL));
								return std::make_tuple(_11325_l,_11425_r);
							}
						}
					}
					_match_end_1a71c5ae0:;
				}
			}
			_iter_next_1a71c4e0d:;
			++it;
			_1a71c4ea7_i++;
			goto _iter_begin_1a71c4e0d;
		}
		_iter_end_1a71c4e0d:;
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::I64 _1aa5ee312_find_lowest_prec_op(jule::Slice<_1aa07563a_Token>& _12425_tokens) {
	jule::U8 _12913_prec = 255LLU;
	jule::I64 _13013_prec_pos = -1LL;
	jule::I64 _13213_brace_n = 0LL;
	jule::Bool _13313_skip_to_next_brace_open = false;
	{
		auto &expr = _12425_tokens;
		auto it = expr.begin();
		_iter_begin_1a71c90aa:;
		if (it != expr.end()) {
			jule::I64 _1a71c9154_i = it - expr.begin();
			_1aa07563a_Token &_1a71c93c9_token = *it;
			{
				{
					
					if (_1a71c93c9_token._field_id == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a71c9ad3:;
						{
							{
								auto &_match_expr{ _1a71c93c9_token._field_kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a71cae03:;
									{
										_13313_skip_to_next_brace_open=false;
										goto _case_begin_1a71cb123;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a71cb123:;
									{
										(_13213_brace_n)++;
									}
								}
								else {
									_case_begin_1a71ca892:;
									{
										(_13213_brace_n)--;
									}
								}
								_match_end_1a71caa6d:;
							}
							goto _iter_next_1a71c90aa;
						}
					}
					else if (_13313_skip_to_next_brace_open) {
						_case_begin_1a71c9b5a:;
						{
							goto _iter_next_1a71c90aa;
						}
					}
					else if (_1a71c93c9_token._field_id == static_cast<jule::U64>(16LLU)) {
						_case_begin_1a71c9bd2:;
						{
							_13313_skip_to_next_brace_open=true;
							goto _iter_next_1a71c90aa;
						}
					}
					else if ((_1a71c9154_i == 0LL)) {
						_case_begin_1a71c9c59:;
						{
							goto _iter_next_1a71c90aa;
						}
					}
					else if (_1a71c93c9_token._field_id != static_cast<jule::U64>(7LLU)) {
						_case_begin_1a71c9cd1:;
						{
							goto _iter_next_1a71c90aa;
						}
					}
					else if ((_13213_brace_n > 0LL)) {
						_case_begin_1a71c9d58:;
						{
							goto _iter_next_1a71c90aa;
						}
					}
					_match_end_1a71c997e:;
				}
				_1aa07563a_Token _16113_left = _12425_tokens[(_1a71c9154_i - 1LL)];
				if ((_16113_left._field_id == static_cast<jule::U64>(7LLU)) || (_16113_left._field_id == static_cast<jule::U64>(11LLU))) {
					goto _iter_next_1a71c90aa;
				}
				if (((_1a71c9154_i > 1LL) && (_16113_left._field_id == static_cast<jule::U64>(3LLU))) && (_16113_left._field_kind == jule::Str("]", 1))) {
					_1aa07563a_Token _16917_lleft = _12425_tokens[(_1a71c9154_i - 2LL)];
					if ((_16917_lleft._field_id == static_cast<jule::U64>(3LLU)) && (_16917_lleft._field_kind == jule::Str("[", 1))) {
						if ((_1a71c93c9_token._field_kind == jule::Str("&", 1)) || (_1a71c93c9_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_1a71c90aa;
						}
					}
				}
				jule::U8 _17813_p = _1aa075c89_prec(&_1a71c93c9_token);
				if ((_17813_p != 0LLU) && (_17813_p <= _12913_prec)) {
					_12913_prec=_17813_p;
					_13013_prec_pos=_1a71c9154_i;
				}
			}
			_iter_next_1a71c90aa:;
			++it;
			_1a71c9154_i++;
			goto _iter_begin_1a71c90aa;
		}
		_iter_end_1a71c90aa:;
	}
	return _13013_prec_pos;
}



inline jule::Ptr<_1aa08ece7_IdentExpr> _1aa5ee620_build_ident_expr(_1aa07563a_Token& _18826_token) {
	return jule::new_ptr<_1aa08ece7_IdentExpr>(_1aa08ece7_IdentExpr(_18826_token,_18826_token._field_kind,false));
}



inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::I64> _1aa5ee92d_get_range_expr_tokens(jule::Slice<_1aa07563a_Token>& _19631_tokens) {
	jule::I64 _19713_range_n = 0LL;
	jule::I64 _19813_i = (_19631_tokens.len() - 1LL);
	for (; (_19813_i >= 0LL); (_19813_i)--) {
		{
			_1aa07563a_Token _20013_tok = _19631_tokens[_19813_i];
			if (_20013_tok._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _20013_tok._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a71d9bc0:;
						{
							(_19713_range_n)++;
						}
					}
					else {
						_case_begin_1a71d9560:;
						{
							(_19713_range_n)--;
						}
					}
					_match_end_1a71d9890:;
				}
			}
			if ((_19713_range_n == 0LL)) {
				return std::make_tuple(_19631_tokens.slice(0LL,_19813_i),_19713_range_n);
			}
		}
	_iter_next_1a71d80b9:;
	}
	_iter_end_1a71d80b9:;
	return std::make_tuple(nullptr,_19713_range_n);
}



inline jule::Bool _1aa60ce36_check_assign_tokens(jule::Slice<_1aa07563a_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_1aa07a7c7_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::I64 _2013_brace_n = 0LL;
	{
		auto &expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_1a71dc09b:;
		if (it != expr.end()) {
			_1aa07563a_Token &_1a71dc145_t = *it;
			{
				if (_1a71dc145_t._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a71dc145_t._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a71dd157:;
							{
								(_2013_brace_n)++;
							}
						}
						else {
							_case_begin_1a71dc9e7:;
							{
								(_2013_brace_n)--;
							}
						}
						_match_end_1a71dcd27:;
					}
				}
				if ((_2013_brace_n < 0LL)) {
					return false;
				} else if ((_2013_brace_n > 0LL)) {
					goto _iter_next_1a71dc09b;
				} else if ((_1a71dc145_t._field_id == static_cast<jule::U64>(7LLU)) && _1aa07ade3_is_assign_op(_1a71dc145_t._field_kind)) {
					return true;
				}
			}
			_iter_next_1a71dc09b:;
			++it;
			goto _iter_begin_1a71dc09b;
		}
		_iter_end_1a71dc09b:;
	}
	return false;
}



inline _1c4810251_Log _1aa60e71d_make_err(jule::I64 _4913_row,jule::I64 _4923_col,jule::Ptr<_1aa07b982_File>& _4934_f,jule::Str _4944_fmt,jule::Slice<jule::Any> _4957_args) {
	return _1c4810251_Log(static_cast<jule::I64>(1LL),_4913_row,_4923_col,_4934_f.get()._field_path,_1c4810938_logf(_4944_fmt,_4957_args),jule::Str(),jule::Str());
}



inline jule::Slice<_1aa07563a_Token> _1aa60ecc3_range(jule::I64& _6815_i,jule::Str _6823_open,jule::Str _6840_close,jule::Slice<_1aa07563a_Token>& _6863_tokens) {
	if (_6815_i >= static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))) {
		return nullptr;
	}
	_1aa07563a_Token _739_tok = _6863_tokens[_6815_i];
	if ((_739_tok._field_id != static_cast<jule::U64>(3LLU)) || (_739_tok._field_kind != _6823_open)) {
		return nullptr;
	}
	(_6815_i)++;
	jule::I64 _7913_range_n = 1LL;
	jule::I64 _809_start = _6815_i;
	for (; (_7913_range_n != 0LL) && (_6815_i < static_cast<jule::I64>(static_cast<jule::I64>(_6863_tokens.len()))); (_6815_i)++) {
		{
			_1aa07563a_Token _8213_token = _6863_tokens[_6815_i];
			if (_8213_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _8213_token._field_kind };
					
					if (_match_expr == _6823_open) {
						_case_begin_1a71e3eb5:;
						{
							(_7913_range_n)++;
						}
					}
					else if (_match_expr == _6840_close) {
						_case_begin_1a71e4339:;
						{
							(_7913_range_n)--;
						}
					}
					_match_end_1a71e42d4:;
				}
			}
		}
	_iter_next_1a71e3206:;
	}
	_iter_end_1a71e3206:;
	return _6863_tokens.slice(_809_start,(_6815_i - 1LL));
}



inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::Slice<_1aa07563a_Token>> _1aa6100d1_range_last(jule::Slice<_1aa07563a_Token>& _10120_tokens) {
	jule::Slice<_1aa07563a_Token> _10139_cutted = jule::Slice<_1aa07563a_Token>();
	jule::Slice<_1aa07563a_Token> _10156_cut = jule::Slice<_1aa07563a_Token>();
	if ((_10120_tokens.len() == 0LL)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	} else if (_10120_tokens[(_10120_tokens.len() - 1LL)]._field_id != static_cast<jule::U64>(3LLU)) {
		_10139_cutted = _10120_tokens;
		_10156_cut = nullptr;
		return std::make_tuple(_10139_cutted,_10156_cut);
	}
	jule::I64 _10813_brace_n = 0LL;
	jule::I64 _10913_i = (_10120_tokens.len() - 1LL);
	for (; (_10913_i >= 0LL); (_10913_i)--) {
		{
			_1aa07563a_Token _11113_token = _10120_tokens[_10913_i];
			if (_11113_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _11113_token._field_kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a71e8b79:;
						{
							(_10813_brace_n)++;
							goto _iter_next_1a71e535c;
						}
					}
					else {
						_case_begin_1a71e8519:;
						{
							(_10813_brace_n)--;
						}
					}
					_match_end_1a71e8849:;
				}
			}
			if ((_10813_brace_n == 0LL)) {
				_10139_cutted = _10120_tokens.slice(0LL,_10913_i);
				_10156_cut = _10120_tokens.slice(_10913_i);
				return std::make_tuple(_10139_cutted,_10156_cut);
			}
		}
	_iter_next_1a71e535c:;
	}
	_iter_end_1a71e535c:;
	_10139_cutted = _10120_tokens;
	_10156_cut = nullptr;
	return std::make_tuple(_10139_cutted,_10156_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_1aa07563a_Token>>,jule::Slice<_1c4810251_Log>> _1aa6105dc_parts(jule::Slice<_1aa07563a_Token>& _13915_tokens,jule::U64 _13932_id,jule::Bool _13945_expr_must) {
	if ((_13915_tokens.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_1aa07563a_Token>> _14413_parts = nullptr;
	jule::Slice<_1c4810251_Log> _14513_errors = nullptr;
	jule::I64 _14713_range_n = 0LL;
	jule::I64 _14813_last = 0LL;
	{
		auto &expr = _13915_tokens;
		auto it = expr.begin();
		_iter_begin_1a71ebbd2:;
		if (it != expr.end()) {
			jule::I64 _1a71ebdad_i = it - expr.begin();
			_1aa07563a_Token _1a71ec100_token = *it;
			{
				if (_1a71ec100_token._field_id == static_cast<jule::U64>(3LLU)) {
					{
						auto &_match_expr{ _1a71ec100_token._field_kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a71ed0bd:;
							{
								(_14713_range_n)++;
								goto _iter_next_1a71ebbd2;
							}
						}
						else {
							_case_begin_1a71ec95d:;
							{
								(_14713_range_n)--;
							}
						}
						_match_end_1a71ecc8d:;
					}
				}
				if ((_14713_range_n > 0LL)) {
					goto _iter_next_1a71ebbd2;
				}
				if (_1a71ec100_token._field_id == _13932_id) {
					if (_13945_expr_must && ((_1a71ebdad_i - _14813_last) <= 0LL)) {
						_1c4810251_Log _16821_err = _1aa60e71d_make_err(_1a71ec100_token._field_row,_1a71ec100_token._field_column,_1a71ec100_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
						_14513_errors = jule::alloc_for_append(_14513_errors,1);_14513_errors.__push(_16821_err);
					}
					_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last,_1a71ebdad_i));
					_14813_last=static_cast<jule::I64>((_1a71ebdad_i + 1LL));
				}
			}
			_iter_next_1a71ebbd2:;
			++it;
			_1a71ebdad_i++;
			goto _iter_begin_1a71ebbd2;
		}
		_iter_end_1a71ebbd2:;
	}
	if (_14813_last < static_cast<jule::I64>(static_cast<jule::I64>(_13915_tokens.len()))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(_13915_tokens.slice(_14813_last));
	} else if ((!(_13945_expr_must))) {
		_14413_parts = jule::alloc_for_append(_14413_parts,1);_14413_parts.__push(jule::Slice<_1aa07563a_Token>());
	}
	return std::make_tuple(_14413_parts,_14513_errors);
}



inline jule::Str _1aa61093e_get_close_kind_of_brace(jule::Str _18528_left) {
	{
		auto &_match_expr{ _18528_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a720249b:;
			{
				return jule::Str("(", 1);
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a7202512:;
			{
				return jule::Str("{", 1);
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a7202611:;
			{
				return jule::Str("[", 1);
			}
		}
		else {
			_case_begin_1a71ebc9d:;
			{
				return jule::Str();
			}
		}
		_match_end_1a72012be:;
	}
}



inline _1c4810251_Log _1aa610de5_compiler_err(_1aa07563a_Token& _19418_token,jule::Str& _19433_fmt,jule::Slice<jule::Any> _19446_args) {
	return _1c4810251_Log(static_cast<jule::I64>(1LL),_19418_token._field_row,_19418_token._field_column,_19418_token._field_file.get()._field_path,_1c4810938_logf(_19433_fmt,_19446_args),_1aa07d159_get_row(_19418_token._field_file.ptr(), _19418_token._field_row),jule::Str());
}



inline void _1aa611324_push_suggestion(_1c4810251_Log* _20531_log,jule::Str _20542_fmt,jule::Slice<jule::Any> _20555_args) {
	_20531_log->_field_suggestion=_1c4810938_logf(_20542_fmt,_20555_args);
}



inline jule::Str _1aa6116ba_tokstoa(jule::Slice<_1aa07563a_Token>& _20913_tokens) {
	jule::Str _21013_s = jule::Str();
	{
		auto &expr = _20913_tokens;
		auto it = expr.begin();
		_iter_begin_1a7205aed:;
		if (it != expr.end()) {
			_1aa07563a_Token &_1a7205b97_token = *it;
			{
				_21013_s+=_1a7205b97_token._field_kind;
			}
			_iter_next_1a7205aed:;
			++it;
			goto _iter_begin_1a7205aed;
		}
		_iter_end_1a7205aed:;
	}
	return _21013_s;
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa625a20_build_void_type(void) {
	return jule::new_ptr<_1dd583461_TypeDecl>();
}



inline jule::Ptr<_1dd583461_TypeDecl> _1aa625c73_build_prim_type(_1aa07563a_Token _2224_t) {
	return jule::new_ptr<_1dd583461_TypeDecl>(_1dd583461_TypeDecl(_2224_t,jule::Any(jule::Any(jule::new_ptr<_1dd58387e_IdentTypeDecl>(_1dd58387e_IdentTypeDecl(_2224_t,_2224_t._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_1dd583461_TypeDecl>>()))))));
}



inline std::tuple<jule::Slice<_1aa07563a_Token>,jule::I64> _1aa62615d_split_map_range(jule::Slice<_1aa07563a_Token>& _3525_tokens,jule::I64& _3547_i) {
	jule::Slice<_1aa07563a_Token> _3557_range_tokens = jule::Slice<_1aa07563a_Token>();
	jule::I64 _3580_colon = jule::I64();
	_3580_colon=-1LL;
	jule::I64 _3713_range_n = 0LL;
	jule::I64 _389_start = _3547_i;
	for (; _3547_i < static_cast<jule::I64>(static_cast<jule::I64>(_3525_tokens.len())); (_3547_i)++) {
		{
			_1aa07563a_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == static_cast<jule::U64>(3LLU)) {
				{
					auto &_match_expr{ _4013_token._field_kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a7209371:;
						{
							(_3713_range_n)++;
							goto _iter_next_1a72079ac;
						}
					}
					else {
						_case_begin_1a7208c11:;
						{
							(_3713_range_n)--;
						}
					}
					_match_end_1a7209041:;
				}
			}
			if ((_3713_range_n == 0LL)) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice((_389_start + 1LL),_3547_i);
				goto _iter_end_1a72079ac;
			} else if ((_3713_range_n != 1LL)) {
				goto _iter_next_1a72079ac;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == static_cast<jule::U64>(11LLU))) {
				_3580_colon=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_3547_i - _389_start)) - 1LL));
			}
		}
	_iter_next_1a72079ac:;
	}
	_iter_end_1a72079ac:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



inline jule::I64 _1ac3726e3_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::I64>(64LL - static_cast<jule::I64>(static_cast<jule::I64>(_1ac37a07a_len64(_6124_x))));
}



inline jule::I64 _1ac373282_trailing_zeros(jule::U64 _8323_x) {
	
	return static_cast<jule::I64>(_1ac374052_trailing_zeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8323_x))));
}



inline jule::I64 _1ac373c44_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LLU)) {
		return 32LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ac372b22_DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10525_x & static_cast<jule::U32>(static_cast<jule::U32>((-(_10525_x))))) * 125613361LLU) >> 27LLU))]));
}



inline jule::I64 _1ac374052_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LLU)) {
		return 64LL;
	}
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ac372eb8_DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11425_x & static_cast<jule::U64>(static_cast<jule::U64>((-(_11425_x))))) * 285870213051353865LLU) >> 58LLU))]));
}



inline jule::I64 _1ac379c6c_len32(jule::U32 _35218_x) {
	jule::I64 _35228_n = jule::I64();
	if ((_35218_x >= 65536LLU)) {
		_35218_x>>=16LLU;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LLU)) {
		_35218_x>>=8LLU;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::I64>(_35228_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35218_x)]))));
	return _35228_n;
}



inline jule::I64 _1ac37a07a_len64(jule::U64 _36618_x) {
	jule::I64 _36628_n = jule::I64();
	if ((_36618_x >= 4294967296LLU)) {
		_36618_x>>=32LLU;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LLU)) {
		_36618_x>>=16LLU;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LLU)) {
		_36618_x>>=8LLU;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::I64>(_36628_n + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36618_x)]))));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1ac37aec1_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x + _41522_y)) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x & _41522_y))) | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_41514_x | _41522_y))) & static_cast<jule::U64>(static_cast<jule::U64>((~(_41544_sum)))))))))) >> 63LLU));
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1ac37cac7_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LLU);
	jule::U64 _5029_x1 = (_49914_x >> 32LLU);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LLU);
	jule::U64 _5049_y1 = (_49922_y >> 32LLU);
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + static_cast<jule::U64>(static_cast<jule::U64>((_5059_w0 >> 32LLU)));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5029_x1 * _5049_y1)) + _5089_w2)) + static_cast<jule::U64>(static_cast<jule::U64>((_50713_w1 >> 32LLU))));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _1ac2a437d_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _1ac2a46d0_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _1ac2a49dd_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _1ac2a4d40_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline std::tuple<jule::F64,jule::I64> _1ac2a70d9_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::I64 _4739_exp = jule::I64();
	{
		
		if ((_4718_f == 0LL)) {
			_case_begin_1a7323974:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		else if (_1ac331185_is_inf(_4718_f,0LL) || _1ac30e196_is_nan(_4718_f)) {
			_case_begin_1a73239eb:;
			{
				_4728_frac = _4718_f;
				_4739_exp = 0LL;
				return std::make_tuple(_4728_frac,_4739_exp);
			}
		}
		_match_end_1a7323864:;
	}
	std::tie(_4718_f,_4739_exp) = _1ac34a1c1_normalize(_4718_f);
	jule::U64 _5613_x = _1ac2a49dd_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)))) - 1023LL))) + 1LL));
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



inline jule::F64 _1ac2e1d49_nan(void) {
	return static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _1ac30e196_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _1ac311242_inf(jule::I64 _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _1ac331185_is_inf(jule::F64 _7215_f,jule::I64 _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline std::tuple<jule::F64,jule::I64> _1ac34a1c1_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::I64 _8232_exp = jule::I64();
	
	if ((_1ac380e60_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		_8224_y = static_cast<jule::F64>((_8214_x * 4503599627370496LL));
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



inline jule::F64 _1ac304c08_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		
		if (_1ac30e196_is_nan(_11112_x) || _1ac331185_is_inf(_11112_x,1LL)) {
			_case_begin_1a737bc41:;
			{
				return _11112_x;
			}
		}
		else if ((_11112_x < 0LL)) {
			_case_begin_1a737bcb8:;
			{
				return static_cast<jule::F64>(_1ac2e1d49_nan());
			}
		}
		else if ((_11112_x == 0LL)) {
			_case_begin_1a737bd40:;
			{
				return static_cast<jule::F64>(_1ac311242_inf(-1LL));
			}
		}
		_match_end_1a737bb97:;
	}
	jule::F64 _13314_f1;
	jule::I64 _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _1ac2a70d9_frexp(_11112_x);
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = (_13314_f1 - 1LL);
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(2LL + _1389_f))));
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.6666666666666735 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.2857142874366239 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.1818357216161805 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.14798198605116586))))))))))))))));
	jule::F64 _1469_t2 = _1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.3999999999940942 + static_cast<jule::F64>(static_cast<jule::F64>(_1449_s4 * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(0.22222198432149784 + static_cast<jule::F64>(static_cast<jule::F64>((_1449_s4 * 0.15313837699209373)))))))))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.6931471803691238))) - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq - static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1429_s * static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_1489_hfsq + _1479_R))))) + static_cast<jule::F64>(static_cast<jule::F64>((_1399_k * 0.00000000019082149292705877))))))))) - _1389_f))));
}



inline jule::F64 _1ac380e60_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_1ac2a49dd_f64_bits(_4312_x))) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _1ac382a33_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _1ac380e60_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if ((_469_abs_f > 4503599627370496LL)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_abs_f + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_1a74165b1:;
		}
		_iter_end_1a74165b1:;
		if ((_4413_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::F64 _1ac382eb7_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::I64 _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _1ac2a70d9_frexp(_4413_x);
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));
	}
	return static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>((static_cast<jule::F64>(static_cast<jule::F64>(_1ac304c08_log(_4510_frac))) * 1.4426950408889634))) + static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(_4516_exp))));
}



inline jule::Str _1abdcd33c_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::I64 _7837_prec,jule::I64 _7848_bit_size) {
	return static_cast<jule::Str>(_1abe1ec85_generic_ftoa(jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_1ab0d42e1_max(static_cast<jule::I64>((_7837_prec + 4LL)),24LL))),_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _1abe1ec85_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::I64 _8259_prec,jule::I64 _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	jule::Ptr<_1ac3a1bb7_FloatInfo> _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a76c9b2c:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ac2a437d_f32_bits(static_cast<jule::F32>(static_cast<jule::F32>(_8234_val)))));
				_8413_flt=((jule::Ptr<_1ac3a1bb7_FloatInfo>)((&(_1ab087272_F32_INFO))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a76c9852:;
			{
				_8313_bits=static_cast<jule::U64>(_1ac2a49dd_f64_bits(_8234_val));
				_8413_flt=((jule::Ptr<_1ac3a1bb7_FloatInfo>)((&(_1ab0ac495_F64_INFO))));
			}
		}
		else {
			_case_begin_1a76c9225:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a76c9445:;
	}
	jule::Bool _969_neg = ((_8313_bits >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)))) != 0LLU);
	jule::I64 _9713_exp = static_cast<jule::I64>(_8313_bits >> _8413_flt.get()._field_mantbits) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))));
	jule::U64 _9813_mant = _8313_bits & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits)) - 1LLU))));
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL))) {
			_case_begin_1a76c9973:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a76d1826:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'n','a','n'}));
						}
					}
					else if (_969_neg) {
						_case_begin_1a76d1936:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'-','i','n','f'}));
						}
					}
					else {
						_case_begin_1a76d05a0:;
						{
							return jule::append(_8221_dst,jule::Slice<jule::U8>({'+','i','n','f'}));
						}
					}
					_match_end_1a76d04d4:;
				}
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a76ceb21:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a76c949a:;
			{
				_9813_mant|=static_cast<jule::U64>(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a76cde1c:;
	}
	_9713_exp+=_8413_flt.get()._field_bias;
	if (_8244_fmt == 'b') {
		return _1ac094e1b_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _1ac148332_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	
	_1ac3a20d5_DecimalSlice _13213_digs = _1ac3a20d5_DecimalSlice();
	jule::Bool _13313_ok = false;
	jule::Bool _1359_shortest = (_8259_prec < 0LL);
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL);
		_1ac43c2b3_ryu_ftoa_shortest(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a76d52ec:;
				{
					_8259_prec=static_cast<jule::I64>(_1ab0d42e1_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a76d682b:;
				{
					_8259_prec=static_cast<jule::I64>(_1ab0d42e1_max(static_cast<jule::I64>(_13213_digs._field_nd - _13213_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a76d68b4:;
				{
					_8259_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a76d67c6:;
		}
	} else if (_8244_fmt != 'f') {
		jule::I64 _15217_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a76d9378:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a76d9026:;
				{
					if ((_8259_prec == 0LL)) {
						_8259_prec=1LL;
					}
					_15217_digits=_8259_prec;
				}
			}
			else {
				_case_begin_1a76d8850:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a76d6e47:;
		}
		if ((_8270_bit_size == 32LL) && (_15217_digits <= 9LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ac43ade9_ryu_ftoa_fixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL);
			_1ac43b449_ryu_ftoa_fixed64(_13213_digs,_9813_mant,static_cast<jule::I64>(_9713_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_8413_flt.get()._field_mantbits)))),_15217_digits);
			_13313_ok=true;
		}
	}
	if ((!(_13313_ok))) {
		return _1ac0a8abc_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _1ac19502c_fmt_digits(_8221_dst,_1359_shortest,_969_neg,_13213_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _1ac0a8abc_big_ftoa(jule::Slice<jule::U8> _18217_dst,jule::I64 _18234_prec,jule::U8 _18245_fmt,jule::Bool _18256_neg,jule::U64 _18313_mant,jule::I64 _18324_exp,_1ac3a1bb7_FloatInfo& _18335_flt) {
	_1ac4415e7_Decimal _18413_d = _1ac4415e7_Decimal();
	_1ac441c9b_assign(&_18413_d, _18313_mant);
	_1ac4420ba_shift(&_18413_d, static_cast<jule::I64>(_18324_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_18335_flt._field_mantbits)))));
	_1ac3a20d5_DecimalSlice _18713_digs = _1ac3a20d5_DecimalSlice();
	jule::Bool _1889_shortest = (_18234_prec < 0LL);
	if (_1889_shortest) {
		_1abdba1e7_round_shortest(_18413_d,_18313_mant,_18324_exp,_18335_flt);
		_18713_digs=_1ac3a20d5_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a76e344d:;
				{
					_18234_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a76e34e7:;
				{
					_18234_prec=static_cast<jule::I64>(_1ab0d42e1_max(static_cast<jule::I64>(_18713_digs._field_nd - _18713_digs._field_dp),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a76e355d:;
				{
					_18234_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a76e2529:;
		}
	} else {
		{
			auto &_match_expr{ _18245_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a76e2183:;
				{
					_1ac442a27_round(&_18413_d, static_cast<jule::I64>((_18234_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a76e21e9:;
				{
					_1ac442a27_round(&_18413_d, static_cast<jule::I64>(_18413_d._field_dp + _18234_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a76e2260:;
				{
					if ((_18234_prec == 0LL)) {
						_18234_prec=1LL;
					}
					_1ac442a27_round(&_18413_d, _18234_prec);
				}
			}
			_match_end_1a76e5263:;
		}
		_18713_digs=_1ac3a20d5_DecimalSlice(_18413_d._field_d.slice(0LL),_18413_d._field_nd,_18413_d._field_dp,jule::Bool());
	}
	return _1ac19502c_fmt_digits(_18217_dst,_1889_shortest,_18256_neg,_18713_digs,_18234_prec,_18245_fmt);
}



inline jule::Slice<jule::U8> _1ac19502c_fmt_digits(jule::Slice<jule::U8> _21919_dst,jule::Bool _21932_shortest,jule::Bool _21948_neg,_1ac3a20d5_DecimalSlice _22013_digs,jule::I64 _22037_prec,jule::U8 _22048_fmt) {
	{
		auto &_match_expr{ _22048_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a76e9421:;
			{
				return _1abdbea37_fmt_e(_21919_dst,_21948_neg,_22013_digs,_22037_prec,_22048_fmt);
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a76e94dc:;
			{
				return _1ac041ba9_fmt_f(_21919_dst,_21948_neg,_22013_digs,_22037_prec);
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a76e9553:;
			{
				jule::I64 _22817_eprec = _22037_prec;
				if ((_22817_eprec > _22013_digs._field_nd) && (_22013_digs._field_nd >= _22013_digs._field_dp)) {
					_22817_eprec=_22013_digs._field_nd;
				}
				if (_21932_shortest) {
					_22817_eprec=6LL;
				}
				jule::I64 _23813_exp = (_22013_digs._field_dp - 1LL);
				if ((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec)) {
					if (_22037_prec > _22013_digs._field_nd) {
						_22037_prec=_22013_digs._field_nd;
					}
					return _1abdbea37_fmt_e(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>((_22037_prec - 1LL)),static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_22048_fmt + 'e')) - 'g'));
				}
				if (_22037_prec > _22013_digs._field_dp) {
					_22037_prec=_22013_digs._field_nd;
				}
				return _1ac041ba9_fmt_f(_21919_dst,_21948_neg,_22013_digs,static_cast<jule::I64>(_1ab0d42e1_max(static_cast<jule::I64>(_22037_prec - _22013_digs._field_dp),0LL)));
			}
		}
		_match_end_1a76e93bb:;
	}
	return jule::append(_21919_dst,jule::Slice<jule::U8>({'%',_22048_fmt}));
}



inline void _1abdba1e7_round_shortest(_1ac4415e7_Decimal& _25724_d,jule::U64 _25736_mant,jule::I64 _25747_exp,_1ac3a1bb7_FloatInfo& _25758_flt) {
	if ((_25736_mant == 0LLU)) {
		_25724_d._field_nd=0LL;
		return;
	}
	jule::I64 _2789_minexp = (_25758_flt._field_bias + 1LL);
	if ((_25747_exp > _2789_minexp) && ((332LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25724_d._field_dp - _25724_d._field_nd)))) >= static_cast<jule::I64>(static_cast<jule::I64>(100LL * static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits)))))))))) {
		return;
	}
	_1ac4415e7_Decimal _28713_upper = _1ac4415e7_Decimal();
	_1ac441c9b_assign(&_28713_upper, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) + 1LLU)));
	_1ac4420ba_shift(&_28713_upper, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_25747_exp - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;
	jule::I64 _29813_explo = 0LL;
	if ((_25736_mant > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _25758_flt._field_mantbits))) || (_25747_exp == _2789_minexp)) {
		_29713_mantlo=static_cast<jule::U64>((_25736_mant - 1LLU));
		_29813_explo=_25747_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_25736_mant << 1LLU)) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25747_exp - 1LL));
	}
	_1ac4415e7_Decimal _30613_lower = _1ac4415e7_Decimal();
	_1ac441c9b_assign(&_30613_lower, static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(_29713_mantlo << 1LLU)) + 1LLU)));
	_1ac4420ba_shift(&_30613_lower, static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_29813_explo - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_25758_flt._field_mantbits))))) - 1LL)));
	jule::Bool _3139_inclusive = ((_25736_mant & 1LL) == 0LLU);
	jule::U8 _32613_upperdelta = 0LLU;
	jule::I64 _33013_ui = 0LL;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = (_33013_ui - _28713_upper._field_dp) + _25724_d._field_dp;
			if (_33513_mi >= _25724_d._field_nd) {
				goto _iter_end_1a7705350;
			}
			jule::I64 _33913_li = (_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);
			if ((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd)) {
				_34017_l=_30613_lower._field_d[_33913_li];
			}
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25724_d._field_d[_33513_mi];
			}
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);
			if (_33013_ui < _28713_upper._field_nd) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			}
			jule::Bool _35613_okdown = (_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd));
			{
				
				if ((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u)) {
					_case_begin_1a77102b1:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if ((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u)) {
					_case_begin_1a7710338:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if ((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0'))) {
					_case_begin_1a77103b0:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a771024a:;
			}
			jule::Bool _37713_okup = (_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd));
			{
				
				if (_35613_okdown && _37713_okup) {
					_case_begin_1a771387a:;
					{
						_1ac442a27_round(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a77138e1:;
					{
						_1ac4423d9_round_down(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a7713957:;
					{
						_1ac442708_round_up(&_25724_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;
					}
				}
				_match_end_1a771279c:;
			}
		}
	_iter_next_1a7705350:;
	}
	_iter_end_1a7705350:;
}



inline jule::Slice<jule::U8> _1abdbea37_fmt_e(jule::Slice<jule::U8> _39614_dst,jule::Bool _39627_neg,_1ac3a20d5_DecimalSlice _39638_d,jule::I64 _39655_prec,jule::U8 _39666_fmt) {
	if (_39627_neg) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('-');
	}
	jule::U8 _40313_ch = '0';
	if ((_39638_d._field_nd != 0LL)) {
		_40313_ch=_39638_d._field_d[0LL];
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	if ((_39655_prec > 0LL)) {
		_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('.');
		jule::I64 _41217_i = 1LL;
		jule::I64 _41313_m = _1ac1bc274_min(_39638_d._field_nd,static_cast<jule::I64>((_39655_prec + 1LL)));
		if (_41217_i < _41313_m) {
			_39614_dst=jule::append(_39614_dst,_39638_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		}
		for (; _41217_i <= _39655_prec; (_41217_i)++) {
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push('0');
			}
		_iter_next_1a7719441:;
		}
		_iter_end_1a7719441:;
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_39666_fmt);
	jule::I64 _42513_exp = (_39638_d._field_dp - 1LL);
	if ((_39638_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	}
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	}
	_39614_dst = jule::alloc_for_append(_39614_dst,1);_39614_dst.__push(_40313_ch);
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a771b773:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push('0');_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_42513_exp))) + '0'));
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a771b7d9:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,2);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1a771bb19:;
			{
				_39614_dst = jule::alloc_for_append(_39614_dst,3);_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 100LL)))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp / 10LL)))) % 10LL))) + '0'));_39614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_42513_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1a771bab4:;
	}
	return _39614_dst;
}



inline jule::Slice<jule::U8> _1ac041ba9_fmt_f(jule::Slice<jule::U8> _45114_dst,jule::Bool _45127_neg,_1ac3a20d5_DecimalSlice _45138_d,jule::I64 _45155_prec) {
	if (_45127_neg) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('-');
	}
	if ((_45138_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1ac1bc274_min(_45138_d._field_nd,_45138_d._field_dp);
		_45114_dst=jule::append(_45114_dst,_45138_d._field_d.slice(0LL,_45917_m));
		for (; _45917_m < _45138_d._field_dp; (_45917_m)++) {
			{
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
			}
		_iter_next_1a7721e82:;
		}
		_iter_end_1a7721e82:;
	} else {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('0');
	}
	if ((_45155_prec > 0LL)) {
		_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push('.');
		jule::I64 _47017_i = 0LL;
		for (; _47017_i < _45155_prec; (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);
				jule::I64 _47317_j = _45138_d._field_dp + _47017_i;
				if ((0LL <= _47317_j) && (_47317_j < _45138_d._field_nd)) {
					_47221_ch=_45138_d._field_d[_47317_j];
				}
				_45114_dst = jule::alloc_for_append(_45114_dst,1);_45114_dst.__push(_47221_ch);
			}
		_iter_next_1a7723bed:;
		}
		_iter_end_1a7723bed:;
	}
	return _45114_dst;
}



inline jule::Slice<jule::U8> _1ac094e1b_fmt_b(jule::Slice<jule::U8> _48414_dst,jule::Bool _48427_neg,jule::U64 _48438_mant,jule::I64 _48453_exp,_1ac3a1bb7_FloatInfo& _48464_flt) {
	if (_48427_neg) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('-');
	}
	std::tie(_48414_dst,std::ignore) = _1ac446bc4_fmt_bits(_48414_dst,_48438_mant,10LL,false,true);
	_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('p');
	_48453_exp-=static_cast<jule::I64>(static_cast<jule::I64>(_48464_flt._field_mantbits));
	if ((_48453_exp >= 0LL)) {
		_48414_dst = jule::alloc_for_append(_48414_dst,1);_48414_dst.__push('+');
	}
	std::tie(_48414_dst,std::ignore) = _1ac446bc4_fmt_bits(_48414_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48453_exp)),10LL,(_48453_exp < 0LL),true);
	return _48414_dst;
}



inline jule::Slice<jule::U8> _1ac148332_fmt_x(jule::Slice<jule::U8> _50614_dst,jule::I64 _50627_prec,jule::U8 _50638_fmt,jule::Bool _50649_neg,jule::U64 _50713_mant,jule::I64 _50728_exp,_1ac3a1bb7_FloatInfo& _50739_flt) {
	if ((_50713_mant == 0LLU)) {
		_50728_exp=0LL;
	}
	_50713_mant<<=static_cast<jule::U64>(60LLU - _50739_flt._field_mantbits);
	while ((_50713_mant != 0LLU) && ((_50713_mant & 1152921504606846976LLU) == 0LLU)) {
		{
			_50713_mant<<=1LLU;
			(_50728_exp)--;
		}
	_iter_next_1a772a474:;
	}
	_iter_end_1a772a474:;
	if ((_50627_prec >= 0LL) && (_50627_prec < 15LL)) {
		jule::U64 _52113_shift = static_cast<jule::U64>(_50627_prec << 2LLU);
		jule::U64 _52213_extra = ((_50713_mant << _52113_shift) & 1152921504606846975LLU);
		_50713_mant>>=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_52213_extra | static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_50713_mant & 1LLU))))) > 576460752303423488LLU)) {
			(_50713_mant)++;
		}
		_50713_mant<<=static_cast<jule::U64>(60LLU - _52113_shift);
		if (((_50713_mant & 2305843009213693952LLU) != 0LLU)) {
			_50713_mant>>=1LLU;
			(_50728_exp)++;
		}
	}
	jule::Str _5359_hex = (((_50638_fmt == 'X')) ? (jule::Str("0123456789ABCDEF", 16)) : (jule::Str("0123456789abcdef", 16)));
	if (_50649_neg) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('-');
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push('0');_50614_dst.__push(_50638_fmt);_50614_dst.__push(static_cast<jule::U8>('0' + static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50713_mant >> 60LLU) & 1LLU))))));
	_50713_mant<<=4LLU;
	if ((_50627_prec < 0LL) && (_50713_mant != 0LLU)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		while ((_50713_mant != 0LLU)) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1a77315bd:;
		}
		_iter_end_1a77315bd:;
	} else if ((_50627_prec > 0LL)) {
		_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push('.');
		jule::I64 _55317_i = 0LL;
		for (; _55317_i < _50627_prec; (_55317_i)++) {
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_5359_hex[static_cast<jule::I64>(((_50713_mant >> 60LLU) & 15LLU))]);
				_50713_mant<<=4LLU;
			}
		_iter_next_1a7730de7:;
		}
		_iter_end_1a7730de7:;
	}
	jule::U8 _56113_ch = static_cast<jule::U8>(80LLU);
	if (_50638_fmt == static_cast<jule::U8>(static_cast<jule::U8>(_1abe0d68b_lower(_50638_fmt)))) {
		_56113_ch='p';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	if ((_50728_exp < 0LL)) {
		_56113_ch='-';
		_50728_exp=static_cast<jule::I64>((-(_50728_exp)));
	} else {
		_56113_ch='+';
	}
	_50614_dst = jule::alloc_for_append(_50614_dst,1);_50614_dst.__push(_56113_ch);
	{
		
		if ((_50728_exp < 100LL)) {
			_case_begin_1a7738ad1:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,2);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else if ((_50728_exp < 1000LL)) {
			_case_begin_1a7735bcc:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,3);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		else {
			_case_begin_1a772e951:;
			{
				_50614_dst = jule::alloc_for_append(_50614_dst,4);_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 1000LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp / 100LL)))) % 10LL))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(((_50728_exp / 10LL) % 10LL)))) + '0'));_50614_dst.__push(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>((_50728_exp % 10LL)))) + '0'));
			}
		}
		_match_end_1a7735e85:;
	}
	return _50614_dst;
}



inline jule::I64 _1ac1bc274_min(jule::I64 _5868_a,jule::I64 _58616_b) {
	return static_cast<jule::I64>((((_5868_a < _58616_b)) ? (_5868_a) : (_58616_b)));
}



inline jule::I64 _1ab0d42e1_max(jule::I64 _5908_a,jule::I64 _59016_b) {
	return static_cast<jule::I64>((((_5908_a > _59016_b)) ? (_5908_a) : (_59016_b)));
}



inline jule::U8 _1abe0d68b_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>(_4710_c | ('x' - 'X'));
}



inline std::tuple<jule::U64,jule::I64> _1ac28e28b___parse_uint(jule::Str _5121_s,jule::I64 _5133_base,jule::I64 _5148_bit_size) {
	if (_5121_s.empty()) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
	}
	{
		
		if ((2LL <= _5133_base) && (_5133_base <= 36LL)) {
			_case_begin_1a773e4bb:;
		}
		else if ((_5133_base == 0LL)) {
			_case_begin_1a773e356:;
			{
				_5133_base=10LL;
				if (_5121_s[0LL] == '0') {
					{
						
						if ((_5121_s.len() >= 3LL) && (_1abe0d68b_lower(_5121_s[1LL]) == 'b')) {
							_case_begin_1a77414ac:;
							{
								_5133_base=2LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1abe0d68b_lower(_5121_s[1LL]) == 'o')) {
							_case_begin_1a77410b1:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else if ((_5121_s.len() >= 3LL) && (_1abe0d68b_lower(_5121_s[1LL]) == 'x')) {
							_case_begin_1a7740ca3:;
							{
								_5133_base=16LL;
								(_5121_s).mut_slice(2LL);
							}
						}
						else {
							_case_begin_1a7740c3c:;
							{
								_5133_base=8LL;
								(_5121_s).mut_slice(1LL);
							}
						}
						_match_end_1a7740b71:;
					}
				}
			}
		}
		else {
			_case_begin_1a773d564:;
			{
				return std::make_tuple(0LLU,static_cast<jule::I64>(3LL));
			}
		}
		_match_end_1a773d50e:;
	}
	if ((_5148_bit_size == 0LL)) {
		_5148_bit_size=64LL;
	} else if ((_5148_bit_size < 0LL) || (_5148_bit_size > 64LL)) {
		return std::make_tuple(0LLU,static_cast<jule::I64>(4LL));
	}
	jule::U64 _9013_cutoff = 0LLU;
	{
		auto &_match_expr{ _5133_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a77468be:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a7746517:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a7745e62:;
			{
				_9013_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_5133_base)))))) + 1LLU));
			}
		}
		_match_end_1a77461a4:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5148_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a7746319:;
			{
				_10013_max_val=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a7747bab:;
			{
				_10013_max_val=jule::MAX_U64;
			}
		}
		_match_end_1a77471e9:;
	}
	jule::U64 _10813_n = 0LLU;
	{
		auto &expr = _5121_s;
		auto it = expr.begin();
		_iter_begin_1a7748151:;
		if (it != expr.end()) {
			jule::U8 _1a7748ccd_c = *it;
			{
				jule::U8 _11017_d = 0LLU;
				{
					
					if (('0' <= _1a7748ccd_c) && (_1a7748ccd_c <= '9')) {
						_case_begin_1a7749d56:;
						{
							_11017_d=static_cast<jule::U8>(_1a7748ccd_c - '0');
						}
					}
					else if (('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1abe0d68b_lower(_1a7748ccd_c)))) && (_1abe0d68b_lower(_1a7748ccd_c) <= 'z')) {
						_case_begin_1a7749be1:;
						{
							_11017_d=static_cast<jule::U8>((static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1abe0d68b_lower(_1a7748ccd_c))) - 'a')) + 10LLU));
						}
					}
					else if (_1a7748ccd_c == '_') {
						_case_begin_1a7749c57:;
						{
							goto _iter_next_1a7748151;
						}
					}
					else {
						_case_begin_1a774977e:;
						{
							return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
						}
					}
					_match_end_1a7749707:;
				}
				if (_11017_d >= static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_5133_base)))) {
					return std::make_tuple(0LLU,static_cast<jule::I64>(2LL));
				}
				if (_10813_n >= _9013_cutoff) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n*=static_cast<jule::U64>(static_cast<jule::U64>(_5133_base));
				jule::U64 _13213_n1 = _10813_n + static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_11017_d)));
				if ((_13213_n1 < _10813_n) || (_13213_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,static_cast<jule::I64>(1LL));
				}
				_10813_n=_13213_n1;
			}
			_iter_next_1a7748151:;
			++it;
			goto _iter_begin_1a7748151;
		}
		_iter_end_1a7748151:;
	}
	return std::make_tuple(_10813_n,static_cast<jule::I64>(0LL));
}



inline jule::Exceptional<jule::U64> _1abea2bd6_parse_uint(jule::Str _14623_s,jule::I64 _14635_base,jule::I64 _14650_bit_size) {
	jule::U64 _14710_un;
	jule::I64 _14714_err;
	std::tie(_14710_un,_14714_err) = _1ac28e28b___parse_uint(_14623_s,_14635_base,_14650_bit_size);
	if (_14714_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::U64>(_14714_err);
	}
	return jule::Exceptional<jule::U64>(jule::Any(),_14710_un);
}



inline jule::Exceptional<jule::I64> _1ac05d0e3_parse_int(jule::Str _17222_s,jule::I64 _17230_base,jule::I64 _17245_bit_size) {
	if (_17222_s.empty()) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(2LL));
	}
	jule::Bool _17813_neg = false;
	if (_17222_s[0LL] == '+') {
		(_17222_s).mut_slice(1LL);
	} else if (_17222_s[0LL] == '-') {
		_17813_neg=true;
		(_17222_s).mut_slice(1LL);
	}
	jule::U64 _18714_un;
	jule::I64 _18718_err;
	std::tie(_18714_un,_18718_err) = _1ac28e28b___parse_uint(_17222_s,_17230_base,_17245_bit_size);
	if ((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL))) {
		return jule::Exceptional<jule::I64>(_18718_err);
	}
	if ((_17245_bit_size == 0LL)) {
		_17245_bit_size=64LL;
	}
	jule::U64 _1969_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_17245_bit_size - 1LL)))));
	if ((!(_17813_neg)) && (_18714_un >= _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	if (_17813_neg && (_18714_un > _1969_cutoff)) {
		return jule::Exceptional<jule::I64>(static_cast<jule::I64>(1LL));
	}
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	}
	return jule::Exceptional<jule::I64>(jule::Any(),_20313_n);
}



inline std::tuple<jule::F64,jule::Bool> _1ac4349b4_eisel_lemire64(jule::U64 _4123_man,jule::I64 _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if ((_4123_man == 0LLU)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(9223372036854775808LLU));
		}
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::I64 _579_clz = _1ac3726e3_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_579_clz));
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>(((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1ac37cac7_mul64(_4123_man,_1ac435652_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][1LL]);
	if (((_6314_x_hi & 511LLU) == 511LLU) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1ac37cac7_mul64(_4123_man,_1ac435652_DETAILED_POWS_OF_TEN[(_4133_exp10 - -348LL)][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LLU) == 511LLU) && ((_6829_merged_lo + 1LLU) == 0LLU)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LLU);
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_799_msb + 9LLU))));
	_6013_ret_exp2-=static_cast<jule::U64>(1LLU ^ _799_msb);
	if (((_6324_x_lo == 0LLU) && ((_6314_x_hi & 511LLU) == 0LLU)) && ((_8013_ret_mantissa & 3LLU) == 1LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>((_8013_ret_mantissa & 1LLU));
	_8013_ret_mantissa>>=1LLU;
	if (((_8013_ret_mantissa >> 53LLU) > 0LLU)) {
		_8013_ret_mantissa>>=1LLU;
		_6013_ret_exp2+=1LLU;
	}
	if (((_6013_ret_exp2 - 1LLU) >= 2046LLU)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_8013_ret_mantissa & 4503599627370495LLU)));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1ac434e8c_eisel_lemire32(jule::U64 _11023_man,jule::I64 _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if ((_11023_man == 0LLU)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_1ac2a46d0_f32_from_bits(2147483648LLU));
		}
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::I64 _1329_clz = _1ac3726e3_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz));
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>(((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1ac37cac7_mul64(_11023_man,_1ac435652_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][1LL]);
	if (((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1ac37cac7_mul64(_11023_man,_1ac435652_DETAILED_POWS_OF_TEN[(_11033_exp10 - -348LL)][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1549_msb + 38LLU))));
	_13513_ret_exp2-=static_cast<jule::U64>(1LLU ^ _1549_msb);
	if (((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_ret_mantissa & 3LLU) == 1LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>((_15513_ret_mantissa & 1LLU));
	_15513_ret_mantissa>>=1LLU;
	if (((_15513_ret_mantissa >> 24LLU) > 0LLU)) {
		_15513_ret_mantissa>>=1LLU;
		_13513_ret_exp2+=1LLU;
	}
	if (((_13513_ret_exp2 - 1LLU) >= 254LLU)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_15513_ret_mantissa & 8388607LLU)));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LLU;
	}
	_11058_f = static_cast<jule::F32>(_1ac2a46d0_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_ret_bits))));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::I64 _1ac43670d_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > static_cast<jule::I64>(static_cast<jule::I64>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::I64 _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+='a' - 'A';
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_1a777b2b6:;
	}
	_iter_end_1a777b2b6:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::I64,jule::Bool> _1ac436a4e_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::I64 _6834_n = jule::I64();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s.empty()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::I64 _7213_sign = 1LL;
	jule::I64 _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a7780bd3:;
			{
				if (_6816_s[0LL] == '-') {
					_7213_sign=-1LL;
				}
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);
				goto _case_begin_1a7780c49;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a7780c49:;
			{
				jule::I64 _8317_case_n = _1ac43670d_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
				if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
					_8317_case_n=3LL;
				}
				if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
					_6826_f = static_cast<jule::F64>(_1ac311242_inf(_7213_sign));
					_6834_n = static_cast<jule::I64>(_7313_nsign + _6834_n);
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a7780cb0:;
			{
				if ((_1ac43670d_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL)) {
					_6826_f = static_cast<jule::F64>(_1ac2e1d49_nan());
					_6834_n = 3LL;
					_6842_ok = true;
					return std::make_tuple(_6826_f,_6834_n,_6842_ok);
				}
			}
		}
		_match_end_1a7780b7d:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool,jule::Bool,jule::Bool,jule::I64,jule::Bool> _1ac436d5c_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::I64 _10340_exp = jule::I64();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::I64 _10449_i = jule::I64();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		
		if (_10315_s[_10449_i] == '+') {
			_case_begin_1a7787635:;
			{
				(_10449_i)++;
			}
		}
		else if (_10315_s[_10449_i] == '-') {
			_case_begin_1a7787a86:;
			{
				_10350_neg=true;
				(_10449_i)++;
			}
		}
		_match_end_1a77875d0:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::I64 _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_10315_s[_10449_i] == '0')) && (_1abe0d68b_lower(_10315_s[(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LLU;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::I64 _13013_nd = 0LL;
	jule::I64 _13113_nd_mant = 0LL;
	jule::I64 _13213_dp = 0LL;
	for (; _10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len())); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				
				if (_13413_c == '_') {
					_case_begin_1a778d8c2:;
					{
						goto _iter_next_1a778cd66;
					}
				}
				else if (_13413_c == '.') {
					_case_begin_1a778d949:;
					{
						if (_12813_sawdot) {
							goto _julec_label_loop_end;
						}
						_12813_sawdot=true;
						_13213_dp=_13013_nd;
						goto _iter_next_1a778cd66;
					}
				}
				else if (('0' <= _13413_c) && (_13413_c <= '9')) {
					_case_begin_1a778d9c1:;
					{
						_12913_sawdigits=true;
						if ((_13413_c == '0') && (_13013_nd == 0LL)) {
							(_13213_dp)--;
							goto _iter_next_1a778cd66;
						}
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=_11813_base;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(_13413_c - '0'));
							(_13113_nd_mant)++;
						} else if (_13413_c != '0') {
							_10425_trunc=true;
						}
						goto _iter_next_1a778cd66;
					}
				}
				else if (((_11813_base == 16LLU) && ('a' <= static_cast<jule::U8>(static_cast<jule::U8>(_1abe0d68b_lower(_13413_c))))) && (_1abe0d68b_lower(_13413_c) <= 'f')) {
					_case_begin_1a778da48:;
					{
						_12913_sawdigits=true;
						(_13013_nd)++;
						if (_13113_nd_mant < _11913_max_mant_digits) {
							_10325_mantissa*=16LLU;
							_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U64>(((_1abe0d68b_lower(_13413_c) - 'a') + 10LLU)));
							(_13113_nd_mant)++;
						} else {
							_10425_trunc=true;
						}
						goto _iter_next_1a778cd66;
					}
				}
				_match_end_1a778d7d4:;
			}
			goto _iter_end_1a778cd66;
		}
	_iter_next_1a778cd66:;
	}
	_iter_end_1a778cd66:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if ((_11813_base == 16LLU)) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && (_1abe0d68b_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _19717_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19717_esign=-1LL;
		}
		if (((_10449_i >= static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::I64 _20717_e = 0LL;
		for (; (_10449_i < static_cast<jule::I64>(static_cast<jule::I64>(_10315_s.len()))) && ((('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')) || (_10315_s[_10449_i] == '_')); (_10449_i)++) {
			{
				if (_10315_s[_10449_i] == '_') {
					goto _iter_next_1a7799669;
				}
				if ((_20717_e < 10000LL)) {
					_20717_e=static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_20717_e * 10LL))) + static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_10315_s[_10449_i]))))) - '0');
				}
			}
		_iter_next_1a7799669:;
		}
		_iter_end_1a7799669:;
		_13213_dp+=static_cast<jule::I64>(_20717_e * _19717_esign);
	} else if ((_11813_base == 16LLU)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((_10325_mantissa != 0LLU)) {
		_10340_exp=static_cast<jule::I64>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _1ac4387a9_atof64exact(jule::U64 _48216_mantissa,jule::I64 _48235_exp,jule::Bool _48245_neg) {
	jule::F64 _48258_f = jule::F64();
	jule::Bool _48266_ok = jule::Bool();
	if (((_48216_mantissa >> _1ab0ac495_F64_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_48258_f,_48266_ok);
	}
	_48258_f=static_cast<jule::F64>(static_cast<jule::F64>(_48216_mantissa));
	if (_48245_neg) {
		_48258_f=static_cast<jule::F64>((-(_48258_f)));
	}
	{
		
		if ((_48235_exp == 0LL)) {
			_case_begin_1a77a65ee:;
			{
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp > 0LL) && (_48235_exp <= 37LL)) {
			_case_begin_1a77a6676:;
			{
				if ((_48235_exp > 22LL)) {
					_48258_f*=_1ac437b3d_F64_POW10[(_48235_exp - 22LL)];
					_48235_exp=22LL;
				}
				if ((_48258_f > 1000000000000000LL) || (_48258_f < -1000000000000000LL)) {
					return std::make_tuple(_48258_f,_48266_ok);
				}
				_48258_f = static_cast<jule::F64>(_48258_f * _1ac437b3d_F64_POW10[_48235_exp]);
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		else if ((_48235_exp < 0LL) && (_48235_exp >= -22LL)) {
			_case_begin_1a77a66ed:;
			{
				_48258_f = static_cast<jule::F64>(jule::div(_48258_f,_1ac437b3d_F64_POW10[(-(_48235_exp))]));
				_48266_ok = true;
				return std::make_tuple(_48258_f,_48266_ok);
			}
		}
		_match_end_1a77a6522:;
	}
	return std::make_tuple(_48258_f,_48266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _1ac438c71_atof32exact(jule::U64 _51616_mantissa,jule::I64 _51635_exp,jule::Bool _51649_neg) {
	jule::F32 _51662_f = jule::F32();
	jule::Bool _51670_ok = jule::Bool();
	if (((_51616_mantissa >> _1ab087272_F32_INFO._field_mantbits) != 0LLU)) {
		return std::make_tuple(_51662_f,_51670_ok);
	}
	_51662_f=static_cast<jule::F32>(static_cast<jule::F32>(_51616_mantissa));
	if (_51649_neg) {
		_51662_f=static_cast<jule::F32>((-(_51662_f)));
	}
	{
		
		if ((_51635_exp == 0LL)) {
			_case_begin_1a77abe40:;
			{
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp > 0LL) && (_51635_exp <= 17LL)) {
			_case_begin_1a77abeb7:;
			{
				if ((_51635_exp > 10LL)) {
					_51662_f*=_1ac437d6e_F32_POW10[(_51635_exp - 10LL)];
					_51635_exp=10LL;
				}
				if ((_51662_f > 10000000LL) || (_51662_f < -10000000LL)) {
					return std::make_tuple(_51662_f,_51670_ok);
				}
				_51662_f = static_cast<jule::F32>(_51662_f * _1ac437d6e_F32_POW10[_51635_exp]);
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		else if ((_51635_exp < 0LL) && (_51635_exp >= -10LL)) {
			_case_begin_1a77ac03e:;
			{
				_51662_f = static_cast<jule::F32>(jule::div(_51662_f,_1ac437d6e_F32_POW10[(-(_51635_exp))]));
				_51670_ok = true;
				return std::make_tuple(_51662_f,_51670_ok);
			}
		}
		_match_end_1a77abd63:;
	}
	return std::make_tuple(_51662_f,_51670_ok);
}



inline std::tuple<jule::F64,jule::I64> _1ac4394be_atof_hex(jule::Str _55213_s,_1ac3a1bb7_FloatInfo& _55222_flt,jule::U64 _55242_mantissa,jule::I64 _55261_exp,jule::Bool _55271_neg,jule::Bool _55282_trunc) {
	jule::I64 _5539_max_exp = ((static_cast<jule::I64>(1LL << _55222_flt._field_expbits) + _55222_flt._field_bias) - 2LL);
	jule::I64 _5549_min_exp = (_55222_flt._field_bias + 1LL);
	_55261_exp+=static_cast<jule::I64>(static_cast<jule::I64>(_55222_flt._field_mantbits));
	while ((_55242_mantissa != 0LLU) && ((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55222_flt._field_mantbits + 2LLU))))) == 0LLU)) {
		{
			_55242_mantissa<<=1LLU;
			(_55261_exp)--;
		}
	_iter_next_1a77b2e9b:;
	}
	_iter_end_1a77b2e9b:;
	if (_55282_trunc) {
		_55242_mantissa|=1LLU;
	}
	while (((_55242_mantissa >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)) + 2LLU))))) != 0LLU)) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_1a77b46a6:;
	}
	_iter_end_1a77b46a6:;
	while ((_55242_mantissa > 1LLU) && (_55261_exp < static_cast<jule::I64>(static_cast<jule::I64>((_5549_min_exp - 2LL))))) {
		{
			_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa >> 1LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_55242_mantissa & 1LLU))));
			(_55261_exp)++;
		}
	_iter_next_1a77b491a:;
	}
	_iter_end_1a77b491a:;
	jule::U64 _58413_round = (_55242_mantissa & 3LLU);
	_55242_mantissa>>=2LLU;
	_58413_round|=static_cast<jule::U64>((_55242_mantissa & 1LLU));
	_55261_exp+=2LL;
	if ((_58413_round == 3LLU)) {
		(_55242_mantissa)++;
		if (_55242_mantissa == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU + _55222_flt._field_mantbits)))))) {
			_55242_mantissa>>=1LLU;
			(_55261_exp)++;
		}
	}
	if (((_55242_mantissa >> _55222_flt._field_mantbits) == 0LLU)) {
		_55261_exp=_55222_flt._field_bias;
	}
	jule::I64 _59913_err = static_cast<jule::I64>(0LL);
	if (_55261_exp > _5539_max_exp) {
		_55242_mantissa=static_cast<jule::U64>(static_cast<jule::U64>(1LL << _55222_flt._field_mantbits));
		_55261_exp=static_cast<jule::I64>((_5539_max_exp + 1LL));
		_59913_err=static_cast<jule::I64>(1LL);
	}
	jule::U64 _60613_bits = _55242_mantissa & static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) - 1LLU))));
	_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_55261_exp - _55222_flt._field_bias) & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _55222_flt._field_expbits) - 1LL))))))) << _55222_flt._field_mantbits);
	if (_55271_neg) {
		_60613_bits|=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _55222_flt._field_mantbits)) << _55222_flt._field_expbits);
	}
	if (_55222_flt == _1ab087272_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_1ac2a46d0_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_60613_bits))))),_59913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(_60613_bits)),_59913_err);
}



inline std::tuple<jule::F32,jule::I64,jule::I64> _1ac439865_atof32(jule::Str _61711_s) {
	jule::F32 _61721_f = jule::F32();
	jule::I64 _61729_n = jule::I64();
	jule::I64 _61737_err = 0LL;
	{
		jule::F64 _61914_val;
		jule::I64 _61919__n;
		jule::Bool _61923_ok;
		std::tie(_61914_val,_61919__n,_61923_ok) = _1ac436a4e_special(_61711_s);
		if (_61923_ok) {
			_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_61914_val));
			_61729_n = _61919__n;
			_61737_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_61721_f,_61729_n,_61737_err);
		}
	}
	jule::U64 _62510_mantissa;
	jule::I64 _62520_exp;
	jule::Bool _62525_neg;
	jule::Bool _62530_trunc;
	jule::Bool _62537_hex;
	jule::I64 _62542__n;
	jule::Bool _62550_ok;
	std::tie(_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc,_62537_hex,_62542__n,_62550_ok) = _1ac436d5c_read_float(_61711_s);
	_61729_n=_62542__n;
	if ((!(_62550_ok))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	if (_62537_hex) {
		jule::F64 _63217_ff = 0LL;
		std::tie(_63217_ff,_61737_err) = _1ac4394be_atof_hex(_61711_s.slice(0LL,_61729_n),_1ab087272_F32_INFO,_62510_mantissa,_62520_exp,_62525_neg,_62530_trunc);
		_61721_f = static_cast<jule::F32>(static_cast<jule::F32>(_63217_ff));
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	{
		if ((!(_62530_trunc))) {
			std::tie(_61721_f,_62550_ok) = _1ac438c71_atof32exact(_62510_mantissa,_62520_exp,_62525_neg);
			if (_62550_ok) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
		std::tie(_61721_f,_62550_ok) = _1ac434e8c_eisel_lemire32(_62510_mantissa,_62520_exp,_62525_neg);
		if (_62550_ok) {
			if ((!(_62530_trunc))) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
			jule::F32 _65421_f_up = 0LL;
			std::tie(_65421_f_up,_62550_ok) = _1ac434e8c_eisel_lemire32(static_cast<jule::U64>((_62510_mantissa + 1LLU)),_62520_exp,_62525_neg);
			if (_62550_ok && (_61721_f == _65421_f_up)) {
				_61737_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_61721_f,_61729_n,_61737_err);
			}
		}
	}
	_1ac4415e7_Decimal _66313_d = _1ac4415e7_Decimal();
	if ((!(_1ac43749a_set(&_66313_d, _61711_s.slice(0LL,_61729_n))))) {
		_61721_f = 0LL;
		_61737_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_61721_f,_61729_n,_61737_err);
	}
	jule::U64 _66710_b;
	jule::Bool _66713_ovf;
	std::tie(_66710_b,_66713_ovf) = _1ac437852_float_bits(&_66313_d, _1ab087272_F32_INFO);
	_61721_f=static_cast<jule::F32>(_1ac2a46d0_f32_from_bits(static_cast<jule::U32>(static_cast<jule::U32>(_66710_b))));
	if (_66713_ovf) {
		_61737_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_61721_f,_61729_n,_61737_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac439b73_atof64(jule::Str _67511_s) {
	jule::F64 _67521_f = jule::F64();
	jule::I64 _67529_n = jule::I64();
	jule::I64 _67537_err = 0LL;
	{
		jule::F64 _67714_val;
		jule::I64 _67719__n;
		jule::Bool _67723_ok;
		std::tie(_67714_val,_67719__n,_67723_ok) = _1ac436a4e_special(_67511_s);
		if (_67723_ok) {
			_67521_f = _67714_val;
			_67529_n = _67719__n;
			_67537_err = static_cast<jule::I64>(0LL);
			return std::make_tuple(_67521_f,_67529_n,_67537_err);
		}
	}
	jule::U64 _68310_mantissa;
	jule::I64 _68320_exp;
	jule::Bool _68325_neg;
	jule::Bool _68330_trunc;
	jule::Bool _68337_hex;
	jule::I64 _68342__n;
	jule::Bool _68350_ok;
	std::tie(_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc,_68337_hex,_68342__n,_68350_ok) = _1ac436d5c_read_float(_67511_s);
	_67529_n=_68342__n;
	if ((!(_68350_ok))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	if (_68337_hex) {
		std::tie(_67521_f,_67537_err) = _1ac4394be_atof_hex(_67511_s.slice(0LL,_67529_n),_1ab0ac495_F64_INFO,_68310_mantissa,_68320_exp,_68325_neg,_68330_trunc);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	{
		if ((!(_68330_trunc))) {
			std::tie(_67521_f,_68350_ok) = _1ac4387a9_atof64exact(_68310_mantissa,_68320_exp,_68325_neg);
			if (_68350_ok) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
		std::tie(_67521_f,_68350_ok) = _1ac4349b4_eisel_lemire64(_68310_mantissa,_68320_exp,_68325_neg);
		if (_68350_ok) {
			if ((!(_68330_trunc))) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
			jule::F64 _71121_f_up = 0LL;
			std::tie(_71121_f_up,_68350_ok) = _1ac4349b4_eisel_lemire64(static_cast<jule::U64>((_68310_mantissa + 1LLU)),_68320_exp,_68325_neg);
			if (_68350_ok && (_67521_f == _71121_f_up)) {
				_67537_err = static_cast<jule::I64>(0LL);
				return std::make_tuple(_67521_f,_67529_n,_67537_err);
			}
		}
	}
	_1ac4415e7_Decimal _72013_d = _1ac4415e7_Decimal();
	if ((!(_1ac43749a_set(&_72013_d, _67511_s.slice(0LL,_67529_n))))) {
		_67521_f = 0LL;
		_67537_err = static_cast<jule::I64>(2LL);
		return std::make_tuple(_67521_f,_67529_n,_67537_err);
	}
	jule::U64 _72410_b;
	jule::Bool _72413_ovf;
	std::tie(_72410_b,_72413_ovf) = _1ac437852_float_bits(&_72013_d, _1ab0ac495_F64_INFO);
	_67521_f=static_cast<jule::F64>(_1ac2a4d40_f64_from_bits(_72410_b));
	if (_72413_ovf) {
		_67537_err=static_cast<jule::I64>(1LL);
	}
	return std::make_tuple(_67521_f,_67529_n,_67537_err);
}



inline std::tuple<jule::F64,jule::I64,jule::I64> _1ac43a05d_parse_float_prefix(jule::Str _73223_s,jule::I64 _73231_bit_size) {
	if ((_73231_bit_size == 32LL)) {
		jule::F32 _73414_f;
		jule::I64 _73417_n;
		jule::I64 _73420_err;
		std::tie(_73414_f,_73417_n,_73420_err) = _1ac439865_atof32(_73223_s);
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F64>(_73414_f)),_73417_n,_73420_err);
	}
	jule::F64 _73810_f;
	jule::I64 _73813_n;
	jule::I64 _73816_err;
	std::tie(_73810_f,_73813_n,_73816_err) = _1ac439b73_atof64(_73223_s);
	return std::make_tuple(_73810_f,_73813_n,_73816_err);
}



inline jule::Exceptional<jule::F64> _1ac43a448_parse_float(jule::Str _76620_s,jule::I64 _76628_bit_size) {
	jule::F64 _76710_f;
	jule::I64 _76713_n;
	jule::I64 _76716_err;
	std::tie(_76710_f,_76713_n,_76716_err) = _1ac43a05d_parse_float_prefix(_76620_s,_76628_bit_size);
	if ((_76713_n != static_cast<jule::I64>(static_cast<jule::I64>(_76620_s.len()))) && ((_76716_err == static_cast<jule::I64>(0LL)) || (_76716_err != static_cast<jule::I64>(2LL)))) {
		return jule::Exceptional<jule::F64>(static_cast<jule::I64>(2LL));
	}
	if (_76716_err != static_cast<jule::I64>(0LL)) {
		return jule::Exceptional<jule::F64>(_76716_err);
	}
	return jule::Exceptional<jule::F64>(jule::Any(),_76710_f);
}



inline void _1ac43ade9_ryu_ftoa_fixed32(_1ac3a20d5_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::I64 _4958_exp,jule::I64 _4968_prec) {
	if ((_4968_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	}
	if ((_4968_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	}
	if ((_4947_mant == 0LLU)) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _6213_e2 = _4958_exp;
	jule::I64 _639_b = _1ac379c6c_len32(_4947_mant);
	if ((_639_b < 25LL)) {
		_4947_mant<<=static_cast<jule::U64>(static_cast<jule::U64>(25LL - _639_b));
		_6213_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_639_b))) - 25LL));
	}
	jule::I64 _749_q = (((-(_1ac43c5c1_mul_by_log2_log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4968_prec) - 1LL);
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::I64 _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _1ac43e34d_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _1ac43ec00_divisible_by_pow5(static_cast<jule::U64>(static_cast<jule::U64>(_4947_mant)),static_cast<jule::I64>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) || ((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && (!(_8129_d0)))) || (((_9713_dfrac == static_cast<jule::U32>(static_cast<jule::U32>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU));
	} else {
		_9913_round_up=((_9713_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_949_extra - 1LLU))))) == 1LLU);
	}
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	}
	_1ac43bc63_format_decimal(_4926_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _1ac43b449_ryu_ftoa_fixed64(_1ac3a20d5_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::I64 _12358_exp,jule::I64 _12368_prec) {
	if ((_12368_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38) + jule::Str("\nlocation: std/conv/ftoaryu.jule:125:9"));;
	}
	if ((_12347_mant == 0LLU)) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::I64 _13313_e2 = _12358_exp;
	jule::I64 _1349_b = _1ac37a07a_len64(_12347_mant);
	if ((_1349_b < 55LL)) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(55LL - _1349_b))));
		_13313_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_1349_b))) - 55LL));
	}
	jule::I64 _1489_q = (((-(_1ac43c5c1_mul_by_log2_log10(static_cast<jule::I64>((_13313_e2 + 54LL))))) + _12368_prec) - 1LL);
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::I64 _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _1ac43e815_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if ((_15518_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:157:9"));;
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _1ac43ec00_divisible_by_pow5(_12347_mant,static_cast<jule::I64>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::U64 _1689_extra = static_cast<jule::U64>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>(((1LL << _1689_extra) - 1LL));
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) || ((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && (!(_15529_d0)))) || (((_17113_dfrac == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))))) && _15529_d0) && ((_15514_di & 1LLU) == 1LLU));
	} else {
		_17313_round_up=((_17113_dfrac >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_1689_extra - 1LLU))))) == 1LLU);
	}
	if ((_17113_dfrac != 0LLU)) {
		_15529_d0=false;
	}
	_1ac43bc63_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _1ac43bc63_format_decimal(_1ac3a20d5_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::I64 _20490_prec) {
	jule::U64 _2059_max = _1ac43b67a_U64_POW10[_20490_prec];
	jule::I64 _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = (_20445_m / 10LLU);
			jule::U64 _20817_b = (_20445_m % 10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple((_20445_m / 10LLU),(_20445_m % 10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if ((_20817_b > 5LLU)) {
				_20474_round_up=true;
			} else if ((_20817_b < 5LLU)) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LLU) == 1LLU);
			}
			if ((_20817_b != 0LLU)) {
				_20457_trunc=true;
			}
		}
	_iter_next_1a7806b6b:;
	}
	_iter_end_1a7806b6b:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LLU;
		(_20613_trimmed)++;
	}
	jule::U64 _23313_n = static_cast<jule::U64>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20490_prec));
	jule::U64 _23513_v = _20445_m;
	while ((_23513_v >= 100LLU)) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if (((_23513_v >> 32LLU) == 0LLU)) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) / 100LLU))),static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23513_v) % 100LL))));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>((_23513_v / 100LLU)),static_cast<jule::U64>((_23513_v % 100LL)));
			}
			_23313_n-=2LLU;
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 1LLU))]);
			_20424_d._field_d[static_cast<jule::I64>((_23313_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23817_v2) + 0LLU))]);
			_23513_v=_23717_v1;
		}
	_iter_next_1a780a2ce:;
	}
	_iter_end_1a780a2ce:;
	if ((_23513_v > 0LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23513_v) + 1LLU))]);
	}
	if ((_23513_v >= 10LLU)) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::I64>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[(_20424_d._field_nd - 1LL)] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_1a7811802:;
	}
	_iter_end_1a7811802:;
	_20424_d._field_dp=static_cast<jule::I64>(_20424_d._field_nd + _20613_trimmed);
}



inline void _1ac43c2b3_ryu_ftoa_shortest(_1ac3a20d5_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::I64 _26559_exp,_1ac3a1bb7_FloatInfo& _26570_flt) {
	if ((_26548_mant == 0LLU)) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1ac374052_trailing_zeros64(_26548_mant) >= static_cast<jule::I64>(static_cast<jule::I64>((-(_26559_exp)))))) {
		_26548_mant>>=static_cast<jule::U64>(static_cast<jule::U64>((-(_26559_exp))));
		_1ac43d5e4_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::I64 _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _1ac43cd96_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if ((_27726_e2 == 0LL)) {
		_1ac43d5e4_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::I64 _2839_q = (_1ac43c5c1_mul_by_log2_log10(static_cast<jule::I64>((-(_27726_e2)))) + 1LL);
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _1ab087272_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _1ac43e34d_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27710_ml)),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _1ac43e34d_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27714_mc)),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _1ac43e34d_mult64bit_pow10(static_cast<jule::U32>(static_cast<jule::U32>(_27718_mu)),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U64>(_29417_dl32)),static_cast<jule::U64>(static_cast<jule::U64>(_29517_dc32)),static_cast<jule::U64>(static_cast<jule::U64>(_29617_du32)));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _1ac43e815_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _1ac43e815_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _1ac43e815_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if ((_27726_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:307:9"));;
	}
	if ((_2839_q > 55LL)) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_1ac43ec00_divisible_by_pow5(_27710_ml,static_cast<jule::I64>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_1ac43ec00_divisible_by_pow5(_27714_mc,static_cast<jule::I64>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_1ac43ec00_divisible_by_pow5(_27718_mu,static_cast<jule::I64>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::U64 _3299_extra = static_cast<jule::U64>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>(((1LL << _3299_extra) - 1LL));
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LLU);
	if (_29213_du0 && (_33613_fracu == 0LLU)) {
		_34213_uok=((_26548_mant & 1LLU) == 0LLU);
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) || ((_33413_fracc == static_cast<jule::U64>(static_cast<jule::U64>(1LLU << static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))))) && ((_28813_dc & 1LLU) == 1LLU));
	} else {
		_35113_cup=((_33413_fracc >> static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_3299_extra - 1LLU))))) == 1LLU);
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LLU)) && ((_26548_mant & 1LLU) == 0LLU);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LLU);
	_1ac43d5e4_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::I64 _1ac43c5c1_mul_by_log2_log10(jule::I64 _38322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_38322_x * 78913LL)))) >> 18LL));
}



inline jule::I64 _1ac43c8ce_mul_by_log10_log2(jule::I64 _39322_x) {
	return static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_39322_x * 108853LL)))) >> 15LL));
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::I64> _1ac43cd96_compute_bounds(jule::U64 _40119_mant,jule::I64 _40130_exp,_1ac3a1bb7_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::I64 _40274_e2 = jule::I64();
	if ((_40119_mant != static_cast<jule::U64>(static_cast<jule::U64>(1LLU << _40218_flt._field_mantbits))) || (_40130_exp == static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_40218_flt._field_bias + 1LL))) - static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_40218_flt._field_mantbits))))))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(2LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(2LLU * _40119_mant)) + 1LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 1LL));
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) - 1LLU)),static_cast<jule::U64>(4LLU * _40119_mant),static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(4LLU * _40119_mant)) + 2LLU)));
		_40274_e2=static_cast<jule::I64>((_40130_exp - 2LL));
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _1ac43d5e4_ryu_digits(_1ac3a20d5_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _1ac44000d_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _1ac44000d_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _1ac44000d_divmod1e9(_41563_upper);
	if ((_41810_uhi == 0LLU)) {
		_1ac43dd86_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if ((_41619_llo != 0LLU)) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LLU);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_1ac43dd86_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::U64 _43417_n = static_cast<jule::U64>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while ((_43517_v > 0LLU)) {
			{
				jule::U32 _43718_v1 = (_43517_v / 10LLU);
				jule::U32 _43722_v2 = (_43517_v % 10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple((_43517_v / 10LLU),(_43517_v % 10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::I64>(_43417_n)]=static_cast<jule::U8>(static_cast<jule::U8>(_43722_v2 + '0'));
			}
		_iter_next_1a7837916:;
		}
		_iter_end_1a7837916:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::I64>(_43417_n));
		_41520_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(9LL - _43417_n));
		_1ac43dd86_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::I64>((_41520_d._field_nd + 8LL)));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[(_41520_d._field_nd - 1LL)] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_1a7837bbe:;
	}
	_iter_end_1a7837bbe:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_1a783b563:;
	}
	_iter_end_1a783b563:;
}



inline void _1ac43dd86_ryu_digits32(_1ac3a20d5_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::I64 _46166_endindex) {
	if ((_46121_upper == 0LLU)) {
		_46022_d._field_dp=static_cast<jule::I64>((_46166_endindex + 1LL));
		return;
	}
	jule::I64 _46613_trimmed = 0LL;
	jule::I64 _46913_c_next_digit = 0LL;
	while ((_46121_upper > 0LLU)) {
		{
			jule::U32 _47613_l = ((_46043_lower + 9LLU) / 10LLU);
			jule::U32 _47718_c = (_46059_central / 10LLU);
			jule::U32 _47725_cdigit = (_46059_central % 10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple((_46059_central / 10LLU),(_46059_central % 10LL));
			jule::U32 _47813_u = (_46121_upper / 10LLU);
			if (_47613_l > _47813_u) {
				goto _iter_end_1a783e357;
			}
			if ((_47613_l == static_cast<jule::U32>(static_cast<jule::U32>((_47718_c + 1LLU)))) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LLU;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::I64>(static_cast<jule::I64>(_47725_cdigit));
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_1a783e357:;
	}
	_iter_end_1a783e357:;
	if ((_46613_trimmed > 0LL)) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LLU) == 1LLU));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::I64 _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = (_51713_v / 100LLU);
			jule::U32 _52018_v2 = (_51713_v % 100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple((_51713_v / 100LLU),(_51713_v % 100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 1LLU))]);
			_46022_d._field_d[(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _52018_v2) + 0LLU))]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_1a7845d31:;
	}
	_iter_end_1a7845d31:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(static_cast<jule::U8>(_51713_v + '0'));
	}
	_46022_d._field_nd=static_cast<jule::I64>((_46166_endindex + 1LL));
	_46022_d._field_dp=static_cast<jule::I64>(_46022_d._field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::I64,jule::Bool> _1ac43e34d_mult64bit_pow10(jule::U32 _54220_m,jule::I64 _54232_e2,jule::I64 _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::I64 _54262_resE = jule::I64();
	jule::Bool _54273_exact = jule::Bool();
	if ((_54241_q == 0LL)) {
		_54251_resM = static_cast<jule::U32>((_54220_m << 6LLU));
		_54262_resE = static_cast<jule::I64>((_54232_e2 - 6LL));
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:549:9"));;
	}
	jule::U64 _55113_pow = _1ac435652_DETAILED_POWS_OF_TEN[(_54241_q - -348LL)][1LL];
	if ((_54241_q < 0LL)) {
		_55113_pow+=1LLU;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1ac37cac7_mul64(static_cast<jule::U64>(static_cast<jule::U64>(_54220_m)),_55113_pow);
	_54232_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1ac43c8ce_mul_by_log10_log2(_54241_q))) - 63LL))) + 57LL));
	_54251_resM = static_cast<jule::U32>(static_cast<jule::U32>((_55610_hi << 7LLU) | static_cast<jule::U64>(static_cast<jule::U64>((_55614_lo >> 57LLU)))));
	_54262_resE = _54232_e2;
	_54273_exact = ((_55614_lo << 7LLU) == 0LLU);
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::I64,jule::Bool> _1ac43e815_mult128bit_pow10(jule::U64 _57021_m,jule::I64 _57033_e2,jule::I64 _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::I64 _57063_resE = jule::I64();
	jule::Bool _57074_exact = jule::Bool();
	if ((_57042_q == 0LL)) {
		_57052_resM = static_cast<jule::U64>((_57021_m << 8LLU));
		_57063_resE = static_cast<jule::I64>((_57033_e2 - 8LL));
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45) + jule::Str("\nlocation: std/conv/ftoaryu.jule:577:9"));;
	}
	jule::Array<jule::U64,2> _57913_pow = _1ac435652_DETAILED_POWS_OF_TEN[(_57042_q - -348LL)];
	if ((_57042_q < 0LL)) {
		_57913_pow[0LL]+=1LLU;
	}
	_57033_e2+=static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(_1ac43c8ce_mul_by_log10_log2(_57042_q))) - 127LL))) + 119LL));
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1ac37cac7_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1ac37cac7_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1ac37aec1_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_58814_h1 << 9LLU))) | static_cast<jule::U64>(static_cast<jule::U64>((_58910_mid >> 55LLU))));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LLU) == 0LLU) && (_58714_l0 == 0LLU);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _1ac43ec00_divisible_by_pow5(jule::U64 _59426_m,jule::I64 _59434_k) {
	if ((_59426_m == 0LLU)) {
		return true;
	}
	jule::I64 _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (((_59426_m % 5LL) != 0LLU)) {
				return false;
			}
			_59426_m/=5LLU;
		}
	_iter_next_1a78585b3:;
	}
	_iter_end_1a78585b3:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _1ac44000d_divmod1e9(jule::U64 _61014_x) {
	{
		return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>((_61014_x / 1000000000LL))),static_cast<jule::U32>(static_cast<jule::U32>((_61014_x % 1000000000LL))));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1ac37cac7_mul64(static_cast<jule::U64>((_61014_x >> 1LLU)),9903520314283042200LLU);
	jule::U64 _6169_q = (_61510_hi >> 28LLU);
	return std::make_tuple(static_cast<jule::U32>(static_cast<jule::U32>(_6169_q)),static_cast<jule::U32>(static_cast<jule::U32>(_61014_x - static_cast<jule::U64>(static_cast<jule::U64>((_6169_q * 1000000000LL))))));
}



inline void _1ac443484_trim(_1ac4415e7_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[(_27514_a._field_nd - 1LL)] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_1a785c881:;
	}
	_iter_end_1a785c881:;
	if ((_27514_a._field_nd == 0LL)) {
		_27514_a._field_dp=0LL;
	}
}



inline void _1ac4437d6_right_shift(_1ac4415e7_Decimal& _28521_a,jule::U64 _28533_k) {
	jule::I64 _28613_r = 0LL;
	jule::I64 _28713_w = 0LL;
	jule::U64 _29013_n = 0LLU;
	for (; ((_29013_n >> _28533_k) == 0LLU); (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if ((_29013_n == 0LLU)) {
					_28521_a._field_nd=0LL;
					return;
				}
				while (((_29013_n >> _28533_k) == 0LLU)) {
					{
						_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
						(_28613_r)++;
					}
				_iter_next_1a78618da:;
				}
				_iter_end_1a78618da:;
				goto _iter_end_1a785ee16;
			}
			jule::U64 _30413_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _30413_c)) - '0');
		}
	_iter_next_1a785ee16:;
	}
	_iter_end_1a785ee16:;
	_28521_a._field_dp-=static_cast<jule::I64>((_28613_r - 1LL));
	jule::U64 _3099_mask = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(1LL << _28533_k))) - 1LLU));
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::U64 _31313_c = static_cast<jule::U64>(_28521_a._field_d[_28613_r]);
			jule::U64 _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_31413_dig + '0'));
			(_28713_w)++;
			_29013_n=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_29013_n * 10LLU))) + _31313_c)) - '0');
		}
	_iter_next_1a7863cc7:;
	}
	_iter_end_1a7863cc7:;
	while ((_29013_n > 0LLU)) {
		{
			jule::U64 _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if ((_28713_w < 800LL)) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(static_cast<jule::U8>(_32313_dig + '0'));
				(_28713_w)++;
			} else if ((_32313_dig > 0LLU)) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::U64>((_29013_n * 10LLU));
		}
	_iter_next_1a7865416:;
	}
	_iter_end_1a7865416:;
	_28521_a._field_nd=_28713_w;
	_1ac443484_trim(_28521_a);
}



inline jule::Bool _1ac443ce2_prefix_is_less_than(jule::Array<jule::U8,800> _33924_b,jule::I64 _33938_end,jule::Str _33948_s) {
	jule::I64 _34013_i = 0LL;
	for (; _34013_i < static_cast<jule::I64>(static_cast<jule::I64>(_33948_s.len())); (_34013_i)++) {
		{
			if (_34013_i >= _33938_end) {
				return true;
			}
			if (_33924_b[_34013_i] != _33948_s[_34013_i]) {
				return _33924_b[_34013_i] < _33948_s[_34013_i];
			}
		}
	_iter_next_1a7869409:;
	}
	_iter_end_1a7869409:;
	return false;
}



inline void _1ac444144_left_shift(_1ac4415e7_Decimal& _35320_a,jule::U64 _35332_k) {
	jule::I64 _35413_delta = _1ac440e54_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_delta;
	if (_1ac443ce2_prefix_is_less_than(_35320_a._field_d,_35320_a._field_nd,_1ac440e54_LEFTCHEATS[static_cast<jule::I64>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::I64 _35913_r = _35320_a._field_nd;
	jule::I64 _36013_w = _35320_a._field_nd + _35413_delta;
	jule::U64 _36313_n = 0LLU;
	(_35913_r)--;
	for (; (_35913_r >= 0LL); (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(_35320_a._field_d[_35913_r]))) - '0'))) << _35332_k);
			jule::U64 _36713_quo = (_36313_n / 10LLU);
			jule::U64 _36813_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _36713_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_36813_rem + '0'));
			} else if ((_36813_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_1a786d012:;
	}
	_iter_end_1a786d012:;
	while ((_36313_n > 0LLU)) {
		{
			jule::U64 _38013_quo = (_36313_n / 10LLU);
			jule::U64 _38113_rem = _36313_n - static_cast<jule::U64>(static_cast<jule::U64>(10LLU * _38013_quo));
			(_36013_w)--;
			if ((_36013_w < 800LL)) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(static_cast<jule::U8>(_38113_rem + '0'));
			} else if ((_38113_rem != 0LLU)) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_1a7871532:;
	}
	_iter_end_1a7871532:;
	_35320_a._field_nd+=_35413_delta;
	if ((_35320_a._field_nd >= 800LL)) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_1ac443484_trim(_35320_a);
}



inline jule::Bool _1ac44452e_should_round_up(_1ac4415e7_Decimal& _40021_a,jule::I64 _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (((_40021_a._field_d[(_40033_nd - 1LL)] - '0') & 1LL) != 0LLU);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



inline jule::Str _1ac4456a6_fmt_uint(jule::U64 _6217_i,jule::I64 _6225_base) {
	if ((true && (_6217_i < 100LLU)) && (_6225_base == 10LL)) {
		return _1ac446245_small(static_cast<jule::I64>(static_cast<jule::I64>(_6217_i)));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _1ac446bc4_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _1ac445ad5_fmt_int(jule::I64 _7316_i,jule::I64 _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _1ac446245_small(static_cast<jule::I64>(static_cast<jule::I64>(_7316_i)));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _1ac446bc4_fmt_bits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7316_i)),_7324_base,(_7316_i < 0LL),false);
	return _7713_s;
}



inline jule::Str _1ac445de3_itoa(jule::I64 _8213_i) {
	return _1ac445ad5_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_8213_i)),10LL);
}



inline jule::Str _1ac446245_small(jule::I64 _8710_i) {
	if ((_8710_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8710_i,(_8710_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8710_i << 1LLU,((_8710_i << 1LLU) + 2LL));
}



inline jule::Bool _1ac446553_is_power_of_two(jule::I64 _9420_x) {
	return ((_9420_x & static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>((_9420_x - 1LL))))) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _1ac446bc4_fmt_bits(jule::Slice<jule::U8> _10317_dst,jule::U64 _10334_u,jule::I64 _10342_base,jule::Bool _10353_neg,jule::Bool _10364_append_) {
	jule::Slice<jule::U8> _10381_d = jule::Slice<jule::U8>();
	jule::Str _10392_s = jule::Str();
	if ((_10342_base < 2LL) || (_10342_base > 36LL)) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:105:9"));;
	}
	jule::Slice<jule::U8> _10913_a = jule::Slice<jule::U8>::alloc(65LL);
	jule::I64 _11013_i = _10913_a.len();
	if (_10353_neg) {
		_10334_u=static_cast<jule::U64>((-(_10334_u)));
	}
	if ((_10342_base == 10LL)) {
		
		jule::U64 _15117_us = static_cast<jule::U64>(_10334_u);
		while ((_15117_us >= 100LLU)) {
			{
				jule::U64 _15317_is = (_15117_us % 100LL) << 1LLU;
				_15117_us/=100LLU;
				_11013_i-=2LL;
				_10913_a[(_11013_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 1LLU))]);
				_10913_a[(_11013_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15317_is + 0LLU))]);
			}
		_iter_next_1a78826ca:;
		}
		_iter_end_1a78826ca:;
		jule::U64 _16113_is = _15117_us << 1LLU;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_16113_is + 1LLU))]);
		if ((_15117_us >= 10LLU)) {
			(_11013_i)--;
			_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_16113_is)]);
		}
	} else if (_1ac446553_is_power_of_two(_10342_base)) {
		jule::U64 _17613_shift = (static_cast<jule::U64>(_1ac373282_trailing_zeros(static_cast<jule::U64>(static_cast<jule::U64>(_10342_base)))) & 7LLU);
		jule::U64 _17713_b = static_cast<jule::U64>(_10342_base);
		jule::U64 _17813_m = (static_cast<jule::U64>(_10342_base) - 1LLU);
		while (_10334_u >= _17713_b) {
			{
				(_11013_i)--;
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u) & _17813_m)]);
				_10334_u>>=_17613_shift;
			}
		_iter_next_1a788c1b8:;
		}
		_iter_end_1a788c1b8:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	} else {
		jule::U64 _18913_b = static_cast<jule::U64>(_10342_base);
		while (_10334_u >= _18913_b) {
			{
				(_11013_i)--;
				jule::U64 _19517_q = jule::div(_10334_u,_18913_b);
				_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u - static_cast<jule::U64>(static_cast<jule::U64>(_19517_q * _18913_b))))]);
				_10334_u=_19517_q;
			}
		_iter_next_1a788e8e6:;
		}
		_iter_end_1a788e8e6:;
		(_11013_i)--;
		_10913_a[_11013_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10334_u))]);
	}
	if (_10353_neg) {
		(_11013_i)--;
		_10913_a[_11013_i]='-';
	}
	if (_10364_append_) {
		_10381_d=jule::append(_10317_dst,_10913_a.slice(_11013_i));
		return std::make_tuple(_10381_d,_10392_s);
	}
	_10392_s=static_cast<jule::Str>(_10913_a.slice(_11013_i));
	return std::make_tuple(_10381_d,_10392_s);
}



inline void _1ac4dace0_lshift_unsig(_1ac4d0ec2_Const& _56722_c,_1ac4d0ec2_Const& _56733_x) {
	jule::U64 _5689_l = _1ac4d3975_as_u64(&_56722_c);
	jule::U64 _5699_r = _1ac4d3975_as_u64(&_56733_x);
	_1ac4d438d_set_u64(&_56722_c, static_cast<jule::U64>(_5689_l << _5699_r));
}



inline void _1ac4db186_rshift_unsig(_1ac4d0ec2_Const& _57322_c,_1ac4d0ec2_Const& _57333_x) {
	jule::U64 _5749_l = _1ac4d3975_as_u64(&_57322_c);
	jule::U64 _5759_r = _1ac4d3975_as_u64(&_57333_x);
	_1ac4d438d_set_u64(&_57322_c, static_cast<jule::U64>(_5749_l >> _5759_r));
}



inline jule::Str _1ac552a27_real_kind_of(jule::Str _4521_kind) {
	{
		auto &_match_expr{ _4521_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7933b66:;
			{
				return _1ac5524e9_SYS_INT;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7933bcc:;
			{
				return _1ac55261a_SYS_UINT;
			}
		}
		else {
			_case_begin_1a792e9a8:;
			{
				return _4521_kind;
			}
		}
		_match_end_1a792ec94:;
	}
}



inline jule::I64 _1ac552cbe_bitsize_of(jule::Str _5919_k) {
	{
		auto &_match_expr{ _5919_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a793598c:;
			{
				return 8LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7935a03:;
			{
				return 16LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a79355b3:;
			{
				return 32LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7935629:;
			{
				return 64LL;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a79356a1:;
			{
				return _1ac5523c8_BIT_SIZE;
			}
		}
		else {
			_case_begin_1a792e27c:;
			{
				return -1LL;
			}
		}
		_match_end_1a793533d:;
	}
}



inline jule::Str _1ac5530ee_int_from_bits(jule::I64 _8622_bits) {
	{
		auto &_match_expr{ _8622_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a793794a:;
			{
				return jule::Str("i8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a7937a5a:;
			{
				return jule::Str("i16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a7937ac1:;
			{
				return jule::Str("i32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a793774c:;
			{
				return jule::Str("i64", 3);
			}
		}
		else {
			_case_begin_1a79362a6:;
			{
				return jule::Str();
			}
		}
		_match_end_1a7937230:;
	}
}



inline jule::Str _1ac55340c_uint_from_bits(jule::I64 _10423_bits) {
	{
		auto &_match_expr{ _10423_bits };
		
		if (_match_expr == 8LL) {
			_case_begin_1a7938e46:;
			{
				return jule::Str("u8", 2);
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a7939056:;
			{
				return jule::Str("u16", 3);
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a79390bc:;
			{
				return jule::Str("u32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a7938c48:;
			{
				return jule::Str("u64", 3);
			}
		}
		else {
			_case_begin_1a7938440:;
			{
				return jule::Str();
			}
		}
		_match_end_1a79389d4:;
	}
}



inline jule::Str _1ac55371a_float_from_bits(jule::I64 _12224_bits) {
	{
		auto &_match_expr{ _12224_bits };
		
		if (_match_expr == 32LL) {
			_case_begin_1a793a3dc:;
			{
				return jule::Str("f32", 3);
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a793a453:;
			{
				return jule::Str("f64", 3);
			}
		}
		else {
			_case_begin_1a793993b:;
			{
				return jule::Str();
			}
		}
		_match_end_1a7939ed0:;
	}
}



inline jule::Bool _1ac554463_check_bit_float(jule::Str _15024_val,jule::I64 _15034_bit) {
	({
		auto except = _1ac43a448_parse_float(_15024_val,_15034_bit);
		(except.ok()) ? (except.result) : ({{
			return false;
			return false;
		} jule::F64();});
	});
	return true;
}



inline jule::I64 _1ac554771_bitsize_of_float(jule::F64 _16025_x) {
	{
		
		if ((-340282346638528860000000000000000000000.0 <= _16025_x) && (_16025_x <= 340282346638528860000000000000000000000.0)) {
			_case_begin_1a794048b:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a7940d3d:;
			{
				return 64LL;
			}
		}
		_match_end_1a7940c72:;
	}
}



inline jule::I64 _1ac554a7e_bitsize_of_int(jule::I64 _17623_x) {
	{
		
		if ((-128LL <= _17623_x) && (_17623_x <= 127LL)) {
			_case_begin_1a794224b:;
			{
				return 8LL;
			}
		}
		else if ((-32768LL <= _17623_x) && (_17623_x <= 32767LL)) {
			_case_begin_1a79422b2:;
			{
				return 16LL;
			}
		}
		else if ((-2147483648LL <= _17623_x) && (_17623_x <= 2147483647LL)) {
			_case_begin_1a794238e:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a79418dd:;
			{
				return 64LL;
			}
		}
		_match_end_1a79420d6:;
	}
}



inline jule::I64 _1ac554d8c_bitsize_of_uint(jule::U64 _19624_x) {
	{
		
		if ((_19624_x <= 255LLU)) {
			_case_begin_1a79444c3:;
			{
				return 8LL;
			}
		}
		else if ((_19624_x <= 65535LLU)) {
			_case_begin_1a7944539:;
			{
				return 16LL;
			}
		}
		else if ((_19624_x <= 4294967295LLU)) {
			_case_begin_1a7944616:;
			{
				return 32LL;
			}
		}
		else {
			_case_begin_1a7944292:;
			{
				return 64LL;
			}
		}
		_match_end_1a7944193:;
	}
}



inline void _1ac555035_update_target(void) {
	{
		{
			auto &_match_expr{ _1c48491be_ARCH };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a794467c:;
				{
					_1ac5523c8_BIT_SIZE=64LL;
					_1ac5524e9_SYS_INT=jule::Str("i64", 3);
					_1ac55261a_SYS_UINT=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a794565b:;
				{
					_1ac5523c8_BIT_SIZE=32LL;
					_1ac5524e9_SYS_INT=jule::Str("i32", 3);
					_1ac55261a_SYS_UINT=jule::Str("u32", 3);
				}
			}
			_match_end_1a7945b34:;
		}
	}
}



inline void _1ac5551cd_init(void) {
	_1ac555035_update_target();
}



inline jule::F64 _1ac5579e9_min(jule::Str _4716_k) {
	_4716_k=_1ac552a27_real_kind_of(_4716_k);
	{
		auto &_match_expr{ _4716_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a7948c14:;
			{
				return -128LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a79489e4:;
			{
				return -32768LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7948a5a:;
			{
				return -2147483648LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7948ac1:;
			{
				return jule::MIN_I64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a794884b:;
			{
				return -340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a79488b2:;
			{
				return jule::MIN_F64;
			}
		}
		else {
			_case_begin_1a794531a:;
			{
				return 0LL;
			}
		}
		_match_end_1a7945e97:;
	}
}



inline jule::F64 _1ac557d4b_max(jule::Str _6916_k) {
	_6916_k=_1ac552a27_real_kind_of(_6916_k);
	{
		auto &_match_expr{ _6916_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a794a9c4:;
			{
				return 127LL;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a794aa3a:;
			{
				return 32767LL;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a794aaa1:;
			{
				return 2147483647LL;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a794a82b:;
			{
				return jule::MAX_I64;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a794a892:;
			{
				return 255LL;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a794a908:;
			{
				return 65535LL;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a794a474:;
			{
				return 4294967295LL;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a794a4da:;
			{
				return jule::MAX_U64;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a794a551:;
			{
				return 340282346638528860000000000000000000000.0;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a794a5b7:;
			{
				return jule::MAX_F64;
			}
		}
		else {
			_case_begin_1a79484c7:;
			{
				return 0LL;
			}
		}
		_match_end_1a7949495:;
	}
}



inline jule::Bool _1ac558324_is_i8_compatible(jule::Str _629_k) {
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac558676_is_i16_compatible(jule::Str _1130_k) {
	return (_1130_k == jule::Str("i8", 2)) || (_1130_k == jule::Str("i16", 3));
}



inline jule::Bool _1ac558984_is_i32_compatible(jule::Str _1730_k) {
	return (((_1730_k == jule::Str("i8", 2)) || (_1730_k == jule::Str("i16", 3))) || (_1730_k == jule::Str("i32", 3))) || (_1730_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac558cd6_is_i64_compatible(jule::Str _2530_k) {
	return (((_2530_k == jule::Str("i8", 2)) || (_2530_k == jule::Str("i16", 3))) || (_2530_k == jule::Str("i32", 3))) || (_2530_k == jule::Str("i64", 3));
}



inline jule::Bool _1ac5590e4_is_u8_compatible(jule::Str _3329_k) {
	return (_3329_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac559402_is_u16_compatible(jule::Str _3830_k) {
	return (_3830_k == jule::Str("u8", 2)) || (_3830_k == jule::Str("u16", 3));
}



inline jule::Bool _1ac559710_is_u32_compatible(jule::Str _4330_k) {
	return ((_4330_k == jule::Str("u8", 2)) || (_4330_k == jule::Str("u16", 3))) || (_4330_k == jule::Str("u32", 3));
}



inline jule::Bool _1ac559aa6_is_u64_compatible(jule::Str _5030_k) {
	return (((_5030_k == jule::Str("u8", 2)) || (_5030_k == jule::Str("u16", 3))) || (_5030_k == jule::Str("u32", 3))) || (_5030_k == jule::Str("u64", 3));
}



inline jule::Bool _1ac559db4_is_f32_compatible(jule::Str _5830_k) {
	return (_5830_k == jule::Str("f32", 3));
}



inline jule::Bool _1ac55a1c2_is_f64_compatible(jule::Str _6330_k) {
	return (_6330_k == jule::Str("f64", 3));
}



inline jule::Bool _1ac55a5ac_types_are_compatible(jule::Str _7033_k1,jule::Str _7042_k2) {
	{
		auto &_match_expr{ _7033_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7954e2e:;
			{
				return true;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7954e95:;
			{
				return (_7042_k2 == jule::Str("int", 3));
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7955061:;
			{
				return (_7042_k2 == jule::Str("uintptr", 7));
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a79550c7:;
			{
				return (_7042_k2 == jule::Str("uint", 4));
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a7954a44:;
			{
				return _1ac558324_is_i8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7954aaa:;
			{
				return _1ac558676_is_i16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7954b21:;
			{
				return _1ac558984_is_i32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7954b87:;
			{
				return _1ac558cd6_is_i64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a7955182:;
			{
				return _1ac5590e4_is_u8_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a79551e8:;
			{
				return _1ac559402_is_u16_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a795525e:;
			{
				return _1ac559710_is_u32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a79552c5:;
			{
				return _1ac559aa6_is_u64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a795533b:;
			{
				return _1ac559db4_is_f32_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a79553a2:;
			{
				return _1ac55a1c2_is_f64_compatible(_7042_k2);
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a7955429:;
			{
				return (_7042_k2 == jule::Str("bool", 4));
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a79554a1:;
			{
				return (_7042_k2 == jule::Str("str", 3));
			}
		}
		else {
			_case_begin_1a794d6b9:;
			{
				return false;
			}
		}
		_match_end_1a794d631:;
	}
}



inline jule::Bool _1ac55a8ba_is_i16_greater(jule::Str _10927_k) {
	return (_10927_k == jule::Str("i8", 2));
}



inline jule::Bool _1ac55abc8_is_i32_greater(jule::Str _11427_k) {
	return (_11427_k == jule::Str("i8", 2)) || (_11427_k == jule::Str("i16", 3));
}



inline jule::Bool _1ac55aed6_is_i64_greater(jule::Str _11927_k) {
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



inline jule::Bool _1ac55b2e4_is_u16_greater(jule::Str _12627_k) {
	return (_12627_k == jule::Str("u8", 2));
}



inline jule::Bool _1ac55b723_is_u32_greater(jule::Str _13127_k) {
	return (_13127_k == jule::Str("u8", 2)) || (_13127_k == jule::Str("u16", 3));
}



inline jule::Bool _1ac55ba31_is_u64_greater(jule::Str _13727_k) {
	return ((_13727_k == jule::Str("u8", 2)) || (_13727_k == jule::Str("u16", 3))) || (_13727_k == jule::Str("u32", 3));
}



inline jule::Bool _1ac55bd3e_is_f32_greater(jule::Str _14423_k) {
	return (_14423_k != jule::Str("f64", 3));
}



inline jule::Bool _1ac55c14c_is_f64_greater(jule::Str _14923_k) {
	return true;
}



inline jule::Bool _1ac55c537_is_greater(jule::Str _15423_k1,jule::Str _15432_k2) {
	{
		auto &_match_expr{ _15423_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a795ed4b:;
			{
				return _1ac55da66_is_sig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a795edb2:;
			{
				return _1ac55ddb8_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a795ea71:;
			{
				return _1ac55ddb8_is_unsig_int(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a795ead7:;
			{
				return _1ac55a8ba_is_i16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a795eb4d:;
			{
				return _1ac55abc8_is_i32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a795e884:;
			{
				return _1ac55aed6_is_i64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a795e8ea:;
			{
				return _1ac55b2e4_is_u16_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a795e961:;
			{
				return _1ac55b723_is_u32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a795e9c7:;
			{
				return _1ac55ba31_is_u64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a795ee6c:;
			{
				return _1ac55bd3e_is_f32_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a795eed3:;
			{
				return _1ac55c14c_is_f64_greater(_15432_k2);
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7960049:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a795e554:;
			{
				return false;
			}
		}
		_match_end_1a795e5dc:;
	}
}



inline jule::Bool _1ac55da66_is_sig_int(jule::Str _2723_k) {
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3))) || (_2723_k == jule::Str("int", 3));
}



inline jule::Bool _1ac55ddb8_is_unsig_int(jule::Str _3625_k) {
	return (((((_3625_k == jule::Str("u8", 2)) || (_3625_k == jule::Str("u16", 3))) || (_3625_k == jule::Str("u32", 3))) || (_3625_k == jule::Str("u64", 3))) || (_3625_k == jule::Str("uint", 4))) || (_3625_k == jule::Str("uintptr", 7));
}



inline jule::Bool _1ac55e1c6_is_int(jule::Str _4615_k) {
	return _1ac55da66_is_sig_int(_4615_k) || _1ac55ddb8_is_unsig_int(_4615_k);
}



inline jule::Bool _1ac55e528_is_float(jule::Str _5117_k) {
	return (_5117_k == jule::Str("f32", 3)) || (_5117_k == jule::Str("f64", 3));
}



inline jule::Bool _1ac55e836_is_num(jule::Str _5615_k) {
	return _1ac55e1c6_is_int(_5615_k) || _1ac55e528_is_float(_5615_k);
}



inline jule::Bool _1a5890c5c_is_ascii(jule::I32 _1017_r) {
	
	return (_1017_r <= 127LL);
}



inline jule::I32 _1a5891246_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if ((_1816_bytes.len() == 0LL)) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::I64 _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1a58b4b0a_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _1c477e19d_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



inline jule::Str _1a58b40b0_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



inline jule::Str _1a58b4412_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if ((_4215_bytes.len() == 0LL)) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::I64 _4813_i = 0LL;
	while (_4813_i < static_cast<jule::I64>(static_cast<jule::I64>(_4215_bytes.len()))) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1a58b4ee5_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::I64 _5421_size;
				std::tie(_5418_r,_5421_size) = _1c477e19d_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_1c4780787_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_1a79701ad:;
	}
	_iter_end_1a79701ad:;
	return static_cast<jule::Str>(_4713_s);
}



inline std::tuple<jule::U8,jule::Bool> _1a58b4720_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto &_match_expr{ _6224_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a7974305:;
			{
				_6241_seq='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a797504d:;
			{
				_6241_seq='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a79750b4:;
			{
				_6241_seq='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a797512a:;
			{
				_6241_seq='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a7975191:;
			{
				_6241_seq='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a7975218:;
			{
				_6241_seq='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a7975290:;
			{
				_6241_seq='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a7975317:;
			{
				_6241_seq='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a797538e:;
			{
				_6241_seq='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a7975416:;
			{
				_6241_seq='\v';
			}
		}
		_match_end_1a7974e2c:;
	}
	_6252_ok=(_6241_seq != 0LLU);
	return std::make_tuple(_6241_seq,_6252_ok);
}



inline jule::I32 _1a58b4b0a_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::I64& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1a58b4720_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_8510_b));
	}
	{
		auto &_match_expr{ _8422_bytes[_8442_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1a797b043:;
			{
				
				jule::I32 _9513_r = static_cast<jule::I32>(({
					auto except = _1abea2bd6_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:95:22"));
					(except.result);
				}));
				_8442_i+=5LL;
				return _9513_r;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a797a77e:;
			{
				
				jule::I32 _10013_r = static_cast<jule::I32>(({
					auto except = _1abea2bd6_parse_uint(static_cast<jule::Str>(_8422_bytes.slice((_8442_i + 1LL),(_8442_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:100:22"));
					(except.result);
				}));
				_8442_i+=9LL;
				return _10013_r;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a797a5e7:;
			{
				
				jule::Slice<jule::U8> _10513_seq = _8422_bytes.slice((_8442_i + 1LL),(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1abea2bd6_parse_uint(static_cast<jule::Str>(_10513_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:107:18"));
					(except.result);
				})));
			}
		}
		else {
			_case_begin_1a797a031:;
			{
				
				jule::Slice<jule::U8> _11013_seq = _8422_bytes.slice(_8442_i,(_8442_i + 3LL));
				_8442_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1abea2bd6_parse_uint(static_cast<jule::Str>(_11013_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:112:18"));
					(except.result);
				})));
			}
		}
		_match_end_1a79795d5:;
	}
}



inline jule::Slice<jule::U8> _1a58b4ee5_str_esq_seq(jule::Slice<jule::U8> _11616_bytes,jule::I64& _11636_i) {
	jule::I32 _1179_r = _1a58b4b0a_rune_from_esq_seq(_11616_bytes,_11636_i);
	if ((_1179_r <= 255LL)) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(static_cast<jule::U8>(_1179_r)))});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1179_r));
}



inline jule::I64 _1a598dad5_find_format_prefix(jule::Slice<jule::U8>& _924_bytes,jule::I64& _940_start) {
	jule::I64 _1013_i = _940_start;
	while (_1013_i < static_cast<jule::I64>(static_cast<jule::I64>(_924_bytes.len()))) {
		{
			jule::I32 _1214_r;
			jule::I64 _1217_size;
			std::tie(_1214_r,_1217_size) = _1c477e19d_decode_rune(_924_bytes.slice(_1013_i));
			if (_1214_r == '{') {
				return _1013_i;
			}
			_1013_i+=_1217_size;
		}
	_iter_next_1a79ace54:;
	}
	_iter_end_1a79ace54:;
	return -1LL;
}



inline jule::Slice<jule::U8> _1a596cb5d_get_format_range(jule::I64& _2630_i,jule::Slice<jule::U8>& _2643_bytes) {
	jule::I64 _279_start = _2630_i;
	jule::I64 _2813_braces = 0LL;
	while (_2630_i < static_cast<jule::I64>(static_cast<jule::I64>(_2643_bytes.len()))) {
		{
			jule::I32 _3014_r;
			jule::I64 _3017_size;
			std::tie(_3014_r,_3017_size) = _1c477e19d_decode_rune(_2643_bytes.slice(_2630_i));
			_2630_i+=_3017_size;
			{
				auto &_match_expr{ _3014_r };
				
				if (_match_expr == '{') {
					_case_begin_1a79b1364:;
					{
						(_2813_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a79b152e:;
					{
						(_2813_braces)--;
						if ((_2813_braces == 0LL)) {
							return _2643_bytes.slice(_279_start,_2630_i);
						}
					}
				}
				_match_end_1a79b14c9:;
			}
		}
	_iter_next_1a79b053e:;
	}
	_iter_end_1a79b053e:;
	return nullptr;
}



inline jule::Slice<jule::U8> _1a5979340_fmt_by_default(jule::Any& _4620_arg) {
	if (_4620_arg == jule::Any(jule::Any(nullptr))) {
		return jule::Slice<jule::U8>({'n','i','l'});
	}
	{
		auto &_match_expr{ _4620_arg };
		
		if (_match_expr.type_is<jule::F32>()) {
			_case_begin_1a79b3641:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1abdcd33c_fmt_float(static_cast<jule::F64>(static_cast<jule::F64>(_4620_arg.operator jule::F32())),'g',-1LL,32LL));
			}
		}
		else if (_match_expr.type_is<jule::F64>()) {
			_case_begin_1a79b2cd3:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1abdcd33c_fmt_float(static_cast<jule::F64>(_4620_arg.operator jule::F64()),'g',-1LL,64LL));
			}
		}
		else if (_match_expr.type_is<jule::I8>()) {
			_case_begin_1a79b3597:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac445ad5_fmt_int(static_cast<jule::I8>(_4620_arg.operator jule::I8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I16>()) {
			_case_begin_1a79b3960:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac445ad5_fmt_int(static_cast<jule::I16>(_4620_arg.operator jule::I16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I32>()) {
			_case_begin_1a79b3179:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac445ad5_fmt_int(static_cast<jule::I32>(_4620_arg.operator jule::I32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::I64>()) {
			_case_begin_1a79b31e0:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac445ad5_fmt_int(static_cast<jule::I64>(_4620_arg.operator jule::I64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U8>()) {
			_case_begin_1a79b3256:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac4456a6_fmt_uint(static_cast<jule::U8>(_4620_arg.operator jule::U8()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U16>()) {
			_case_begin_1a79b32bc:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac4456a6_fmt_uint(static_cast<jule::U16>(_4620_arg.operator jule::U16()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U32>()) {
			_case_begin_1a79b3333:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac4456a6_fmt_uint(static_cast<jule::U32>(_4620_arg.operator jule::U32()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::U64>()) {
			_case_begin_1a79b3399:;
			{
				return static_cast<jule::Slice<jule::U8>>(_1ac4456a6_fmt_uint(static_cast<jule::U64>(_4620_arg.operator jule::U64()),10LL));
			}
		}
		else if (_match_expr.type_is<jule::Str>()) {
			_case_begin_1a79b3a09:;
			{
				return static_cast<jule::Slice<jule::U8>>(_4620_arg.operator jule::Str());
			}
		}
		else if (_match_expr.type_is<jule::Bool>()) {
			_case_begin_1a79b3a70:;
			{
				if (_4620_arg.operator jule::Bool()) {
					return jule::Slice<jule::U8>({'t','r','u','e'});
				}
				return jule::Slice<jule::U8>({'f','a','l','s','e'});
			}
		}
		else {
			_case_begin_1a79b2a80:;
			{
				return static_cast<jule::Slice<jule::U8>>(jule::to_str(_4620_arg));
			}
		}
		_match_end_1a79b24db:;
	}
}



inline jule::Slice<jule::U8> _1a596b1ab_apply_fmt_by_default(jule::I64& _7530_j,jule::Slice<jule::Any>& _7539_args) {
	jule::Any _769_arg = _7539_args[_7530_j];
	(_7530_j)++;
	return _1a5979340_fmt_by_default(_769_arg);
}



inline jule::Slice<jule::U8> _1a59831a1_apply_fmt(jule::Slice<jule::U8>& _8319_fmt,jule::I64& _8337_j,jule::Slice<jule::Any>& _8346_args) {
	if ((_8319_fmt.len() == 2LL)) {
		return _1a596b1ab_apply_fmt_by_default(_8337_j,_8346_args);
	}
	if ((_8319_fmt.len() == 4LL) && (_8319_fmt == jule::Slice<jule::U8>({'{','{','}','}'}))) {
		return jule::Slice<jule::U8>({'{','}'});
	}
	return _8319_fmt;
}



inline jule::Slice<jule::U8> _1a59760d9_format_bytes(jule::Str _9717_fmt,jule::Slice<jule::Any> _9727_args) {
	jule::Slice<jule::U8> _9813_fmt_bytes = static_cast<jule::Slice<jule::U8>>(_9717_fmt);
	if ((_9727_args.len() == 0LL)) {
		return _9813_fmt_bytes;
	}
	jule::Slice<jule::U8> _10413_bytes = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_9717_fmt.len()));
	jule::I64 _10613_j = 0LL;
	jule::I64 _10713_last = 0LL;
	jule::I64 _10813_i = _1a598dad5_find_format_prefix(_9813_fmt_bytes,_10713_last);
	for (; (_10813_i != -1LL); _10813_i=static_cast<jule::I64>(_1a598dad5_find_format_prefix(_9813_fmt_bytes,_10813_i))) {
		{
			_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last,_10813_i));
			jule::Slice<jule::U8> _11117_format = _1a596cb5d_get_format_range(_10813_i,_9813_fmt_bytes);
			if ((_11117_format == nullptr)) {
				goto _iter_next_1a79c1297;
			}
			_10413_bytes=jule::append(_10413_bytes,_1a59831a1_apply_fmt(_11117_format,_10613_j,_9727_args));
			if (_10613_j >= static_cast<jule::I64>(static_cast<jule::I64>(_9727_args.len()))) {
				_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10813_i));
				_10713_last=static_cast<jule::I64>(_9813_fmt_bytes.len());
				goto _iter_end_1a79c1297;
			}
			_10713_last=_10813_i;
		}
	_iter_next_1a79c1297:;
	}
	_iter_end_1a79c1297:;
	if (_10713_last < static_cast<jule::I64>(static_cast<jule::I64>(_9813_fmt_bytes.len()))) {
		_10413_bytes=jule::append(_10413_bytes,_9813_fmt_bytes.slice(_10713_last));
	}
	return _10413_bytes;
}



inline jule::Str _1a59874d5_format(jule::Str _15715_fmt,jule::Slice<jule::Any> _15725_args) {
	return static_cast<jule::Str>(_1a59760d9_format_bytes(_15715_fmt,_15725_args));
}



inline jule::Bool _1ab838072_kind_uses_generics(jule::Ptr<_1a5913e9a_TypeKind> _40523_k,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>& _40538_generics) {
	jule::Str _4069_pk = _1a59145b6_to_str(_40523_k.ptr());
	{
		auto &expr = _40538_generics;
		auto it = expr.begin();
		_iter_begin_1a86e027e:;
		if (it != expr.end()) {
			jule::Ptr<_1aa094868_GenericDecl> &_1a86e036c_g = *it;
			{
				if (_1c4783dea_contains(_4069_pk,_1a86e036c_g.get()._field_ident)) {
					return true;
				}
			}
			_iter_next_1a86e027e:;
			++it;
			goto _iter_begin_1a86e027e;
		}
		_iter_end_1a86e027e:;
	}
	return false;
}



inline jule::Bool _1ab8384e5_parameter_uses_generics(jule::Ptr<_1ab830300_Param>& _41529_p,jule::Slice<jule::Ptr<_1aa094868_GenericDecl>>& _41541_generics) {
	if (_1ab830c07_is_self(_41529_p.ptr())) {
		return false;
	}
	return _1ab838072_kind_uses_generics(_41529_p.get()._field_kind.get()._field_kind,_41541_generics);
}



inline jule::Ptr<_1a5918a0a_TypeSymbol> _1ab83bc35_build_type(jule::Ptr<_1dd583461_TypeDecl> _8419_t) {
	if ((_8419_t == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(_8419_t,jule::Ptr<_1a5913e9a_TypeKind>()));
}



inline jule::Ptr<_1a58d1451_Value> _1ab83c087_build_expr(jule::Ptr<_1aa08d334_Expr> _9319_expr) {
	if ((_9319_expr == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(_9319_expr,jule::Ptr<_1a58cee44_Data>()));
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1ab83c395_build_type_alias(jule::Ptr<_1aa09a330_TypeAliasDecl> _10225_decl) {
	return jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(_10225_decl.get()._field_scope,_10225_decl.get()._field_public,_10225_decl.get()._field_cpp_linked,jule::Bool(),jule::Bool(),_10225_decl.get()._field_token,_10225_decl.get()._field_ident,_1ab83bc35_build_type(_10225_decl.get()._field_kind),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>()));
}



inline jule::Ptr<_1ab80cdd2_Field> _1ab83c6e7_build_field(jule::Ptr<_1aa09d5db_FieldDecl> _11320_decl) {
	return jule::new_ptr<_1ab80cdd2_Field>(_1ab80cdd2_Field(jule::Ptr<_1ab810b3d_Struct>(),_11320_decl.get()._field_token,_11320_decl.get()._field_public,_11320_decl.get()._field_mutable,_11320_decl.get()._field_ident,_1ab83bc35_build_type(_11320_decl.get()._field_kind),_11320_decl.get()._field_default));
}



inline jule::Slice<jule::Ptr<_1ab80cdd2_Field>> _1ab83ca05_build_fields(jule::Slice<jule::Ptr<_1aa09d5db_FieldDecl>>& _12422_decls) {
	jule::Slice<jule::Ptr<_1ab80cdd2_Field>> _12513_fields = jule::Slice<jule::Ptr<_1ab80cdd2_Field>>::alloc(0LL,static_cast<jule::I64>(_12422_decls.len()));
	{
		auto &expr = _12422_decls;
		auto it = expr.begin();
		_iter_begin_1a86e57c3:;
		if (it != expr.end()) {
			jule::Ptr<_1aa09d5db_FieldDecl> _1a86e53e9_decl = *it;
			{
				_12513_fields = jule::alloc_for_append(_12513_fields,1);_12513_fields.__push(_1ab83c6e7_build_field(_1a86e53e9_decl));
			}
			_iter_next_1a86e57c3:;
			++it;
			goto _iter_begin_1a86e57c3;
		}
		_iter_end_1a86e57c3:;
	}
	return _12513_fields;
}



inline jule::Ptr<_1ab810b3d_Struct> _1ab83cd13_build_struct(jule::Ptr<_1aa09de7c_StructDecl> _13221_decl) {
	return jule::new_ptr<_1ab810b3d_Struct>(_1ab810b3d_Struct(jule::Ptr<_1a5864747_Sema>(),jule::Slice<jule::Ptr<_1ab810b3d_Struct>>(),jule::Slice<jule::Ptr<_1ab810b3d_Struct>>(),_13221_decl.get()._field_token,_13221_decl.get()._field_ident,_1ab83ca05_build_fields(_13221_decl.get()._field_fields),jule::Slice<jule::Ptr<_1ab832324_Fn>>(),jule::Slice<jule::Ptr<_1a588601b_Var>>(),_13221_decl.get()._field_public,_13221_decl.get()._field_cpp_linked,_13221_decl.get()._field_directives,_13221_decl.get()._field_generics,jule::Slice<jule::Ptr<_1ac44770d_Trait>>(),jule::Slice<jule::Ptr<_1ab814515_StructIns>>()));
}



inline jule::Ptr<_1ab830300_Param> _1ab83d121_build_param(jule::Ptr<_1aa096749_ParamDecl> _14420_decl) {
	return jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_14420_decl.get()._field_token,_14420_decl.get()._field_mutable,_14420_decl.get()._field_variadic,_14420_decl.get()._field_reference,_1ab83bc35_build_type(_14420_decl.get()._field_kind),_14420_decl.get()._field_ident));
}



inline jule::Slice<jule::Ptr<_1ab830300_Param>> _1ab83d4b7_build_params(jule::Slice<jule::Ptr<_1aa096749_ParamDecl>>& _15522_decls) {
	jule::Slice<jule::Ptr<_1ab830300_Param>> _15613_params = jule::Slice<jule::Ptr<_1ab830300_Param>>::alloc(0LL,static_cast<jule::I64>(_15522_decls.len()));
	{
		auto &expr = _15522_decls;
		auto it = expr.begin();
		_iter_begin_1a86e8dc0:;
		if (it != expr.end()) {
			jule::Ptr<_1aa096749_ParamDecl> _1a86e89e6_decl = *it;
			{
				_15613_params = jule::alloc_for_append(_15613_params,1);_15613_params.__push(_1ab83d121_build_param(_1a86e89e6_decl));
			}
			_iter_next_1a86e8dc0:;
			++it;
			goto _iter_begin_1a86e8dc0;
		}
		_iter_end_1a86e8dc0:;
	}
	return _15613_params;
}



inline jule::Ptr<_1ab82e7a5_RetType> _1ab83d7c5_build_ret_type(jule::Ptr<_1aa08ce16_RetTypeDecl> _16323_decl) {
	if ((_16323_decl.get()._field_idents == nullptr) && (_16323_decl.get()._field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_ptr<_1ab82e7a5_RetType>(_1ab82e7a5_RetType(_1ab83bc35_build_type(_16323_decl.get()._field_kind),_16323_decl.get()._field_idents));
}



inline jule::Ptr<_1ab832324_Fn> _1ab83dad3_build_fn(jule::Ptr<_1aa096b67_FnDecl> _17317_decl) {
	return jule::new_ptr<_1ab832324_Fn>(_1ab832324_Fn(jule::Ptr<_1a5864747_Sema>(),_17317_decl.get()._field_token,_17317_decl.get()._field_global,_17317_decl.get()._field_unsafety,_17317_decl.get()._field_public,_17317_decl.get()._field_cpp_linked,_17317_decl.get()._field_statically,_17317_decl.get()._field_exceptional,_17317_decl.get()._field_ident,_17317_decl.get()._field_directives,_17317_decl.get()._field_scope,_17317_decl.get()._field_generics,_1ab83d7c5_build_ret_type(_17317_decl.get()._field_result),_1ab83d4b7_build_params(_17317_decl.get()._field_params),jule::Ptr<_1ab810b3d_Struct>(),jule::Slice<jule::Ptr<_1ab836218_FnIns>>()));
}



inline jule::Slice<jule::Ptr<_1ab832324_Fn>> _1ab83dde1_build_methods(jule::Slice<jule::Ptr<_1aa096b67_FnDecl>>& _19123_decls) {
	jule::Slice<jule::Ptr<_1ab832324_Fn>> _19213_methods = jule::Slice<jule::Ptr<_1ab832324_Fn>>::alloc(0LL,static_cast<jule::I64>(_19123_decls.len()));
	{
		auto &expr = _19123_decls;
		auto it = expr.begin();
		_iter_begin_1a86ed479:;
		if (it != expr.end()) {
			jule::Ptr<_1aa096b67_FnDecl> _1a86ed633_decl = *it;
			{
				_19213_methods = jule::alloc_for_append(_19213_methods,1);_19213_methods.__push(_1ab83dad3_build_fn(_1a86ed633_decl));
			}
			_iter_next_1a86ed479:;
			++it;
			goto _iter_begin_1a86ed479;
		}
		_iter_end_1a86ed479:;
	}
	return _19213_methods;
}



inline jule::Ptr<_1ac44770d_Trait> _1ab83e1ee_build_trait(jule::Ptr<_1aa09e631_TraitDecl> _19920_decl) {
	return jule::new_ptr<_1ac44770d_Trait>(_1ac44770d_Trait(_19920_decl.get()._field_token,_19920_decl.get()._field_ident,_19920_decl.get()._field_public,jule::Bool(),_1ab83dde1_build_methods(_19920_decl.get()._field_methods),jule::Slice<jule::Ptr<_1ab810b3d_Struct>>()));
}



inline jule::Ptr<_1ac44948a_EnumItem> _1ab83e50c_build_enum_item(jule::Ptr<_1aa09c134_EnumItemDecl> _20824_decl) {
	return jule::new_ptr<_1ac44948a_EnumItem>(_1ac44948a_EnumItem(_20824_decl.get()._field_token,_20824_decl.get()._field_ident,_1ab83c087_build_expr(_20824_decl.get()._field_expr)));
}



inline jule::Slice<jule::Ptr<_1ac44948a_EnumItem>> _1ab83e81a_build_enum_items(jule::Slice<jule::Ptr<_1aa09c134_EnumItemDecl>>& _21626_decls) {
	jule::Slice<jule::Ptr<_1ac44948a_EnumItem>> _21713_items = jule::Slice<jule::Ptr<_1ac44948a_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_21626_decls.len()));
	{
		auto &expr = _21626_decls;
		auto it = expr.begin();
		_iter_begin_1a8701119:;
		if (it != expr.end()) {
			jule::Ptr<_1aa09c134_EnumItemDecl> _1a8700c51_decl = *it;
			{
				_21713_items = jule::alloc_for_append(_21713_items,1);_21713_items.__push(_1ab83e50c_build_enum_item(_1a8700c51_decl));
			}
			_iter_next_1a8701119:;
			++it;
			goto _iter_begin_1a8701119;
		}
		_iter_end_1a8701119:;
	}
	return _21713_items;
}



inline jule::Ptr<_1ac44a337_Enum> _1ab83eb28_build_enum(jule::Ptr<_1aa09cb7e_EnumDecl> _22419_decl) {
	return jule::new_ptr<_1ac44a337_Enum>(_1ac44a337_Enum(_22419_decl.get()._field_token,_22419_decl.get()._field_public,_22419_decl.get()._field_ident,_1ab83bc35_build_type(_22419_decl.get()._field_kind),_1ab83e81a_build_enum_items(_22419_decl.get()._field_items)));
}



inline jule::Ptr<_1a588601b_Var> _1ab840057_build_var(jule::Ptr<_1aa097085_VarDecl> _23418_decl) {
	return jule::new_ptr<_1a588601b_Var>(_1a588601b_Var(jule::Ptr<_1ac56022c_Scope>(),_23418_decl.get()._field_token,_23418_decl.get()._field_ident,_23418_decl.get()._field_cpp_linked,_23418_decl.get()._field_constant,_23418_decl.get()._field_mutable,_23418_decl.get()._field_public,jule::Bool(),_23418_decl.get()._field_statically,_23418_decl.get()._field_reference,_1ab83bc35_build_type(_23418_decl.get()._field_kind),_1ab83c087_build_expr(_23418_decl.get()._field_expr),static__1ab83a294_new(),_23418_decl.get()._field_directives,jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>()));
}



inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ab840365_build_vars(jule::Slice<jule::Ptr<_1aa097085_VarDecl>> _25119_decls) {
	jule::Slice<jule::Ptr<_1a588601b_Var>> _25213_vars = jule::Slice<jule::Ptr<_1a588601b_Var>>::alloc(0LL,static_cast<jule::I64>(_25119_decls.len()));
	{
		auto &expr = _25119_decls;
		auto it = expr.begin();
		_iter_begin_1a8705195:;
		if (it != expr.end()) {
			jule::Ptr<_1aa097085_VarDecl> _1a8704ccc_decl = *it;
			{
				_25213_vars = jule::alloc_for_append(_25213_vars,1);_25213_vars.__push(_1ab840057_build_var(_1a8704ccc_decl));
			}
			_iter_next_1a8705195:;
			++it;
			goto _iter_begin_1a8705195;
		}
		_iter_end_1a8705195:;
	}
	return _25213_vars;
}



inline jule::Ptr<_1ac44c05e_Impl> _1ab840673_build_impl(jule::Ptr<_1aa09ecd5_Impl> _25919_decl) {
	return jule::new_ptr<_1ac44c05e_Impl>(_1ac44c05e_Impl(_25919_decl.get()._field_base,_25919_decl.get()._field_dest,_1ab83dde1_build_methods(_25919_decl.get()._field_methods),_1ab840365_build_vars(_25919_decl.get()._field_statics)));
}



inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac539d3e_new_scope_checker_base(jule::Ptr<_1a5864747_Sema>& _4032_s,jule::Ptr<_1ab836218_FnIns> _4046_owner) {
	return jule::new_ptr<_1ac565bd3_ScopeChecker>(_1ac565bd3_ScopeChecker(jule::Ptr<_1aa07563a_Token>(),_4032_s,_4046_owner,jule::Ptr<_1ac565bd3_ScopeChecker>(),jule::I64(),jule::new_ptr<_1a58c88ee_SymbolTable>(_1a58c88ee_SymbolTable()),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1aa09632b_ScopeTree>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::U64(),jule::U64(),jule::Ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>>(),jule::I64()));
}



inline jule::Ptr<_1ac565bd3_ScopeChecker> _1ac514c09_new_scope_checker(jule::Ptr<_1a5864747_Sema>& _4827_s,jule::Ptr<_1ab836218_FnIns> _4841_owner) {
	jule::Ptr<_1ac565bd3_ScopeChecker> _4913_base = _1ac539d3e_new_scope_checker_base(_4827_s,_4841_owner);
	_4913_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac565397_ScopeLabel>>>(nullptr);
	_4913_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac5657b5_ScopeGoto>>>(nullptr);
	return _4913_base;
}



inline jule::Ptr<_1ac565397_ScopeLabel> _1ac4dc96d_find_label_parent(jule::Str _5822_ident,jule::Ptr<_1ac565bd3_ScopeChecker> _5838_scope) {
	jule::Ptr<_1ac565397_ScopeLabel> _5913_label = _1ac568b4d_find_label_scope(_5838_scope, _5822_ident);
	while ((_5913_label == nullptr)) {
		{
			if ((_5838_scope.get()._field_parent == nullptr) || (_5838_scope.get()._field_owner != nullptr)) {
				return nullptr;
			}
			_5838_scope=_5838_scope.get()._field_parent;
			_5913_label=_1ac568b4d_find_label_scope(_5838_scope, _5822_ident);
		}
	_iter_next_1a8708c04:;
	}
	_iter_end_1a8708c04:;
	return _5913_label;
}



inline jule::Bool _1ac507c30_stmt_is_goto_scope(jule::Any& _7224_stmt,jule::Ptr<_1ac56022c_Scope>& _7236_sc) {
	{
		auto &_match_expr{ _7224_stmt };
		
		if (_match_expr.type_is<jule::Ptr<_1ac56022c_Scope>>()) {
			_case_begin_1a870b454:;
			{
				return _7224_stmt.operator jule::Ptr<_1ac56022c_Scope>() == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5613a4_InfIter>>()) {
			_case_begin_1a870b4ba:;
			{
				return _7224_stmt.operator jule::Ptr<_1ac5613a4_InfIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac561be0_RangeIter>>()) {
			_case_begin_1a870ae6a:;
			{
				return _7224_stmt.operator jule::Ptr<_1ac561be0_RangeIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac5617c2_WhileIter>>()) {
			_case_begin_1a870aed1:;
			{
				return _7224_stmt.operator jule::Ptr<_1ac5617c2_WhileIter>().get()._field_scope == _7236_sc;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac563ede_Match>>()) {
			_case_begin_1a870b047:;
			{
				jule::Ptr<_1ac563ede_Match> _8713_m = _7224_stmt.operator jule::Ptr<_1ac563ede_Match>();
				{
					auto &expr = _8713_m.get()._field_cases;
					auto it = expr.begin();
					_iter_begin_1a870db82:;
					if (it != expr.end()) {
						jule::Ptr<_1ac56463d_Case> &_1a870dbc6_c = *it;
						{
							if (_1a870dbc6_c.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1a870db82:;
						++it;
						goto _iter_begin_1a870db82;
					}
					_iter_end_1a870db82:;
				}
				return (_8713_m.get()._field_default != nullptr) && (_8713_m.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac560e86_Conditional>>()) {
			_case_begin_1a870b0ad:;
			{
				jule::Ptr<_1ac560e86_Conditional> _9613_c = _7224_stmt.operator jule::Ptr<_1ac560e86_Conditional>();
				{
					auto &expr = _9613_c.get()._field_elifs;
					auto it = expr.begin();
					_iter_begin_1a8710700:;
					if (it != expr.end()) {
						jule::Ptr<_1ac56064a_If> &_1a8710744_elif = *it;
						{
							if (_1a8710744_elif.get()._field_scope == _7236_sc) {
								return true;
							}
						}
						_iter_next_1a8710700:;
						++it;
						goto _iter_begin_1a8710700;
					}
					_iter_end_1a8710700:;
				}
				return (_9613_c.get()._field_default != nullptr) && (_9613_c.get()._field_default.get()._field_scope == _7236_sc);
			}
		}
		else {
			_case_begin_1a870ad16:;
			{
				return false;
			}
		}
		_match_end_1a870ac39:;
	}
}



inline jule::I64 _1ac51eb15_count_match_type(jule::Ptr<_1ac563ede_Match>& _10922_m,jule::Ptr<_1a5913e9a_TypeKind>& _10934_t) {
	jule::I64 _11013_n = 0LL;
	jule::Str _1119_kind = _1a59145b6_to_str(_10934_t.ptr());
	_julec_label_loop:;
	{
		auto &expr = _10922_m.get()._field_cases;
		auto it = expr.begin();
		_iter_begin_1a87124b0:;
		if (it != expr.end()) {
			jule::Ptr<_1ac56463d_Case> &_1a87126ad_c = *it;
			{
				if ((_1a87126ad_c == nullptr)) {
					goto _iter_next_1a87124b0;
				}
				{
					auto &expr = _1a87126ad_c.get()._field_exprs;
					auto it = expr.begin();
					_iter_begin_1a8712c1e:;
					if (it != expr.end()) {
						jule::Ptr<_1a58cee44_Data> &_1a871336d_expr = *it;
						{
							if ((_1a871336d_expr == nullptr)) {
								goto _iter_end_1a87124b0;
							}
							if (_1119_kind == _1a59145b6_to_str(_1a871336d_expr.get()._field_model.operator jule::Ptr<_1a5913e9a_TypeKind>().ptr())) {
								(_11013_n)++;
							}
						}
						_iter_next_1a8712c1e:;
						++it;
						goto _iter_begin_1a8712c1e;
					}
					_iter_end_1a8712c1e:;
				}
			}
			_iter_next_1a87124b0:;
			++it;
			goto _iter_begin_1a87124b0;
		}
		_iter_end_1a87124b0:;
	}
	return _11013_n;
}



inline jule::Slice<jule::Ptr<_1a58cee44_Data>> _1ac548105_get_datas_from_tuple_data(jule::Ptr<_1a58cee44_Data>& _13335_d) {
	if ((_1a59185a9_tup(_13335_d.get()._field_kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _13335_d.get()._field_model };
			
			if (_match_expr.type_is<jule::Ptr<_1ab821599_TupleExprModel>>()) {
				_case_begin_1a8714bee:;
				{
					return _13335_d.get()._field_model.operator jule::Ptr<_1ab821599_TupleExprModel>().get()._field_datas;
				}
			}
			else {
				_case_begin_1a8714b88:;
				{
					jule::Ptr<_1a59203b3_Tuple> _14021_t = _1a59185a9_tup(_13335_d.get()._field_kind.ptr());
					jule::Slice<jule::Ptr<_1a58cee44_Data>> _14121_r = jule::Slice<jule::Ptr<_1a58cee44_Data>>::alloc(0LL,static_cast<jule::I64>(_14021_t.get()._field_types.len()));
					{
						auto &expr = _14021_t.get()._field_types;
						auto it = expr.begin();
						_iter_begin_1a87162d8:;
						if (it != expr.end()) {
							jule::Ptr<_1a5913e9a_TypeKind> _1a871632c_kind = *it;
							{
								_14121_r = jule::alloc_for_append(_14121_r,1);_14121_r.__push(jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(_1a871632c_kind,jule::Ptr<_1a5913e9a_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>())));
							}
							_iter_next_1a87162d8:;
							++it;
							goto _iter_begin_1a87162d8;
						}
						_iter_end_1a87162d8:;
					}
					return _14121_r;
				}
			}
			_match_end_1a8714b33:;
		}
	} else {
		return jule::Slice<jule::Ptr<_1a58cee44_Data>>({_13335_d});
	}
}



inline jule::Slice<jule::Any> _1ac520c59_get_expr_models(jule::Any& _15525_m) {
	{
		auto &_match_expr{ _15525_m };
		
		if (_match_expr.type_is<jule::Ptr<_1aa08db70_TupleExpr>>()) {
			_case_begin_1a871476a:;
			{
				jule::Ptr<_1aa08db70_TupleExpr> _15817_tup = _15525_m.operator jule::Ptr<_1aa08db70_TupleExpr>();
				jule::Slice<jule::Any> _15917_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15817_tup.get()._field_expr.len()));
				{
					auto &expr = _15817_tup.get()._field_expr;
					auto it = expr.begin();
					_iter_begin_1a8718a6b:;
					if (it != expr.end()) {
						jule::Ptr<_1aa08d334_Expr> _1a87191ba_expr = *it;
						{
							_15917_models = jule::alloc_for_append(_15917_models,1);_15917_models.__push(_1a87191ba_expr.get()._field_kind);
						}
						_iter_next_1a8718a6b:;
						++it;
						goto _iter_begin_1a8718a6b;
					}
					_iter_end_1a8718a6b:;
				}
				return _15917_models;
			}
		}
		else {
			_case_begin_1a8717a9d:;
			{
				return jule::Slice<jule::Any>({_15525_m});
			}
		}
		_match_end_1a87179d2:;
	}
}



inline jule::Bool _1ac524785_check_mut(jule::Ptr<_1a5864747_Sema>& _17019_s,jule::Ptr<_1a58cee44_Data>& _17030_left,jule::Ptr<_1a58cee44_Data> _17047_right,_1aa07563a_Token _17061_op) {
	jule::Bool _17074_ok = jule::Bool();
	{
		
		if ((!(_17030_left.get()._field_mutable))) {
			_case_begin_1a871a92a:;
			{
				_1a5867bac_push_err(_17019_s.ptr(), _17061_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else if (((_17047_right != nullptr) && (!(_17047_right.get()._field_mutable))) && _1a5915809_mutable(_17047_right.get()._field_kind.ptr())) {
			_case_begin_1a871aa07:;
			{
				if ((_17061_op._field_kind != jule::Str("=", 1)) && (_1a5917c29_strct(_17047_right.get()._field_kind.ptr()) != nullptr)) {
					_17074_ok = true;
					return _17074_ok;
				}
				_1a5867bac_push_err(_17019_s.ptr(), _17061_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_17047_right.get()._field_kind.ptr()))}));
				_17074_ok = false;
				return _17074_ok;
			}
		}
		else {
			_case_begin_1a871a287:;
			{
				_17074_ok = true;
				return _17074_ok;
			}
		}
		_match_end_1a871a1dd:;
	}
}



inline jule::Bool _1ac525368_check_assign(jule::Ptr<_1a5864747_Sema>& _18922_s,jule::Ptr<_1a58cee44_Data>& _18937_left,jule::Ptr<_1a58cee44_Data> _18954_right,_1aa07563a_Token _18968_op) {
	jule::Bool _18981_ok = jule::Bool();
	jule::Ptr<_1ab836218_FnIns> _1909_f = _1a591794e_fnc(_18937_left.get()._field_kind.ptr());
	if (((_1909_f != nullptr) && (_1909_f.get()._field_decl != nullptr)) && _1909_f.get()._field_decl.get()._field_global) {
		_1a5867bac_push_err(_18922_s.ptr(), _18968_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		_18981_ok = false;
		return _18981_ok;
	}
	{
		
		if (_1a58d0b48_is_const(_18937_left.ptr())) {
			_case_begin_1a8721755:;
			{
				_1a5867bac_push_err(_18922_s.ptr(), _18968_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1a58680a8_push_suggestion(_18922_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_18937_left.get()._field_lvalue))) {
			_case_begin_1a8721821:;
			{
				_1a5867bac_push_err(_18922_s.ptr(), _18968_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else if ((!(_1ac524785_check_mut(_18922_s,_18937_left,_18954_right,_18968_op)))) {
			_case_begin_1a8721887:;
			{
				_18981_ok = false;
				return _18981_ok;
			}
		}
		else {
			_case_begin_1a8721117:;
			{
				_18981_ok = true;
				return _18981_ok;
			}
		}
		_match_end_1a872103a:;
	}
}



inline jule::Bool _1ac52649b_is_valid_ast_st_for_next_st(jule::Any& _21137_n) {
	{
		auto &_match_expr{ _21137_n };
		
		if (_match_expr.type_is<jule::Ptr<_1aa095e0d_AssignSt>>()) {
			_case_begin_1a87243e5:;
			{
				return (!(_21137_n.operator jule::Ptr<_1aa095e0d_AssignSt>().get()._field_declarative));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1aa091bc8_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_1aa08d334_Expr>>()) {
			_case_begin_1a872445b:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8723cda:;
			{
				return false;
			}
		}
		_match_end_1a8723e83:;
	}
}



inline jule::Bool _1ac5295d1_is_valid_st_for_next_st(jule::Any& _22329_st) {
	{
		auto &_match_expr{ _22329_st };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_1ac563285_Postfix>>() || _match_expr.type_is<jule::Ptr<_1ac5636a3_Assign>>() || _match_expr.type_is<jule::Ptr<_1ac563ac1_MultiAssign>>()) {
			_case_begin_1a87256c1:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a8725737:;
			{
				{
					auto &_match_expr{ _22329_st.operator jule::Ptr<_1a58cee44_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab81a0ed_FnCallExprModel>>()) {
						_case_begin_1a8725da8:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a8726606:;
						{
							return false;
						}
					}
					_match_end_1a87265a1:;
				}
			}
		}
		else {
			_case_begin_1a8724e62:;
			{
				return false;
			}
		}
		_match_end_1a8724736:;
	}
}



inline jule::Bool _1ac52a1b4_st_is_def(jule::Any& _24015_st) {
	{
		auto &_match_expr{ _24015_st };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a872667d:;
			{
				return true;
			}
		}
		else {
			_case_begin_1a8725a23:;
			{
				return false;
			}
		}
		_match_end_1a8726727:;
	}
}



inline jule::Ptr<_1a588601b_Var> _1ac57d6bd_find_var_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _4129_files,jule::Str _4152_ident,jule::Bool _4164_cpp_linked) {
	{
		auto &expr = _4129_files;
		auto it = expr.begin();
		_iter_begin_1a8727937:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8727a14_f = *it;
			{
				jule::Ptr<_1a588601b_Var> _4317_v = _1a58c99dd_find_var(_1a8727a14_f.ptr(), _4152_ident,_4164_cpp_linked);
				if ((_4317_v != nullptr)) {
					return _4317_v;
				}
			}
			_iter_next_1a8727937:;
			++it;
			goto _iter_begin_1a8727937;
		}
		_iter_end_1a8727937:;
	}
	return nullptr;
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1ac57dc1d_find_type_alias_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _5336_files,jule::Str _5359_ident,jule::Bool _5371_cpp_linked) {
	{
		auto &expr = _5336_files;
		auto it = expr.begin();
		_iter_begin_1a8727e54:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a8729175_f = *it;
			{
				jule::Ptr<_1a5912d12_TypeAlias> _5517_ta = _1a58c9e72_find_type_alias(_1a8729175_f.ptr(), _5359_ident,_5371_cpp_linked);
				if ((_5517_ta != nullptr)) {
					return _5517_ta;
				}
			}
			_iter_next_1a8727e54:;
			++it;
			goto _iter_begin_1a8727e54;
		}
		_iter_end_1a8727e54:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab810b3d_Struct> _1ac57e1c4_find_struct_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _6532_files,jule::Str _6555_ident,jule::Bool _6567_cpp_linked) {
	{
		auto &expr = _6532_files;
		auto it = expr.begin();
		_iter_begin_1a87295b5:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a872a7d6_f = *it;
			{
				jule::Ptr<_1ab810b3d_Struct> _6717_s = _1a58ca406_find_struct(_1a872a7d6_f.ptr(), _6555_ident,_6567_cpp_linked);
				if ((_6717_s != nullptr)) {
					return _6717_s;
				}
			}
			_iter_next_1a87295b5:;
			++it;
			goto _iter_begin_1a87295b5;
		}
		_iter_end_1a87295b5:;
	}
	return nullptr;
}



inline jule::Ptr<_1ab832324_Fn> _1ac57e6d0_find_fn_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _7728_files,jule::Str _7751_ident,jule::Bool _7763_cpp_linked) {
	{
		auto &expr = _7728_files;
		auto it = expr.begin();
		_iter_begin_1a872ac26:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a872be47_file = *it;
			{
				jule::Ptr<_1ab832324_Fn> _7917_f = _1a58ca88a_find_fn(_1a872be47_file.ptr(), _7751_ident,_7763_cpp_linked);
				if ((_7917_f != nullptr)) {
					return _7917_f;
				}
			}
			_iter_next_1a872ac26:;
			++it;
			goto _iter_begin_1a872ac26;
		}
		_iter_end_1a872ac26:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44770d_Trait> _1ac57eaba_find_trait_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _8931_files,jule::Str _8954_ident) {
	{
		auto &expr = _8931_files;
		auto it = expr.begin();
		_iter_begin_1a872d520:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a872c255_f = *it;
			{
				jule::Ptr<_1ac44770d_Trait> _9117_t = _1a58cac42_find_trait(_1a872c255_f.ptr(), _8954_ident);
				if ((_9117_t != nullptr)) {
					return _9117_t;
				}
			}
			_iter_next_1a872d520:;
			++it;
			goto _iter_begin_1a872d520;
		}
		_iter_end_1a872d520:;
	}
	return nullptr;
}



inline jule::Ptr<_1ac44a337_Enum> _1ac57eea5_find_enum_in_package(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _10130_files,jule::Str _10153_ident) {
	{
		auto &expr = _10130_files;
		auto it = expr.begin();
		_iter_begin_1a872e0e2:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1a872e1be_f = *it;
			{
				jule::Ptr<_1ac44a337_Enum> _10317_e = _1a58cb0e9_find_enum(_1a872e1be_f.ptr(), _10153_ident);
				if ((_10317_e != nullptr)) {
					return _10317_e;
				}
			}
			_iter_next_1a872e0e2:;
			++it;
			goto _iter_begin_1a872e0e2;
		}
		_iter_end_1a872e0e2:;
	}
	return nullptr;
}



inline jule::Bool _1ac587166_is_std_package(jule::Str _32219_f,jule::Str _32227_p) {
	return _1c471294a_has_prefix(_32219_f,_1c4789ac1_join(jule::Slice<jule::Str>({_1c4820a47_PATH_STDLIB,_32227_p})));
}



inline jule::Bool _1ac5885a7_is_valid_model_for_ref(jule::Any& _1232_m) {
	{
		auto &_match_expr{ _1232_m };
		
		if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1a8731a73:;
			{
				return true;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81e245_StructSubIdentExprModel>>()) {
			_case_begin_1a8731ad9:;
			{
				jule::Ptr<_1ab81e245_StructSubIdentExprModel> _1717_model = _1232_m.operator jule::Ptr<_1ab81e245_StructSubIdentExprModel>();
				return _1ac5885a7_is_valid_model_for_ref(_1717_model.get()._field_expr.get()._field_model);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab81d640_TraitSubIdentExprModel>>()) {
			_case_begin_1a873159a:;
			{
				jule::Ptr<_1ab81d640_TraitSubIdentExprModel> _2017_model = _1232_m.operator jule::Ptr<_1ab81d640_TraitSubIdentExprModel>();
				return _1ac5885a7_is_valid_model_for_ref(_2017_model.get()._field_expr);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab817716_UnaryExprModel>>()) {
			_case_begin_1a8731611:;
			{
				jule::Ptr<_1ab817716_UnaryExprModel> _2317_unary = _1232_m.operator jule::Ptr<_1ab817716_UnaryExprModel>();
				if ((_2317_unary.get()._field_op._field_kind != jule::Str("*", 1))) {
					return false;
				}
				if ((_1a5916ce4_ptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) != nullptr)) {
					return true;
				}
				if ((_1a5916a19_sptr(_2317_unary.get()._field_expr.get()._field_kind.ptr()) == nullptr)) {
					return false;
				}
				return _1ac5885a7_is_valid_model_for_ref(_2317_unary.get()._field_expr.get()._field_model);
			}
		}
		else {
			_case_begin_1a8730665:;
			{
				return false;
			}
		}
		_match_end_1a8730610:;
	}
}



inline _1c4810251_Log _1ac588b07_compiler_err(_1aa07563a_Token& _4518_token,jule::Bool _4532_line,jule::Str _4544_fmt,jule::Slice<jule::Any> _4557_args) {
	_1c4810251_Log _4613_log = _1c4810251_Log(static_cast<jule::I64>(1LL),_4518_token._field_row,_4518_token._field_column,_4518_token._field_file.get()._field_path,_1c4810938_logf(_4544_fmt,_4557_args),jule::Str(),jule::Str());
	if (_4532_line) {
		_4613_log._field_line=_1aa07d159_get_row(_4518_token._field_file.ptr(), _4518_token._field_row);
	}
	return _4613_log;
}



inline jule::Bool _1ac588ee2_imp_is_lookupable(jule::Ptr<_1ac580d41_ImportInfo>& _5923_i,jule::Str _5939_ident) {
	if (_5923_i.get()._field_cpp_linked) {
		return false;
	}
	if ((!(_5923_i.get()._field_import_all))) {
		if ((_5923_i.get()._field_selected.len() > 0LL)) {
			return _1ac583daa_exist_ident(_5923_i.ptr(), _5939_ident);
		}
	}
	return _5923_i.get()._field_import_all;
}



inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ac589344_build_ret_vars(jule::Ptr<_1ab836218_FnIns>& _7224_f) {
	if (_1ab8329d9_is_void(_7224_f.get()._field_decl.ptr()) || (_7224_f.get()._field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1a588601b_Var>> _7713_vars = nullptr;
	jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _7813_types = _1a5891730_get_result_types(_7224_f.get()._field_result);
	{
		auto &expr = _7224_f.get()._field_decl.get()._field_result.get()._field_idents;
		auto it = expr.begin();
		_iter_begin_1a873ae45:;
		if (it != expr.end()) {
			jule::I64 _1a873b2ec_i = it - expr.begin();
			_1aa07563a_Token _1a873b53e_ident = *it;
			{
				if (_1aa07861b_is_ignore_ident(_1a873b53e_ident._field_kind)) {
					goto _iter_next_1a873ae45;
				}
				jule::Ptr<_1a588601b_Var> _8417_v = jule::new_ptr<_1a588601b_Var>(_1a588601b_Var(_7224_f.get()._field_scope,_1a873b53e_ident,_1a873b53e_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_7813_types[_1a873b2ec_i])),jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr>(),jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data()))),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>()));
				_7713_vars = jule::alloc_for_append(_7713_vars,1);_7713_vars.__push(_8417_v);
			}
			_iter_next_1a873ae45:;
			++it;
			_1a873b2ec_i++;
			goto _iter_begin_1a873ae45;
		}
		_iter_end_1a873ae45:;
	}
	return _7713_vars;
}



inline jule::Slice<jule::Ptr<_1a588601b_Var>> _1ac589652_build_param_vars(jule::Ptr<_1ab836218_FnIns>& _10126_f) {
	if ((_10126_f.get()._field_params.len() == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1a588601b_Var>> _10613_vars = jule::Slice<jule::Ptr<_1a588601b_Var>>::alloc(0LL,static_cast<jule::I64>(_10126_f.get()._field_params.len()));
	{
		auto &expr = _10126_f.get()._field_params;
		auto it = expr.begin();
		_iter_begin_1a873e4dc:;
		if (it != expr.end()) {
			jule::Ptr<_1ab834db5_ParamIns> _1a873e630_p = *it;
			{
				jule::Ptr<_1a588601b_Var> _10817_v = jule::new_ptr<_1a588601b_Var>(_1a588601b_Var(_10126_f.get()._field_scope,_1a873e630_p.get()._field_decl.get()._field_token,_1a873e630_p.get()._field_decl.get()._field_ident,jule::Bool(),jule::Bool(),_1a873e630_p.get()._field_decl.get()._field_mutable,jule::Bool(),true,jule::Bool(),_1a873e630_p.get()._field_decl.get()._field_reference,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol()),jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr>(),jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data()))),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>()));
				{
					
					if (_1ab830c07_is_self(_1a873e630_p.get()._field_decl.ptr())) {
						_case_begin_1a8741a83:;
						{
							_10817_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a591395b_Kind>(_10126_f.get()._field_owner, 0)));
							_10817_v.get()._field_reference=true;
							if (_1ab830ed2_is_ref(_1a873e630_p.get()._field_decl.ptr())) {
								_10817_v.get()._field_ident=_10817_v.get()._field_ident.slice(1LL);
								_10817_v.get()._field_kind.get()._field_kind.get()._field_kind=jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591d768_Sptr>(_1a591d768_Sptr(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(_10817_v.get()._field_kind.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_10817_v.get()._field_kind.get()._field_kind.get()._field_kind)))), 6);
							}
						}
					}
					else if (_1a873e630_p.get()._field_decl.get()._field_variadic) {
						_case_begin_1a8741621:;
						{
							_10817_v.get()._field_kind.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),false,jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591e549_Slc>(_1a591e549_Slc(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(_1a873e630_p.get()._field_kind.get()._field_cpp_ident,jule::Bool(),jule::Bool(),_1a873e630_p.get()._field_kind.get()._field_kind)))), 7)));
						}
					}
					else {
						_case_begin_1a87412be:;
						{
							_10817_v.get()._field_kind.get()._field_kind=_1a873e630_p.get()._field_kind;
						}
					}
					_match_end_1a8741269:;
				}
				_10613_vars = jule::alloc_for_append(_10613_vars,1);_10613_vars.__push(_10817_v);
			}
			_iter_next_1a873e4dc:;
			++it;
			goto _iter_begin_1a873e4dc;
		}
		_iter_end_1a873e4dc:;
	}
	return _10613_vars;
}



inline jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _1ac5899a4_build_generic_type_aliases(jule::Ptr<_1ab836218_FnIns>& _16236_f) {
	jule::I64 _16313_size = _16236_f.get()._field_generics.len();
	if ((_16236_f.get()._field_decl.get()._field_owner != nullptr)) {
		_16313_size+=static_cast<jule::I64>(_16236_f.get()._field_decl.get()._field_owner.get()._field_generics.len());
	}
	if ((_16313_size == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>> _17213_aliases = jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>::alloc(0LL,_16313_size);
	{
		auto &expr = _16236_f.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1ab18e5ee:;
		if (it != expr.end()) {
			jule::I64 _1c47e10de_i = it - expr.begin();
			jule::Ptr<_1a5913e9a_TypeKind> _1c47e2145_g = *it;
			{
				jule::Ptr<_1aa094868_GenericDecl> _17517_decl = _16236_f.get()._field_decl.get()._field_generics[_1c47e10de_i];
				_17213_aliases = jule::alloc_for_append(_17213_aliases,1);_17213_aliases.__push(jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(_16236_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_17517_decl.get()._field_token,_17517_decl.get()._field_ident,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_1c47e2145_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>())));
			}
			_iter_next_1ab18e5ee:;
			++it;
			_1c47e10de_i++;
			goto _iter_begin_1ab18e5ee;
		}
		_iter_end_1ab18e5ee:;
	}
	if ((_16236_f.get()._field_decl.get()._field_owner != nullptr)) {
		jule::Ptr<_1ab814515_StructIns> _18917_owner = _16236_f.get()._field_owner;
		{
			auto &expr = _18917_owner.get()._field_generics;
			auto it = expr.begin();
			_iter_begin_1ab2262bd:;
			if (it != expr.end()) {
				jule::I64 _1c4852b45_i = it - expr.begin();
				jule::Ptr<_1a5913e9a_TypeKind> _1ab151e74_g = *it;
				{
					jule::Ptr<_1aa094868_GenericDecl> _19121_decl = _18917_owner.get()._field_decl.get()._field_generics[_1c4852b45_i];
					_17213_aliases = jule::alloc_for_append(_17213_aliases,1);_17213_aliases.__push(jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(_16236_f.get()._field_decl.get()._field_scope,jule::Bool(),jule::Bool(),true,true,_19121_decl.get()._field_token,_19121_decl.get()._field_ident,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),_1ab151e74_g)),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>())));
				}
				_iter_next_1ab2262bd:;
				++it;
				_1c4852b45_i++;
				goto _iter_begin_1ab2262bd;
			}
			_iter_end_1ab2262bd:;
		}
	}
	return _17213_aliases;
}



inline jule::Ptr<_1a58c88ee_SymbolTable> _1ac589d7d_find_file(jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>& _20819_files,jule::Ptr<_1aa07b982_File>& _20843_handler) {
	{
		auto &expr = _20819_files;
		auto it = expr.begin();
		_iter_begin_1ab26bd80:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1ab1a139c_fl = *it;
			{
				if (_1ab1a139c_fl.get()._field_file == _20843_handler) {
					return _1ab1a139c_fl;
				}
			}
			_iter_next_1ab26bd80:;
			++it;
			goto _iter_begin_1ab26bd80;
		}
		_iter_end_1ab26bd80:;
	}
	return nullptr;
}



inline void _1a58641a3_push_suggestion(_1c4810251_Log* _21731_log,jule::Str _21742_fmt,jule::Slice<jule::Any> _21755_args) {
	_21731_log->_field_suggestion=_1c4810938_logf(_21742_fmt,_21755_args);
}



inline jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>> _1a5891730_get_result_types(jule::Ptr<_1a5913e9a_TypeKind>& _2626_result) {
	{
		
		if ((_2626_result == nullptr)) {
			_case_begin_1ab21360c:;
			{
				return nullptr;
			}
		}
		else if ((_1a59185a9_tup(_2626_result.ptr()) == nullptr)) {
			_case_begin_1ab2164cd:;
			{
				return jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>({_2626_result});
			}
		}
		else {
			_case_begin_1ab1e4038:;
			{
				return _1a59185a9_tup(_2626_result.ptr()).get()._field_types;
			}
		}
		_match_end_1ab1e2553:;
	}
}



inline jule::Bool _1a589290c_trait_has_reference_receiver(jule::Ptr<_1ac44770d_Trait>& _3934_t) {
	{
		auto &expr = _3934_t.get()._field_methods;
		auto it = expr.begin();
		_iter_begin_1c48694b9:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> &_1ab24e9cd_f = *it;
			{
				if (_1ab24e9cd_f.get()._field_statically) {
					goto _iter_next_1c48694b9;
				}
				jule::Ptr<_1ab830300_Param> _4613_p = _1ab24e9cd_f.get()._field_params[0LL];
				if (_1ab830ed2_is_ref(_4613_p.ptr()) && _1ab830c07_is_self(_4613_p.ptr())) {
					return true;
				}
			}
			_iter_next_1c48694b9:;
			++it;
			goto _iter_begin_1c48694b9;
		}
		_iter_end_1c48694b9:;
	}
	return false;
}



inline jule::Bool _1a589766a_float_assignable(jule::Str _5421_kind,jule::Ptr<_1a58cee44_Data>& _5433_d) {
	jule::Str _559_value = _1abdcd33c_fmt_float(static_cast<jule::F64>(_1ac4d3c50_as_f64(_5433_d.get()._field_constant.ptr())),'g',-1LL,64LL);
	return _1ac554463_check_bit_float(_559_value,static_cast<jule::I64>(_1ac552cbe_bitsize_of(_5421_kind)));
}



inline jule::Bool _1a58a50c3_sig_assignable(jule::Str _5919_kind,jule::Ptr<_1a58cee44_Data>& _5931_d) {
	jule::F64 _609_min = _1ac5579e9_min(_5919_kind);
	jule::F64 _619_max = _1ac557d4b_max(_5919_kind);
	{
		
		if (_1ac4d5e72_is_f64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1ab34595e:;
			{
				jule::F64 _6413_x = _1ac4d33c0_read_f64(_5931_d.get()._field_constant.ptr());
				jule::F64 _6514_i;
				jule::F64 _6517_frac;
				std::tie(_6514_i,_6517_frac) = _1ac382a33_modf(_6413_x);
				if ((_6517_frac != 0LL)) {
					return false;
				}
				return (_6514_i >= _609_min) && (_6514_i <= _619_max);
			}
		}
		else if (_1ac4d55e2_is_u64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1ab34d57c:;
			{
				jule::F64 _7113_x = _1ac4d3c50_as_f64(_5931_d.get()._field_constant.ptr());
				if (_7113_x <= _619_max) {
					return true;
				}
			}
		}
		else if (_1ac4d5317_is_i64(_5931_d.get()._field_constant.ptr())) {
			_case_begin_1ab357e27:;
			{
				jule::F64 _7613_x = _1ac4d3c50_as_f64(_5931_d.get()._field_constant.ptr());
				return (_609_min <= _7613_x) && (_7613_x <= _619_max);
			}
		}
		_match_end_1ab34d69d:;
	}
	return false;
}



inline jule::Bool _1a58b527b_unsig_assignable(jule::Str _8221_kind,jule::Ptr<_1a58cee44_Data>& _8233_d) {
	jule::F64 _839_max = _1ac557d4b_max(_8221_kind);
	if (_8233_d.get()._field_is_rune && (_8221_kind == jule::Str("u8", 2))) {
		return _1a5890c5c_is_ascii(static_cast<jule::I32>(static_cast<jule::I32>(_1ac4d2765_read_i64(_8233_d.get()._field_constant.ptr()))));
	}
	{
		
		if (_1ac4d5e72_is_f64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1c4883967:;
			{
				jule::F64 _9013_x = _1ac4d33c0_read_f64(_8233_d.get()._field_constant.ptr());
				if ((_9013_x < 0LL)) {
					return false;
				}
				jule::F64 _9414_i;
				jule::F64 _9417_frac;
				std::tie(_9414_i,_9417_frac) = _1ac382a33_modf(_9013_x);
				if ((_9417_frac != 0LL)) {
					return false;
				}
				return _9414_i <= _839_max;
			}
		}
		else if (_1ac4d55e2_is_u64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1c48890ee:;
			{
				jule::F64 _10013_x = _1ac4d3c50_as_f64(_8233_d.get()._field_constant.ptr());
				if (_10013_x <= _839_max) {
					return true;
				}
			}
		}
		else if (_1ac4d5317_is_i64(_8233_d.get()._field_constant.ptr())) {
			_case_begin_1c4899e34:;
			{
				jule::F64 _10513_x = _1ac4d3c50_as_f64(_8233_d.get()._field_constant.ptr());
				return (0LL <= _10513_x) && (_10513_x <= _839_max);
			}
		}
		_match_end_1c4875382:;
	}
	return false;
}



inline jule::Bool _1a58b5600_int_assignable(jule::Str _11119_kind,jule::Ptr<_1a58cee44_Data>& _11131_d) {
	{
		
		if (_1ac55da66_is_sig_int(_11119_kind)) {
			_case_begin_1c498e138:;
			{
				return _1a58a50c3_sig_assignable(_11119_kind,_11131_d);
			}
		}
		else if (_1ac55ddb8_is_unsig_int(_11119_kind)) {
			_case_begin_1c496e602:;
			{
				return _1a58b527b_unsig_assignable(_11119_kind,_11131_d);
			}
		}
		else {
			_case_begin_1c49855a2:;
			{
				return false;
			}
		}
		_match_end_1c496e15c:;
	}
}



inline jule::Ptr<_1dd583043_Directive> _1a590c636_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _419324_directives,jule::Str _419366_d) {
	{
		auto &expr = _419324_directives;
		auto it = expr.begin();
		_iter_begin_1c4935dd2:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1ab46509a_dr = *it;
			{
				if (_1ab46509a_dr.get()._field_tag._field_kind == _419366_d) {
					return _1ab46509a_dr;
				}
			}
			_iter_next_1c4935dd2:;
			++it;
			goto _iter_begin_1c4935dd2;
		}
		_iter_end_1c4935dd2:;
	}
	return nullptr;
}



inline jule::Any _1a590ca65_find_builtins_import(jule::Str _420225_ident,jule::Ptr<_1ac580d41_ImportInfo> _420237_imp) {
	return _1a595a94d_find_package_builtin_def(_420237_imp.get()._field_link_path,_420225_ident);
}



inline void _1a590ccda_fit_bitsize(jule::Ptr<_1a58cee44_Data>& _420921_d) {
	jule::Ptr<_1a591970e_Prim> _421013_prim = _1a591673e_prim(_420921_d.get()._field_kind.ptr());
	jule::I64 _42119_z = _1ac552cbe_bitsize_of(_1a5919cd6_to_str(_421013_prim.ptr()));
	if ((_42119_z == 64LL)) {
		return;
	}
	jule::I64 _421613_k = 0LL;
	{
		
		if (_1ac4d5317_is_i64(_420921_d.get()._field_constant.ptr())) {
			_case_begin_1ab1aca5c:;
			{
				_421613_k=static_cast<jule::I64>(_1ac554a7e_bitsize_of_int(static_cast<jule::I64>(_1ac4d2765_read_i64(_420921_d.get()._field_constant.ptr()))));
				if (_421613_k > _42119_z) {
					_421013_prim.get()._field_kind=_1ac5530ee_int_from_bits(_421613_k);
				}
			}
		}
		else if (_1ac4d55e2_is_u64(_420921_d.get()._field_constant.ptr())) {
			_case_begin_1ab1acac3:;
			{
				_421613_k=static_cast<jule::I64>(_1ac554d8c_bitsize_of_uint(static_cast<jule::U64>(_1ac4d2a40_read_u64(_420921_d.get()._field_constant.ptr()))));
				if (_421613_k > _42119_z) {
					_421013_prim.get()._field_kind=_1ac55340c_uint_from_bits(_421613_k);
				}
			}
		}
		else if (_1ac4d5e72_is_f64(_420921_d.get()._field_constant.ptr())) {
			_case_begin_1ab1baae2:;
			{
				_421613_k=static_cast<jule::I64>(_1ac554771_bitsize_of_float(static_cast<jule::F64>(_1ac4d33c0_read_f64(_420921_d.get()._field_constant.ptr()))));
				if (_421613_k > _42119_z) {
					_421013_prim.get()._field_kind=_1ac55371a_float_from_bits(_421613_k);
				}
			}
		}
		_match_end_1ab1a4724:;
	}
}



inline void _1a590d181_make_struct_lit_alloc(jule::Ptr<_1a58cee44_Data>& _423631_d,jule::Ptr<_1ab818508_StructLitExprModel>& _423646_lit) {
	_423631_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591d768_Sptr>(_1a591d768_Sptr(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_423646_lit.get()._field_strct, 0))))), 6)));
	_423631_d.get()._field_model=jule::Any(jule::new_ptr<_1ab818ae1_AllocStructLitExprModel>(_1ab818ae1_AllocStructLitExprModel(_423646_lit)));
}



inline jule::Ptr<_1a588601b_Var> _1a590d56b_build_error_var(jule::Ptr<_1ac56022c_Scope>& _424725_s,jule::Ptr<_1aa091bc8_FnCallExpr>& _424741_fc) {
	return jule::new_ptr<_1a588601b_Var>(_1a588601b_Var(_424725_s,_424741_fc.get()._field_token,jule::Str("error", 5),jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),false,jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("any", 3)), 5))))),jule::new_ptr<_1a58d1451_Value>(_1a58d1451_Value(jule::Ptr<_1aa08d334_Expr>(),jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data()))),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Slice<jule::Ptr<_1dd583043_Directive>>(),jule::Ptr<_1a5884a0e_IterRelation>(),jule::Slice<jule::Ptr<_1a588601b_Var>>()));
}



inline jule::Any _1a590d956_find_builtins_sema(jule::Str _426623_ident,jule::Ptr<_1a5864747_Sema> _426639_s) {
	{
		auto &expr = _426639_s.get()._field_file.get()._field_imports;
		auto it = expr.begin();
		_iter_begin_1c496e8cc:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1c48e4401_imp = *it;
			{
				if (_1c48e4401_imp.get()._field_import_all || _1ac583daa_exist_ident(_1c48e4401_imp.ptr(), _426623_ident)) {
					jule::Any _426921_def = _1a590ca65_find_builtins_import(_426623_ident,_1c48e4401_imp);
					if (_426921_def != jule::Any(jule::Any(nullptr))) {
						return _426921_def;
					}
				}
			}
			_iter_next_1c496e8cc:;
			++it;
			goto _iter_begin_1c496e8cc;
		}
		_iter_end_1c496e8cc:;
	}
	jule::Str _427713_ppath = _1aa07c6ec_dir(_426639_s.get()._field_file.get()._field_file.ptr());
	if (_1c471294a_has_prefix(_427713_ppath,_1c4820a47_PATH_STDLIB)) {
		(_427713_ppath).mut_slice(_1c4820a47_PATH_STDLIB.len());
		_427713_ppath=jule::Str("std", 3) + _1c478502d_replace(_427713_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
		return _1a595a94d_find_package_builtin_def(_427713_ppath,_426623_ident);
	}
	return jule::Any(nullptr);
}



inline jule::Bool _1a590dc64_is_ok_for_shifting(jule::Ptr<_1a58cee44_Data>& _429128_d) {
	if (_1a58d0b48_is_const(_429128_d.ptr())) {
		{
			
			if (_1ac4d5317_is_i64(_429128_d.get()._field_constant.ptr())) {
				_case_begin_1c48ba394:;
				{
					return (_1ac4d2765_read_i64(_429128_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else if (_1ac4d55e2_is_u64(_429128_d.get()._field_constant.ptr())) {
				_case_begin_1c48ba2a6:;
				{
					return true;
				}
			}
			else if (_1ac4d5e72_is_f64(_429128_d.get()._field_constant.ptr())) {
				_case_begin_1c48ae7d9:;
				{
					return (_1ac4d33c0_read_f64(_429128_d.get()._field_constant.ptr()) >= 0LL);
				}
			}
			else {
				_case_begin_1c489302b:;
				{
					return false;
				}
			}
			_match_end_1ab35d8de:;
		}
	}
	jule::Ptr<_1a591970e_Prim> _43049_prim = _1a591673e_prim(_429128_d.get()._field_kind.ptr());
	return (_43049_prim != nullptr) && _1ac55e1c6_is_int(_1a5919cd6_to_str(_43049_prim.ptr()));
}



inline jule::Bool _1a590e10a_is_instanced_struct(jule::Ptr<_1ab814515_StructIns> _430824_s) {
	return _430824_s.get()._field_decl.get()._field_generics.len() == static_cast<jule::I64>(static_cast<jule::I64>(_430824_s.get()._field_generics.len()));
}



inline jule::Bool _1a590e47e_is_ptr_arithmetic_compatible_int(jule::Ptr<_1a58cee44_Data>& _431242_d) {
	if (_1a58d0b48_is_const(_431242_d.ptr())) {
		return _1a58b5600_int_assignable(jule::Str("int", 3),_431242_d);
	}
	_1a58b5c2c_TypeCompatibilityChecker _431613_tcc = _1a58b5c2c_TypeCompatibilityChecker(jule::Ptr<_1a5864747_Sema>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),_431242_d.get()._field_kind,_1aa07563a_Token());
	return _1a58b7129_check(&_431613_tcc);
}



inline void _1a590e6c1_apply_cast_kind_model(jule::Ptr<_1a58cee44_Data>& _432531_d) {
	_432531_d.get()._field_model=jule::Any(jule::new_ptr<_1ab81941b_CastingExprModel>(_1ab81941b_CastingExprModel(_1aa07563a_Token(),_432531_d.get()._field_model,_432531_d.get()._field_cast_kind,_432531_d.get()._field_kind)));
}



inline void _1a590e946_apply_cast_kind(jule::Ptr<_1a58cee44_Data>& _433325_d) {
	if ((_433325_d.get()._field_cast_kind == nullptr)) {
		return;
	}
	_1a590e6c1_apply_cast_kind_model(_433325_d);
	_433325_d.get()._field_kind=_433325_d.get()._field_cast_kind;
	_433325_d.get()._field_cast_kind=nullptr;
}



inline jule::Ptr<_1a58cee44_Data> _1a590eb77_build_void_data(void) {
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("void", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Any(),false,jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Str _1a590eec9_check_data_for_integer_indexing(jule::Ptr<_1a58cee44_Data>& _435441_d) {
	jule::Str _435453_err_fmt = jule::Str();
	if ((_435441_d == nullptr)) {
		_435453_err_fmt = jule::Str();
		return _435453_err_fmt;
	}
	{
		
		if ((_1a591673e_prim(_435441_d.get()._field_kind.ptr()) == nullptr)) {
			_case_begin_1c49887a3:;
			{
				_435453_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435453_err_fmt;
			}
		}
		else if ((!(_1ac55e1c6_is_int(_1a5919cd6_to_str(_1a591673e_prim(_435441_d.get()._field_kind.ptr()).ptr()))))) {
			_case_begin_1c4949a83:;
			{
				_435453_err_fmt = jule::Str("type @ is invalid for indexing", 30);
				return _435453_err_fmt;
			}
		}
		else if (_1a58d0b48_is_const(_435441_d.ptr())) {
			_case_begin_1c4949ae9:;
			{
				if ((_1ac4d3c50_as_f64(_435441_d.get()._field_constant.ptr()) < 0LL)) {
					_435453_err_fmt = jule::Str("overflow the limit of data-type", 31);
					return _435453_err_fmt;
				}
			}
		}
		else if ((_1a591673e_prim(_435441_d.get()._field_kind.ptr()) == nullptr) || _1a58d0b48_is_const(_435441_d.ptr()) || _1ac552a27_real_kind_of(_1a5919cd6_to_str(_1a591673e_prim(_435441_d.get()._field_kind.ptr()).ptr())) != _1ac552a27_real_kind_of(jule::Str("int", 3))) {
			_case_begin_1c4949b60:;
			{
				_435441_d.get()._field_cast_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5)));
				_1a590e946_apply_cast_kind(_435441_d);
			}
		}
		_match_end_1c4988891:;
	}
	_435453_err_fmt = jule::Str();
	return _435453_err_fmt;
}



inline void _1a591035e_apply_cast_model_by_enum(jule::Ptr<_1a58cee44_Data>& _438034_d,jule::Ptr<_1ac44a337_Enum> _438048_e) {
	if ((_438048_e == nullptr)) {
		return;
	}
	jule::Ptr<_1a591970e_Prim> _43849_p = _1a591673e_prim(_438048_e.get()._field_kind.get()._field_kind.ptr());
	if (_1a591d13b_is_str(_43849_p.ptr())) {
		return;
	}
	_438034_d.get()._field_cast_kind=_438048_e.get()._field_kind.get()._field_kind;
	_1a590e6c1_apply_cast_kind_model(_438034_d);
	_438034_d.get()._field_cast_kind=nullptr;
}



inline void _1a59106a0_cast_const_by_type(jule::Str& _439324_t,jule::Ptr<_1a58cee44_Data>& _439337_d) {
	{
		
		if (_1ac55da66_is_sig_int(_439324_t)) {
			_case_begin_1ab597760:;
			{
				{
					auto _match_expr{ _1ac552cbe_bitsize_of(_1ac552a27_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab597c9e:;
						{
							_1ac4d406e_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(_1ac4d369a_as_i64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab598695:;
						{
							_1ac4d406e_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ac4d369a_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ab59870b:;
						{
							_1ac4d406e_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ac4d369a_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ab598772:;
						{
							_1ac4d406e_set_i64(_439337_d.get()._field_constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ac4d369a_as_i64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab598200:;
				}
			}
		}
		else if (_1ac55ddb8_is_unsig_int(_439324_t)) {
			_case_begin_1ab5977d7:;
			{
				{
					auto _match_expr{ _1ac552cbe_bitsize_of(_1ac552a27_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab59c9b8:;
						{
							_1ac4d438d_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(_1ac4d3975_as_u64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab59ca2e:;
						{
							_1ac4d438d_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ac4d3975_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 16LL) {
						_case_begin_1ab59ca95:;
						{
							_1ac4d438d_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ac4d3975_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					else if (_match_expr == 8LL) {
						_case_begin_1ab59cb0b:;
						{
							_1ac4d438d_set_u64(_439337_d.get()._field_constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ac4d3975_as_u64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab597ebe:;
				}
			}
		}
		else if (_1ac55e528_is_float(_439324_t)) {
			_case_begin_1ab59785e:;
			{
				{
					auto _match_expr{ _1ac552cbe_bitsize_of(_1ac552a27_real_kind_of(_439324_t)) };
					
					if (_match_expr == 64LL) {
						_case_begin_1ab5a1c75:;
						{
							_1ac4d4cea_set_f64(_439337_d.get()._field_constant.ptr(), static_cast<jule::F64>(_1ac4d3c50_as_f64(_439337_d.get()._field_constant.ptr())));
						}
					}
					else if (_match_expr == 32LL) {
						_case_begin_1ab5a1dc9:;
						{
							_1ac4d4cea_set_f64(_439337_d.get()._field_constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ac4d3c50_as_f64(_439337_d.get()._field_constant.ptr())))));
						}
					}
					_match_end_1ab598c06:;
				}
			}
		}
		_match_end_1ab597661:;
	}
}



inline jule::Bool _1a5912130_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _3323_directives,jule::Str _3354_tag) {
	{
		auto &expr = _3323_directives;
		auto it = expr.begin();
		_iter_begin_1ab5a311c:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1ab5a21a4_dr = *it;
			{
				if (_1ab5a21a4_dr.get()._field_tag._field_kind == _3354_tag) {
					return true;
				}
			}
			_iter_next_1ab5a311c:;
			++it;
			goto _iter_begin_1ab5a311c;
		}
		_iter_end_1ab5a311c:;
	}
	return false;
}



inline jule::Bool _1a59242eb_can_get_ptr(jule::Ptr<_1a58cee44_Data>& _55321_d) {
	if ((!(_55321_d.get()._field_lvalue)) || _1a58d0b48_is_const(_55321_d.ptr())) {
		return false;
	}
	{
		
		if ((_1a591794e_fnc(_55321_d.get()._field_kind.ptr()) != nullptr) || (_1a59170be_enm(_55321_d.get()._field_kind.ptr()) != nullptr)) {
			_case_begin_1ab5a5828:;
			{
				return false;
			}
		}
		else {
			_case_begin_1ab5a5251:;
			{
				return true;
			}
		}
		_match_end_1ab5a51eb:;
	}
}



inline jule::Bool _1a5924609_is_valid_for_sptr_type(jule::Ptr<_1a5913e9a_TypeKind>& _56832_t) {
	jule::Ptr<_1ab814515_StructIns> _56913_s = _1a5917c29_strct(_56832_t.ptr());
	if (((_56913_s != nullptr) && (_56913_s.get()._field_decl != nullptr)) && _56913_s.get()._field_decl.get()._field_cpp_linked) {
		return false;
	}
	return true;
}



inline jule::Bool _1a592495b_is_valid_for_ref(jule::Ptr<_1a5913e9a_TypeKind>& _57726_t) {
	return (_1a591794e_fnc(_57726_t.ptr()) == nullptr);
}



inline jule::Bool _1a5924cad_is_builtin_str_convertable(jule::Ptr<_1a5913e9a_TypeKind>& _58036_t) {
	return ((!(_1a591552e_void(_58036_t.ptr()))) && (_1a591794e_fnc(_58036_t.ptr()) == nullptr)) && (_1a59185a9_tup(_58036_t.ptr()) == nullptr);
}



inline jule::Str _1a59250ee_build_link_path_by_tokens(jule::Slice<_1aa07563a_Token>& _58431_tokens) {
	jule::Str _58513_s = _58431_tokens[0LL]._field_kind;
	{
		auto expr = _58431_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ab5aa1bd:;
		if (it != expr.end()) {
			_1aa07563a_Token &_1ab5aa443_token = *it;
			{
				_58513_s+=jule::Str("::", 2);
				_58513_s+=_1ab5aa443_token._field_kind;
			}
			_iter_next_1ab5aa1bd:;
			++it;
			goto _iter_begin_1ab5aa1bd;
		}
		_iter_end_1ab5aa1bd:;
	}
	return _58513_s;
}



inline jule::Ptr<_1a591970e_Prim> _1a59253eb_build_prim_type(jule::Str _59320_kind) {
	return jule::new_ptr<_1a591970e_Prim>(_1a591970e_Prim(_59320_kind));
}



inline jule::Ptr<_1ab810b3d_Struct> _1a5925792_get_struct_from_kind(jule::Ptr<_1a5913e9a_TypeKind> _59929_k) {
	{
		
		if ((_59929_k == nullptr)) {
			_case_begin_1ab5abb1a:;
			{
				return nullptr;
			}
		}
		else if ((_1a5917c29_strct(_59929_k.ptr()) != nullptr)) {
			_case_begin_1ab5abb81:;
			{
				return _1a5917c29_strct(_59929_k.ptr()).get()._field_decl;
			}
		}
		else if ((_1a5916a19_sptr(_59929_k.ptr()) != nullptr)) {
			_case_begin_1ab5ab873:;
			{
				return _1a5925792_get_struct_from_kind(_1a5916a19_sptr(_59929_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a5917674_slc(_59929_k.ptr()) != nullptr)) {
			_case_begin_1ab5ab8d9:;
			{
				return _1a5925792_get_struct_from_kind(_1a5917674_slc(_59929_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a5917399_arr(_59929_k.ptr()) != nullptr)) {
			_case_begin_1ab5ab950:;
			{
				return _1a5925792_get_struct_from_kind(_1a5917399_arr(_59929_k.ptr()).get()._field_elem);
			}
		}
		else if ((_1a5916ce4_ptr(_59929_k.ptr()) != nullptr)) {
			_case_begin_1ab5ab488:;
			{
				return nullptr;
			}
		}
		else {
			_case_begin_1ab5ab3cd:;
			{
				return nullptr;
			}
		}
		_match_end_1ab5ab103:;
	}
}



inline jule::Bool _1a5925aa0_is_prim(jule::Str _62812_kind) {
	return (((((((((((((((_62812_kind == jule::Str("i8", 2)) || (_62812_kind == jule::Str("i16", 3))) || (_62812_kind == jule::Str("i32", 3))) || (_62812_kind == jule::Str("i64", 3))) || (_62812_kind == jule::Str("u8", 2))) || (_62812_kind == jule::Str("u16", 3))) || (_62812_kind == jule::Str("u32", 3))) || (_62812_kind == jule::Str("u64", 3))) || (_62812_kind == jule::Str("f32", 3))) || (_62812_kind == jule::Str("f64", 3))) || (_62812_kind == jule::Str("int", 3))) || (_62812_kind == jule::Str("uint", 4))) || (_62812_kind == jule::Str("uintptr", 7))) || (_62812_kind == jule::Str("bool", 4))) || (_62812_kind == jule::Str("str", 3))) || (_62812_kind == jule::Str("any", 3));
}



inline void _1a59307ad_apply_implicit_cast(jule::Ptr<_1a5913e9a_TypeKind>& _151229_dest,jule::Ptr<_1a58cee44_Data>& _151251_d) {
	if (_1a5915254_is_nil(_151251_d.get()._field_kind.ptr())) {
		return;
	}
	if ((_1a5918004_trt(_151229_dest.ptr()) != nullptr) && (_1a5918004_trt(_151251_d.get()._field_kind.ptr()) == nullptr)) {
		_151251_d.get()._field_cast_kind=_151229_dest;
		_1a590e6c1_apply_cast_kind_model(_151251_d);
		_151251_d.get()._field_cast_kind=nullptr;
	}
}



inline std::tuple<jule::Ptr<_1a58c88ee_SymbolTable>,jule::Slice<_1c4810251_Log>> _1a5933d44_build_symbols(jule::Ptr<_1dd582707_Ast>& _1523_ast,jule::Trait<_1ac57d25b_Importer>& _1539_importer,jule::Ptr<_1ab840d16_SymbolBuilder> _1563_owner) {
	jule::Ptr<_1ab840d16_SymbolBuilder> _1613_sb = jule::new_ptr<_1ab840d16_SymbolBuilder>(_1ab840d16_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_1c4810251_Log>(),_1523_ast,jule::Ptr<_1a58c88ee_SymbolTable>()));
	_1ab847317_build(_1613_sb);
	if ((_1613_sb.get()._field_errors.len() == 0LL)) {
		return std::make_tuple(_1613_sb.get()._field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb.get()._field_errors);
}



inline std::tuple<jule::Ptr<_1ac58451a_Package>,jule::Slice<_1c4810251_Log>> _1a5934350___analyze_package(jule::Slice<jule::Ptr<_1dd582707_Ast>>& _2927_files,jule::Trait<_1ac57d25b_Importer>& _2947_importer,jule::I64& _2968_flags) {
	jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto &expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_1ab5b93db:;
		if (it != expr.end()) {
			jule::Ptr<_1dd582707_Ast> _1ab5b9012_f = *it;
			{
				jule::Ptr<_1a58c88ee_SymbolTable> _3318_table;
				jule::Slice<_1c4810251_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1a5933d44_build_symbols(_1ab5b9012_f,_2947_importer,nullptr);
				if ((_3329_errors.len() > 0LL)) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables = jule::alloc_for_append(_3113_tables,1);_3113_tables.__push(_3318_table);
			}
			_iter_next_1ab5b93db:;
			++it;
			goto _iter_begin_1ab5b93db;
		}
		_iter_end_1ab5b93db:;
	}
	jule::Ptr<_1a5864747_Sema> _4013_sema = jule::new_ptr<_1a5864747_Sema>(_1a5864747_Sema(jule::Slice<_1c4810251_Log>(),jule::Slice<jule::Ptr<_1a58c88ee_SymbolTable>>(),jule::Ptr<_1a58c88ee_SymbolTable>(),_2968_flags));
	_1a588216b_check(_4013_sema, _3113_tables);
	if ((_4013_sema.get()._field_errors.len() > 0LL)) {
		return std::make_tuple(nullptr,_4013_sema.get()._field_errors);
	}
	jule::Ptr<_1ac58451a_Package> _4813_pkg = jule::new_ptr<_1ac58451a_Package>(_1ac58451a_Package(_4013_sema.get()._field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



inline std::tuple<jule::Ptr<_1ac58451a_Package>,jule::Slice<_1c4810251_Log>> _1a5934817_analyze_package(jule::Slice<jule::Ptr<_1dd582707_Ast>> _7228_files,jule::Trait<_1ac57d25b_Importer> _7247_importer,jule::I64 _7267_flags) {
	if ((_7228_files.len() == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_1ac58451a_Package> _7714_package;
	jule::Slice<_1c4810251_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1a5934350___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



inline jule::Ptr<_1ab836218_FnIns> _1a5939267_find_builtin_fn(jule::Str _2120_ident) {
	{
		auto &_match_expr{ _2120_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ab5c2911:;
			{
				static jule::Ptr<_1ab836218_FnIns> _2420_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a59763b4_builtin_caller_out),jule::Bool()));
				return _2420_f;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ab5c2977:;
			{
				static jule::Ptr<_1ab836218_FnIns> _2720_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5976529_builtin_caller_outln),jule::Bool()));
				return _2720_f;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ab5c2669:;
			{
				static jule::Ptr<_1ab836218_FnIns> _3020_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5935b48_builtin_caller_new),jule::Bool()));
				return _3020_f;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ab5c26d0:;
			{
				static jule::Ptr<_1ab836218_FnIns> _3320_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5935cad_builtin_caller_panic),jule::Bool()));
				return _3320_f;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ab5c2746:;
			{
				static jule::Ptr<_1ab836218_FnIns> _3620_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a597742b_builtin_caller_make),jule::Bool()));
				return _3620_f;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ab5c2427:;
			{
				static jule::Ptr<_1ab836218_FnIns> _3920_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5977591_builtin_caller_append),jule::Bool()));
				return _3920_f;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ab5c248d:;
			{
				static jule::Ptr<_1ab836218_FnIns> _4220_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5977706_builtin_caller_copy),jule::Bool()));
				return _4220_f;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ab5c2504:;
			{
				static jule::Ptr<_1ab836218_FnIns> _4520_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a597786b_builtin_caller_clone),jule::Bool()));
				return _4520_f;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ab5c256a:;
			{
				static jule::Ptr<_1ab836218_FnIns> _4820_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599a0a8_builtin_caller_assert),jule::Bool()));
				return _4820_f;
			}
		}
		else {
			_case_begin_1ab5c1d94:;
			{
				return nullptr;
			}
		}
		_match_end_1ab5c21d5:;
	}
}



inline jule::Ptr<_1a5912d12_TypeAlias> _1a595be9e_find_builtin_type_alias(jule::Str _5528_ident) {
	{
		auto &_match_expr{ _5528_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ab5c81db:;
			{
				static jule::Ptr<_1a5912d12_TypeAlias> _5820_t = jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1aa07563a_Token(),jule::Str(),jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("u8", 2)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>()));
				return _5820_t;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ab5c82a7:;
			{
				static jule::Ptr<_1a5912d12_TypeAlias> _6820_t = jule::new_ptr<_1a5912d12_TypeAlias>(_1a5912d12_TypeAlias(jule::Ptr<_1aa09632b_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_1aa07563a_Token(),jule::Str(),jule::new_ptr<_1a5918a0a_TypeSymbol>(_1a5918a0a_TypeSymbol(jule::Ptr<_1dd583461_TypeDecl>(),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("i32", 3)), 5))))),jule::Slice<jule::Any>(),jule::Slice<jule::Ptr<_1a5912d12_TypeAlias>>()));
				return _6820_t;
			}
		}
		else {
			_case_begin_1ab5c7c35:;
			{
				return nullptr;
			}
		}
		_match_end_1ab5c7dde:;
	}
}



inline jule::Ptr<_1ac44770d_Trait> _1a598764a_find_builtin_trait(jule::Str _8223_ident) {
	return nullptr;
}



inline jule::Any _1a593bea1_find_builtin_def(jule::Str _8621_ident) {
	jule::Ptr<_1ab836218_FnIns> _8713_f = _1a5939267_find_builtin_fn(_8621_ident);
	if ((_8713_f != nullptr)) {
		return jule::Any(_8713_f);
	}
	jule::Ptr<_1a5912d12_TypeAlias> _9213_ta = _1a595be9e_find_builtin_type_alias(_8621_ident);
	if ((_9213_ta != nullptr)) {
		return jule::Any(_9213_ta);
	}
	jule::Ptr<_1ac44770d_Trait> _9713_t = _1a598764a_find_builtin_trait(_8621_ident);
	if ((_9713_t != nullptr)) {
		return jule::Any(_9713_t);
	}
	return jule::Any(nullptr);
}



inline jule::Any _1a593ccb5_find_builtin_def_std_debug(jule::Str _10531_ident) {
	{
		auto &_match_expr{ _10531_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ab5ccb4c:;
			{
				static jule::Ptr<_1ab836218_FnIns> _10820_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599c099_builtin_caller_std_debug_out),jule::Bool()));
				return jule::Any(_10820_f);
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ab5cc9a4:;
			{
				static jule::Ptr<_1ab836218_FnIns> _11120_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599c594_builtin_caller_std_debug_outln),jule::Bool()));
				return jule::Any(_11120_f);
			}
		}
		else {
			_case_begin_1ab5cc575:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab5cb002:;
	}
}



inline jule::Any _1a593dac9_find_builtin_def_std_mem(jule::Str _11829_ident) {
	{
		auto &_match_expr{ _11829_ident };
		
		if (_match_expr == jule::Str("size_of", 7)) {
			_case_begin_1ab5ce643:;
			{
				static jule::Ptr<_1ab836218_FnIns> _12120_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599a5b4_builtin_caller_std_mem_size_of),jule::Bool()));
				return jule::Any(_12120_f);
			}
		}
		else if (_match_expr == jule::Str("align_of", 8)) {
			_case_begin_1ab5ce6a9:;
			{
				static jule::Ptr<_1ab836218_FnIns> _12420_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599aaae_builtin_caller_std_mem_align_of),jule::Bool()));
				return jule::Any(_12420_f);
			}
		}
		else if (_match_expr == jule::Str("free", 4)) {
			_case_begin_1ab5ce49a:;
			{
				static jule::Ptr<_1ab836218_FnIns> _12720_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599b0a9_builtin_caller_std_mem_free),jule::Bool()));
				return jule::Any(_12720_f);
			}
		}
		else {
			_case_begin_1ab5cda93:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab5ce3ac:;
	}
}



inline jule::Any _1a59410a4_find_builtin_def_std_jule_integrated(jule::Str _13441_ident) {
	{
		auto &_match_expr{ _13441_ident };
		
		if (_match_expr == jule::Str("to_str", 6)) {
			_case_begin_1ab5d1c50:;
			{
				static jule::Ptr<_1ab836218_FnIns> _13720_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599b5c6_builtin_caller_std_jule_integrated_to_str),jule::Bool()));
				return jule::Any(_13720_f);
			}
		}
		else if (_match_expr == jule::Str("emit", 4)) {
			_case_begin_1ab5d1aa7:;
			{
				static jule::Ptr<_1ab836218_FnIns> _14020_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>(),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a599bac1_builtin_caller_std_jule_integrated_emit),jule::Bool()));
				return jule::Any(_14020_f);
			}
		}
		else {
			_case_begin_1ab5ce511:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab5d1821:;
	}
}



inline jule::Any _1a595a94d_find_package_builtin_def(jule::Str _14729_link_path,jule::Str _14745_ident) {
	{
		auto &_match_expr{ _14729_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ab5d3801:;
			{
				return _1a593ccb5_find_builtin_def_std_debug(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ab5d3867:;
			{
				return _1a593dac9_find_builtin_def_std_mem(_14745_ident);
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ab5d3658:;
			{
				return _1a59410a4_find_builtin_def_std_jule_integrated(_14745_ident);
			}
		}
		else {
			_case_begin_1ab5d3119:;
			{
				return jule::Any(nullptr);
			}
		}
		_match_end_1ab5d30b4:;
	}
}



inline jule::Ptr<_1a58cee44_Data> _1a5960766_builtin_caller_common_plain(jule::Ptr<_1a58d2397_Eval>& _16037_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _16052_fc,jule::Ptr<_1a58cee44_Data>& _16074_d) {
	jule::Ptr<_1ab836218_FnIns> _16113_f = _1a591794e_fnc(_16074_d.get()._field_kind.ptr());
	_1a58bd0b9_FnCallArgChecker _16313_fcac = _1a58bd0b9_FnCallArgChecker(_16037_e,_16052_fc.get()._field_args,_16052_fc.get()._field_token,_16113_f,false,jule::Slice<jule::Any>());
	if ((!(_1a58c0dbe_check(&_16313_fcac)))) {
		return nullptr;
	}
	jule::Ptr<_1ab81a0ed_FnCallExprModel> _17413_model = jule::new_ptr<_1ab81a0ed_FnCallExprModel>(_1ab81a0ed_FnCallExprModel(_16052_fc.get()._field_token,_16113_f,jule::Bool(),_16074_d.get()._field_model,_16313_fcac._field_arg_models,jule::Ptr<_1ac56022c_Scope>(),jule::Bool()));
	if ((_16113_f.get()._field_result == nullptr)) {
		_16074_d=_1a590eb77_build_void_data();
	} else {
		_16074_d=jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(_16113_f.get()._field_result,jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
	}
	_16074_d.get()._field_model=jule::Any(_17413_model);
	return _16074_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5938101_builtin_caller_common(jule::Ptr<_1a58d2397_Eval>& _19331_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _19346_fc,jule::Ptr<_1a58cee44_Data>& _19368_d) {
	if ((_19346_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_19331_e.ptr(), _19346_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	return _1a5960766_builtin_caller_common_plain(_19331_e,_19346_fc,_19368_d);
}



inline jule::Ptr<_1a58cee44_Data> _1a5936000_builtin_caller_common_mut(jule::Ptr<_1a58d2397_Eval>& _20135_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _20150_fc,jule::Ptr<_1a58cee44_Data>& _20172_d) {
	if ((!(_20172_d.get()._field_mutable))) {
		_1a58d2b7d_push_err(_20135_e.ptr(), _20150_fc.get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	return _1a5938101_builtin_caller_common(_20135_e,_20150_fc,_20172_d);
}



inline jule::Ptr<_1a58cee44_Data> _1a5936165_builtin_caller_error(jule::Ptr<_1a58d2397_Eval>& _20830_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _20845_fc) {
	if ((_20845_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_20845_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_20830_e.ptr(), _20845_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("err", 3))}));
		return nullptr;
	}
	if ((_20845_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _21913_expr = _1a5902c03_eval_expr(_20830_e, _20845_fc.get()._field_args[0LL]);
	if ((_21913_expr == nullptr)) {
		return nullptr;
	}
	if (_1a58d0593_is_nil(_21913_expr.ptr())) {
		_1a58d2b7d_push_err(_20830_e.ptr(), _20845_fc.get()._field_args[0LL].get()._field_token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _22813_d = _1a590eb77_build_void_data();
	_22813_d.get()._field_model=jule::Any(jule::new_ptr<_1ab82a5e7_BuiltinErrorCallExprModel>(_1ab82a5e7_BuiltinErrorCallExprModel(jule::Ptr<_1ab836218_FnIns>(),_21913_expr.get()._field_model)));
	return _22813_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a59763b4_builtin_caller_out(jule::Ptr<_1a58d2397_Eval>& _23628_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _23643_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_23643_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_23643_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_23628_e.ptr(), _23643_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if ((_23643_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _24813_expr = _1a5902c03_eval_expr(_23628_e, _23643_fc.get()._field_args[0LL]);
	if ((_24813_expr == nullptr)) {
		return nullptr;
	}
	if ((!(_1a5924cad_is_builtin_str_convertable(_24813_expr.get()._field_kind)))) {
		_1a58d2b7d_push_err(_23628_e.ptr(), _23643_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _25813_d = _1a590eb77_build_void_data();
	_25813_d.get()._field_model=jule::Any(jule::new_ptr<_1ab821c81_BuiltinOutCallExprModel>(_1ab821c81_BuiltinOutCallExprModel(_24813_expr.get()._field_model,jule::Bool())));
	return _25813_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5976529_builtin_caller_outln(jule::Ptr<_1a58d2397_Eval>& _26330_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _26345_fc,jule::Ptr<_1a58cee44_Data>& _26367_d) {
	_26367_d=_1a59763b4_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if ((_26367_d == nullptr)) {
		return nullptr;
	}
	_26367_d.get()._field_model=jule::Any(jule::new_ptr<_1ab822446_BuiltinOutlnCallExprModel>(_1ab822446_BuiltinOutlnCallExprModel(_26367_d.get()._field_model.operator jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>().get()._field_expr,jule::Bool())));
	return _26367_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5935b48_builtin_caller_new(jule::Ptr<_1a58d2397_Eval>& _27528_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _27543_fc,jule::Ptr<_1a58cee44_Data>& _27565_d) {
	if ((_27543_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_27543_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_27528_e.ptr(), _27543_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if ((_27543_fc.get()._field_args.len() > 2LL)) {
		_1a58d2b7d_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _28713_t = _1a5902494_eval_expr_kind(_27528_e, _27543_fc.get()._field_args[0LL].get()._field_kind);
	if ((_28713_t == nullptr)) {
		return nullptr;
	}
	if ((!(_28713_t.get()._field_decl))) {
		_1a58d2b7d_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_1a5924609_is_valid_for_sptr_type(_28713_t.get()._field_kind)))) {
		jule::Ptr<_1ab814515_StructIns> _29817_s = _1a5917c29_strct(_28713_t.get()._field_kind.ptr());
		if (((_29817_s != nullptr) && (_29817_s.get()._field_decl != nullptr)) && _29817_s.get()._field_decl.get()._field_cpp_linked) {
			_1a58d2b7d_push_err(_27528_e.ptr(), _27543_fc.get()._field_args[0LL].get()._field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		}
		return nullptr;
	}
	_27565_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(jule::new_ptr<_1a591d768_Sptr>(_1a591d768_Sptr(_28713_t.get()._field_kind)), 6)));
	if ((_27543_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a5913e9a_TypeKind> _31217_old = _27528_e.get()._field_prefix;
		_27528_e.get()._field_prefix=_28713_t.get()._field_kind;
		jule::Ptr<_1a58cee44_Data> _31517_init = _1a5902c03_eval_expr(_27528_e, _27543_fc.get()._field_args[1LL]);
		_27528_e.get()._field_prefix=_31217_old;
		if ((_31517_init != nullptr)) {
			_1aa07563a_Token _32021_token = _27543_fc.get()._field_args[1LL].get()._field_token;
			
			_1a5871688_check_validity_for_init_expr(_27528_e.get()._field_s, (!(_27528_e.get()._field_immutable)),false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_1a586e202_check_assign_type(_27528_e.get()._field_s, false,_28713_t.get()._field_kind,_31517_init,_32021_token);
			_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1ab8231c2_BuiltinNewCallExprModel>(_1ab8231c2_BuiltinNewCallExprModel(_28713_t.get()._field_kind,_31517_init.get()._field_model)));
		}
	} else {
		_27565_d.get()._field_model=jule::Any(jule::new_ptr<_1ab8231c2_BuiltinNewCallExprModel>(_1ab8231c2_BuiltinNewCallExprModel(_28713_t.get()._field_kind,jule::Any())));
	}
	return _27565_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5935cad_builtin_caller_panic(jule::Ptr<_1a58d2397_Eval>& _34030_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _34045_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_34045_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_34045_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("message", 7))}));
		return nullptr;
	}
	if ((_34045_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_34030_e.ptr(), _34045_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _35213_expr = _1a5902c03_eval_expr(_34030_e, _34045_fc.get()._field_args[0LL]);
	if ((_35213_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a591673e_prim(_35213_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a591d13b_is_str(_1a591673e_prim(_35213_expr.get()._field_kind.ptr()).ptr())))) {
		_1a58d2b7d_push_err(_34030_e.ptr(), _34045_fc.get()._field_token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _36113_d = _1a590eb77_build_void_data();
	_36113_d.get()._field_model=jule::Any(jule::new_ptr<_1ab823887_BuiltinPanicCallExprModel>(_1ab823887_BuiltinPanicCallExprModel(_34045_fc.get()._field_token,_35213_expr.get()._field_model)));
	return _36113_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a597742b_builtin_caller_make(jule::Ptr<_1a58d2397_Eval>& _36929_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _36944_fc,jule::Ptr<_1a58cee44_Data>& _36966_d) {
	if ((_36944_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_36944_fc.get()._field_args.len() < 2LL)) {
		if ((_36944_fc.get()._field_args.len() == 1LL)) {
			_1a58d2b7d_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_1a58d2b7d_push_err(_36929_e.ptr(), _36944_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if ((_36944_fc.get()._field_args.len() > 3LL)) {
		_1a58d2b7d_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[3LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _38513_t = _1a5902494_eval_expr_kind(_36929_e, _36944_fc.get()._field_args[0LL].get()._field_kind);
	if ((_38513_t == nullptr)) {
		return nullptr;
	}
	if ((!(_38513_t.get()._field_decl)) || (_1a5917674_slc(_38513_t.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err(_36929_e.ptr(), _36944_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;
	}
	_36966_d.get()._field_kind=_38513_t.get()._field_kind;
	jule::Ptr<_1a58cee44_Data> _39713_len = _1a5902c03_eval_expr(_1a586d70c_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[1LL]);
	if ((_39713_len == nullptr)) {
		return _36966_d;
	}
	_1a58dd1a5_check_integer_indexing_by_data(_36929_e.ptr(), _39713_len,_36944_fc.get()._field_args[1LL].get()._field_token);
	if ((_36944_fc.get()._field_args.len() == 3LL)) {
		jule::Ptr<_1a58cee44_Data> _40517_cap = _1a5902c03_eval_expr(_1a586d70c_evalp(_36929_e.get()._field_s, _36929_e.get()._field_lookup,_38513_t.get()._field_kind), _36944_fc.get()._field_args[2LL]);
		if ((_40517_cap == nullptr)) {
			return _36966_d;
		}
		_1a58dd1a5_check_integer_indexing_by_data(_36929_e.ptr(), _40517_cap,_36944_fc.get()._field_args[2LL].get()._field_token);
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1ab82976c_BuiltinMakeCallExprModel>(_1ab82976c_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,_40517_cap.get()._field_model)));
	} else {
		_36966_d.get()._field_model=jule::Any(jule::new_ptr<_1ab82976c_BuiltinMakeCallExprModel>(_1ab82976c_BuiltinMakeCallExprModel(_38513_t.get()._field_kind,_39713_len.get()._field_model,jule::Any())));
	}
	return _36966_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5977591_builtin_caller_append(jule::Ptr<_1a58d2397_Eval>& _42631_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _42646_fc,jule::Ptr<_1a58cee44_Data>& _42668_d) {
	if ((_42646_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_42646_fc.get()._field_args.len() < 2LL)) {
		if ((_42646_fc.get()._field_args.len() == 1LL)) {
			_1a58d2b7d_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a58d2b7d_push_err(_42631_e.ptr(), _42646_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _43913_t = _1a5902c03_eval_expr(_42631_e, _42646_fc.get()._field_args[0LL]);
	if ((_43913_t == nullptr)) {
		return nullptr;
	}
	if ((_1a5917674_slc(_43913_t.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err(_42631_e.ptr(), _42646_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1ab836218_FnIns> _44913_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str())),_43913_t.get()._field_kind)),jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(jule::new_ptr<_1ab830300_Param>(_1ab830300_Param(_1aa07563a_Token(),true,true,jule::Bool(),jule::Ptr<_1a5918a0a_TypeSymbol>(),jule::Str())),_1a5917674_slc(_43913_t.get()._field_kind.ptr()).get()._field_elem))}),_43913_t.get()._field_kind,jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5960766_builtin_caller_common_plain),jule::Bool()));
	_42668_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_44913_f, 1)));
	_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1ab820686_CommonIdentExprModel>(_1ab820686_CommonIdentExprModel(jule::Str("append", 6))));
	_42668_d=_1a5960766_builtin_caller_common_plain(_42631_e,_42646_fc,_42668_d);
	if ((_42668_d != nullptr)) {
		jule::Ptr<_1ab81a0ed_FnCallExprModel> _47717_model = _42668_d.get()._field_model.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>();
		_42668_d.get()._field_model=jule::Any(jule::new_ptr<_1ab829e32_BuiltinAppendCallExprModel>(_1ab829e32_BuiltinAppendCallExprModel(_47717_model.get()._field_args[0LL],_47717_model.get()._field_args[1LL])));
	}
	return _42668_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a5977706_builtin_caller_copy(jule::Ptr<_1a58d2397_Eval>& _48629_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _48644_fc,jule::Ptr<_1a58cee44_Data>& _48666_d) {
	if ((_48644_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_48644_fc.get()._field_args.len() < 2LL)) {
		if ((_48644_fc.get()._field_args.len() == 1LL)) {
			_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if ((_48644_fc.get()._field_args.len() > 2LL)) {
		_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _50213_dest = _1a5902c03_eval_expr(_48629_e, _48644_fc.get()._field_args[0LL]);
	if ((_50213_dest == nullptr)) {
		return nullptr;
	}
	if ((_1a5917674_slc(_50213_dest.get()._field_kind.ptr()) == nullptr)) {
		_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	if ((!(_50213_dest.get()._field_mutable))) {
		_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[0LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ab830300_Param> _51413_empty_param = jule::new_ptr<_1ab830300_Param>();
	jule::Ptr<_1ab836218_FnIns> _51513_f = jule::new_ptr<_1ab836218_FnIns>(_1ab836218_FnIns(jule::Ptr<_1ab814515_StructIns>(),jule::Ptr<_1ab832324_Fn>(),jule::Slice<jule::Ptr<_1a5913e9a_TypeKind>>(),jule::Slice<jule::Ptr<_1ab834db5_ParamIns>>({jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind)),jule::new_ptr<_1ab834db5_ParamIns>(_1ab834db5_ParamIns(_51413_empty_param,_50213_dest.get()._field_kind))}),jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("int", 3)), 5))),jule::Ptr<_1ac56022c_Scope>(),jule::Ptr<_1ab839d43_ReferenceStack>(),jule::Bool(),jule::Fn<jule::Ptr<_1a58cee44_Data>(jule::Ptr<_1a58d2397_Eval>&,jule::Ptr<_1aa091bc8_FnCallExpr>&,jule::Ptr<_1a58cee44_Data>&)>(_1a5960766_builtin_caller_common_plain),jule::Bool()));
	_48666_d.get()._field_kind=jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_51513_f, 1)));
	_48666_d.get()._field_model=jule::Any(jule::new_ptr<_1ab820686_CommonIdentExprModel>(_1ab820686_CommonIdentExprModel(jule::Str("copy", 4))));
	_48666_d=_1a5960766_builtin_caller_common_plain(_48629_e,_48644_fc,_48666_d);
	if ((_48666_d != nullptr)) {
		jule::Ptr<_1a58cee44_Data> _54017_src = _48666_d.get()._field_model.operator jule::Ptr<_1ab81a0ed_FnCallExprModel>().get()._field_args[1LL].operator jule::Ptr<_1a58cee44_Data>();
		jule::Ptr<_1a591e549_Slc> _54117_slc = _1a5917674_slc(_54017_src.get()._field_kind.ptr());
		if ((!(_54017_src.get()._field_mutable)) && _1a5915809_mutable(_54117_slc.get()._field_elem.ptr())) {
			_1a58d2b7d_push_err(_48629_e.ptr(), _48644_fc.get()._field_args[1LL].get()._field_token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		}
	}
	return _48666_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a597786b_builtin_caller_clone(jule::Ptr<_1a58d2397_Eval>& _54930_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _54945_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_54945_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_54945_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_54945_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _56213_d = _1a5902494_eval_expr_kind(_54930_e, _54945_fc.get()._field_args[0LL].get()._field_kind);
	if ((_56213_d == nullptr)) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_1a5913e9a_TypeKind>)> _5679_check_kind = jule::Fn<void(jule::Ptr<_1a5913e9a_TypeKind>)>([=](jule::Ptr<_1a5913e9a_TypeKind> _56729_k) mutable -> void {
		{
			
			if ((_1a5917674_slc(_56729_k.ptr()) != nullptr)) {
				_case_begin_1ab63a869:;
				{
					if ((!(_1a5916189_supports_cloning(_1a5917674_slc(_56729_k.ptr()).get()._field_elem.ptr())))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56729_k.ptr()))}));
						}
					}
				}
			}
			else if ((_1a59182ce_map(_56729_k.ptr()) != nullptr)) {
				_case_begin_1ab63a8d0:;
				{
					jule::Ptr<_1a592132b_Map> _57717_m = _1a59182ce_map(_56729_k.ptr());
					if ((!(_1a5916189_supports_cloning(_57717_m.get()._field_key.ptr()))) || (!(_1a5916189_supports_cloning(_57717_m.get()._field_val.ptr())))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56729_k.ptr()))}));
						}
					}
				}
			}
			else if ((_1a5917399_arr(_56729_k.ptr()) != nullptr)) {
				_case_begin_1ab63a946:;
				{
					if ((!(_1a5916189_supports_cloning(_1a5917399_arr(_56729_k.ptr()).get()._field_elem.ptr())))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56729_k.ptr()))}));
						}
					}
				}
			}
			else if ((_1a5916a19_sptr(_56729_k.ptr()) != nullptr)) {
				_case_begin_1ab63a9ac:;
				{
					if ((!(_1a5916189_supports_cloning(_1a5916a19_sptr(_56729_k.ptr()).get()._field_elem.ptr())))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56729_k.ptr()))}));
						}
					}
				}
			}
			else if ((_1a5917c29_strct(_56729_k.ptr()) != nullptr)) {
				_case_begin_1ab63ab77:;
				{
					jule::Ptr<_1ab814515_StructIns> _59917_s = _1a5917c29_strct(_56213_d.get()._field_kind.ptr());
					if ((!(_59917_s.get()._field_mutable))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56213_d.get()._field_kind.ptr()))}));
						}
					}
					if (((_59917_s.get()._field_decl == nullptr) || _59917_s.get()._field_decl.get()._field_cpp_linked) || (!(_1ab812ada_is_derives(_59917_s.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
						{
							_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
						}
					}
				}
			}
			else {
				_case_begin_1ab63a803:;
				{
					{
						_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
					}
				}
			}
			_match_end_1ab63a737:;
		}
	});
	if ((_1a5917c29_strct(_56213_d.get()._field_kind.ptr()) != nullptr)) {
		jule::Ptr<_1ab814515_StructIns> _62317_s = _1a5917c29_strct(_56213_d.get()._field_kind.ptr());
		if ((_62317_s.get()._field_decl != nullptr) && (!(_1ab812ada_is_derives(_62317_s.get()._field_decl.ptr(), jule::Str("Clone", 5))))) {
			_1a58d2b7d_push_err(_54930_e.ptr(), _54945_fc.get()._field_args[0LL].get()._field_token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>({jule::Any(_1a59145b6_to_str(_56213_d.get()._field_kind.ptr())),jule::Any(jule::Str("Clone", 5))}));
		}
	}
	if ((!(_1a5916189_supports_cloning(_56213_d.get()._field_kind.ptr())))) {
		_5679_check_kind(_56213_d.get()._field_kind);
	}
	_56213_d.get()._field_mutable=true;
	_56213_d.get()._field_model=jule::Any(jule::new_ptr<_1ab822a0c_BuiltinCloneCallExprModel>(_1ab822a0c_BuiltinCloneCallExprModel(_56213_d.get()._field_model)));
	return _56213_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a599a0a8_builtin_caller_assert(jule::Ptr<_1a58d2397_Eval>& _63831_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _63846_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_63846_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_63831_e.ptr(), _63846_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_63846_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_63831_e.ptr(), _63846_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_63846_fc.get()._field_args.len() > 2LL)) {
		_1a58d2b7d_push_err(_63831_e.ptr(), _63846_fc.get()._field_args[2LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _65013_expr = _1a5902c03_eval_expr(_63831_e, _63846_fc.get()._field_args[0LL]);
	if ((_65013_expr == nullptr)) {
		return nullptr;
	}
	if ((_1a591673e_prim(_65013_expr.get()._field_kind.ptr()) == nullptr) || (!(_1a591cd61_is_bool(_1a591673e_prim(_65013_expr.get()._field_kind.ptr()).ptr())))) {
		_1a58d2b7d_push_err(_63831_e.ptr(), _63846_fc.get()._field_token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1ab828ea8_BuiltinAssertCallExprModel> _65913_model = jule::new_ptr<_1ab828ea8_BuiltinAssertCallExprModel>(_1ab828ea8_BuiltinAssertCallExprModel(_63846_fc.get()._field_token,_65013_expr.get()._field_model,jule::Str("assertion failed", 16)));
	if ((_63846_fc.get()._field_args.len() == 2LL)) {
		jule::Ptr<_1a58cee44_Data> _66717_log = _1a5902c03_eval_expr(_63831_e, _63846_fc.get()._field_args[1LL]);
		if ((_66717_log == nullptr)) {
			return nullptr;
		}
		if (((!(_1a58d0b48_is_const(_66717_log.ptr()))) || (_1a591673e_prim(_66717_log.get()._field_kind.ptr()) == nullptr)) || (!(_1a591d13b_is_str(_1a591673e_prim(_66717_log.get()._field_kind.ptr()).ptr())))) {
			_1a58d2b7d_push_err(_63831_e.ptr(), _63846_fc.get()._field_args[1LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("const str", 9)),jule::Any(_1a59145b6_to_str(_66717_log.get()._field_kind.ptr()))}));
			return nullptr;
		}
		_65913_model.get()._field_log=_1ac4d30e5_read_str(_66717_log.get()._field_constant.ptr());
	}
	jule::Ptr<_1a58cee44_Data> _68013_d = _1a590eb77_build_void_data();
	_68013_d.get()._field_model=jule::Any(_65913_model);
	return _68013_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a599a5b4_builtin_caller_std_mem_size_of(jule::Ptr<_1a58d2397_Eval>& _68540_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _68555_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_68555_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_68540_e.ptr(), _68555_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _68913_result = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
	if ((_68555_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_68540_e.ptr(), _68555_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _68913_result;
	}
	if ((_68555_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_68540_e.ptr(), _68555_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _70113_d = _1a5902494_eval_expr_kind(_68540_e, _68555_fc.get()._field_args[0LL].get()._field_kind);
	if ((_70113_d == nullptr)) {
		return _68913_result;
	}
	_68913_result.get()._field_model=jule::Any(jule::new_ptr<_1ab82ab25_SizeofExprModel>(_1ab82ab25_SizeofExprModel(_70113_d.get()._field_model)));
	return _68913_result;
}



inline jule::Ptr<_1a58cee44_Data> _1a599aaae_builtin_caller_std_mem_align_of(jule::Ptr<_1a58d2397_Eval>& _71041_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _71056_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_71056_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_71041_e.ptr(), _71056_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _71413_result = jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("uint", 4)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
	if ((_71056_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_71041_e.ptr(), _71056_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _71413_result;
	}
	if ((_71056_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_71041_e.ptr(), _71056_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _72613_d = _1a5902494_eval_expr_kind(_71041_e, _71056_fc.get()._field_args[0LL].get()._field_kind);
	if ((_72613_d == nullptr)) {
		return _71413_result;
	}
	_71413_result.get()._field_model=jule::Any(jule::new_ptr<_1ab82b4c7_AlignofExprModel>(_1ab82b4c7_AlignofExprModel(_72613_d.get()._field_model)));
	return _71413_result;
}



inline jule::Ptr<_1a58cee44_Data> _1a599b0a9_builtin_caller_std_mem_free(jule::Ptr<_1a58d2397_Eval>& _73537_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _73552_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_73552_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_73537_e.ptr(), _73552_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_73552_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_73537_e.ptr(), _73552_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("h", 1))}));
		return nullptr;
	}
	if ((_73552_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_73537_e.ptr(), _73552_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _74813_d = _1a5902494_eval_expr_kind(_73537_e, _73552_fc.get()._field_args[0LL].get()._field_kind);
	if ((_74813_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a5915dae_performs_rc(_74813_d.get()._field_kind.ptr())))) {
		_1a58d2b7d_push_err(_73537_e.ptr(), _73552_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _75713_result = _1a590eb77_build_void_data();
	_75713_result.get()._field_model=jule::Any(jule::new_ptr<_1ab82d3ca_FreeExprModel>(_1ab82d3ca_FreeExprModel(_74813_d.get()._field_model)));
	return _75713_result;
}



inline jule::Ptr<_1a58cee44_Data> _1a599b5c6_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_1a58d2397_Eval>& _76251_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _76266_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((_76266_fc.get()._field_generics.len() > 0LL)) {
		_1a58d2b7d_push_err(_76251_e.ptr(), _76266_fc.get()._field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
	}
	if ((_76266_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_76251_e.ptr(), _76266_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if ((_76266_fc.get()._field_args.len() > 1LL)) {
		_1a58d2b7d_push_err(_76251_e.ptr(), _76266_fc.get()._field_args[1LL].get()._field_token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	}
	jule::Ptr<_1a58cee44_Data> _77513_d = _1a5902494_eval_expr_kind(_76251_e, _76266_fc.get()._field_args[0LL].get()._field_kind);
	if ((_77513_d == nullptr)) {
		return nullptr;
	}
	if ((!(_1a5924cad_is_builtin_str_convertable(_77513_d.get()._field_kind)))) {
		_1a58d2b7d_push_err(_76251_e.ptr(), _76266_fc.get()._field_args[0LL].get()._field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;
	}
	return jule::new_ptr<_1a58cee44_Data>(_1a58cee44_Data(jule::new_ptr<_1a5913e9a_TypeKind>(_1a5913e9a_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::Trait<_1a591395b_Kind>(_1a59253eb_build_prim_type(jule::Str("str", 3)), 5))),jule::Ptr<_1a5913e9a_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::Any(jule::new_ptr<_1ab82c000_IntegratedToStrExprModel>(_1ab82c000_IntegratedToStrExprModel(_77513_d.get()._field_model)))),jule::Bool(),jule::Ptr<_1ac4d0ec2_Const>()));
}



inline jule::Ptr<_1a58cee44_Data> _1a599bac1_builtin_caller_std_jule_integrated_emit(jule::Ptr<_1a58d2397_Eval>& _79349_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _79364_fc,jule::Ptr<_1a58cee44_Data>& ) {
	if ((!(_1a58d37d8_is_unsafe(_79349_e.ptr())))) {
		_1a58d2b7d_push_err(_79349_e.ptr(), _79364_fc.get()._field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	}
	if ((_79364_fc.get()._field_args.len() < 1LL)) {
		_1a58d2b7d_push_err(_79349_e.ptr(), _79364_fc.get()._field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("code", 4))}));
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _80313_d = _1a5902c03_eval_expr(_79349_e, _79364_fc.get()._field_args[0LL]);
	if ((_80313_d == nullptr)) {
		return nullptr;
	}
	if ((_1a591673e_prim(_80313_d.get()._field_kind.ptr()) == nullptr) || (!(_1a591d13b_is_str(_1a591673e_prim(_80313_d.get()._field_kind.ptr()).ptr())))) {
		_1a58d2b7d_push_err(_79349_e.ptr(), _79364_fc.get()._field_args[0LL].get()._field_token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_1a59145b6_to_str(_80313_d.get()._field_kind.ptr()))}));
		return nullptr;
	}
	if ((!(_1a58d0b48_is_const(_80313_d.ptr()))) || (!(_1ac4d5b97_is_str(_80313_d.get()._field_constant.ptr())))) {
		_1a58d2b7d_push_err(_79349_e.ptr(), _79364_fc.get()._field_args[0LL].get()._field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;
	}
	jule::Ptr<_1a58cee44_Data> _81813_r = _1a590eb77_build_void_data();
	if ((_79364_fc.get()._field_generics.len() != 0LL)) {
		if ((!(_1a586950a_check_generic_quantity(_79349_e.get()._field_s.ptr(), 1LL,static_cast<jule::I64>(_79364_fc.get()._field_generics.len()),_79364_fc.get()._field_token)))) {
			return nullptr;
		}
		jule::Ptr<_1a5918a0a_TypeSymbol> _82417_k = _1ab83bc35_build_type(_79364_fc.get()._field_generics[0LL]);
		if ((!(_1a586bee1_check_type(_79349_e.get()._field_s, _82417_k,_79349_e.get()._field_lookup)))) {
			return nullptr;
		}
		_81813_r.get()._field_kind=_82417_k.get()._field_kind;
	}
	jule::Ptr<_1ab82cd7a_BackendEmitExprModel> _83113_model = jule::new_ptr<_1ab82cd7a_BackendEmitExprModel>(_1ab82cd7a_BackendEmitExprModel(_1ac4d30e5_read_str(_80313_d.get()._field_constant.ptr()),jule::Slice<jule::Any>()));
	if ((_79364_fc.get()._field_args.len() > 1LL)) {
		_83113_model.get()._field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>((_79364_fc.get()._field_args.len() - 1LL)));
		{
			auto expr = _79364_fc.get()._field_args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ab67ebbb:;
			if (it != expr.end()) {
				jule::Ptr<_1aa08d334_Expr> _1ab6805c3_arg = *it;
				{
					jule::Ptr<_1a58cee44_Data> _83821_argd = _1a5902494_eval_expr_kind(_79349_e, _1ab6805c3_arg.get()._field_kind);
					if ((_83821_argd == nullptr)) {
						return nullptr;
					}
					_83113_model.get()._field_exprs = jule::alloc_for_append(_83113_model.get()._field_exprs,1);_83113_model.get()._field_exprs.__push(_83821_argd.get()._field_model);
				}
				_iter_next_1ab67ebbb:;
				++it;
				goto _iter_begin_1ab67ebbb;
			}
			_iter_end_1ab67ebbb:;
		}
	}
	_81813_r.get()._field_model=jule::Any(_83113_model);
	return _81813_r;
}



inline jule::Ptr<_1a58cee44_Data> _1a599c099_builtin_caller_std_debug_out(jule::Ptr<_1a58d2397_Eval>& _85038_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _85053_fc,jule::Ptr<_1a58cee44_Data>& _85075_d) {
	_85075_d=_1a59763b4_builtin_caller_out(_85038_e,_85053_fc,_85075_d);
	if ((_85075_d == nullptr)) {
		return nullptr;
	}
	_85075_d.get()._field_model.operator jule::Ptr<_1ab821c81_BuiltinOutCallExprModel>().get()._field_debug=true;
	return _85075_d;
}



inline jule::Ptr<_1a58cee44_Data> _1a599c594_builtin_caller_std_debug_outln(jule::Ptr<_1a58d2397_Eval>& _86040_e,jule::Ptr<_1aa091bc8_FnCallExpr>& _86055_fc,jule::Ptr<_1a58cee44_Data>& _86077_d) {
	_86077_d=_1a5976529_builtin_caller_outln(_86040_e,_86055_fc,_86077_d);
	if ((_86077_d == nullptr)) {
		return nullptr;
	}
	_86077_d.get()._field_model.operator jule::Ptr<_1ab822446_BuiltinOutlnCallExprModel>().get()._field_debug=true;
	return _86077_d;
}



inline std::tuple<jule::Bool,jule::Bool> _1dd5317d8_check_os(jule::Str _913_arg) {
	jule::Bool _925_ok = jule::Bool();
	jule::Bool _935_exist = jule::Bool();
	_925_ok=false;
	_935_exist=true;
	{
		auto &_match_expr{ _913_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a8798ca5:;
			{
				_925_ok=_1c4814453_is_windows(_1c4823bb0_OS);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a87986de:;
			{
				_925_ok=_1c48147a5_is_darwin(_1c4823bb0_OS);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a8798755:;
			{
				_925_ok=_1c4814ab3_is_linux(_1c4823bb0_OS);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a87987bb:;
			{
				_925_ok=_1c481583e_is_unix(_1c4823bb0_OS);
			}
		}
		else {
			_case_begin_1a8797e2a:;
			{
				_925_ok=true;
				_935_exist=false;
			}
		}
		_match_end_1a879838c:;
	}
	return std::make_tuple(_925_ok,_935_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _1dd5319c5_check_arch(jule::Str _3015_arg) {
	jule::Bool _3027_ok = jule::Bool();
	jule::Bool _3037_exist = jule::Bool();
	_3027_ok=false;
	_3037_exist=true;
	{
		auto &_match_expr{ _3015_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a879b989:;
			{
				_3027_ok=_1c4814e15_is_i386(_1c48491be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a879b3c3:;
			{
				_3027_ok=_1c4815223_is_amd64(_1c48491be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a879b439:;
			{
				_3027_ok=_1c4815531_is_arm64(_1c48491be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a879b4a0:;
			{
				_3027_ok=_1c4815ee3_is_64bit(_1c48491be_ARCH);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a879b516:;
			{
				_3027_ok=_1c4815bd5_is_32bit(_1c48491be_ARCH);
			}
		}
		else {
			_case_begin_1a879ab0e:;
			{
				_3027_ok=true;
				_3037_exist=false;
			}
		}
		_match_end_1a879b071:;
	}
	return std::make_tuple(_3027_ok,_3037_exist);
}



inline jule::Bool _1dd531be5_is_pass_file_annotation(jule::Str _5432_p) {
	_5432_p=_1c478a4ea_base(_5432_p);
	jule::I64 _569_n = _5432_p.len();
	(_5432_p).mut_slice(0LL,_569_n - static_cast<jule::I64>(static_cast<jule::I64>(_1c4789dce_ext(_5432_p).len())));
	jule::Str _6213_a1 = jule::Str();
	jule::Str _6513_a2 = jule::Str();
	jule::I64 _6813_i = _1c4783405_find_last_byte(_5432_p,'_');
	if ((_6813_i == -1LL)) {
		jule::Bool _7118_ok;
		jule::Bool _7126_exist;
		std::tie(_7118_ok,_7126_exist) = _1dd5317d8_check_os(_5432_p);
		if (_7126_exist) {
			return _7118_ok;
		}
		std::tie(_7118_ok,_7126_exist) = _1dd5319c5_check_arch(_5432_p);
		return (!(_7126_exist)) || _7118_ok;
	}
	if ((_6813_i + 1LL) >= _569_n) {
		return true;
	}
	_6213_a1=_5432_p.slice((_6813_i + 1LL));
	(_5432_p).mut_slice(0LL,_6813_i);
	_6813_i=static_cast<jule::I64>(_1c4783405_find_last_byte(_5432_p,'_'));
	if ((_6813_i != -1LL)) {
		_6513_a2=_5432_p.slice((_6813_i + 1LL));
	}
	if (_6513_a2.empty()) {
		jule::Bool _9218_ok;
		jule::Bool _9226_exist;
		std::tie(_9218_ok,_9226_exist) = _1dd5317d8_check_os(_6213_a1);
		if (_9226_exist) {
			return _9218_ok;
		}
		std::tie(_9218_ok,_9226_exist) = _1dd5319c5_check_arch(_6213_a1);
		return (!(_9226_exist)) || _9218_ok;
	}
	jule::Bool _10014_ok;
	jule::Bool _10022_exist;
	std::tie(_10014_ok,_10022_exist) = _1dd5319c5_check_arch(_6213_a1);
	if (_10022_exist) {
		if ((!(_10014_ok))) {
			return false;
		}
		std::tie(_10014_ok,_10022_exist) = _1dd5317d8_check_os(_6513_a2);
		return (!(_10022_exist)) || _10014_ok;
	}
	std::tie(_10014_ok,_10022_exist) = _1dd5317d8_check_os(_6213_a1);
	return (!(_10022_exist)) || _10014_ok;
}



inline void _1dd5333cd_set_os_vars(jule::Slice<jule::Str>& _3321_vars) {
	_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(_1c4823bb0_OS);
	if (_1c481583e_is_unix(_1c4823bb0_OS)) {
		_3321_vars = jule::alloc_for_append(_3321_vars,1);_3321_vars.__push(jule::Str("unix", 4));
	}
}



inline void _1dd533697_set_arch_vars(jule::Slice<jule::Str>& _4123_vars) {
	_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(_1c48491be_ARCH);
	if (_1c4815ee3_is_64bit(_1c48491be_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x64", 3));
	}
	if (_1c4815bd5_is_32bit(_1c48491be_ARCH)) {
		_4123_vars = jule::alloc_for_append(_4123_vars,1);_4123_vars.__push(jule::Str("x32", 3));
	}
}



inline void _1dd5339e9_init_vars(jule::Slice<jule::Str>& _5219_vars,_1dd532d5b_CompileInfo& _5233_info) {
	_1dd5333cd_set_os_vars(_5219_vars);
	_1dd533697_set_arch_vars(_5219_vars);
	if (_5233_info._field_prod) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("production", 10));
	}
	if (_5233_info._field_test) {
		_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("test", 4));
	}
	{
		auto &_match_expr{ _5233_info._field_compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a87a8523:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("clang", 5));
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a87a9ea3:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("gcc", 3));
			}
		}
		_match_end_1a87a9e4d:;
	}
	{
		auto &_match_expr{ _5233_info._field_cpp_std };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a87aa822:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a87aa019:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a87ab081:;
			{
				_5219_vars = jule::alloc_for_append(_5219_vars,1);_5219_vars.__push(jule::Str("cpp20", 5));
			}
		}
		_match_end_1a87aa7bc:;
	}
}



inline jule::Slice<jule::U8> _1a599cb9e_read_buff(jule::Str _3014_path) {
	return ({
		auto except = static__1dc2bd389_read(_3014_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			
			_1c485047d_exit(1LL);
			return nullptr;
			return nullptr;
		} jule::Slice<jule::U8>();});
	});
}



inline _1c4810251_Log _1a599ceac_flat_compiler_err(jule::Str _4122_text) {
	return _1c4810251_Log(static_cast<jule::I64>(1LL),jule::I64(),jule::I64(),jule::Str(),_4122_text,jule::Str(),jule::Str());
}



inline void _1a59a3006_push_passes(jule::Ptr<_1ac58451a_Package>& _9021_p,jule::Slice<jule::Str>& _9045_passes) {
	{
		auto &expr = _9021_p.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa72633a:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1aa647dc7_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _1aa647dc7_f.get()._field_passes;
					auto it = expr.begin();
					_iter_begin_1aa7403ba:;
					if (it != expr.end()) {
						_1ab83b66e_Pass _1aa648e0b_pass = *it;
						{
							if (_1aa648e0b_pass._field_text.empty()) {
								goto _iter_next_1aa7403ba;
							}
							{
								auto &expr = _9045_passes;
								auto it = expr.begin();
								_iter_begin_1aa7462c2:;
								if (it != expr.end()) {
									jule::Str _1aa64dcbd_cpass = *it;
									{
										if (_1aa64dcbd_cpass == _1aa648e0b_pass._field_text) {
											goto _iter_next_1aa7403ba;
										}
									}
									_iter_next_1aa7462c2:;
									++it;
									goto _iter_begin_1aa7462c2;
								}
								_iter_end_1aa7462c2:;
							}
							_9045_passes = jule::alloc_for_append(_9045_passes,1);_9045_passes.__push(_1aa648e0b_pass._field_text);
						}
						_iter_next_1aa7403ba:;
						++it;
						goto _iter_begin_1aa7403ba;
					}
					_iter_end_1aa7403ba:;
				}
			}
			_iter_next_1aa72633a:;
			++it;
			goto _iter_begin_1aa72633a;
		}
		_iter_end_1aa72633a:;
	}
}



inline jule::Slice<jule::Str> _1a59a3435_get_all_unique_passes(jule::Ptr<_1ac58451a_Package>& _10731_pkg,jule::Slice<jule::Ptr<_1ac580d41_ImportInfo>> _10756_uses) {
	jule::Slice<jule::Str> _10813_passes = nullptr;
	_1a59a3006_push_passes(_10731_pkg,_10813_passes);
	{
		auto &expr = _10756_uses;
		auto it = expr.begin();
		_iter_begin_1aa6be811:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> _1aa65c705_u = *it;
			{
				if ((!(_1aa65c705_u.get()._field_cpp_linked))) {
					_1a59a3006_push_passes(_1aa65c705_u.get()._field_package,_10813_passes);
				}
			}
			_iter_next_1aa6be811:;
			++it;
			goto _iter_begin_1aa6be811;
		}
		_iter_end_1aa6be811:;
	}
	return _10813_passes;
}



inline _1dd532d5b_CompileInfo _1a59a3666_build_compile_info(void) {
	_1dd532d5b_CompileInfo _12113_info = _1dd532d5b_CompileInfo(_1dc2523c8_PRODUCTION,_1dc253e57_TEST,jule::Str("clang", 5),jule::Str("cpp14", 5));
	{
		auto &_match_expr{ _1dc25353e_COMPILER };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1aa793132:;
			{
				_12113_info._field_compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1aa798302:;
			{
				_12113_info._field_compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1aa792dbd:;
	}
	{
		auto &_match_expr{ _1dc2538e6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1aa7c2d65:;
			{
				_12113_info._field_compiler=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1aa7c41b8:;
			{
				_12113_info._field_compiler=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1aa7c4042:;
			{
				_12113_info._field_compiler=jule::Str("cpp20", 5);
			}
		}
		_match_end_1aa7c2edb:;
	}
	return _12113_info;
}



inline jule::Ptr<_1dd583043_Directive> _1a59a6a43_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _3324_directives,jule::Str _3355_tag) {
	{
		auto &expr = _3324_directives;
		auto it = expr.begin();
		_iter_begin_1abbea39b:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1aa6bc369_dr = *it;
			{
				if (_1aa6bc369_dr.get()._field_tag._field_kind == _3355_tag) {
					return _1aa6bc369_dr;
				}
			}
			_iter_next_1abbea39b:;
			++it;
			goto _iter_begin_1abbea39b;
		}
		_iter_end_1abbea39b:;
	}
	return nullptr;
}



inline jule::Bool _1a59a6e72_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _4319_directives,jule::Str _4350_tag) {
	return (_1a59a6a43_find_directive(_4319_directives,_4350_tag) != nullptr);
}



inline jule::Bool _1a59a735c_is_exist(jule::Slice<jule::Any> _4813_arr,jule::Any _4825_t) {
	{
		auto &expr = _4813_arr;
		auto it = expr.begin();
		_iter_begin_1abc263c7:;
		if (it != expr.end()) {
			jule::Any &_1aa70090d_ref = *it;
			{
				if (_4825_t == _1aa70090d_ref) {
					return true;
				}
			}
			_iter_next_1abc263c7:;
			++it;
			goto _iter_begin_1abc263c7;
		}
		_iter_end_1abc263c7:;
	}
	return false;
}



inline jule::Bool _1a59a76ae_is_dead(jule::Any _5816_ref) {
	jule::Bool _5828_dead = jule::Bool();
	if (_1a59a735c_is_exist(_1a59a5c51_deads,_5816_ref)) {
		_5828_dead = true;
		return _5828_dead;
	}
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1aa6d1acb:;
			{
				if (_1ab833369_is_init(_5816_ref.operator jule::Ptr<_1ab836218_FnIns>().get()._field_decl.ptr())) {
					goto _match_end_1aa6a41a8;
				}
				goto _case_begin_1aa6d2cb9;
			}
		}
		else {
			_case_begin_1aa6d2cb9:;
			{
				if ((_1a59a647c_current == _5816_ref) || (_1a59a669c_main_current == _5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
				if (_1a59a735c_is_exist(_1a59a6328_checking,_5816_ref)) {
					_5828_dead = true;
					return _5828_dead;
				}
			}
		}
		_match_end_1aa6a41a8:;
	}
	jule::Any _7913_old = _1a59a647c_current;
	_1a59a647c_current=_5816_ref;
	jule::I64 _819_len = _1a59a6328_checking.len();
	_1a59a6328_checking = jule::alloc_for_append(_1a59a6328_checking,1);_1a59a6328_checking.__push(_5816_ref);
	__JULE_DEFER({
		_1a59a647c_current=_7913_old;
		_1a59a7a11_drop_ref(_1a59a6328_checking,_819_len);
	});
	{
		auto &_match_expr{ _5816_ref };
		
		if (_match_expr.type_is<jule::Ptr<_1ab836218_FnIns>>()) {
			_case_begin_1aa7b26b2:;
			{
				_5828_dead = _1a59a8160_is_fn_dead(_5816_ref.operator jule::Ptr<_1ab836218_FnIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1a588601b_Var>>()) {
			_case_begin_1aa768921:;
			{
				_5828_dead = _1a59a8506_is_var_dead(_5816_ref.operator jule::Ptr<_1a588601b_Var>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab814515_StructIns>>()) {
			_case_begin_1aa7b3196:;
			{
				_5828_dead = _1a59a8e30_is_struct_dead(_5816_ref.operator jule::Ptr<_1ab814515_StructIns>());
				return _5828_dead;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ac44770d_Trait>>()) {
			_case_begin_1aa7b3b47:;
			{
				_5828_dead = _1a59a923d_is_trait_dead(_5816_ref.operator jule::Ptr<_1ac44770d_Trait>());
				return _5828_dead;
			}
		}
		else {
			_case_begin_1aa7b156d:;
			{
				_5828_dead = false;
				return _5828_dead;
			}
		}
		_match_end_1aa7b1c66:;
	}
}



inline void _1a59a7a11_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::I64 _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



inline jule::Bool _1a59a7d63_is_all_references_are_dead(jule::Ptr<_1ab839d43_ReferenceStack> _11435_references) {
	jule::I64 _11513_i = 0LL;
	for (; _11513_i < static_cast<jule::I64>(static_cast<jule::I64>(_1ab83a690_len(_11435_references.ptr()))); (_11513_i)++) {
		{
			jule::Any _11717_ref = _1ab83aa47_at(_11435_references.ptr(), _11513_i);
			if (_11717_ref == _1a59a647c_current) {
				goto _iter_next_1aa895bb3;
			}
			if (_11717_ref == _1a59a669c_main_current) {
				goto _iter_next_1aa895bb3;
			}
			if ((!(_1a59a76ae_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_1aa895bb3:;
	}
	_iter_end_1aa895bb3:;
	return true;
}



inline jule::Bool _1a59a8160_is_fn_dead(jule::Ptr<_1ab836218_FnIns> _13119_f) {
	if (_13119_f.get()._field_decl.get()._field_cpp_linked || _13119_f.get()._field_anon) {
		return false;
	}
	if (_1ab83308e_is_entry_point(_13119_f.get()._field_decl.ptr()) || _1ab833369_is_init(_13119_f.get()._field_decl.ptr())) {
		return (!(_13119_f.get()._field_decl.get()._field_statically));
	}
	if (_1dc253e57_TEST && _1a59a6e72_has_directive(_13119_f.get()._field_decl.get()._field_directives,jule::Str("test", 4))) {
		return false;
	}
	if ((_13119_f.get()._field_owner != nullptr)) {
		if (_1a59a735c_is_exist(_1a59a6328_checking,jule::Any(_13119_f.get()._field_owner))) {
			return true;
		}
		return _1a59a76ae_is_dead(jule::Any(_13119_f.get()._field_owner));
	}
	return _1a59a7d63_is_all_references_are_dead(_13119_f.get()._field_references);
}



inline jule::Bool _1a59a8506_is_var_dead(jule::Ptr<_1a588601b_Var> _16120_v) {
	if (_16120_v.get()._field_constant) {
		return true;
	}
	if (_16120_v.get()._field_cpp_linked) {
		return false;
	}
	return _1a59a7d63_is_all_references_are_dead(_16120_v.get()._field_references);
}



inline jule::Bool _1a59a8e30_is_struct_dead(jule::Ptr<_1ab814515_StructIns> _20623_s) {
	return false;
}



inline jule::Bool _1a59a923d_is_trait_dead(jule::Ptr<_1ac44770d_Trait> _22322_t) {
	return false;
}



inline void _1a59a9507_eliminate_dead_functions(jule::Slice<jule::Ptr<_1ab832324_Fn>>& _24034_funcs) {
	jule::I64 _24113_i = 0LL;
	while (_24113_i < static_cast<jule::I64>(static_cast<jule::I64>(_24034_funcs.len()))) {
		{
			jule::Ptr<_1ab832324_Fn> _24317_f = _24034_funcs[_24113_i];
			jule::I64 _24417_j = 0LL;
			while (_24417_j < static_cast<jule::I64>(static_cast<jule::I64>(_24317_f.get()._field_instances.len()))) {
				{
					jule::Ptr<_1ab836218_FnIns> _24621_ins = _24317_f.get()._field_instances[_24417_j];
					_1a59a669c_main_current=jule::Any(_24621_ins);
					if (_1a59a8160_is_fn_dead(_24621_ins)) {
						_1a59a5c51_deads = jule::alloc_for_append(_1a59a5c51_deads,1);_1a59a5c51_deads.__push(jule::Any(_24621_ins));
						_24317_f.get()._field_instances=jule::append(_24317_f.get()._field_instances.slice(0LL,_24417_j),_24317_f.get()._field_instances.slice((_24417_j + 1LL)));
					} else {
						(_24417_j)++;
					}
				}
			_iter_next_1aa898622:;
			}
			_iter_end_1aa898622:;
			if ((_24317_f.get()._field_instances.len() == 0LL)) {
				_24034_funcs=jule::append(_24034_funcs.slice(0LL,_24113_i),_24034_funcs.slice((_24113_i + 1LL)));
				goto _iter_next_1aba1304e;
			}
			(_24113_i)++;
		}
	_iter_next_1aba1304e:;
	}
	_iter_end_1aba1304e:;
}



inline void _1a59a976b_eliminate_dead_globals(jule::Ptr<_1ac58451a_Package>& _26532_pkg) {
	{
		auto &expr = _26532_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa69c9a9:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1aa802bca_f = *it;
			{
				jule::I64 _26717_i = 0LL;
				while (_26717_i < static_cast<jule::I64>(static_cast<jule::I64>(_1aa802bca_f.get()._field_vars.len()))) {
					{
						jule::Ptr<_1a588601b_Var> _26921_v = _1aa802bca_f.get()._field_vars[_26717_i];
						_1a59a669c_main_current=jule::Any(_26921_v);
						if (_1a59a8506_is_var_dead(_26921_v)) {
							_1a59a5c51_deads = jule::alloc_for_append(_1a59a5c51_deads,1);_1a59a5c51_deads.__push(jule::Any(_26921_v));
							_1aa802bca_f.get()._field_vars=jule::append(_1aa802bca_f.get()._field_vars.slice(0LL,_26717_i),_1aa802bca_f.get()._field_vars.slice((_26717_i + 1LL)));
						} else {
							(_26717_i)++;
						}
					}
				_iter_next_1aa76ea37:;
				}
				_iter_end_1aa76ea37:;
			}
			_iter_next_1aa69c9a9:;
			++it;
			goto _iter_begin_1aa69c9a9;
		}
		_iter_end_1aa69c9a9:;
	}
}



inline void _1a59a9a57_eliminate_dead_functions_package(jule::Ptr<_1ac58451a_Package>& _28142_pkg) {
	{
		auto &expr = _28142_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1abb98228:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1aa83c121_f = *it;
			{
				_1a59a9507_eliminate_dead_functions(_1aa83c121_f.get()._field_funcs);
			}
			_iter_next_1abb98228:;
			++it;
			goto _iter_begin_1abb98228;
		}
		_iter_end_1abb98228:;
	}
}



inline void _1a59aa3b5_keep_alive_init(jule::Ptr<_1ac58451a_Package>& _32925_pkg) {
	
	
	jule::Ptr<_1ab832324_Fn> _33213_f = _1ac586462_find_fn(_32925_pkg.ptr(), jule::Str("init", 4),false);
	if ((_33213_f != nullptr)) {
		_33213_f.get()._field_statically=true;
	}
}



inline void _1a59aa63a_eliminate_package(jule::Ptr<_1ac58451a_Package>& _33827_pkg) {
	_1a59a5c51_deads=jule::Slice<jule::Any>::alloc(0LL,1024LL);
	_1a59aa3b5_keep_alive_init(_33827_pkg);
	_1a59a976b_eliminate_dead_globals(_33827_pkg);
	_1a59a9a57_eliminate_dead_functions_package(_33827_pkg);
}



inline void _1a59aa8b0_eliminate_defines(jule::Ptr<_1a59a1895_IR>& _35031_ir) {
	jule::I64 _35113_i = (_35031_ir.get()._field_used.len() - 1LL);
	for (; (_35113_i >= 0LL); (_35113_i)--) {
		{
			jule::Ptr<_1ac580d41_ImportInfo> _35317_u = _35031_ir.get()._field_used[_35113_i];
			if ((!(_35317_u.get()._field_cpp_linked))) {
				_1a59aa63a_eliminate_package(_35317_u.get()._field_package);
			}
		}
	_iter_next_1aa7b6210:;
	}
	_iter_end_1aa7b6210:;
	_1a59aa63a_eliminate_package(_35031_ir.get()._field_main);
	_1a59a5c51_deads=nullptr;
	_1a59a6328_checking=nullptr;
	_1a59a647c_current=jule::Any(nullptr);
}



inline void _1a59acd68_eliminate_dead_code_of_scope(jule::Ptr<_1ac56022c_Scope> _7937_s) {
	jule::Ptr<_1a59aba6a_ScopeDeadCode> _8013_sdc = jule::new_ptr<_1a59aba6a_ScopeDeadCode>(_1a59aba6a_ScopeDeadCode(jule::Ptr<_1a59aba6a_ScopeDeadCode>(),_7937_s,(&(_7937_s.get()._field_stmts)),jule::I64()));
	{
		_1a59ac9e4_optimize_stmts(_8013_sdc);
	}
}



inline void _1a59ad165_eliminate_scope_functions(jule::Slice<jule::Ptr<_1ab832324_Fn>>& _8835_funcs) {
	{
		auto &expr = _8835_funcs;
		auto it = expr.begin();
		_iter_begin_1aa86ca69:;
		if (it != expr.end()) {
			jule::Ptr<_1ab832324_Fn> _1abbc6a2b_func = *it;
			{
				{
					auto &expr = _1abbc6a2b_func.get()._field_instances;
					auto it = expr.begin();
					_iter_begin_1aa712a30:;
					if (it != expr.end()) {
						jule::Ptr<_1ab836218_FnIns> _1aa72a608_ins = *it;
						{
							_1a59acd68_eliminate_dead_code_of_scope(_1aa72a608_ins.get()._field_scope);
						}
						_iter_next_1aa712a30:;
						++it;
						goto _iter_begin_1aa712a30;
					}
					_iter_end_1aa712a30:;
				}
			}
			_iter_next_1aa86ca69:;
			++it;
			goto _iter_begin_1aa86ca69;
		}
		_iter_end_1aa86ca69:;
	}
}



inline void _1a59ad440_eliminate_functions_scope_package(jule::Ptr<_1ac58451a_Package>& _9643_pkg) {
	{
		auto &expr = _9643_pkg.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aa76b847:;
		if (it != expr.end()) {
			jule::Ptr<_1a58c88ee_SymbolTable> _1aa86cbe0_f = *it;
			{
				_1a59ad165_eliminate_scope_functions(_1aa86cbe0_f.get()._field_funcs);
			}
			_iter_next_1aa76b847:;
			++it;
			goto _iter_begin_1aa76b847;
		}
		_iter_end_1aa76b847:;
	}
}



inline void _1a59ad71a_eliminate_scope_package(jule::Ptr<_1ac58451a_Package>& _10233_pkg) {
	_1a59ad440_eliminate_functions_scope_package(_10233_pkg);
}



inline void _1a59ad97e_eliminate_scopes(jule::Ptr<_1a59a1895_IR>& _10730_ir) {
	jule::I64 _10813_i = (_10730_ir.get()._field_used.len() - 1LL);
	for (; (_10813_i >= 0LL); (_10813_i)--) {
		{
			jule::Ptr<_1ac580d41_ImportInfo> _11017_u = _10730_ir.get()._field_used[_10813_i];
			if ((!(_11017_u.get()._field_cpp_linked))) {
				_1a59ad71a_eliminate_scope_package(_11017_u.get()._field_package);
			}
		}
	_iter_next_1aa8783c1:;
	}
	_iter_end_1aa8783c1:;
	_1a59ad71a_eliminate_scope_package(_10730_ir.get()._field_main);
}



inline void _1a59d2057_throw(jule::Str _914_msg) {
	jule::outln(_914_msg);
	_1c485047d_exit(1LL);
}



inline jule::Bool _1a632724d_is_std_package(jule::Str _37319_f,jule::Str _37327_p) {
	return _1c471294a_has_prefix(_37319_f,_1c4789ac1_join(jule::Slice<jule::Str>({_1c4820a47_PATH_STDLIB,_37327_p})));
}



inline jule::Bool _1a6327616_is_constant_valid_conditional_case(jule::Ptr<_1ac56064a_If>& _37740_i) {
	{
		auto &_match_expr{ _37740_i.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1a8956407:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _38013_c = _37740_i.get()._field_expr.operator jule::Ptr<_1ac4d0ec2_Const>();
				return _1ac4d58bc_is_bool(_38013_c.ptr()) && _1ac4d2d1a_read_bool(_38013_c.ptr());
			}
		}
		_match_end_1a895624d:;
	}
	return false;
}



inline jule::Bool _1a63278e1_is_unreachable_expr(jule::Any& _38625_expr) {
	{
		auto &_match_expr{ _38625_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1a8956638:;
			{
				jule::Ptr<_1ac4d0ec2_Const> _38913_c = _38625_expr.operator jule::Ptr<_1ac4d0ec2_Const>();
				return _1ac4d58bc_is_bool(_38913_c.ptr()) && (!(_1ac4d2d1a_read_bool(_38913_c.ptr())));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ab8170b7_BinopExprModel>>()) {
			_case_begin_1a895669e:;
			{
				jule::Ptr<_1ab8170b7_BinopExprModel> _39213_m = _38625_expr.operator jule::Ptr<_1ab8170b7_BinopExprModel>();
				if ((_39213_m.get()._field_op._field_kind == jule::Str("&&", 2))) {
					return _1a63278e1_is_unreachable_expr(_39213_m.get()._field_left.get()._field_model) || _1a63278e1_is_unreachable_expr(_39213_m.get()._field_right.get()._field_model);
				}
			}
		}
		_match_end_1a89565d3:;
	}
	return false;
}



inline jule::Bool _1a6327c87_is_constant_valid_match_case(jule::Ptr<_1ac56463d_Case>& _40034_case) {
	{
		auto &expr = _40034_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a8957da9:;
		if (it != expr.end()) {
			jule::Ptr<_1a58cee44_Data> &_1a895a8b2_expr = *it;
			{
				if ((_1a58d0b48_is_const(_1a895a8b2_expr.ptr()) && _1ac4d58bc_is_bool(_1a895a8b2_expr.get()._field_constant.ptr())) && _1ac4d2d1a_read_bool(_1a895a8b2_expr.get()._field_constant.ptr())) {
					return true;
				}
			}
			_iter_next_1a8957da9:;
			++it;
			goto _iter_begin_1a8957da9;
		}
		_iter_end_1a8957da9:;
	}
	return false;
}



inline jule::Bool _1a63280c8_is_unreachable_conditional_case(jule::Ptr<_1ac56064a_If>& _40937_i) {
	return _1a63278e1_is_unreachable_expr(_40937_i.get()._field_expr);
}



inline jule::Bool _1a6328419_is_unreachable_match_case(jule::Ptr<_1ac56463d_Case>& _41331_case) {
	{
		auto &expr = _41331_case.get()._field_exprs;
		auto it = expr.begin();
		_iter_begin_1a895c4da:;
		if (it != expr.end()) {
			jule::Ptr<_1a58cee44_Data> &_1a895c5c8_expr = *it;
			{
				if ((!(_1a63278e1_is_unreachable_expr(_1a895c5c8_expr.get()._field_model)))) {
					return false;
				}
			}
			_iter_next_1a895c4da:;
			++it;
			goto _iter_begin_1a895c4da;
		}
		_iter_end_1a895c4da:;
	}
	return true;
}



inline std::tuple<jule::Bool,jule::U64> _1a63322d0_check_for_bit_shift_opt(jule::Ptr<_1ab816825_OperandExprModel>& _43329_l,jule::Ptr<_1ab816825_OperandExprModel>& _43352_r) {
	jule::Bool _43376_ok = jule::Bool();
	jule::U64 _43386_x = jule::U64();
	if ((!(_1ac55e1c6_is_int(_1a59145b6_to_str(_43329_l.get()._field_kind.ptr())))) || (!(_1ac55e1c6_is_int(_1a59145b6_to_str(_43352_r.get()._field_kind.ptr()))))) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	{
		auto &_match_expr{ _43352_r.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ac4d0ec2_Const>>()) {
			_case_begin_1a89608c8:;
			{
				goto _match_end_1a896039a;
			}
		}
		else {
			_case_begin_1a8960433:;
			{
				_43376_ok = false;
				_43386_x = 0LLU;
				return std::make_tuple(_43376_ok,_43386_x);
			}
		}
		_match_end_1a896039a:;
	}
	_43386_x=static_cast<jule::U64>(_1ac4d3975_as_u64(_43352_r.get()._field_model.operator jule::Ptr<_1ac4d0ec2_Const>().ptr()));
	if ((_43386_x == 0LLU) || ((_43386_x & 1LL) != 0LLU)) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	jule::F64 _4479_j = _1ac382eb7_log2(static_cast<jule::F64>(static_cast<jule::F64>(_43386_x)));
	jule::U64 _4489_z = static_cast<jule::U64>(_4479_j);
	if (static_cast<jule::F64>(_4489_z) != _4479_j) {
		_43376_ok = false;
		_43386_x = 0LLU;
		return std::make_tuple(_43376_ok,_43386_x);
	}
	_43376_ok = true;
	_43386_x = _4489_z;
	return std::make_tuple(_43376_ok,_43386_x);
}



inline jule::U64 _1a639c180_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));
}



inline jule::U64 _1a639c56a_unix_year_to_seconds(jule::U64 _25725_y,jule::Bool& _25743_leap) {
	if (((_25725_y - 2LLU) <= 136LLU)) {
		jule::U64 _25917_leaps = ((_25725_y - 68LLU) >> 2LLU);
		_25743_leap=(((_25725_y - 68LLU) & 3LLU) == 0LLU);
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(31536000LLU * static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25725_y - 70LLU)))))) + static_cast<jule::U64>(static_cast<jule::U64>(86400LLU * _25917_leaps)));
	}
	jule::U64 _26713_leaps = 0LLU;
	jule::U64 _26813_centuries = 0LLU;
	jule::U64 _26913_cycles = ((_25725_y - 100LLU) / 400LLU);
	jule::U64 _27013_rem = ((_25725_y - 100LLU) % 400LL);
	if ((_27013_rem < 0LLU)) {
		(_26913_cycles)--;
		_27013_rem+=400LLU;
	}
	if ((_27013_rem == 0LLU)) {
		_25743_leap=true;
		_26813_centuries=0LLU;
		_26713_leaps=0LLU;
	} else {
		if ((_27013_rem >= 200LLU)) {
			if ((_27013_rem >= 300LLU)) {
				_26813_centuries=3LLU;
				_27013_rem-=300LLU;
			} else {
				_26813_centuries=2LLU;
				_27013_rem-=200LLU;
			}
		} else {
			if ((_27013_rem >= 100LLU)) {
				_26813_centuries=1LLU;
				_27013_rem-=100LLU;
			} else {
				_26813_centuries=0LLU;
			}
		}
		if ((_27013_rem == 0LLU)) {
			_25743_leap=false;
			_26713_leaps=0LLU;
		} else {
			_26713_leaps=static_cast<jule::U64>(_27013_rem >> 2LLU);
			_27013_rem%=4LL;
			_25743_leap=(_27013_rem == 0LLU);
		}
	}
	_26713_leaps+=static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(97LLU * _26913_cycles)) + static_cast<jule::U64>(static_cast<jule::U64>(24LLU * _26813_centuries)));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U64>((_25725_y - 100LLU)))) * 31536000LLU))) + static_cast<jule::U64>(static_cast<jule::U64>((_26713_leaps * 86400LLU))))) + 946684800LLU))) + 86400LLU));
}



inline jule::U64 _1a639c999_unix_month_to_seconds(jule::U64 _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto &_match_expr{ _31426_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1a89918b5:;
			{
				_31613_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8993620:;
			{
				_31613_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8993686:;
			{
				_31613_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a89936ec:;
			{
				_31613_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8993763:;
			{
				_31613_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a89937c9:;
			{
				_31613_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a8993840:;
			{
				_31613_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a89938a6:;
			{
				_31613_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a899392d:;
			{
				_31613_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1a89939a5:;
			{
				_31613_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a8993a2c:;
			{
				_31613_t=28857600LLU;
			}
		}
		_match_end_1a89934aa:;
	}
	if (_31439_leap && (_31426_m >= 2LLU)) {
		_31613_t+=86400LLU;
	}
	return _31613_t;
}



inline jule::Bool _1a62be217_is_copy_optimizable(jule::Ptr<_1a58cee44_Data>& _75225_expr) {
	if ((!(_75225_expr.get()._field_lvalue))) {
		return false;
	}
	{
		auto &_match_expr{ _75225_expr.get()._field_model };
		
		if (_match_expr.type_is<jule::Ptr<_1ab81cce3_SlicingExprModel>>()) {
			_case_begin_1a8cd292b:;
			{
				return false;
			}
		}
		_match_end_1a8cd2893:;
	}
	return true;
}



inline jule::Bool _1a62c0603_is_iter_copy_optimizable(jule::Ptr<_1a58cee44_Data>& _76330_expr,jule::Ptr<_1a588601b_Var>& _76344_v) {
	if ((!(_76330_expr.get()._field_lvalue)) && (!(_1a5915809_mutable(_76330_expr.get()._field_kind.ptr())))) {
		return true;
	}
	return (!(_76344_v.get()._field_mutable)) && (!(_76330_expr.get()._field_mutable));
}



inline jule::Str _1a633ed37_concat_all_parts(jule::Slice<_1aa07563a_Token> _115821_parts) {
	jule::Str _115913_s = jule::Str();
	{
		auto &expr = _115821_parts;
		auto it = expr.begin();
		_iter_begin_1a8cd648a:;
		if (it != expr.end()) {
			_1aa07563a_Token &_1a8cd6534_p = *it;
			{
				_115913_s+=_1a8cd6534_p._field_kind;
			}
			_iter_next_1a8cd648a:;
			++it;
			goto _iter_begin_1a8cd648a;
		}
		_iter_end_1a8cd648a:;
	}
	return _115913_s;
}



inline jule::Str _1a6340189_decompose_common_esq(jule::U8 _116625_b) {
	{
		auto &_match_expr{ _116625_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a8cd7667:;
			{
				return jule::Str("\\\\", 2);
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a8cd76cd:;
			{
				return jule::Str("'", 1);
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a8cd7359:;
			{
				return jule::Str("\\\"", 2);
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a8cd73c0:;
			{
				return jule::Str("\\a", 2);
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a8cd7436:;
			{
				return jule::Str("\\b", 2);
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a8cd7117:;
			{
				return jule::Str("\\f", 2);
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a8cd717d:;
			{
				return jule::Str("\\n", 2);
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a8cd71e4:;
			{
				return jule::Str("\\r", 2);
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a8cd725a:;
			{
				return jule::Str("\\t", 2);
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a8cd7766:;
			{
				return jule::Str("\\v", 2);
			}
		}
		else {
			_case_begin_1a8cd6ee6:;
			{
				return jule::Str();
			}
		}
		_match_end_1a8cd6842:;
	}
}



inline jule::Str _1a6340497_sbtoa(jule::U8 _119310_b) {
	if ((_119310_b == 0LLU)) {
		return jule::Str("\\x00", 4);
	}
	if ((_119310_b < 128LLU)) {
		jule::Str _119813_seq = _1a6340189_decompose_common_esq(_119310_b);
		if ((!(_119813_seq.empty()))) {
			return _119813_seq;
		}
		if ((32LL <= _119310_b) && (_119310_b <= 126LLU)) {
			return static_cast<jule::Str>(_119310_b);
		}
	}
	jule::Str _12069_seq = _1ac4456a6_fmt_uint(static_cast<jule::U64>(static_cast<jule::U64>(_119310_b)),8LL);
	if ((_12069_seq.len() == 2LL)) {
		return jule::Str("\\0", 2) + _12069_seq;
	}
	return jule::Str("\\", 1) + _12069_seq;
}



inline jule::Str _1a63407e9_cstr_bytes(jule::Slice<jule::U8> _121315_bytes) {
	jule::Str _121413_lit = jule::Str();
	{
		auto &expr = _121315_bytes;
		auto it = expr.begin();
		_iter_begin_1a8cdd33d:;
		if (it != expr.end()) {
			jule::U8 &_1a8cdd470_b = *it;
			{
				_121413_lit+=_1a6340497_sbtoa(_1a8cdd470_b);
			}
			_iter_next_1a8cdd33d:;
			++it;
			goto _iter_begin_1a8cdd33d;
		}
		_iter_end_1a8cdd33d:;
	}
	return _121413_lit;
}



inline jule::Str _1a6340b07_cstr_lit(jule::Slice<jule::U8> _122113_bytes) {
	return ((jule::Str("\"", 1) + _1a63407e9_cstr_bytes(_122113_bytes)) + jule::Str("\"", 1));
}



inline jule::Str _1a6340ee2_ftoa(jule::F64 _12259_f,jule::I64 _122517_bitsize) {
	if ((_122517_bitsize != 32LL)) {
		if (_12259_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::I64>(_12259_f))))) {
			return _1a6341300_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_12259_f)));
		}
		if (_12259_f == static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::U64>(_12259_f))))) {
			return _1a6341696_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_12259_f)));
		}
	}
	jule::Str _123413_m = _1abdcd33c_fmt_float(_12259_f,'f',-1LL,_122517_bitsize);
	if ((!(_1c4783dea_contains(_123413_m,jule::Str(".", 1))))) {
		_123413_m+=jule::Str(".0", 2);
	}
	return _123413_m;
}



inline jule::Str _1a6341300_itoa(jule::I64 _12419_x) {
	{
		
		if ((_12419_x == jule::MAX_I64)) {
			_case_begin_1a8ce2c16:;
			{
				return jule::Str("jule::MAX_I64", 13);
			}
		}
		else if ((_12419_x == jule::MIN_I64)) {
			_case_begin_1a8ce2c8d:;
			{
				return jule::Str("jule::MIN_I64", 13);
			}
		}
		_match_end_1a8ce2b06:;
	}
	jule::Str _12499_fmt = _1ac445ad5_fmt_int(_12419_x,10LL);
	if (_1c4815ee3_is_64bit(jule::Str("amd64", 5))) {
		return (_12499_fmt + jule::Str("LL", 2));
	}
	return (_12499_fmt + jule::Str("L", 1));
}



inline jule::Str _1a6341696_utoa(jule::U64 _12569_x) {
	{
		
		if ((_12569_x == jule::MAX_U64)) {
			_case_begin_1a8ce4e16:;
			{
				return jule::Str("jule::MAX_U64", 13);
			}
		}
		_match_end_1a8ce4d6c:;
	}
	jule::Str _12629_fmt = _1ac4456a6_fmt_uint(_12569_x,10LL);
	if (_1c4815ee3_is_64bit(jule::Str("amd64", 5))) {
		return (_12629_fmt + jule::Str("LLU", 3));
	}
	return (_12629_fmt + jule::Str("LU", 2));
}



inline jule::Bool _1a63419a4_is_forwarded(jule::Ptr<_1ac56022c_Scope>& _126918_s) {
	jule::Any _12709_last = _126918_s.get()._field_stmts[(_126918_s.get()._field_stmts.len() - 1LL)];
	{
		auto &_match_expr{ _12709_last };
		
		if (_match_expr.type_is<jule::Ptr<_1a58cee44_Data>>()) {
			_case_begin_1a8ce7ac8:;
			{
				{
					auto &_match_expr{ _12709_last.operator jule::Ptr<_1a58cee44_Data>().get()._field_model };
					
					if (_match_expr.type_is<jule::Ptr<_1ab82a5e7_BuiltinErrorCallExprModel>>()) {
						_case_begin_1a8ce7721:;
						{
							return true;
						}
					}
					else {
						_case_begin_1a8ce81a0:;
						{
							return false;
						}
					}
					_match_end_1a8ce814a:;
				}
			}
		}
		else {
			_case_begin_1a8ce7479:;
			{
				return true;
			}
		}
		_match_end_1a8ce7424:;
	}
}



inline jule::Bool _1a6341d06_is_builtin_call_has_debuginf(jule::Ptr<_1ab81a0ed_FnCallExprModel>& _128434_m) {
	if ((!(_1ab837093_is_builtin(_128434_m.get()._field_func.ptr())))) {
		return false;
	}
	{
		auto &_match_expr{ _128434_m.get()._field_expr };
		
		if (_match_expr.type_is<jule::Ptr<_1ab82106b_CommonSubIdentExprModel>>()) {
			_case_begin_1a8ce9657:;
			{
				jule::Ptr<_1ab82106b_CommonSubIdentExprModel> _129013_csie = _128434_m.get()._field_expr.operator jule::Ptr<_1ab82106b_CommonSubIdentExprModel>();
				return (_129013_csie.get()._field_ident == jule::Str("swap", 4));
			}
		}
		else {
			_case_begin_1a8ce8eb4:;
			{
				return false;
			}
		}
		_match_end_1a8ce8e5e:;
	}
}



inline jule::Bool _1a63a68c6_is_cpp_header_file(jule::Str _119923_path) {
	jule::I64 _12009_offset = _1c4783405_find_last_byte(_119923_path,'.');
	if ((_12009_offset == -1LL)) {
		return false;
	}
	return _1c47ee21d_is_valid_header_ext(_119923_path.slice(_12009_offset));
}



inline jule::Ptr<_1dd583043_Directive> _1a63a782d_find_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _3024_directives,jule::Str _3055_tag) {
	{
		auto &expr = _3024_directives;
		auto it = expr.begin();
		_iter_begin_1a8ceb538:;
		if (it != expr.end()) {
			jule::Ptr<_1dd583043_Directive> _1a8ceb626_dr = *it;
			{
				if (_1a8ceb626_dr.get()._field_tag._field_kind == _3055_tag) {
					return _1a8ceb626_dr;
				}
			}
			_iter_next_1a8ceb538:;
			++it;
			goto _iter_begin_1a8ceb538;
		}
		_iter_end_1a8ceb538:;
	}
	return nullptr;
}



inline jule::Bool _1a63a7c6d_has_directive(jule::Slice<jule::Ptr<_1dd583043_Directive>>& _4019_directives,jule::Str _4050_tag) {
	return (_1a63a782d_find_directive(_4019_directives,_4050_tag) != nullptr);
}



inline void _1c47e50c1_print_error_message(jule::Str _3124_msg) {
	jule::outln(_3124_msg);
}



inline void _1c4794d0c_help(jule::Slice<jule::Str>& _3610_args) {
	if ((_3610_args.len() > 2LL)) {
		_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _3610_args[2LL]);
		return;
	}
	jule::I64 _4213_max = _1c47b9d65_HELP_MAP[0LL][0LL].len();
	{
		auto &expr = _1c47b9d65_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1a8d532b5:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_1a8d54959_k = *it;
			{
				jule::I64 _4413_n = _1a8d54959_k[0LL].len();
				if (_4413_n > _4213_max) {
					_4213_max=_4413_n;
				}
			}
			_iter_next_1a8d532b5:;
			++it;
			goto _iter_begin_1a8d532b5;
		}
		_iter_end_1a8d532b5:;
	}
	jule::Str _5013_s = jule::Str();
	
	{
		auto &expr = _1c47b9d65_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_1a8d55ecc:;
		if (it != expr.end()) {
			jule::I64 _1a8d561ec_i = it - expr.begin();
			jule::Array<jule::Str,2> &_1a8d56373_part = *it;
			{
				_5013_s+=_1a8d56373_part[0LL];
				_5013_s+=_1c3ad1c93_repeat(jule::Str(" ", 1),static_cast<jule::I64>((static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I64>(_4213_max - static_cast<jule::I64>(static_cast<jule::I64>(_1a8d56373_part[0LL].len()))))) + 5LL)));
				_5013_s+=_1a8d56373_part[1LL];
				if (((_1a8d561ec_i + 1LL) < 5LL)) {
					_5013_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_1a8d55ecc:;
			++it;
			_1a8d561ec_i++;
			goto _iter_begin_1a8d55ecc;
		}
		_iter_end_1a8d55ecc:;
	}
	jule::outln(_5013_s);
}



inline void _1c47cba25_version(jule::Slice<jule::Str>& _6413_args) {
	if ((_6413_args.len() > 2LL)) {
		_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _6413_args[2LL]);
		return;
	}
	jule::outln(jule::Str("jule0.0.10 @master", 18));
}



inline void _1c47d1024_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &expr = _1c4813e58_DISTOS;
		auto it = expr.begin();
		_iter_begin_1a8d59a4c:;
		if (it != expr.end()) {
			jule::Str &_1a8d59dc1_os = *it;
			{
				jule::out(_1a8d59dc1_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1a8d59a4c:;
			++it;
			goto _iter_begin_1a8d59a4c;
		}
		_iter_end_1a8d59a4c:;
	}
	jule::outln(jule::Str());
}



inline void _1c47da56c_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &expr = _1c4814189_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1a8d5a300:;
		if (it != expr.end()) {
			jule::Str &_1a8d5aa92_arch = *it;
			{
				jule::out(_1a8d5aa92_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_1a8d5a300:;
			++it;
			goto _iter_begin_1a8d5a300;
		}
		_iter_end_1a8d5a300:;
	}
	jule::outln(jule::Str());
}



inline void _1c47e2c28_tool(jule::Slice<jule::Str>& _9310_args) {
	if ((_9310_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((_9310_args.len() > 3LL)) {
		_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _9310_args[3LL]);
		return;
	}
	jule::Str _1049_cmd = _9310_args[2LL];
	{
		auto &_match_expr{ _1049_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a8d5d7ed:;
			{
				_1c47d1024_tool_distos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a8d5d479:;
			{
				_1c47da56c_tool_distarch();
			}
		}
		else {
			_case_begin_1a8d5ae05:;
			{
				_1c47e50c1_print_error_message(jule::Str("undefined command: ", 19) + _1049_cmd);
			}
		}
		_match_end_1a8d5d116:;
	}
}



inline void _1c4840baa_julenv(jule::Slice<jule::Str>& _11312_args) {
	if ((_11312_args.len() > 2LL)) {
		_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _11312_args[2LL]);
		return;
	}
	jule::outln(jule::Str("julec version: jule0.0.10 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln(jule::Str("default compiler: ", 18) + _1dc25353e_COMPILER);
	jule::outln(jule::Str("default C++ standard: ", 22) + _1dc2538e6_CPP_STD);
}



inline void _1c4793756_mod(jule::Slice<jule::Str>& _1269_args) {
	if ((_1269_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;
	}
	if ((_1269_args.len() > 3LL)) {
		_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[3LL]);
		return;
	}
	{
		auto &_match_expr{ _1269_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a8d632e7:;
			{
				({
					auto except = static__1dc2c8d45_write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_1c47e50c1_print_error_message(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a8d615c0:;
			{
				_1c47e50c1_print_error_message(jule::Str("invalid command: ", 17) + _1269_args[2LL]);
			}
		}
		_match_end_1a8d62d1e:;
	}
}



inline jule::Bool _1c47dd262_process_command(jule::Slice<jule::Str>& _15021_args) {
	{
		auto &_match_expr{ _15021_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a8d6543c:;
			{
				_1c4794d0c_help(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a8d65508:;
			{
				_1c47cba25_version(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a8d6556e:;
			{
				_1c47e2c28_tool(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a8d64b78:;
			{
				_1c4840baa_julenv(_15021_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a8d64bde:;
			{
				_1c4793756_mod(_15021_args);
			}
		}
		else {
			_case_begin_1a8d651c8:;
			{
				return false;
			}
		}
		_match_end_1a8d64749:;
	}
	return true;
}



inline void _1c47ddd45_show_info(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18013_args = _1dc401da2_args();
	if ((_18013_args.len() < 2LL)) {
		_1c47ddd45_show_info();
		return;
	}
	if (_1c47dd262_process_command(_18013_args)) {
		return;
	}
	_1a63ca125_compile_command(_18013_args);
}



inline void _1a5a94119_init(void) {
	_1dc25353e_COMPILER=jule::Str("clang", 5);
}



inline void _1a63b28e3_write_output(jule::Str _5017_path,jule::Str _5028_content) {
	jule::Str _519_dir = _1c478a891_dir(_5017_path);
	({
		auto except = static__1dc30a4a3_of(_519_dir);
		if (!except.ok()) {
			({
				auto except = static__1c478d564_create(_519_dir);
				if (!except.ok()) {
					_1a59d2057_throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	({
		auto except = static__1dc2c8d45_write(_5017_path,static_cast<jule::Slice<jule::U8>>(_5028_content),432LL);
		if (!except.ok()) {
			_1a59d2057_throw(jule::Str("a problem occurs when code generation", 37));
		}
	});
}



inline void _1a63b8c7e_clear_objects(void) {
	({
		auto except = static__1dc2c4527_remove(_1a63c8d49_get_compile_path());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;
		}
	});
	static__1c478d7d9_remove(_1a5a5bca2_OUT_DIR);
}



inline void _1a63c7d26_compile_ir(jule::Str _7815_compiler,jule::Str _7830_compiler_cmd) {
	jule::Ptr<_1c484ad6e_Cmd> _7913_cmd = static__1c484b512_new(_7815_compiler);
	_7913_cmd.get()._field_args=jule::Slice<jule::Str>({_7815_compiler});
	_7913_cmd.get()._field_args=jule::append(_7913_cmd.get()._field_args,_1c4783c85_split(_7830_compiler_cmd,jule::Str(" ", 1),-1LL));
	jule::I64 _829_status = ({
		auto except = _1c484b7dc_spawn(_7913_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (_match_expr == static_cast<jule::I64>(12LL)) {
					_case_begin_1a8d6e9eb:;
					{
						static__1a59ce96c_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(3LL)) {
					_case_begin_1a8d6e7dc:;
					{
						static__1a59ce96c_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(9LL)) {
					_case_begin_1a8d6e853:;
					{
						static__1a59ce96c_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (_match_expr == static_cast<jule::I64>(0LL)) {
					_case_begin_1a8d6e8b9:;
					{
						static__1a59ce96c_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a8d6e534:;
					{
						static__1a59ce96c_print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1a8d6e5bc:;
			}
			_1a59d2057_throw(jule::Str());
			0LL;
		});
	});
	if ((_829_status != 0LL)) {
		jule::Str _9913_error_message = ((jule::Str("\n>>> your backend compiler (", 28) + _1dc25353e_COMPILER) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));
		static__1a59ce96c_print(jule::Str("\033[31m", 5),_9913_error_message);
		_1a59d2057_throw(jule::Str());
	}
	_1a63b8c7e_clear_objects();
}



inline void _1a63c862e_do_spell(jule::Str _11013_obj,jule::Str _11023_compiler,jule::Str _11038_compiler_cmd) {
	jule::Str _1119_path = _1a63c8d49_get_compile_path();
	_1a63b28e3_write_output(_1119_path,_11013_obj);
	if ((!(_1dc253c9d_TRANSPILATION))) {
		_1a63c7d26_compile_ir(_11023_compiler,_11038_compiler_cmd);
	}
}



inline jule::Bool _1a63c8794_is_cpp_source_file(jule::Str _11823_path) {
	jule::I64 _1199_offset = _1c4783405_find_last_byte(_11823_path,'.');
	if ((_1199_offset == -1LL)) {
		return false;
	}
	return _1c47ee40a_is_valid_cpp_ext(_11823_path.slice(_1199_offset));
}



inline void _1a63c8909_push_comp_cmd_clang(jule::Str& _12629_cmd) {
	_12629_cmd+=jule::Str("-Wno-everything ", 16);
	_12629_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1dc2538e6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a8d76ecb:;
			{
				_12629_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a8d77042:;
			{
				_12629_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a8d770a8:;
			{
				_12629_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a8d76dcc:;
	}
	_12629_cmd+=jule::Str(" ", 1);
	if (_1dc2523c8_PRODUCTION) {
		_12629_cmd+=jule::Str("-O3 ", 4);
		_12629_cmd+=jule::Str("-flto ", 6);
		_12629_cmd+=jule::Str("-DNDEBUG ", 9);
		_12629_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_12629_cmd+=jule::Str("-O0 ", 4);
	}
}



inline void _1a63c8a6e_push_comp_cmd_gcc(jule::Str& _14927_cmd) {
	_14927_cmd+=jule::Str("-w ", 3);
	_14927_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1dc2538e6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a8d7711e:;
			{
				_14927_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a8d797d6:;
			{
				_14927_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a8d7984c:;
			{
				_14927_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a8d79682:;
	}
	_14927_cmd+=jule::Str(" ", 1);
	if (_1dc2523c8_PRODUCTION) {
		_14927_cmd+=jule::Str("-O3 ", 4);
		_14927_cmd+=jule::Str("-DNDEBUG ", 9);
		_14927_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_14927_cmd+=jule::Str("-O0 ", 4);
	}
}



inline std::tuple<jule::Str,jule::Str> _1a63c8bd4_gen_compile_cmd(jule::Str _17220_source_path,jule::Ptr<_1a59a1895_IR>& _17239_ir) {
	jule::Str &_17310_compiler = _1dc25373c_COMPILER_PATH;
	jule::Str _17413_cmd = jule::Str();
	{
		auto &_match_expr{ _1dc25353e_COMPILER };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a8d7bd8d:;
			{
				_1a63c8a6e_push_comp_cmd_gcc(_17413_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a8d7c278:;
			{
				_1a63c8909_push_comp_cmd_clang(_17413_cmd);
			}
		}
		_match_end_1a8d7c19b:;
	}
	{
		auto &expr = _17239_ir.get()._field_passes;
		auto it = expr.begin();
		_iter_begin_1a8d7d268:;
		if (it != expr.end()) {
			jule::Str &_1a8d7c586_pass = *it;
			{
				_17413_cmd+=_1a8d7c586_pass;
				_17413_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1a8d7d268:;
			++it;
			goto _iter_begin_1a8d7d268;
		}
		_iter_end_1a8d7d268:;
	}
	{
		auto &expr = _17239_ir.get()._field_used;
		auto it = expr.begin();
		_iter_begin_1a8d7da93:;
		if (it != expr.end()) {
			jule::Ptr<_1ac580d41_ImportInfo> &_1a8d7d4ee_u = *it;
			{
				if (_1a8d7d4ee_u.get()._field_cpp_linked && _1a63c8794_is_cpp_source_file(_1a8d7d4ee_u.get()._field_path)) {
					_17413_cmd+=_1a8d7d4ee_u.get()._field_path;
					_17413_cmd+=jule::Str(" ", 1);
				}
			}
			_iter_next_1a8d7da93:;
			++it;
			goto _iter_begin_1a8d7da93;
		}
		_iter_end_1a8d7da93:;
	}
	if ((!(_1a5a5e821_OUT.empty()))) {
		_17413_cmd+=jule::Str("-o ", 3);
		_17413_cmd+=_1a5a5e821_OUT;
		_17413_cmd+=jule::Str(" ", 1);
	}
	_17413_cmd+=_17220_source_path;
	return std::make_tuple(_17310_compiler,_17413_cmd);
}



inline jule::Str _1a63c8d49_get_compile_path(void) {
	return _1c4789ac1_join(jule::Slice<jule::Str>({_1a5a5bca2_OUT_DIR,_1a5a5cbd7_OUT_NAME}));
}



inline void _1a63c8eae_apply_target_independent_optimizations(jule::Ptr<_1a59a1895_IR>& _21548_ir) {
	if (_1dc25261a_OPT_DEADCODE) {
		_1a59aa8b0_eliminate_defines(_21548_ir);
	}
	jule::Ptr<_1a633317c_Optimizer> _22213_opt = static__1a6333743_new(_21548_ir);
	_1a633516d_optimize(_22213_opt.ptr());
	if (_1dc25261a_OPT_DEADCODE) {
		_1a59ad97e_eliminate_scopes(_21548_ir);
	}
}



inline void _1a63c9124_check_compiler_flag(void) {
	{
		auto &_match_expr{ _1dc25353e_COMPILER };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a8d82778:;
			{
				_1a59d2057_throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a8d82d2d:;
			{
				if (_1dc25373c_COMPILER_PATH.empty()) {
					_1dc25373c_COMPILER_PATH=jule::Str("clang++", 7);
				}
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a8d81ed6:;
			{
				if (_1dc25373c_COMPILER_PATH.empty()) {
					_1dc25373c_COMPILER_PATH=jule::Str("g++", 3);
				}
			}
		}
		else {
			_case_begin_1a8d81e1a:;
			{
				_1a59d2057_throw(jule::Str("invalid option value for --compiler: ", 37) + _1dc25353e_COMPILER);
			}
		}
		_match_end_1a8d82338:;
	}
}



inline void _1a63c9289_check_target_arch(jule::Str _24822_arch) {
	{
		auto &expr = _1c4814189_DISTARCH;
		auto it = expr.begin();
		_iter_begin_1a8d83aa9:;
		if (it != expr.end()) {
			jule::Str &_1a8d8301a_distarch = *it;
			{
				if (_24822_arch == _1a8d8301a_distarch) {
					return;
				}
			}
			_iter_next_1a8d83aa9:;
			++it;
			goto _iter_begin_1a8d83aa9;
		}
		_iter_end_1a8d83aa9:;
	}
	_1a59d2057_throw(jule::Str("--target: unsupported/undefined architecture: ", 46) + _24822_arch);
}



inline void _1a63c93ee_check_target_os(jule::Str _25720_os) {
	{
		auto &expr = _1c4813e58_DISTOS;
		auto it = expr.begin();
		_iter_begin_1a8d857d1:;
		if (it != expr.end()) {
			jule::Str &_1a8d85858_distos = *it;
			{
				if (_25720_os == _1a8d85858_distos) {
					return;
				}
			}
			_iter_next_1a8d857d1:;
			++it;
			goto _iter_begin_1a8d857d1;
		}
		_iter_end_1a8d857d1:;
	}
	_1a59d2057_throw(jule::Str("--target: unsupported/undefined operating system: ", 50) + _25720_os);
}



inline void _1a63c9564_check_target_flag(jule::Str& _26623_target) {
	if (_26623_target.empty()) {
		_1a59d2057_throw(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2719_parts = _1c4783c85_split(_26623_target,jule::Str("-", 1),-1LL);
	if ((_2719_parts.len() != 2LL)) {
		_1a59d2057_throw(jule::Str("--target: undefined platform target format: ", 44) + _26623_target);
	}
	jule::Str _27610_os = _2719_parts[0LL];
	jule::Str _27614_arch = _2719_parts[1LL];
	std::tie(_27610_os,_27614_arch) = std::make_tuple(_2719_parts[0LL],_2719_parts[1LL]);
	if ((_27610_os != jule::Str("native", 6))) {
		_1a63c93ee_check_target_os(_27610_os);
		_1c4823bb0_OS=_27610_os;
	}
	if ((_27614_arch != jule::Str("native", 6))) {
		_1a63c9289_check_target_arch(_27614_arch);
		_1c48491be_ARCH=_27614_arch;
	}
	_1ac555035_update_target();
}



inline void _1a63c990a_check_opt_flag(jule::Str& _28920_opt) {
	if (_28920_opt.empty()) {
		_1a59d2057_throw(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _28920_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a8d8b3ec:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a8d8b100:;
			{
				_1dc2530dd_push_opt_level(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1a8d8a83b:;
			{
				_1a59d2057_throw(jule::Str("--opt: invalid optimization level: ", 35) + _28920_opt);
			}
		}
		_match_end_1a8d8a61b:;
	}
}



inline void _1a63c9a70_check_cpp_std_flag(void) {
	{
		auto &_match_expr{ _1dc2538e6_CPP_STD };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a8d8cad5:;
			{
				goto _match_end_1a8d8b177;
			}
		}
		else {
			_case_begin_1a8d8bde2:;
			{
				_1a59d2057_throw(jule::Str("--cppstd: invalid optimization level: ", 38) + _1dc2538e6_CPP_STD);
			}
		}
		_match_end_1a8d8b177:;
	}
}



inline jule::Slice<jule::Str> _1a63c9bd5_check_flags(jule::Slice<jule::Str>& _31217_args) {
	jule::Str _31313_opt = jule::Str("L0", 2);
	jule::Str _31413_target = jule::Str("native-native", 13);
	jule::Ptr<_1a63c28c0_FlagSet> _31613_fs = static__1a63c2ddc_new();
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_31413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a5a5e821_OUT)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc253ae4_SHADOWING)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc253c9d_TRANSPILATION)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1dc25353e_COMPILER)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1dc25373c_COMPILER_PATH)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc2523c8_PRODUCTION)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc254111_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc254353_SAFETY)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1a63c542d_add_var_0(_31613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1dc2538e6_CPP_STD)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc2524e9_OPT_COPY)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc25261a_OPT_DEADCODE)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc25273b_OPT_APPEND)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc25285c_OPT_MATH)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc25297d_OPT_ACCESS)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc252a9e_OPT_INLINE)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc252cd0_OPT_PTR)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1a63c542d_add_var_1(_31613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1dc252e01_OPT_COND)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _33813_content = ({
		auto except = _1a63c3e87_parse(_31613_fs.ptr(), _31217_args);
		(except.ok()) ? (except.result) : ({
			_1a59d2057_throw(except.error.operator jule::Str());
			nullptr;
		});
	});
	_1a63c9124_check_compiler_flag();
	_1a63c9a70_check_cpp_std_flag();
	_1a63c9564_check_target_flag(_31413_target);
	_1a63c990a_check_opt_flag(_31313_opt);
	return _33813_content;
}



inline void _1a63c9d4a_setup_sema_flags(jule::I64& _35126_flags) {
	if (_1dc253ae4_SHADOWING) {
		_35126_flags|=static_cast<jule::I64>(1LL);
	}
}



inline jule::Ptr<_1a59a1895_IR> _1a63c9eb0_build_ir(jule::Slice<jule::Str>& _35714_args) {
	jule::Slice<jule::Str> _3589_content = _1a63c9bd5_check_flags(_35714_args);
	jule::I64 _36013_sema_flags = static_cast<jule::I64>(0LL);
	_1a63c9d4a_setup_sema_flags(_36013_sema_flags);
	if ((_3589_content.len() == 0LL)) {
		_1a59d2057_throw(_1c4810938_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3589_content.len() > 1LL)) {
		_1a59d2057_throw(jule::Str("undefined content: ", 19) + _3589_content[1LL]);
	}
	jule::Str _36814_path;
	jule::Bool _36820_ok;
	std::tie(_36814_path,_36820_ok) = _1c478a1dc_abs(_3589_content[0LL]);
	if ((!(_36820_ok))) {
		_1a59d2057_throw(jule::Str("compile path could not processed because of a problem", 53));
	}
	jule::Ptr<_1dc37a523_Status> _3749_inf = ({
		auto except = static__1dc30a4a3_of(_1c4820a47_PATH_STDLIB);
		(except.ok()) ? (except.result) : ({{
			_1a59d2057_throw(_1c4810938_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;
			return nullptr;
		} jule::Ptr<_1dc37a523_Status>();});
	});
	if ((!(_1dc309947_is_dir(_3749_inf.ptr())))) {
		_1a59d2057_throw(_1c4810938_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	}
	jule::Ptr<_1a59a1895_IR> _38214_ir;
	jule::Slice<_1c4810251_Log> _38218_logs;
	std::tie(_38214_ir,_38218_logs) = static__1a59a20c1_build(_36814_path,_36013_sema_flags);
	if ((_38214_ir == nullptr) && (_38218_logs == nullptr)) {
		_1a59d2057_throw(_1c4810938_logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>({jule::Any(_36814_path)})));
	}
	if ((_38218_logs != nullptr)) {
		static__1a59d16a5_print_logs(_38218_logs);
		_1a59d2057_throw(jule::Str());
	}
	return _38214_ir;
}



inline void _1a63ca125_compile_command(jule::Slice<jule::Str>& _39725_args) {
	_39725_args=_39725_args.slice(1LL);
	if ((_39725_args[0LL] == jule::Str("test", 4))) {
		_1dc253e57_TEST=true;
		_39725_args=_39725_args.slice(1LL);
	}
	jule::Ptr<_1a59a1895_IR> _40313_ir = _1a63c9eb0_build_ir(_39725_args);
	
	if ((!(_1dc253e57_TEST))) {
		jule::Ptr<_1ab832324_Fn> _40817_f = _1ac586462_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("main", 4),false);
		if ((_40817_f == nullptr)) {
			_1a59d2057_throw(_1c4810938_logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		}
		_40817_f.get()._field_statically=true;
	}
	jule::Ptr<_1ab832324_Fn> _41413_f = _1ac586462_find_fn(_40313_ir.get()._field_main.ptr(), jule::Str("init", 4),false);
	if ((_41413_f != nullptr)) {
		_41413_f.get()._field_statically=true;
	}
	_1a63c8eae_apply_target_independent_optimizations(_40313_ir);
	_1a59a2ae9_order(_40313_ir.ptr());
	jule::Str _42410_compiler;
	jule::Str _42420_compiler_cmd;
	std::tie(_42410_compiler,_42420_compiler_cmd) = _1a63c8bd4_gen_compile_cmd(_1a63c8d49_get_compile_path(),_40313_ir);
	jule::Ptr<_1a639d47d_ObjectCoder> _42613_oc = static__1a635b859_new(_40313_ir,_1a639cb42_SerializationInfo(_42410_compiler,_42420_compiler_cmd));
	jule::Str _43013_obj = _1a63a650d_serialize(_42613_oc.ptr());
	if (_1dc253e57_TEST) {
		jule::Ptr<_1a61c4716_TestCoder> _43317_tc = static__1a621d40d_new(_42613_oc);
		_1a621ea80_serialize(_43317_tc.ptr(), _43013_obj);
	}
	_1a63a6233_append_standard(_42613_oc.ptr(), _43013_obj);
	_1a63c862e_do_spell(_43013_obj,_42410_compiler,_42420_compiler_cmd);
}




void __jule_call_initializers(void) {
	_1dc2523c8_PRODUCTION = false;
	_1dc2524e9_OPT_COPY = false;
	_1dc25261a_OPT_DEADCODE = false;
	_1dc25273b_OPT_APPEND = false;
	_1dc25285c_OPT_MATH = false;
	_1dc25297d_OPT_ACCESS = false;
	_1dc252a9e_OPT_INLINE = false;
	_1dc252cd0_OPT_PTR = false;
	_1dc252e01_OPT_COND = false;
	_1dc25353e_COMPILER = jule::Str();
	_1dc25373c_COMPILER_PATH = jule::Str();
	_1dc2538e6_CPP_STD = jule::Str("cpp17", 5);
	_1dc253ae4_SHADOWING = false;
	_1dc253c9d_TRANSPILATION = false;
	_1dc253e57_TEST = false;
	_1dc254111_RC = true;
	_1dc254353_SAFETY = true;
	_1c3a8a7eb__L = jule::new_ptr<_1c3aca819_RangeTable>(_1c3aca819_RangeTable(jule::Slice<_1c3ac9829_Range16>({_1c3ac9829_Range16(65LLU,90LLU,1LLU),_1c3ac9829_Range16(97LLU,122LLU,1LLU),_1c3ac9829_Range16(170LLU,181LLU,11LLU),_1c3ac9829_Range16(186LLU,192LLU,6LLU),_1c3ac9829_Range16(193LLU,214LLU,1LLU),_1c3ac9829_Range16(216LLU,246LLU,1LLU),_1c3ac9829_Range16(248LLU,705LLU,1LLU),_1c3ac9829_Range16(710LLU,721LLU,1LLU),_1c3ac9829_Range16(736LLU,740LLU,1LLU),_1c3ac9829_Range16(748LLU,750LLU,2LLU),_1c3ac9829_Range16(880LLU,884LLU,1LLU),_1c3ac9829_Range16(886LLU,887LLU,1LLU),_1c3ac9829_Range16(890LLU,893LLU,1LLU),_1c3ac9829_Range16(895LLU,902LLU,7LLU),_1c3ac9829_Range16(904LLU,906LLU,1LLU),_1c3ac9829_Range16(908LLU,910LLU,2LLU),_1c3ac9829_Range16(911LLU,929LLU,1LLU),_1c3ac9829_Range16(931LLU,1013LLU,1LLU),_1c3ac9829_Range16(1015LLU,1153LLU,1LLU),_1c3ac9829_Range16(1162LLU,1327LLU,1LLU),_1c3ac9829_Range16(1329LLU,1366LLU,1LLU),_1c3ac9829_Range16(1369LLU,1376LLU,7LLU),_1c3ac9829_Range16(1377LLU,1416LLU,1LLU),_1c3ac9829_Range16(1488LLU,1514LLU,1LLU),_1c3ac9829_Range16(1519LLU,1522LLU,1LLU),_1c3ac9829_Range16(1568LLU,1610LLU,1LLU),_1c3ac9829_Range16(1646LLU,1647LLU,1LLU),_1c3ac9829_Range16(1649LLU,1747LLU,1LLU),_1c3ac9829_Range16(1749LLU,1765LLU,16LLU),_1c3ac9829_Range16(1766LLU,1774LLU,8LLU),_1c3ac9829_Range16(1775LLU,1786LLU,11LLU),_1c3ac9829_Range16(1787LLU,1788LLU,1LLU),_1c3ac9829_Range16(1791LLU,1808LLU,17LLU),_1c3ac9829_Range16(1810LLU,1839LLU,1LLU),_1c3ac9829_Range16(1869LLU,1957LLU,1LLU),_1c3ac9829_Range16(1969LLU,1994LLU,25LLU),_1c3ac9829_Range16(1995LLU,2026LLU,1LLU),_1c3ac9829_Range16(2036LLU,2037LLU,1LLU),_1c3ac9829_Range16(2042LLU,2048LLU,6LLU),_1c3ac9829_Range16(2049LLU,2069LLU,1LLU),_1c3ac9829_Range16(2074LLU,2084LLU,10LLU),_1c3ac9829_Range16(2088LLU,2112LLU,24LLU),_1c3ac9829_Range16(2113LLU,2136LLU,1LLU),_1c3ac9829_Range16(2144LLU,2154LLU,1LLU),_1c3ac9829_Range16(2160LLU,2183LLU,1LLU),_1c3ac9829_Range16(2185LLU,2190LLU,1LLU),_1c3ac9829_Range16(2208LLU,2249LLU,1LLU),_1c3ac9829_Range16(2308LLU,2361LLU,1LLU),_1c3ac9829_Range16(2365LLU,2384LLU,19LLU),_1c3ac9829_Range16(2392LLU,2401LLU,1LLU),_1c3ac9829_Range16(2417LLU,2432LLU,1LLU),_1c3ac9829_Range16(2437LLU,2444LLU,1LLU),_1c3ac9829_Range16(2447LLU,2448LLU,1LLU),_1c3ac9829_Range16(2451LLU,2472LLU,1LLU),_1c3ac9829_Range16(2474LLU,2480LLU,1LLU),_1c3ac9829_Range16(2482LLU,2486LLU,4LLU),_1c3ac9829_Range16(2487LLU,2489LLU,1LLU),_1c3ac9829_Range16(2493LLU,2510LLU,17LLU),_1c3ac9829_Range16(2524LLU,2525LLU,1LLU),_1c3ac9829_Range16(2527LLU,2529LLU,1LLU),_1c3ac9829_Range16(2544LLU,2545LLU,1LLU),_1c3ac9829_Range16(2556LLU,2565LLU,9LLU),_1c3ac9829_Range16(2566LLU,2570LLU,1LLU),_1c3ac9829_Range16(2575LLU,2576LLU,1LLU),_1c3ac9829_Range16(2579LLU,2600LLU,1LLU),_1c3ac9829_Range16(2602LLU,2608LLU,1LLU),_1c3ac9829_Range16(2610LLU,2611LLU,1LLU),_1c3ac9829_Range16(2613LLU,2614LLU,1LLU),_1c3ac9829_Range16(2616LLU,2617LLU,1LLU),_1c3ac9829_Range16(2649LLU,2652LLU,1LLU),_1c3ac9829_Range16(2654LLU,2674LLU,20LLU),_1c3ac9829_Range16(2675LLU,2676LLU,1LLU),_1c3ac9829_Range16(2693LLU,2701LLU,1LLU),_1c3ac9829_Range16(2703LLU,2705LLU,1LLU),_1c3ac9829_Range16(2707LLU,2728LLU,1LLU),_1c3ac9829_Range16(2730LLU,2736LLU,1LLU),_1c3ac9829_Range16(2738LLU,2739LLU,1LLU),_1c3ac9829_Range16(2741LLU,2745LLU,1LLU),_1c3ac9829_Range16(2749LLU,2768LLU,19LLU),_1c3ac9829_Range16(2784LLU,2785LLU,1LLU),_1c3ac9829_Range16(2809LLU,2821LLU,12LLU),_1c3ac9829_Range16(2822LLU,2828LLU,1LLU),_1c3ac9829_Range16(2831LLU,2832LLU,1LLU),_1c3ac9829_Range16(2835LLU,2856LLU,1LLU),_1c3ac9829_Range16(2858LLU,2864LLU,1LLU),_1c3ac9829_Range16(2866LLU,2867LLU,1LLU),_1c3ac9829_Range16(2869LLU,2873LLU,1LLU),_1c3ac9829_Range16(2877LLU,2908LLU,31LLU),_1c3ac9829_Range16(2909LLU,2911LLU,2LLU),_1c3ac9829_Range16(2912LLU,2913LLU,1LLU),_1c3ac9829_Range16(2929LLU,2947LLU,18LLU),_1c3ac9829_Range16(2949LLU,2954LLU,1LLU),_1c3ac9829_Range16(2958LLU,2960LLU,1LLU),_1c3ac9829_Range16(2962LLU,2965LLU,1LLU),_1c3ac9829_Range16(2969LLU,2970LLU,1LLU),_1c3ac9829_Range16(2972LLU,2974LLU,2LLU),_1c3ac9829_Range16(2975LLU,2979LLU,4LLU),_1c3ac9829_Range16(2980LLU,2984LLU,4LLU),_1c3ac9829_Range16(2985LLU,2986LLU,1LLU),_1c3ac9829_Range16(2990LLU,3001LLU,1LLU),_1c3ac9829_Range16(3024LLU,3077LLU,53LLU),_1c3ac9829_Range16(3078LLU,3084LLU,1LLU),_1c3ac9829_Range16(3086LLU,3088LLU,1LLU),_1c3ac9829_Range16(3090LLU,3112LLU,1LLU),_1c3ac9829_Range16(3114LLU,3129LLU,1LLU),_1c3ac9829_Range16(3133LLU,3160LLU,27LLU),_1c3ac9829_Range16(3161LLU,3162LLU,1LLU),_1c3ac9829_Range16(3165LLU,3168LLU,3LLU),_1c3ac9829_Range16(3169LLU,3200LLU,31LLU),_1c3ac9829_Range16(3205LLU,3212LLU,1LLU),_1c3ac9829_Range16(3214LLU,3216LLU,1LLU),_1c3ac9829_Range16(3218LLU,3240LLU,1LLU),_1c3ac9829_Range16(3242LLU,3251LLU,1LLU),_1c3ac9829_Range16(3253LLU,3257LLU,1LLU),_1c3ac9829_Range16(3261LLU,3293LLU,32LLU),_1c3ac9829_Range16(3294LLU,3296LLU,2LLU),_1c3ac9829_Range16(3297LLU,3313LLU,16LLU),_1c3ac9829_Range16(3314LLU,3332LLU,18LLU),_1c3ac9829_Range16(3333LLU,3340LLU,1LLU),_1c3ac9829_Range16(3342LLU,3344LLU,1LLU),_1c3ac9829_Range16(3346LLU,3386LLU,1LLU),_1c3ac9829_Range16(3389LLU,3406LLU,17LLU),_1c3ac9829_Range16(3412LLU,3414LLU,1LLU),_1c3ac9829_Range16(3423LLU,3425LLU,1LLU),_1c3ac9829_Range16(3450LLU,3455LLU,1LLU),_1c3ac9829_Range16(3461LLU,3478LLU,1LLU),_1c3ac9829_Range16(3482LLU,3505LLU,1LLU),_1c3ac9829_Range16(3507LLU,3515LLU,1LLU),_1c3ac9829_Range16(3517LLU,3520LLU,3LLU),_1c3ac9829_Range16(3521LLU,3526LLU,1LLU),_1c3ac9829_Range16(3585LLU,3632LLU,1LLU),_1c3ac9829_Range16(3634LLU,3635LLU,1LLU),_1c3ac9829_Range16(3648LLU,3654LLU,1LLU),_1c3ac9829_Range16(3713LLU,3714LLU,1LLU),_1c3ac9829_Range16(3716LLU,3718LLU,2LLU),_1c3ac9829_Range16(3719LLU,3722LLU,1LLU),_1c3ac9829_Range16(3724LLU,3747LLU,1LLU),_1c3ac9829_Range16(3749LLU,3751LLU,2LLU),_1c3ac9829_Range16(3752LLU,3760LLU,1LLU),_1c3ac9829_Range16(3762LLU,3763LLU,1LLU),_1c3ac9829_Range16(3773LLU,3776LLU,3LLU),_1c3ac9829_Range16(3777LLU,3780LLU,1LLU),_1c3ac9829_Range16(3782LLU,3804LLU,22LLU),_1c3ac9829_Range16(3805LLU,3807LLU,1LLU),_1c3ac9829_Range16(3840LLU,3904LLU,64LLU),_1c3ac9829_Range16(3905LLU,3911LLU,1LLU),_1c3ac9829_Range16(3913LLU,3948LLU,1LLU),_1c3ac9829_Range16(3976LLU,3980LLU,1LLU),_1c3ac9829_Range16(4096LLU,4138LLU,1LLU),_1c3ac9829_Range16(4159LLU,4176LLU,17LLU),_1c3ac9829_Range16(4177LLU,4181LLU,1LLU),_1c3ac9829_Range16(4186LLU,4189LLU,1LLU),_1c3ac9829_Range16(4193LLU,4197LLU,4LLU),_1c3ac9829_Range16(4198LLU,4206LLU,8LLU),_1c3ac9829_Range16(4207LLU,4208LLU,1LLU),_1c3ac9829_Range16(4213LLU,4225LLU,1LLU),_1c3ac9829_Range16(4238LLU,4256LLU,18LLU),_1c3ac9829_Range16(4257LLU,4293LLU,1LLU),_1c3ac9829_Range16(4295LLU,4301LLU,6LLU),_1c3ac9829_Range16(4304LLU,4346LLU,1LLU),_1c3ac9829_Range16(4348LLU,4680LLU,1LLU),_1c3ac9829_Range16(4682LLU,4685LLU,1LLU),_1c3ac9829_Range16(4688LLU,4694LLU,1LLU),_1c3ac9829_Range16(4696LLU,4698LLU,2LLU),_1c3ac9829_Range16(4699LLU,4701LLU,1LLU),_1c3ac9829_Range16(4704LLU,4744LLU,1LLU),_1c3ac9829_Range16(4746LLU,4749LLU,1LLU),_1c3ac9829_Range16(4752LLU,4784LLU,1LLU),_1c3ac9829_Range16(4786LLU,4789LLU,1LLU),_1c3ac9829_Range16(4792LLU,4798LLU,1LLU),_1c3ac9829_Range16(4800LLU,4802LLU,2LLU),_1c3ac9829_Range16(4803LLU,4805LLU,1LLU),_1c3ac9829_Range16(4808LLU,4822LLU,1LLU),_1c3ac9829_Range16(4824LLU,4880LLU,1LLU),_1c3ac9829_Range16(4882LLU,4885LLU,1LLU),_1c3ac9829_Range16(4888LLU,4954LLU,1LLU),_1c3ac9829_Range16(4992LLU,5007LLU,1LLU),_1c3ac9829_Range16(5024LLU,5109LLU,1LLU),_1c3ac9829_Range16(5112LLU,5117LLU,1LLU),_1c3ac9829_Range16(5121LLU,5740LLU,1LLU),_1c3ac9829_Range16(5743LLU,5759LLU,1LLU),_1c3ac9829_Range16(5761LLU,5786LLU,1LLU),_1c3ac9829_Range16(5792LLU,5866LLU,1LLU),_1c3ac9829_Range16(5873LLU,5880LLU,1LLU),_1c3ac9829_Range16(5888LLU,5905LLU,1LLU),_1c3ac9829_Range16(5919LLU,5937LLU,1LLU),_1c3ac9829_Range16(5952LLU,5969LLU,1LLU),_1c3ac9829_Range16(5984LLU,5996LLU,1LLU),_1c3ac9829_Range16(5998LLU,6000LLU,1LLU),_1c3ac9829_Range16(6016LLU,6067LLU,1LLU),_1c3ac9829_Range16(6103LLU,6108LLU,5LLU),_1c3ac9829_Range16(6176LLU,6264LLU,1LLU),_1c3ac9829_Range16(6272LLU,6276LLU,1LLU),_1c3ac9829_Range16(6279LLU,6312LLU,1LLU),_1c3ac9829_Range16(6314LLU,6320LLU,6LLU),_1c3ac9829_Range16(6321LLU,6389LLU,1LLU),_1c3ac9829_Range16(6400LLU,6430LLU,1LLU),_1c3ac9829_Range16(6480LLU,6509LLU,1LLU),_1c3ac9829_Range16(6512LLU,6516LLU,1LLU),_1c3ac9829_Range16(6528LLU,6571LLU,1LLU),_1c3ac9829_Range16(6576LLU,6601LLU,1LLU),_1c3ac9829_Range16(6656LLU,6678LLU,1LLU),_1c3ac9829_Range16(6688LLU,6740LLU,1LLU),_1c3ac9829_Range16(6823LLU,6917LLU,94LLU),_1c3ac9829_Range16(6918LLU,6963LLU,1LLU),_1c3ac9829_Range16(6981LLU,6988LLU,1LLU),_1c3ac9829_Range16(7043LLU,7072LLU,1LLU),_1c3ac9829_Range16(7086LLU,7087LLU,1LLU),_1c3ac9829_Range16(7098LLU,7141LLU,1LLU),_1c3ac9829_Range16(7168LLU,7203LLU,1LLU),_1c3ac9829_Range16(7245LLU,7247LLU,1LLU),_1c3ac9829_Range16(7258LLU,7293LLU,1LLU),_1c3ac9829_Range16(7296LLU,7304LLU,1LLU),_1c3ac9829_Range16(7312LLU,7354LLU,1LLU),_1c3ac9829_Range16(7357LLU,7359LLU,1LLU),_1c3ac9829_Range16(7401LLU,7404LLU,1LLU),_1c3ac9829_Range16(7406LLU,7411LLU,1LLU),_1c3ac9829_Range16(7413LLU,7414LLU,1LLU),_1c3ac9829_Range16(7418LLU,7424LLU,6LLU),_1c3ac9829_Range16(7425LLU,7615LLU,1LLU),_1c3ac9829_Range16(7680LLU,7957LLU,1LLU),_1c3ac9829_Range16(7960LLU,7965LLU,1LLU),_1c3ac9829_Range16(7968LLU,8005LLU,1LLU),_1c3ac9829_Range16(8008LLU,8013LLU,1LLU),_1c3ac9829_Range16(8016LLU,8023LLU,1LLU),_1c3ac9829_Range16(8025LLU,8031LLU,2LLU),_1c3ac9829_Range16(8032LLU,8061LLU,1LLU),_1c3ac9829_Range16(8064LLU,8116LLU,1LLU),_1c3ac9829_Range16(8118LLU,8124LLU,1LLU),_1c3ac9829_Range16(8126LLU,8130LLU,4LLU),_1c3ac9829_Range16(8131LLU,8132LLU,1LLU),_1c3ac9829_Range16(8134LLU,8140LLU,1LLU),_1c3ac9829_Range16(8144LLU,8147LLU,1LLU),_1c3ac9829_Range16(8150LLU,8155LLU,1LLU),_1c3ac9829_Range16(8160LLU,8172LLU,1LLU),_1c3ac9829_Range16(8178LLU,8180LLU,1LLU),_1c3ac9829_Range16(8182LLU,8188LLU,1LLU),_1c3ac9829_Range16(8305LLU,8319LLU,14LLU),_1c3ac9829_Range16(8336LLU,8348LLU,1LLU),_1c3ac9829_Range16(8450LLU,8455LLU,5LLU),_1c3ac9829_Range16(8458LLU,8467LLU,1LLU),_1c3ac9829_Range16(8469LLU,8473LLU,4LLU),_1c3ac9829_Range16(8474LLU,8477LLU,1LLU),_1c3ac9829_Range16(8484LLU,8490LLU,2LLU),_1c3ac9829_Range16(8491LLU,8493LLU,1LLU),_1c3ac9829_Range16(8495LLU,8505LLU,1LLU),_1c3ac9829_Range16(8508LLU,8511LLU,1LLU),_1c3ac9829_Range16(8517LLU,8521LLU,1LLU),_1c3ac9829_Range16(8526LLU,8579LLU,53LLU),_1c3ac9829_Range16(8580LLU,11264LLU,2684LLU),_1c3ac9829_Range16(11265LLU,11492LLU,1LLU),_1c3ac9829_Range16(11499LLU,11502LLU,1LLU),_1c3ac9829_Range16(11506LLU,11507LLU,1LLU),_1c3ac9829_Range16(11520LLU,11557LLU,1LLU),_1c3ac9829_Range16(11559LLU,11565LLU,6LLU),_1c3ac9829_Range16(11568LLU,11623LLU,1LLU),_1c3ac9829_Range16(11631LLU,11648LLU,17LLU),_1c3ac9829_Range16(11649LLU,11670LLU,1LLU),_1c3ac9829_Range16(11680LLU,11686LLU,1LLU),_1c3ac9829_Range16(11688LLU,11694LLU,1LLU),_1c3ac9829_Range16(11696LLU,11702LLU,1LLU),_1c3ac9829_Range16(11704LLU,11710LLU,1LLU),_1c3ac9829_Range16(11712LLU,11718LLU,1LLU),_1c3ac9829_Range16(11720LLU,11726LLU,1LLU),_1c3ac9829_Range16(11728LLU,11734LLU,1LLU),_1c3ac9829_Range16(11736LLU,11742LLU,1LLU),_1c3ac9829_Range16(11823LLU,12293LLU,470LLU),_1c3ac9829_Range16(12294LLU,12337LLU,43LLU),_1c3ac9829_Range16(12338LLU,12341LLU,1LLU),_1c3ac9829_Range16(12347LLU,12348LLU,1LLU),_1c3ac9829_Range16(12353LLU,12438LLU,1LLU),_1c3ac9829_Range16(12445LLU,12447LLU,1LLU),_1c3ac9829_Range16(12449LLU,12538LLU,1LLU),_1c3ac9829_Range16(12540LLU,12543LLU,1LLU),_1c3ac9829_Range16(12549LLU,12591LLU,1LLU),_1c3ac9829_Range16(12593LLU,12686LLU,1LLU),_1c3ac9829_Range16(12704LLU,12735LLU,1LLU),_1c3ac9829_Range16(12784LLU,12799LLU,1LLU),_1c3ac9829_Range16(13312LLU,19903LLU,1LLU),_1c3ac9829_Range16(19968LLU,42124LLU,1LLU),_1c3ac9829_Range16(42192LLU,42237LLU,1LLU),_1c3ac9829_Range16(42240LLU,42508LLU,1LLU),_1c3ac9829_Range16(42512LLU,42527LLU,1LLU),_1c3ac9829_Range16(42538LLU,42539LLU,1LLU),_1c3ac9829_Range16(42560LLU,42606LLU,1LLU),_1c3ac9829_Range16(42623LLU,42653LLU,1LLU),_1c3ac9829_Range16(42656LLU,42725LLU,1LLU),_1c3ac9829_Range16(42775LLU,42783LLU,1LLU),_1c3ac9829_Range16(42786LLU,42888LLU,1LLU),_1c3ac9829_Range16(42891LLU,42954LLU,1LLU),_1c3ac9829_Range16(42960LLU,42961LLU,1LLU),_1c3ac9829_Range16(42963LLU,42965LLU,2LLU),_1c3ac9829_Range16(42966LLU,42969LLU,1LLU),_1c3ac9829_Range16(42994LLU,43009LLU,1LLU),_1c3ac9829_Range16(43011LLU,43013LLU,1LLU),_1c3ac9829_Range16(43015LLU,43018LLU,1LLU),_1c3ac9829_Range16(43020LLU,43042LLU,1LLU),_1c3ac9829_Range16(43072LLU,43123LLU,1LLU),_1c3ac9829_Range16(43138LLU,43187LLU,1LLU),_1c3ac9829_Range16(43250LLU,43255LLU,1LLU),_1c3ac9829_Range16(43259LLU,43261LLU,2LLU),_1c3ac9829_Range16(43262LLU,43274LLU,12LLU),_1c3ac9829_Range16(43275LLU,43301LLU,1LLU),_1c3ac9829_Range16(43312LLU,43334LLU,1LLU),_1c3ac9829_Range16(43360LLU,43388LLU,1LLU),_1c3ac9829_Range16(43396LLU,43442LLU,1LLU),_1c3ac9829_Range16(43471LLU,43488LLU,17LLU),_1c3ac9829_Range16(43489LLU,43492LLU,1LLU),_1c3ac9829_Range16(43494LLU,43503LLU,1LLU),_1c3ac9829_Range16(43514LLU,43518LLU,1LLU),_1c3ac9829_Range16(43520LLU,43560LLU,1LLU),_1c3ac9829_Range16(43584LLU,43586LLU,1LLU),_1c3ac9829_Range16(43588LLU,43595LLU,1LLU),_1c3ac9829_Range16(43616LLU,43638LLU,1LLU),_1c3ac9829_Range16(43642LLU,43646LLU,4LLU),_1c3ac9829_Range16(43647LLU,43695LLU,1LLU),_1c3ac9829_Range16(43697LLU,43701LLU,4LLU),_1c3ac9829_Range16(43702LLU,43705LLU,3LLU),_1c3ac9829_Range16(43706LLU,43709LLU,1LLU),_1c3ac9829_Range16(43712LLU,43714LLU,2LLU),_1c3ac9829_Range16(43739LLU,43741LLU,1LLU),_1c3ac9829_Range16(43744LLU,43754LLU,1LLU),_1c3ac9829_Range16(43762LLU,43764LLU,1LLU),_1c3ac9829_Range16(43777LLU,43782LLU,1LLU),_1c3ac9829_Range16(43785LLU,43790LLU,1LLU),_1c3ac9829_Range16(43793LLU,43798LLU,1LLU),_1c3ac9829_Range16(43808LLU,43814LLU,1LLU),_1c3ac9829_Range16(43816LLU,43822LLU,1LLU),_1c3ac9829_Range16(43824LLU,43866LLU,1LLU),_1c3ac9829_Range16(43868LLU,43881LLU,1LLU),_1c3ac9829_Range16(43888LLU,44002LLU,1LLU),_1c3ac9829_Range16(44032LLU,55203LLU,1LLU),_1c3ac9829_Range16(55216LLU,55238LLU,1LLU),_1c3ac9829_Range16(55243LLU,55291LLU,1LLU),_1c3ac9829_Range16(63744LLU,64109LLU,1LLU),_1c3ac9829_Range16(64112LLU,64217LLU,1LLU),_1c3ac9829_Range16(64256LLU,64262LLU,1LLU),_1c3ac9829_Range16(64275LLU,64279LLU,1LLU),_1c3ac9829_Range16(64285LLU,64287LLU,2LLU),_1c3ac9829_Range16(64288LLU,64296LLU,1LLU),_1c3ac9829_Range16(64298LLU,64310LLU,1LLU),_1c3ac9829_Range16(64312LLU,64316LLU,1LLU),_1c3ac9829_Range16(64318LLU,64320LLU,2LLU),_1c3ac9829_Range16(64321LLU,64323LLU,2LLU),_1c3ac9829_Range16(64324LLU,64326LLU,2LLU),_1c3ac9829_Range16(64327LLU,64433LLU,1LLU),_1c3ac9829_Range16(64467LLU,64829LLU,1LLU),_1c3ac9829_Range16(64848LLU,64911LLU,1LLU),_1c3ac9829_Range16(64914LLU,64967LLU,1LLU),_1c3ac9829_Range16(65008LLU,65019LLU,1LLU),_1c3ac9829_Range16(65136LLU,65140LLU,1LLU),_1c3ac9829_Range16(65142LLU,65276LLU,1LLU),_1c3ac9829_Range16(65313LLU,65338LLU,1LLU),_1c3ac9829_Range16(65345LLU,65370LLU,1LLU),_1c3ac9829_Range16(65382LLU,65470LLU,1LLU),_1c3ac9829_Range16(65474LLU,65479LLU,1LLU),_1c3ac9829_Range16(65482LLU,65487LLU,1LLU),_1c3ac9829_Range16(65490LLU,65495LLU,1LLU),_1c3ac9829_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_1c3aca0bb_Range32>({_1c3aca0bb_Range32(65536LLU,65547LLU,1LLU),_1c3aca0bb_Range32(65549LLU,65574LLU,1LLU),_1c3aca0bb_Range32(65576LLU,65594LLU,1LLU),_1c3aca0bb_Range32(65596LLU,65597LLU,1LLU),_1c3aca0bb_Range32(65599LLU,65613LLU,1LLU),_1c3aca0bb_Range32(65616LLU,65629LLU,1LLU),_1c3aca0bb_Range32(65664LLU,65786LLU,1LLU),_1c3aca0bb_Range32(66176LLU,66204LLU,1LLU),_1c3aca0bb_Range32(66208LLU,66256LLU,1LLU),_1c3aca0bb_Range32(66304LLU,66335LLU,1LLU),_1c3aca0bb_Range32(66349LLU,66368LLU,1LLU),_1c3aca0bb_Range32(66370LLU,66377LLU,1LLU),_1c3aca0bb_Range32(66384LLU,66421LLU,1LLU),_1c3aca0bb_Range32(66432LLU,66461LLU,1LLU),_1c3aca0bb_Range32(66464LLU,66499LLU,1LLU),_1c3aca0bb_Range32(66504LLU,66511LLU,1LLU),_1c3aca0bb_Range32(66560LLU,66717LLU,1LLU),_1c3aca0bb_Range32(66736LLU,66771LLU,1LLU),_1c3aca0bb_Range32(66776LLU,66811LLU,1LLU),_1c3aca0bb_Range32(66816LLU,66855LLU,1LLU),_1c3aca0bb_Range32(66864LLU,66915LLU,1LLU),_1c3aca0bb_Range32(66928LLU,66938LLU,1LLU),_1c3aca0bb_Range32(66940LLU,66954LLU,1LLU),_1c3aca0bb_Range32(66956LLU,66962LLU,1LLU),_1c3aca0bb_Range32(66964LLU,66965LLU,1LLU),_1c3aca0bb_Range32(66967LLU,66977LLU,1LLU),_1c3aca0bb_Range32(66979LLU,66993LLU,1LLU),_1c3aca0bb_Range32(66995LLU,67001LLU,1LLU),_1c3aca0bb_Range32(67003LLU,67004LLU,1LLU),_1c3aca0bb_Range32(67072LLU,67382LLU,1LLU),_1c3aca0bb_Range32(67392LLU,67413LLU,1LLU),_1c3aca0bb_Range32(67424LLU,67431LLU,1LLU),_1c3aca0bb_Range32(67456LLU,67461LLU,1LLU),_1c3aca0bb_Range32(67463LLU,67504LLU,1LLU),_1c3aca0bb_Range32(67506LLU,67514LLU,1LLU),_1c3aca0bb_Range32(67584LLU,67589LLU,1LLU),_1c3aca0bb_Range32(67592LLU,67594LLU,2LLU),_1c3aca0bb_Range32(67595LLU,67637LLU,1LLU),_1c3aca0bb_Range32(67639LLU,67640LLU,1LLU),_1c3aca0bb_Range32(67644LLU,67647LLU,3LLU),_1c3aca0bb_Range32(67648LLU,67669LLU,1LLU),_1c3aca0bb_Range32(67680LLU,67702LLU,1LLU),_1c3aca0bb_Range32(67712LLU,67742LLU,1LLU),_1c3aca0bb_Range32(67808LLU,67826LLU,1LLU),_1c3aca0bb_Range32(67828LLU,67829LLU,1LLU),_1c3aca0bb_Range32(67840LLU,67861LLU,1LLU),_1c3aca0bb_Range32(67872LLU,67897LLU,1LLU),_1c3aca0bb_Range32(67968LLU,68023LLU,1LLU),_1c3aca0bb_Range32(68030LLU,68031LLU,1LLU),_1c3aca0bb_Range32(68096LLU,68112LLU,16LLU),_1c3aca0bb_Range32(68113LLU,68115LLU,1LLU),_1c3aca0bb_Range32(68117LLU,68119LLU,1LLU),_1c3aca0bb_Range32(68121LLU,68149LLU,1LLU),_1c3aca0bb_Range32(68192LLU,68220LLU,1LLU),_1c3aca0bb_Range32(68224LLU,68252LLU,1LLU),_1c3aca0bb_Range32(68288LLU,68295LLU,1LLU),_1c3aca0bb_Range32(68297LLU,68324LLU,1LLU),_1c3aca0bb_Range32(68352LLU,68405LLU,1LLU),_1c3aca0bb_Range32(68416LLU,68437LLU,1LLU),_1c3aca0bb_Range32(68448LLU,68466LLU,1LLU),_1c3aca0bb_Range32(68480LLU,68497LLU,1LLU),_1c3aca0bb_Range32(68608LLU,68680LLU,1LLU),_1c3aca0bb_Range32(68736LLU,68786LLU,1LLU),_1c3aca0bb_Range32(68800LLU,68850LLU,1LLU),_1c3aca0bb_Range32(68864LLU,68899LLU,1LLU),_1c3aca0bb_Range32(69248LLU,69289LLU,1LLU),_1c3aca0bb_Range32(69296LLU,69297LLU,1LLU),_1c3aca0bb_Range32(69376LLU,69404LLU,1LLU),_1c3aca0bb_Range32(69415LLU,69424LLU,9LLU),_1c3aca0bb_Range32(69425LLU,69445LLU,1LLU),_1c3aca0bb_Range32(69488LLU,69505LLU,1LLU),_1c3aca0bb_Range32(69552LLU,69572LLU,1LLU),_1c3aca0bb_Range32(69600LLU,69622LLU,1LLU),_1c3aca0bb_Range32(69635LLU,69687LLU,1LLU),_1c3aca0bb_Range32(69745LLU,69746LLU,1LLU),_1c3aca0bb_Range32(69749LLU,69763LLU,14LLU),_1c3aca0bb_Range32(69764LLU,69807LLU,1LLU),_1c3aca0bb_Range32(69840LLU,69864LLU,1LLU),_1c3aca0bb_Range32(69891LLU,69926LLU,1LLU),_1c3aca0bb_Range32(69956LLU,69959LLU,3LLU),_1c3aca0bb_Range32(69968LLU,70002LLU,1LLU),_1c3aca0bb_Range32(70006LLU,70019LLU,13LLU),_1c3aca0bb_Range32(70020LLU,70066LLU,1LLU),_1c3aca0bb_Range32(70081LLU,70084LLU,1LLU),_1c3aca0bb_Range32(70106LLU,70108LLU,2LLU),_1c3aca0bb_Range32(70144LLU,70161LLU,1LLU),_1c3aca0bb_Range32(70163LLU,70187LLU,1LLU),_1c3aca0bb_Range32(70207LLU,70208LLU,1LLU),_1c3aca0bb_Range32(70272LLU,70278LLU,1LLU),_1c3aca0bb_Range32(70280LLU,70282LLU,2LLU),_1c3aca0bb_Range32(70283LLU,70285LLU,1LLU),_1c3aca0bb_Range32(70287LLU,70301LLU,1LLU),_1c3aca0bb_Range32(70303LLU,70312LLU,1LLU),_1c3aca0bb_Range32(70320LLU,70366LLU,1LLU),_1c3aca0bb_Range32(70405LLU,70412LLU,1LLU),_1c3aca0bb_Range32(70415LLU,70416LLU,1LLU),_1c3aca0bb_Range32(70419LLU,70440LLU,1LLU),_1c3aca0bb_Range32(70442LLU,70448LLU,1LLU),_1c3aca0bb_Range32(70450LLU,70451LLU,1LLU),_1c3aca0bb_Range32(70453LLU,70457LLU,1LLU),_1c3aca0bb_Range32(70461LLU,70480LLU,19LLU),_1c3aca0bb_Range32(70493LLU,70497LLU,1LLU),_1c3aca0bb_Range32(70656LLU,70708LLU,1LLU),_1c3aca0bb_Range32(70727LLU,70730LLU,1LLU),_1c3aca0bb_Range32(70751LLU,70753LLU,1LLU),_1c3aca0bb_Range32(70784LLU,70831LLU,1LLU),_1c3aca0bb_Range32(70852LLU,70853LLU,1LLU),_1c3aca0bb_Range32(70855LLU,71040LLU,185LLU),_1c3aca0bb_Range32(71041LLU,71086LLU,1LLU),_1c3aca0bb_Range32(71128LLU,71131LLU,1LLU),_1c3aca0bb_Range32(71168LLU,71215LLU,1LLU),_1c3aca0bb_Range32(71236LLU,71296LLU,60LLU),_1c3aca0bb_Range32(71297LLU,71338LLU,1LLU),_1c3aca0bb_Range32(71352LLU,71424LLU,72LLU),_1c3aca0bb_Range32(71425LLU,71450LLU,1LLU),_1c3aca0bb_Range32(71488LLU,71494LLU,1LLU),_1c3aca0bb_Range32(71680LLU,71723LLU,1LLU),_1c3aca0bb_Range32(71840LLU,71903LLU,1LLU),_1c3aca0bb_Range32(71935LLU,71942LLU,1LLU),_1c3aca0bb_Range32(71945LLU,71948LLU,3LLU),_1c3aca0bb_Range32(71949LLU,71955LLU,1LLU),_1c3aca0bb_Range32(71957LLU,71958LLU,1LLU),_1c3aca0bb_Range32(71960LLU,71983LLU,1LLU),_1c3aca0bb_Range32(71999LLU,72001LLU,2LLU),_1c3aca0bb_Range32(72096LLU,72103LLU,1LLU),_1c3aca0bb_Range32(72106LLU,72144LLU,1LLU),_1c3aca0bb_Range32(72161LLU,72163LLU,2LLU),_1c3aca0bb_Range32(72192LLU,72203LLU,11LLU),_1c3aca0bb_Range32(72204LLU,72242LLU,1LLU),_1c3aca0bb_Range32(72250LLU,72272LLU,22LLU),_1c3aca0bb_Range32(72284LLU,72329LLU,1LLU),_1c3aca0bb_Range32(72349LLU,72368LLU,19LLU),_1c3aca0bb_Range32(72369LLU,72440LLU,1LLU),_1c3aca0bb_Range32(72704LLU,72712LLU,1LLU),_1c3aca0bb_Range32(72714LLU,72750LLU,1LLU),_1c3aca0bb_Range32(72768LLU,72818LLU,50LLU),_1c3aca0bb_Range32(72819LLU,72847LLU,1LLU),_1c3aca0bb_Range32(72960LLU,72966LLU,1LLU),_1c3aca0bb_Range32(72968LLU,72969LLU,1LLU),_1c3aca0bb_Range32(72971LLU,73008LLU,1LLU),_1c3aca0bb_Range32(73030LLU,73056LLU,26LLU),_1c3aca0bb_Range32(73057LLU,73061LLU,1LLU),_1c3aca0bb_Range32(73063LLU,73064LLU,1LLU),_1c3aca0bb_Range32(73066LLU,73097LLU,1LLU),_1c3aca0bb_Range32(73112LLU,73440LLU,328LLU),_1c3aca0bb_Range32(73441LLU,73458LLU,1LLU),_1c3aca0bb_Range32(73474LLU,73476LLU,2LLU),_1c3aca0bb_Range32(73477LLU,73488LLU,1LLU),_1c3aca0bb_Range32(73490LLU,73523LLU,1LLU),_1c3aca0bb_Range32(73648LLU,73728LLU,80LLU),_1c3aca0bb_Range32(73729LLU,74649LLU,1LLU),_1c3aca0bb_Range32(74880LLU,75075LLU,1LLU),_1c3aca0bb_Range32(77712LLU,77808LLU,1LLU),_1c3aca0bb_Range32(77824LLU,78895LLU,1LLU),_1c3aca0bb_Range32(78913LLU,78918LLU,1LLU),_1c3aca0bb_Range32(82944LLU,83526LLU,1LLU),_1c3aca0bb_Range32(92160LLU,92728LLU,1LLU),_1c3aca0bb_Range32(92736LLU,92766LLU,1LLU),_1c3aca0bb_Range32(92784LLU,92862LLU,1LLU),_1c3aca0bb_Range32(92880LLU,92909LLU,1LLU),_1c3aca0bb_Range32(92928LLU,92975LLU,1LLU),_1c3aca0bb_Range32(92992LLU,92995LLU,1LLU),_1c3aca0bb_Range32(93027LLU,93047LLU,1LLU),_1c3aca0bb_Range32(93053LLU,93071LLU,1LLU),_1c3aca0bb_Range32(93760LLU,93823LLU,1LLU),_1c3aca0bb_Range32(93952LLU,94026LLU,1LLU),_1c3aca0bb_Range32(94032LLU,94099LLU,67LLU),_1c3aca0bb_Range32(94100LLU,94111LLU,1LLU),_1c3aca0bb_Range32(94176LLU,94177LLU,1LLU),_1c3aca0bb_Range32(94179LLU,94208LLU,29LLU),_1c3aca0bb_Range32(94209LLU,100343LLU,1LLU),_1c3aca0bb_Range32(100352LLU,101589LLU,1LLU),_1c3aca0bb_Range32(101632LLU,101640LLU,1LLU),_1c3aca0bb_Range32(110576LLU,110579LLU,1LLU),_1c3aca0bb_Range32(110581LLU,110587LLU,1LLU),_1c3aca0bb_Range32(110589LLU,110590LLU,1LLU),_1c3aca0bb_Range32(110592LLU,110882LLU,1LLU),_1c3aca0bb_Range32(110898LLU,110928LLU,30LLU),_1c3aca0bb_Range32(110929LLU,110930LLU,1LLU),_1c3aca0bb_Range32(110933LLU,110948LLU,15LLU),_1c3aca0bb_Range32(110949LLU,110951LLU,1LLU),_1c3aca0bb_Range32(110960LLU,111355LLU,1LLU),_1c3aca0bb_Range32(113664LLU,113770LLU,1LLU),_1c3aca0bb_Range32(113776LLU,113788LLU,1LLU),_1c3aca0bb_Range32(113792LLU,113800LLU,1LLU),_1c3aca0bb_Range32(113808LLU,113817LLU,1LLU),_1c3aca0bb_Range32(119808LLU,119892LLU,1LLU),_1c3aca0bb_Range32(119894LLU,119964LLU,1LLU),_1c3aca0bb_Range32(119966LLU,119967LLU,1LLU),_1c3aca0bb_Range32(119970LLU,119973LLU,3LLU),_1c3aca0bb_Range32(119974LLU,119977LLU,3LLU),_1c3aca0bb_Range32(119978LLU,119980LLU,1LLU),_1c3aca0bb_Range32(119982LLU,119993LLU,1LLU),_1c3aca0bb_Range32(119995LLU,119997LLU,2LLU),_1c3aca0bb_Range32(119998LLU,120003LLU,1LLU),_1c3aca0bb_Range32(120005LLU,120069LLU,1LLU),_1c3aca0bb_Range32(120071LLU,120074LLU,1LLU),_1c3aca0bb_Range32(120077LLU,120084LLU,1LLU),_1c3aca0bb_Range32(120086LLU,120092LLU,1LLU),_1c3aca0bb_Range32(120094LLU,120121LLU,1LLU),_1c3aca0bb_Range32(120123LLU,120126LLU,1LLU),_1c3aca0bb_Range32(120128LLU,120132LLU,1LLU),_1c3aca0bb_Range32(120134LLU,120138LLU,4LLU),_1c3aca0bb_Range32(120139LLU,120144LLU,1LLU),_1c3aca0bb_Range32(120146LLU,120485LLU,1LLU),_1c3aca0bb_Range32(120488LLU,120512LLU,1LLU),_1c3aca0bb_Range32(120514LLU,120538LLU,1LLU),_1c3aca0bb_Range32(120540LLU,120570LLU,1LLU),_1c3aca0bb_Range32(120572LLU,120596LLU,1LLU),_1c3aca0bb_Range32(120598LLU,120628LLU,1LLU),_1c3aca0bb_Range32(120630LLU,120654LLU,1LLU),_1c3aca0bb_Range32(120656LLU,120686LLU,1LLU),_1c3aca0bb_Range32(120688LLU,120712LLU,1LLU),_1c3aca0bb_Range32(120714LLU,120744LLU,1LLU),_1c3aca0bb_Range32(120746LLU,120770LLU,1LLU),_1c3aca0bb_Range32(120772LLU,120779LLU,1LLU),_1c3aca0bb_Range32(122624LLU,122654LLU,1LLU),_1c3aca0bb_Range32(122661LLU,122666LLU,1LLU),_1c3aca0bb_Range32(122928LLU,122989LLU,1LLU),_1c3aca0bb_Range32(123136LLU,123180LLU,1LLU),_1c3aca0bb_Range32(123191LLU,123197LLU,1LLU),_1c3aca0bb_Range32(123214LLU,123536LLU,322LLU),_1c3aca0bb_Range32(123537LLU,123565LLU,1LLU),_1c3aca0bb_Range32(123584LLU,123627LLU,1LLU),_1c3aca0bb_Range32(124112LLU,124139LLU,1LLU),_1c3aca0bb_Range32(124896LLU,124902LLU,1LLU),_1c3aca0bb_Range32(124904LLU,124907LLU,1LLU),_1c3aca0bb_Range32(124909LLU,124910LLU,1LLU),_1c3aca0bb_Range32(124912LLU,124926LLU,1LLU),_1c3aca0bb_Range32(124928LLU,125124LLU,1LLU),_1c3aca0bb_Range32(125184LLU,125251LLU,1LLU),_1c3aca0bb_Range32(125259LLU,126464LLU,1205LLU),_1c3aca0bb_Range32(126465LLU,126467LLU,1LLU),_1c3aca0bb_Range32(126469LLU,126495LLU,1LLU),_1c3aca0bb_Range32(126497LLU,126498LLU,1LLU),_1c3aca0bb_Range32(126500LLU,126503LLU,3LLU),_1c3aca0bb_Range32(126505LLU,126514LLU,1LLU),_1c3aca0bb_Range32(126516LLU,126519LLU,1LLU),_1c3aca0bb_Range32(126521LLU,126523LLU,2LLU),_1c3aca0bb_Range32(126530LLU,126535LLU,5LLU),_1c3aca0bb_Range32(126537LLU,126541LLU,2LLU),_1c3aca0bb_Range32(126542LLU,126543LLU,1LLU),_1c3aca0bb_Range32(126545LLU,126546LLU,1LLU),_1c3aca0bb_Range32(126548LLU,126551LLU,3LLU),_1c3aca0bb_Range32(126553LLU,126561LLU,2LLU),_1c3aca0bb_Range32(126562LLU,126564LLU,2LLU),_1c3aca0bb_Range32(126567LLU,126570LLU,1LLU),_1c3aca0bb_Range32(126572LLU,126578LLU,1LLU),_1c3aca0bb_Range32(126580LLU,126583LLU,1LLU),_1c3aca0bb_Range32(126585LLU,126588LLU,1LLU),_1c3aca0bb_Range32(126590LLU,126592LLU,2LLU),_1c3aca0bb_Range32(126593LLU,126601LLU,1LLU),_1c3aca0bb_Range32(126603LLU,126619LLU,1LLU),_1c3aca0bb_Range32(126625LLU,126627LLU,1LLU),_1c3aca0bb_Range32(126629LLU,126633LLU,1LLU),_1c3aca0bb_Range32(126635LLU,126651LLU,1LLU),_1c3aca0bb_Range32(131072LLU,173791LLU,1LLU),_1c3aca0bb_Range32(173824LLU,177977LLU,1LLU),_1c3aca0bb_Range32(177984LLU,178205LLU,1LLU),_1c3aca0bb_Range32(178208LLU,183969LLU,1LLU),_1c3aca0bb_Range32(183984LLU,191456LLU,1LLU),_1c3aca0bb_Range32(194560LLU,195101LLU,1LLU),_1c3aca0bb_Range32(196608LLU,201546LLU,1LLU),_1c3aca0bb_Range32(201552LLU,205743LLU,1LLU)}),6LL));
	_1c3a9001a_LETTER = _1c3a8a7eb__L;
	_1c3ac4eea__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
	_1c477ce05_FIRST = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
	_1c477baa2_ACCEPT_RANGES = jule::Array<_1c477d499_accept_range,16>({_1c477d499_accept_range(128LLU,191LLU),_1c477d499_accept_range(160LLU,191LLU),_1c477d499_accept_range(128LLU,159LLU),_1c477d499_accept_range(144LLU,191LLU),_1c477d499_accept_range(128LLU,143LLU)});
	_1c478e7da_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
	_1c47ec86a_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
	_1c47ede87_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
	_1c4813e58_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
	_1c4814189_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
	_1c4820a47_PATH_STDLIB = jule::Str();
	_1c4834187_PATH_EXEC = jule::Str();
	_1c4821d56_PATH_WD = jule::Str();
	_1c4823396_PATH_API = jule::Str();
	_1c4823bb0_OS = jule::Str("darwin", 6);
	_1c48491be_ARCH = jule::Str("amd64", 5);
	_1dd5c5ea9_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
	_1dd5c52d8_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
	_1dd5c5409_BIN_OPS = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
	_1dd5c564b_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
	_1aa06ce5c_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
	_1aa07e8db_KEYWORDS = jule::Array<_1aa07e3ad_KindPair,47>({_1aa07e3ad_KindPair(jule::Str("i8", 2),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("i16", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("i32", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("i64", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("u8", 2),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("u16", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("u32", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("u64", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("f32", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("f64", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("uint", 4),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("int", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("uintptr", 7),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("bool", 4),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("str", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("any", 3),static_cast<jule::U64>(1LLU)),_1aa07e3ad_KindPair(jule::Str("true", 4),static_cast<jule::U64>(6LLU)),_1aa07e3ad_KindPair(jule::Str("false", 5),static_cast<jule::U64>(6LLU)),_1aa07e3ad_KindPair(jule::Str("nil", 3),static_cast<jule::U64>(6LLU)),_1aa07e3ad_KindPair(jule::Str("const", 5),static_cast<jule::U64>(9LLU)),_1aa07e3ad_KindPair(jule::Str("ret", 3),static_cast<jule::U64>(4LLU)),_1aa07e3ad_KindPair(jule::Str("type", 4),static_cast<jule::U64>(10LLU)),_1aa07e3ad_KindPair(jule::Str("for", 3),static_cast<jule::U64>(12LLU)),_1aa07e3ad_KindPair(jule::Str("break", 5),static_cast<jule::U64>(13LLU)),_1aa07e3ad_KindPair(jule::Str("continue", 8),static_cast<jule::U64>(14LLU)),_1aa07e3ad_KindPair(jule::Str("in", 2),static_cast<jule::U64>(15LLU)),_1aa07e3ad_KindPair(jule::Str("if", 2),static_cast<jule::U64>(16LLU)),_1aa07e3ad_KindPair(jule::Str("else", 4),static_cast<jule::U64>(17LLU)),_1aa07e3ad_KindPair(jule::Str("use", 3),static_cast<jule::U64>(19LLU)),_1aa07e3ad_KindPair(jule::Str("pub", 3),static_cast<jule::U64>(21LLU)),_1aa07e3ad_KindPair(jule::Str("goto", 4),static_cast<jule::U64>(22LLU)),_1aa07e3ad_KindPair(jule::Str("enum", 4),static_cast<jule::U64>(24LLU)),_1aa07e3ad_KindPair(jule::Str("struct", 6),static_cast<jule::U64>(25LLU)),_1aa07e3ad_KindPair(jule::Str("co", 2),static_cast<jule::U64>(26LLU)),_1aa07e3ad_KindPair(jule::Str("match", 5),static_cast<jule::U64>(27LLU)),_1aa07e3ad_KindPair(jule::Str("self", 4),static_cast<jule::U64>(28LLU)),_1aa07e3ad_KindPair(jule::Str("trait", 5),static_cast<jule::U64>(29LLU)),_1aa07e3ad_KindPair(jule::Str("impl", 4),static_cast<jule::U64>(30LLU)),_1aa07e3ad_KindPair(jule::Str("cpp", 3),static_cast<jule::U64>(31LLU)),_1aa07e3ad_KindPair(jule::Str("fall", 4),static_cast<jule::U64>(32LLU)),_1aa07e3ad_KindPair(jule::Str("fn", 2),static_cast<jule::U64>(33LLU)),_1aa07e3ad_KindPair(jule::Str("let", 3),static_cast<jule::U64>(34LLU)),_1aa07e3ad_KindPair(jule::Str("unsafe", 6),static_cast<jule::U64>(35LLU)),_1aa07e3ad_KindPair(jule::Str("mut", 3),static_cast<jule::U64>(36LLU)),_1aa07e3ad_KindPair(jule::Str("defer", 5),static_cast<jule::U64>(37LLU)),_1aa07e3ad_KindPair(jule::Str("static", 6),static_cast<jule::U64>(38LLU)),_1aa07e3ad_KindPair(jule::Str("error", 5),static_cast<jule::U64>(40LLU))});
	_1aa07eb1c_BASIC_OPS = jule::Array<_1aa07e3ad_KindPair,39>({_1aa07e3ad_KindPair(jule::Str("::", 2),static_cast<jule::U64>(23LLU)),_1aa07e3ad_KindPair(jule::Str(":", 1),static_cast<jule::U64>(11LLU)),_1aa07e3ad_KindPair(jule::Str(";", 1),static_cast<jule::U64>(5LLU)),_1aa07e3ad_KindPair(jule::Str(",", 1),static_cast<jule::U64>(8LLU)),_1aa07e3ad_KindPair(jule::Str("...", 3),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str(".", 1),static_cast<jule::U64>(20LLU)),_1aa07e3ad_KindPair(jule::Str("+=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("-=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("*=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("/=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("%=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("<<=", 3),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str(">>=", 3),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("^=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("&=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("|=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("==", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("!=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str(">=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("<=", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("&&", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("||", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("<<", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str(">>", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("++", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("--", 2),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("+", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("-", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("*", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("/", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("%", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("&", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("|", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("^", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("!", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("<", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str(">", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("=", 1),static_cast<jule::U64>(7LLU)),_1aa07e3ad_KindPair(jule::Str("#", 1),static_cast<jule::U64>(39LLU))});
	_1ac372b22_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
	_1ac372eb8_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
	_1ab087272_F32_INFO = _1ac3a1bb7_FloatInfo(23LLU,8LLU,-127LL);
	_1ab0ac495_F64_INFO = _1ac3a1bb7_FloatInfo(52LLU,11LLU,-1023LL);
	_1ac435652_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
	_1ac43709e_POWTAB = jule::Slice<jule::I64>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
	_1ac437b3d_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
	_1ac437d6e_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
	_1ac43b67a_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
	_1ac440e54_LEFTCHEATS = jule::Slice<_1ac440926_LeftCheat>({_1ac440926_LeftCheat(0LL,jule::Str()),_1ac440926_LeftCheat(1LL,jule::Str("5", 1)),_1ac440926_LeftCheat(1LL,jule::Str("25", 2)),_1ac440926_LeftCheat(1LL,jule::Str("125", 3)),_1ac440926_LeftCheat(2LL,jule::Str("625", 3)),_1ac440926_LeftCheat(2LL,jule::Str("3125", 4)),_1ac440926_LeftCheat(2LL,jule::Str("15625", 5)),_1ac440926_LeftCheat(3LL,jule::Str("78125", 5)),_1ac440926_LeftCheat(3LL,jule::Str("390625", 6)),_1ac440926_LeftCheat(3LL,jule::Str("1953125", 7)),_1ac440926_LeftCheat(4LL,jule::Str("9765625", 7)),_1ac440926_LeftCheat(4LL,jule::Str("48828125", 8)),_1ac440926_LeftCheat(4LL,jule::Str("244140625", 9)),_1ac440926_LeftCheat(4LL,jule::Str("1220703125", 10)),_1ac440926_LeftCheat(5LL,jule::Str("6103515625", 10)),_1ac440926_LeftCheat(5LL,jule::Str("30517578125", 11)),_1ac440926_LeftCheat(5LL,jule::Str("152587890625", 12)),_1ac440926_LeftCheat(6LL,jule::Str("762939453125", 12)),_1ac440926_LeftCheat(6LL,jule::Str("3814697265625", 13)),_1ac440926_LeftCheat(6LL,jule::Str("19073486328125", 14)),_1ac440926_LeftCheat(7LL,jule::Str("95367431640625", 14)),_1ac440926_LeftCheat(7LL,jule::Str("476837158203125", 15)),_1ac440926_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_1ac440926_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_1ac440926_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_1ac440926_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_1ac440926_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_1ac440926_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_1ac440926_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_1ac440926_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_1ac440926_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_1ac440926_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_1ac440926_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_1ac440926_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_1ac440926_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_1ac440926_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_1ac440926_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_1ac440926_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_1ac440926_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_1ac440926_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_1ac440926_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_1ac440926_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_1ac440926_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_1ac440926_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_1ac440926_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_1ac440926_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_1ac440926_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_1ac440926_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_1ac440926_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_1ac440926_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_1ac440926_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_1ac440926_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_1ac440926_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_1ac440926_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_1ac440926_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_1ac440926_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_1ac440926_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_1ac440926_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_1ac440926_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_1ac440926_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_1ac440926_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
	_1ac5523c8_BIT_SIZE = 0LL;
	_1ac5524e9_SYS_INT = jule::Str();
	_1ac55261a_SYS_UINT = jule::Str();
	_1a59a5c51_deads = nullptr;
	_1a59a6328_checking = nullptr;
	_1a59a647c_current = jule::Any(nullptr);
	_1a59a669c_main_current = jule::Any(nullptr);
	_1a6395bc3_MDAYS = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
	_1c47b9d65_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
	_1a5a5bca2_OUT_DIR = jule::Str("dist", 4);
	_1a5a5cbd7_OUT_NAME = jule::Str("ir.cpp", 6);
	_1a5a5e821_OUT = jule::Str();

	_1c4824b5b_init();
	_1ac5551cd_init();
	_1a5a94119_init();
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}